[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Introduction",
    "section": "",
    "text": "Background\nR is an open source and free software environment for statistical computing and graphics. It can be readily downloaded from http://cran.ma.imperial.ac.uk/ or other mirror sites. A position paper on its ability to meet FDA and EME regulatory requirements for Clinical Trials is provided in the R-FDA.pdf appendix and the R-SDLC.pdf gives an overview of the development cycle. Internal tools are provided to check that an installation is successful. These function by running pre-written scripts to a) check that they run without errors b) the output that is produced matches up to pre-saved output files supplied with the download.\nhttps://cran.ma.imperial.ac.uk/doc/manuals/r-release/R-admin.html#Testing-a-Unix_002dalike-Installation\n\n\nR System\nLocal CRSid:\n\nR.version\n\n               _                           \nplatform       x86_64-pc-linux-gnu         \narch           x86_64                      \nos             linux-gnu                   \nsystem         x86_64, linux-gnu           \nstatus                                     \nmajor          4                           \nminor          4.0                         \nyear           2024                        \nmonth          04                          \nday            24                          \nsvn rev        86474                       \nlanguage       R                           \nversion.string R version 4.4.0 (2024-04-24)\nnickname       Puppy Cup                   \n\nSys.info()\n\n                                                      sysname \n                                                      \"Linux\" \n                                                      release \n                                           \"6.8.0-48-generic\" \n                                                      version \n\"#48-Ubuntu SMP PREEMPT_DYNAMIC Fri Sep 27 14:04:52 UTC 2024\" \n                                                     nodename \n                                               \"99adafdbb12a\" \n                                                      machine \n                                                     \"x86_64\" \n                                                        login \n                                                    \"unknown\" \n                                                         user \n                                                    \"rstudio\" \n                                               effective_user \n                                                    \"rstudio\" \n\n\n\n\nTests\nWe now provide links to code and output that comes from running\n\nBase tests with the functions tools::testInstalledBasic and tools::testInstalledPackages for the software that ships directly without any add-ons\nThe recommended packages, that are included as default add-ons using tools::testInstalledPackages\nOur bespoke in-house choice of further add-on packages with tools::testInstalledPackage (note the extra “s” or not in the function name)\n\n\n\nPost processing summary\nThis data table shows what should have been tested, and what has actually succeeded (0 is Success, 1 is Fail), along with date stamps\n\nload(\"log.Rdata\")\ndplyr::arrange(log, -result)"
  },
  {
    "objectID": "test_bespoke.html",
    "href": "test_bespoke.html",
    "title": "Test Bespoke Packages",
    "section": "",
    "text": "Details\nFor all the non-default add-on packages we want to run the tests and example files, but not vignettes. The vignettes are meant as long-form help documentation, and can require further add-on packages that we do not want to install, hence they are not included.\nThe packages that come from CRAN (or rather the Posit Archive to fix the date of the packages), the Rocker image has not included the test files. This is to save storage space for files that are not going to be used regularly. So we have to download a copy of the source package, again from the Posit archive, with the relevant test files. This is within the ..\\packages\\ directory. We have to write a slightly modified form of the tools::testInstalledPackage() to tell the code where to find the test directory, in this non-standard location.\nIn contrast, for the cctu package this is built in-house, and is included within the Rocker image by pulling from github, including the test files and comparison outputs. It required separate lines of code in a shell script to add this package, which was easy to modify so as to include test files.\n\n\nLinks to Individual Package Tests\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nTitle\n\n\nDate\n\n\n\n\n\n\nAsioHeaders\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nBH\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nBiocManager\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nCompQuadForm\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nDBI\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nDiagrammeR\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nFormula\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nHSAUR3\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nHmisc\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nLahman\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nMEMSS\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nMatrixModels\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nPKI\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nQuickJSR\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nR6\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nRColorBrewer\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nRMariaDB\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nRPostgres\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nRSQLite\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nRcpp\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nRcppArmadillo\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nRcppEigen\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nRcppParallel\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nSparseM\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nStanHeaders\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nTH.data\n\n\n21-Nov-2024 16:55:53\n\n\n\n\nabind\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nalluvial\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nape\n\n\n21-Nov-2024 16:55:51\n\n\n\n\narrow\n\n\n21-Nov-2024 16:55:51\n\n\n\n\naskpass\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nassertthat\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nbabynames\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nbackports\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nbase64enc\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nbdsmatrix\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nbit\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nbit64\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nblob\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nblogdown\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nbookdown\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nbrew\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nbrio\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nbroom\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nbroom.mixed\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nbslib\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ncachem\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ncallr\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ncar\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ncarData\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ncctu\n\n\n22-Nov-2024 10:56:00\n\n\n\n\ncellranger\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ncheckmate\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nchromote\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ncli\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nclipr\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ncoda\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ncolorspace\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ncommonmark\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nconflicted\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nconsort\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ncovr\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ncoxme\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ncpp11\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ncrayon\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ncredentials\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ncurl\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ndata.table\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ndbplyr\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ndeldir\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ndesc\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ndevtools\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ndfoptim\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ndiffobj\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ndigest\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ndistill\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ndistributional\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ndocopt\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ndownlit\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ndplyr\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ndtplyr\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nduckdb\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nellipsis\n\n\n21-Nov-2024 16:55:51\n\n\n\n\neudract\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nevaluate\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nfansi\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nfarver\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nfastmap\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nfontawesome\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nforcats\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nforeach\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nformattable\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nfs\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nfst\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nfstcore\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nfurrr\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nfuture\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nfuture.apply\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ngamm4\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ngargle\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ngee\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ngenerics\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ngert\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nggalluvial\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nggfittext\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nggplot2\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nggrepel\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ngh\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ngitcreds\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nglmnet\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nglobals\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nglue\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ngoogledrive\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ngooglesheets4\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ngridExtra\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ngridGraphics\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ngridtext\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ngsl\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ngtable\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nhaven\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nhighr\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nhms\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nhtmlTable\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nhtmltools\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nhtmlwidgets\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nhttpuv\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nhttr\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nhttr2\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nhunspell\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nids\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nigraph\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nini\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ninline\n\n\n21-Nov-2024 16:55:51\n\n\n\n\ninterp\n\n\n21-Nov-2024 16:55:51\n\n\n\n\nisoband\n\n\n21-Nov-2024 16:55:52\n\n\n\n\niterators\n\n\n21-Nov-2024 16:55:52\n\n\n\n\njomo\n\n\n21-Nov-2024 16:55:52\n\n\n\n\njpeg\n\n\n21-Nov-2024 16:55:52\n\n\n\n\njquerylib\n\n\n21-Nov-2024 16:55:52\n\n\n\n\njsonlite\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nkableExtra\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nkinship2\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nknitr\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nlabeling\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nlater\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nlatticeExtra\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nlavaan\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nlazyeval\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nlifecycle\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nlistenv\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nlittler\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nlme4\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nloo\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nlubridate\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nmagick\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nmagrittr\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nmarkdown\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nmatrixStats\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nmemoise\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nmerDeriv\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nmice\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nmiceadds\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nmime\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nminiUI\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nminqa\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nmitml\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nmitools\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nmlmRev\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nmnormt\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nmodelr\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nmultcomp\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nmunsell\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nmvtnorm\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nnloptr\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nnonnest2\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nnumDeriv\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nnycflights13\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nopenssl\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nopenxlsx\n\n\n21-Nov-2024 16:55:52\n\n\n\n\noptimx\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nordinal\n\n\n21-Nov-2024 16:55:52\n\n\n\n\npackrat\n\n\n21-Nov-2024 16:55:52\n\n\n\n\npan\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nparallelly\n\n\n21-Nov-2024 16:55:52\n\n\n\n\npatchwork\n\n\n21-Nov-2024 16:55:52\n\n\n\n\npbivnorm\n\n\n21-Nov-2024 16:55:52\n\n\n\n\npbkrtest\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nphylolm\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nphyr\n\n\n21-Nov-2024 16:55:52\n\n\n\n\npillar\n\n\n21-Nov-2024 16:55:52\n\n\n\n\npkgbuild\n\n\n21-Nov-2024 16:55:52\n\n\n\n\npkgconfig\n\n\n21-Nov-2024 16:55:52\n\n\n\n\npkgdown\n\n\n21-Nov-2024 16:55:52\n\n\n\n\npkgload\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nplogr\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nplyr\n\n\n21-Nov-2024 16:55:52\n\n\n\n\npng\n\n\n21-Nov-2024 16:55:52\n\n\n\n\npolspline\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nposterior\n\n\n21-Nov-2024 16:55:52\n\n\n\n\npracma\n\n\n21-Nov-2024 16:55:52\n\n\n\n\npraise\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nprettyunits\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nprocessx\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nprofvis\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nprogress\n\n\n21-Nov-2024 16:55:52\n\n\n\n\npromises\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nps\n\n\n21-Nov-2024 16:55:52\n\n\n\n\npurrr\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nqrng\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nquadprog\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nquantreg\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nr2d3\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nrJava\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nragg\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nrandomForest\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nranger\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nrappdirs\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nrcmdcheck\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nreadr\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nreadxl\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nredland\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nrematch\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nrematch2\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nremotes\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nrenv\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nreprex\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nreshape2\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nrex\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nrlang\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nrmarkdown\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nrms\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nroxygen2\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nrprojroot\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nrr2\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nrsconnect\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nrstan\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nrstudioapi\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nrticles\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nrversions\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nrvest\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nsandwich\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nsass\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nscales\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nselectr\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nsemEff\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nservr\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nsessioninfo\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nshades\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nshape\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nshiny\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nsourcetools\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nsp\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nsparkline\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nspelling\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nstatmod\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nstringi\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nstringr\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nsvglite\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nsys\n\n\n21-Nov-2024 16:55:52\n\n\n\n\nsystemfonts\n\n\n21-Nov-2024 16:55:52\n\n\n\n\ntensorA\n\n\n21-Nov-2024 16:55:52\n\n\n\n\ntestit\n\n\n21-Nov-2024 16:55:52\n\n\n\n\ntestthat\n\n\n21-Nov-2024 16:55:52\n\n\n\n\ntextshaping\n\n\n21-Nov-2024 16:55:53\n\n\n\n\ntibble\n\n\n21-Nov-2024 16:55:53\n\n\n\n\ntidyr\n\n\n21-Nov-2024 16:55:53\n\n\n\n\ntidyselect\n\n\n21-Nov-2024 16:55:53\n\n\n\n\ntidyverse\n\n\n21-Nov-2024 16:55:53\n\n\n\n\ntimechange\n\n\n21-Nov-2024 16:55:53\n\n\n\n\ntinytex\n\n\n21-Nov-2024 16:55:53\n\n\n\n\ntufte\n\n\n21-Nov-2024 16:55:53\n\n\n\n\ntzdb\n\n\n21-Nov-2024 16:55:53\n\n\n\n\nucminf\n\n\n21-Nov-2024 16:55:53\n\n\n\n\nurlchecker\n\n\n21-Nov-2024 16:55:53\n\n\n\n\nusethis\n\n\n21-Nov-2024 16:55:53\n\n\n\n\nutf8\n\n\n21-Nov-2024 16:55:53\n\n\n\n\nuuid\n\n\n21-Nov-2024 16:55:53\n\n\n\n\nvctrs\n\n\n21-Nov-2024 16:55:53\n\n\n\n\nvdiffr\n\n\n21-Nov-2024 16:55:53\n\n\n\n\nviridis\n\n\n21-Nov-2024 16:55:53\n\n\n\n\nviridisLite\n\n\n21-Nov-2024 16:55:53\n\n\n\n\nvisNetwork\n\n\n21-Nov-2024 16:55:53\n\n\n\n\nvroom\n\n\n21-Nov-2024 16:55:53\n\n\n\n\nwaldo\n\n\n21-Nov-2024 16:55:53\n\n\n\n\nwebshot\n\n\n21-Nov-2024 16:55:53\n\n\n\n\nwebshot2\n\n\n21-Nov-2024 16:55:53\n\n\n\n\nwebsocket\n\n\n21-Nov-2024 16:55:53\n\n\n\n\nwhisker\n\n\n21-Nov-2024 16:55:53\n\n\n\n\nwhoami\n\n\n21-Nov-2024 16:55:53\n\n\n\n\nwithr\n\n\n21-Nov-2024 16:55:53\n\n\n\n\nwritexl\n\n\n21-Nov-2024 16:55:53\n\n\n\n\nxaringan\n\n\n21-Nov-2024 16:55:53\n\n\n\n\nxfun\n\n\n21-Nov-2024 16:55:53\n\n\n\n\nxml2\n\n\n21-Nov-2024 16:55:53\n\n\n\n\nxopen\n\n\n21-Nov-2024 16:55:53\n\n\n\n\nxslt\n\n\n21-Nov-2024 16:55:53\n\n\n\n\nxtable\n\n\n21-Nov-2024 16:55:53\n\n\n\n\nyaml\n\n\n21-Nov-2024 16:55:53\n\n\n\n\nzip\n\n\n21-Nov-2024 16:55:53\n\n\n\n\nzoo\n\n\n22-Nov-2024 09:36:19\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_zoo.html",
    "href": "packages/test_zoo.html",
    "title": "zoo",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"zoo\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/zoo\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/zoo/empty_output.Rout\")\nout &lt;- test_pkg(\"zoo\", outDir=\"packages/zoo\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'zoo'\n\n\n  comparing 'zoo-Ex.Rout' to 'zoo-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'zoo'\n  Running 'as.Date.R'\nError: running the tests in 'as.Date.R' failed\n\nedit_log(\"zoo\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nzoo-Ex.Rout\n\n\n\n\nas.Date.Rout.fail\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_yaml.html",
    "href": "packages/test_yaml.html",
    "title": "yaml",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"yaml\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/yaml\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/yaml/empty_output.Rout\")\nout &lt;- test_pkg(\"yaml\", outDir=\"packages/yaml\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'yaml'\n\n\n  comparing 'yaml-Ex.Rout' to 'yaml-Ex.Rout.prev' ... NOTE\n\n\n  40c40\n  &lt; [1] \"'2024-11-22'\\n\"\n  ---\n  &gt; [1] \"'2024-11-21'\\n\"\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'yaml'\n  Running 'RUnit.R'\nError: running the tests in 'RUnit.R' failed\n\nedit_log(\"yaml\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nyaml-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_xslt.html",
    "href": "packages/test_xslt.html",
    "title": "xslt",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"xslt\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/xslt\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/xslt/empty_output.Rout\")\nout &lt;- test_pkg(\"xslt\", outDir=\"packages/xslt\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'xslt'\n\n\n  comparing 'xslt-Ex.Rout' to 'xslt-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'xslt'\n  Running 'testthat.R'\n\nedit_log(\"xslt\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nxslt-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_xml2.html",
    "href": "packages/test_xml2.html",
    "title": "xml2",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"xml2\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/xml2\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/xml2/empty_output.Rout\")\nout &lt;- test_pkg(\"xml2\", outDir=\"packages/xml2\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'xml2'\n\n\n  comparing 'xml2-Ex.Rout' to 'xml2-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'xml2'\n  Running 'testthat.R'\n\nedit_log(\"xml2\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nxml2-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_xaringan.html",
    "href": "packages/test_xaringan.html",
    "title": "xaringan",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"xaringan\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/xaringan\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/xaringan/empty_output.Rout\")\nout &lt;- test_pkg(\"xaringan\", outDir=\"packages/xaringan\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'xaringan'\n\n\n  comparing 'xaringan-Ex.Rout' to 'xaringan-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'xaringan'\n  Running 'test-all.R'\n\nedit_log(\"xaringan\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nxaringan-Ex.Rout\n\n\n\n\ntest-all.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_withr.html",
    "href": "packages/test_withr.html",
    "title": "withr",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"withr\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/withr\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/withr/empty_output.Rout\")\nout &lt;- test_pkg(\"withr\", outDir=\"packages/withr\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'withr'\n\n\n  comparing 'withr-Ex.Rout' to 'withr-Ex.Rout.prev' ... NOTE\n\n\n  221c221\n  &lt; [1] \"/tmp/Rtmp1WHzSi\"\n  ---\n  &gt; [1] \"/tmp/RtmpvGJclH\"\n  311c311\n  &lt; [1] \"/tmp/Rtmp1WHzSi/file371923b4e425\" \"/usr/local/lib/R/site-library\"   \n  ---\n  &gt; [1] \"/tmp/RtmpvGJclH/file411fc5631d814\" \"/usr/local/lib/R/site-library\"    \n  653c653\n  &lt; [1] \"/tmp/Rtmp1WHzSi/file37198650db1\"\n  ---\n  &gt; [1] \"/tmp/RtmpvGJclH/file411fc7e07d04\"\n  675c675\n  &lt; [1] \"2024-11-22 09:05:00 GMT\"\n  ---\n  &gt; [1] \"2024-11-21 16:16:51 GMT\"\n  677c677\n  &lt; [1] \"2024-11-22 10:05:00 CET\"\n  ---\n  &gt; [1] \"2024-11-21 17:16:51 CET\"\n  679c679\n  &lt; [1] \"2024-11-22 01:05:00 PST\"\n  ---\n  &gt; [1] \"2024-11-21 08:16:51 PST\"\n  691c691\n  &lt; [1] \"2024-11-22 09:05:00 GMT\"\n  ---\n  &gt; [1] \"2024-11-21 16:16:51 GMT\"\n  693c693\n  &lt; [1] \"2024-11-22 10:05:00 CET\"\n  ---\n  &gt; [1] \"2024-11-21 17:16:51 CET\"\n  695c695\n  &lt; [1] \"2024-11-22 01:05:00 PST\"\n  ---\n  &gt; [1] \"2024-11-21 08:16:51 PST\"\n  697c697\n  &lt; [1] \"2024-11-22 09:05:00 GMT\"\n  ---\n  &gt; [1] \"2024-11-21 16:16:51 GMT\"\n  716c716\n  &lt; [1] \"/tmp/Rtmp1WHzSi\"\n  ---\n  &gt; [1] \"/tmp/RtmpvGJclH\"\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'withr'\n  Running 'testthat.R'\n\nedit_log(\"withr\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nwithr-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_whisker.html",
    "href": "packages/test_whisker.html",
    "title": "whisker",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"whisker\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/whisker\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/whisker/empty_output.Rout\")\nout &lt;- test_pkg(\"whisker\", outDir=\"packages/whisker\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'whisker'\n\n\n  comparing 'whisker-Ex.Rout' to 'whisker-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"whisker\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nwhisker-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_webshot2.html",
    "href": "packages/test_webshot2.html",
    "title": "webshot2",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"webshot2\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/webshot2\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/webshot2/empty_output.Rout\")\nout &lt;- test_pkg(\"webshot2\", outDir=\"packages/webshot2\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'webshot2'\n\n\n  comparing 'webshot2-Ex.Rout' to 'webshot2-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"webshot2\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nwebshot2-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_waldo.html",
    "href": "packages/test_waldo.html",
    "title": "waldo",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"waldo\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/waldo\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/waldo/empty_output.Rout\")\nout &lt;- test_pkg(\"waldo\", outDir=\"packages/waldo\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'waldo'\n\n\n  comparing 'waldo-Ex.Rout' to 'waldo-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'waldo'\n  Running 'testthat.R'\n\nedit_log(\"waldo\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nwaldo-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_visNetwork.html",
    "href": "packages/test_visNetwork.html",
    "title": "visNetwork",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"visNetwork\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/visNetwork\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/visNetwork/empty_output.Rout\")\nout &lt;- test_pkg(\"visNetwork\", outDir=\"packages/visNetwork\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'visNetwork'\n\n\n  comparing 'visNetwork-Ex.Rout' to 'visNetwork-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"visNetwork\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nvisNetwork-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_viridis.html",
    "href": "packages/test_viridis.html",
    "title": "viridis",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"viridis\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/viridis\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/viridis/empty_output.Rout\")\nout &lt;- test_pkg(\"viridis\", outDir=\"packages/viridis\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'viridis'\n\n\n  comparing 'viridis-Ex.Rout' to 'viridis-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'viridis'\n  Running 'testthat.R'\n\nedit_log(\"viridis\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nviridis-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_vctrs.html",
    "href": "packages/test_vctrs.html",
    "title": "vctrs",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"vctrs\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/vctrs\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/vctrs/empty_output.Rout\")\nout &lt;- test_pkg(\"vctrs\", outDir=\"packages/vctrs\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'vctrs'\n\n\n  comparing 'vctrs-Ex.Rout' to 'vctrs-Ex.Rout.prev' ... NOTE\n\n\n  591c591\n  &lt; [1] NA           \"2024-11-22\"\n  ---\n  &gt; [1] NA           \"2024-11-21\"\n  593c593\n  &lt; [1] NA                        \"2024-11-22 08:56:13 GMT\"\n  ---\n  &gt; [1] NA                        \"2024-11-21 16:09:54 GMT\"\n  1128c1128\n  &lt; [1] \"2024-11-22\" \"2024-11-22\"\n  ---\n  &gt; [1] \"2024-11-21\" \"2024-11-21\"\n  1130c1130\n  &lt; [1] \"2024-11-22 08:56:14 GMT\" \"2024-11-22 00:00:00 GMT\"\n  ---\n  &gt; [1] \"2024-11-21 16:09:55 GMT\" \"2024-11-21 00:00:00 GMT\"\n  1133c1133\n  &lt; [1] \"2024-11-22 00:00:00 GMT\" \"2024-11-22 08:56:14 GMT\"\n  ---\n  &gt; [1] \"2024-11-21 00:00:00 GMT\" \"2024-11-21 16:09:55 GMT\"\n  1135c1135\n  &lt; [1] \"2024-11-22 08:56:14 GMT\" \"2024-11-22 00:00:00 GMT\"\n  ---\n  &gt; [1] \"2024-11-21 16:09:55 GMT\" \"2024-11-21 00:00:00 GMT\"\n  1510,1513c1510,1513\n  &lt; 1    a     1\n  &lt; 2    i     9\n  &lt; 3    f    15\n  &lt; 4    j     2\n  ---\n  &gt; 1    c     7\n  &gt; 2    a     1\n  &gt; 3    j     2\n  &gt; 4    g    15\n  1515,1521c1515,1521\n  &lt; 6    d    12\n  &lt; 7    m     1\n  &lt; 8    c     7\n  &lt; 9    e    20\n  &lt; 10   g    15\n  &lt; 11   k     1\n  &lt; 12   h    14\n  ---\n  &gt; 6    e    20\n  &gt; 7    d    12\n  &gt; 8    i     9\n  &gt; 9    m     1\n  &gt; 10   h    14\n  &gt; 11   f    15\n  &gt; 12   k     1\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'vctrs'\n  Running 'testthat.R'\n\nedit_log(\"vctrs\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nvctrs-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_utf8.html",
    "href": "packages/test_utf8.html",
    "title": "utf8",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"utf8\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/utf8\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/utf8/empty_output.Rout\")\nout &lt;- test_pkg(\"utf8\", outDir=\"packages/utf8\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'utf8'\n\n\n  comparing 'utf8-Ex.Rout' to 'utf8-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'utf8'\n  Running 'testthat.R'\n\nedit_log(\"utf8\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nutf8-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_urlchecker.html",
    "href": "packages/test_urlchecker.html",
    "title": "urlchecker",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"urlchecker\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/urlchecker\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/urlchecker/empty_output.Rout\")\nout &lt;- test_pkg(\"urlchecker\", outDir=\"packages/urlchecker\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'urlchecker'\n\n\n  comparing 'urlchecker-Ex.Rout' to 'urlchecker-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"urlchecker\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nurlchecker-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_tzdb.html",
    "href": "packages/test_tzdb.html",
    "title": "tzdb",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"tzdb\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/tzdb\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/tzdb/empty_output.Rout\")\nout &lt;- test_pkg(\"tzdb\", outDir=\"packages/tzdb\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'tzdb'\n\n\n  comparing 'tzdb-Ex.Rout' to 'tzdb-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'tzdb'\n  Running 'testthat.R'\n\nedit_log(\"tzdb\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ntzdb-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_tinytex.html",
    "href": "packages/test_tinytex.html",
    "title": "tinytex",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"tinytex\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/tinytex\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/tinytex/empty_output.Rout\")\nout &lt;- test_pkg(\"tinytex\", outDir=\"packages/tinytex\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'tinytex'\n\n\n  comparing 'tinytex-Ex.Rout' to 'tinytex-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'tinytex'\n  Running 'test-cran.R'\n  Running 'test-travis.R'\n\nedit_log(\"tinytex\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ntinytex-Ex.Rout\n\n\n\n\ntest-cran.Rout\n\n\n\n\ntest-travis.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_tidyverse.html",
    "href": "packages/test_tidyverse.html",
    "title": "tidyverse",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"tidyverse\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/tidyverse\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/tidyverse/empty_output.Rout\")\nout &lt;- test_pkg(\"tidyverse\", outDir=\"packages/tidyverse\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'tidyverse'\n\n\n  comparing 'tidyverse-Ex.Rout' to 'tidyverse-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'tidyverse'\n  Running 'testthat.R'\nError: running the tests in 'testthat.R' failed\n\nedit_log(\"tidyverse\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ntidyverse-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_tidyr.html",
    "href": "packages/test_tidyr.html",
    "title": "tidyr",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"tidyr\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/tidyr\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/tidyr/empty_output.Rout\")\nout &lt;- test_pkg(\"tidyr\", outDir=\"packages/tidyr\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'tidyr'\n\n\n  comparing 'tidyr-Ex.Rout' to 'tidyr-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'tidyr'\n  Running 'testthat.R'\n\nedit_log(\"tidyr\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ntidyr-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_textshaping.html",
    "href": "packages/test_textshaping.html",
    "title": "textshaping",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"textshaping\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/textshaping\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/textshaping/empty_output.Rout\")\nout &lt;- test_pkg(\"textshaping\", outDir=\"packages/textshaping\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'textshaping'\n\n\n  comparing 'textshaping-Ex.Rout' to 'textshaping-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"textshaping\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ntextshaping-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_testit.html",
    "href": "packages/test_testit.html",
    "title": "testit",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"testit\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/testit\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/testit/empty_output.Rout\")\nout &lt;- test_pkg(\"testit\", outDir=\"packages/testit\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'testit'\n\n\n  comparing 'testit-Ex.Rout' to 'testit-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'testit'\n  Running 'test-all.R'\n\nedit_log(\"testit\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestit-Ex.Rout\n\n\n\n\ntest-all.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_systemfonts.html",
    "href": "packages/test_systemfonts.html",
    "title": "systemfonts",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"systemfonts\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/systemfonts\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/systemfonts/empty_output.Rout\")\nout &lt;- test_pkg(\"systemfonts\", outDir=\"packages/systemfonts\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'systemfonts'\n\n\n  comparing 'systemfonts-Ex.Rout' to 'systemfonts-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'systemfonts'\n  Running 'testthat.R'\n\nedit_log(\"systemfonts\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nsystemfonts-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_svglite.html",
    "href": "packages/test_svglite.html",
    "title": "svglite",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"svglite\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/svglite\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/svglite/empty_output.Rout\")\nout &lt;- test_pkg(\"svglite\", outDir=\"packages/svglite\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'svglite'\n\n\n  comparing 'svglite-Ex.Rout' to 'svglite-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'svglite'\n  Running 'testthat.R'\nError: running the tests in 'testthat.R' failed\n\nedit_log(\"svglite\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nsvglite-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_stringi.html",
    "href": "packages/test_stringi.html",
    "title": "stringi",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"stringi\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/stringi\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/stringi/empty_output.Rout\")\nout &lt;- test_pkg(\"stringi\", outDir=\"packages/stringi\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'stringi'\n\n\n  comparing 'stringi-Ex.Rout' to 'stringi-Ex.Rout.prev' ... NOTE\n\n\n  246c246\n  &lt; [1] \"2025-01-21 19:45:39 GMT\"\n  ---\n  &gt; [1] \"2025-01-21 15:58:34 GMT\"\n  248c248\n  &lt; [1] \"2024-11-21 19:45:39 GMT\"\n  ---\n  &gt; [1] \"2024-11-21 15:58:34 GMT\"\n  300c300\n  &lt; 1 2024    11  21   19     45     39         628         47           4\n  ---\n  &gt; 1 2024    11  21   15     58     34         974         47           4\n  302c302\n  &lt; 1       326         5      7    2   2\n  ---\n  &gt; 1       326         5      3    2   2\n  305c305\n  &lt; 1 5785     2  20   19     45     39         635          8           4\n  ---\n  &gt; 1 5785     2  20   15     58     34         986          8           4\n  307c307\n  &lt; 1        50         5      7    2   1\n  ---\n  &gt; 1        50         5      3    2   1\n  338c338\n  &lt; [1] \"today, 7:45:39 PM\"\n  ---\n  &gt; [1] \"today, 3:58:35 PM\"\n  4919c4919\n  &lt; [1] \"UNIX time 1732218339.793935 is 2024-11-21 19:45:39.793935.\"\n  ---\n  &gt; [1] \"UNIX time 1732204715.193660 is 2024-11-21 15:58:35.19366.\"\n  4927c4927\n  &lt; [1] \"2024-11-21 19:45:39.795201 is 1732218339.795201 UNIX time.\"\n  ---\n  &gt; [1] \"2024-11-21 15:58:35.194683 is 1732204715.194683 UNIX time.\"\n\n\nchecks for tests\n\nedit_log(\"stringi\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nstringi-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_spelling.html",
    "href": "packages/test_spelling.html",
    "title": "spelling",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"spelling\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/spelling\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/spelling/empty_output.Rout\")\nout &lt;- test_pkg(\"spelling\", outDir=\"packages/spelling\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'spelling'\n\n\n  comparing 'spelling-Ex.Rout' to 'spelling-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'spelling'\n  Running 'spelling.R'\n\nedit_log(\"spelling\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nspelling-Ex.Rout\n\n\n\n\nspelling.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_sp.html",
    "href": "packages/test_sp.html",
    "title": "sp",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"sp\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/sp\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/sp/empty_output.Rout\")\nout &lt;- test_pkg(\"sp\", outDir=\"packages/sp\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'sp'\n\n\n  comparing 'sp-Ex.Rout' to 'sp-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'sp'\n  Running 'agg.R'\n  comparing 'agg.Rout' to 'agg.Rout.save' ... OK\n  Running 'base.R'\n  comparing 'base.Rout' to 'base.Rout.save' ... OK\n  Running 'fail1.R'\n  comparing 'fail1.Rout' to 'fail1.Rout.save' ...  Running 'grid.R'\n  comparing 'grid.Rout' to 'grid.Rout.save' ... OK\n  Running 'over2.R'\n  comparing 'over2.Rout' to 'over2.Rout.save' ... OK\n  Running 'pass1.R'\n  comparing 'pass1.Rout' to 'pass1.Rout.save' ...  Running 'point.in.polygon.R'\n  comparing 'point.in.polygon.Rout' to 'point.in.polygon.Rout.save' ... OK\n  Running 'sel.R'\n  comparing 'sel.Rout' to 'sel.Rout.save' ... OK\n  Running 'sp1.R'\n  comparing 'sp1.Rout' to 'sp1.Rout.save' ... OK\n  Running 'spDists.R'\n  comparing 'spDists.Rout' to 'spDists.Rout.save' ... OK\n  Running 'spplot.R'\n  comparing 'spplot.Rout' to 'spplot.Rout.save' ... OK\n  Running 'zerodist.R'\n  comparing 'zerodist.Rout' to 'zerodist.Rout.save' ... OK\n\nedit_log(\"sp\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nsp-Ex.Rout\n\n\n\n\nagg.Rout\n\n\n\n\nbase.Rout\n\n\n\n\nfail1.Rout\n\n\n\n\ngrid.Rout\n\n\n\n\nover2.Rout\n\n\n\n\npass1.Rout\n\n\n\n\npoint.in.polygon.Rout\n\n\n\n\nsel.Rout\n\n\n\n\nsp1.Rout\n\n\n\n\nspDists.Rout\n\n\n\n\nspplot.Rout\n\n\n\n\nzerodist.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_shiny.html",
    "href": "packages/test_shiny.html",
    "title": "shiny",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"shiny\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/shiny\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/shiny/empty_output.Rout\")\nout &lt;- test_pkg(\"shiny\", outDir=\"packages/shiny\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'shiny'\n\n\n  comparing 'shiny-Ex.Rout' to 'shiny-Ex.Rout.prev' ... NOTE\n\n\n  1632c1632\n  &lt;       &lt;ul class=\"nav navbar-nav nav-underline\" data-tabsetid=\"1233\"&gt;\n  ---\n  &gt;       &lt;ul class=\"nav navbar-nav nav-underline\" data-tabsetid=\"5608\"&gt;\n  1634c1634\n  &lt;           &lt;a href=\"#tab-1233-1\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Plot\"&gt;\n  ---\n  &gt;           &lt;a href=\"#tab-5608-1\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Plot\"&gt;\n  1640c1640\n  &lt;           &lt;a href=\"#tab-1233-2\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Summary\"&gt;\n  ---\n  &gt;           &lt;a href=\"#tab-5608-2\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Summary\"&gt;\n  1646c1646\n  &lt;           &lt;a href=\"#tab-1233-3\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Table\"&gt;\n  ---\n  &gt;           &lt;a href=\"#tab-5608-3\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Table\"&gt;\n  1655,1658c1655,1658\n  &lt;     &lt;div class=\"tab-content\" data-tabsetid=\"1233\"&gt;\n  &lt;       &lt;div class=\"tab-pane active\" data-icon-class=\"far fa-bar-chart-o fa-fw\" data-value=\"Plot\" id=\"tab-1233-1\"&gt;&lt;/div&gt;\n  &lt;       &lt;div class=\"tab-pane\" data-value=\"Summary\" data-icon-class=\"far fa-rectangle-list fa-fw\" id=\"tab-1233-2\"&gt;&lt;/div&gt;\n  &lt;       &lt;div class=\"tab-pane\" data-value=\"Table\" data-icon-class=\"fas fa-table fa-fw\" id=\"tab-1233-3\"&gt;&lt;/div&gt;\n  ---\n  &gt;     &lt;div class=\"tab-content\" data-tabsetid=\"5608\"&gt;\n  &gt;       &lt;div class=\"tab-pane active\" data-icon-class=\"far fa-bar-chart-o fa-fw\" data-value=\"Plot\" id=\"tab-5608-1\"&gt;&lt;/div&gt;\n  &gt;       &lt;div class=\"tab-pane\" data-value=\"Summary\" data-icon-class=\"far fa-rectangle-list fa-fw\" id=\"tab-5608-2\"&gt;&lt;/div&gt;\n  &gt;       &lt;div class=\"tab-pane\" data-value=\"Table\" data-icon-class=\"fas fa-table fa-fw\" id=\"tab-5608-3\"&gt;&lt;/div&gt;\n  2197c2197\n  &lt;       &lt;ul class=\"nav navbar-nav nav-underline\" data-tabsetid=\"8794\"&gt;\n  ---\n  &gt;       &lt;ul class=\"nav navbar-nav nav-underline\" data-tabsetid=\"2698\"&gt;\n  2199c2199\n  &lt;           &lt;a href=\"#tab-8794-1\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Plot\"&gt;Plot&lt;/a&gt;\n  ---\n  &gt;           &lt;a href=\"#tab-2698-1\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Plot\"&gt;Plot&lt;/a&gt;\n  2202c2202\n  &lt;           &lt;a href=\"#tab-8794-2\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Summary\"&gt;Summary&lt;/a&gt;\n  ---\n  &gt;           &lt;a href=\"#tab-2698-2\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Summary\"&gt;Summary&lt;/a&gt;\n  2205c2205\n  &lt;           &lt;a href=\"#tab-8794-3\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Table\"&gt;Table&lt;/a&gt;\n  ---\n  &gt;           &lt;a href=\"#tab-2698-3\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Table\"&gt;Table&lt;/a&gt;\n  2211,2214c2211,2214\n  &lt;     &lt;div class=\"tab-content\" data-tabsetid=\"8794\"&gt;\n  &lt;       &lt;div class=\"tab-pane active\" data-value=\"Plot\" id=\"tab-8794-1\"&gt;&lt;/div&gt;\n  &lt;       &lt;div class=\"tab-pane\" data-value=\"Summary\" id=\"tab-8794-2\"&gt;&lt;/div&gt;\n  &lt;       &lt;div class=\"tab-pane\" data-value=\"Table\" id=\"tab-8794-3\"&gt;&lt;/div&gt;\n  ---\n  &gt;     &lt;div class=\"tab-content\" data-tabsetid=\"2698\"&gt;\n  &gt;       &lt;div class=\"tab-pane active\" data-value=\"Plot\" id=\"tab-2698-1\"&gt;&lt;/div&gt;\n  &gt;       &lt;div class=\"tab-pane\" data-value=\"Summary\" id=\"tab-2698-2\"&gt;&lt;/div&gt;\n  &gt;       &lt;div class=\"tab-pane\" data-value=\"Table\" id=\"tab-2698-3\"&gt;&lt;/div&gt;\n  2234c2234\n  &lt;       &lt;ul class=\"nav navbar-nav nav-underline\" data-tabsetid=\"5813\"&gt;\n  ---\n  &gt;       &lt;ul class=\"nav navbar-nav nav-underline\" data-tabsetid=\"7200\"&gt;\n  2236c2236\n  &lt;           &lt;a href=\"#tab-5813-1\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Plot\"&gt;Plot&lt;/a&gt;\n  ---\n  &gt;           &lt;a href=\"#tab-7200-1\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Plot\"&gt;Plot&lt;/a&gt;\n  2243c2243\n  &lt;           &lt;ul class=\"dropdown-menu\" data-tabsetid=\"8500\"&gt;\n  ---\n  &gt;           &lt;ul class=\"dropdown-menu\" data-tabsetid=\"3244\"&gt;\n  2245c2245\n  &lt;               &lt;a href=\"#tab-8500-1\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Summary\"&gt;Summary&lt;/a&gt;\n  ---\n  &gt;               &lt;a href=\"#tab-3244-1\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Summary\"&gt;Summary&lt;/a&gt;\n  2250c2250\n  &lt;               &lt;a href=\"#tab-8500-4\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Table\"&gt;Table&lt;/a&gt;\n  ---\n  &gt;               &lt;a href=\"#tab-3244-4\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Table\"&gt;Table&lt;/a&gt;\n  2258,2261c2258,2261\n  &lt;     &lt;div class=\"tab-content\" data-tabsetid=\"5813\"&gt;\n  &lt;       &lt;div class=\"tab-pane active\" data-value=\"Plot\" id=\"tab-5813-1\"&gt;&lt;/div&gt;\n  &lt;       &lt;div class=\"tab-pane\" data-value=\"Summary\" id=\"tab-8500-1\"&gt;&lt;/div&gt;\n  &lt;       &lt;div class=\"tab-pane\" data-value=\"Table\" id=\"tab-8500-4\"&gt;&lt;/div&gt;\n  ---\n  &gt;     &lt;div class=\"tab-content\" data-tabsetid=\"7200\"&gt;\n  &gt;       &lt;div class=\"tab-pane active\" data-value=\"Plot\" id=\"tab-7200-1\"&gt;&lt;/div&gt;\n  &gt;       &lt;div class=\"tab-pane\" data-value=\"Summary\" id=\"tab-3244-1\"&gt;&lt;/div&gt;\n  &gt;       &lt;div class=\"tab-pane\" data-value=\"Table\" id=\"tab-3244-4\"&gt;&lt;/div&gt;\n  2295c2295\n  &lt;       &lt;ul class=\"nav nav-pills nav-stacked\" data-tabsetid=\"7270\"&gt;\n  ---\n  &gt;       &lt;ul class=\"nav nav-pills nav-stacked\" data-tabsetid=\"6547\"&gt;\n  2298c2298\n  &lt;           &lt;a href=\"#tab-7270-2\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"First\"&gt;First&lt;/a&gt;\n  ---\n  &gt;           &lt;a href=\"#tab-6547-2\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"First\"&gt;First&lt;/a&gt;\n  2301c2301\n  &lt;           &lt;a href=\"#tab-7270-3\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Second\"&gt;Second&lt;/a&gt;\n  ---\n  &gt;           &lt;a href=\"#tab-6547-3\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Second\"&gt;Second&lt;/a&gt;\n  2304c2304\n  &lt;           &lt;a href=\"#tab-7270-4\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Third\"&gt;Third&lt;/a&gt;\n  ---\n  &gt;           &lt;a href=\"#tab-6547-4\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Third\"&gt;Third&lt;/a&gt;\n  2309,2312c2309,2312\n  &lt;       &lt;div class=\"tab-content\" data-tabsetid=\"7270\"&gt;\n  &lt;         &lt;div class=\"tab-pane active\" data-value=\"First\" id=\"tab-7270-2\"&gt;&lt;/div&gt;\n  &lt;         &lt;div class=\"tab-pane\" data-value=\"Second\" id=\"tab-7270-3\"&gt;&lt;/div&gt;\n  &lt;         &lt;div class=\"tab-pane\" data-value=\"Third\" id=\"tab-7270-4\"&gt;&lt;/div&gt;\n  ---\n  &gt;       &lt;div class=\"tab-content\" data-tabsetid=\"6547\"&gt;\n  &gt;         &lt;div class=\"tab-pane active\" data-value=\"First\" id=\"tab-6547-2\"&gt;&lt;/div&gt;\n  &gt;         &lt;div class=\"tab-pane\" data-value=\"Second\" id=\"tab-6547-3\"&gt;&lt;/div&gt;\n  &gt;         &lt;div class=\"tab-pane\" data-value=\"Third\" id=\"tab-6547-4\"&gt;&lt;/div&gt;\n  4735c4735\n  &lt;     &lt;ul class=\"nav nav-tabs\" data-tabsetid=\"4297\"&gt;\n  ---\n  &gt;     &lt;ul class=\"nav nav-tabs\" data-tabsetid=\"7785\"&gt;\n  4737c4737\n  &lt;         &lt;a href=\"#tab-4297-1\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Plot\"&gt;Plot&lt;/a&gt;\n  ---\n  &gt;         &lt;a href=\"#tab-7785-1\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Plot\"&gt;Plot&lt;/a&gt;\n  4740c4740\n  &lt;         &lt;a href=\"#tab-4297-2\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Summary\"&gt;Summary&lt;/a&gt;\n  ---\n  &gt;         &lt;a href=\"#tab-7785-2\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Summary\"&gt;Summary&lt;/a&gt;\n  4743c4743\n  &lt;         &lt;a href=\"#tab-4297-3\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Table\"&gt;Table&lt;/a&gt;\n  ---\n  &gt;         &lt;a href=\"#tab-7785-3\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Table\"&gt;Table&lt;/a&gt;\n  4746,4747c4746,4747\n  &lt;     &lt;div class=\"tab-content\" data-tabsetid=\"4297\"&gt;\n  &lt;       &lt;div class=\"tab-pane active\" data-value=\"Plot\" id=\"tab-4297-1\"&gt;\n  ---\n  &gt;     &lt;div class=\"tab-content\" data-tabsetid=\"7785\"&gt;\n  &gt;       &lt;div class=\"tab-pane active\" data-value=\"Plot\" id=\"tab-7785-1\"&gt;\n  4750c4750\n  &lt;       &lt;div class=\"tab-pane\" data-value=\"Summary\" id=\"tab-4297-2\"&gt;\n  ---\n  &gt;       &lt;div class=\"tab-pane\" data-value=\"Summary\" id=\"tab-7785-2\"&gt;\n  4753c4753\n  &lt;       &lt;div class=\"tab-pane\" data-value=\"Table\" id=\"tab-4297-3\"&gt;\n  ---\n  &gt;       &lt;div class=\"tab-pane\" data-value=\"Table\" id=\"tab-7785-3\"&gt;\n  4785c4785\n  &lt;     &lt;ul class=\"nav nav-tabs\" data-tabsetid=\"2225\"&gt;\n  ---\n  &gt;     &lt;ul class=\"nav nav-tabs\" data-tabsetid=\"2476\"&gt;\n  4787c4787\n  &lt;         &lt;a href=\"#tab-2225-1\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Plot\"&gt;Plot&lt;/a&gt;\n  ---\n  &gt;         &lt;a href=\"#tab-2476-1\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Plot\"&gt;Plot&lt;/a&gt;\n  4790c4790\n  &lt;         &lt;a href=\"#tab-2225-2\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Summary\"&gt;Summary&lt;/a&gt;\n  ---\n  &gt;         &lt;a href=\"#tab-2476-2\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Summary\"&gt;Summary&lt;/a&gt;\n  4793c4793\n  &lt;         &lt;a href=\"#tab-2225-3\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Table\"&gt;Table&lt;/a&gt;\n  ---\n  &gt;         &lt;a href=\"#tab-2476-3\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Table\"&gt;Table&lt;/a&gt;\n  4796,4797c4796,4797\n  &lt;     &lt;div class=\"tab-content\" data-tabsetid=\"2225\"&gt;\n  &lt;       &lt;div class=\"tab-pane active\" data-value=\"Plot\" id=\"tab-2225-1\"&gt;\n  ---\n  &gt;     &lt;div class=\"tab-content\" data-tabsetid=\"2476\"&gt;\n  &gt;       &lt;div class=\"tab-pane active\" data-value=\"Plot\" id=\"tab-2476-1\"&gt;\n  4800c4800\n  &lt;       &lt;div class=\"tab-pane\" data-value=\"Summary\" id=\"tab-2225-2\"&gt;\n  ---\n  &gt;       &lt;div class=\"tab-pane\" data-value=\"Summary\" id=\"tab-2476-2\"&gt;\n  4803c4803\n  &lt;       &lt;div class=\"tab-pane\" data-value=\"Table\" id=\"tab-2225-3\"&gt;\n  ---\n  &gt;       &lt;div class=\"tab-pane\" data-value=\"Table\" id=\"tab-2476-3\"&gt;\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'shiny'\n  Running 'testthat.R'\n\nedit_log(\"shiny\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nshiny-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_shades.html",
    "href": "packages/test_shades.html",
    "title": "shades",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"shades\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/shades\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/shades/empty_output.Rout\")\nout &lt;- test_pkg(\"shades\", outDir=\"packages/shades\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'shades'\n\n\n  comparing 'shades-Ex.Rout' to 'shades-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'shades'\n  Running 'testthat.R'\n\nedit_log(\"shades\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nshades-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_servr.html",
    "href": "packages/test_servr.html",
    "title": "servr",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"servr\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/servr\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/servr/empty_output.Rout\")\nout &lt;- test_pkg(\"servr\", outDir=\"packages/servr\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'servr'\n\n\n  comparing 'servr-Ex.Rout' to 'servr-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"servr\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nservr-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_selectr.html",
    "href": "packages/test_selectr.html",
    "title": "selectr",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"selectr\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/selectr\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/selectr/empty_output.Rout\")\nout &lt;- test_pkg(\"selectr\", outDir=\"packages/selectr\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'selectr'\n\n\nError: running examples in 'selectr-Ex.R' failed\n\nedit_log(\"selectr\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_sass.html",
    "href": "packages/test_sass.html",
    "title": "sass",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"sass\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/sass\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/sass/empty_output.Rout\")\nout &lt;- test_pkg(\"sass\", outDir=\"packages/sass\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'sass'\n\n\n  comparing 'sass-Ex.Rout' to 'sass-Ex.Rout.prev' ... NOTE\n\n\n  100c100\n  &lt; [1] \"/tmp/RtmpWHOUF3/sass5564f4baef656b2754c388381c1722a8/sass.css\"\n  ---\n  &gt; [1] \"/tmp/RtmpiURnTE/sass5564f4baef656b2754c388381c1722a8/sass.css\"\n  104c104\n  &lt; [1] \"/tmp/RtmpWHOUF3/bar-baz/foo.css\"\n  ---\n  &gt; [1] \"/tmp/RtmpiURnTE/bar-baz/foo.css\"\n  348c348\n  &lt; [1] \"/tmp/RtmpWHOUF3/file5d2f93cd555f.css\"\n  ---\n  &gt; [1] \"/tmp/RtmpiURnTE/file39eb55de29d52.css\"\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'sass'\n  Running 'testthat.R'\n\nedit_log(\"sass\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nsass-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_rvest.html",
    "href": "packages/test_rvest.html",
    "title": "rvest",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"rvest\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/rvest\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/rvest/empty_output.Rout\")\nout &lt;- test_pkg(\"rvest\", outDir=\"packages/rvest\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'rvest'\n\n\n  comparing 'rvest-Ex.Rout' to 'rvest-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'rvest'\n  Running 'spelling.R'\n  Running 'testthat.R'\n\nedit_log(\"rvest\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nrvest-Ex.Rout\n\n\n\n\nspelling.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_rticles.html",
    "href": "packages/test_rticles.html",
    "title": "rticles",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"rticles\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/rticles\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/rticles/empty_output.Rout\")\nout &lt;- test_pkg(\"rticles\", outDir=\"packages/rticles\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'rticles'\n\n\n  comparing 'rticles-Ex.Rout' to 'rticles-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'rticles'\n  Running 'test-all.R'\n  Running 'testthat.R'\n\nedit_log(\"rticles\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nrticles-Ex.Rout\n\n\n\n\ntest-all.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_rstan.html",
    "href": "packages/test_rstan.html",
    "title": "rstan",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"rstan\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/rstan\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/rstan/empty_output.Rout\")\nout &lt;- test_pkg(\"rstan\", outDir=\"packages/rstan\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'rstan'\n\n\n  comparing 'rstan-Ex.Rout' to 'rstan-Ex.Rout.prev' ... NOTE\n\n\n  850c850\n  &lt;  $ model_cppname: chr \"model5ce111e4204c9_normal1\"\n  ---\n  &gt;  $ model_cppname: chr \"model397c1a6bf42b_normal1\"\n  854c854\n  &lt;   ..- attr(*, \"model_name2\")= chr \"file5ce116ac71aa5\"\n  ---\n  &gt;   ..- attr(*, \"model_name2\")= chr \"file397c120f45c10\"\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'rstan'\n  Running 'testthat.R'\n\nedit_log(\"rstan\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nrstan-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_rr2.html",
    "href": "packages/test_rr2.html",
    "title": "rr2",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"rr2\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/rr2\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/rr2/empty_output.Rout\")\nout &lt;- test_pkg(\"rr2\", outDir=\"packages/rr2\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'rr2'\n\n\n  comparing 'rr2-Ex.Rout' to 'rr2-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'rr2'\n  Running 'testthat.R'\n\nedit_log(\"rr2\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nrr2-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_roxygen2.html",
    "href": "packages/test_roxygen2.html",
    "title": "roxygen2",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"roxygen2\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/roxygen2\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/roxygen2/empty_output.Rout\")\nout &lt;- test_pkg(\"roxygen2\", outDir=\"packages/roxygen2\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'roxygen2'\n\n\n  comparing 'roxygen2-Ex.Rout' to 'roxygen2-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'roxygen2'\n  Running 'testthat.R'\n\nedit_log(\"roxygen2\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nroxygen2-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_rmarkdown.html",
    "href": "packages/test_rmarkdown.html",
    "title": "rmarkdown",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"rmarkdown\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/rmarkdown\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/rmarkdown/empty_output.Rout\")\nout &lt;- test_pkg(\"rmarkdown\", outDir=\"packages/rmarkdown\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'rmarkdown'\n\n\n  comparing 'rmarkdown-Ex.Rout' to 'rmarkdown-Ex.Rout.prev' ... NOTE\n\n\n  129c129\n  &lt; title: An R Markdown document converted from \"/tmp/RtmpIhjuLm/file5c986491d0771.ipynb\"\n  ---\n  &gt; title: An R Markdown document converted from \"/tmp/RtmpmA0u1f/file38f451e565f4c.ipynb\"\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'rmarkdown'\n  Running 'testrmd.R'\n  Running 'testthat.R'\n\nedit_log(\"rmarkdown\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nrmarkdown-Ex.Rout\n\n\n\n\ntestrmd.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_rex.html",
    "href": "packages/test_rex.html",
    "title": "rex",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"rex\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/rex\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/rex/empty_output.Rout\")\nout &lt;- test_pkg(\"rex\", outDir=\"packages/rex\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'rex'\n\n\n  comparing 'rex-Ex.Rout' to 'rex-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'rex'\n  Running 'testthat.R'\n\nedit_log(\"rex\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nrex-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_reprex.html",
    "href": "packages/test_reprex.html",
    "title": "reprex",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"reprex\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/reprex\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/reprex/empty_output.Rout\")\nout &lt;- test_pkg(\"reprex\", outDir=\"packages/reprex\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'reprex'\n\n\n  comparing 'reprex-Ex.Rout' to 'reprex-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'reprex'\n  Running 'spelling.R'\n  Running 'testthat.R'\n\nedit_log(\"reprex\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nreprex-Ex.Rout\n\n\n\n\nspelling.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_remotes.html",
    "href": "packages/test_remotes.html",
    "title": "remotes",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"remotes\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/remotes\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/remotes/empty_output.Rout\")\nout &lt;- test_pkg(\"remotes\", outDir=\"packages/remotes\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'remotes'\n\n\n  comparing 'remotes-Ex.Rout' to 'remotes-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'remotes'\n  Running 'testthat.R'\n\nedit_log(\"remotes\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nremotes-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_rematch.html",
    "href": "packages/test_rematch.html",
    "title": "rematch",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"rematch\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/rematch\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/rematch/empty_output.Rout\")\nout &lt;- test_pkg(\"rematch\", outDir=\"packages/rematch\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'rematch'\n\n\n  comparing 'rematch-Ex.Rout' to 'rematch-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'rematch'\n  Running 'testthat.R'\n\nedit_log(\"rematch\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nrematch-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_readxl.html",
    "href": "packages/test_readxl.html",
    "title": "readxl",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"readxl\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/readxl\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/readxl/empty_output.Rout\")\nout &lt;- test_pkg(\"readxl\", outDir=\"packages/readxl\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'readxl'\n\n\n  comparing 'readxl-Ex.Rout' to 'readxl-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'readxl'\n  Running 'testthat.R'\n\nedit_log(\"readxl\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nreadxl-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_rcmdcheck.html",
    "href": "packages/test_rcmdcheck.html",
    "title": "rcmdcheck",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"rcmdcheck\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/rcmdcheck\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/rcmdcheck/empty_output.Rout\")\nout &lt;- test_pkg(\"rcmdcheck\", outDir=\"packages/rcmdcheck\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'rcmdcheck'\n\n\n  comparing 'rcmdcheck-Ex.Rout' to 'rcmdcheck-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'rcmdcheck'\n  Running 'testthat.R'\nError: running the tests in 'testthat.R' failed\n\nedit_log(\"rcmdcheck\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nrcmdcheck-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_ranger.html",
    "href": "packages/test_ranger.html",
    "title": "ranger",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"ranger\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/ranger\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/ranger/empty_output.Rout\")\nout &lt;- test_pkg(\"ranger\", outDir=\"packages/ranger\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'ranger'\n\n\n  comparing 'ranger-Ex.Rout' to 'ranger-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'ranger'\n  Running 'testthat.R'\n\nedit_log(\"ranger\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nranger-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_ragg.html",
    "href": "packages/test_ragg.html",
    "title": "ragg",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"ragg\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/ragg\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/ragg/empty_output.Rout\")\nout &lt;- test_pkg(\"ragg\", outDir=\"packages/ragg\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'ragg'\n\n\n  comparing 'ragg-Ex.Rout' to 'ragg-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'ragg'\n  Running 'testthat.R'\n\nedit_log(\"ragg\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nragg-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_r2d3.html",
    "href": "packages/test_r2d3.html",
    "title": "r2d3",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"r2d3\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/r2d3\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/r2d3/empty_output.Rout\")\nout &lt;- test_pkg(\"r2d3\", outDir=\"packages/r2d3\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'r2d3'\n\n\n  comparing 'r2d3-Ex.Rout' to 'r2d3-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'r2d3'\n  Running 'testthat.R'\n\nedit_log(\"r2d3\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nr2d3-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_quadprog.html",
    "href": "packages/test_quadprog.html",
    "title": "quadprog",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"quadprog\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/quadprog\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/quadprog/empty_output.Rout\")\nout &lt;- test_pkg(\"quadprog\", outDir=\"packages/quadprog\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'quadprog'\n\n\n  comparing 'quadprog-Ex.Rout' to 'quadprog-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'quadprog'\n  Running 'Gwen.R'\n  comparing 'Gwen.Rout' to 'Gwen.Rout.save' ... OK\n  Running 'TalbotKatz.R'\n  comparing 'TalbotKatz.Rout' to 'TalbotKatz.Rout.save' ... OK\n  Running 'test1.R'\n  comparing 'test1.Rout' to 'test1.Rout.save' ... OK\n  Running 'test2.R'\n  comparing 'test2.Rout' to 'test2.Rout.save' ... OK\n\nedit_log(\"quadprog\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nquadprog-Ex.Rout\n\n\n\n\nGwen.Rout\n\n\n\n\nTalbotKatz.Rout\n\n\n\n\ntest1.Rout\n\n\n\n\ntest2.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_purrr.html",
    "href": "packages/test_purrr.html",
    "title": "purrr",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"purrr\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/purrr\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/purrr/empty_output.Rout\")\nout &lt;- test_pkg(\"purrr\", outDir=\"packages/purrr\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'purrr'\n\n\n  comparing 'purrr-Ex.Rout' to 'purrr-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'purrr'\n  Running 'testthat.R'\n\nedit_log(\"purrr\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\npurrr-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_promises.html",
    "href": "packages/test_promises.html",
    "title": "promises",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"promises\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/promises\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/promises/empty_output.Rout\")\nout &lt;- test_pkg(\"promises\", outDir=\"packages/promises\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'promises'\n\n\n  comparing 'promises-Ex.Rout' to 'promises-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'promises'\n  Running 'spelling.R'\n  Running 'testthat.R'\n\nedit_log(\"promises\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\npromises-Ex.Rout\n\n\n\n\nspelling.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_profvis.html",
    "href": "packages/test_profvis.html",
    "title": "profvis",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"profvis\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/profvis\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/profvis/empty_output.Rout\")\nout &lt;- test_pkg(\"profvis\", outDir=\"packages/profvis\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'profvis'\n\n\n  comparing 'profvis-Ex.Rout' to 'profvis-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'profvis'\n  Running 'manual-test-source.R'\n  Running 'manual-tests.R'\n  Running 'test-all.R'\n\nedit_log(\"profvis\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nprofvis-Ex.Rout\n\n\n\n\nmanual-test-source.Rout\n\n\n\n\nmanual-tests.Rout\n\n\n\n\ntest-all.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_prettyunits.html",
    "href": "packages/test_prettyunits.html",
    "title": "prettyunits",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"prettyunits\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/prettyunits\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/prettyunits/empty_output.Rout\")\nout &lt;- test_pkg(\"prettyunits\", outDir=\"packages/prettyunits\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'prettyunits'\n\n\n  comparing 'prettyunits-Ex.Rout' to 'prettyunits-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'prettyunits'\n  Running 'testthat.R'\n\nedit_log(\"prettyunits\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nprettyunits-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_pracma.html",
    "href": "packages/test_pracma.html",
    "title": "pracma",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"pracma\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/pracma\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/pracma/empty_output.Rout\")\nout &lt;- test_pkg(\"pracma\", outDir=\"packages/pracma\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'pracma'\n\n\nError: running examples in 'pracma-Ex.R' failed\n\nedit_log(\"pracma\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_polspline.html",
    "href": "packages/test_polspline.html",
    "title": "polspline",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"polspline\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/polspline\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/polspline/empty_output.Rout\")\nout &lt;- test_pkg(\"polspline\", outDir=\"packages/polspline\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'polspline'\n\n\n  comparing 'polspline-Ex.Rout' to 'polspline-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"polspline\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\npolspline-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_plyr.html",
    "href": "packages/test_plyr.html",
    "title": "plyr",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"plyr\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/plyr\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/plyr/empty_output.Rout\")\nout &lt;- test_pkg(\"plyr\", outDir=\"packages/plyr\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'plyr'\n\n\n  comparing 'plyr-Ex.Rout' to 'plyr-Ex.Rout.prev' ... NOTE\n\n\n  26308c26308\n  &lt;   0.177   0.000   0.178 \n  ---\n  &gt;   0.182   0.000   0.201 \n  26311c26311\n  &lt;   0.184   0.000   0.184 \n  ---\n  &gt;   0.183   0.002   0.192 \n  26353c26353\n  &lt;   0.133   0.000   0.134 \n  ---\n  &gt;   0.136   0.000   0.161 \n  26356c26356\n  &lt;   0.055   0.000   0.054 \n  ---\n  &gt;   0.059   0.000   0.062 \n  27722c27722\n  &lt;   0.014   0.000   0.014 \n  ---\n  &gt;   0.015   0.000   0.016 \n  27725c27725\n  &lt;       0       0       0 \n  ---\n  &gt;   0.000   0.000   0.001 \n  28395c28395\n  &lt; |===========================                         | 53% ~1 s remaining       \n  ---\n  &gt; |===========================                         | 53% ~0 s remaining       \n  29147,29151c29147,29151\n  &lt;  [1] \"2024-11-21 19:13:05 GMT\" \"2024-11-21 19:13:10 GMT\"\n  &lt;  [3] \"2024-11-21 19:13:10 GMT\" \"2024-11-21 19:13:10 GMT\"\n  &lt;  [5] \"2024-11-21 19:13:10 GMT\" \"2024-11-21 19:13:10 GMT\"\n  &lt;  [7] \"2024-11-21 19:13:15 GMT\" \"2024-11-21 19:13:15 GMT\"\n  &lt;  [9] \"2024-11-21 19:13:15 GMT\" \"2024-11-21 19:13:15 GMT\"\n  ---\n  &gt;  [1] \"2024-11-21 15:23:30 GMT\" \"2024-11-21 15:23:35 GMT\"\n  &gt;  [3] \"2024-11-21 15:23:35 GMT\" \"2024-11-21 15:23:35 GMT\"\n  &gt;  [5] \"2024-11-21 15:23:35 GMT\" \"2024-11-21 15:23:35 GMT\"\n  &gt;  [7] \"2024-11-21 15:23:40 GMT\" \"2024-11-21 15:23:40 GMT\"\n  &gt;  [9] \"2024-11-21 15:23:40 GMT\" \"2024-11-21 15:23:40 GMT\"\n  29153,29157c29153,29157\n  &lt;  [1] \"2024-11-21 19:13:05 GMT\" \"2024-11-21 19:13:05 GMT\"\n  &lt;  [3] \"2024-11-21 19:13:05 GMT\" \"2024-11-21 19:13:10 GMT\"\n  &lt;  [5] \"2024-11-21 19:13:10 GMT\" \"2024-11-21 19:13:10 GMT\"\n  &lt;  [7] \"2024-11-21 19:13:10 GMT\" \"2024-11-21 19:13:10 GMT\"\n  &lt;  [9] \"2024-11-21 19:13:15 GMT\" \"2024-11-21 19:13:15 GMT\"\n  ---\n  &gt;  [1] \"2024-11-21 15:23:30 GMT\" \"2024-11-21 15:23:30 GMT\"\n  &gt;  [3] \"2024-11-21 15:23:30 GMT\" \"2024-11-21 15:23:30 GMT\"\n  &gt;  [5] \"2024-11-21 15:23:35 GMT\" \"2024-11-21 15:23:35 GMT\"\n  &gt;  [7] \"2024-11-21 15:23:35 GMT\" \"2024-11-21 15:23:35 GMT\"\n  &gt;  [9] \"2024-11-21 15:23:35 GMT\" \"2024-11-21 15:23:40 GMT\"\n  29159c29159\n  &lt; [1] \"2024-11-21 19:00:00 GMT\"\n  ---\n  &gt; [1] \"2024-11-21 15:00:00 GMT\"\n  45819c45819\n  &lt;   0.057   0.011   0.068 \n  ---\n  &gt;   0.060   0.010   0.071 \n  45822c45822\n  &lt;    0.02    0.00    0.02 \n  ---\n  &gt;   0.020   0.000   0.019 \n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'plyr'\n  Running 'testthat.R'\n\nedit_log(\"plyr\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nplyr-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_pkgload.html",
    "href": "packages/test_pkgload.html",
    "title": "pkgload",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"pkgload\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/pkgload\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/pkgload/empty_output.Rout\")\nout &lt;- test_pkg(\"pkgload\", outDir=\"packages/pkgload\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'pkgload'\n\n\n  comparing 'pkgload-Ex.Rout' to 'pkgload-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'pkgload'\n  Running 'testthat.R'\nError: running the tests in 'testthat.R' failed\n\nedit_log(\"pkgload\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\npkgload-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_pkgconfig.html",
    "href": "packages/test_pkgconfig.html",
    "title": "pkgconfig",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"pkgconfig\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/pkgconfig\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/pkgconfig/empty_output.Rout\")\nout &lt;- test_pkg(\"pkgconfig\", outDir=\"packages/pkgconfig\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'pkgconfig'\n\n\nWarning: no examples found for package 'pkgconfig'\n\n\nchecks for tests\n\n\nDOing the tests\n\n\nRunning specific tests for package 'pkgconfig'\n\n\n  Running 'testthat.R'\n\nedit_log(\"pkgconfig\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_pillar.html",
    "href": "packages/test_pillar.html",
    "title": "pillar",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"pillar\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/pillar\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/pillar/empty_output.Rout\")\nout &lt;- test_pkg(\"pillar\", outDir=\"packages/pillar\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'pillar'\n\n\n  comparing 'pillar-Ex.Rout' to 'pillar-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'pillar'\n  Running 'testthat.R'\n\nedit_log(\"pillar\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\npillar-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_phylolm.html",
    "href": "packages/test_phylolm.html",
    "title": "phylolm",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"phylolm\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/phylolm\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/phylolm/empty_output.Rout\")\nout &lt;- test_pkg(\"phylolm\", outDir=\"packages/phylolm\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'phylolm'\n\n\n  comparing 'phylolm-Ex.Rout' to 'phylolm-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'phylolm'\n  Running 'testthat.R'\n\nedit_log(\"phylolm\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nphylolm-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_pbivnorm.html",
    "href": "packages/test_pbivnorm.html",
    "title": "pbivnorm",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"pbivnorm\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/pbivnorm\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/pbivnorm/empty_output.Rout\")\nout &lt;- test_pkg(\"pbivnorm\", outDir=\"packages/pbivnorm\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'pbivnorm'\n\n\n  comparing 'pbivnorm-Ex.Rout' to 'pbivnorm-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"pbivnorm\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\npbivnorm-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_parallelly.html",
    "href": "packages/test_parallelly.html",
    "title": "parallelly",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"parallelly\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/parallelly\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/parallelly/empty_output.Rout\")\nout &lt;- test_pkg(\"parallelly\", outDir=\"packages/parallelly\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'parallelly'\n\n\n  comparing 'parallelly-Ex.Rout' to 'parallelly-Ex.Rout.prev' ... NOTE\n\n\n  22c22\n  &lt;   '/usr/local/lib/R/bin/Rscript' --default-packages=datasets,utils,grDevices,graphics,stats,methods -e 'options(socketOptions = \"no-delay\")' -e 'workRSOCK &lt;- tryCatch(parallel:::.workRSOCK, error=function(e) parallel:::.slaveRSOCK); workRSOCK()' MASTER=localhost PORT=11111 OUT=/dev/null TIMEOUT=2592000 XDR=FALSE SETUPTIMEOUT=120 SETUPSTRATEGY=sequential\n  ---\n  &gt;   '/usr/local/lib/R/bin/Rscript' --default-packages=datasets,utils,grDevices,graphics,stats,methods -e 'options(socketOptions = \"no-delay\")' -e 'workRSOCK &lt;- tryCatch(parallel:::.workRSOCK, error=function(e) parallel:::.slaveRSOCK); workRSOCK()' MASTER=localhost PORT=11406 OUT=/dev/null TIMEOUT=2592000 XDR=FALSE SETUPTIMEOUT=120 SETUPSTRATEGY=sequential\n  27c27\n  &lt;   '/usr/local/lib/R/bin/Rscript' --default-packages=datasets,utils,grDevices,graphics,stats,methods -e 'options(socketOptions = \"no-delay\")' -e 'workRSOCK &lt;- tryCatch(parallel:::.workRSOCK, error=function(e) parallel:::.slaveRSOCK); workRSOCK()' MASTER=localhost PORT=11111 OUT=/dev/null TIMEOUT=2592000 XDR=FALSE SETUPTIMEOUT=120 SETUPSTRATEGY=sequential\n  ---\n  &gt;   '/usr/local/lib/R/bin/Rscript' --default-packages=datasets,utils,grDevices,graphics,stats,methods -e 'options(socketOptions = \"no-delay\")' -e 'workRSOCK &lt;- tryCatch(parallel:::.workRSOCK, error=function(e) parallel:::.slaveRSOCK); workRSOCK()' MASTER=localhost PORT=11406 OUT=/dev/null TIMEOUT=2592000 XDR=FALSE SETUPTIMEOUT=120 SETUPSTRATEGY=sequential\n  33c33\n  &lt;   '/usr/bin/ssh' -R 11039:localhost:11039 n1\n  ---\n  &gt;   '/usr/bin/ssh' -R 11322:localhost:11322 n1\n  37c37\n  &lt;   '/usr/local/lib/R/bin/Rscript' --default-packages=datasets,utils,grDevices,graphics,stats,methods -e 'options(socketOptions = \"no-delay\")' -e 'workRSOCK &lt;- tryCatch(parallel:::.workRSOCK, error=function(e) parallel:::.slaveRSOCK); workRSOCK()' MASTER=localhost PORT=11039 OUT=/dev/null TIMEOUT=2592000 XDR=FALSE SETUPTIMEOUT=120 SETUPSTRATEGY=sequential\n  ---\n  &gt;   '/usr/local/lib/R/bin/Rscript' --default-packages=datasets,utils,grDevices,graphics,stats,methods -e 'options(socketOptions = \"no-delay\")' -e 'workRSOCK &lt;- tryCatch(parallel:::.workRSOCK, error=function(e) parallel:::.slaveRSOCK); workRSOCK()' MASTER=localhost PORT=11322 OUT=/dev/null TIMEOUT=2592000 XDR=FALSE SETUPTIMEOUT=120 SETUPSTRATEGY=sequential\n  41c41\n  &lt;   '/usr/bin/ssh' -R 11039:localhost:11039 n1 \"'/usr/local/lib/R/bin/Rscript' --default-packages=datasets,utils,grDevices,graphics,stats,methods -e 'options(socketOptions = \\\"no-delay\\\")' -e 'workRSOCK &lt;- tryCatch(parallel:::.workRSOCK, error=function(e) parallel:::.slaveRSOCK); workRSOCK()' MASTER=localhost PORT=11039 OUT=/dev/null TIMEOUT=2592000 XDR=FALSE SETUPTIMEOUT=120 SETUPSTRATEGY=sequential\"\n  ---\n  &gt;   '/usr/bin/ssh' -R 11322:localhost:11322 n1 \"'/usr/local/lib/R/bin/Rscript' --default-packages=datasets,utils,grDevices,graphics,stats,methods -e 'options(socketOptions = \\\"no-delay\\\")' -e 'workRSOCK &lt;- tryCatch(parallel:::.workRSOCK, error=function(e) parallel:::.slaveRSOCK); workRSOCK()' MASTER=localhost PORT=11322 OUT=/dev/null TIMEOUT=2592000 XDR=FALSE SETUPTIMEOUT=120 SETUPSTRATEGY=sequential\"\n  46c46\n  &lt;   '/usr/bin/ssh' -R 11040:localhost:11039 server.remote.org\n  ---\n  &gt;   '/usr/bin/ssh' -R 11323:localhost:11322 server.remote.org\n  50c50\n  &lt;   'Rscript' --default-packages=datasets,utils,grDevices,graphics,stats,methods -e 'options(socketOptions = \"no-delay\")' -e 'workRSOCK &lt;- tryCatch(parallel:::.workRSOCK, error=function(e) parallel:::.slaveRSOCK); workRSOCK()' MASTER=localhost PORT=11040 OUT=/dev/null TIMEOUT=2592000 XDR=FALSE SETUPTIMEOUT=120 SETUPSTRATEGY=sequential\n  ---\n  &gt;   'Rscript' --default-packages=datasets,utils,grDevices,graphics,stats,methods -e 'options(socketOptions = \"no-delay\")' -e 'workRSOCK &lt;- tryCatch(parallel:::.workRSOCK, error=function(e) parallel:::.slaveRSOCK); workRSOCK()' MASTER=localhost PORT=11323 OUT=/dev/null TIMEOUT=2592000 XDR=FALSE SETUPTIMEOUT=120 SETUPSTRATEGY=sequential\n  54c54\n  &lt;   '/usr/bin/ssh' -R 11040:localhost:11039 server.remote.org \"'Rscript' --default-packages=datasets,utils,grDevices,graphics,stats,methods -e 'options(socketOptions = \\\"no-delay\\\")' -e 'workRSOCK &lt;- tryCatch(parallel:::.workRSOCK, error=function(e) parallel:::.slaveRSOCK); workRSOCK()' MASTER=localhost PORT=11040 OUT=/dev/null TIMEOUT=2592000 XDR=FALSE SETUPTIMEOUT=120 SETUPSTRATEGY=sequential\"\n  ---\n  &gt;   '/usr/bin/ssh' -R 11323:localhost:11322 server.remote.org \"'Rscript' --default-packages=datasets,utils,grDevices,graphics,stats,methods -e 'options(socketOptions = \\\"no-delay\\\")' -e 'workRSOCK &lt;- tryCatch(parallel:::.workRSOCK, error=function(e) parallel:::.slaveRSOCK); workRSOCK()' MASTER=localhost PORT=11323 OUT=/dev/null TIMEOUT=2592000 XDR=FALSE SETUPTIMEOUT=120 SETUPSTRATEGY=sequential\"\n  79c79\n  &lt;   '/usr/local/lib/R/bin/Rscript' --default-packages=datasets,utils,grDevices,graphics,stats,methods -e 'options(socketOptions = \"no-delay\")' -e 'workRSOCK &lt;- tryCatch(parallel:::.workRSOCK, error=function(e) parallel:::.slaveRSOCK); workRSOCK()' MASTER=localhost PORT=11748 OUT=/dev/null TIMEOUT=2592000 XDR=FALSE SETUPTIMEOUT=120 SETUPSTRATEGY=sequential\n  ---\n  &gt;   '/usr/local/lib/R/bin/Rscript' --default-packages=datasets,utils,grDevices,graphics,stats,methods -e 'options(socketOptions = \"no-delay\")' -e 'workRSOCK &lt;- tryCatch(parallel:::.workRSOCK, error=function(e) parallel:::.slaveRSOCK); workRSOCK()' MASTER=localhost PORT=11115 OUT=/dev/null TIMEOUT=2592000 XDR=FALSE SETUPTIMEOUT=120 SETUPSTRATEGY=sequential\n  84c84\n  &lt;   '/usr/local/lib/R/bin/Rscript' --default-packages=datasets,utils,grDevices,graphics,stats,methods -e 'options(socketOptions = \"no-delay\")' -e 'workRSOCK &lt;- tryCatch(parallel:::.workRSOCK, error=function(e) parallel:::.slaveRSOCK); workRSOCK()' MASTER=localhost PORT=11748 OUT=/dev/null TIMEOUT=2592000 XDR=FALSE SETUPTIMEOUT=120 SETUPSTRATEGY=sequential\n  ---\n  &gt;   '/usr/local/lib/R/bin/Rscript' --default-packages=datasets,utils,grDevices,graphics,stats,methods -e 'options(socketOptions = \"no-delay\")' -e 'workRSOCK &lt;- tryCatch(parallel:::.workRSOCK, error=function(e) parallel:::.slaveRSOCK); workRSOCK()' MASTER=localhost PORT=11115 OUT=/dev/null TIMEOUT=2592000 XDR=FALSE SETUPTIMEOUT=120 SETUPSTRATEGY=sequential\n  245c245\n  &lt;  1.49  1.29  1.32 \n  ---\n  &gt;  3.23  3.37  3.07 \n  267c267\n  &lt;  1.49  1.29  1.32 \n  ---\n  &gt;  3.23  3.37  3.07 \n  328c328\n  &lt; [1] \"Connection (connection: index=3, description=\\\"/tmp/RtmpRQoHRB/file5610939821c22\\\", class=\\\"file\\\", mode=\\\"w\\\", text=\\\"text\\\", opened=\\\"opened\\\", can read=\\\"no\\\", can write=\\\"yes\\\", id=-1) is no longer valid. It differ from the currently registered R connection with the same index 3 (connection: index=3, description=\\\"/tmp/RtmpRQoHRB/file5610939821c22\\\", class=\\\"file\\\", mode=\\\"w\\\", text=\\\"text\\\", opened=\\\"opened\\\", can read=\\\"no\\\", can write=\\\"yes\\\", id=200, raw_id=\\\"&lt;pointer: 0&gt;\\\")\"\n  ---\n  &gt; [1] \"Connection (connection: index=3, description=\\\"/tmp/RtmpG9EBKN/file301271c494540\\\", class=\\\"file\\\", mode=\\\"w\\\", text=\\\"text\\\", opened=\\\"opened\\\", can read=\\\"no\\\", can write=\\\"yes\\\", id=-1) is no longer valid. It differ from the currently registered R connection with the same index 3 (connection: index=3, description=\\\"/tmp/RtmpG9EBKN/file301271c494540\\\", class=\\\"file\\\", mode=\\\"w\\\", text=\\\"text\\\", opened=\\\"opened\\\", can read=\\\"no\\\", can write=\\\"yes\\\", id=200, raw_id=\\\"&lt;pointer: 0&gt;\\\")\"\n  449c449\n  &lt;   closing unused connection 5 (&lt;-localhost:11408)\n  ---\n  &gt;   closing unused connection 5 (&lt;-localhost:11066)\n  451c451\n  &lt;   closing unused connection 4 (&lt;-localhost:11408)\n  ---\n  &gt;   closing unused connection 4 (&lt;-localhost:11066)\n  794c794\n  &lt; [1] TRUE\n  ---\n  &gt; [1] FALSE\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'parallelly'\n  Running 'as.cluster.R'\n  Running 'availableCores.R'\n  Running 'availableWorkers.R'\n  Running 'cgroups.R'\n  Running 'cpuLoad.R'\n  Running 'freeCores.R'\n  Running 'freePort.R'\n  Running 'isConnectionValid.R'\n  Running 'isForkedChild.R'\n  Running 'killNode.R'\n  Running 'makeClusterMPI.R'\n  Running 'makeClusterPSOCK.R'\n  Running 'options-and-envvars.R'\n  Running 'r_bug18119.R'\n  Running 'startup.R'\n  Running 'utils.R'\n\nedit_log(\"parallelly\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nparallelly-Ex.Rout\n\n\n\n\nas.cluster.Rout\n\n\n\n\navailableCores.Rout\n\n\n\n\navailableWorkers.Rout\n\n\n\n\ncgroups.Rout\n\n\n\n\ncpuLoad.Rout\n\n\n\n\nfreeCores.Rout\n\n\n\n\nfreePort.Rout\n\n\n\n\nisConnectionValid.Rout\n\n\n\n\nisForkedChild.Rout\n\n\n\n\nkillNode.Rout\n\n\n\n\nmakeClusterMPI.Rout\n\n\n\n\nmakeClusterPSOCK.Rout\n\n\n\n\noptions-and-envvars.Rout\n\n\n\n\nr_bug18119.Rout\n\n\n\n\nstartup.Rout\n\n\n\n\nutils.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_packrat.html",
    "href": "packages/test_packrat.html",
    "title": "packrat",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"packrat\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/packrat\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/packrat/empty_output.Rout\")\nout &lt;- test_pkg(\"packrat\", outDir=\"packages/packrat\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'packrat'\n\n\n  comparing 'packrat-Ex.Rout' to 'packrat-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'packrat'\n  Running 'test-cranlike-repositories.R'\n  Running 'testthat.R'\nError: running the tests in 'testthat.R' failed\n\nedit_log(\"packrat\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\npackrat-Ex.Rout\n\n\n\n\ntest-cranlike-repositories.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_optimx.html",
    "href": "packages/test_optimx.html",
    "title": "optimx",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"optimx\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/optimx\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/optimx/empty_output.Rout\")\nout &lt;- test_pkg(\"optimx\", outDir=\"packages/optimx\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'optimx'\n\n\nError: running examples in 'optimx-Ex.R' failed\n\nedit_log(\"optimx\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_openssl.html",
    "href": "packages/test_openssl.html",
    "title": "openssl",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"openssl\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/openssl\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/openssl/empty_output.Rout\")\nout &lt;- test_pkg(\"openssl\", outDir=\"packages/openssl\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'openssl'\n\n\nError: running examples in 'openssl-Ex.R' failed\n\nedit_log(\"openssl\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_numDeriv.html",
    "href": "packages/test_numDeriv.html",
    "title": "numDeriv",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"numDeriv\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/numDeriv\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/numDeriv/empty_output.Rout\")\nout &lt;- test_pkg(\"numDeriv\", outDir=\"packages/numDeriv\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'numDeriv'\n\n\n  comparing 'numDeriv-Ex.Rout' to 'numDeriv-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'numDeriv'\n  Running 'BWeg.R'\n  Running 'CSD.R'\n  Running 'grad01.R'\n  Running 'hessian01.R'\n  Running 'jacobian01.R'\n  Running 'oneSided.R'\n  Running 'trig01.R'\n\nedit_log(\"numDeriv\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nnumDeriv-Ex.Rout\n\n\n\n\nBWeg.Rout\n\n\n\n\nCSD.Rout\n\n\n\n\ngrad01.Rout\n\n\n\n\nhessian01.Rout\n\n\n\n\njacobian01.Rout\n\n\n\n\noneSided.Rout\n\n\n\n\ntrig01.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_nloptr.html",
    "href": "packages/test_nloptr.html",
    "title": "nloptr",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"nloptr\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/nloptr\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/nloptr/empty_output.Rout\")\nout &lt;- test_pkg(\"nloptr\", outDir=\"packages/nloptr\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'nloptr'\n\n\n  comparing 'nloptr-Ex.Rout' to 'nloptr-Ex.Rout.prev' ... NOTE\n\n\n  609c609\n  &lt; [1] 0.9999994 0.9999980\n  ---\n  &gt; [1] 0.9999822 0.9999670\n  612c612\n  &lt; [1] 7.336322e-11\n  ---\n  &gt; [1] 9.543543e-10\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'nloptr'\n  Running 'testthat.R'\n\nedit_log(\"nloptr\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nnloptr-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_munsell.html",
    "href": "packages/test_munsell.html",
    "title": "munsell",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"munsell\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/munsell\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/munsell/empty_output.Rout\")\nout &lt;- test_pkg(\"munsell\", outDir=\"packages/munsell\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'munsell'\n\n\n  comparing 'munsell-Ex.Rout' to 'munsell-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'munsell'\n  Running 'testthat.R'\n\nedit_log(\"munsell\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nmunsell-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_modelr.html",
    "href": "packages/test_modelr.html",
    "title": "modelr",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"modelr\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/modelr\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/modelr/empty_output.Rout\")\nout &lt;- test_pkg(\"modelr\", outDir=\"packages/modelr\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'modelr'\n\n\n  comparing 'modelr-Ex.Rout' to 'modelr-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'modelr'\n  Running 'testthat.R'\n\nedit_log(\"modelr\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nmodelr-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_mlmRev.html",
    "href": "packages/test_mlmRev.html",
    "title": "mlmRev",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"mlmRev\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/mlmRev\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/mlmRev/empty_output.Rout\")\nout &lt;- test_pkg(\"mlmRev\", outDir=\"packages/mlmRev\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'mlmRev'\n\n\n  comparing 'mlmRev-Ex.Rout' to 'mlmRev-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'mlmRev'\n  Running 'guImmun.R'\n  Running 'lmerTest.R'\n  Running 'versions.R'\n\nedit_log(\"mlmRev\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nmlmRev-Ex.Rout\n\n\n\n\nguImmun.Rout\n\n\n\n\nlmerTest.Rout\n\n\n\n\nversions.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_mitml.html",
    "href": "packages/test_mitml.html",
    "title": "mitml",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"mitml\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/mitml\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/mitml/empty_output.Rout\")\nout &lt;- test_pkg(\"mitml\", outDir=\"packages/mitml\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'mitml'\n\n\nError: running examples in 'mitml-Ex.R' failed\n\nedit_log(\"mitml\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_miniUI.html",
    "href": "packages/test_miniUI.html",
    "title": "miniUI",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"miniUI\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/miniUI\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/miniUI/empty_output.Rout\")\nout &lt;- test_pkg(\"miniUI\", outDir=\"packages/miniUI\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'miniUI'\n\n\n  comparing 'miniUI-Ex.Rout' to 'miniUI-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"miniUI\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nminiUI-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_miceadds.html",
    "href": "packages/test_miceadds.html",
    "title": "miceadds",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"miceadds\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/miceadds\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/miceadds/empty_output.Rout\")\nout &lt;- test_pkg(\"miceadds\", outDir=\"packages/miceadds\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'miceadds'\n\n\n  comparing 'miceadds-Ex.Rout' to 'miceadds-Ex.Rout.prev' ... NOTE\n\n\n  1406,1409c1406,1409\n  &lt; 1     1  2024-11-21 18:49:19. -1  7 15\n  &lt; 2     2  2024-11-21 18:49:19.  1  9 17\n  &lt; 3     3  2024-11-21 18:49:19.  3 11 19\n  &lt; 4     4  2024-11-21 18:49:19.  5 13 21\n  ---\n  &gt; 1     1  2024-11-21 14:57:53. -1  7 15\n  &gt; 2     2  2024-11-21 14:57:53.  1  9 17\n  &gt; 3     3  2024-11-21 14:57:53.  3 11 19\n  &gt; 4     4  2024-11-21 14:57:53.  5 13 21\n  5421,5424c5421,5424\n  &lt; [1] \"2024-11-21 18:49:19\"         \"2024-11-21\"                 \n  &lt; [3] \"20241121\"                    \"2024-11-21_1849\"            \n  &lt; [5] \"2024-11-21_1800\"             \"20241121_184919\"            \n  &lt; [7] \"20241121184919\"              \"99adafdbb12a_20241121184919\"\n  ---\n  &gt; [1] \"2024-11-21 14:57:53\"         \"2024-11-21\"                 \n  &gt; [3] \"20241121\"                    \"2024-11-21_1457\"            \n  &gt; [5] \"2024-11-21_1400\"             \"20241121_145753\"            \n  &gt; [7] \"20241121145753\"              \"99adafdbb12a_20241121145753\"\n\n\nchecks for tests\n\nedit_log(\"miceadds\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nmiceadds-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_merDeriv.html",
    "href": "packages/test_merDeriv.html",
    "title": "merDeriv",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"merDeriv\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/merDeriv\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/merDeriv/empty_output.Rout\")\nout &lt;- test_pkg(\"merDeriv\", outDir=\"packages/merDeriv\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'merDeriv'\n\n\n  comparing 'merDeriv-Ex.Rout' to 'merDeriv-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'merDeriv'\n  Running 'tinytest.R'\n\nedit_log(\"merDeriv\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nmerDeriv-Ex.Rout\n\n\n\n\ntinytest.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_matrixStats.html",
    "href": "packages/test_matrixStats.html",
    "title": "matrixStats",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"matrixStats\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/matrixStats\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/matrixStats/empty_output.Rout\")\nout &lt;- test_pkg(\"matrixStats\", outDir=\"packages/matrixStats\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'matrixStats'\n\n\n  comparing 'matrixStats-Ex.Rout' to 'matrixStats-Ex.Rout.prev' ... NOTE\n\n\n  1399c1399\n  &lt;            1.0            0.2 \n  ---\n  &gt;            1.0            0.1 \n  1402c1402\n  &lt;      1.0000000      0.1666667 \n  ---\n  &gt;            1.0            0.6 \n  1405c1405\n  &lt;      1.0000000      0.3333333 \n  ---\n  &gt;      1.0000000      0.6666667 \n  1408c1408\n  &lt;      1.0000000      0.7777778 \n  ---\n  &gt;      1.0000000      0.3333333 \n  1411c1411\n  &lt;              1              3 \n  ---\n  &gt;       1.000000       2.833333 \n  1414c1414\n  &lt;       1.000000       3.012987 \n  ---\n  &gt;            1.0            2.8 \n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'matrixStats'\n  Running 'allocArray.R'\n  Running 'allocMatrix.R'\n  Running 'allocVector.R'\n  Running 'anyMissing_subset.R'\n  Running 'anyMissing.R'\n  Running 'benchmark.R'\n  Running 'binCounts_subset.R'\n  Running 'binCounts.R'\n  Running 'binMeans,binCounts_subset.R'\n  Running 'binMeans,binCounts.R'\n  Running 'count_subset.R'\n  Running 'count.R'\n  Running 'diff2_subset.R'\n  Running 'diff2.R'\n  Running 'indexByRow.R'\n  Running 'logSumExp_subset.R'\n  Running 'logSumExp.R'\n  Running 'mean2_subset.R'\n  Running 'mean2.R'\n  Running 'product_subset.R'\n  Running 'product.R'\n  Running 'psortKM.R'\n  Running 'rowAllAnys_subset.R'\n  Running 'rowAllAnys.R'\n  Running 'rowAvgsPerColSet_subset.R'\n  Running 'rowAvgsPerColSet.R'\n  Running 'rowCollapse_subset.R'\n  Running 'rowCollapse.R'\n  Running 'rowCounts_subset.R'\n  Running 'rowCounts.R'\n  Running 'rowCumMinMaxs_subset.R'\n  Running 'rowCumMinMaxs.R'\n  Running 'rowCumprods_subset.R'\n  Running 'rowCumprods.R'\n  Running 'rowCumsums_subset.R'\n  Running 'rowCumsums.R'\n  Running 'rowDiffs_subset.R'\n  Running 'rowDiffs.R'\n  Running 'rowIQRs_subset.R'\n  Running 'rowIQRs.R'\n  Running 'rowLogSumExps_subset.R'\n  Running 'rowLogSumExps.R'\n  Running 'rowMads_subset.R'\n  Running 'rowMads.R'\n  Running 'rowMeans2_subset.R'\n  Running 'rowMeans2.R'\n  Running 'rowMedians_subset.R'\n  Running 'rowMedians.R'\n  Running 'rowOrderStats_subset.R'\n  Running 'rowOrderStats.R'\n  Running 'rowProds_subset.R'\n  Running 'rowProds.R'\n  Running 'rowQuantiles_subset.R'\n  Running 'rowQuantiles.R'\n  Running 'rowRanges_subset.R'\n  Running 'rowRanges.R'\n  Running 'rowRanks_subset.R'\n  Running 'rowRanks.R'\n  Running 'rowSds_subset.R'\n  Running 'rowSds.R'\n  Running 'rowSums2_subset.R'\n  Running 'rowSums2.R'\n  Running 'rowTabulates_subset.R'\n  Running 'rowTabulates.R'\n  Running 'rowVarDiffs_mad,iqr_subset.R'\n  Running 'rowVarDiffs_var,sd_subset.R'\n  Running 'rowVarDiffs.R'\n  Running 'rowVars_subset.R'\n  Running 'rowVars.R'\n  Running 'rowWeightedMeans_subset.R'\n  Running 'rowWeightedMeans.R'\n  Running 'rowWeightedMedians_subset.R'\n  Running 'rowWeightedMedians.R'\n  Running 'rowWeightedVars_subset.R'\n  Running 'rowWeightedVars.R'\n  Running 'signTabulate_subset.R'\n  Running 'signTabulate.R'\n  Running 'sum2_subset.R'\n  Running 'sum2.R'\n  Running 'varDiff_etal_subset.R'\n  Running 'varDiff_etal.R'\n  Running 'weightedMean_subset.R'\n  Running 'weightedMean.R'\n  Running 'weightedMedian_subset.R'\n  Running 'weightedMedian.R'\n  Running 'weightedVar_etal_subset.R'\n  Running 'weightedVar_etal.R'\n  Running 'weightedVar.R'\n  Running 'x_OP_y_subset.R'\n  Running 'x_OP_y.R'\n  Running 'zzz.package-unload.R'\n\nedit_log(\"matrixStats\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nmatrixStats-Ex.Rout\n\n\n\n\nallocArray.Rout\n\n\n\n\nallocMatrix.Rout\n\n\n\n\nallocVector.Rout\n\n\n\n\nanyMissing.Rout\n\n\n\n\nanyMissing_subset.Rout\n\n\n\n\nbenchmark.Rout\n\n\n\n\nbinCounts.Rout\n\n\n\n\nbinCounts_subset.Rout\n\n\n\n\nbinMeans,binCounts.Rout\n\n\n\n\nbinMeans,binCounts_subset.Rout\n\n\n\n\ncount.Rout\n\n\n\n\ncount_subset.Rout\n\n\n\n\ndiff2.Rout\n\n\n\n\ndiff2_subset.Rout\n\n\n\n\nindexByRow.Rout\n\n\n\n\nlogSumExp.Rout\n\n\n\n\nlogSumExp_subset.Rout\n\n\n\n\nmean2.Rout\n\n\n\n\nmean2_subset.Rout\n\n\n\n\nproduct.Rout\n\n\n\n\nproduct_subset.Rout\n\n\n\n\npsortKM.Rout\n\n\n\n\nrowAllAnys.Rout\n\n\n\n\nrowAllAnys_subset.Rout\n\n\n\n\nrowAvgsPerColSet.Rout\n\n\n\n\nrowAvgsPerColSet_subset.Rout\n\n\n\n\nrowCollapse.Rout\n\n\n\n\nrowCollapse_subset.Rout\n\n\n\n\nrowCounts.Rout\n\n\n\n\nrowCounts_subset.Rout\n\n\n\n\nrowCumMinMaxs.Rout\n\n\n\n\nrowCumMinMaxs_subset.Rout\n\n\n\n\nrowCumprods.Rout\n\n\n\n\nrowCumprods_subset.Rout\n\n\n\n\nrowCumsums.Rout\n\n\n\n\nrowCumsums_subset.Rout\n\n\n\n\nrowDiffs.Rout\n\n\n\n\nrowDiffs_subset.Rout\n\n\n\n\nrowIQRs.Rout\n\n\n\n\nrowIQRs_subset.Rout\n\n\n\n\nrowLogSumExps.Rout\n\n\n\n\nrowLogSumExps_subset.Rout\n\n\n\n\nrowMads.Rout\n\n\n\n\nrowMads_subset.Rout\n\n\n\n\nrowMeans2.Rout\n\n\n\n\nrowMeans2_subset.Rout\n\n\n\n\nrowMedians.Rout\n\n\n\n\nrowMedians_subset.Rout\n\n\n\n\nrowOrderStats.Rout\n\n\n\n\nrowOrderStats_subset.Rout\n\n\n\n\nrowProds.Rout\n\n\n\n\nrowProds_subset.Rout\n\n\n\n\nrowQuantiles.Rout\n\n\n\n\nrowQuantiles_subset.Rout\n\n\n\n\nrowRanges.Rout\n\n\n\n\nrowRanges_subset.Rout\n\n\n\n\nrowRanks.Rout\n\n\n\n\nrowRanks_subset.Rout\n\n\n\n\nrowSds.Rout\n\n\n\n\nrowSds_subset.Rout\n\n\n\n\nrowSums2.Rout\n\n\n\n\nrowSums2_subset.Rout\n\n\n\n\nrowTabulates.Rout\n\n\n\n\nrowTabulates_subset.Rout\n\n\n\n\nrowVarDiffs.Rout\n\n\n\n\nrowVarDiffs_mad,iqr_subset.Rout\n\n\n\n\nrowVarDiffs_var,sd_subset.Rout\n\n\n\n\nrowVars.Rout\n\n\n\n\nrowVars_subset.Rout\n\n\n\n\nrowWeightedMeans.Rout\n\n\n\n\nrowWeightedMeans_subset.Rout\n\n\n\n\nrowWeightedMedians.Rout\n\n\n\n\nrowWeightedMedians_subset.Rout\n\n\n\n\nrowWeightedVars.Rout\n\n\n\n\nrowWeightedVars_subset.Rout\n\n\n\n\nsignTabulate.Rout\n\n\n\n\nsignTabulate_subset.Rout\n\n\n\n\nsum2.Rout\n\n\n\n\nsum2_subset.Rout\n\n\n\n\nvarDiff_etal.Rout\n\n\n\n\nvarDiff_etal_subset.Rout\n\n\n\n\nweightedMean.Rout\n\n\n\n\nweightedMean_subset.Rout\n\n\n\n\nweightedMedian.Rout\n\n\n\n\nweightedMedian_subset.Rout\n\n\n\n\nweightedVar.Rout\n\n\n\n\nweightedVar_etal.Rout\n\n\n\n\nweightedVar_etal_subset.Rout\n\n\n\n\nx_OP_y.Rout\n\n\n\n\nx_OP_y_subset.Rout\n\n\n\n\nzzz.package-unload.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_magrittr.html",
    "href": "packages/test_magrittr.html",
    "title": "magrittr",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"magrittr\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/magrittr\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/magrittr/empty_output.Rout\")\nout &lt;- test_pkg(\"magrittr\", outDir=\"packages/magrittr\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'magrittr'\n\n\n  comparing 'magrittr-Ex.Rout' to 'magrittr-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'magrittr'\n  Running 'testthat.R'\n\nedit_log(\"magrittr\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nmagrittr-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_lubridate.html",
    "href": "packages/test_lubridate.html",
    "title": "lubridate",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"lubridate\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/lubridate\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/lubridate/empty_output.Rout\")\nout &lt;- test_pkg(\"lubridate\", outDir=\"packages/lubridate\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'lubridate'\n\n\n  comparing 'lubridate-Ex.Rout' to 'lubridate-Ex.Rout.prev' ... NOTE\n\n\n  1705,1713c1705,1713\n  &lt; [1] 2024-11-22 18:41:41 GMT--2024-11-23 18:41:41 GMT\n  &lt; [2] 2024-11-23 18:41:41 GMT--2024-11-24 18:41:41 GMT\n  &lt; [3] 2024-11-24 18:41:41 GMT--2024-11-25 18:41:41 GMT\n  &lt; [4] 2024-11-25 18:41:41 GMT--2024-11-26 18:41:41 GMT\n  &lt; [5] 2024-11-26 18:41:41 GMT--2024-11-27 18:41:41 GMT\n  &lt; [6] 2024-11-27 18:41:41 GMT--2024-11-28 18:41:41 GMT\n  &lt; [7] 2024-11-28 18:41:41 GMT--2024-11-29 18:41:41 GMT\n  &lt; [8] 2024-11-29 18:41:41 GMT--2024-11-30 18:41:41 GMT\n  &lt; [9] 2024-11-30 18:41:41 GMT--2024-12-01 18:41:41 GMT\n  ---\n  &gt; [1] 2024-11-22 14:50:07 GMT--2024-11-23 14:50:07 GMT\n  &gt; [2] 2024-11-23 14:50:07 GMT--2024-11-24 14:50:07 GMT\n  &gt; [3] 2024-11-24 14:50:07 GMT--2024-11-25 14:50:07 GMT\n  &gt; [4] 2024-11-25 14:50:07 GMT--2024-11-26 14:50:07 GMT\n  &gt; [5] 2024-11-26 14:50:07 GMT--2024-11-27 14:50:07 GMT\n  &gt; [6] 2024-11-27 14:50:07 GMT--2024-11-28 14:50:07 GMT\n  &gt; [7] 2024-11-28 14:50:07 GMT--2024-11-29 14:50:07 GMT\n  &gt; [8] 2024-11-29 14:50:07 GMT--2024-11-30 14:50:07 GMT\n  &gt; [9] 2024-11-30 14:50:07 GMT--2024-12-01 14:50:07 GMT\n  2008c2008\n  &lt; [1] \"2024-11-21 18:41:41 GMT\"\n  ---\n  &gt; [1] \"2024-11-21 14:50:07 GMT\"\n  2010c2010\n  &lt; [1] \"2024-11-21 18:41:41 GMT\"\n  ---\n  &gt; [1] \"2024-11-21 14:50:07 GMT\"\n  2012c2012\n  &lt; [1] \"2024-11-21 18:41:41 GMT\"\n  ---\n  &gt; [1] \"2024-11-21 14:50:07 GMT\"\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'lubridate'\n  Running 'testthat.R'\n\nedit_log(\"lubridate\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nlubridate-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_lme4.html",
    "href": "packages/test_lme4.html",
    "title": "lme4",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"lme4\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/lme4\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/lme4/empty_output.Rout\")\nout &lt;- test_pkg(\"lme4\", outDir=\"packages/lme4\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'lme4'\n\n\n  comparing 'lme4-Ex.Rout' to 'lme4-Ex.Rout.prev' ... NOTE\n\n\n  3685c3685\n  &lt;   0.208   0.001   0.208 \n  ---\n  &gt;   0.202   0.003   0.203 \n  3690c3690\n  &lt;   0.614   0.079   0.574 \n  ---\n  &gt;   0.614   0.100   0.519 \n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'lme4'\n  Running 'AAAtest-all.R'\n  Running 'agridat_gotway.R'\n  Running 'bootMer.R'\n  Running 'boundary.R'\n  Running 'confint.R'\n  Running 'devCritFun.R'\n  Running 'drop.R'\n  Running 'drop1contrasts.R'\n  Running 'dynload.R'\n  Running 'elston.R'\n  Running 'evalCall.R'\n  Running 'extras.R'\n  Running 'falsezero_dorie.R'\n  Running 'fewlevels.R'\n  Running 'getME.R'\n  Running 'glmer-1.R'\n  Running 'glmerControlPass.R'\n  Running 'glmerWarn.R'\n  Running 'glmmExt.R'\n  Running 'glmmWeights.R'\n  Running 'hatvalues.R'\n  Running 'HSAURtrees.R'\n  Running 'is.R'\n  Running 'lme4_nlme.R'\n  Running 'lmer-0.R'\n  Running 'lmer-1.R'\n  Running 'lmer-conv.R'\n  Running 'lmer2_ex.R'\n  Running 'lmList-tst.R'\n  Running 'methods.R'\n  Running 'minval.R'\n  Running 'modFormula.R'\n  Running 'nbinom.R'\n  Running 'nlmer-conv.R'\n  Running 'nlmer.R'\n  Running 'offset.R'\n  Running 'optimizer.R'\n  Running 'polytomous.R'\n  Running 'predict_basis.R'\n  Running 'predsim.R'\n  Running 'priorWeights.R'\n  Running 'priorWeightsModComp.R'\n  Running 'prLogistic.R'\n  Running 'profile-tst.R'\n  Running 'refit.R'\n  Running 'REMLdev.R'\n  Running 'resids.R'\n  Running 'respiratory.R'\n  Running 'simulate.R'\n  Running 'ST.R'\n  Running 'test-glmernbref.R'\n  Running 'testcolonizer.R'\n  Running 'testcrab.R'\n  Running 'testOptControl.R'\n  Running 'throw.R'\n  Running 'varcorr.R'\n  Running 'vcov-etc.R'\n\nedit_log(\"lme4\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nlme4-Ex.Rout\n\n\n\n\nAAAtest-all.Rout\n\n\n\n\nHSAURtrees.Rout\n\n\n\n\nREMLdev.Rout\n\n\n\n\nST.Rout\n\n\n\n\nagridat_gotway.Rout\n\n\n\n\nbootMer.Rout\n\n\n\n\nboundary.Rout\n\n\n\n\nconfint.Rout\n\n\n\n\ndevCritFun.Rout\n\n\n\n\ndrop.Rout\n\n\n\n\ndrop1contrasts.Rout\n\n\n\n\ndynload.Rout\n\n\n\n\nelston.Rout\n\n\n\n\nevalCall.Rout\n\n\n\n\nextras.Rout\n\n\n\n\nfalsezero_dorie.Rout\n\n\n\n\nfewlevels.Rout\n\n\n\n\ngetME.Rout\n\n\n\n\nglmer-1.Rout\n\n\n\n\nglmerControlPass.Rout\n\n\n\n\nglmerWarn.Rout\n\n\n\n\nglmmExt.Rout\n\n\n\n\nglmmWeights.Rout\n\n\n\n\nhatvalues.Rout\n\n\n\n\nis.Rout\n\n\n\n\nlmList-tst.Rout\n\n\n\n\nlme4_nlme.Rout\n\n\n\n\nlmer-0.Rout\n\n\n\n\nlmer-1.Rout\n\n\n\n\nlmer-conv.Rout\n\n\n\n\nlmer2_ex.Rout\n\n\n\n\nmethods.Rout\n\n\n\n\nminval.Rout\n\n\n\n\nmodFormula.Rout\n\n\n\n\nnbinom.Rout\n\n\n\n\nnlmer-conv.Rout\n\n\n\n\nnlmer.Rout\n\n\n\n\noffset.Rout\n\n\n\n\noptimizer.Rout\n\n\n\n\npolytomous.Rout\n\n\n\n\nprLogistic.Rout\n\n\n\n\npredict_basis.Rout\n\n\n\n\npredsim.Rout\n\n\n\n\npriorWeights.Rout\n\n\n\n\npriorWeightsModComp.Rout\n\n\n\n\nprofile-tst.Rout\n\n\n\n\nrefit.Rout\n\n\n\n\nresids.Rout\n\n\n\n\nrespiratory.Rout\n\n\n\n\nsimulate.Rout\n\n\n\n\ntest-glmernbref.Rout\n\n\n\n\ntestOptControl.Rout\n\n\n\n\ntestcolonizer.Rout\n\n\n\n\ntestcrab.Rout\n\n\n\n\nthrow.Rout\n\n\n\n\nvarcorr.Rout\n\n\n\n\nvcov-etc.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_listenv.html",
    "href": "packages/test_listenv.html",
    "title": "listenv",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"listenv\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/listenv\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/listenv/empty_output.Rout\")\nout &lt;- test_pkg(\"listenv\", outDir=\"packages/listenv\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'listenv'\n\n\n  comparing 'listenv-Ex.Rout' to 'listenv-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'listenv'\n  Running 'aperm.R'\n  Running 'as.listenv.R'\n  Running 'as.vector.R'\n  Running 'get_variable,dimensions.R'\n  Running 'get_variable.R'\n  Running 'lapply.R'\n  Running 'listenv,dimensions.R'\n  Running 'listenv.R'\n  Running 'parse_env_subset,dimensions.R'\n  Running 'parse_env_subset.R'\n  Running 'undim.R'\n  Running 'utils.R'\n\nedit_log(\"listenv\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nlistenv-Ex.Rout\n\n\n\n\naperm.Rout\n\n\n\n\nas.listenv.Rout\n\n\n\n\nas.vector.Rout\n\n\n\n\nget_variable,dimensions.Rout\n\n\n\n\nget_variable.Rout\n\n\n\n\nlapply.Rout\n\n\n\n\nlistenv,dimensions.Rout\n\n\n\n\nlistenv.Rout\n\n\n\n\nparse_env_subset,dimensions.Rout\n\n\n\n\nparse_env_subset.Rout\n\n\n\n\nundim.Rout\n\n\n\n\nutils.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_lazyeval.html",
    "href": "packages/test_lazyeval.html",
    "title": "lazyeval",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"lazyeval\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/lazyeval\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/lazyeval/empty_output.Rout\")\nout &lt;- test_pkg(\"lazyeval\", outDir=\"packages/lazyeval\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'lazyeval'\n\n\n  comparing 'lazyeval-Ex.Rout' to 'lazyeval-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'lazyeval'\n  Running 'testthat.R'\n\nedit_log(\"lazyeval\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nlazyeval-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_latticeExtra.html",
    "href": "packages/test_latticeExtra.html",
    "title": "latticeExtra",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"latticeExtra\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/latticeExtra\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/latticeExtra/empty_output.Rout\")\nout &lt;- test_pkg(\"latticeExtra\", outDir=\"packages/latticeExtra\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'latticeExtra'\n\n\n  comparing 'latticeExtra-Ex.Rout' to 'latticeExtra-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'latticeExtra'\n  Running 'c.trellis.R'\n  Running 'layer.R'\n\nedit_log(\"latticeExtra\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nlatticeExtra-Ex.Rout\n\n\n\n\nc.trellis.Rout\n\n\n\n\nlayer.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_labeling.html",
    "href": "packages/test_labeling.html",
    "title": "labeling",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"labeling\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/labeling\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/labeling/empty_output.Rout\")\nout &lt;- test_pkg(\"labeling\", outDir=\"packages/labeling\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'labeling'\n\n\n  comparing 'labeling-Ex.Rout' to 'labeling-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"labeling\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nlabeling-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_kinship2.html",
    "href": "packages/test_kinship2.html",
    "title": "kinship2",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"kinship2\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/kinship2\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/kinship2/empty_output.Rout\")\nout &lt;- test_pkg(\"kinship2\", outDir=\"packages/kinship2\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'kinship2'\n\n\n  comparing 'kinship2-Ex.Rout' to 'kinship2-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'kinship2'\n  Running 'failure.R'\n  comparing 'failure.Rout' to 'failure.Rout.save' ... OK\n  Running 'makefam.R'\n  comparing 'makefam.Rout' to 'makefam.Rout.save' ... OK\n  Running 'monozygote.R'\n  comparing 'monozygote.Rout' to 'monozygote.Rout.save' ... OK\n  Running 'subscript.R'\n  comparing 'subscript.Rout' to 'subscript.Rout.save' ... OK\n  Running 'test.fixParents.R'\n  comparing 'test.fixParents.Rout' to 'test.fixParents.Rout.save' ... OK\n  Running 'test.kinX.R'\n  comparing 'test.kinX.Rout' to 'test.kinX.Rout.save' ... OK\n  Running 'test.pedigree.shrink.R'\n  comparing 'test.pedigree.shrink.Rout' to 'test.pedigree.shrink.Rout.save' ... OK\n  Running 'test.pedigree.unrelated.R'\n  comparing 'test.pedigree.unrelated.Rout' to 'test.pedigree.unrelated.Rout.save' ... OK\n  Running 'twin.R'\n  comparing 'twin.Rout' to 'twin.Rout.save' ... OK\n\nedit_log(\"kinship2\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nkinship2-Ex.Rout\n\n\n\n\nfailure.Rout\n\n\n\n\nmakefam.Rout\n\n\n\n\nmonozygote.Rout\n\n\n\n\nsubscript.Rout\n\n\n\n\ntest.fixParents.Rout\n\n\n\n\ntest.kinX.Rout\n\n\n\n\ntest.pedigree.shrink.Rout\n\n\n\n\ntest.pedigree.unrelated.Rout\n\n\n\n\ntwin.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_jsonlite.html",
    "href": "packages/test_jsonlite.html",
    "title": "jsonlite",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"jsonlite\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/jsonlite\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/jsonlite/empty_output.Rout\")\nout &lt;- test_pkg(\"jsonlite\", outDir=\"packages/jsonlite\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'jsonlite'\n\n\n  comparing 'jsonlite-Ex.Rout' to 'jsonlite-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'jsonlite'\n  Running 'testthat.R'\n\nedit_log(\"jsonlite\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\njsonlite-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_jpeg.html",
    "href": "packages/test_jpeg.html",
    "title": "jpeg",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"jpeg\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/jpeg\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/jpeg/empty_output.Rout\")\nout &lt;- test_pkg(\"jpeg\", outDir=\"packages/jpeg\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'jpeg'\n\n\n  comparing 'jpeg-Ex.Rout' to 'jpeg-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'jpeg'\n  Running 'jpeg.R'\n\nedit_log(\"jpeg\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\njpeg-Ex.Rout\n\n\n\n\njpeg.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_iterators.html",
    "href": "packages/test_iterators.html",
    "title": "iterators",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"iterators\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/iterators\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/iterators/empty_output.Rout\")\nout &lt;- test_pkg(\"iterators\", outDir=\"packages/iterators\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'iterators'\n\n\n  comparing 'iterators-Ex.Rout' to 'iterators-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'iterators'\n  Running 'doRUnit.R'\n\nedit_log(\"iterators\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\niterators-Ex.Rout\n\n\n\n\ndoRUnit.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_interp.html",
    "href": "packages/test_interp.html",
    "title": "interp",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"interp\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/interp\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/interp/empty_output.Rout\")\nout &lt;- test_pkg(\"interp\", outDir=\"packages/interp\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'interp'\n\n\n  comparing 'interp-Ex.Rout' to 'interp-Ex.Rout.prev' ... NOTE\n\n\n  908c908\n  &lt;   0.148   0.000   0.149 \n  ---\n  &gt;   0.151   0.000   0.157 \n  916c916\n  &lt;   0.338   0.000   0.346 \n  ---\n  &gt;   0.338   0.000   0.340 \n  953c953\n  &lt;   0.006   0.000   0.006 \n  ---\n  &gt;   0.005   0.000   0.006 \n\n\nchecks for tests\n\nedit_log(\"interp\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ninterp-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_ini.html",
    "href": "packages/test_ini.html",
    "title": "ini",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"ini\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/ini\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/ini/empty_output.Rout\")\nout &lt;- test_pkg(\"ini\", outDir=\"packages/ini\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'ini'\n\n\n  comparing 'ini-Ex.Rout' to 'ini-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'ini'\n  Running 'testthat.R'\n\nedit_log(\"ini\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nini-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_ids.html",
    "href": "packages/test_ids.html",
    "title": "ids",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"ids\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/ids\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/ids/empty_output.Rout\")\nout &lt;- test_pkg(\"ids\", outDir=\"packages/ids\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'ids'\n\n\n  comparing 'ids-Ex.Rout' to 'ids-Ex.Rout.prev' ... NOTE\n\n\n  128c128\n  &lt; [1] \"024ced1cb334976f72077f456a96cd3d\"\n  ---\n  &gt; [1] \"a04e49e0d9100c916298ddf2d3144b2b\"\n  132,136c132,136\n  &lt;  [1] \"5347d1c184203ca02e4e3511fc631ae1\" \"4fa5b06bdfeedb984460a1ebc9327137\"\n  &lt;  [3] \"9e9ea009f676f632bbc93b7da9bb777c\" \"3d48778883ebb34dbab522a869786a12\"\n  &lt;  [5] \"526b0c46c3a102020f0a0cf5aebfe96d\" \"6d917f6e529048e2fc2c4aee3cadba14\"\n  &lt;  [7] \"77cbf447020884fa810fa9ff763a78ae\" \"c7668e03e54978d8f10f11130bde5d79\"\n  &lt;  [9] \"fed0ede9b1ae1137336191f40dac595e\" \"d46e33dc0a7ff5ec0b85a223adb3705a\"\n  ---\n  &gt;  [1] \"34b4fe3703853bd6aa0c3592cd468fbb\" \"ca6f995fb907cc13cc58e40291a7a110\"\n  &gt;  [3] \"5e02da37cf05f3fff6d47605511168be\" \"d26abc990970bac947be665013e9c915\"\n  &gt;  [5] \"747027a36c05c379b56a3af8a1447920\" \"61d8832194b50da5c22f65a61f427074\"\n  &gt;  [7] \"410b30b376f8f82a9bbc108df1d42673\" \"c386246548942d01454d14b047de9cde\"\n  &gt;  [9] \"908d452795055f01a284eb1ef4cf81b4\" \"d25a308eed9e5b8da4d80fa09edb86d3\"\n  140c140\n  &lt; [1] \"0e13c6dd1fbd3006\"\n  ---\n  &gt; [1] \"16158a549a50418b\"\n  146c146\n  &lt; [1] \"41ebfde4185823313ecf358eca7ef834\"\n  ---\n  &gt; [1] \"0e4da5c9daa5f87dea0e8156e0e7edaa\"\n  149c149\n  &lt; [1] \"a71824e032a89300e41cac74f11926e0\"\n  ---\n  &gt; [1] \"c8733d7a4587707d7f7251d47a161196\"\n  168,170c168,170\n  &lt;  [1] \"6f76178fc4c0b0c8\" \"05abd4e426ccb115\" \"dfe887ffe9dcc10d\" \"b25e24d83a5dacb3\"\n  &lt;  [5] \"a156b2c3b4aa74bb\" \"5c85def3bcb204a3\" \"2da861f4652f0391\" \"de2ba9fd2853d396\"\n  &lt;  [9] \"40c63de776135083\" \"9e0199b743a5804f\"\n  ---\n  &gt;  [1] \"056b9075668b3d3f\" \"4b38778c71eb5c73\" \"1d515494b81ed732\" \"4408270444f109e1\"\n  &gt;  [5] \"4bd981fb37661be3\" \"ca9813b4c9d0e376\" \"2e84f0a078e1436f\" \"2cabb3101e02eb95\"\n  &gt;  [9] \"a548a8d9555c97b8\" \"c8c33bcb77bfe0ce\"\n  251c251\n  &lt; [1] \"3becf3c2-2a64-4248-bb0a-d9e7be9b81fe\"\n  ---\n  &gt; [1] \"c67f854a-ce0c-4b4c-910b-08a7eadc55e3\"\n  255,264c255,264\n  &lt;  [1] \"9c0c4a75-feaa-4724-9de0-41d4dba93f84\"\n  &lt;  [2] \"4a25b2fc-bf66-4e4d-8f5c-eff0cd91991e\"\n  &lt;  [3] \"862a8cb4-0432-4cd2-bbac-9728b11281c1\"\n  &lt;  [4] \"d6fa9ae4-b8a8-4ea5-8c5f-4de53074fb62\"\n  &lt;  [5] \"eeb0d6a9-ebe1-4b35-bc9f-529d454252c0\"\n  &lt;  [6] \"62c52d39-0931-4497-abf3-5565bc2b0334\"\n  &lt;  [7] \"ec8633b2-b28f-4fcb-bdd7-ffe8728949be\"\n  &lt;  [8] \"5c832e21-1e67-4486-83e0-9b4357c05f53\"\n  &lt;  [9] \"53237ef8-8960-494a-bf53-a07269abc0d4\"\n  &lt; [10] \"fdfc401d-f316-488e-a831-cec207b82b0a\"\n  ---\n  &gt;  [1] \"94efc292-f3e5-445e-82b2-4a26a02d975c\"\n  &gt;  [2] \"cda1cffc-d2a8-474a-bfe3-7837e58d0085\"\n  &gt;  [3] \"6de09ac0-6f7a-45bf-95f5-b7084e0a356c\"\n  &gt;  [4] \"d023dc61-9e3c-418b-81ad-f85b9306e629\"\n  &gt;  [5] \"bdebcc18-ab85-4445-812d-edc784b36d55\"\n  &gt;  [6] \"6be9f558-962c-48b2-a2e3-0287977fe410\"\n  &gt;  [7] \"166222de-a19e-4651-bb21-91d7dc7ced6a\"\n  &gt;  [8] \"ae30f767-7c64-40c1-b126-d1b79eb40fdd\"\n  &gt;  [9] \"b57dcab7-3d3f-4326-815f-4d92e37eb988\"\n  &gt; [10] \"7562860f-b045-4eb2-8148-6de64b5c829f\"\n  268c268\n  &lt; [1] \"cde73689427048a6876e21b74f842ad9\"\n  ---\n  &gt; [1] \"9cdfe70193a040a2b71b397a67adabff\"\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'ids'\n  Running 'testthat.R'\n\nedit_log(\"ids\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nids-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_httr2.html",
    "href": "packages/test_httr2.html",
    "title": "httr2",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"httr2\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/httr2\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/httr2/empty_output.Rout\")\nout &lt;- test_pkg(\"httr2\", outDir=\"packages/httr2\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'httr2'\n\n\nError: running examples in 'httr2-Ex.R' failed\n\nedit_log(\"httr2\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_httpuv.html",
    "href": "packages/test_httpuv.html",
    "title": "httpuv",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"httpuv\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/httpuv\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/httpuv/empty_output.Rout\")\nout &lt;- test_pkg(\"httpuv\", outDir=\"packages/httpuv\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'httpuv'\n\n\n  comparing 'httpuv-Ex.Rout' to 'httpuv-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'httpuv'\n  Running 'testthat.R'\n\nedit_log(\"httpuv\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nhttpuv-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_htmltools.html",
    "href": "packages/test_htmltools.html",
    "title": "htmltools",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"htmltools\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/htmltools\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/htmltools/empty_output.Rout\")\nout &lt;- test_pkg(\"htmltools\", outDir=\"packages/htmltools\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'htmltools'\n\n\n  comparing 'htmltools-Ex.Rout' to 'htmltools-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'htmltools'\n  Running 'test-all.R'\n\nedit_log(\"htmltools\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nhtmltools-Ex.Rout\n\n\n\n\ntest-all.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_hms.html",
    "href": "packages/test_hms.html",
    "title": "hms",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"hms\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/hms\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/hms/empty_output.Rout\")\nout &lt;- test_pkg(\"hms\", outDir=\"packages/hms\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'hms'\n\n\n  comparing 'hms-Ex.Rout' to 'hms-Ex.Rout.prev' ... NOTE\n\n\n  36c36\n  &lt; 18:21:37.994542\n  ---\n  &gt; 14:30:27.661511\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'hms'\n  Running 'testthat.R'\n\nedit_log(\"hms\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nhms-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_haven.html",
    "href": "packages/test_haven.html",
    "title": "haven",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"haven\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/haven\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/haven/empty_output.Rout\")\nout &lt;- test_pkg(\"haven\", outDir=\"packages/haven\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'haven'\n\n\n  comparing 'haven-Ex.Rout' to 'haven-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'haven'\n  Running 'testthat.R'\n\nedit_log(\"haven\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nhaven-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_gsl.html",
    "href": "packages/test_gsl.html",
    "title": "gsl",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"gsl\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/gsl\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/gsl/empty_output.Rout\")\nout &lt;- test_pkg(\"gsl\", outDir=\"packages/gsl\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'gsl'\n\n\n  comparing 'gsl-Ex.Rout' to 'gsl-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"gsl\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ngsl-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_gridGraphics.html",
    "href": "packages/test_gridGraphics.html",
    "title": "gridGraphics",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"gridGraphics\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/gridGraphics\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/gridGraphics/empty_output.Rout\")\nout &lt;- test_pkg(\"gridGraphics\", outDir=\"packages/gridGraphics\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'gridGraphics'\n\n\n  comparing 'gridGraphics-Ex.Rout' to 'gridGraphics-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'gridGraphics'\n  Running 'demo-graphics.R'\n\nedit_log(\"gridGraphics\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ngridGraphics-Ex.Rout\n\n\n\n\ndemo-graphics.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_googlesheets4.html",
    "href": "packages/test_googlesheets4.html",
    "title": "googlesheets4",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"googlesheets4\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/googlesheets4\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/googlesheets4/empty_output.Rout\")\nout &lt;- test_pkg(\"googlesheets4\", outDir=\"packages/googlesheets4\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'googlesheets4'\n\n\n  comparing 'googlesheets4-Ex.Rout' to 'googlesheets4-Ex.Rout.prev' ... NOTE\n\n\n  184a185\n  &gt; ✖ Request failed [503]. Retry 1 happens in 1.8 seconds ...\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'googlesheets4'\n  Running 'spelling.R'\n  Running 'testthat.R'\n\nedit_log(\"googlesheets4\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ngooglesheets4-Ex.Rout\n\n\n\n\nspelling.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_glue.html",
    "href": "packages/test_glue.html",
    "title": "glue",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"glue\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/glue\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/glue/empty_output.Rout\")\nout &lt;- test_pkg(\"glue\", outDir=\"packages/glue\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'glue'\n\n\n  comparing 'glue-Ex.Rout' to 'glue-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'glue'\n  Running 'testthat.R'\n\nedit_log(\"glue\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nglue-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_glmnet.html",
    "href": "packages/test_glmnet.html",
    "title": "glmnet",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"glmnet\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/glmnet\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/glmnet/empty_output.Rout\")\nout &lt;- test_pkg(\"glmnet\", outDir=\"packages/glmnet\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'glmnet'\n\n\n  comparing 'glmnet-Ex.Rout' to 'glmnet-Ex.Rout.prev' ... NOTE\n\n\n  1522c1522\n  &lt;   0.376   0.000   0.386 \n  ---\n  &gt;   0.379   0.001   0.392 \n  1525c1525\n  &lt;   0.189   0.016   0.215 \n  ---\n  &gt;   0.197   0.017   0.245 \n\n\nchecks for tests\n\nedit_log(\"glmnet\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nglmnet-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_gh.html",
    "href": "packages/test_gh.html",
    "title": "gh",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"gh\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/gh\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/gh/empty_output.Rout\")\nout &lt;- test_pkg(\"gh\", outDir=\"packages/gh\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'gh'\n\n\n  comparing 'gh-Ex.Rout' to 'gh-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'gh'\n  Running 'testthat.R'\n\nedit_log(\"gh\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ngh-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_ggplot2.html",
    "href": "packages/test_ggplot2.html",
    "title": "ggplot2",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"ggplot2\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/ggplot2\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/ggplot2/empty_output.Rout\")\nout &lt;- test_pkg(\"ggplot2\", outDir=\"packages/ggplot2\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'ggplot2'\n\n\n  comparing 'ggplot2-Ex.Rout' to 'ggplot2-Ex.Rout.prev' ... NOTE\n\n\n  633,636c633,636\n  &lt; 2     build     0.038        0   0.040\n  &lt; 3    render     0.038        0   0.038\n  &lt; 4      draw     0.042        0   0.042\n  &lt; 5     TOTAL     0.122        0   0.124\n  ---\n  &gt; 2     build     0.033        0   0.033\n  &gt; 3    render     0.034        0   0.033\n  &gt; 4      draw     0.037        0   0.038\n  &gt; 5     TOTAL     0.108        0   0.108\n  640,643c640,643\n  &lt; 2     build     0.081        0   0.085\n  &lt; 3    render     0.092        0   0.095\n  &lt; 4      draw     0.074        0   0.076\n  &lt; 5     TOTAL     0.251        0   0.261\n  ---\n  &gt; 2     build     0.073        0   0.074\n  &gt; 3    render     0.081        0   0.081\n  &gt; 4      draw     0.068        0   0.068\n  &gt; 5     TOTAL     0.226        0   0.228\n  649,653c649,653\n  &lt; 1 construct     0.004        0   0.003\n  &lt; 2     build     0.038        0   0.038\n  &lt; 3    render     0.038        0   0.039\n  &lt; 4      draw     0.042        0   0.042\n  &lt; 5     TOTAL     0.122        0   0.122\n  ---\n  &gt; 1 construct     0.003    0.000   0.003\n  &gt; 2     build     0.033    0.001   0.033\n  &gt; 3    render     0.034    0.000   0.034\n  &gt; 4      draw     0.038    0.001   0.039\n  &gt; 5     TOTAL     0.108    0.002   0.109\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'ggplot2'\n  Running 'testthat.R'\nError: running the tests in 'testthat.R' failed\n\nedit_log(\"ggplot2\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nggplot2-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_ggalluvial.html",
    "href": "packages/test_ggalluvial.html",
    "title": "ggalluvial",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"ggalluvial\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/ggalluvial\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/ggalluvial/empty_output.Rout\")\nout &lt;- test_pkg(\"ggalluvial\", outDir=\"packages/ggalluvial\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'ggalluvial'\n\n\n  comparing 'ggalluvial-Ex.Rout' to 'ggalluvial-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'ggalluvial'\n  Running 'testthat.R'\n\nedit_log(\"ggalluvial\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nggalluvial-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_generics.html",
    "href": "packages/test_generics.html",
    "title": "generics",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"generics\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/generics\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/generics/empty_output.Rout\")\nout &lt;- test_pkg(\"generics\", outDir=\"packages/generics\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'generics'\n\n\n  comparing 'generics-Ex.Rout' to 'generics-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'generics'\n  Running 'testthat.R'\n\nedit_log(\"generics\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ngenerics-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_gargle.html",
    "href": "packages/test_gargle.html",
    "title": "gargle",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"gargle\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/gargle\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/gargle/empty_output.Rout\")\nout &lt;- test_pkg(\"gargle\", outDir=\"packages/gargle\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'gargle'\n\n\n  comparing 'gargle-Ex.Rout' to 'gargle-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'gargle'\n  Running 'spelling.R'\n  Running 'testthat.R'\n\nedit_log(\"gargle\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ngargle-Ex.Rout\n\n\n\n\nspelling.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_future.html",
    "href": "packages/test_future.html",
    "title": "future",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"future\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/future\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/future/empty_output.Rout\")\nout &lt;- test_pkg(\"future\", outDir=\"packages/future\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'future'\n\n\n  comparing 'future-Ex.Rout' to 'future-Ex.Rout.prev' ... NOTE\n\n\n  297c297\n  &lt; Owner process: be69dde0-7424-e1fd-6741-530d8300f9f8\n  ---\n  &gt; Owner process: c21dc6b3-4a34-59e8-52f3-f99e8a918d2c\n  322c322\n  &lt; Owner process: be69dde0-7424-e1fd-6741-530d8300f9f8\n  ---\n  &gt; Owner process: c21dc6b3-4a34-59e8-52f3-f99e8a918d2c\n  352c352\n  &lt; Owner process: be69dde0-7424-e1fd-6741-530d8300f9f8\n  ---\n  &gt; Owner process: c21dc6b3-4a34-59e8-52f3-f99e8a918d2c\n  374c374\n  &lt; Owner process: be69dde0-7424-e1fd-6741-530d8300f9f8\n  ---\n  &gt; Owner process: c21dc6b3-4a34-59e8-52f3-f99e8a918d2c\n  396c396\n  &lt; Owner process: be69dde0-7424-e1fd-6741-530d8300f9f8\n  ---\n  &gt; Owner process: c21dc6b3-4a34-59e8-52f3-f99e8a918d2c\n  425c425\n  &lt; Owner process: be69dde0-7424-e1fd-6741-530d8300f9f8\n  ---\n  &gt; Owner process: c21dc6b3-4a34-59e8-52f3-f99e8a918d2c\n  448c448\n  &lt; Owner process: be69dde0-7424-e1fd-6741-530d8300f9f8\n  ---\n  &gt; Owner process: c21dc6b3-4a34-59e8-52f3-f99e8a918d2c\n  471c471\n  &lt; Owner process: be69dde0-7424-e1fd-6741-530d8300f9f8\n  ---\n  &gt; Owner process: c21dc6b3-4a34-59e8-52f3-f99e8a918d2c\n  495c495\n  &lt; Owner process: be69dde0-7424-e1fd-6741-530d8300f9f8\n  ---\n  &gt; Owner process: c21dc6b3-4a34-59e8-52f3-f99e8a918d2c\n  554c554\n  &lt; 1 318476 4.4.0   Linux 6.8.0-48-generic\n  ---\n  &gt; 1 145608 4.4.0   Linux 6.8.0-48-generic\n  561,562c561,562\n  &lt; 1      1 318624 4.4.0   Linux 6.8.0-48-generic\n  &lt; 2      2 318625 4.4.0   Linux 6.8.0-48-generic\n  ---\n  &gt; 1      1 145808 4.4.0   Linux 6.8.0-48-generic\n  &gt; 2      2 145807 4.4.0   Linux 6.8.0-48-generic\n  620a621,622\n  &gt; Warning in supportsMulticoreAndRStudio(...) :\n  &gt;   [ONE-TIME WARNING] Forked processing ('multicore') is not supported when running R from RStudio because it is considered unstable. For more details, how to control forked processing or not, and how to silence this warning in future R sessions, see ?parallelly::supportsMulticore\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'future'\n  Running '000.sessionDetails.R'\n  Running 'adhoc_native_to_utf8.R'\n  Running 'backtrace.R'\n  Running 'bquote.R'\n  Running 'capture_journals.R'\n  Running 'cluster-missing-future-pkg.R'\n  Running 'cluster,worker-termination.R'\n  Running 'cluster.R'\n  Running 'ClusterRegistry.R'\n  Running 'constant.R'\n  Running 'demo.R'\n  Running 'dotdotdot.R'\n  Running 'early-signaling.R'\n  Running 'Future-class.R'\n  Running 'future,labels.R'\n  Running 'future,optsenvvars.R'\n  Running 'future.R'\n  Running 'futureAssign_OP_with_environment.R'\n  Running 'futureAssign_OP_with_listenv.R'\n  Running 'futureAssign_OP.R'\n  Running 'futureAssign.R'\n  Running 'futureCall.R'\n  Running 'FutureError.R'\n  Running 'FutureGlobals.R'\n  Running 'futureOf_with_environment.R'\n  Running 'futureOf_with_listenv.R'\n  Running 'futureOf.R'\n  Running 'FutureRegistry.R'\n  Running 'futures.R'\n  Running 'futureSessionInfo.R'\n  Running 'globals,formulas.R'\n  Running 'globals,locals.R'\n  Running 'globals,manual.R'\n  Running 'globals,NSE.R'\n  Running 'globals,resolve.R'\n  Running 'globals,S4methods.R'\n  Running 'globals,subassignment.R'\n  Running 'globals,toolarge.R'\n  Running 'globals,tricky_recursive.R'\n  Running 'globals,tricky.R'\n  Running 'globalsOf,tweaks.R'\n  Running 'immediateCondition.R'\n  Running 'invalid-owner.R'\n  Running 'mandelbrot.R'\n  Running 'mpi.R'\n  Running 'multicore,multithreading.R'\n  Running 'multicore,worker-termination.R'\n  Running 'multicore.R'\n  Running 'multisession.R'\n  Running 'nbrOfWorkers.R'\n  Running 'nested_futures,mc.cores.R'\n  Running 'nested_futures.R'\n  Running 'non-exportable,connections.R'\n  Running 'objectSize.R'\n  Running 'plan.R'\n  Running 'relaying,muffle.R'\n  Running 'relaying,split.R'\n  Running 'relaying.R'\n  Running 'requestCore.R'\n  Running 'requestNode.R'\n  Running 'reserved-keyword-functions.R'\n  Running 'resolve.R'\n  Running 'resolved-non-blocking-test.R'\n  Running 'rng_utils.R'\n  Running 'rng.R'\n  Running 'sequential.R'\n  Running 'sessionDetails.R'\n  Running 'startup.R'\n  Running 'stdout.R'\n  Running 'tweak.R'\n  Running 'utils.R'\n  Running 'uuid.R'\n  Running 'whichIndex.R'\n\nedit_log(\"future\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nfuture-Ex.Rout\n\n\n\n\n000.sessionDetails.Rout\n\n\n\n\nClusterRegistry.Rout\n\n\n\n\nFuture-class.Rout\n\n\n\n\nFutureError.Rout\n\n\n\n\nFutureGlobals.Rout\n\n\n\n\nFutureRegistry.Rout\n\n\n\n\nadhoc_native_to_utf8.Rout\n\n\n\n\nbacktrace.Rout\n\n\n\n\nbquote.Rout\n\n\n\n\ncapture_journals.Rout\n\n\n\n\ncluster,worker-termination.Rout\n\n\n\n\ncluster-missing-future-pkg.Rout\n\n\n\n\ncluster.Rout\n\n\n\n\nconstant.Rout\n\n\n\n\ndemo.Rout\n\n\n\n\ndotdotdot.Rout\n\n\n\n\nearly-signaling.Rout\n\n\n\n\nfuture,labels.Rout\n\n\n\n\nfuture,optsenvvars.Rout\n\n\n\n\nfuture.Rout\n\n\n\n\nfutureAssign.Rout\n\n\n\n\nfutureAssign_OP.Rout\n\n\n\n\nfutureAssign_OP_with_environment.Rout\n\n\n\n\nfutureAssign_OP_with_listenv.Rout\n\n\n\n\nfutureCall.Rout\n\n\n\n\nfutureOf.Rout\n\n\n\n\nfutureOf_with_environment.Rout\n\n\n\n\nfutureOf_with_listenv.Rout\n\n\n\n\nfutureSessionInfo.Rout\n\n\n\n\nfutures.Rout\n\n\n\n\nglobals,NSE.Rout\n\n\n\n\nglobals,S4methods.Rout\n\n\n\n\nglobals,formulas.Rout\n\n\n\n\nglobals,locals.Rout\n\n\n\n\nglobals,manual.Rout\n\n\n\n\nglobals,resolve.Rout\n\n\n\n\nglobals,subassignment.Rout\n\n\n\n\nglobals,toolarge.Rout\n\n\n\n\nglobals,tricky.Rout\n\n\n\n\nglobals,tricky_recursive.Rout\n\n\n\n\nglobalsOf,tweaks.Rout\n\n\n\n\nimmediateCondition.Rout\n\n\n\n\ninvalid-owner.Rout\n\n\n\n\nmandelbrot.Rout\n\n\n\n\nmpi.Rout\n\n\n\n\nmulticore,multithreading.Rout\n\n\n\n\nmulticore,worker-termination.Rout\n\n\n\n\nmulticore.Rout\n\n\n\n\nmultisession.Rout\n\n\n\n\nnbrOfWorkers.Rout\n\n\n\n\nnested_futures,mc.cores.Rout\n\n\n\n\nnested_futures.Rout\n\n\n\n\nnon-exportable,connections.Rout\n\n\n\n\nobjectSize.Rout\n\n\n\n\nplan.Rout\n\n\n\n\nrelaying,muffle.Rout\n\n\n\n\nrelaying,split.Rout\n\n\n\n\nrelaying.Rout\n\n\n\n\nrequestCore.Rout\n\n\n\n\nrequestNode.Rout\n\n\n\n\nreserved-keyword-functions.Rout\n\n\n\n\nresolve.Rout\n\n\n\n\nresolved-non-blocking-test.Rout\n\n\n\n\nrng.Rout\n\n\n\n\nrng_utils.Rout\n\n\n\n\nsequential.Rout\n\n\n\n\nsessionDetails.Rout\n\n\n\n\nstartup.Rout\n\n\n\n\nstdout.Rout\n\n\n\n\ntweak.Rout\n\n\n\n\nutils.Rout\n\n\n\n\nuuid.Rout\n\n\n\n\nwhichIndex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_furrr.html",
    "href": "packages/test_furrr.html",
    "title": "furrr",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"furrr\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/furrr\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/furrr/empty_output.Rout\")\nout &lt;- test_pkg(\"furrr\", outDir=\"packages/furrr\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'furrr'\n\n\n  comparing 'furrr-Ex.Rout' to 'furrr-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'furrr'\n  Running 'testthat.R'\n\nedit_log(\"furrr\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nfurrr-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_fst.html",
    "href": "packages/test_fst.html",
    "title": "fst",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"fst\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/fst\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/fst/empty_output.Rout\")\nout &lt;- test_pkg(\"fst\", outDir=\"packages/fst\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'fst'\n\n\n  comparing 'fst-Ex.Rout' to 'fst-Ex.Rout.prev' ... NOTE\n\n\n  73c73\n  &lt; 10 rows, 3 columns (file48a09543bc62d.fst)\n  ---\n  &gt; 10 rows, 3 columns (file1f11244aedb8d.fst)\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'fst'\n  Running 'testthat.R'\n\nedit_log(\"fst\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nfst-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_formattable.html",
    "href": "packages/test_formattable.html",
    "title": "formattable",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"formattable\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/formattable\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/formattable/empty_output.Rout\")\nout &lt;- test_pkg(\"formattable\", outDir=\"packages/formattable\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'formattable'\n\n\n  comparing 'formattable-Ex.Rout' to 'formattable-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'formattable'\n  Running 'testthat.R'\nError: running the tests in 'testthat.R' failed\n\nedit_log(\"formattable\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nformattable-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_forcats.html",
    "href": "packages/test_forcats.html",
    "title": "forcats",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"forcats\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/forcats\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/forcats/empty_output.Rout\")\nout &lt;- test_pkg(\"forcats\", outDir=\"packages/forcats\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'forcats'\n\n\n  comparing 'forcats-Ex.Rout' to 'forcats-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'forcats'\n  Running 'testthat.R'\n\nedit_log(\"forcats\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nforcats-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_fastmap.html",
    "href": "packages/test_fastmap.html",
    "title": "fastmap",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"fastmap\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/fastmap\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/fastmap/empty_output.Rout\")\nout &lt;- test_pkg(\"fastmap\", outDir=\"packages/fastmap\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'fastmap'\n\n\n  comparing 'fastmap-Ex.Rout' to 'fastmap-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'fastmap'\n  Running 'testthat.R'\n\nedit_log(\"fastmap\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nfastmap-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_fansi.html",
    "href": "packages/test_fansi.html",
    "title": "fansi",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"fansi\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/fansi\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/fansi/empty_output.Rout\")\nout &lt;- test_pkg(\"fansi\", outDir=\"packages/fansi\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'fansi'\n\n\n  comparing 'fansi-Ex.Rout' to 'fansi-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'fansi'\n  Running 'run.R'\n\nedit_log(\"fansi\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nfansi-Ex.Rout\n\n\n\n\nrun.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_eudract.html",
    "href": "packages/test_eudract.html",
    "title": "eudract",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"eudract\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/eudract\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/eudract/empty_output.Rout\")\nout &lt;- test_pkg(\"eudract\", outDir=\"packages/eudract\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'eudract'\n\n\n  comparing 'eudract-Ex.Rout' to 'eudract-Ex.Rout.prev' ... NOTE\n\n\n  23c23\n  &lt; '/tmp/RtmpFpclnm/file4846945f69ae5.xml' is created or modified\n  ---\n  &gt; '/tmp/RtmphAIm1P/file1e78565e01711.xml' is created or modified\n  27c27\n  &lt; '/tmp/RtmpFpclnm/file4846971cb61b1.xml' is created or modified\n  ---\n  &gt; '/tmp/RtmphAIm1P/file1e785d74aaa2.xml' is created or modified\n  34c34\n  &lt; '/tmp/RtmpFpclnm/file4846966aea22a.xml' is created or modified\n  ---\n  &gt; '/tmp/RtmphAIm1P/file1e78577759eea.xml' is created or modified\n  72c72\n  &lt; '/tmp/RtmpFpclnm/file4846920ac8f32.xml' is created or modified\n  ---\n  &gt; '/tmp/RtmphAIm1P/file1e785470a5020.xml' is created or modified\n  76c76\n  &lt; '/tmp/RtmpFpclnm/file484697688adb2.xml' is created or modified\n  ---\n  &gt; '/tmp/RtmphAIm1P/file1e785548c1aac.xml' is created or modified\n  83c83\n  &lt; '/tmp/RtmpFpclnm/file484696d7e3be.xml' is created or modified\n  ---\n  &gt; '/tmp/RtmphAIm1P/file1e7857ececba9.xml' is created or modified\n  820c820\n  &lt; '/tmp/RtmpFpclnm/file484695264a439.xml' is created or modified\n  ---\n  &gt; '/tmp/RtmphAIm1P/file1e78555b00148.xml' is created or modified\n  824c824\n  &lt; '/tmp/RtmpFpclnm/file484691fe38cce.xml' is created or modified\n  ---\n  &gt; '/tmp/RtmphAIm1P/file1e7855ffd2beb.xml' is created or modified\n  831c831\n  &lt; '/tmp/RtmpFpclnm/file4846973f9884e.xml' is created or modified\n  ---\n  &gt; '/tmp/RtmphAIm1P/file1e785ea41f5c.xml' is created or modified\n  1599c1599\n  &lt; '/tmp/RtmpFpclnm/file48469177c7b92.xml' is created or modified\n  ---\n  &gt; '/tmp/RtmphAIm1P/file1e7851c48ccf3.xml' is created or modified\n  1603c1603\n  &lt; '/tmp/RtmpFpclnm/file4846929069878.xml' is created or modified\n  ---\n  &gt; '/tmp/RtmphAIm1P/file1e7856906fabc.xml' is created or modified\n  1610c1610\n  &lt; '/tmp/RtmpFpclnm/file4846952ccbcc5.xml' is created or modified\n  ---\n  &gt; '/tmp/RtmphAIm1P/file1e785196859f8.xml' is created or modified\n  1647c1647\n  &lt; '/tmp/RtmpFpclnm/file484696664582f.xml' is created or modified\n  ---\n  &gt; '/tmp/RtmphAIm1P/file1e7854fd7746.xml' is created or modified\n  1651c1651\n  &lt; '/tmp/RtmpFpclnm/file4846940952586.xml' is created or modified\n  ---\n  &gt; '/tmp/RtmphAIm1P/file1e7852810268.xml' is created or modified\n  1658c1658\n  &lt; '/tmp/RtmpFpclnm/file484697b91c8f9.xml' is created or modified\n  ---\n  &gt; '/tmp/RtmphAIm1P/file1e785b84b528.xml' is created or modified\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'eudract'\n  Running 'testthat.R'\n\nedit_log(\"eudract\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\neudract-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_duckdb.html",
    "href": "packages/test_duckdb.html",
    "title": "duckdb",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"duckdb\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/duckdb\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/duckdb/empty_output.Rout\")\nout &lt;- test_pkg(\"duckdb\", outDir=\"packages/duckdb\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'duckdb'\n\n\n  comparing 'duckdb-Ex.Rout' to 'duckdb-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'duckdb'\n  Running 'testthat.R'\n\nedit_log(\"duckdb\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nduckdb-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_dplyr.html",
    "href": "packages/test_dplyr.html",
    "title": "dplyr",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"dplyr\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/dplyr\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/dplyr/empty_output.Rout\")\nout &lt;- test_pkg(\"dplyr\", outDir=\"packages/dplyr\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'dplyr'\n\n\n  comparing 'dplyr-Ex.Rout' to 'dplyr-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'dplyr'\n  Running 'testthat.R'\n\nedit_log(\"dplyr\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\ndplyr-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_docopt.html",
    "href": "packages/test_docopt.html",
    "title": "docopt",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"docopt\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/docopt\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/docopt/empty_output.Rout\")\nout &lt;- test_pkg(\"docopt\", outDir=\"packages/docopt\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'docopt'\n\n\n  comparing 'docopt-Ex.Rout' to 'docopt-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'docopt'\n  Running 'testthat.R'\n\nedit_log(\"docopt\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\ndocopt-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_distill.html",
    "href": "packages/test_distill.html",
    "title": "distill",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"distill\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/distill\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/distill/empty_output.Rout\")\nout &lt;- test_pkg(\"distill\", outDir=\"packages/distill\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'distill'\n\n\n  comparing 'distill-Ex.Rout' to 'distill-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'distill'\n  Running 'testthat.R'\n\nedit_log(\"distill\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\ndistill-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_diffobj.html",
    "href": "packages/test_diffobj.html",
    "title": "diffobj",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"diffobj\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/diffobj\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/diffobj/empty_output.Rout\")\nout &lt;- test_pkg(\"diffobj\", outDir=\"packages/diffobj\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'diffobj'\n\n\n  comparing 'diffobj-Ex.Rout' to 'diffobj-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'diffobj'\n  Running 'test-atomic.R'\n  comparing 'test-atomic.Rout' to 'test-atomic.Rout.save' ... OK\n  Running 'test-banner.R'\n  comparing 'test-banner.Rout' to 'test-banner.Rout.save' ... OK\n  Running 'test-capture.R'\n  comparing 'test-capture.Rout' to 'test-capture.Rout.save' ... OK\n  Running 'test-check.R'\n  comparing 'test-check.Rout' to 'test-check.Rout.save' ... OK\n  Running 'test-context.R'\n  comparing 'test-context.Rout' to 'test-context.Rout.save' ... OK\n  Running 'test-core.R'\n  comparing 'test-core.Rout' to 'test-core.Rout.save' ... OK\n  Running 'test-diffChr.R'\n  comparing 'test-diffChr.Rout' to 'test-diffChr.Rout.save' ... OK\n  Running 'test-diffDeparse.R'\n  comparing 'test-diffDeparse.Rout' to 'test-diffDeparse.Rout.save' ... OK\n  Running 'test-diffObj.R'\n  comparing 'test-diffObj.Rout' to 'test-diffObj.Rout.save' ... OK\n  Running 'test-diffPrint.R'\n  comparing 'test-diffPrint.Rout' to 'test-diffPrint.Rout.save' ... OK\n  Running 'test-diffStr.R'\n  comparing 'test-diffStr.Rout' to 'test-diffStr.Rout.save' ... OK\n  Running 'test-file.R'\n  comparing 'test-file.Rout' to 'test-file.Rout.save' ... OK\n  Running 'test-guide.R'\n  comparing 'test-guide.Rout' to 'test-guide.Rout.save' ... OK\n  Running 'test-html.R'\n  comparing 'test-html.Rout' to 'test-html.Rout.save' ... OK\n  Running 'test-limit.R'\n  comparing 'test-limit.Rout' to 'test-limit.Rout.save' ... OK\n  Running 'test-methods.R'\n  comparing 'test-methods.Rout' to 'test-methods.Rout.save' ... OK\n  Running 'test-misc.R'\n  comparing 'test-misc.Rout' to 'test-misc.Rout.save' ... OK\n  Running 'test-pager.R'\n  comparing 'test-pager.Rout' to 'test-pager.Rout.save' ... OK\n  Running 'test-rdiff.R'\n  comparing 'test-rdiff.Rout' to 'test-rdiff.Rout.save' ... OK\n  Running 'test-s4.R'\n  comparing 'test-s4.Rout' to 'test-s4.Rout.save' ... OK\n  Running 'test-scaling.R'\n  Running 'test-ses.R'\n  comparing 'test-ses.Rout' to 'test-ses.Rout.save' ... OK\n  Running 'test-style.R'\n  comparing 'test-style.Rout' to 'test-style.Rout.save' ... OK\n  Running 'test-subset.R'\n  comparing 'test-subset.Rout' to 'test-subset.Rout.save' ... OK\n  Running 'test-summary.R'\n  comparing 'test-summary.Rout' to 'test-summary.Rout.save' ... OK\n  Running 'test-text.R'\n  comparing 'test-text.Rout' to 'test-text.Rout.save' ... OK\n  Running 'test-trim.R'\n  comparing 'test-trim.Rout' to 'test-trim.Rout.save' ... OK\n  Running 'test-warnings.R'\n  comparing 'test-warnings.Rout' to 'test-warnings.Rout.save' ... OK\n  Running 'zz-test-check.R'\n\nedit_log(\"diffobj\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\ndiffobj-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntest-atomic.Rout\n\n\n\n\ntest-banner.Rout\n\n\n\n\ntest-capture.Rout\n\n\n\n\ntest-check.Rout\n\n\n\n\ntest-context.Rout\n\n\n\n\ntest-core.Rout\n\n\n\n\ntest-diffChr.Rout\n\n\n\n\ntest-diffDeparse.Rout\n\n\n\n\ntest-diffObj.Rout\n\n\n\n\ntest-diffPrint.Rout\n\n\n\n\ntest-diffStr.Rout\n\n\n\n\ntest-file.Rout\n\n\n\n\ntest-guide.Rout\n\n\n\n\ntest-html.Rout\n\n\n\n\ntest-limit.Rout\n\n\n\n\ntest-methods.Rout\n\n\n\n\ntest-misc.Rout\n\n\n\n\ntest-pager.Rout\n\n\n\n\ntest-rdiff.Rout\n\n\n\n\ntest-s4.Rout\n\n\n\n\ntest-scaling.Rout\n\n\n\n\ntest-ses.Rout\n\n\n\n\ntest-style.Rout\n\n\n\n\ntest-subset.Rout\n\n\n\n\ntest-summary.Rout\n\n\n\n\ntest-text.Rout\n\n\n\n\ntest-trim.Rout\n\n\n\n\ntest-warnings.Rout\n\n\n\n\nzz-test-check.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_devtools.html",
    "href": "packages/test_devtools.html",
    "title": "devtools",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"devtools\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/devtools\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/devtools/empty_output.Rout\")\nout &lt;- test_pkg(\"devtools\", outDir=\"packages/devtools\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'devtools'\n\n\n  comparing 'devtools-Ex.Rout' to 'devtools-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'devtools'\n  Running 'spelling.R'\n  Running 'testthat.R'\nError: running the tests in 'testthat.R' failed\n\nedit_log(\"devtools\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\ndevtools-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\nspelling.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_deldir.html",
    "href": "packages/test_deldir.html",
    "title": "deldir",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"deldir\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/deldir\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/deldir/empty_output.Rout\")\nout &lt;- test_pkg(\"deldir\", outDir=\"packages/deldir\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'deldir'\n\n\n  comparing 'deldir-Ex.Rout' to 'deldir-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"deldir\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\ndeldir-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_data.table.html",
    "href": "packages/test_data.table.html",
    "title": "data.table",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"data.table\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/data.table\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/data.table/empty_output.Rout\")\nout &lt;- test_pkg(\"data.table\", outDir=\"packages/data.table\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'data.table'\n\n\n  comparing 'data.table-Ex.Rout' to 'data.table-Ex.Rout.prev' ... NOTE\n\n\n  371c371\n  &lt; [1] \"0x5d2e6f7c4588\"\n  ---\n  &gt; [1] \"0x623c9e699568\"\n  924c924\n  &lt;   0.004   0.000   0.005 \n  ---\n  &gt;   0.002   0.001   0.003 \n  933c933\n  &lt;   0.003   0.001   0.004 \n  ---\n  &gt;   0.003   0.000   0.003 \n  946c946\n  &lt;   0.007   0.000   0.007 \n  ---\n  &gt;   0.005   0.000   0.005 \n  949c949\n  &lt;   0.004   0.000   0.004 \n  ---\n  &gt;   0.003   0.000   0.003 \n  3125c3125\n  &lt;   0.018   0.000   0.019 \n  ---\n  &gt;   0.018   0.000   0.018 \n  3128c3128\n  &lt;   0.001   0.000   0.000 \n  ---\n  &gt;   0.000   0.000   0.001 \n  3131c3131\n  &lt;       0       0       0 \n  ---\n  &gt;   0.000   0.000   0.001 \n  3137c3137\n  &lt;   0.007   0.000   0.007 \n  ---\n  &gt;   0.007   0.000   0.006 \n  3233c3233\n  &lt;   0.107   0.006   0.114 \n  ---\n  &gt;   0.105   0.004   0.111 \n  3236c3236\n  &lt;   0.052   0.004   0.056 \n  ---\n  &gt;   0.052   0.003   0.054 \n  5312c5312\n  &lt; [1] \"&lt;0x5d2e6e686538&gt;\"\n  ---\n  &gt; [1] \"&lt;0x623c9d55b4d8&gt;\"\n  5314,5315c5314,5315\n  &lt; tracemem[0x5d2e6e686538 -&gt; 0x5d2e6e6867b8]: \n  &lt; tracemem[0x5d2e6e6867b8 -&gt; 0x5d2e6e686838]: colnames&lt;- \n  ---\n  &gt; tracemem[0x623c9d55b4d8 -&gt; 0x623c9d55b758]: \n  &gt; tracemem[0x623c9d55b758 -&gt; 0x623c9d55b7d8]: colnames&lt;- \n  5319c5319\n  &lt; tracemem[0x5d2e6e686838 -&gt; 0x5d2e6e686978]: \n  ---\n  &gt; tracemem[0x623c9d55b7d8 -&gt; 0x623c9d55b8d8]: \n  5327c5327\n  &lt; [1] \"&lt;0x5d2e72272450&gt;\"\n  ---\n  &gt; [1] \"&lt;0x623ca1716790&gt;\"\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'data.table'\n  Running 'autoprint.R'\n  comparing 'autoprint.Rout' to 'autoprint.Rout.save' ... OK\n  Running 'froll.R'\n  Running 'knitr.R'\n  comparing 'knitr.Rout' to 'knitr.Rout.save' ... OK\n  Running 'main.R'\n  Running 'nafill.R'\n  Running 'other.R'\n  Running 'programming.R'\n  Running 'types.R'\n\nedit_log(\"data.table\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\ndata.table-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\nautoprint.Rout\n\n\n\n\nfroll.Rout\n\n\n\n\nknitr.Rout\n\n\n\n\nmain.Rout\n\n\n\n\nnafill.Rout\n\n\n\n\nother.Rout\n\n\n\n\nprogramming.Rout\n\n\n\n\ntypes.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_credentials.html",
    "href": "packages/test_credentials.html",
    "title": "credentials",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"credentials\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/credentials\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/credentials/empty_output.Rout\")\nout &lt;- test_pkg(\"credentials\", outDir=\"packages/credentials\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'credentials'\n\n\n  comparing 'credentials-Ex.Rout' to 'credentials-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"credentials\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\ncredentials-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_cpp11.html",
    "href": "packages/test_cpp11.html",
    "title": "cpp11",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"cpp11\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/cpp11\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/cpp11/empty_output.Rout\")\nout &lt;- test_pkg(\"cpp11\", outDir=\"packages/cpp11\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'cpp11'\n\n\nError: running examples in 'cpp11-Ex.R' failed\n\nedit_log(\"cpp11\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_covr.html",
    "href": "packages/test_covr.html",
    "title": "covr",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"covr\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/covr\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/covr/empty_output.Rout\")\nout &lt;- test_pkg(\"covr\", outDir=\"packages/covr\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'covr'\n\n\n  comparing 'covr-Ex.Rout' to 'covr-Ex.Rout.prev' ... NOTE\n\n\n  20c20\n  &lt; /tmp/RtmpL7MXZO/source.R4580e3cb0b75b: 100.00%\n  ---\n  &gt; /tmp/RtmpvBpdX1/source.R1a8d8174bbe98: 100.00%\n  76c76\n  &lt; x\n  ---\n  &gt; FALSE\n  80,81c80\n  &lt; [1,]    1     1 1\n  &lt; [2,]    1     2 3\n  ---\n  &gt; [1,]    1     2 4\n  92c91\n  &lt; $`source.R4580e71ca94b9:6:5:6:9:5:9:6:6`\n  ---\n  &gt; $`source.R1a8d85774525d:3:7:3:7:7:7:3:3`\n  94c93,94\n  &lt; [1,]    1     2 4\n  ---\n  &gt; [1,]    1     1 1\n  &gt; [2,]    1     2 3\n  96c96\n  &lt; $`source.R4580e71ca94b9:4:5:4:9:5:9:4:4`\n  ---\n  &gt; $`source.R1a8d85774525d:4:5:4:9:5:9:4:4`\n  100c100\n  &lt; $`source.R4580e71ca94b9:3:7:3:7:7:7:3:3`\n  ---\n  &gt; $`source.R1a8d85774525d:6:5:6:9:5:9:6:6`\n  102,103c102\n  &lt; [1,]    1     1 1\n  &lt; [2,]    1     2 3\n  ---\n  &gt; [1,]    1     2 4\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'covr'\n  Running 'testthat.R'\nError: running the tests in 'testthat.R' failed\n\nedit_log(\"covr\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\ncovr-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_conflicted.html",
    "href": "packages/test_conflicted.html",
    "title": "conflicted",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"conflicted\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/conflicted\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/conflicted/empty_output.Rout\")\nout &lt;- test_pkg(\"conflicted\", outDir=\"packages/conflicted\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'conflicted'\n\n\n  comparing 'conflicted-Ex.Rout' to 'conflicted-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'conflicted'\n  Running 'testthat.R'\n\nedit_log(\"conflicted\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nconflicted-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_colorspace.html",
    "href": "packages/test_colorspace.html",
    "title": "colorspace",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"colorspace\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/colorspace\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/colorspace/empty_output.Rout\")\nout &lt;- test_pkg(\"colorspace\", outDir=\"packages/colorspace\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'colorspace'\n\n\n  comparing 'colorspace-Ex.Rout' to 'colorspace-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'colorspace'\n  Running 'cvd.R'\n  comparing 'cvd.Rout' to 'cvd.Rout.save' ... OK\n  Running 'palettes.R'\n  comparing 'palettes.Rout' to 'palettes.Rout.save' ... OK\n\nedit_log(\"colorspace\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\ncolorspace-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ncvd.Rout\n\n\n\n\npalettes.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_clipr.html",
    "href": "packages/test_clipr.html",
    "title": "clipr",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"clipr\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/clipr\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/clipr/empty_output.Rout\")\nout &lt;- test_pkg(\"clipr\", outDir=\"packages/clipr\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'clipr'\n\n\n  comparing 'clipr-Ex.Rout' to 'clipr-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'clipr'\n  Running 'testthat.R'\n\nedit_log(\"clipr\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nclipr-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_chromote.html",
    "href": "packages/test_chromote.html",
    "title": "chromote",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"chromote\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/chromote\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/chromote/empty_output.Rout\")\nout &lt;- test_pkg(\"chromote\", outDir=\"packages/chromote\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'chromote'\n\n\n  comparing 'chromote-Ex.Rout' to 'chromote-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'chromote'\n  Running 'testthat.R'\n\nedit_log(\"chromote\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nchromote-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_cellranger.html",
    "href": "packages/test_cellranger.html",
    "title": "cellranger",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"cellranger\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/cellranger\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/cellranger/empty_output.Rout\")\nout &lt;- test_pkg(\"cellranger\", outDir=\"packages/cellranger\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'cellranger'\n\n\n  comparing 'cellranger-Ex.Rout' to 'cellranger-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'cellranger'\n  Running 'testthat.R'\n\nedit_log(\"cellranger\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\ncellranger-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_carData.html",
    "href": "packages/test_carData.html",
    "title": "carData",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"carData\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/carData\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/carData/empty_output.Rout\")\nout &lt;- test_pkg(\"carData\", outDir=\"packages/carData\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'carData'\n\n\n  comparing 'carData-Ex.Rout' to 'carData-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"carData\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\ncarData-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_callr.html",
    "href": "packages/test_callr.html",
    "title": "callr",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"callr\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/callr\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/callr/empty_output.Rout\")\nout &lt;- test_pkg(\"callr\", outDir=\"packages/callr\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'callr'\n\n\n  comparing 'callr-Ex.Rout' to 'callr-Ex.Rout.prev' ... NOTE\n\n\n  162c162\n  &lt;  [3] \"    env &lt;- readRDS(\\\"/tmp/RtmpWffAxq/callr-env-4500e467d972a\\\")\\n\"                    \n  ---\n  &gt;  [3] \"    env &lt;- readRDS(\\\"/tmp/RtmpxOOql1/callr-env-1953f69a55f4c\\\")\\n\"                    \n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'callr'\n  Running 'testthat.R'\n\nedit_log(\"callr\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\ncallr-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_bslib.html",
    "href": "packages/test_bslib.html",
    "title": "bslib",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"bslib\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/bslib\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/bslib/empty_output.Rout\")\nout &lt;- test_pkg(\"bslib\", outDir=\"packages/bslib\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'bslib'\n\n\n  comparing 'bslib-Ex.Rout' to 'bslib-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'bslib'\n  Running 'testthat.R'\nError: running the tests in 'testthat.R' failed\n\nedit_log(\"bslib\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nbslib-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_broom.mixed.html",
    "href": "packages/test_broom.mixed.html",
    "title": "broom.mixed",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"broom.mixed\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/broom.mixed\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/broom.mixed/empty_output.Rout\")\nout &lt;- test_pkg(\"broom.mixed\", outDir=\"packages/broom.mixed\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'broom.mixed'\n\n\n  comparing 'broom.mixed-Ex.Rout' to 'broom.mixed-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'broom.mixed'\n  Running 'test-all.R'\n\nedit_log(\"broom.mixed\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nbroom.mixed-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntest-all.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_brew.html",
    "href": "packages/test_brew.html",
    "title": "brew",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"brew\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/brew\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/brew/empty_output.Rout\")\nout &lt;- test_pkg(\"brew\", outDir=\"packages/brew\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'brew'\n\n\n  comparing 'brew-Ex.Rout' to 'brew-Ex.Rout.prev' ... NOTE\n\n\n  38c38\n  &lt; current time: 2024-11-21 17:18:42\n  ---\n  &gt; current time: 2024-11-21 13:35:51\n  121,124c121,123\n  &lt;  [4] \"brew-Ex.Rout.prev\" \"brew-tests\"        \"DESCRIPTION\"      \n  &lt;  [7] \"empty_output.Rout\" \"inst\"              \"man\"              \n  &lt; [10] \"MD5\"               \"NAMESPACE\"         \"R\"                \n  &lt; [13] \"README.md\"         \"tests\"            \n  ---\n  &gt;  [4] \"DESCRIPTION\"       \"empty_output.Rout\" \"inst\"             \n  &gt;  [7] \"man\"               \"MD5\"               \"NAMESPACE\"        \n  &gt; [10] \"R\"                 \"README.md\"         \"tests\"            \n  144,147c143,145\n  &lt;  [4] \"brew-Ex.Rout.prev\" \"brew-tests\"        \"DESCRIPTION\"      \n  &lt;  [7] \"empty_output.Rout\" \"inst\"              \"man\"              \n  &lt; [10] \"MD5\"               \"NAMESPACE\"         \"R\"                \n  &lt; [13] \"README.md\"         \"tests\"            \n  ---\n  &gt;  [4] \"DESCRIPTION\"       \"empty_output.Rout\" \"inst\"             \n  &gt;  [7] \"man\"               \"MD5\"               \"NAMESPACE\"        \n  &gt; [10] \"R\"                 \"README.md\"         \"tests\"            \n  182,185c180,182\n  &lt;  [4] \"brew-Ex.Rout.prev\" \"brew-tests\"        \"DESCRIPTION\"      \n  &lt;  [7] \"empty_output.Rout\" \"inst\"              \"man\"              \n  &lt; [10] \"MD5\"               \"NAMESPACE\"         \"R\"                \n  &lt; [13] \"README.md\"         \"tests\"            \n  ---\n  &gt;  [4] \"DESCRIPTION\"       \"empty_output.Rout\" \"inst\"             \n  &gt;  [7] \"man\"               \"MD5\"               \"NAMESPACE\"        \n  &gt; [10] \"R\"                 \"README.md\"         \"tests\"            \n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'brew'\n  Running 'testthat.R'\n\nedit_log(\"brew\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nbrew-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_blogdown.html",
    "href": "packages/test_blogdown.html",
    "title": "blogdown",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"blogdown\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/blogdown\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/blogdown/empty_output.Rout\")\nout &lt;- test_pkg(\"blogdown\", outDir=\"packages/blogdown\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'blogdown'\n\n\n  comparing 'blogdown-Ex.Rout' to 'blogdown-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'blogdown'\n  Running 'test-ci.R'\n  Running 'test-cran.R'\n\nedit_log(\"blogdown\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nblogdown-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntest-ci.Rout\n\n\n\n\ntest-cran.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_bit64.html",
    "href": "packages/test_bit64.html",
    "title": "bit64",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"bit64\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/bit64\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/bit64/empty_output.Rout\")\nout &lt;- test_pkg(\"bit64\", outDir=\"packages/bit64\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'bit64'\n\n\n  comparing 'bit64-Ex.Rout' to 'bit64-Ex.Rout.prev' ... NOTE\n\n\n  241,242c241,242\n  &lt; seconds  0.029  0.013         0              0          0        0\n  &lt; factor   1.000  2.231       Inf            Inf        Inf      Inf\n  ---\n  &gt; seconds  0.029  0.022         0              0          0        0\n  &gt; factor   1.000  1.318       Inf            Inf        Inf      Inf\n  259,260c259,260\n  &lt; seconds  0.029  0.013     0.009              0          0        0\n  &lt; factor   1.000  2.231     3.222            Inf        Inf      Inf\n  ---\n  &gt; seconds  0.029  0.022     0.027              0          0        0\n  &gt; factor   1.000  1.318     1.074            Inf        Inf      Inf\n  277,278c277,278\n  &lt; seconds  0.029  0.013     0.009          0.006          0        0\n  &lt; factor   1.000  2.231     3.222          4.833        Inf      Inf\n  ---\n  &gt; seconds  0.029  0.022     0.027          0.012          0        0\n  &gt; factor   1.000  1.318     1.074          2.417        Inf      Inf\n  295,296c295,296\n  &lt; seconds  0.029  0.013     0.009          0.006       0.01        0\n  &lt; factor   1.000  2.231     3.222          4.833       2.90      Inf\n  ---\n  &gt; seconds  0.029  0.022     0.027          0.012      0.029        0\n  &gt; factor   1.000  1.318     1.074          2.417      1.000      Inf\n  313,314c313,314\n  &lt; seconds  0.029  0.013     0.009          0.006       0.01    0.007\n  &lt; factor   1.000  2.231     3.222          4.833       2.90    4.143\n  ---\n  &gt; seconds  0.029  0.022     0.027          0.012      0.029    0.027\n  &gt; factor   1.000  1.318     1.074          2.417      1.000    1.074\n  332,347c332,347\n  &lt; cache          0.000  0.000     0.000          0.000       0.00    0.000\n  &lt; match(s,b)     0.001  0.000     0.000          0.000       0.00    0.000\n  &lt; s %in% b       0.000  0.000     0.000          0.000       0.00    0.000\n  &lt; match(b,s)     0.000  0.000     0.000          0.000       0.00    0.000\n  &lt; b %in% s       0.000  0.000     0.000          0.000       0.00    0.000\n  &lt; match(b,b)     0.000  0.000     0.000          0.000       0.00    0.000\n  &lt; b %in% b       0.000  0.000     0.000          0.000       0.00    0.000\n  &lt; duplicated(b)  0.000  0.000     0.000          0.000       0.00    0.000\n  &lt; unique(b)      0.001  0.000     0.000          0.000       0.00    0.000\n  &lt; table(b)       0.007  0.000     0.000          0.000       0.00    0.000\n  &lt; sort(b)        0.000  0.000     0.000          0.000       0.00    0.000\n  &lt; order(b)       0.001  0.000     0.000          0.000       0.00    0.000\n  &lt; rank(b)        0.001  0.000     0.000          0.000       0.00    0.000\n  &lt; quantile(b)    0.000  0.000     0.000          0.000       0.00    0.000\n  &lt; summary(b)     0.000  0.000     0.000          0.000       0.00    0.000\n  &lt; SESSION        0.029  0.013     0.009          0.006       0.01    0.007\n  ---\n  &gt; cache          0.000  0.000     0.000          0.000      0.000    0.000\n  &gt; match(s,b)     0.000  0.000     0.000          0.000      0.000    0.000\n  &gt; s %in% b       0.001  0.000     0.000          0.000      0.000    0.000\n  &gt; match(b,s)     0.000  0.000     0.000          0.000      0.000    0.000\n  &gt; b %in% s       0.001  0.000     0.000          0.000      0.000    0.000\n  &gt; match(b,b)     0.001  0.000     0.000          0.000      0.000    0.000\n  &gt; b %in% b       0.001  0.000     0.000          0.000      0.000    0.000\n  &gt; duplicated(b)  0.000  0.000     0.000          0.000      0.000    0.000\n  &gt; unique(b)      0.002  0.000     0.000          0.000      0.000    0.000\n  &gt; table(b)       0.019  0.000     0.000          0.000      0.000    0.000\n  &gt; sort(b)        0.001  0.000     0.000          0.000      0.000    0.000\n  &gt; order(b)       0.000  0.000     0.000          0.000      0.000    0.000\n  &gt; rank(b)        0.002  0.000     0.000          0.000      0.000    0.000\n  &gt; quantile(b)    0.001  0.000     0.000          0.000      0.000    0.000\n  &gt; summary(b)     0.002  0.000     0.000          0.000      0.000    0.000\n  &gt; SESSION        0.029  0.022     0.027          0.012      0.029    0.027\n  350,351c350,351\n  &lt; match(s,b)         1    Inf       Inf            Inf        Inf      Inf\n  &lt; s %in% b         NaN    NaN       NaN            NaN        NaN      NaN\n  ---\n  &gt; match(s,b)       NaN    NaN       NaN            NaN        NaN      NaN\n  &gt; s %in% b           1    Inf       Inf            Inf        Inf      Inf\n  353,355c353,355\n  &lt; b %in% s         NaN    NaN       NaN            NaN        NaN      NaN\n  &lt; match(b,b)       NaN    NaN       NaN            NaN        NaN      NaN\n  &lt; b %in% b         NaN    NaN       NaN            NaN        NaN      NaN\n  ---\n  &gt; b %in% s           1    Inf       Inf            Inf        Inf      Inf\n  &gt; match(b,b)         1    Inf       Inf            Inf        Inf      Inf\n  &gt; b %in% b           1    Inf       Inf            Inf        Inf      Inf\n  359,360c359,360\n  &lt; sort(b)          NaN    NaN       NaN            NaN        NaN      NaN\n  &lt; order(b)           1    Inf       Inf            Inf        Inf      Inf\n  ---\n  &gt; sort(b)            1    Inf       Inf            Inf        Inf      Inf\n  &gt; order(b)         NaN    NaN       NaN            NaN        NaN      NaN\n  362,364c362,364\n  &lt; quantile(b)      NaN    NaN       NaN            NaN        NaN      NaN\n  &lt; summary(b)       NaN    NaN       NaN            NaN        NaN      NaN\n  &lt; SESSION            1  2.231     3.222          4.833        2.9    4.143\n  ---\n  &gt; quantile(b)        1    Inf       Inf            Inf        Inf      Inf\n  &gt; summary(b)         1    Inf       Inf            Inf        Inf      Inf\n  &gt; SESSION            1  1.318     1.074          2.417          1    1.074\n  380,395c380,395\n  &lt; cache          0.000  0.000     0.000          0.000       0.00    0.000\n  &lt; match(s,b)     0.001  0.000     0.000          0.000       0.00    0.000\n  &lt; s %in% b       0.000  0.000     0.000          0.000       0.00    0.000\n  &lt; match(b,s)     0.000  0.000     0.000          0.000       0.00    0.000\n  &lt; b %in% s       0.000  0.000     0.000          0.000       0.00    0.000\n  &lt; match(b,b)     0.000  0.001     0.000          0.000       0.00    0.000\n  &lt; b %in% b       0.000  0.000     0.000          0.000       0.00    0.000\n  &lt; duplicated(b)  0.000  0.001     0.000          0.000       0.00    0.000\n  &lt; unique(b)      0.001  0.000     0.000          0.000       0.00    0.000\n  &lt; table(b)       0.007  0.001     0.000          0.000       0.00    0.000\n  &lt; sort(b)        0.000  0.001     0.000          0.000       0.00    0.000\n  &lt; order(b)       0.001  0.000     0.000          0.000       0.00    0.000\n  &lt; rank(b)        0.001  0.000     0.000          0.000       0.00    0.000\n  &lt; quantile(b)    0.000  0.000     0.000          0.000       0.00    0.000\n  &lt; summary(b)     0.000  0.001     0.000          0.000       0.00    0.000\n  &lt; SESSION        0.029  0.013     0.009          0.006       0.01    0.007\n  ---\n  &gt; cache          0.000  0.000     0.000          0.000      0.000    0.000\n  &gt; match(s,b)     0.000  0.000     0.000          0.000      0.000    0.000\n  &gt; s %in% b       0.001  0.001     0.000          0.000      0.000    0.000\n  &gt; match(b,s)     0.000  0.001     0.000          0.000      0.000    0.000\n  &gt; b %in% s       0.001  0.001     0.000          0.000      0.000    0.000\n  &gt; match(b,b)     0.001  0.000     0.000          0.000      0.000    0.000\n  &gt; b %in% b       0.001  0.001     0.000          0.000      0.000    0.000\n  &gt; duplicated(b)  0.000  0.001     0.000          0.000      0.000    0.000\n  &gt; unique(b)      0.002  0.000     0.000          0.000      0.000    0.000\n  &gt; table(b)       0.019  0.000     0.000          0.000      0.000    0.000\n  &gt; sort(b)        0.001  0.000     0.000          0.000      0.000    0.000\n  &gt; order(b)       0.000  0.003     0.000          0.000      0.000    0.000\n  &gt; rank(b)        0.002  0.000     0.000          0.000      0.000    0.000\n  &gt; quantile(b)    0.001  0.001     0.000          0.000      0.000    0.000\n  &gt; summary(b)     0.002  0.001     0.000          0.000      0.000    0.000\n  &gt; SESSION        0.029  0.022     0.027          0.012      0.029    0.027\n  398,403c398,403\n  &lt; match(s,b)         1    Inf       Inf            Inf        Inf      Inf\n  &lt; s %in% b         NaN    NaN       NaN            NaN        NaN      NaN\n  &lt; match(b,s)       NaN    NaN       NaN            NaN        NaN      NaN\n  &lt; b %in% s         NaN    NaN       NaN            NaN        NaN      NaN\n  &lt; match(b,b)       NaN  0.000       NaN            NaN        NaN      NaN\n  &lt; b %in% b         NaN    NaN       NaN            NaN        NaN      NaN\n  ---\n  &gt; match(s,b)       NaN    NaN       NaN            NaN        NaN      NaN\n  &gt; s %in% b           1  1.000       Inf            Inf        Inf      Inf\n  &gt; match(b,s)       NaN  0.000       NaN            NaN        NaN      NaN\n  &gt; b %in% s           1  1.000       Inf            Inf        Inf      Inf\n  &gt; match(b,b)         1    Inf       Inf            Inf        Inf      Inf\n  &gt; b %in% b           1  1.000       Inf            Inf        Inf      Inf\n  406,408c406,408\n  &lt; table(b)           1  7.000       Inf            Inf        Inf      Inf\n  &lt; sort(b)          NaN  0.000       NaN            NaN        NaN      NaN\n  &lt; order(b)           1    Inf       Inf            Inf        Inf      Inf\n  ---\n  &gt; table(b)           1    Inf       Inf            Inf        Inf      Inf\n  &gt; sort(b)            1    Inf       Inf            Inf        Inf      Inf\n  &gt; order(b)         NaN  0.000       NaN            NaN        NaN      NaN\n  410,412c410,412\n  &lt; quantile(b)      NaN    NaN       NaN            NaN        NaN      NaN\n  &lt; summary(b)       NaN  0.000       NaN            NaN        NaN      NaN\n  &lt; SESSION            1  2.231     3.222          4.833        2.9    4.143\n  ---\n  &gt; quantile(b)        1  1.000       Inf            Inf        Inf      Inf\n  &gt; summary(b)         1  2.000       Inf            Inf        Inf      Inf\n  &gt; SESSION            1  1.318     1.074          2.417          1    1.074\n  429,444c429,444\n  &lt; cache          0.000  0.000     0.000          0.000       0.00    0.000\n  &lt; match(s,b)     0.001  0.000     0.000          0.000       0.00    0.000\n  &lt; s %in% b       0.000  0.000     0.000          0.000       0.00    0.000\n  &lt; match(b,s)     0.000  0.000     0.000          0.000       0.00    0.000\n  &lt; b %in% s       0.000  0.000     0.000          0.000       0.00    0.000\n  &lt; match(b,b)     0.000  0.001     0.000          0.000       0.00    0.000\n  &lt; b %in% b       0.000  0.000     0.000          0.000       0.00    0.000\n  &lt; duplicated(b)  0.000  0.001     0.000          0.000       0.00    0.000\n  &lt; unique(b)      0.001  0.000     0.000          0.000       0.00    0.000\n  &lt; table(b)       0.007  0.001     0.000          0.000       0.00    0.000\n  &lt; sort(b)        0.000  0.001     0.001          0.000       0.00    0.000\n  &lt; order(b)       0.001  0.000     0.001          0.000       0.00    0.000\n  &lt; rank(b)        0.001  0.000     0.000          0.000       0.00    0.000\n  &lt; quantile(b)    0.000  0.000     0.001          0.000       0.00    0.000\n  &lt; summary(b)     0.000  0.001     0.001          0.000       0.00    0.000\n  &lt; SESSION        0.029  0.013     0.009          0.006       0.01    0.007\n  ---\n  &gt; cache          0.000  0.000     0.001          0.000      0.000    0.000\n  &gt; match(s,b)     0.000  0.000     0.000          0.000      0.000    0.000\n  &gt; s %in% b       0.001  0.001     0.000          0.000      0.000    0.000\n  &gt; match(b,s)     0.000  0.001     0.001          0.000      0.000    0.000\n  &gt; b %in% s       0.001  0.001     0.000          0.000      0.000    0.000\n  &gt; match(b,b)     0.001  0.000     0.000          0.000      0.000    0.000\n  &gt; b %in% b       0.001  0.001     0.001          0.000      0.000    0.000\n  &gt; duplicated(b)  0.000  0.001     0.000          0.000      0.000    0.000\n  &gt; unique(b)      0.002  0.000     0.000          0.000      0.000    0.000\n  &gt; table(b)       0.019  0.000     0.000          0.000      0.000    0.000\n  &gt; sort(b)        0.001  0.000     0.001          0.000      0.000    0.000\n  &gt; order(b)       0.000  0.003     0.001          0.000      0.000    0.000\n  &gt; rank(b)        0.002  0.000     0.000          0.000      0.000    0.000\n  &gt; quantile(b)    0.001  0.001     0.001          0.000      0.000    0.000\n  &gt; summary(b)     0.002  0.001     0.001          0.000      0.000    0.000\n  &gt; SESSION        0.029  0.022     0.027          0.012      0.029    0.027\n  446,452c446,452\n  &lt; cache            NaN    NaN       NaN            NaN        NaN      NaN\n  &lt; match(s,b)         1    Inf       Inf            Inf        Inf      Inf\n  &lt; s %in% b         NaN    NaN       NaN            NaN        NaN      NaN\n  &lt; match(b,s)       NaN    NaN       NaN            NaN        NaN      NaN\n  &lt; b %in% s         NaN    NaN       NaN            NaN        NaN      NaN\n  &lt; match(b,b)       NaN  0.000       NaN            NaN        NaN      NaN\n  &lt; b %in% b         NaN    NaN       NaN            NaN        NaN      NaN\n  ---\n  &gt; cache            NaN    NaN     0.000            NaN        NaN      NaN\n  &gt; match(s,b)       NaN    NaN       NaN            NaN        NaN      NaN\n  &gt; s %in% b           1  1.000       Inf            Inf        Inf      Inf\n  &gt; match(b,s)       NaN  0.000     0.000            NaN        NaN      NaN\n  &gt; b %in% s           1  1.000       Inf            Inf        Inf      Inf\n  &gt; match(b,b)         1    Inf       Inf            Inf        Inf      Inf\n  &gt; b %in% b           1  1.000     1.000            Inf        Inf      Inf\n  455,457c455,457\n  &lt; table(b)           1  7.000       Inf            Inf        Inf      Inf\n  &lt; sort(b)          NaN  0.000     0.000            NaN        NaN      NaN\n  &lt; order(b)           1    Inf     1.000            Inf        Inf      Inf\n  ---\n  &gt; table(b)           1    Inf       Inf            Inf        Inf      Inf\n  &gt; sort(b)            1    Inf     1.000            Inf        Inf      Inf\n  &gt; order(b)         NaN  0.000     0.000            NaN        NaN      NaN\n  459,461c459,461\n  &lt; quantile(b)      NaN    NaN     0.000            NaN        NaN      NaN\n  &lt; summary(b)       NaN  0.000     0.000            NaN        NaN      NaN\n  &lt; SESSION            1  2.231     3.222          4.833        2.9    4.143\n  ---\n  &gt; quantile(b)        1  1.000     1.000            Inf        Inf      Inf\n  &gt; summary(b)         1  2.000     2.000            Inf        Inf      Inf\n  &gt; SESSION            1  1.318     1.074          2.417          1    1.074\n  478,493c478,493\n  &lt; cache          0.000  0.000     0.000          0.002       0.00    0.000\n  &lt; match(s,b)     0.001  0.000     0.000          0.000       0.00    0.000\n  &lt; s %in% b       0.000  0.000     0.000          0.000       0.00    0.000\n  &lt; match(b,s)     0.000  0.000     0.000          0.000       0.00    0.000\n  &lt; b %in% s       0.000  0.000     0.000          0.001       0.00    0.000\n  &lt; match(b,b)     0.000  0.001     0.000          0.000       0.00    0.000\n  &lt; b %in% b       0.000  0.000     0.000          0.001       0.00    0.000\n  &lt; duplicated(b)  0.000  0.001     0.000          0.000       0.00    0.000\n  &lt; unique(b)      0.001  0.000     0.000          0.001       0.00    0.000\n  &lt; table(b)       0.007  0.001     0.000          0.000       0.00    0.000\n  &lt; sort(b)        0.000  0.001     0.001          0.001       0.00    0.000\n  &lt; order(b)       0.001  0.000     0.001          0.000       0.00    0.000\n  &lt; rank(b)        0.001  0.000     0.000          0.000       0.00    0.000\n  &lt; quantile(b)    0.000  0.000     0.001          0.001       0.00    0.000\n  &lt; summary(b)     0.000  0.001     0.001          0.000       0.00    0.000\n  &lt; SESSION        0.029  0.013     0.009          0.006       0.01    0.007\n  ---\n  &gt; cache          0.000  0.000     0.001          0.001      0.000    0.000\n  &gt; match(s,b)     0.000  0.000     0.000          0.000      0.000    0.000\n  &gt; s %in% b       0.001  0.001     0.000          0.000      0.000    0.000\n  &gt; match(b,s)     0.000  0.001     0.001          0.000      0.000    0.000\n  &gt; b %in% s       0.001  0.001     0.000          0.001      0.000    0.000\n  &gt; match(b,b)     0.001  0.000     0.000          0.000      0.000    0.000\n  &gt; b %in% b       0.001  0.001     0.001          0.000      0.000    0.000\n  &gt; duplicated(b)  0.000  0.001     0.000          0.000      0.000    0.000\n  &gt; unique(b)      0.002  0.000     0.000          0.001      0.000    0.000\n  &gt; table(b)       0.019  0.000     0.000          0.000      0.000    0.000\n  &gt; sort(b)        0.001  0.000     0.001          0.000      0.000    0.000\n  &gt; order(b)       0.000  0.003     0.001          0.000      0.000    0.000\n  &gt; rank(b)        0.002  0.000     0.000          0.000      0.000    0.000\n  &gt; quantile(b)    0.001  0.001     0.001          0.001      0.000    0.000\n  &gt; summary(b)     0.002  0.001     0.001          0.000      0.000    0.000\n  &gt; SESSION        0.029  0.022     0.027          0.012      0.029    0.027\n  495,501c495,501\n  &lt; cache            NaN    NaN       NaN          0.000        NaN      NaN\n  &lt; match(s,b)         1    Inf       Inf            Inf        Inf      Inf\n  &lt; s %in% b         NaN    NaN       NaN            NaN        NaN      NaN\n  &lt; match(b,s)       NaN    NaN       NaN            NaN        NaN      NaN\n  &lt; b %in% s         NaN    NaN       NaN          0.000        NaN      NaN\n  &lt; match(b,b)       NaN  0.000       NaN            NaN        NaN      NaN\n  &lt; b %in% b         NaN    NaN       NaN          0.000        NaN      NaN\n  ---\n  &gt; cache            NaN    NaN     0.000          0.000        NaN      NaN\n  &gt; match(s,b)       NaN    NaN       NaN            NaN        NaN      NaN\n  &gt; s %in% b           1  1.000       Inf            Inf        Inf      Inf\n  &gt; match(b,s)       NaN  0.000     0.000            NaN        NaN      NaN\n  &gt; b %in% s           1  1.000       Inf          1.000        Inf      Inf\n  &gt; match(b,b)         1    Inf       Inf            Inf        Inf      Inf\n  &gt; b %in% b           1  1.000     1.000            Inf        Inf      Inf\n  503,506c503,506\n  &lt; unique(b)          1    Inf       Inf          1.000        Inf      Inf\n  &lt; table(b)           1  7.000       Inf            Inf        Inf      Inf\n  &lt; sort(b)          NaN  0.000     0.000          0.000        NaN      NaN\n  &lt; order(b)           1    Inf     1.000            Inf        Inf      Inf\n  ---\n  &gt; unique(b)          1    Inf       Inf          2.000        Inf      Inf\n  &gt; table(b)           1    Inf       Inf            Inf        Inf      Inf\n  &gt; sort(b)            1    Inf     1.000            Inf        Inf      Inf\n  &gt; order(b)         NaN  0.000     0.000            NaN        NaN      NaN\n  508,510c508,510\n  &lt; quantile(b)      NaN    NaN     0.000          0.000        NaN      NaN\n  &lt; summary(b)       NaN  0.000     0.000            NaN        NaN      NaN\n  &lt; SESSION            1  2.231     3.222          4.833        2.9    4.143\n  ---\n  &gt; quantile(b)        1  1.000     1.000          1.000        Inf      Inf\n  &gt; summary(b)         1  2.000     2.000            Inf        Inf      Inf\n  &gt; SESSION            1  1.318     1.074          2.417          1    1.074\n  527,533c527,533\n  &lt; cache          0.000  0.000     0.000          0.002      0.002    0.000\n  &lt; match(s,b)     0.001  0.000     0.000          0.000      0.001    0.000\n  &lt; s %in% b       0.000  0.000     0.000          0.000      0.000    0.000\n  &lt; match(b,s)     0.000  0.000     0.000          0.000      0.001    0.000\n  &lt; b %in% s       0.000  0.000     0.000          0.001      0.000    0.000\n  &lt; match(b,b)     0.000  0.001     0.000          0.000      0.000    0.000\n  &lt; b %in% b       0.000  0.000     0.000          0.001      0.001    0.000\n  ---\n  &gt; cache          0.000  0.000     0.001          0.001      0.002    0.000\n  &gt; match(s,b)     0.000  0.000     0.000          0.000      0.000    0.000\n  &gt; s %in% b       0.001  0.001     0.000          0.000      0.000    0.000\n  &gt; match(b,s)     0.000  0.001     0.001          0.000      0.000    0.000\n  &gt; b %in% s       0.001  0.001     0.000          0.001      0.001    0.000\n  &gt; match(b,b)     0.001  0.000     0.000          0.000      0.000    0.000\n  &gt; b %in% b       0.001  0.001     0.001          0.000      0.000    0.000\n  535,542c535,542\n  &lt; unique(b)      0.001  0.000     0.000          0.001      0.001    0.000\n  &lt; table(b)       0.007  0.001     0.000          0.000      0.000    0.000\n  &lt; sort(b)        0.000  0.001     0.001          0.001      0.000    0.000\n  &lt; order(b)       0.001  0.000     0.001          0.000      0.000    0.000\n  &lt; rank(b)        0.001  0.000     0.000          0.000      0.001    0.000\n  &lt; quantile(b)    0.000  0.000     0.001          0.001      0.000    0.000\n  &lt; summary(b)     0.000  0.001     0.001          0.000      0.001    0.000\n  &lt; SESSION        0.029  0.013     0.009          0.006      0.010    0.007\n  ---\n  &gt; unique(b)      0.002  0.000     0.000          0.001      0.000    0.000\n  &gt; table(b)       0.019  0.000     0.000          0.000      0.000    0.000\n  &gt; sort(b)        0.001  0.000     0.001          0.000      0.000    0.000\n  &gt; order(b)       0.000  0.003     0.001          0.000      0.000    0.000\n  &gt; rank(b)        0.002  0.000     0.000          0.000      0.001    0.000\n  &gt; quantile(b)    0.001  0.001     0.001          0.001      0.000    0.000\n  &gt; summary(b)     0.002  0.001     0.001          0.000      0.001    0.000\n  &gt; SESSION        0.029  0.022     0.027          0.012      0.029    0.027\n  544,550c544,550\n  &lt; cache            NaN    NaN       NaN          0.000        0.0      NaN\n  &lt; match(s,b)         1    Inf       Inf            Inf        1.0      Inf\n  &lt; s %in% b         NaN    NaN       NaN            NaN        NaN      NaN\n  &lt; match(b,s)       NaN    NaN       NaN            NaN        0.0      NaN\n  &lt; b %in% s         NaN    NaN       NaN          0.000        NaN      NaN\n  &lt; match(b,b)       NaN  0.000       NaN            NaN        NaN      NaN\n  &lt; b %in% b         NaN    NaN       NaN          0.000        0.0      NaN\n  ---\n  &gt; cache            NaN    NaN     0.000          0.000          0      NaN\n  &gt; match(s,b)       NaN    NaN       NaN            NaN        NaN      NaN\n  &gt; s %in% b           1  1.000       Inf            Inf        Inf      Inf\n  &gt; match(b,s)       NaN  0.000     0.000            NaN        NaN      NaN\n  &gt; b %in% s           1  1.000       Inf          1.000          1      Inf\n  &gt; match(b,b)         1    Inf       Inf            Inf        Inf      Inf\n  &gt; b %in% b           1  1.000     1.000            Inf        Inf      Inf\n  552,559c552,559\n  &lt; unique(b)          1    Inf       Inf          1.000        1.0      Inf\n  &lt; table(b)           1  7.000       Inf            Inf        Inf      Inf\n  &lt; sort(b)          NaN  0.000     0.000          0.000        NaN      NaN\n  &lt; order(b)           1    Inf     1.000            Inf        Inf      Inf\n  &lt; rank(b)            1    Inf       Inf            Inf        1.0      Inf\n  &lt; quantile(b)      NaN    NaN     0.000          0.000        NaN      NaN\n  &lt; summary(b)       NaN  0.000     0.000            NaN        0.0      NaN\n  &lt; SESSION            1  2.231     3.222          4.833        2.9    4.143\n  ---\n  &gt; unique(b)          1    Inf       Inf          2.000        Inf      Inf\n  &gt; table(b)           1    Inf       Inf            Inf        Inf      Inf\n  &gt; sort(b)            1    Inf     1.000            Inf        Inf      Inf\n  &gt; order(b)         NaN  0.000     0.000            NaN        NaN      NaN\n  &gt; rank(b)            1    Inf       Inf            Inf          2      Inf\n  &gt; quantile(b)        1  1.000     1.000          1.000        Inf      Inf\n  &gt; summary(b)         1  2.000     2.000            Inf          2      Inf\n  &gt; SESSION            1  1.318     1.074          2.417          1    1.074\n  576,582c576,582\n  &lt; cache          0.000  0.000     0.000          0.002      0.002    0.002\n  &lt; match(s,b)     0.001  0.000     0.000          0.000      0.001    0.001\n  &lt; s %in% b       0.000  0.000     0.000          0.000      0.000    0.000\n  &lt; match(b,s)     0.000  0.000     0.000          0.000      0.001    0.000\n  &lt; b %in% s       0.000  0.000     0.000          0.001      0.000    0.000\n  &lt; match(b,b)     0.000  0.001     0.000          0.000      0.000    0.000\n  &lt; b %in% b       0.000  0.000     0.000          0.001      0.001    0.001\n  ---\n  &gt; cache          0.000  0.000     0.001          0.001      0.002    0.003\n  &gt; match(s,b)     0.000  0.000     0.000          0.000      0.000    0.001\n  &gt; s %in% b       0.001  0.001     0.000          0.000      0.000    0.000\n  &gt; match(b,s)     0.000  0.001     0.001          0.000      0.000    0.001\n  &gt; b %in% s       0.001  0.001     0.000          0.001      0.001    0.001\n  &gt; match(b,b)     0.001  0.000     0.000          0.000      0.000    0.000\n  &gt; b %in% b       0.001  0.001     0.001          0.000      0.000    0.000\n  584,591c584,591\n  &lt; unique(b)      0.001  0.000     0.000          0.001      0.001    0.000\n  &lt; table(b)       0.007  0.001     0.000          0.000      0.000    0.000\n  &lt; sort(b)        0.000  0.001     0.001          0.001      0.000    0.000\n  &lt; order(b)       0.001  0.000     0.001          0.000      0.000    0.000\n  &lt; rank(b)        0.001  0.000     0.000          0.000      0.001    0.000\n  &lt; quantile(b)    0.000  0.000     0.001          0.001      0.000    0.001\n  &lt; summary(b)     0.000  0.001     0.001          0.000      0.001    0.000\n  &lt; SESSION        0.029  0.013     0.009          0.006      0.010    0.007\n  ---\n  &gt; unique(b)      0.002  0.000     0.000          0.001      0.000    0.000\n  &gt; table(b)       0.019  0.000     0.000          0.000      0.000    0.001\n  &gt; sort(b)        0.001  0.000     0.001          0.000      0.000    0.000\n  &gt; order(b)       0.000  0.003     0.001          0.000      0.000    0.001\n  &gt; rank(b)        0.002  0.000     0.000          0.000      0.001    0.000\n  &gt; quantile(b)    0.001  0.001     0.001          0.001      0.000    0.001\n  &gt; summary(b)     0.002  0.001     0.001          0.000      0.001    0.000\n  &gt; SESSION        0.029  0.022     0.027          0.012      0.029    0.027\n  593,599c593,599\n  &lt; cache            NaN    NaN       NaN          0.000        0.0    0.000\n  &lt; match(s,b)         1    Inf       Inf            Inf        1.0    1.000\n  &lt; s %in% b         NaN    NaN       NaN            NaN        NaN      NaN\n  &lt; match(b,s)       NaN    NaN       NaN            NaN        0.0      NaN\n  &lt; b %in% s         NaN    NaN       NaN          0.000        NaN      NaN\n  &lt; match(b,b)       NaN  0.000       NaN            NaN        NaN      NaN\n  &lt; b %in% b         NaN    NaN       NaN          0.000        0.0    0.000\n  ---\n  &gt; cache            NaN    NaN     0.000          0.000          0    0.000\n  &gt; match(s,b)       NaN    NaN       NaN            NaN        NaN    0.000\n  &gt; s %in% b           1  1.000       Inf            Inf        Inf      Inf\n  &gt; match(b,s)       NaN  0.000     0.000            NaN        NaN    0.000\n  &gt; b %in% s           1  1.000       Inf          1.000          1    1.000\n  &gt; match(b,b)         1    Inf       Inf            Inf        Inf      Inf\n  &gt; b %in% b           1  1.000     1.000            Inf        Inf      Inf\n  601,608c601,608\n  &lt; unique(b)          1    Inf       Inf          1.000        1.0      Inf\n  &lt; table(b)           1  7.000       Inf            Inf        Inf      Inf\n  &lt; sort(b)          NaN  0.000     0.000          0.000        NaN      NaN\n  &lt; order(b)           1    Inf     1.000            Inf        Inf      Inf\n  &lt; rank(b)            1    Inf       Inf            Inf        1.0      Inf\n  &lt; quantile(b)      NaN    NaN     0.000          0.000        NaN    0.000\n  &lt; summary(b)       NaN  0.000     0.000            NaN        0.0      NaN\n  &lt; SESSION            1  2.231     3.222          4.833        2.9    4.143\n  ---\n  &gt; unique(b)          1    Inf       Inf          2.000        Inf      Inf\n  &gt; table(b)           1    Inf       Inf            Inf        Inf   19.000\n  &gt; sort(b)            1    Inf     1.000            Inf        Inf      Inf\n  &gt; order(b)         NaN  0.000     0.000            NaN        NaN    0.000\n  &gt; rank(b)            1    Inf       Inf            Inf          2      Inf\n  &gt; quantile(b)        1  1.000     1.000          1.000        Inf    1.000\n  &gt; summary(b)         1  2.000     2.000            Inf          2      Inf\n  &gt; SESSION            1  1.318     1.074          2.417          1    1.074\n  610,616c610,616\n  &lt; cache          0.000  0.000     0.000          0.002      0.002    0.002\n  &lt; match(s,b)     0.001  0.000     0.000          0.000      0.001    0.001\n  &lt; s %in% b       0.000  0.000     0.000          0.000      0.000    0.000\n  &lt; match(b,s)     0.000  0.000     0.000          0.000      0.001    0.000\n  &lt; b %in% s       0.000  0.000     0.000          0.001      0.000    0.000\n  &lt; match(b,b)     0.000  0.001     0.000          0.000      0.000    0.000\n  &lt; b %in% b       0.000  0.000     0.000          0.001      0.001    0.001\n  ---\n  &gt; cache          0.000  0.000     0.001          0.001      0.002    0.003\n  &gt; match(s,b)     0.000  0.000     0.000          0.000      0.000    0.001\n  &gt; s %in% b       0.001  0.001     0.000          0.000      0.000    0.000\n  &gt; match(b,s)     0.000  0.001     0.001          0.000      0.000    0.001\n  &gt; b %in% s       0.001  0.001     0.000          0.001      0.001    0.001\n  &gt; match(b,b)     0.001  0.000     0.000          0.000      0.000    0.000\n  &gt; b %in% b       0.001  0.001     0.001          0.000      0.000    0.000\n  618,625c618,625\n  &lt; unique(b)      0.001  0.000     0.000          0.001      0.001    0.000\n  &lt; table(b)       0.007  0.001     0.000          0.000      0.000    0.000\n  &lt; sort(b)        0.000  0.001     0.001          0.001      0.000    0.000\n  &lt; order(b)       0.001  0.000     0.001          0.000      0.000    0.000\n  &lt; rank(b)        0.001  0.000     0.000          0.000      0.001    0.000\n  &lt; quantile(b)    0.000  0.000     0.001          0.001      0.000    0.001\n  &lt; summary(b)     0.000  0.001     0.001          0.000      0.001    0.000\n  &lt; SESSION        0.029  0.013     0.009          0.006      0.010    0.007\n  ---\n  &gt; unique(b)      0.002  0.000     0.000          0.001      0.000    0.000\n  &gt; table(b)       0.019  0.000     0.000          0.000      0.000    0.001\n  &gt; sort(b)        0.001  0.000     0.001          0.000      0.000    0.000\n  &gt; order(b)       0.000  0.003     0.001          0.000      0.000    0.001\n  &gt; rank(b)        0.002  0.000     0.000          0.000      0.001    0.000\n  &gt; quantile(b)    0.001  0.001     0.001          0.001      0.000    0.001\n  &gt; summary(b)     0.002  0.001     0.001          0.000      0.001    0.000\n  &gt; SESSION        0.029  0.022     0.027          0.012      0.029    0.027\n\n\nchecks for tests\n\nedit_log(\"bit64\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nbit64-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_bdsmatrix.html",
    "href": "packages/test_bdsmatrix.html",
    "title": "bdsmatrix",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"bdsmatrix\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/bdsmatrix\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/bdsmatrix/empty_output.Rout\")\nout &lt;- test_pkg(\"bdsmatrix\", outDir=\"packages/bdsmatrix\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'bdsmatrix'\n\n\n  comparing 'bdsmatrix-Ex.Rout' to 'bdsmatrix-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'bdsmatrix'\n  Running 'backsolvetest.R'\n  comparing 'backsolvetest.Rout' to 'backsolvetest.Rout.save' ... OK\n  Running 'bdstest.R'\n  comparing 'bdstest.Rout' to 'bdstest.Rout.save' ... OK\n  Running 'chtest.R'\n  comparing 'chtest.Rout' to 'chtest.Rout.save' ... OK\n  Running 'chtest2.R'\n  comparing 'chtest2.Rout' to 'chtest2.Rout.save' ... OK\n  Running 'corner.R'\n  comparing 'corner.Rout' to 'corner.Rout.save' ... OK\n  Running 'corner2.R'\n  comparing 'corner2.Rout' to 'corner2.Rout.save' ... OK\n  Running 'gtest.R'\n  comparing 'gtest.Rout' to 'gtest.Rout.save' ... OK\n  Running 'gtest2.R'\n  comparing 'gtest2.Rout' to 'gtest2.Rout.save' ... OK\n  Running 'matrix.R'\n  comparing 'matrix.Rout' to 'matrix.Rout.save' ... OK\n  Running 'nullr.R'\n  comparing 'nullr.Rout' to 'nullr.Rout.save' ... OK\n  Running 'reconcile.R'\n  comparing 'reconcile.Rout' to 'reconcile.Rout.save' ... OK\n  Running 'tinv.R'\n  comparing 'tinv.Rout' to 'tinv.Rout.save' ... OK\n\nedit_log(\"bdsmatrix\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nbdsmatrix-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\nbacksolvetest.Rout\n\n\n\n\nbdstest.Rout\n\n\n\n\nchtest.Rout\n\n\n\n\nchtest2.Rout\n\n\n\n\ncorner.Rout\n\n\n\n\ncorner2.Rout\n\n\n\n\ngtest.Rout\n\n\n\n\ngtest2.Rout\n\n\n\n\nmatrix.Rout\n\n\n\n\nnullr.Rout\n\n\n\n\nreconcile.Rout\n\n\n\n\ntinv.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_backports.html",
    "href": "packages/test_backports.html",
    "title": "backports",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"backports\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/backports\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/backports/empty_output.Rout\")\nout &lt;- test_pkg(\"backports\", outDir=\"packages/backports\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'backports'\n\n\n  comparing 'backports-Ex.Rout' to 'backports-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'backports'\n  Running 'test_anyNA.R'\n  Running 'test_asplit.R'\n  Running 'test_capture.output.R'\n  Running 'test_deparse1.R'\n  Running 'test_dir.exists.R'\n  Running 'test_dotlibPaths.R'\n  Running 'test_dotsElt.R'\n  Running 'test_dotsLength.R'\n  Running 'test_dotsNames.R'\n  Running 'test_dQuote.R'\n  Running 'test_file.info.R'\n  Running 'test_file.mode.R'\n  Running 'test_file.mtime.R'\n  Running 'test_file.size.R'\n  Running 'test_get0.R'\n  Running 'test_hasName.R'\n  Running 'test_isFALSE.R'\n  Running 'test_isNamespaceLoaded.R'\n  Running 'test_isTRUE.R'\n  Running 'test_lengths.R'\n  Running 'test_list2DF.R'\n  Running 'test_null_coalesce.R'\n  Running 'test_paste.R'\n  Running 'test_R_user_dir.R'\n  Running 'test_Rconcordance.R'\n  Running 'test_removeSource.R'\n  Running 'test_startsWith.R'\n  Running 'test_stopifnot.R'\n  Running 'test_str2expression.R'\n  Running 'test_str2lang.R'\n  Running 'test_strrep.R'\n  Running 'test_suppressWarnings.R'\n  Running 'test_trimws.R'\n  Running 'test_URLencode.R'\n  Running 'test_valid.factor.R'\n  Running 'test_warningCondition.R'\n\nedit_log(\"backports\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nbackports-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntest_R_user_dir.Rout\n\n\n\n\ntest_Rconcordance.Rout\n\n\n\n\ntest_URLencode.Rout\n\n\n\n\ntest_anyNA.Rout\n\n\n\n\ntest_asplit.Rout\n\n\n\n\ntest_capture.output.Rout\n\n\n\n\ntest_dQuote.Rout\n\n\n\n\ntest_deparse1.Rout\n\n\n\n\ntest_dir.exists.Rout\n\n\n\n\ntest_dotlibPaths.Rout\n\n\n\n\ntest_dotsElt.Rout\n\n\n\n\ntest_dotsLength.Rout\n\n\n\n\ntest_dotsNames.Rout\n\n\n\n\ntest_file.info.Rout\n\n\n\n\ntest_file.mode.Rout\n\n\n\n\ntest_file.mtime.Rout\n\n\n\n\ntest_file.size.Rout\n\n\n\n\ntest_get0.Rout\n\n\n\n\ntest_hasName.Rout\n\n\n\n\ntest_isFALSE.Rout\n\n\n\n\ntest_isNamespaceLoaded.Rout\n\n\n\n\ntest_isTRUE.Rout\n\n\n\n\ntest_lengths.Rout\n\n\n\n\ntest_list2DF.Rout\n\n\n\n\ntest_null_coalesce.Rout\n\n\n\n\ntest_paste.Rout\n\n\n\n\ntest_removeSource.Rout\n\n\n\n\ntest_startsWith.Rout\n\n\n\n\ntest_stopifnot.Rout\n\n\n\n\ntest_str2expression.Rout\n\n\n\n\ntest_str2lang.Rout\n\n\n\n\ntest_strrep.Rout\n\n\n\n\ntest_suppressWarnings.Rout\n\n\n\n\ntest_trimws.Rout\n\n\n\n\ntest_valid.factor.Rout\n\n\n\n\ntest_warningCondition.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_assertthat.html",
    "href": "packages/test_assertthat.html",
    "title": "assertthat",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"assertthat\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/assertthat\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/assertthat/empty_output.Rout\")\nout &lt;- test_pkg(\"assertthat\", outDir=\"packages/assertthat\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'assertthat'\n\n\n  comparing 'assertthat-Ex.Rout' to 'assertthat-Ex.Rout.prev' ... NOTE\n\n\n  124c124\n  &lt; [1] \"Path '/tmp/RtmpOJEAcW/file43fd732f6a057' does not exist\"\n  ---\n  &gt; [1] \"Path '/tmp/RtmpQk88oH/file177a91382b9ed' does not exist\"\n  128c128\n  &lt; [1] \"Path '/tmp/RtmpOJEAcW/file43fd732f6a057' does not exist\"\n  ---\n  &gt; [1] \"Path '/tmp/RtmpQk88oH/file177a91382b9ed' does not exist\"\n  136c136\n  &lt; [1] \"Path '/tmp/RtmpOJEAcW/file43fd732f6a057' is not a directory\"\n  ---\n  &gt; [1] \"Path '/tmp/RtmpQk88oH/file177a91382b9ed' is not a directory\"\n  146c146\n  &lt; [1] \"Path '/tmp/RtmpOJEAcW/file43fd732f6a057' does not exist\"\n  ---\n  &gt; [1] \"Path '/tmp/RtmpQk88oH/file177a91382b9ed' does not exist\"\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'assertthat'\n  Running 'testthat.R'\n\nedit_log(\"assertthat\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nassertthat-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_arrow.html",
    "href": "packages/test_arrow.html",
    "title": "arrow",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"arrow\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/arrow\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/arrow/empty_output.Rout\")\nout &lt;- test_pkg(\"arrow\", outDir=\"packages/arrow\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'arrow'\n\n\n  comparing 'arrow-Ex.Rout' to 'arrow-Ex.Rout.prev' ... NOTE\n\n\n  2469,2471c2469,2471\n  &lt; 1     6     19.7\n  &lt; 2     8     15.1\n  &lt; 3     4     23.7\n  ---\n  &gt; 1     4     23.7\n  &gt; 2     6     19.7\n  &gt; 3     8     15.1\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'arrow'\n  Running 'testthat.R'\n\nedit_log(\"arrow\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\narrow-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_alluvial.html",
    "href": "packages/test_alluvial.html",
    "title": "alluvial",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"alluvial\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/alluvial\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/alluvial/empty_output.Rout\")\nout &lt;- test_pkg(\"alluvial\", outDir=\"packages/alluvial\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'alluvial'\n\n\n  comparing 'alluvial-Ex.Rout' to 'alluvial-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'alluvial'\n  Running 'testall.R'\n\nedit_log(\"alluvial\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nalluvial-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestall.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_TH.data.html",
    "href": "packages/test_TH.data.html",
    "title": "TH.data",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"TH.data\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/TH.data\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/TH.data/empty_output.Rout\")\nout &lt;- test_pkg(\"TH.data\", outDir=\"packages/TH.data\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'TH.data'\n\n\n  comparing 'TH.data-Ex.Rout' to 'TH.data-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"TH.data\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nTH.data-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_SparseM.html",
    "href": "packages/test_SparseM.html",
    "title": "SparseM",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"SparseM\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/SparseM\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/SparseM/empty_output.Rout\")\nout &lt;- test_pkg(\"SparseM\", outDir=\"packages/SparseM\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'SparseM'\n\n\n  comparing 'SparseM-Ex.Rout' to 'SparseM-Ex.Rout.prev' ... NOTE\n\n\n  434c434\n  &lt; slm time = 0.07 0.018 0.088 0 0 \n  ---\n  &gt; slm time = 0.068 0.018 0.086 0 0 \n  463c463\n  &lt; lm time = 0.477 0.014 0.498 0 0 \n  ---\n  &gt; lm time = 0.468 0.015 0.486 0 0 \n  1252c1252\n  &lt; slm time = 0.097 0 0.098 0 0 \n  ---\n  &gt; slm time = 0.095 0 0.095 0 0 \n\n\nchecks for tests\n\nedit_log(\"SparseM\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nSparseM-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_RcppEigen.html",
    "href": "packages/test_RcppEigen.html",
    "title": "RcppEigen",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"RcppEigen\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/RcppEigen\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/RcppEigen/empty_output.Rout\")\nout &lt;- test_pkg(\"RcppEigen\", outDir=\"packages/RcppEigen\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'RcppEigen'\n\n\n  comparing 'RcppEigen-Ex.Rout' to 'RcppEigen-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'RcppEigen'\n  Running 'tinytest.R'\n\nedit_log(\"RcppEigen\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nRcppEigen-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntinytest.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_Rcpp.html",
    "href": "packages/test_Rcpp.html",
    "title": "Rcpp",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"Rcpp\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/Rcpp\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/Rcpp/empty_output.Rout\")\nout &lt;- test_pkg(\"Rcpp\", outDir=\"packages/Rcpp\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'Rcpp'\n\n\n  comparing 'Rcpp-Ex.Rout' to 'Rcpp-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'Rcpp'\n  Running 'tinytest.R'\n\nedit_log(\"Rcpp\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nRcpp-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntinytest.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_RPostgres.html",
    "href": "packages/test_RPostgres.html",
    "title": "RPostgres",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"RPostgres\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/RPostgres\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/RPostgres/empty_output.Rout\")\nout &lt;- test_pkg(\"RPostgres\", outDir=\"packages/RPostgres\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'RPostgres'\n\n\n  comparing 'RPostgres-Ex.Rout' to 'RPostgres-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'RPostgres'\n  Running 'testthat.R'\n\nedit_log(\"RPostgres\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nRPostgres-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_RColorBrewer.html",
    "href": "packages/test_RColorBrewer.html",
    "title": "RColorBrewer",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"RColorBrewer\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/RColorBrewer\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/RColorBrewer/empty_output.Rout\")\nout &lt;- test_pkg(\"RColorBrewer\", outDir=\"packages/RColorBrewer\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'RColorBrewer'\n\n\n  comparing 'RColorBrewer-Ex.Rout' to 'RColorBrewer-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"RColorBrewer\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nRColorBrewer-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_QuickJSR.html",
    "href": "packages/test_QuickJSR.html",
    "title": "QuickJSR",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"QuickJSR\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/QuickJSR\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/QuickJSR/empty_output.Rout\")\nout &lt;- test_pkg(\"QuickJSR\", outDir=\"packages/QuickJSR\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'QuickJSR'\n\n\n  comparing 'QuickJSR-Ex.Rout' to 'QuickJSR-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'QuickJSR'\n  Running 'tinytest.R'\nError: running the tests in 'tinytest.R' failed\n\nedit_log(\"QuickJSR\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nQuickJSR-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_MatrixModels.html",
    "href": "packages/test_MatrixModels.html",
    "title": "MatrixModels",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"MatrixModels\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/MatrixModels\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/MatrixModels/empty_output.Rout\")\nout &lt;- test_pkg(\"MatrixModels\", outDir=\"packages/MatrixModels\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'MatrixModels'\n\n\n  comparing 'MatrixModels-Ex.Rout' to 'MatrixModels-Ex.Rout.prev' ... NOTE\n\n\n  350c350\n  &lt;   0.006   0.000   0.007 \n  ---\n  &gt;   0.007   0.000   0.007 \n  353c353\n  &lt;   0.003   0.000   0.003 \n  ---\n  &gt;   0.004   0.000   0.004 \n  358c358\n  &lt;   0.002   0.000   0.002 \n  ---\n  &gt;   0.002   0.000   0.003 \n  368c368\n  &lt;   0.004   0.000   0.004 \n  ---\n  &gt;   0.005   0.000   0.005 \n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'MatrixModels'\n  Running 'MModels.R'\n\nedit_log(\"MatrixModels\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nMatrixModels-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\nMModels.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_Lahman.html",
    "href": "packages/test_Lahman.html",
    "title": "Lahman",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"Lahman\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/Lahman\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/Lahman/empty_output.Rout\")\nout &lt;- test_pkg(\"Lahman\", outDir=\"packages/Lahman\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'Lahman'\n\n\nError: running examples in 'Lahman-Ex.R' failed\n\nedit_log(\"Lahman\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_HSAUR3.html",
    "href": "packages/test_HSAUR3.html",
    "title": "HSAUR3",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"HSAUR3\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/HSAUR3\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/HSAUR3/empty_output.Rout\")\nout &lt;- test_pkg(\"HSAUR3\", outDir=\"packages/HSAUR3\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'HSAUR3'\n\n\nError: running examples in 'HSAUR3-Ex.R' failed\n\nedit_log(\"HSAUR3\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_DiagrammeR.html",
    "href": "packages/test_DiagrammeR.html",
    "title": "DiagrammeR",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"DiagrammeR\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/DiagrammeR\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/DiagrammeR/empty_output.Rout\")\nout &lt;- test_pkg(\"DiagrammeR\", outDir=\"packages/DiagrammeR\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'DiagrammeR'\n\n\n  comparing 'DiagrammeR-Ex.Rout' to 'DiagrammeR-Ex.Rout.prev' ... NOTE\n\n\n  6795,6798c6795,6798\n  &lt; 1          1 create_graph  2024-11-21 16:58:37  0.00572     0     0     0     0\n  &lt; 2          2 add_gnm_graph 2024-11-21 16:58:37  0.0212     10    15    10    15\n  &lt; 3          3 delete_node   2024-11-21 16:58:37  0.0272      9    11    -1    -4\n  &lt; 4          4 delete_node   2024-11-21 16:58:37  0.0333      8     8    -1    -3\n  ---\n  &gt; 1          1 create_graph  2024-11-21 13:19:41  0.00577     0     0     0     0\n  &gt; 2          2 add_gnm_graph 2024-11-21 13:19:41  0.0223     10    15    10    15\n  &gt; 3          3 delete_node   2024-11-21 13:19:41  0.0282      9    11    -1    -4\n  &gt; 4          4 delete_node   2024-11-21 13:19:41  0.0342      8     8    -1    -3\n  6870,6872c6870,6872\n  &lt; 1     1 graph_4DmAh8Wq 2024-11-21 16:58:37 Europe/London     4     3     TRUE\n  &lt; 2     2 graph_1tJGIOUk 2024-11-21 16:58:37 Europe/London     5     5     TRUE\n  &lt; 3     3 graph_YrOgTiFJ 2024-11-21 16:58:37 Europe/London     6     5     TRUE\n  ---\n  &gt; 1     1 graph_4DmAh8Wq 2024-11-21 13:19:41 Europe/London     4     3     TRUE\n  &gt; 2     2 graph_1tJGIOUk 2024-11-21 13:19:41 Europe/London     5     5     TRUE\n  &gt; 3     3 graph_YrOgTiFJ 2024-11-21 13:19:41 Europe/London     6     5     TRUE\n  10073,10074c10073,10074\n  &lt; 1     1 graph_4DmAh8Wq 2024-11-21 16:58:40 Europe/London     4     3     TRUE\n  &lt; 2     2 graph_YrOgTiFJ 2024-11-21 16:58:40 Europe/London     6     5     TRUE\n  ---\n  &gt; 1     1 graph_4DmAh8Wq 2024-11-21 13:19:44 Europe/London     4     3     TRUE\n  &gt; 2     2 graph_YrOgTiFJ 2024-11-21 13:19:44 Europe/London     6     5     TRUE\n  12118c12118\n  &lt; IGRAPH aad6cd9 DN-B 36 50 -- \n  ---\n  &gt; IGRAPH e1788f2 DN-B 36 50 -- \n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'DiagrammeR'\n  Running 'testthat.R'\n\nedit_log(\"DiagrammeR\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nDiagrammeR-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_CompQuadForm.html",
    "href": "packages/test_CompQuadForm.html",
    "title": "CompQuadForm",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"CompQuadForm\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/CompQuadForm\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/CompQuadForm/empty_output.Rout\")\nout &lt;- test_pkg(\"CompQuadForm\", outDir=\"packages/CompQuadForm\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'CompQuadForm'\n\n\n  comparing 'CompQuadForm-Ex.Rout' to 'CompQuadForm-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"CompQuadForm\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nCompQuadForm-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_BH.html",
    "href": "packages/test_BH.html",
    "title": "BH",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"BH\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/BH\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/BH/empty_output.Rout\")\nout &lt;- test_pkg(\"BH\", outDir=\"packages/BH\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'BH'\n\n\nWarning: no examples found for package 'BH'\n\n\nchecks for tests\n\nedit_log(\"BH\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_AsioHeaders.html",
    "href": "packages/test_AsioHeaders.html",
    "title": "AsioHeaders",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"AsioHeaders\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/AsioHeaders\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/AsioHeaders/empty_output.Rout\")\nout &lt;- test_pkg(\"AsioHeaders\", outDir=\"packages/AsioHeaders\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'AsioHeaders'\n\n\n  comparing 'AsioHeaders-Ex.Rout' to 'AsioHeaders-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'AsioHeaders'\n  Running 'simpleTests.R'\n\nedit_log(\"AsioHeaders\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nAsioHeaders-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\nsimpleTests.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_BiocManager.html",
    "href": "packages/test_BiocManager.html",
    "title": "BiocManager",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"BiocManager\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/BiocManager\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/BiocManager/empty_output.Rout\")\nout &lt;- test_pkg(\"BiocManager\", outDir=\"packages/BiocManager\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'BiocManager'\n\n\n  comparing 'BiocManager-Ex.Rout' to 'BiocManager-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'BiocManager'\n  Running 'testthat.R'\n\nedit_log(\"BiocManager\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nBiocManager-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_DBI.html",
    "href": "packages/test_DBI.html",
    "title": "DBI",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"DBI\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/DBI\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/DBI/empty_output.Rout\")\nout &lt;- test_pkg(\"DBI\", outDir=\"packages/DBI\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'DBI'\n\n\n  comparing 'DBI-Ex.Rout' to 'DBI-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'DBI'\n  Running 'testthat.R'\n\nedit_log(\"DBI\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nDBI-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_Formula.html",
    "href": "packages/test_Formula.html",
    "title": "Formula",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"Formula\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/Formula\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/Formula/empty_output.Rout\")\nout &lt;- test_pkg(\"Formula\", outDir=\"packages/Formula\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'Formula'\n\n\n  comparing 'Formula-Ex.Rout' to 'Formula-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'Formula'\n\nedit_log(\"Formula\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nFormula-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_Hmisc.html",
    "href": "packages/test_Hmisc.html",
    "title": "Hmisc",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"Hmisc\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/Hmisc\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/Hmisc/empty_output.Rout\")\nout &lt;- test_pkg(\"Hmisc\", outDir=\"packages/Hmisc\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'Hmisc'\n\n\n  comparing 'Hmisc-Ex.Rout' to 'Hmisc-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"Hmisc\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nHmisc-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_MEMSS.html",
    "href": "packages/test_MEMSS.html",
    "title": "MEMSS",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"MEMSS\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/MEMSS\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/MEMSS/empty_output.Rout\")\nout &lt;- test_pkg(\"MEMSS\", outDir=\"packages/MEMSS\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'MEMSS'\n\n\n  comparing 'MEMSS-Ex.Rout' to 'MEMSS-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'MEMSS'\n  Running 'Pixel.R'\n  comparing 'Pixel.Rout' to 'Pixel.Rout.save' ... OK\n\nedit_log(\"MEMSS\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nMEMSS-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\nPixel.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_PKI.html",
    "href": "packages/test_PKI.html",
    "title": "PKI",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"PKI\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/PKI\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/PKI/empty_output.Rout\")\nout &lt;- test_pkg(\"PKI\", outDir=\"packages/PKI\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'PKI'\n\n\n  comparing 'PKI-Ex.Rout' to 'PKI-Ex.Rout.prev' ... NOTE\n\n\n  40,42c40,42\n  &lt;  [1] 30 48 02 41 00 e5 52 78 7b 12 b6 f7 ba ef 38 c7 13 a8 8e 96 1c b3 1b 1f fc\n  &lt; [26] 4a 43 f9 bc e0 95 68 2d 0c d2 8b bb 60 3f ee fb 92 66 47 c1 9f 4c 5e 00 54\n  &lt; [51] 06 83 89 fc 83 b6 7b d6 2e c1 6f 49 55 23 48 c8 e5 fb 21 02 03 01 00 01\n  ---\n  &gt;  [1] 30 48 02 41 00 bd cd c6 99 26 90 80 6e 08 3e 1e 07 2e ad 09 fb 03 ce e3 cc\n  &gt; [26] 2f 49 11 d5 d0 7a eb 52 4e 9a 6b ca 99 39 98 0c b2 8f 92 b7 56 e0 53 95 94\n  &gt; [51] 12 2b f4 af f0 bc ad 60 db ad a8 00 ff 1c 44 84 31 8c dd 02 03 01 00 01\n  54,56c54,56\n  &lt;  [1] 00 e5 52 78 7b 12 b6 f7 ba ef 38 c7 13 a8 8e 96 1c b3 1b 1f fc 4a 43 f9 bc\n  &lt; [26] e0 95 68 2d 0c d2 8b bb 60 3f ee fb 92 66 47 c1 9f 4c 5e 00 54 06 83 89 fc\n  &lt; [51] 83 b6 7b d6 2e c1 6f 49 55 23 48 c8 e5 fb 21\n  ---\n  &gt;  [1] 00 bd cd c6 99 26 90 80 6e 08 3e 1e 07 2e ad 09 fb 03 ce e3 cc 2f 49 11 d5\n  &gt; [26] d0 7a eb 52 4e 9a 6b ca 99 39 98 0c b2 8f 92 b7 56 e0 53 95 94 12 2b f4 af\n  &gt; [51] f0 bc ad 60 db ad a8 00 ff 1c 44 84 31 8c dd\n  175c175\n  &lt;  [1] 37 b8 e6 4a b9 b3 69 1a 0c f3\n  ---\n  &gt;  [1] d3 35 1b 89 df ad f5 93 6a 6e\n  230c230\n  &lt;  [1] ba 65 ed f0 27 fa 45 b2 32 f3 d4 dd b0 bf 88 d5 d7 84 b2 04\n  ---\n  &gt;  [1] 5b 34 cd a1 ea de 44 7e d2 2f 95 61 da 2a fc ca 3b a6 08 d7\n  362c362\n  &lt;   0.001   0.000   0.001 \n  ---\n  &gt;   0.000   0.001   0.001 \n  365c365\n  &lt;   0.019   0.000   0.019 \n  ---\n  &gt;   0.018   0.000   0.019 \n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'PKI'\n  Running 'test.R'\n\nedit_log(\"PKI\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nPKI-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntest.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_R6.html",
    "href": "packages/test_R6.html",
    "title": "R6",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"R6\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/R6\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/R6/empty_output.Rout\")\nout &lt;- test_pkg(\"R6\", outDir=\"packages/R6\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'R6'\n\n\n  comparing 'R6-Ex.Rout' to 'R6-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'R6'\n  Running 'testthat.R'\n\nedit_log(\"R6\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nR6-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_RMariaDB.html",
    "href": "packages/test_RMariaDB.html",
    "title": "RMariaDB",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"RMariaDB\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/RMariaDB\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/RMariaDB/empty_output.Rout\")\nout &lt;- test_pkg(\"RMariaDB\", outDir=\"packages/RMariaDB\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'RMariaDB'\n\n\n  comparing 'RMariaDB-Ex.Rout' to 'RMariaDB-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'RMariaDB'\n  Running 'testthat.R'\n\nedit_log(\"RMariaDB\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nRMariaDB-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_RSQLite.html",
    "href": "packages/test_RSQLite.html",
    "title": "RSQLite",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"RSQLite\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/RSQLite\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/RSQLite/empty_output.Rout\")\nout &lt;- test_pkg(\"RSQLite\", outDir=\"packages/RSQLite\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'RSQLite'\n\n\n  comparing 'RSQLite-Ex.Rout' to 'RSQLite-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'RSQLite'\n  Running 'testthat.R'\n\nedit_log(\"RSQLite\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nRSQLite-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_RcppArmadillo.html",
    "href": "packages/test_RcppArmadillo.html",
    "title": "RcppArmadillo",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"RcppArmadillo\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/RcppArmadillo\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/RcppArmadillo/empty_output.Rout\")\nout &lt;- test_pkg(\"RcppArmadillo\", outDir=\"packages/RcppArmadillo\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'RcppArmadillo'\n\n\n  comparing 'RcppArmadillo-Ex.Rout' to 'RcppArmadillo-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'RcppArmadillo'\n  Running 'tinytest.R'\n\nedit_log(\"RcppArmadillo\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nRcppArmadillo-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntinytest.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_RcppParallel.html",
    "href": "packages/test_RcppParallel.html",
    "title": "RcppParallel",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"RcppParallel\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/RcppParallel\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/RcppParallel/empty_output.Rout\")\nout &lt;- test_pkg(\"RcppParallel\", outDir=\"packages/RcppParallel\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'RcppParallel'\n\n\n  comparing 'RcppParallel-Ex.Rout' to 'RcppParallel-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'RcppParallel'\n  Running 'doRUnit.R'\nError: running the tests in 'doRUnit.R' failed\n\nedit_log(\"RcppParallel\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nRcppParallel-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_StanHeaders.html",
    "href": "packages/test_StanHeaders.html",
    "title": "StanHeaders",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"StanHeaders\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/StanHeaders\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/StanHeaders/empty_output.Rout\")\nout &lt;- test_pkg(\"StanHeaders\", outDir=\"packages/StanHeaders\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'StanHeaders'\n\n\n  comparing 'StanHeaders-Ex.Rout' to 'StanHeaders-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'StanHeaders'\n  Running 'rstan.R'\n\nedit_log(\"StanHeaders\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nStanHeaders-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\nrstan.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_abind.html",
    "href": "packages/test_abind.html",
    "title": "abind",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"abind\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/abind\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/abind/empty_output.Rout\")\nout &lt;- test_pkg(\"abind\", outDir=\"packages/abind\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'abind'\n\n\n  comparing 'abind-Ex.Rout' to 'abind-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'abind'\n  Running 'abind.R'\n  comparing 'abind.Rout' to 'abind.Rout.save' ... OK\n  Running 'adrop.R'\n  comparing 'adrop.Rout' to 'adrop.Rout.save' ... OK\n  Running 'afill.R'\n  comparing 'afill.Rout' to 'afill.Rout.save' ...  Running 'asub.R'\n  comparing 'asub.Rout' to 'asub.Rout.save' ... OK\n  Running 'dnns.R'\n  comparing 'dnns.Rout' to 'dnns.Rout.save' ... OK\n\nedit_log(\"abind\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nabind-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\nabind.Rout\n\n\n\n\nadrop.Rout\n\n\n\n\nafill.Rout\n\n\n\n\nasub.Rout\n\n\n\n\ndnns.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_ape.html",
    "href": "packages/test_ape.html",
    "title": "ape",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"ape\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/ape\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/ape/empty_output.Rout\")\nout &lt;- test_pkg(\"ape\", outDir=\"packages/ape\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'ape'\n\n\n  comparing 'ape-Ex.Rout' to 'ape-Ex.Rout.prev' ... NOTE\n\n\n  4002c4002\n  &lt; Computation time = 0.271000  sec \n  ---\n  &gt; Computation time = 0.255000  sec \n  4058c4058\n  &lt; Computation time = 0.149000  sec \n  ---\n  &gt; Computation time = 0.138000  sec \n  4103c4103\n  &lt; Computation time = 0.272000  sec \n  ---\n  &gt; Computation time = 0.252000  sec \n  4802c4802\n  &lt; Computation time = 0.790000  sec \n  ---\n  &gt; Computation time = 0.779000  sec \n\n\nchecks for tests\n\nedit_log(\"ape\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nape-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_askpass.html",
    "href": "packages/test_askpass.html",
    "title": "askpass",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"askpass\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/askpass\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/askpass/empty_output.Rout\")\nout &lt;- test_pkg(\"askpass\", outDir=\"packages/askpass\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'askpass'\n\n\n  comparing 'askpass-Ex.Rout' to 'askpass-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'askpass'\n  Running 'testthat.R'\n\nedit_log(\"askpass\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\naskpass-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_babynames.html",
    "href": "packages/test_babynames.html",
    "title": "babynames",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"babynames\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/babynames\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/babynames/empty_output.Rout\")\nout &lt;- test_pkg(\"babynames\", outDir=\"packages/babynames\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'babynames'\n\n\nWarning: no examples found for package 'babynames'\n\n\nchecks for tests\n\n\nDOing the tests\n\n\nRunning specific tests for package 'babynames'\n\n\n  Running 'testthat.R'\n\nedit_log(\"babynames\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_base64enc.html",
    "href": "packages/test_base64enc.html",
    "title": "base64enc",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"base64enc\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/base64enc\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/base64enc/empty_output.Rout\")\nout &lt;- test_pkg(\"base64enc\", outDir=\"packages/base64enc\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'base64enc'\n\n\n  comparing 'base64enc-Ex.Rout' to 'base64enc-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"base64enc\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nbase64enc-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_bit.html",
    "href": "packages/test_bit.html",
    "title": "bit",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"bit\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/bit\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/bit/empty_output.Rout\")\nout &lt;- test_pkg(\"bit\", outDir=\"packages/bit\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'bit'\n\n\n  comparing 'bit-Ex.Rout' to 'bit-Ex.Rout.prev' ... NOTE\n\n\n  1745c1745\n  &lt; 1.105312e-05 1.181626e-06 1.230860e-05 \n  ---\n  &gt; 1.196616e-05 1.341036e-06 5.178461e-05 \n  1748c1748\n  &lt;   0.178   0.014   0.194 \n  ---\n  &gt;   0.175   0.017   0.465 \n  1751c1751\n  &lt; 0.1703333 0.0180000 0.1923333 \n  ---\n  &gt;   0.175   0.017   0.439 \n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'bit'\n  Running 'testthat.R'\n\nedit_log(\"bit\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nbit-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_blob.html",
    "href": "packages/test_blob.html",
    "title": "blob",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"blob\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/blob\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/blob/empty_output.Rout\")\nout &lt;- test_pkg(\"blob\", outDir=\"packages/blob\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'blob'\n\n\n  comparing 'blob-Ex.Rout' to 'blob-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'blob'\n  Running 'testthat.R'\n\nedit_log(\"blob\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nblob-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_bookdown.html",
    "href": "packages/test_bookdown.html",
    "title": "bookdown",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"bookdown\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/bookdown\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/bookdown/empty_output.Rout\")\nout &lt;- test_pkg(\"bookdown\", outDir=\"packages/bookdown\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'bookdown'\n\n\n  comparing 'bookdown-Ex.Rout' to 'bookdown-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'bookdown'\n  Running 'test-all.R'\n  Running 'test-rmd.R'\n  Running 'testthat.R'\n\nedit_log(\"bookdown\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nbookdown-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntest-all.Rout\n\n\n\n\ntest-rmd.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_brio.html",
    "href": "packages/test_brio.html",
    "title": "brio",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"brio\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/brio\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/brio/empty_output.Rout\")\nout &lt;- test_pkg(\"brio\", outDir=\"packages/brio\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'brio'\n\n\n  comparing 'brio-Ex.Rout' to 'brio-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'brio'\n  Running 'testthat.R'\n\nedit_log(\"brio\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nbrio-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_broom.html",
    "href": "packages/test_broom.html",
    "title": "broom",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"broom\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/broom\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/broom/empty_output.Rout\")\nout &lt;- test_pkg(\"broom\", outDir=\"packages/broom\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'broom'\n\n\n  comparing 'broom-Ex.Rout' to 'broom-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'broom'\n  Running 'spelling.R'\n  Running 'test-all.R'\n\nedit_log(\"broom\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nbroom-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\nspelling.Rout\n\n\n\n\ntest-all.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_cachem.html",
    "href": "packages/test_cachem.html",
    "title": "cachem",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"cachem\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/cachem\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/cachem/empty_output.Rout\")\nout &lt;- test_pkg(\"cachem\", outDir=\"packages/cachem\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'cachem'\n\n\n  comparing 'cachem-Ex.Rout' to 'cachem-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'cachem'\n  Running 'testthat.R'\n\nedit_log(\"cachem\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\ncachem-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_car.html",
    "href": "packages/test_car.html",
    "title": "car",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"car\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/car\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/car/empty_output.Rout\")\nout &lt;- test_pkg(\"car\", outDir=\"packages/car\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'car'\n\n\n  comparing 'car-Ex.Rout' to 'car-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"car\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\ncar-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_cctu.html",
    "href": "packages/test_cctu.html",
    "title": "cctu",
    "section": "",
    "text": "#source(\"test_pkg.R\")\nsource(\"edit_log.R\")\nunlink(\"packages/cctu\")\ndir.create(\"packages/cctu\")\n\nWarning in dir.create(\"packages/cctu\"): 'packages/cctu' already exists\n\nout &lt;- tools::testInstalledPackage(\"cctu\", outDir=\"packages/cctu\",\n                                   type= c(\"examples\", \"tests\")\n)\n\nTesting examples for package 'cctu'\n\n\n  comparing 'cctu-Ex.Rout' to 'cctu-Ex.Rout.prev' ... OK\nRunning specific tests for package 'cctu'\n  Running 'testthat.R'\n\n#needs rms installed to pass tests\nedit_log(\"cctu\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\ncctu-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_checkmate.html",
    "href": "packages/test_checkmate.html",
    "title": "checkmate",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"checkmate\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/checkmate\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/checkmate/empty_output.Rout\")\nout &lt;- test_pkg(\"checkmate\", outDir=\"packages/checkmate\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'checkmate'\n\n\n  comparing 'checkmate-Ex.Rout' to 'checkmate-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'checkmate'\n  Running 'test-all.R'\n\nedit_log(\"checkmate\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\ncheckmate-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntest-all.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_cli.html",
    "href": "packages/test_cli.html",
    "title": "cli",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"cli\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/cli\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/cli/empty_output.Rout\")\nout &lt;- test_pkg(\"cli\", outDir=\"packages/cli\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'cli'\n\n\n  comparing 'cli-Ex.Rout' to 'cli-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'cli'\n  Running 'testthat.R'\nError: running the tests in 'testthat.R' failed\n\nedit_log(\"cli\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\ncli-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_coda.html",
    "href": "packages/test_coda.html",
    "title": "coda",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"coda\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/coda\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/coda/empty_output.Rout\")\nout &lt;- test_pkg(\"coda\", outDir=\"packages/coda\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'coda'\n\n\n  comparing 'coda-Ex.Rout' to 'coda-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"coda\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\ncoda-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_commonmark.html",
    "href": "packages/test_commonmark.html",
    "title": "commonmark",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"commonmark\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/commonmark\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/commonmark/empty_output.Rout\")\nout &lt;- test_pkg(\"commonmark\", outDir=\"packages/commonmark\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'commonmark'\n\n\n  comparing 'commonmark-Ex.Rout' to 'commonmark-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'commonmark'\n  Running 'testthat.R'\n\nedit_log(\"commonmark\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\ncommonmark-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_consort.html",
    "href": "packages/test_consort.html",
    "title": "consort",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"consort\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/consort\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/consort/empty_output.Rout\")\nout &lt;- test_pkg(\"consort\", outDir=\"packages/consort\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'consort'\n\n\n  comparing 'consort-Ex.Rout' to 'consort-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'consort'\n  Running 'testthat.R'\n\nedit_log(\"consort\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nconsort-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_coxme.html",
    "href": "packages/test_coxme.html",
    "title": "coxme",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"coxme\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/coxme\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/coxme/empty_output.Rout\")\nout &lt;- test_pkg(\"coxme\", outDir=\"packages/coxme\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'coxme'\n\n\n  comparing 'coxme-Ex.Rout' to 'coxme-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'coxme'\n  Running 'brfit.R'\n  Running 'lmekin1.R'\n  comparing 'lmekin1.Rout' to 'lmekin1.Rout.save' ... OK\n  Running 'lmekin2.R'\n  comparing 'lmekin2.Rout' to 'lmekin2.Rout.save' ... OK\n  Running 'nest1.R'\n  comparing 'nest1.Rout' to 'nest1.Rout.save' ... OK\n  Running 'nest2.R'\n  comparing 'nest2.Rout' to 'nest2.Rout.save' ... OK\n  Running 'refine.R'\n  comparing 'refine.Rout' to 'refine.Rout.save' ... OK\n  Running 'refine1.R'\n  comparing 'refine1.Rout' to 'refine1.Rout.save' ... OK\n  Running 'refine2.R'\n  comparing 'refine2.Rout' to 'refine2.Rout.save' ... OK\n  Running 'refine3.R'\n  comparing 'refine3.Rout' to 'refine3.Rout.save' ... OK\n  Running 'shrink.R'\n  comparing 'shrink.Rout' to 'shrink.Rout.save' ... OK\n  Running 'slope1.R'\n  comparing 'slope1.Rout' to 'slope1.Rout.save' ... OK\n  Running 'slope2.R'\n  comparing 'slope2.Rout' to 'slope2.Rout.save' ... OK\n  Running 'slope3.R'\n  comparing 'slope3.Rout' to 'slope3.Rout.save' ... OK\n  Running 'slope4.R'\n  comparing 'slope4.Rout' to 'slope4.Rout.save' ... OK\n  Running 'strata1.R'\n  comparing 'strata1.Rout' to 'strata1.Rout.save' ... OK\n  Running 'test0.R'\n  comparing 'test0.Rout' to 'test0.Rout.save' ... OK\n  Running 'test1.R'\n  comparing 'test1.Rout' to 'test1.Rout.save' ... OK\n  Running 'test2.R'\n  comparing 'test2.Rout' to 'test2.Rout.save' ... OK\n  Running 'test3.R'\n  comparing 'test3.Rout' to 'test3.Rout.save' ... OK\n  Running 'test4.R'\n  comparing 'test4.Rout' to 'test4.Rout.save' ... OK\n  Running 'twoterm.R'\n  comparing 'twoterm.Rout' to 'twoterm.Rout.save' ... OK\n\nedit_log(\"coxme\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\ncoxme-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\nbrfit.Rout\n\n\n\n\nlmekin1.Rout\n\n\n\n\nlmekin2.Rout\n\n\n\n\nnest1.Rout\n\n\n\n\nnest2.Rout\n\n\n\n\nrefine.Rout\n\n\n\n\nrefine1.Rout\n\n\n\n\nrefine2.Rout\n\n\n\n\nrefine3.Rout\n\n\n\n\nshrink.Rout\n\n\n\n\nslope1.Rout\n\n\n\n\nslope2.Rout\n\n\n\n\nslope3.Rout\n\n\n\n\nslope4.Rout\n\n\n\n\nstrata1.Rout\n\n\n\n\ntest0.Rout\n\n\n\n\ntest1.Rout\n\n\n\n\ntest2.Rout\n\n\n\n\ntest3.Rout\n\n\n\n\ntest4.Rout\n\n\n\n\ntwoterm.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_crayon.html",
    "href": "packages/test_crayon.html",
    "title": "crayon",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"crayon\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/crayon\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/crayon/empty_output.Rout\")\nout &lt;- test_pkg(\"crayon\", outDir=\"packages/crayon\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'crayon'\n\n\n  comparing 'crayon-Ex.Rout' to 'crayon-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'crayon'\n  Running 'testthat.R'\n\nedit_log(\"crayon\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\ncrayon-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_curl.html",
    "href": "packages/test_curl.html",
    "title": "curl",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"curl\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/curl\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/curl/empty_output.Rout\")\nout &lt;- test_pkg(\"curl\", outDir=\"packages/curl\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'curl'\n\n\nError: running examples in 'curl-Ex.R' failed\n\nedit_log(\"curl\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_dbplyr.html",
    "href": "packages/test_dbplyr.html",
    "title": "dbplyr",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"dbplyr\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/dbplyr\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/dbplyr/empty_output.Rout\")\nout &lt;- test_pkg(\"dbplyr\", outDir=\"packages/dbplyr\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'dbplyr'\n\n\n  comparing 'dbplyr-Ex.Rout' to 'dbplyr-Ex.Rout.prev' ... NOTE\n\n\n  198d197\n  &lt; Warning: call dbDisconnect() when finished working with a connection\n  204a204\n  &gt; Warning: call dbDisconnect() when finished working with a connection\n  756c756\n  &lt; [1] \"'2024-11-21 17:36:39.086001'\"\n  ---\n  &gt; [1] \"'2024-11-21 13:52:26.17422'\"\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'dbplyr'\n  Running 'testthat.R'\n\nedit_log(\"dbplyr\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\ndbplyr-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_desc.html",
    "href": "packages/test_desc.html",
    "title": "desc",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"desc\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/desc\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/desc/empty_output.Rout\")\nout &lt;- test_pkg(\"desc\", outDir=\"packages/desc\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'desc'\n\n\n  comparing 'desc-Ex.Rout' to 'desc-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'desc'\n  Running 'testthat.R'\n\nedit_log(\"desc\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\ndesc-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_dfoptim.html",
    "href": "packages/test_dfoptim.html",
    "title": "dfoptim",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"dfoptim\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/dfoptim\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/dfoptim/empty_output.Rout\")\nout &lt;- test_pkg(\"dfoptim\", outDir=\"packages/dfoptim\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'dfoptim'\n\n\n  comparing 'dfoptim-Ex.Rout' to 'dfoptim-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"dfoptim\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\ndfoptim-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_digest.html",
    "href": "packages/test_digest.html",
    "title": "digest",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"digest\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/digest\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/digest/empty_output.Rout\")\nout &lt;- test_pkg(\"digest\", outDir=\"packages/digest\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'digest'\n\n\n  comparing 'digest-Ex.Rout' to 'digest-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'digest'\n  Running 'tinytest.R'\n\nedit_log(\"digest\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\ndigest-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntinytest.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_distributional.html",
    "href": "packages/test_distributional.html",
    "title": "distributional",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"distributional\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/distributional\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/distributional/empty_output.Rout\")\nout &lt;- test_pkg(\"distributional\", outDir=\"packages/distributional\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'distributional'\n\n\nError: running examples in 'distributional-Ex.R' failed\n\nedit_log(\"distributional\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_downlit.html",
    "href": "packages/test_downlit.html",
    "title": "downlit",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"downlit\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/downlit\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/downlit/empty_output.Rout\")\nout &lt;- test_pkg(\"downlit\", outDir=\"packages/downlit\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'downlit'\n\n\n  comparing 'downlit-Ex.Rout' to 'downlit-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'downlit'\n  Running 'testthat.R'\n\nedit_log(\"downlit\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\ndownlit-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_dtplyr.html",
    "href": "packages/test_dtplyr.html",
    "title": "dtplyr",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"dtplyr\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/dtplyr\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/dtplyr/empty_output.Rout\")\nout &lt;- test_pkg(\"dtplyr\", outDir=\"packages/dtplyr\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'dtplyr'\n\n\n  comparing 'dtplyr-Ex.Rout' to 'dtplyr-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'dtplyr'\n  Running 'testthat.R'\n\nedit_log(\"dtplyr\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\ndtplyr-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_ellipsis.html",
    "href": "packages/test_ellipsis.html",
    "title": "ellipsis",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"ellipsis\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/ellipsis\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/ellipsis/empty_output.Rout\")\nout &lt;- test_pkg(\"ellipsis\", outDir=\"packages/ellipsis\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'ellipsis'\n\n\n  comparing 'ellipsis-Ex.Rout' to 'ellipsis-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'ellipsis'\n  Running 'testthat.R'\n\nedit_log(\"ellipsis\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nellipsis-Ex.Rout\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_evaluate.html",
    "href": "packages/test_evaluate.html",
    "title": "evaluate",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"evaluate\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/evaluate\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/evaluate/empty_output.Rout\")\nout &lt;- test_pkg(\"evaluate\", outDir=\"packages/evaluate\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'evaluate'\n\n\n  comparing 'evaluate-Ex.Rout' to 'evaluate-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'evaluate'\n  Running 'test-all.R'\n\nedit_log(\"evaluate\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nevaluate-Ex.Rout\n\n\n\n\ntest-all.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_farver.html",
    "href": "packages/test_farver.html",
    "title": "farver",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"farver\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/farver\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/farver/empty_output.Rout\")\nout &lt;- test_pkg(\"farver\", outDir=\"packages/farver\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'farver'\n\n\n  comparing 'farver-Ex.Rout' to 'farver-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'farver'\n  Running 'testthat.R'\n\nedit_log(\"farver\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nfarver-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_fontawesome.html",
    "href": "packages/test_fontawesome.html",
    "title": "fontawesome",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"fontawesome\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/fontawesome\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/fontawesome/empty_output.Rout\")\nout &lt;- test_pkg(\"fontawesome\", outDir=\"packages/fontawesome\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'fontawesome'\n\n\n  comparing 'fontawesome-Ex.Rout' to 'fontawesome-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'fontawesome'\n  Running 'testthat.R'\n\nedit_log(\"fontawesome\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nfontawesome-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_foreach.html",
    "href": "packages/test_foreach.html",
    "title": "foreach",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"foreach\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/foreach\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/foreach/empty_output.Rout\")\nout &lt;- test_pkg(\"foreach\", outDir=\"packages/foreach\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'foreach'\n\n\n  comparing 'foreach-Ex.Rout' to 'foreach-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'foreach'\n  Running 'testthat.R'\nError: running the tests in 'testthat.R' failed\n\nedit_log(\"foreach\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nforeach-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_fs.html",
    "href": "packages/test_fs.html",
    "title": "fs",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"fs\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/fs\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/fs/empty_output.Rout\")\nout &lt;- test_pkg(\"fs\", outDir=\"packages/fs\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'fs'\n\n\n  comparing 'fs-Ex.Rout' to 'fs-Ex.Rout.prev' ... NOTE\n\n\n  42c42\n  &lt; /tmp/RtmpjIMbEv/foo\n  ---\n  &gt; /tmp/RtmpUXSoXk/foo\n  45c45\n  &lt; /tmp/RtmpjIMbEv/foo\n  ---\n  &gt; /tmp/RtmpUXSoXk/foo\n  127c127\n  &lt; /tmp/RtmpjIMbEv/dir \n  ---\n  &gt; /tmp/RtmpUXSoXk/dir \n  150c150\n  &lt; /tmp/RtmpjIMbEv/dir \n  ---\n  &gt; /tmp/RtmpUXSoXk/dir \n  195,198c195,198\n  &lt; /tmp/RtmpjIMbEv/base/CITATION    /tmp/RtmpjIMbEv/base/DESCRIPTION \n  &lt; /tmp/RtmpjIMbEv/base/INDEX       /tmp/RtmpjIMbEv/base/Meta        \n  &lt; /tmp/RtmpjIMbEv/base/R           /tmp/RtmpjIMbEv/base/demo        \n  &lt; /tmp/RtmpjIMbEv/base/help        /tmp/RtmpjIMbEv/base/html        \n  ---\n  &gt; /tmp/RtmpUXSoXk/base/CITATION    /tmp/RtmpUXSoXk/base/DESCRIPTION \n  &gt; /tmp/RtmpUXSoXk/base/INDEX       /tmp/RtmpUXSoXk/base/Meta        \n  &gt; /tmp/RtmpUXSoXk/base/R           /tmp/RtmpUXSoXk/base/demo        \n  &gt; /tmp/RtmpUXSoXk/base/help        /tmp/RtmpUXSoXk/base/html        \n  355c355\n  &lt; 1 mtcars.csv file    1.74K rw-r--r--   2024-11-21 17:53:52 rstu… rstu…        75\n  ---\n  &gt; 1 mtcars.csv file    1.74K rw-r--r--   2024-11-21 14:06:40 rstu… rstu…        75\n  417c417\n  &lt; /tmp/RtmpjIMbEv\n  ---\n  &gt; /tmp/RtmpUXSoXk\n  419c419\n  &lt; /tmp/RtmpjIMbEv/does-not-exist\n  ---\n  &gt; /tmp/RtmpUXSoXk/does-not-exist\n  424c424\n  &lt; /tmp/RtmpjIMbEv/file4897c6e4c951f.png\n  ---\n  &gt; /tmp/RtmpUXSoXk/file1f06e21b829ff.png\n  426c426\n  &lt; /tmp/RtmpjIMbEv/image4897ce278f92.png\n  ---\n  &gt; /tmp/RtmpUXSoXk/image1f06e28231d11.png\n  464c464\n  &lt; 1 2018-01-01 00:00:00 2018-01-01 00:00:00 2024-11-21 17:53:52\n  ---\n  &gt; 1 2018-01-01 00:00:00 2018-01-01 00:00:00 2024-11-21 14:06:41\n  649c649\n  &lt; /tmp/RtmpjIMbEv/foo\n  ---\n  &gt; /tmp/RtmpUXSoXk/foo\n  786c786\n  &lt; /tmp/RtmpjIMbEv/a/b\n  ---\n  &gt; /tmp/RtmpUXSoXk/a/b\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'fs'\n  Running 'spelling.R'\n  Running 'testthat.R'\n\nedit_log(\"fs\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nfs-Ex.Rout\n\n\n\n\nspelling.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_fstcore.html",
    "href": "packages/test_fstcore.html",
    "title": "fstcore",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"fstcore\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/fstcore\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/fstcore/empty_output.Rout\")\nout &lt;- test_pkg(\"fstcore\", outDir=\"packages/fstcore\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'fstcore'\n\n\n  comparing 'fstcore-Ex.Rout' to 'fstcore-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'fstcore'\n  Running 'testthat.R'\nError: running the tests in 'testthat.R' failed\n\nedit_log(\"fstcore\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nfstcore-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_future.apply.html",
    "href": "packages/test_future.apply.html",
    "title": "future.apply",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"future.apply\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/future.apply\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/future.apply/empty_output.Rout\")\nout &lt;- test_pkg(\"future.apply\", outDir=\"packages/future.apply\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'future.apply'\n\n\n  comparing 'future.apply-Ex.Rout' to 'future.apply-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'future.apply'\n  Running 'fold.R'\n  Running 'future_apply.R'\n  Running 'future_by.R'\n  Running 'future_eapply.R'\n  Running 'future_lapply,globals.R'\n  Running 'future_lapply,RNG.R'\n  Running 'future_lapply.R'\n  Running 'future_mapply,globals.R'\n  Running 'future_mapply.R'\n  Running 'future_replicate.R'\n  Running 'future_sapply.R'\n  Running 'future_tapply.R'\n  Running 'future_vapply.R'\n  Running 'globals,tricky_recursive.R'\n  Running 'options,nested.R'\n  Running 'rng.R'\n  Running 'stdout.R'\n  Running 'utils.R'\n\nedit_log(\"future.apply\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nfuture.apply-Ex.Rout\n\n\n\n\nfold.Rout\n\n\n\n\nfuture_apply.Rout\n\n\n\n\nfuture_by.Rout\n\n\n\n\nfuture_eapply.Rout\n\n\n\n\nfuture_lapply,RNG.Rout\n\n\n\n\nfuture_lapply,globals.Rout\n\n\n\n\nfuture_lapply.Rout\n\n\n\n\nfuture_mapply,globals.Rout\n\n\n\n\nfuture_mapply.Rout\n\n\n\n\nfuture_replicate.Rout\n\n\n\n\nfuture_sapply.Rout\n\n\n\n\nfuture_tapply.Rout\n\n\n\n\nfuture_vapply.Rout\n\n\n\n\nglobals,tricky_recursive.Rout\n\n\n\n\noptions,nested.Rout\n\n\n\n\nrng.Rout\n\n\n\n\nstdout.Rout\n\n\n\n\nutils.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_gamm4.html",
    "href": "packages/test_gamm4.html",
    "title": "gamm4",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"gamm4\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/gamm4\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/gamm4/empty_output.Rout\")\nout &lt;- test_pkg(\"gamm4\", outDir=\"packages/gamm4\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'gamm4'\n\n\n  comparing 'gamm4-Ex.Rout' to 'gamm4-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"gamm4\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ngamm4-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_gee.html",
    "href": "packages/test_gee.html",
    "title": "gee",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"gee\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/gee\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/gee/empty_output.Rout\")\nout &lt;- test_pkg(\"gee\", outDir=\"packages/gee\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'gee'\n\n\n  comparing 'gee-Ex.Rout' to 'gee-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'gee'\n  Running 'divergence.R'\n  comparing 'divergence.Rout' to 'divergence.Rout.save' ... OK\n  Running 'tests.R'\n  comparing 'tests.Rout' to 'tests.Rout.save' ... OK\n\nedit_log(\"gee\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ngee-Ex.Rout\n\n\n\n\ndivergence.Rout\n\n\n\n\ntests.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_gert.html",
    "href": "packages/test_gert.html",
    "title": "gert",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"gert\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/gert\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/gert/empty_output.Rout\")\nout &lt;- test_pkg(\"gert\", outDir=\"packages/gert\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'gert'\n\n\n  comparing 'gert-Ex.Rout' to 'gert-Ex.Rout.prev' ... NOTE\n\n\n  3,4c3,4\n  &lt; Global config: /home/rstudio/.gitconfig\n  &lt; Default user: shug0131 &lt;sjb277@medschl.cam.ac.uk&gt;\n  ---\n  &gt; No global .gitconfig found in: /home/rstudio\n  &gt; No default user configured\n  45c45\n  &lt; [1] \"c97a87586db0f3fc456db7dbbf901b3f9f52a282\"\n  ---\n  &gt; [1] \"d4419562c4a6138d379916ce922d8f9b7a7862bc\"\n  52c52\n  &lt; 1 alphabet.txt       12 2024-11-21 18:09:05 2024-11-21 18:09:05\n  ---\n  &gt; 1 alphabet.txt       12 2024-11-21 14:19:15 2024-11-21 14:19:15\n  56c56\n  &lt; 1 c97a87586db0f3fc456db7dbbf901b3f9f52a282 shug0131 &lt;sjb277@medschl.cam.ac.uk&gt;\n  ---\n  &gt; 1 d4419562c4a6138d379916ce922d8f9b7a7862bc Jerry &lt;jerry@gmail.com&gt;\n  58c58\n  &lt; 1 2024-11-21 18:09:05     1 FALSE Start alphabet file\\n\n  ---\n  &gt; 1 2024-11-21 14:19:15     1 FALSE Start alphabet file\\n\n  66c66\n  &lt; [1] \"dc6d8c7719a318745ff8b625780a06d0be7ae18f\"\n  ---\n  &gt; [1] \"489f8e6e9c8c9ed72e2cec799d0bdd7c688e9b3e\"\n  97,101c97,101\n  &lt; 5                    core.bare false local\n  &lt; 6 core.repositoryformatversion     0 local\n  &lt; 7                core.filemode  true local\n  &lt; 8        core.logallrefupdates  true local\n  &lt; 9                      aaa.bbb   ccc local\n  ---\n  &gt; 3                    core.bare false local\n  &gt; 4 core.repositoryformatversion     0 local\n  &gt; 5                core.filemode  true local\n  &gt; 6        core.logallrefupdates  true local\n  &gt; 7                      aaa.bbb   ccc local\n  111,114c111,114\n  &lt; 5                    core.bare false local\n  &lt; 6 core.repositoryformatversion     0 local\n  &lt; 7                core.filemode  true local\n  &lt; 8        core.logallrefupdates  true local\n  ---\n  &gt; 3                    core.bare false local\n  &gt; 4 core.repositoryformatversion     0 local\n  &gt; 5                core.filemode  true local\n  &gt; 6        core.logallrefupdates  true local\n  188c188\n  &lt; &lt;git repository&gt;: /tmp/RtmpscwjKs/gert511fc5dc8599b[@NA]\n  ---\n  &gt; &lt;git repository&gt;: /tmp/RtmpjoYVzX/gert2683e29ca9b87[@NA]\n  190c190\n  &lt; &lt;git repository&gt;: /tmp/RtmpscwjKs/gert511fc5dc8599b[@NA]\n  ---\n  &gt; &lt;git repository&gt;: /tmp/RtmpjoYVzX/gert2683e29ca9b87[@NA]\n  193c193\n  &lt; [1] \"/tmp/RtmpscwjKs/gert511fc5dc8599b/\"\n  ---\n  &gt; [1] \"/tmp/RtmpjoYVzX/gert2683e29ca9b87/\"\n  238c238\n  &lt; [1] \"/tmp/RtmpscwjKs/gert511fc68aecafd\"\n  ---\n  &gt; [1] \"/tmp/RtmpjoYVzX/gert2683e3b2c29d\"\n  244c244\n  &lt; [1] \"/tmp/RtmpscwjKs/gert511fc68aecafd\"\n  ---\n  &gt; [1] \"/tmp/RtmpjoYVzX/gert2683e3b2c29d\"\n  254c254\n  &lt; [1] \"/tmp/RtmpscwjKs/gert511fc477d14a6\"\n  ---\n  &gt; [1] \"/tmp/RtmpjoYVzX/gert2683e1c50d583\"\n  275c275,276\n  &lt; [1] \"shug0131 &lt;sjb277@medschl.cam.ac.uk&gt;\"\n  ---\n  &gt; Error in libgit2::git_signature_default : \n  &gt;   config value 'user.name' was not found\n  281c282\n  &lt; Date: Thu Nov 21 18:09:07 2024 +0000\n  ---\n  &gt; Date: Thu Nov 21 14:19:16 2024 +0000\n  287c288\n  &lt; Date: Thu Nov 21 17:09:07 2024 +0000\n  ---\n  &gt; Date: Thu Nov 21 13:19:16 2024 +0000\n  298c299\n  &lt; [1] \"2024-11-21 17:09:07 GMT\"\n  ---\n  &gt; [1] \"2024-11-21 13:19:16 GMT\"\n  311c312\n  &lt; [1] \"2024-11-21 18:09:07 GMT\"\n  ---\n  &gt; [1] \"2024-11-21 14:19:16 GMT\"\n  345c346\n  &lt; [1] \"/home/rstudio/.gitconfig\"\n  ---\n  &gt; [1] \"\"\n  369c370\n  &lt; [1] TRUE\n  ---\n  &gt; [1] FALSE\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'gert'\n  Running 'libgit2.R'\n  comparing 'libgit2.Rout' to 'libgit2.Rout.save' ...  Running 'spelling.R'\n  Running 'testthat.R'\n\nedit_log(\"gert\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ngert-Ex.Rout\n\n\n\n\nlibgit2.Rout\n\n\n\n\nspelling.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_ggfittext.html",
    "href": "packages/test_ggfittext.html",
    "title": "ggfittext",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"ggfittext\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/ggfittext\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/ggfittext/empty_output.Rout\")\nout &lt;- test_pkg(\"ggfittext\", outDir=\"packages/ggfittext\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'ggfittext'\n\n\n  comparing 'ggfittext-Ex.Rout' to 'ggfittext-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'ggfittext'\n  Running 'spelling.R'\n  Running 'testthat.R'\n\nedit_log(\"ggfittext\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nggfittext-Ex.Rout\n\n\n\n\nspelling.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_ggrepel.html",
    "href": "packages/test_ggrepel.html",
    "title": "ggrepel",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"ggrepel\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/ggrepel\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/ggrepel/empty_output.Rout\")\nout &lt;- test_pkg(\"ggrepel\", outDir=\"packages/ggrepel\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'ggrepel'\n\n\n  comparing 'ggrepel-Ex.Rout' to 'ggrepel-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'ggrepel'\n  Running 'testthat.R'\n\nedit_log(\"ggrepel\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nggrepel-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_gitcreds.html",
    "href": "packages/test_gitcreds.html",
    "title": "gitcreds",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"gitcreds\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/gitcreds\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/gitcreds/empty_output.Rout\")\nout &lt;- test_pkg(\"gitcreds\", outDir=\"packages/gitcreds\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'gitcreds'\n\n\n  comparing 'gitcreds-Ex.Rout' to 'gitcreds-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'gitcreds'\n  Running 'testthat.R'\nError: running the tests in 'testthat.R' failed\n\nedit_log(\"gitcreds\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ngitcreds-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_globals.html",
    "href": "packages/test_globals.html",
    "title": "globals",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"globals\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/globals\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/globals/empty_output.Rout\")\nout &lt;- test_pkg(\"globals\", outDir=\"packages/globals\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'globals'\n\n\n  comparing 'globals-Ex.Rout' to 'globals-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'globals'\n  Running 'cleanup.R'\n  Running 'conservative.R'\n  Running 'dotdotdot.R'\n  Running 'findGlobals.R'\n  Running 'formulas.R'\n  Running 'Globals.R'\n  Running 'globalsByName.R'\n  Running 'globalsOf,locals.R'\n  Running 'globalsOf.R'\n  Running 'liberal.R'\n  Running 'utils.R'\n  Running 'walkAST.R'\n  Running 'zzz.R'\n\nedit_log(\"globals\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nglobals-Ex.Rout\n\n\n\n\nGlobals.Rout\n\n\n\n\ncleanup.Rout\n\n\n\n\nconservative.Rout\n\n\n\n\ndotdotdot.Rout\n\n\n\n\nfindGlobals.Rout\n\n\n\n\nformulas.Rout\n\n\n\n\nglobalsByName.Rout\n\n\n\n\nglobalsOf,locals.Rout\n\n\n\n\nglobalsOf.Rout\n\n\n\n\nliberal.Rout\n\n\n\n\nutils.Rout\n\n\n\n\nwalkAST.Rout\n\n\n\n\nzzz.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_googledrive.html",
    "href": "packages/test_googledrive.html",
    "title": "googledrive",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"googledrive\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/googledrive\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/googledrive/empty_output.Rout\")\nout &lt;- test_pkg(\"googledrive\", outDir=\"packages/googledrive\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'googledrive'\n\n\n  comparing 'googledrive-Ex.Rout' to 'googledrive-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'googledrive'\n  Running 'spelling.R'\n  Running 'testthat.R'\nError: running the tests in 'testthat.R' failed\n\nedit_log(\"googledrive\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ngoogledrive-Ex.Rout\n\n\n\n\nspelling.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_gridExtra.html",
    "href": "packages/test_gridExtra.html",
    "title": "gridExtra",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"gridExtra\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/gridExtra\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/gridExtra/empty_output.Rout\")\nout &lt;- test_pkg(\"gridExtra\", outDir=\"packages/gridExtra\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'gridExtra'\n\n\n  comparing 'gridExtra-Ex.Rout' to 'gridExtra-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"gridExtra\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ngridExtra-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_gridtext.html",
    "href": "packages/test_gridtext.html",
    "title": "gridtext",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"gridtext\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/gridtext\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/gridtext/empty_output.Rout\")\nout &lt;- test_pkg(\"gridtext\", outDir=\"packages/gridtext\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'gridtext'\n\n\n  comparing 'gridtext-Ex.Rout' to 'gridtext-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'gridtext'\n  Running 'testthat.R'\n\nedit_log(\"gridtext\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ngridtext-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_gtable.html",
    "href": "packages/test_gtable.html",
    "title": "gtable",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"gtable\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/gtable\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/gtable/empty_output.Rout\")\nout &lt;- test_pkg(\"gtable\", outDir=\"packages/gtable\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'gtable'\n\n\n  comparing 'gtable-Ex.Rout' to 'gtable-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'gtable'\n  Running 'testthat.R'\n\nedit_log(\"gtable\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ngtable-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_highr.html",
    "href": "packages/test_highr.html",
    "title": "highr",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"highr\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/highr\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/highr/empty_output.Rout\")\nout &lt;- test_pkg(\"highr\", outDir=\"packages/highr\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'highr'\n\n\n  comparing 'highr-Ex.Rout' to 'highr-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'highr'\n  Running 'test-all.R'\n\nedit_log(\"highr\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nhighr-Ex.Rout\n\n\n\n\ntest-all.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_htmlTable.html",
    "href": "packages/test_htmlTable.html",
    "title": "htmlTable",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"htmlTable\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/htmlTable\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/htmlTable/empty_output.Rout\")\nout &lt;- test_pkg(\"htmlTable\", outDir=\"packages/htmlTable\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'htmlTable'\n\n\n  comparing 'htmlTable-Ex.Rout' to 'htmlTable-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'htmlTable'\n  Running 'testInteractive.R'\n  Running 'testthat.R'\nError: running the tests in 'testthat.R' failed\n\nedit_log(\"htmlTable\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nhtmlTable-Ex.Rout\n\n\n\n\ntestInteractive.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_htmlwidgets.html",
    "href": "packages/test_htmlwidgets.html",
    "title": "htmlwidgets",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"htmlwidgets\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/htmlwidgets\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/htmlwidgets/empty_output.Rout\")\nout &lt;- test_pkg(\"htmlwidgets\", outDir=\"packages/htmlwidgets\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'htmlwidgets'\n\n\n  comparing 'htmlwidgets-Ex.Rout' to 'htmlwidgets-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'htmlwidgets'\n  Running 'testthat.R'\n\nedit_log(\"htmlwidgets\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nhtmlwidgets-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_httr.html",
    "href": "packages/test_httr.html",
    "title": "httr",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"httr\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/httr\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/httr/empty_output.Rout\")\nout &lt;- test_pkg(\"httr\", outDir=\"packages/httr\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'httr'\n\n\n  comparing 'httr-Ex.Rout' to 'httr-Ex.Rout.prev' ... NOTE\n\n\n  58c58\n  &lt;   Date: 2024-11-21 18:24\n  ---\n  &gt;   Date: 2024-11-21 14:33\n  61c61\n  &lt;   Size: 19.9 kB\n  ---\n  &gt;   Size: 19.8 kB\n  113c113\n  &lt;   Date: 2024-11-21 18:24\n  ---\n  &gt;   Date: 2024-11-21 14:33\n  122c122\n  &lt; [1] \"object-src 'none';base-uri 'self';script-src 'nonce-BCazAJWiryGrUOSZCUilcQ' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp\"\n  ---\n  &gt; [1] \"object-src 'none';base-uri 'self';script-src 'nonce-S43o0FZM6iI8NtCgfQJbKg' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp\"\n  125c125\n  &lt; [1] \"Thu, 21 Nov 2024 18:24:01 GMT\"\n  ---\n  &gt; [1] \"Thu, 21 Nov 2024 14:33:01 GMT\"\n  140c140\n  &lt; [1] \"Thu, 21 Nov 2024 18:24:01 GMT\"\n  ---\n  &gt; [1] \"Thu, 21 Nov 2024 14:33:01 GMT\"\n  146c146\n  &lt; [1] \"AEC=AZ6Zc-Xu9UaNA2kgUOaLOHX1wmVnJ7UkNf7S5rNd-bdTjm6CSYR2XtGufQ; expires=Tue, 20-May-2025 18:24:01 GMT; path=/; domain=.google.com; Secure; HttpOnly; SameSite=lax\"\n  ---\n  &gt; [1] \"AEC=AZ6Zc-UdAJNifcojCYqWdzWowXhQJwgCdELAQ_LZI5L-aVtyTthW7_692S0; expires=Tue, 20-May-2025 14:33:01 GMT; path=/; domain=.google.com; Secure; HttpOnly; SameSite=lax\"\n  262c262\n  &lt; &lt;- Date: Thu, 21 Nov 2024 18:24:01 GMT\n  ---\n  &gt; &lt;- Date: Thu, 21 Nov 2024 14:33:02 GMT\n  273,274c273,274\n  &lt;  [1] &lt;D:response xmlns:V=\"http://subversion.tigris.org/xmlns/dav/\" xmlns:S=\"h ...\n  &lt;  [2] &lt;D:response xmlns:S=\"http://subversion.tigris.org/xmlns/svn/\" xmlns:C=\"h ...\n  ---\n  &gt;  [1] &lt;D:response xmlns:S=\"http://subversion.tigris.org/xmlns/svn/\" xmlns:C=\"h ...\n  &gt;  [2] &lt;D:response xmlns:V=\"http://subversion.tigris.org/xmlns/dav/\" xmlns:S=\"h ...\n  279c279\n  &lt;  [7] &lt;D:response xmlns:S=\"http://subversion.tigris.org/xmlns/svn/\" xmlns:C=\"h ...\n  ---\n  &gt;  [7] &lt;D:response xmlns:V=\"http://subversion.tigris.org/xmlns/dav/\" xmlns:S=\"h ...\n  282c282\n  &lt; [10] &lt;D:response xmlns:S=\"http://subversion.tigris.org/xmlns/svn/\" xmlns:C=\"h ...\n  ---\n  &gt; [10] &lt;D:response xmlns:V=\"http://subversion.tigris.org/xmlns/dav/\" xmlns:S=\"h ...\n  286c286\n  &lt; [14] &lt;D:response xmlns:S=\"http://subversion.tigris.org/xmlns/svn/\" xmlns:C=\"h ...\n  ---\n  &gt; [14] &lt;D:response xmlns:V=\"http://subversion.tigris.org/xmlns/dav/\" xmlns:S=\"h ...\n  379c379\n  &lt;   Expires:       Thu, 21 Nov 2024 18:24:03 GMT &lt;expired&gt;\n  ---\n  &gt;   Expires:       Thu, 21 Nov 2024 14:33:03 GMT &lt;expired&gt;\n  383c383\n  &lt; [1] \"2024-11-21 18:24:03 GMT\"\n  ---\n  &gt; [1] \"2024-11-21 14:33:03 GMT\"\n  385c385\n  &lt; [1] \"2024-11-21 18:24:04 GMT\"\n  ---\n  &gt; [1] \"2024-11-21 14:33:04 GMT\"\n  392c392\n  &lt;   Expires:       Fri, 21 Nov 2025 18:24:04 GMT\n  ---\n  &gt;   Expires:       Fri, 21 Nov 2025 14:33:04 GMT\n  396c396\n  &lt; [1] \"2024-11-21 18:24:04 GMT\"\n  ---\n  &gt; [1] \"2024-11-21 14:33:04 GMT\"\n  398c398\n  &lt; [1] \"2024-11-21 18:24:04 GMT\"\n  ---\n  &gt; [1] \"2024-11-21 14:33:04 GMT\"\n  438c438\n  &lt; -&gt; cookie: __Secure-ENID=24.SE=gGO0OdpT3lSidjxnRy3UsZnsRWnJF3ZlLZu-tjfTI3YJLzhHwthcS0g-wSMURERyZGcMwtQEUQ7avll6Irgq5xKbh9u9h7Ret2fPCYad4sy3UGSS1Mej97TjUD402k439mG1lInqP_dqHnY6QYL7gkGl2wRuONrcVbFE_WbCuafEWj4Q0_rNx3AZO4wBSXRGHVmVcHH3lU0; SOCS=CAAaBgiA8Pm5Bg; AEC=AZ6Zc-Vx8YtlnlTbgHPVFz29PQ7RuGEIONQ1qfURe6L1Hmr0oEMZE7vYWSg\n  ---\n  &gt; -&gt; cookie: __Secure-ENID=24.SE=YBU--JjIkVBVCiZxUWeN8svQI2tVCsOaE_x4CodEoLDPKdL0LILLjgdbdWEt97JQSXbzzoowutjD44qTyOrt7hpA82o8gtvfo0WEn26oYjDHb6J22859f6GH0Y08K-2BDYHtOwpAHm3Q_3Y_ViF-zXFdBEWt3aLiIpFWc8xs_Fo14bEarSMajJdfTPnG3KVuCtR155iiKvQ; SOCS=CAAaBgiA8Pm5Bg; AEC=AZ6Zc-UEgCKV-ukgd8sYxqXzYOn7uG8q0Psz2775A3SJhwBWvKZOQuvS8-o\n  443c443\n  &lt; &lt;- content-security-policy-report-only: object-src 'none';base-uri 'self';script-src 'nonce-Kdz8wu9OrGIhpo1KnWyGgA' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp\n  ---\n  &gt; &lt;- content-security-policy-report-only: object-src 'none';base-uri 'self';script-src 'nonce-kRgdoM9fTqzfq6yfa4OGQg' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp\n  445c445\n  &lt; &lt;- date: Thu, 21 Nov 2024 18:24:05 GMT\n  ---\n  &gt; &lt;- date: Thu, 21 Nov 2024 14:33:04 GMT\n  452c452\n  &lt;   Date: 2024-11-21 18:24\n  ---\n  &gt;   Date: 2024-11-21 14:33\n  463c463\n  &lt; -&gt; cookie: __Secure-ENID=24.SE=gGO0OdpT3lSidjxnRy3UsZnsRWnJF3ZlLZu-tjfTI3YJLzhHwthcS0g-wSMURERyZGcMwtQEUQ7avll6Irgq5xKbh9u9h7Ret2fPCYad4sy3UGSS1Mej97TjUD402k439mG1lInqP_dqHnY6QYL7gkGl2wRuONrcVbFE_WbCuafEWj4Q0_rNx3AZO4wBSXRGHVmVcHH3lU0; SOCS=CAAaBgiA8Pm5Bg; AEC=AZ6Zc-Vx8YtlnlTbgHPVFz29PQ7RuGEIONQ1qfURe6L1Hmr0oEMZE7vYWSg\n  ---\n  &gt; -&gt; cookie: __Secure-ENID=24.SE=YBU--JjIkVBVCiZxUWeN8svQI2tVCsOaE_x4CodEoLDPKdL0LILLjgdbdWEt97JQSXbzzoowutjD44qTyOrt7hpA82o8gtvfo0WEn26oYjDHb6J22859f6GH0Y08K-2BDYHtOwpAHm3Q_3Y_ViF-zXFdBEWt3aLiIpFWc8xs_Fo14bEarSMajJdfTPnG3KVuCtR155iiKvQ; SOCS=CAAaBgiA8Pm5Bg; AEC=AZ6Zc-UEgCKV-ukgd8sYxqXzYOn7uG8q0Psz2775A3SJhwBWvKZOQuvS8-o\n  468c468\n  &lt; &lt;- content-security-policy-report-only: object-src 'none';base-uri 'self';script-src 'nonce-oPtNjqeawVhZyC3pz2jsdA' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp\n  ---\n  &gt; &lt;- content-security-policy-report-only: object-src 'none';base-uri 'self';script-src 'nonce-Wd6R-KQIbAlLT6Xk0OhWfQ' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp\n  470c470\n  &lt; &lt;- date: Thu, 21 Nov 2024 18:24:05 GMT\n  ---\n  &gt; &lt;- date: Thu, 21 Nov 2024 14:33:04 GMT\n  477c477\n  &lt;   Date: 2024-11-21 18:24\n  ---\n  &gt;   Date: 2024-11-21 14:33\n  489c489\n  &lt; -&gt; cookie: __Secure-ENID=24.SE=gGO0OdpT3lSidjxnRy3UsZnsRWnJF3ZlLZu-tjfTI3YJLzhHwthcS0g-wSMURERyZGcMwtQEUQ7avll6Irgq5xKbh9u9h7Ret2fPCYad4sy3UGSS1Mej97TjUD402k439mG1lInqP_dqHnY6QYL7gkGl2wRuONrcVbFE_WbCuafEWj4Q0_rNx3AZO4wBSXRGHVmVcHH3lU0; SOCS=CAAaBgiA8Pm5Bg; AEC=AZ6Zc-Vx8YtlnlTbgHPVFz29PQ7RuGEIONQ1qfURe6L1Hmr0oEMZE7vYWSg\n  ---\n  &gt; -&gt; cookie: __Secure-ENID=24.SE=YBU--JjIkVBVCiZxUWeN8svQI2tVCsOaE_x4CodEoLDPKdL0LILLjgdbdWEt97JQSXbzzoowutjD44qTyOrt7hpA82o8gtvfo0WEn26oYjDHb6J22859f6GH0Y08K-2BDYHtOwpAHm3Q_3Y_ViF-zXFdBEWt3aLiIpFWc8xs_Fo14bEarSMajJdfTPnG3KVuCtR155iiKvQ; SOCS=CAAaBgiA8Pm5Bg; AEC=AZ6Zc-UEgCKV-ukgd8sYxqXzYOn7uG8q0Psz2775A3SJhwBWvKZOQuvS8-o\n  494c494\n  &lt; &lt;- content-security-policy-report-only: object-src 'none';base-uri 'self';script-src 'nonce-6j20lJqKr1whsDOLR5YzVw' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp\n  ---\n  &gt; &lt;- content-security-policy-report-only: object-src 'none';base-uri 'self';script-src 'nonce-EwyI0IZb2aPaWCakCCQSlg' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp\n  496c496\n  &lt; &lt;- date: Thu, 21 Nov 2024 18:24:05 GMT\n  ---\n  &gt; &lt;- date: Thu, 21 Nov 2024 14:33:04 GMT\n  503c503\n  &lt;   Date: 2024-11-21 18:24\n  ---\n  &gt;   Date: 2024-11-21 14:33\n  511c511\n  &lt;   Date: 2024-11-21 18:24\n  ---\n  &gt;   Date: 2024-11-21 14:33\n  519c519\n  &lt;   Date: 2024-11-21 18:24\n  ---\n  &gt;   Date: 2024-11-21 14:33\n  528c528\n  &lt; * Found bundle for host www.google.com: 0x6395171c2370 [can multiplex]\n  ---\n  &gt; * Found bundle for host www.google.com: 0x5c13996653f0 [can multiplex]\n  531c531\n  &lt; * Using Stream ID: 11 (easy handle 0x639516aca360)\n  ---\n  &gt; * Using Stream ID: 11 (easy handle 0x5c1398d93a80)\n  536c536\n  &lt; cookie: __Secure-ENID=24.SE=gGO0OdpT3lSidjxnRy3UsZnsRWnJF3ZlLZu-tjfTI3YJLzhHwthcS0g-wSMURERyZGcMwtQEUQ7avll6Irgq5xKbh9u9h7Ret2fPCYad4sy3UGSS1Mej97TjUD402k439mG1lInqP_dqHnY6QYL7gkGl2wRuONrcVbFE_WbCuafEWj4Q0_rNx3AZO4wBSXRGHVmVcHH3lU0; SOCS=CAAaBgiA8Pm5Bg; AEC=AZ6Zc-Vx8YtlnlTbgHPVFz29PQ7RuGEIONQ1qfURe6L1Hmr0oEMZE7vYWSg\n  ---\n  &gt; cookie: __Secure-ENID=24.SE=YBU--JjIkVBVCiZxUWeN8svQI2tVCsOaE_x4CodEoLDPKdL0LILLjgdbdWEt97JQSXbzzoowutjD44qTyOrt7hpA82o8gtvfo0WEn26oYjDHb6J22859f6GH0Y08K-2BDYHtOwpAHm3Q_3Y_ViF-zXFdBEWt3aLiIpFWc8xs_Fo14bEarSMajJdfTPnG3KVuCtR155iiKvQ; SOCS=CAAaBgiA8Pm5Bg; AEC=AZ6Zc-UEgCKV-ukgd8sYxqXzYOn7uG8q0Psz2775A3SJhwBWvKZOQuvS8-o\n  541c541\n  &lt; &lt; content-security-policy-report-only: object-src 'none';base-uri 'self';script-src 'nonce-2JxLSGbAmwE5jAj8J5jw7A' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp\n  ---\n  &gt; &lt; content-security-policy-report-only: object-src 'none';base-uri 'self';script-src 'nonce-TNL-bR_cyfgIRZcqCNMaEA' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp\n  543c543\n  &lt; &lt; date: Thu, 21 Nov 2024 18:24:06 GMT\n  ---\n  &gt; &lt; date: Thu, 21 Nov 2024 14:33:04 GMT\n  551c551\n  &lt;   Date: 2024-11-21 18:24\n  ---\n  &gt;   Date: 2024-11-21 14:33\n  700c700\n  &lt;   Date: 2024-11-21 18:24\n  ---\n  &gt;   Date: 2024-11-21 14:33\n  726,728c726,728\n  &lt; &lt;- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce-qGtR-yZSg1KFn1OXijfYtQ' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp\n  &lt; &lt;- Date: Thu, 21 Nov 2024 18:24:07 GMT\n  &lt; &lt;- Expires: Sat, 21 Dec 2024 18:24:07 GMT\n  ---\n  &gt; &lt;- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce-rnx86XFLOiMDhIvfILXp8w' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp\n  &gt; &lt;- Date: Thu, 21 Nov 2024 14:33:04 GMT\n  &gt; &lt;- Expires: Sat, 21 Dec 2024 14:33:04 GMT\n  742c742\n  &lt; &lt;- Date: Thu, 21 Nov 2024 18:24:07 GMT\n  ---\n  &gt; &lt;- Date: Thu, 21 Nov 2024 14:33:04 GMT\n  746c746\n  &lt; &lt;- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce-IwZrk56xqNFiwkoba5e_-A' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp\n  ---\n  &gt; &lt;- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce-SmkfDt0cI1c7JC3xV-_NHw' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp\n  749c749\n  &lt; &lt;- Content-Length: 8250\n  ---\n  &gt; &lt;- Content-Length: 8247\n  752c752\n  &lt; &lt;- Set-Cookie: AEC=AZ6Zc-VboNXEWaEoBHBCrFueHaobdoca7tLEYAhbunOE5KFLhOcnXd84hMU; expires=Tue, 20-May-2025 18:24:07 GMT; path=/; domain=.google.com; Secure; HttpOnly; SameSite=lax\n  ---\n  &gt; &lt;- Set-Cookie: AEC=AZ6Zc-V5BQcDI-ejQms2IZLEIzXINxaLGfTGbJar0xLI0wuEO5TcL4Gu55w; expires=Tue, 20-May-2025 14:33:04 GMT; path=/; domain=.google.com; Secure; HttpOnly; SameSite=lax\n  755c755\n  &lt;   Date: 2024-11-21 18:24\n  ---\n  &gt;   Date: 2024-11-21 14:33\n  1472c1472\n  &lt; [1] \"Thu, 21 Nov 2024 18:24:08 GMT\"\n  ---\n  &gt; [1] \"Thu, 21 Nov 2024 14:33:05 GMT\"\n  1702c1702\n  &lt;   Date: 2024-11-21 18:24\n  ---\n  &gt;   Date: 2024-11-21 14:33\n  1705c1705\n  &lt;   Size: 19.9 kB\n  ---\n  &gt;   Size: 19.7 kB\n  1728,1730c1728,1730\n  &lt; &lt;- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce-3Idc-u-wLSB33xEyFDmggA' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp\n  &lt; &lt;- Date: Thu, 21 Nov 2024 18:24:08 GMT\n  &lt; &lt;- Expires: Sat, 21 Dec 2024 18:24:08 GMT\n  ---\n  &gt; &lt;- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce-tes-x3D_QfGh-I2gYeTPdg' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp\n  &gt; &lt;- Date: Thu, 21 Nov 2024 14:33:05 GMT\n  &gt; &lt;- Expires: Sat, 21 Dec 2024 14:33:05 GMT\n  1744c1744\n  &lt; &lt;- Date: Thu, 21 Nov 2024 18:24:09 GMT\n  ---\n  &gt; &lt;- Date: Thu, 21 Nov 2024 14:33:05 GMT\n  1748c1748\n  &lt; &lt;- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce-6Kf4JwR0K3zuGVChT909NQ' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp\n  ---\n  &gt; &lt;- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce-6TFtav8IOJR-7nPFi-XlgA' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp\n  1751c1751\n  &lt; &lt;- Content-Length: 8273\n  ---\n  &gt; &lt;- Content-Length: 8278\n  1754c1754\n  &lt; &lt;- Set-Cookie: AEC=AZ6Zc-XxH_58MQDay6NycKBa2vMmk26pgDXf40u6awqJhz420tVApgOAbfY; expires=Tue, 20-May-2025 18:24:09 GMT; path=/; domain=.google.com; Secure; HttpOnly; SameSite=lax\n  ---\n  &gt; &lt;- Set-Cookie: AEC=AZ6Zc-U075DZ39p4iJqfnpZbiDRFCRcaYYuHU9yzXQs9juuHNhzSMNLTfQQ; expires=Tue, 20-May-2025 14:33:05 GMT; path=/; domain=.google.com; Secure; HttpOnly; SameSite=lax\n  1757c1757\n  &lt;   Date: 2024-11-21 18:24\n  ---\n  &gt;   Date: 2024-11-21 14:33\n  1775c1775\n  &lt;   Date: 2024-11-21 18:24\n  ---\n  &gt;   Date: 2024-11-21 14:33\n  1992,1994c1992,1994\n  &lt; &lt;- x-amz-id-2: vhx8K2Frd3ldq8iFnLjErH6ma5I/IQvwr13ic8B7sCFmZSepRtbK3lOnFSR4nEoqq5Zahr4U20s=\n  &lt; &lt;- x-amz-request-id: GB0T5XWEZKVDVN7X\n  &lt; &lt;- Date: Thu, 21 Nov 2024 18:24:11 GMT\n  ---\n  &gt; &lt;- x-amz-id-2: RHnDD9J842GisJgtvk5Dt36yd5ny9ZfTzskiXeVSH1Jglq16ch7HSVDeNj1kTzfYCo/l+Wrznd0=\n  &gt; &lt;- x-amz-request-id: XFD1RXMT5ZTG13R3\n  &gt; &lt;- Date: Thu, 21 Nov 2024 14:33:07 GMT\n  2011c2011\n  &lt; &lt;- X-GitHub-Request-Id: 6858:6790E:249B3C1:24D549F:673F7ACA\n  ---\n  &gt; &lt;- X-GitHub-Request-Id: 2032:667D4:21CA291:21FDAB6:673F44A2\n  2014c2014\n  &lt; &lt;- Date: Thu, 21 Nov 2024 18:24:10 GMT\n  ---\n  &gt; &lt;- Date: Thu, 21 Nov 2024 14:33:06 GMT\n  2016c2016\n  &lt; &lt;- X-Served-By: cache-lcy-eglc8600057-LCY\n  ---\n  &gt; &lt;- X-Served-By: cache-lcy-eglc8600022-LCY\n  2019c2019\n  &lt; &lt;- X-Timer: S1732213450.417646,VS0,VE91\n  ---\n  &gt; &lt;- X-Timer: S1732199587.605973,VS0,VE82\n  2021c2021\n  &lt; &lt;- X-Fastly-Request-ID: 9f6b614f7f4ae13721c46e2f2264452cca22f8ec\n  ---\n  &gt; &lt;- X-Fastly-Request-ID: 278a7c2c100e7657da57824f2928d380c3c62871\n  2031a2032\n  &gt; &lt;- x-origin-cache: HIT\n  2035c2036\n  &lt; &lt;- expires: Thu, 21 Nov 2024 18:34:10 GMT\n  ---\n  &gt; &lt;- expires: Thu, 21 Nov 2024 13:41:28 GMT\n  2039c2040\n  &lt; &lt;- x-github-request-id: CCBA:6A617:2471595:24AB59E:673F7ACA\n  ---\n  &gt; &lt;- x-github-request-id: EBB6:6790E:2071CBF:20A3976:673F3630\n  2042c2043\n  &lt; &lt;- date: Thu, 21 Nov 2024 18:24:10 GMT\n  ---\n  &gt; &lt;- date: Thu, 21 Nov 2024 14:33:07 GMT\n  2044,2045c2045,2046\n  &lt; &lt;- x-served-by: cache-lcy-eglc8600091-LCY\n  &lt; &lt;- x-cache: MISS\n  ---\n  &gt; &lt;- x-served-by: cache-lcy-eglc8600038-LCY\n  &gt; &lt;- x-cache: HIT\n  2047c2048\n  &lt; &lt;- x-timer: S1732213451.746432,VS0,VE92\n  ---\n  &gt; &lt;- x-timer: S1732199587.954912,VS0,VE88\n  2049c2050\n  &lt; &lt;- x-fastly-request-id: d110d00b3fbf2088a971a40f799a8c45bfaef86b\n  ---\n  &gt; &lt;- x-fastly-request-id: d611276e290a00cc0f123ee47fe3b59a6ee2e04b\n  2061,2063c2062,2064\n  &lt; &lt;- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce-E-BhsINmXuJ-vJcqEz0XRg' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp\n  &lt; &lt;- Date: Thu, 21 Nov 2024 18:24:10 GMT\n  &lt; &lt;- Expires: Sat, 21 Dec 2024 18:24:10 GMT\n  ---\n  &gt; &lt;- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce-ZUf9T5maBu5Wk8WFt3fMUg' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp\n  &gt; &lt;- Date: Thu, 21 Nov 2024 14:33:07 GMT\n  &gt; &lt;- Expires: Sat, 21 Dec 2024 14:33:07 GMT\n  2077c2078\n  &lt; &lt;- Date: Thu, 21 Nov 2024 18:24:11 GMT\n  ---\n  &gt; &lt;- Date: Thu, 21 Nov 2024 14:33:07 GMT\n  2081c2082\n  &lt; &lt;- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce-xxtGc0SMae1cNo-QHnenRw' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp\n  ---\n  &gt; &lt;- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce-g-R5N9RT0BstsqA_e49erg' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp\n  2084c2085\n  &lt; &lt;- Content-Length: 8261\n  ---\n  &gt; &lt;- Content-Length: 8207\n  2087c2088\n  &lt; &lt;- Set-Cookie: AEC=AZ6Zc-W0aJfJ0i1HHLu5VrNOtA6TDDRZ_C5Id58U1RfYsfoHmUSKmp25sao; expires=Tue, 20-May-2025 18:24:11 GMT; path=/; domain=.google.com; Secure; HttpOnly; SameSite=lax\n  ---\n  &gt; &lt;- Set-Cookie: AEC=AZ6Zc-VeKVIHUbr43OtjB4cIhT0Uvcs-R-orzVwmp8x1tiF-CtYALuTcXZs; expires=Tue, 20-May-2025 14:33:07 GMT; path=/; domain=.google.com; Secure; HttpOnly; SameSite=lax\n  2090c2091\n  &lt;   Date: 2024-11-21 18:24\n  ---\n  &gt;   Date: 2024-11-21 14:33\n  2093c2094\n  &lt;   Size: 19.9 kB\n  ---\n  &gt;   Size: 19.8 kB\n  2117,2119c2118,2120\n  &lt; &lt;- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce-jT6wqzoWl44huwhuRbcwAg' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp\n  &lt; &lt;- Date: Thu, 21 Nov 2024 18:24:11 GMT\n  &lt; &lt;- Expires: Sat, 21 Dec 2024 18:24:11 GMT\n  ---\n  &gt; &lt;- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce-OaORetM4PRl0Vgb2bHhJTA' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp\n  &gt; &lt;- Date: Thu, 21 Nov 2024 14:33:07 GMT\n  &gt; &lt;- Expires: Sat, 21 Dec 2024 14:33:07 GMT\n  2133c2134\n  &lt; &lt;- Date: Thu, 21 Nov 2024 18:24:11 GMT\n  ---\n  &gt; &lt;- Date: Thu, 21 Nov 2024 14:33:07 GMT\n  2137c2138\n  &lt; &lt;- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce-R0L_mq0hguJIc3Cg0Jkffw' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp\n  ---\n  &gt; &lt;- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce-Y90jvh2k0d1Z5sBYm0w9eg' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp\n  2140c2141\n  &lt; &lt;- Content-Length: 8247\n  ---\n  &gt; &lt;- Content-Length: 8237\n  2143c2144\n  &lt; &lt;- Set-Cookie: AEC=AZ6Zc-ULYXnBmy-ccbXIifETfQMpSKYwiLtsEk2kvRWvyHPxs2-YM7wmAg; expires=Tue, 20-May-2025 18:24:11 GMT; path=/; domain=.google.com; Secure; HttpOnly; SameSite=lax\n  ---\n  &gt; &lt;- Set-Cookie: AEC=AZ6Zc-Xn32PEI7UosZKJ4O-aTUH44RjP4x5jhSyOAILGKRbau6M60zTseA; expires=Tue, 20-May-2025 14:33:07 GMT; path=/; domain=.google.com; Secure; HttpOnly; SameSite=lax\n  2146c2147\n  &lt;   Date: 2024-11-21 18:24\n  ---\n  &gt;   Date: 2024-11-21 14:33\n  2149c2150\n  &lt;   Size: 19.9 kB\n  ---\n  &gt;   Size: 19.8 kB\n  2180,2181c2181,2182\n  &lt;   incomplete final line found on '/tmp/RtmpmMWJDo/file524d033312487'\n  &lt;   [1] \"&lt;!DOCTYPE html&gt;&lt;html lang=\\\"en\\\" dir=\\\"ltr\\\"&gt;&lt;head&gt;&lt;style nonce=\\\"MlNlq5sEbMjhB7lfMvWjFQ\\\"&gtn  ---\n  &gt;   incomplete final line found on '/tmp/RtmpIOLAIO/file28ef3219d7c3d'\n  &gt;   [1] \"&lt;!DOCTYPE html&gt;&lt;html lang=\\\"en\\\" dir=\\\"ltr\\\"&gt;&lt;head&gt;&lt;style nonce=\\\"H-CqRYFAEV-_6G4OY_Ihcg\\\"&gtn  3203,3267c3204,3210\n  &lt; [1] 3387\n  &lt; [1] 10764\n  &lt; [1] 11522\n  &lt; [1] 11626\n  &lt; [1] 11817\n  &lt; [1] 11866\n  &lt; [1] 11817\n  &lt; [1] 12116\n  &lt; [1] 11686\n  &lt; [1] 11758\n  &lt; [1] 11684\n  &lt; [1] 6720\n  &lt; [1] 12183\n  &lt; [1] 11997\n  &lt; [1] 12301\n  &lt; [1] 11448\n  &lt; [1] 11548\n  &lt; [1] 12057\n  &lt; [1] 11351\n  &lt; [1] 12113\n  &lt; [1] 12246\n  &lt; [1] 11757\n  &lt; [1] 12121\n  &lt; [1] 11916\n  &lt; [1] 11609\n  &lt; [1] 12170\n  &lt; [1] 11253\n  &lt; [1] 11667\n  &lt; [1] 11552\n  &lt; [1] 11865\n  &lt; [1] 11309\n  &lt; [1] 11500\n  &lt; [1] 11477\n  &lt; [1] 11520\n  &lt; [1] 11511\n  &lt; [1] 11626\n  &lt; [1] 11893\n  &lt; [1] 11602\n  &lt; [1] 11656\n  &lt; [1] 11676\n  &lt; [1] 11393\n  &lt; [1] 12102\n  &lt; [1] 11756\n  &lt; [1] 11699\n  &lt; [1] 11393\n  &lt; [1] 11595\n  &lt; [1] 12219\n  &lt; [1] 11500\n  &lt; [1] 11512\n  &lt; [1] 11257\n  &lt; [1] 11446\n  &lt; [1] 11600\n  &lt; [1] 11336\n  &lt; [1] 11641\n  &lt; [1] 11784\n  &lt; [1] 11676\n  &lt; [1] 11352\n  &lt; [1] 11176\n  &lt; [1] 11783\n  &lt; [1] 11645\n  &lt; [1] 9203\n  &lt; [1] 11103\n  &lt; [1] 11525\n  &lt; [1] 11643\n  &lt; [1] 11598\n  ---\n  &gt; [1] 8033\n  &gt; [1] 10607\n  &gt; [1] 11592\n  &gt; [1] 12091\n  &gt; [1] 11562\n  &gt; [1] 12053\n  &gt; [1] 12027\n  3269,3271c3212,3224\n  &lt; [1] 11546\n  &lt; [1] 12149\n  &lt; [1] 11579\n  ---\n  &gt; [1] 12222\n  &gt; [1] 11368\n  &gt; [1] 12279\n  &gt; [1] 12095\n  &gt; [1] 11926\n  &gt; [1] 12298\n  &gt; [1] 11654\n  &gt; [1] 11415\n  &gt; [1] 12013\n  &gt; [1] 11266\n  &gt; [1] 12333\n  &gt; [1] 12115\n  &gt; [1] 11817\n  3273,3283c3226,3252\n  &lt; [1] 11095\n  &lt; [1] 10939\n  &lt; [1] 11655\n  &lt; [1] 11526\n  &lt; [1] 12514\n  &lt; [1] 11375\n  &lt; [1] 12035\n  &lt; [1] 11284\n  &lt; [1] 11642\n  &lt; [1] 12047\n  &lt; [1] 11954\n  ---\n  &gt; [1] 11882\n  &gt; [1] 11623\n  &gt; [1] 11973\n  &gt; [1] 11189\n  &gt; [1] 11587\n  &gt; [1] 11661\n  &gt; [1] 11963\n  &gt; [1] 11366\n  &gt; [1] 11368\n  &gt; [1] 11773\n  &gt; [1] 11287\n  &gt; [1] 11423\n  &gt; [1] 11856\n  &gt; [1] 11611\n  &gt; [1] 6562\n  &gt; [1] 11342\n  &gt; [1] 11920\n  &gt; [1] 11336\n  &gt; [1] 12007\n  &gt; [1] 11632\n  &gt; [1] 12075\n  &gt; [1] 11453\n  &gt; [1] 11505\n  &gt; [1] 11505\n  &gt; [1] 12011\n  &gt; [1] 11600\n  &gt; [1] 11595\n  3285,3305c3254,3284\n  &lt; [1] 11821\n  &lt; [1] 11914\n  &lt; [1] 11567\n  &lt; [1] 11459\n  &lt; [1] 11758\n  &lt; [1] 11721\n  &lt; [1] 11565\n  &lt; [1] 11864\n  &lt; [1] 11783\n  &lt; [1] 11552\n  &lt; [1] 11827\n  &lt; [1] 11703\n  &lt; [1] 12109\n  &lt; [1] 11281\n  &lt; [1] 12121\n  &lt; [1] 11688\n  &lt; [1] 12700\n  &lt; [1] 11677\n  &lt; [1] 11850\n  &lt; [1] 11765\n  &lt; [1] 11892\n  ---\n  &gt; [1] 11599\n  &gt; [1] 11152\n  &gt; [1] 11415\n  &gt; [1] 11770\n  &gt; [1] 11750\n  &gt; [1] 11494\n  &gt; [1] 11691\n  &gt; [1] 10922\n  &gt; [1] 11657\n  &gt; [1] 11770\n  &gt; [1] 11748\n  &gt; [1] 11299\n  &gt; [1] 11566\n  &gt; [1] 11752\n  &gt; [1] 11523\n  &gt; [1] 32768\n  &gt; [1] 32768\n  &gt; [1] 32768\n  &gt; [1] 32768\n  &gt; [1] 11578\n  &gt; [1] 32768\n  &gt; [1] 32768\n  &gt; [1] 32768\n  &gt; [1] 2131\n  &gt; [1] 32768\n  &gt; [1] 32768\n  &gt; [1] 32768\n  &gt; [1] 32768\n  &gt; [1] 13045\n  &gt; [1] 32768\n  &gt; [1] 32768\n  3308c3287\n  &lt; [1] 14901\n  ---\n  &gt; [1] 12697\n  3313c3292\n  &lt; [1] 12254\n  ---\n  &gt; [1] 12720\n  3318c3297\n  &lt; [1] 12026\n  ---\n  &gt; [1] 12211\n  3323c3302\n  &lt; [1] 10041\n  ---\n  &gt; [1] 10201\n  3328c3307\n  &lt; [1] 10840\n  ---\n  &gt; [1] 10148\n  3333c3312\n  &lt; [1] 8452\n  ---\n  &gt; [1] 8668\n  3338c3317\n  &lt; [1] 7964\n  ---\n  &gt; [1] 7457\n  3343c3322\n  &lt; [1] 4819\n  ---\n  &gt; [1] 5348\n  3348c3327\n  &lt; [1] 3943\n  ---\n  &gt; [1] 2875\n  3353c3332\n  &lt; [1] 6465\n  ---\n  &gt; [1] 6309\n  3358c3337\n  &lt; [1] 2781\n  ---\n  &gt; [1] 3386\n  3363c3342\n  &lt; [1] 2370\n  ---\n  &gt; [1] 2376\n  3368c3347\n  &lt; [1] 2579\n  ---\n  &gt; [1] 1543\n  3372c3351\n  &lt; [1] 31460\n  ---\n  &gt; [1] 32155\n  3377c3356\n  &lt; [1] 1156\n  ---\n  &gt; [1] 1044\n  3381c3360\n  &lt; [1] 31976\n  ---\n  &gt; [1] 32232\n  3386c3365\n  &lt; [1] 22150\n  ---\n  &gt; [1] 26368\n  3392c3371\n  &lt; [1] 14099\n  ---\n  &gt; [1] 15195\n  3398c3377\n  &lt; [1] 11163\n  ---\n  &gt; [1] 10755\n  3404c3383\n  &lt; [1] 10665\n  ---\n  &gt; [1] 8704\n  3410c3389\n  &lt; [1] 9333\n  ---\n  &gt; [1] 10651\n  3416c3395\n  &lt; [1] 11621\n  ---\n  &gt; [1] 10231\n  3422c3401\n  &lt; [1] 2725\n  ---\n  &gt; [1] 1975\n  3427c3406\n  &lt; [1] 31544\n  ---\n  &gt; [1] 31625\n  3432c3411\n  &lt; [1] 32757\n  ---\n  &gt; [1] 32214\n  3437c3416\n  &lt; [1] 22323\n  ---\n  &gt; [1] 22171\n  3442c3421\n  &lt; [1] 19917\n  ---\n  &gt; [1] 20008\n  3447c3426\n  &lt; [1] 21856\n  ---\n  &gt; [1] 23628\n  3452c3431\n  &lt; [1] 29383\n  ---\n  &gt; [1] 27685\n  3457c3436\n  &lt; [1] 29428\n  ---\n  &gt; [1] 29198\n  3462c3441\n  &lt; [1] 24974\n  ---\n  &gt; [1] 25858\n  3467c3446\n  &lt; [1] 18753\n  ---\n  &gt; [1] 17861\n  3472c3451\n  &lt; [1] 16146\n  ---\n  &gt; [1] 15575\n  3477c3456\n  &lt; [1] 15067\n  ---\n  &gt; [1] 15578\n  3482c3461\n  &lt; [1] 15744\n  ---\n  &gt; [1] 16128\n  3487,3488c3466,3467\n  &lt; [1] 19460\n  &lt; [1] 32019\n  ---\n  &gt; [1] 19100\n  &gt; [1] 19140\n  3490c3469\n  &lt;   Date: 2024-11-21 18:24\n  ---\n  &gt;   Date: 2024-11-21 14:33\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'httr'\n  Running 'testthat.R'\n\nedit_log(\"httr\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nhttr-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_hunspell.html",
    "href": "packages/test_hunspell.html",
    "title": "hunspell",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"hunspell\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/hunspell\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/hunspell/empty_output.Rout\")\nout &lt;- test_pkg(\"hunspell\", outDir=\"packages/hunspell\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'hunspell'\n\n\n  comparing 'hunspell-Ex.Rout' to 'hunspell-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'hunspell'\n  Running 'spelling.R'\n  Running 'testthat.R'\n\nedit_log(\"hunspell\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nhunspell-Ex.Rout\n\n\n\n\nspelling.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_igraph.html",
    "href": "packages/test_igraph.html",
    "title": "igraph",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"igraph\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/igraph\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/igraph/empty_output.Rout\")\nout &lt;- test_pkg(\"igraph\", outDir=\"packages/igraph\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'igraph'\n\n\nError: running examples in 'igraph-Ex.R' failed\n\nedit_log(\"igraph\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_inline.html",
    "href": "packages/test_inline.html",
    "title": "inline",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"inline\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/inline\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/inline/empty_output.Rout\")\nout &lt;- test_pkg(\"inline\", outDir=\"packages/inline\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'inline'\n\n\n  comparing 'inline-Ex.Rout' to 'inline-Ex.Rout.prev' ... NOTE\n\n\n  91c91\n  &lt;   5:  SUBROUTINE file528a8799e0ea0 ( x )\n  ---\n  &gt;   5:  SUBROUTINE file29a19ea4dc2 ( x )\n  166c166\n  &lt;   make -f '/usr/local/lib/R/etc/Makeconf' -f '/usr/local/lib/R/share/make/shlib.mk' SHLIB_LDFLAGS='$(SHLIB_CXXLDFLAGS)' SHLIB_LD='$(SHLIB_CXXLD)' SHLIB='file528a825434fee.so' OBJECTS='file528a825434fee.o'\n  ---\n  &gt;   make -f '/usr/local/lib/R/etc/Makeconf' -f '/usr/local/lib/R/share/make/shlib.mk' SHLIB_LDFLAGS='$(SHLIB_CXXLDFLAGS)' SHLIB_LD='$(SHLIB_CXXLD)' SHLIB='file29a19440f4b76.so' OBJECTS='file29a19440f4b76.o'\n  169,172c169,172\n  &lt; g++ -std=gnu++17 -I\"/usr/local/lib/R/include\" -DNDEBUG   -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g   -c file528a825434fee.cpp -o file528a825434fee.o\n  &lt; if test  \"zfile528a825434fee.o\" != \"z\"; then \\\n  &lt;   echo g++ -std=gnu++17 -shared -L\"/usr/local/lib/R/lib\" -L/usr/local/lib -o file528a825434fee.so file528a825434fee.o    -L\"/usr/local/lib/R/lib\" -lR; \\\n  &lt;   g++ -std=gnu++17 -shared -L\"/usr/local/lib/R/lib\" -L/usr/local/lib -o file528a825434fee.so file528a825434fee.o    -L\"/usr/local/lib/R/lib\" -lR; \\\n  ---\n  &gt; g++ -std=gnu++17 -I\"/usr/local/lib/R/include\" -DNDEBUG   -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g   -c file29a19440f4b76.cpp -o file29a19440f4b76.o\n  &gt; if test  \"zfile29a19440f4b76.o\" != \"z\"; then \\\n  &gt;   echo g++ -std=gnu++17 -shared -L\"/usr/local/lib/R/lib\" -L/usr/local/lib -o file29a19440f4b76.so file29a19440f4b76.o    -L\"/usr/local/lib/R/lib\" -lR; \\\n  &gt;   g++ -std=gnu++17 -shared -L\"/usr/local/lib/R/lib\" -L/usr/local/lib -o file29a19440f4b76.so file29a19440f4b76.o    -L\"/usr/local/lib/R/lib\" -lR; \\\n  371c371\n  &lt;   2:        SUBROUTINE file528a87efca22c ( n, x )\n  ---\n  &gt;   2:        SUBROUTINE file29a192920f3db ( n, x )\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'inline'\n  Running 'tinytest.R'\n\nedit_log(\"inline\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ninline-Ex.Rout\n\n\n\n\ntinytest.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_isoband.html",
    "href": "packages/test_isoband.html",
    "title": "isoband",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"isoband\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/isoband\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/isoband/empty_output.Rout\")\nout &lt;- test_pkg(\"isoband\", outDir=\"packages/isoband\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'isoband'\n\n\n  comparing 'isoband-Ex.Rout' to 'isoband-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'isoband'\n  Running 'testthat.R'\n\nedit_log(\"isoband\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nisoband-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_jomo.html",
    "href": "packages/test_jomo.html",
    "title": "jomo",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"jomo\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/jomo\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/jomo/empty_output.Rout\")\nout &lt;- test_pkg(\"jomo\", outDir=\"packages/jomo\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'jomo'\n\n\n  comparing 'jomo-Ex.Rout' to 'jomo-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"jomo\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\njomo-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_jquerylib.html",
    "href": "packages/test_jquerylib.html",
    "title": "jquerylib",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"jquerylib\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/jquerylib\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/jquerylib/empty_output.Rout\")\nout &lt;- test_pkg(\"jquerylib\", outDir=\"packages/jquerylib\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'jquerylib'\n\n\nWarning: no examples found for package 'jquerylib'\n\n\nchecks for tests\n\n\nDOing the tests\n\n\nRunning specific tests for package 'jquerylib'\n\n\n  Running 'testthat.R'\n\nedit_log(\"jquerylib\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_kableExtra.html",
    "href": "packages/test_kableExtra.html",
    "title": "kableExtra",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"kableExtra\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/kableExtra\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/kableExtra/empty_output.Rout\")\nout &lt;- test_pkg(\"kableExtra\", outDir=\"packages/kableExtra\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'kableExtra'\n\n\n  comparing 'kableExtra-Ex.Rout' to 'kableExtra-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"kableExtra\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nkableExtra-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_knitr.html",
    "href": "packages/test_knitr.html",
    "title": "knitr",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"knitr\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/knitr\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/knitr/empty_output.Rout\")\nout &lt;- test_pkg(\"knitr\", outDir=\"packages/knitr\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'knitr'\n\n\n  comparing 'knitr-Ex.Rout' to 'knitr-Ex.Rout.prev' ... NOTE\n\n\n  2572c2572\n  &lt;   You changed the working directory to /tmp/RtmpipEtxY (probably via setwd()). It will be restored to /usr/local/lib/R/site-library/knitr/doc. See the Note section in ?knitr::knit\n  ---\n  &gt;   You changed the working directory to /tmp/RtmpqX5Rig (probably via setwd()). It will be restored to /usr/local/lib/R/site-library/knitr/doc. See the Note section in ?knitr::knit\n  2575c2575\n  &lt;   You changed the working directory to /tmp/RtmpipEtxY (probably via setwd()). It will be restored to /usr/local/lib/R/site-library/knitr/doc. See the Note section in ?knitr::knit\n  ---\n  &gt;   You changed the working directory to /tmp/RtmpqX5Rig (probably via setwd()). It will be restored to /usr/local/lib/R/site-library/knitr/doc. See the Note section in ?knitr::knit\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'knitr'\n  Running 'run-all.R'\n\nedit_log(\"knitr\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nknitr-Ex.Rout\n\n\n\n\nrun-all.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_later.html",
    "href": "packages/test_later.html",
    "title": "later",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"later\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/later\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/later/empty_output.Rout\")\nout &lt;- test_pkg(\"later\", outDir=\"packages/later\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'later'\n\n\n  comparing 'later-Ex.Rout' to 'later-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'later'\n  Running 'testthat.R'\n\nedit_log(\"later\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nlater-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_lavaan.html",
    "href": "packages/test_lavaan.html",
    "title": "lavaan",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"lavaan\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/lavaan\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/lavaan/empty_output.Rout\")\nout &lt;- test_pkg(\"lavaan\", outDir=\"packages/lavaan\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'lavaan'\n\n\n  comparing 'lavaan-Ex.Rout' to 'lavaan-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"lavaan\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nlavaan-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_lifecycle.html",
    "href": "packages/test_lifecycle.html",
    "title": "lifecycle",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"lifecycle\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/lifecycle\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/lifecycle/empty_output.Rout\")\nout &lt;- test_pkg(\"lifecycle\", outDir=\"packages/lifecycle\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'lifecycle'\n\n\n  comparing 'lifecycle-Ex.Rout' to 'lifecycle-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'lifecycle'\n  Running 'testthat.R'\n\nedit_log(\"lifecycle\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nlifecycle-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_littler.html",
    "href": "packages/test_littler.html",
    "title": "littler",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"littler\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/littler\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/littler/empty_output.Rout\")\nout &lt;- test_pkg(\"littler\", outDir=\"packages/littler\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'littler'\n\n\n  comparing 'littler-Ex.Rout' to 'littler-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'littler'\n  Running 'simpleTests.R'\n\nedit_log(\"littler\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nlittler-Ex.Rout\n\n\n\n\nsimpleTests.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_loo.html",
    "href": "packages/test_loo.html",
    "title": "loo",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"loo\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/loo\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/loo/empty_output.Rout\")\nout &lt;- test_pkg(\"loo\", outDir=\"packages/loo\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'loo'\n\n\n  comparing 'loo-Ex.Rout' to 'loo-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'loo'\n  Running 'testthat.R'\n\nedit_log(\"loo\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nloo-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_magick.html",
    "href": "packages/test_magick.html",
    "title": "magick",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"magick\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/magick\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/magick/empty_output.Rout\")\nout &lt;- test_pkg(\"magick\", outDir=\"packages/magick\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'magick'\n\n\n  comparing 'magick-Ex.Rout' to 'magick-Ex.Rout.prev' ... NOTE\n\n\n  425,427c425,427\n  &lt; frink.png               67162 FALSE  644 2024-11-21 18:42:55\n  &lt; frink-uncompressed.png 392531 FALSE  644 2024-11-21 18:42:55\n  &lt; frink-final.png         67162 FALSE  644 2024-11-21 18:42:55\n  ---\n  &gt; frink.png               67162 FALSE  644 2024-11-21 14:51:36\n  &gt; frink-uncompressed.png 392531 FALSE  644 2024-11-21 14:51:36\n  &gt; frink-final.png         67162 FALSE  644 2024-11-21 14:51:36\n  429,431c429,431\n  &lt; frink.png              2024-11-21 18:42:55 2024-11-21 18:42:55 1000 1000\n  &lt; frink-uncompressed.png 2024-11-21 18:42:55 2024-11-21 18:42:55 1000 1000\n  &lt; frink-final.png        2024-11-21 18:42:55 2024-11-21 18:42:55 1000 1000\n  ---\n  &gt; frink.png              2024-11-21 14:51:36 2024-11-21 14:51:36 1000 1000\n  &gt; frink-uncompressed.png 2024-11-21 14:51:36 2024-11-21 14:51:36 1000 1000\n  &gt; frink-final.png        2024-11-21 14:51:36 2024-11-21 14:51:36 1000 1000\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'magick'\n  Running 'encoding.R'\n  Running 'imagemagick.R'\n  comparing 'imagemagick.Rout' to 'imagemagick.Rout.save' ...  Running 'spelling.R'\n\nedit_log(\"magick\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nmagick-Ex.Rout\n\n\n\n\nencoding.Rout\n\n\n\n\nimagemagick.Rout\n\n\n\n\nspelling.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_markdown.html",
    "href": "packages/test_markdown.html",
    "title": "markdown",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"markdown\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/markdown\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/markdown/empty_output.Rout\")\nout &lt;- test_pkg(\"markdown\", outDir=\"packages/markdown\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'markdown'\n\n\n  comparing 'markdown-Ex.Rout' to 'markdown-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'markdown'\n  Running 'empty.R'\n  Running 'smartypants.R'\n  Running 'tests.R'\n  comparing 'tests.Rout' to 'tests.Rout.save' ... OK\n\nedit_log(\"markdown\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nmarkdown-Ex.Rout\n\n\n\n\nempty.Rout\n\n\n\n\nsmartypants.Rout\n\n\n\n\ntests.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_memoise.html",
    "href": "packages/test_memoise.html",
    "title": "memoise",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"memoise\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/memoise\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/memoise/empty_output.Rout\")\nout &lt;- test_pkg(\"memoise\", outDir=\"packages/memoise\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'memoise'\n\n\n  comparing 'memoise-Ex.Rout' to 'memoise-Ex.Rout.prev' ... NOTE\n\n\n  139c139\n  &lt;   0.001   0.000   1.002 \n  ---\n  &gt;   0.000   0.001   1.002 \n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'memoise'\n  Running 'testthat.R'\n\nedit_log(\"memoise\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nmemoise-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_mice.html",
    "href": "packages/test_mice.html",
    "title": "mice",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"mice\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/mice\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/mice/empty_output.Rout\")\nout &lt;- test_pkg(\"mice\", outDir=\"packages/mice\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'mice'\n\n\n  comparing 'mice-Ex.Rout' to 'mice-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'mice'\n  Running 'testthat.R'\n\nedit_log(\"mice\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nmice-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_mime.html",
    "href": "packages/test_mime.html",
    "title": "mime",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"mime\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/mime\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/mime/empty_output.Rout\")\nout &lt;- test_pkg(\"mime\", outDir=\"packages/mime\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'mime'\n\n\n  comparing 'mime-Ex.Rout' to 'mime-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'mime'\n  Running 'mime.R'\n\nedit_log(\"mime\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nmime-Ex.Rout\n\n\n\n\nmime.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_minqa.html",
    "href": "packages/test_minqa.html",
    "title": "minqa",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"minqa\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/minqa\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/minqa/empty_output.Rout\")\nout &lt;- test_pkg(\"minqa\", outDir=\"packages/minqa\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'minqa'\n\n\n  comparing 'minqa-Ex.Rout' to 'minqa-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'minqa'\n  Running 'cyq-minqa.R'\n  Running 'newuoa.R'\n  Running 'rvaltest.R'\n\nedit_log(\"minqa\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nminqa-Ex.Rout\n\n\n\n\ncyq-minqa.Rout\n\n\n\n\nnewuoa.Rout\n\n\n\n\nrvaltest.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_mitools.html",
    "href": "packages/test_mitools.html",
    "title": "mitools",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"mitools\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/mitools\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/mitools/empty_output.Rout\")\nout &lt;- test_pkg(\"mitools\", outDir=\"packages/mitools\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'mitools'\n\n\n  comparing 'mitools-Ex.Rout' to 'mitools-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"mitools\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nmitools-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_mnormt.html",
    "href": "packages/test_mnormt.html",
    "title": "mnormt",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"mnormt\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/mnormt\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/mnormt/empty_output.Rout\")\nout &lt;- test_pkg(\"mnormt\", outDir=\"packages/mnormt\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'mnormt'\n\n\n  comparing 'mnormt-Ex.Rout' to 'mnormt-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"mnormt\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nmnormt-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_multcomp.html",
    "href": "packages/test_multcomp.html",
    "title": "multcomp",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"multcomp\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/multcomp\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/multcomp/empty_output.Rout\")\nout &lt;- test_pkg(\"multcomp\", outDir=\"packages/multcomp\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'multcomp'\n\n\n  comparing 'multcomp-Ex.Rout' to 'multcomp-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'multcomp'\n  Running 'bugfix.R'\n  comparing 'bugfix.Rout' to 'bugfix.Rout.save' ... OK\n  Running 'regtest-anova.R'\n  comparing 'regtest-anova.Rout' to 'regtest-anova.Rout.save' ...  Running 'regtest-fixest.R'\n  Running 'regtest-interface-extended.R'\n  comparing 'regtest-interface-extended.Rout' to 'regtest-interface-extended.Rout.save' ... OK\n  Running 'regtest-interface.R'\n  comparing 'regtest-interface.Rout' to 'regtest-interface.Rout.save' ... OK\n  Running 'regtest-lme.R'\n  comparing 'regtest-lme.Rout' to 'regtest-lme.Rout.save' ... OK\n  Running 'regtest-mmm.R'\n  comparing 'regtest-mmm.Rout' to 'regtest-mmm.Rout.save' ... OK\n  Running 'regtest-survival.R'\n  comparing 'regtest-survival.Rout' to 'regtest-survival.Rout.save' ... OK\n  Running 'regtest-Tukey.R'\n  comparing 'regtest-Tukey.Rout' to 'regtest-Tukey.Rout.save' ... OK\n\nedit_log(\"multcomp\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nmultcomp-Ex.Rout\n\n\n\n\nMCMT.Rout\n\n\n\n\nbugfix.Rout\n\n\n\n\nregtest-Tukey.Rout\n\n\n\n\nregtest-anova.Rout\n\n\n\n\nregtest-fixest.Rout\n\n\n\n\nregtest-interface-extended.Rout\n\n\n\n\nregtest-interface.Rout\n\n\n\n\nregtest-lme.Rout\n\n\n\n\nregtest-mmm.Rout\n\n\n\n\nregtest-survival.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_mvtnorm.html",
    "href": "packages/test_mvtnorm.html",
    "title": "mvtnorm",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"mvtnorm\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/mvtnorm\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/mvtnorm/empty_output.Rout\")\nout &lt;- test_pkg(\"mvtnorm\", outDir=\"packages/mvtnorm\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'mvtnorm'\n\n\n  comparing 'mvtnorm-Ex.Rout' to 'mvtnorm-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'mvtnorm'\n  Running 'bugfix-tests.R'\n  comparing 'bugfix-tests.Rout' to 'bugfix-tests.Rout.save' ... OK\n  Running 'dmvnorm-Ex.R'\n  Running 'plmvnorm-Ex.R'\n  comparing 'plmvnorm-Ex.Rout' to 'plmvnorm-Ex.Rout.save' ... OK\n  Running 'regtest-scores.R'\n  comparing 'regtest-scores.Rout' to 'regtest-scores.Rout.save' ... OK\n  Running 'regtest-TVPACK.R'\n  comparing 'regtest-TVPACK.Rout' to 'regtest-TVPACK.Rout.save' ... OK\n  Running 'rmvnorm.R'\n  Running 'slpmvnorm.R'\n  Running 'test-getInt.R'\n  Running 'test-noisy-root.R'\n  comparing 'test-noisy-root.Rout' to 'test-noisy-root.Rout.save' ... OK\n\nedit_log(\"mvtnorm\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nmvtnorm-Ex.Rout\n\n\n\n\nbugfix-tests.Rout\n\n\n\n\ndmvnorm-Ex.Rout\n\n\n\n\nplmvnorm-Ex.Rout\n\n\n\n\nregtest-TVPACK.Rout\n\n\n\n\nregtest-scores.Rout\n\n\n\n\nrmvnorm.Rout\n\n\n\n\nslpmvnorm.Rout\n\n\n\n\ntest-getInt.Rout\n\n\n\n\ntest-noisy-root.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_nonnest2.html",
    "href": "packages/test_nonnest2.html",
    "title": "nonnest2",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"nonnest2\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/nonnest2\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/nonnest2/empty_output.Rout\")\nout &lt;- test_pkg(\"nonnest2\", outDir=\"packages/nonnest2\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'nonnest2'\n\n\n  comparing 'nonnest2-Ex.Rout' to 'nonnest2-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'nonnest2'\n  Running 'testthat.R'\n\nedit_log(\"nonnest2\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nnonnest2-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_nycflights13.html",
    "href": "packages/test_nycflights13.html",
    "title": "nycflights13",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"nycflights13\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/nycflights13\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/nycflights13/empty_output.Rout\")\nout &lt;- test_pkg(\"nycflights13\", outDir=\"packages/nycflights13\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'nycflights13'\n\n\n  comparing 'nycflights13-Ex.Rout' to 'nycflights13-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"nycflights13\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nnycflights13-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_openxlsx.html",
    "href": "packages/test_openxlsx.html",
    "title": "openxlsx",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"openxlsx\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/openxlsx\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/openxlsx/empty_output.Rout\")\nout &lt;- test_pkg(\"openxlsx\", outDir=\"packages/openxlsx\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'openxlsx'\n\n\n  comparing 'openxlsx-Ex.Rout' to 'openxlsx-Ex.Rout.prev' ... NOTE\n\n\n  1326,1327c1326,1327\n  &lt;  Image 1: \"/tmp/RtmpeP8TEZ/file55a78fa7ace5/xl/media/image2.jpeg\"\n  &lt;  Image 2: \"/tmp/RtmpeP8TEZ/file55a78fa7ace5/xl/media/image1.jpeg\"\n  ---\n  &gt;  Image 1: \"/tmp/Rtmp64pATW/file2f16d160983fe/xl/media/image2.jpeg\"\n  &gt;  Image 2: \"/tmp/Rtmp64pATW/file2f16d160983fe/xl/media/image1.jpeg\"\n  1330,1337c1330,1337\n  &lt;  Chart 1: \"/tmp/RtmpeP8TEZ/file55a78fa7ace5/xl/charts/colors2.xml\"\n  &lt;  Chart 2: \"/tmp/RtmpeP8TEZ/file55a78fa7ace5/xl/charts/style2.xml\"\n  &lt;  Chart 3: \"/tmp/RtmpeP8TEZ/file55a78fa7ace5/xl/charts/chart2.xml\"\n  &lt;  Chart 4: \"/tmp/RtmpeP8TEZ/file55a78fa7ace5/xl/charts/chart1.xml\"\n  &lt;  Chart 5: \"/tmp/RtmpeP8TEZ/file55a78fa7ace5/xl/charts/style1.xml\"\n  &lt;  Chart 6: \"/tmp/RtmpeP8TEZ/file55a78fa7ace5/xl/charts/colors1.xml\"\n  &lt;  Chart 7: \"/tmp/RtmpeP8TEZ/file55a78fa7ace5/xl/charts/_rels/chart2.xml.rels\"\n  &lt;  Chart 8: \"/tmp/RtmpeP8TEZ/file55a78fa7ace5/xl/charts/_rels/chart1.xml.rels\"\n  ---\n  &gt;  Chart 1: \"/tmp/Rtmp64pATW/file2f16d160983fe/xl/charts/colors2.xml\"\n  &gt;  Chart 2: \"/tmp/Rtmp64pATW/file2f16d160983fe/xl/charts/style2.xml\"\n  &gt;  Chart 3: \"/tmp/Rtmp64pATW/file2f16d160983fe/xl/charts/chart2.xml\"\n  &gt;  Chart 4: \"/tmp/Rtmp64pATW/file2f16d160983fe/xl/charts/chart1.xml\"\n  &gt;  Chart 5: \"/tmp/Rtmp64pATW/file2f16d160983fe/xl/charts/style1.xml\"\n  &gt;  Chart 6: \"/tmp/Rtmp64pATW/file2f16d160983fe/xl/charts/colors1.xml\"\n  &gt;  Chart 7: \"/tmp/Rtmp64pATW/file2f16d160983fe/xl/charts/_rels/chart2.xml.rels\"\n  &gt;  Chart 8: \"/tmp/Rtmp64pATW/file2f16d160983fe/xl/charts/_rels/chart1.xml.rels\"\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'openxlsx'\n  Running 'testthat.R'\n\nedit_log(\"openxlsx\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nopenxlsx-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_ordinal.html",
    "href": "packages/test_ordinal.html",
    "title": "ordinal",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"ordinal\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/ordinal\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/ordinal/empty_output.Rout\")\nout &lt;- test_pkg(\"ordinal\", outDir=\"packages/ordinal\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'ordinal'\n\n\n  comparing 'ordinal-Ex.Rout' to 'ordinal-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'ordinal'\n  Running 'anova.R'\n  Running 'clm.fit.R'\n  Running 'clm.formula.R'\n  Running 'clmm.control.R'\n  Running 'clmm.formula.R'\n  Running 'clmm.methods.R'\n  Running 'clmm.R'\n  Running 'confint.R'\n  Running 'nominal.test.R'\n  Running 'ranef.loading.R'\n  Running 'test-all.R'\n  Running 'test.clm.convergence.R'\n  Running 'test.clm.flex.link.R'\n  Running 'test.clm.model.matrix.R'\n  Running 'test.clm.predict.R'\n  Running 'test.clm.profile.R'\n  Running 'test.clm.single.anova.R'\n  Running 'test.clm.Theta.R'\n  Running 'test.general.R'\n  Running 'test.makeThresholds.R'\n  Running 'test.sign.R'\n  Running 'test0weights.R'\n  Running 'testAnova.clm2.R'\n  Running 'testCLM.R'\n\nedit_log(\"ordinal\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nordinal-Ex.Rout\n\n\n\n\nanova.Rout\n\n\n\n\nclm.fit.Rout\n\n\n\n\nclm.formula.Rout\n\n\n\n\nclmm.Rout\n\n\n\n\nclmm.control.Rout\n\n\n\n\nclmm.formula.Rout\n\n\n\n\nclmm.methods.Rout\n\n\n\n\nconfint.Rout\n\n\n\n\nnominal.test.Rout\n\n\n\n\nranef.loading.Rout\n\n\n\n\ntest-all.Rout\n\n\n\n\ntest.clm.Theta.Rout\n\n\n\n\ntest.clm.convergence.Rout\n\n\n\n\ntest.clm.flex.link.Rout\n\n\n\n\ntest.clm.model.matrix.Rout\n\n\n\n\ntest.clm.predict.Rout\n\n\n\n\ntest.clm.profile.Rout\n\n\n\n\ntest.clm.single.anova.Rout\n\n\n\n\ntest.general.Rout\n\n\n\n\ntest.makeThresholds.Rout\n\n\n\n\ntest.sign.Rout\n\n\n\n\ntest0weights.Rout\n\n\n\n\ntestAnova.clm2.Rout\n\n\n\n\ntestCLM.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_pan.html",
    "href": "packages/test_pan.html",
    "title": "pan",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"pan\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/pan\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/pan/empty_output.Rout\")\nout &lt;- test_pkg(\"pan\", outDir=\"packages/pan\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'pan'\n\n\n  comparing 'pan-Ex.Rout' to 'pan-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"pan\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\npan-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_patchwork.html",
    "href": "packages/test_patchwork.html",
    "title": "patchwork",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"patchwork\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/patchwork\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/patchwork/empty_output.Rout\")\nout &lt;- test_pkg(\"patchwork\", outDir=\"packages/patchwork\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'patchwork'\n\n\n  comparing 'patchwork-Ex.Rout' to 'patchwork-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'patchwork'\n  Running 'testthat.R'\n\nedit_log(\"patchwork\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\npatchwork-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_pbkrtest.html",
    "href": "packages/test_pbkrtest.html",
    "title": "pbkrtest",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"pbkrtest\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/pbkrtest\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/pbkrtest/empty_output.Rout\")\nout &lt;- test_pkg(\"pbkrtest\", outDir=\"packages/pbkrtest\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'pbkrtest'\n\n\n  comparing 'pbkrtest-Ex.Rout' to 'pbkrtest-Ex.Rout.prev' ... NOTE\n\n\n  567c567\n  &lt; Bootstrap test; time: 1.71 sec; samples: 50; extremes: 0;\n  ---\n  &gt; Bootstrap test; time: 1.73 sec; samples: 50; extremes: 0;\n  589c589\n  &lt; Bootstrap test; time: 1.60 sec; samples: 50; extremes: 0;\n  ---\n  &gt; Bootstrap test; time: 1.61 sec; samples: 50; extremes: 0;\n  614c614\n  &lt; Bootstrap test; time: 0.23 sec; samples: 50; extremes: 0;\n  ---\n  &gt; Bootstrap test; time: 0.21 sec; samples: 50; extremes: 0;\n  804c804\n  &lt; Bootstrap test; time: 0.23 sec; samples: 50; extremes: 4;\n  ---\n  &gt; Bootstrap test; time: 0.28 sec; samples: 50; extremes: 4;\n  813c813\n  &lt; Bootstrap test; time: 0.24 sec; samples: 50; extremes: 12;\n  ---\n  &gt; Bootstrap test; time: 0.32 sec; samples: 50; extremes: 12;\n  862c862\n  &lt;    0.68 \n  ---\n  &gt;   0.697 \n\n\nchecks for tests\n\nedit_log(\"pbkrtest\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\npbkrtest-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_phyr.html",
    "href": "packages/test_phyr.html",
    "title": "phyr",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"phyr\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/phyr\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/phyr/empty_output.Rout\")\nout &lt;- test_pkg(\"phyr\", outDir=\"packages/phyr\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'phyr'\n\n\nError: running examples in 'phyr-Ex.R' failed\n\nedit_log(\"phyr\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_pkgbuild.html",
    "href": "packages/test_pkgbuild.html",
    "title": "pkgbuild",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"pkgbuild\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/pkgbuild\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/pkgbuild/empty_output.Rout\")\nout &lt;- test_pkg(\"pkgbuild\", outDir=\"packages/pkgbuild\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'pkgbuild'\n\n\n  comparing 'pkgbuild-Ex.Rout' to 'pkgbuild-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'pkgbuild'\n  Running 'build-tools.R'\n  Running 'testthat.R'\nError: running the tests in 'testthat.R' failed\n\nedit_log(\"pkgbuild\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\npkgbuild-Ex.Rout\n\n\n\n\nbuild-tools.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_pkgdown.html",
    "href": "packages/test_pkgdown.html",
    "title": "pkgdown",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"pkgdown\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/pkgdown\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/pkgdown/empty_output.Rout\")\nout &lt;- test_pkg(\"pkgdown\", outDir=\"packages/pkgdown\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'pkgdown'\n\n\n  comparing 'pkgdown-Ex.Rout' to 'pkgdown-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'pkgdown'\n  Running 'testthat.R'\nError: running the tests in 'testthat.R' failed\n\nedit_log(\"pkgdown\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\npkgdown-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_plogr.html",
    "href": "packages/test_plogr.html",
    "title": "plogr",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"plogr\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/plogr\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/plogr/empty_output.Rout\")\nout &lt;- test_pkg(\"plogr\", outDir=\"packages/plogr\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'plogr'\n\n\n  comparing 'plogr-Ex.Rout' to 'plogr-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"plogr\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nplogr-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_png.html",
    "href": "packages/test_png.html",
    "title": "png",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"png\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/png\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/png/empty_output.Rout\")\nout &lt;- test_pkg(\"png\", outDir=\"packages/png\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'png'\n\n\n  comparing 'png-Ex.Rout' to 'png-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"png\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\npng-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_posterior.html",
    "href": "packages/test_posterior.html",
    "title": "posterior",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"posterior\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/posterior\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/posterior/empty_output.Rout\")\nout &lt;- test_pkg(\"posterior\", outDir=\"packages/posterior\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'posterior'\n\n\n  comparing 'posterior-Ex.Rout' to 'posterior-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'posterior'\n  Running 'testthat.R'\n\nedit_log(\"posterior\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nposterior-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_praise.html",
    "href": "packages/test_praise.html",
    "title": "praise",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"praise\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/praise\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/praise/empty_output.Rout\")\nout &lt;- test_pkg(\"praise\", outDir=\"packages/praise\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'praise'\n\n\n  comparing 'praise-Ex.Rout' to 'praise-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'praise'\n  Running 'testthat.R'\n\nedit_log(\"praise\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\npraise-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_processx.html",
    "href": "packages/test_processx.html",
    "title": "processx",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"processx\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/processx\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/processx/empty_output.Rout\")\nout &lt;- test_pkg(\"processx\", outDir=\"packages/processx\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'processx'\n\n\n  comparing 'processx-Ex.Rout' to 'processx-Ex.Rout.prev' ... NOTE\n\n\n  200c200\n  &lt; [1] \"DESCRIPTION\\nempty_output.Rout\\ninst\\nLICENSE\\nman\\nMD5\\nNAMESPACE\\nNEWS.md\\nprocessx-Ex.pdf\\nprocessx-Ex.R\\nprocessx-Ex.Rout.fail\\nprocessx-Ex.Rout.prev\\nprocessx-tests\\nR\\nREADME.md\\nsrc\\ntests\\n\"\n  ---\n  &gt; [1] \"DESCRIPTION\\nempty_output.Rout\\ninst\\nLICENSE\\nman\\nMD5\\nNAMESPACE\\nNEWS.md\\nprocessx-Ex.pdf\\nprocessx-Ex.R\\nprocessx-Ex.Rout.fail\\nR\\nREADME.md\\nsrc\\ntests\\n\"\n  210c210\n  &lt;   0.008   0.005   0.666 \n  ---\n  &gt;   0.007   0.008   0.671 \n  214c214\n  &lt;   0.007   0.010   1.665 \n  ---\n  &gt;   0.008   0.008   1.669 \n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'processx'\n  Running 'testthat.R'\nError: running the tests in 'testthat.R' failed\n\nedit_log(\"processx\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nprocessx-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_progress.html",
    "href": "packages/test_progress.html",
    "title": "progress",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"progress\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/progress\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/progress/empty_output.Rout\")\nout &lt;- test_pkg(\"progress\", outDir=\"packages/progress\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'progress'\n\n\n  comparing 'progress-Ex.Rout' to 'progress-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'progress'\n  Running 'testthat.R'\n\nedit_log(\"progress\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nprogress-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_ps.html",
    "href": "packages/test_ps.html",
    "title": "ps",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"ps\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/ps\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/ps/empty_output.Rout\")\nout &lt;- test_pkg(\"ps\", outDir=\"packages/ps\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'ps'\n\n\n  comparing 'ps-Ex.Rout' to 'ps-Ex.Rout.prev' ... NOTE\n\n\n  208c208\n  &lt; &lt;ps::ps_handle&gt; PID=361446, NAME=R, AT=2024-11-21 19:17:29.12\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=209884, NAME=R, AT=2024-11-21 15:28:05.91\n  238c238\n  &lt; &lt;ps::ps_handle&gt; PID=361446, NAME=R, AT=2024-11-21 19:17:29.12\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=209884, NAME=R, AT=2024-11-21 15:28:05.91\n  283c283\n  &lt; 1  6 AF_INET SOCK_STREAM 172.18.0.2 39374 52.20.148.183    80 CONN_ESTABLISHED\n  ---\n  &gt; 1  6 AF_INET SOCK_STREAM 172.18.0.2 60658 98.84.71.227    80 CONN_ESTABLISHED\n  342c342\n  &lt; &lt;ps::ps_handle&gt; PID=361446, NAME=R, AT=2024-11-21 19:17:29.12\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=209884, NAME=R, AT=2024-11-21 15:28:05.91\n  345c345\n  &lt;            0.41            0.09            0.00            0.01 \n  ---\n  &gt;            0.42            0.09            0.00            0.01 \n  348c348\n  &lt;   0.421   0.103   0.631 \n  ---\n  &gt;   0.437   0.102   0.893 \n  375c375\n  &lt; &lt;ps::ps_handle&gt; PID=361446, NAME=R, AT=2024-11-21 19:17:29.12\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=209884, NAME=R, AT=2024-11-21 15:28:05.91\n  377c377\n  &lt; [1] \"2024-11-21 19:17:29 GMT\"\n  ---\n  &gt; [1] \"2024-11-21 15:28:05 GMT\"\n  404c404\n  &lt; &lt;ps::ps_handle&gt; PID=361446, NAME=R, AT=2024-11-21 19:17:29.12\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=209884, NAME=R, AT=2024-11-21 15:28:05.91\n  431c431\n  &lt; &lt;ps::ps_handle&gt; PID=361446, NAME=R, AT=2024-11-21 19:17:29.12\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=209884, NAME=R, AT=2024-11-21 15:28:05.91\n  434c434\n  &lt; &lt;ps::ps_handle&gt; PID=361442, NAME=sh, AT=2024-11-21 19:17:29.11\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=209880, NAME=sh, AT=2024-11-21 15:28:05.91\n  437c437\n  &lt; &lt;ps::ps_handle&gt; PID=361441, NAME=sh, AT=2024-11-21 19:17:29.11\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=209879, NAME=sh, AT=2024-11-21 15:28:05.9\n  440c440\n  &lt; &lt;ps::ps_handle&gt; PID=361396, NAME=R, AT=2024-11-21 19:17:22.22\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=209786, NAME=R, AT=2024-11-21 15:27:57.21\n  443c443\n  &lt; &lt;ps::ps_handle&gt; PID=272933, NAME=deno, AT=2024-11-21 16:55:24.12\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=77660, NAME=deno, AT=2024-11-21 13:17:01.64\n  446c446\n  &lt; &lt;ps::ps_handle&gt; PID=272922, NAME=quarto, AT=2024-11-21 16:55:24.1\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=77652, NAME=quarto, AT=2024-11-21 13:17:01.61\n  449,451d448\n  &lt; &lt;ps::ps_handle&gt; PID=165984, NAME=bash, AT=2024-11-21 14:30:38.49\n  &lt; \n  &lt; [[8]]\n  454c451\n  &lt; [[9]]\n  ---\n  &gt; [[8]]\n  457c454\n  &lt; [[10]]\n  ---\n  &gt; [[9]]\n  460c457\n  &lt; [[11]]\n  ---\n  &gt; [[10]]\n  580c577\n  &lt; 1          / 109761204224 53811347456 61528629248 0.4665455\n  ---\n  &gt; 1          / 109761204224 53633286144 61706690560 0.4650017\n  608c605\n  &lt; &lt;ps::ps_handle&gt; PID=361446, NAME=R, AT=2024-11-21 19:17:29.12\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=209884, NAME=R, AT=2024-11-21 15:28:05.91\n  640c637\n  &lt; &lt;ps::ps_handle&gt; PID=361446, NAME=R, AT=2024-11-21 19:17:29.12\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=209884, NAME=R, AT=2024-11-21 15:28:05.91\n  718c715\n  &lt; &lt;ps::ps_handle&gt; PID=361446, NAME=R, AT=2024-11-21 19:17:29.12\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=209884, NAME=R, AT=2024-11-21 15:28:05.91\n  745c742\n  &lt; &lt;ps::ps_handle&gt; PID=361446, NAME=R, AT=2024-11-21 19:17:29.12\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=209884, NAME=R, AT=2024-11-21 15:28:05.91\n  779c776\n  &lt; &lt;ps::ps_handle&gt; PID=361463, NAME=sleep, AT=2024-11-21 19:17:29.84\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=209935, NAME=sleep, AT=2024-11-21 15:28:07\n  783c780\n  &lt; &lt;ps::ps_handle&gt; PID=361463, NAME=sleep, AT=2024-11-21 19:17:29.84\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=209935, NAME=sleep, AT=2024-11-21 15:28:07\n  812c809\n  &lt; [1] 0.81 1.45 1.49\n  ---\n  &gt; [1] 2.25 3.05 3.12\n  840c837\n  &lt; &lt;ps::ps_handle&gt; PID=361446, NAME=R, AT=2024-11-21 19:17:29.12\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=209884, NAME=R, AT=2024-11-21 15:28:05.91\n  843c840\n  &lt;  81448960 393564160  19529728      4096         0 277868544         0 \n  ---\n  &gt;  81604608 393564160  19791872      4096         0 277868544         0 \n  846c843\n  &lt;  81448960 393564160  19529728      4096         0 277868544         0  63389696 \n  ---\n  &gt;  81604608 393564160  19791872      4096         0 277868544         0  63270912 \n  848c845\n  &lt;  69308416         0 \n  ---\n  &gt;  68279296         0 \n  877c874\n  &lt; &lt;ps::ps_handle&gt; PID=361446, NAME=R, AT=2024-11-21 19:17:29.12\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=209884, NAME=R, AT=2024-11-21 15:28:05.91\n  952c949\n  &lt; &lt;ps::ps_handle&gt; PID=361446, NAME=R, AT=2024-11-21 19:17:29.12\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=209884, NAME=R, AT=2024-11-21 15:28:05.91\n  986c983\n  &lt; 1  0                                                   pipe:[3319000]\n  ---\n  &gt; 1  0                                                   pipe:[2242130]\n  995c992\n  &lt; 1  0                                                   pipe:[3319000]\n  ---\n  &gt; 1  0                                                   pipe:[2242130]\n  1001c998\n  &lt; 7  7                                /tmp/RtmpxP8YD5/file583e65e184406\n  ---\n  &gt; 7  7                                 /tmp/Rtmp4MJkcn/file333dc4d5c967\n  1006c1003\n  &lt; 1  0                                                   pipe:[3319000]\n  ---\n  &gt; 1  0                                                   pipe:[2242130]\n  1059c1056\n  &lt; &lt;ps::ps_handle&gt; PID=361446, NAME=R, AT=2024-11-21 19:17:29.12\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=209884, NAME=R, AT=2024-11-21 15:28:05.91\n  1061c1058\n  &lt; [1] 361446\n  ---\n  &gt; [1] 209884\n  1091c1088\n  &lt; &lt;ps::ps_handle&gt; PID=361446, NAME=R, AT=2024-11-21 19:17:29.12\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=209884, NAME=R, AT=2024-11-21 15:28:05.91\n  1093c1090\n  &lt; [1] 361442\n  ---\n  &gt; [1] 209880\n  1095c1092\n  &lt; &lt;ps::ps_handle&gt; PID=361442, NAME=sh, AT=2024-11-21 19:17:29.11\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=209880, NAME=sh, AT=2024-11-21 15:28:05.91\n  1128c1125\n  &lt; &lt;ps::ps_handle&gt; PID=361464, NAME=sleep, AT=2024-11-21 19:17:29.89\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=209937, NAME=sleep, AT=2024-11-21 15:28:07.07\n  1132c1129\n  &lt; [1] \"running\"\n  ---\n  &gt; [1] \"stopped\"\n  1136c1133\n  &lt; [1] \"running\"\n  ---\n  &gt; [1] \"sleeping\"\n  1170c1167\n  &lt; &lt;ps::ps_handle&gt; PID=361465, NAME=sleep, AT=2024-11-21 19:17:29.9\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=209938, NAME=sleep, AT=2024-11-21 15:28:07.08\n  1174c1171\n  &lt; &lt;ps::ps_handle&gt; PID=361465, NAME=???, AT=2024-11-21 19:17:29.9\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=209938, NAME=sleep, AT=2024-11-21 15:28:07.08\n  1176c1173\n  &lt; [1] FALSE\n  ---\n  &gt; [1] TRUE\n  1253c1250\n  &lt; &lt;ps::ps_handle&gt; PID=361446, NAME=R, AT=2024-11-21 19:17:29.12\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=209884, NAME=R, AT=2024-11-21 15:28:05.91\n  1288c1285\n  &lt; &lt;ps::ps_handle&gt; PID=361466, NAME=sleep, AT=2024-11-21 19:17:29.91\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=209939, NAME=sleep, AT=2024-11-21 15:28:07.1\n  1296c1293\n  &lt; [1] \"running\"\n  ---\n  &gt; [1] \"sleeping\"\n  1323c1320\n  &lt;   30859.73     182.30    8077.78   39052.90     349.09       0.00     278.97 \n  ---\n  &gt;   18331.41     182.26    5485.69   27041.97     270.88       0.00     203.85 \n  1353c1350\n  &lt; [1] 3459645440\n  ---\n  &gt; [1] 3798020096\n  1356c1353\n  &lt; [1] 58.32542\n  ---\n  &gt; [1] 54.24939\n  1359c1356\n  &lt; [1] 4203507712\n  ---\n  &gt; [1] 3765575680\n  1362c1359\n  &lt; [1] 825131008\n  ---\n  &gt; [1] 850743296\n  1365c1362\n  &lt; [1] 3448438784\n  ---\n  &gt; [1] 4122292224\n  1368c1365\n  &lt; [1] 3074813952\n  ---\n  &gt; [1] 2375544832\n  1371c1368\n  &lt; [1] 127676416\n  ---\n  &gt; [1] 129470464\n  1374c1371\n  &lt; [1] 3145256960\n  ---\n  &gt; [1] 3555782656\n  1377c1374\n  &lt; [1] 325857280\n  ---\n  &gt; [1] 425250816\n  1380c1377\n  &lt; [1] 673419264\n  ---\n  &gt; [1] 681418752\n  1409c1406\n  &lt; [1] 1442320384\n  ---\n  &gt; [1] 1431568384\n  1412c1409\n  &lt; [1] 556261376\n  ---\n  &gt; [1] 567013376\n  1415c1412\n  &lt; [1] 72.16719\n  ---\n  &gt; [1] 71.62921\n  1418c1415\n  &lt; [1] 669495296\n  ---\n  &gt; [1] 321400832\n  1421c1418\n  &lt; [1] 2297069568\n  ---\n  &gt; [1] 1837355008\n  1449c1446\n  &lt; &lt;ps::ps_handle&gt; PID=361446, NAME=R, AT=2024-11-21 19:17:29.12\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=209884, NAME=R, AT=2024-11-21 15:28:05.91\n  1451c1448\n  &lt; [1] \"/dev/pts/0\"\n  ---\n  &gt; [1] NA\n  1483c1480\n  &lt; &lt;ps::ps_handle&gt; PID=361469, NAME=sleep, AT=2024-11-21 19:17:29.94\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=209942, NAME=sleep, AT=2024-11-21 15:28:07.13\n  1487c1484\n  &lt; &lt;ps::ps_handle&gt; PID=361469, NAME=???, AT=2024-11-21 19:17:29.94\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=209942, NAME=sleep, AT=2024-11-21 15:28:07.13\n  1489c1486\n  &lt; [1] FALSE\n  ---\n  &gt; [1] TRUE\n  1491c1488\n  &lt; [1] -15\n  ---\n  &gt; NULL\n  1543c1540\n  &lt; &lt;ps::ps_handle&gt; PID=361446, NAME=R, AT=2024-11-21 19:17:29.12\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=209884, NAME=R, AT=2024-11-21 15:28:05.91\n  1576c1573\n  &lt; &lt;ps::ps_handle&gt; PID=361446, NAME=R, AT=2024-11-21 19:17:29.12\n  ---\n  &gt; &lt;ps::ps_handle&gt; PID=209884, NAME=R, AT=2024-11-21 15:28:05.91\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'ps'\n  Running 'testthat.R'\nError: running the tests in 'testthat.R' failed\n\nedit_log(\"ps\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nps-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_qrng.html",
    "href": "packages/test_qrng.html",
    "title": "qrng",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"qrng\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/qrng\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/qrng/empty_output.Rout\")\nout &lt;- test_pkg(\"qrng\", outDir=\"packages/qrng\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'qrng'\n\n\nError: running examples in 'qrng-Ex.R' failed\n\nedit_log(\"qrng\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_quantreg.html",
    "href": "packages/test_quantreg.html",
    "title": "quantreg",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"quantreg\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/quantreg\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/quantreg/empty_output.Rout\")\nout &lt;- test_pkg(\"quantreg\", outDir=\"packages/quantreg\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'quantreg'\n\n\n  comparing 'quantreg-Ex.Rout' to 'quantreg-Ex.Rout.prev' ... NOTE\n\n\n  120d119\n  &lt; dev.new(): using pdf(file=\"Rplots1.pdf\")\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'quantreg'\n  Running 'panel.R'\n  Running 'rq.fit.panel.R'\n  Running 'rq.R'\n  Running 'run-demos.R'\n\nedit_log(\"quantreg\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nquantreg-Ex.Rout\n\n\n\n\npanel.Rout\n\n\n\n\nrq.Rout\n\n\n\n\nrq.fit.panel.Rout\n\n\n\n\nrun-demos.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_rJava.html",
    "href": "packages/test_rJava.html",
    "title": "rJava",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"rJava\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/rJava\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/rJava/empty_output.Rout\")\nout &lt;- test_pkg(\"rJava\", outDir=\"packages/rJava\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'rJava'\n\n\nError: running examples in 'rJava-Ex.R' failed\n\nedit_log(\"rJava\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_randomForest.html",
    "href": "packages/test_randomForest.html",
    "title": "randomForest",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"randomForest\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/randomForest\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/randomForest/empty_output.Rout\")\nout &lt;- test_pkg(\"randomForest\", outDir=\"packages/randomForest\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'randomForest'\n\n\n  comparing 'randomForest-Ex.Rout' to 'randomForest-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"randomForest\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nrandomForest-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_rappdirs.html",
    "href": "packages/test_rappdirs.html",
    "title": "rappdirs",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"rappdirs\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/rappdirs\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/rappdirs/empty_output.Rout\")\nout &lt;- test_pkg(\"rappdirs\", outDir=\"packages/rappdirs\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'rappdirs'\n\n\n  comparing 'rappdirs-Ex.Rout' to 'rappdirs-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'rappdirs'\n  Running 'testthat.R'\n\nedit_log(\"rappdirs\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nrappdirs-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_readr.html",
    "href": "packages/test_readr.html",
    "title": "readr",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"readr\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/readr\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/readr/empty_output.Rout\")\nout &lt;- test_pkg(\"readr\", outDir=\"packages/readr\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'readr'\n\n\n  comparing 'readr-Ex.Rout' to 'readr-Ex.Rout.prev' ... NOTE\n\n\n  365c365\n  &lt; [1] \"/tmp/Rtmp1Bn1x8/file5a72f1172f5c7\"\n  ---\n  &gt; [1] \"/tmp/RtmpHYa3FI/file35a58226e780b\"\n  385c385\n  &lt; [1] \"/tmp/Rtmp1Bn1x8/file5a72f35aaa538\"\n  ---\n  &gt; [1] \"/tmp/RtmpHYa3FI/file35a58546ff511\"\n  411c411\n  &lt; [1] \"/tmp/Rtmp1Bn1x8/file5a72f51ee415c\"\n  ---\n  &gt; [1] \"/tmp/RtmpHYa3FI/file35a585e0b9908\"\n  1686c1686\n  &lt; 1     4     1 a double b      /tmp/Rtmp1Bn1x8/file5a72f71422bac\n  ---\n  &gt; 1     4     1 a double b      /tmp/RtmpHYa3FI/file35a583b893aad\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'readr'\n  Running 'first_edition.R'\n  Running 'second_edition.R'\n  Running 'spelling.R'\n\nedit_log(\"readr\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nreadr-Ex.Rout\n\n\n\n\nfirst_edition.Rout\n\n\n\n\nsecond_edition.Rout\n\n\n\n\nspelling.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_redland.html",
    "href": "packages/test_redland.html",
    "title": "redland",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"redland\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/redland\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/redland/empty_output.Rout\")\nout &lt;- test_pkg(\"redland\", outDir=\"packages/redland\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'redland'\n\n\n  comparing 'redland-Ex.Rout' to 'redland-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'redland'\n  Running 'spelling.R'\n  Running 'test-all.R'\n\nedit_log(\"redland\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nredland-Ex.Rout\n\n\n\n\nspelling.Rout\n\n\n\n\ntest-all.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_rematch2.html",
    "href": "packages/test_rematch2.html",
    "title": "rematch2",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"rematch2\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/rematch2\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/rematch2/empty_output.Rout\")\nout &lt;- test_pkg(\"rematch2\", outDir=\"packages/rematch2\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'rematch2'\n\n\n  comparing 'rematch2-Ex.Rout' to 'rematch2-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'rematch2'\n  Running 'testthat.R'\n\nedit_log(\"rematch2\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nrematch2-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_renv.html",
    "href": "packages/test_renv.html",
    "title": "renv",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"renv\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/renv\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/renv/empty_output.Rout\")\nout &lt;- test_pkg(\"renv\", outDir=\"packages/renv\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'renv'\n\n\n  comparing 'renv-Ex.Rout' to 'renv-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'renv'\n  Running 'testthat.R'\nError: running the tests in 'testthat.R' failed\n\nedit_log(\"renv\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nrenv-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_reshape2.html",
    "href": "packages/test_reshape2.html",
    "title": "reshape2",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"reshape2\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/reshape2\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/reshape2/empty_output.Rout\")\nout &lt;- test_pkg(\"reshape2\", outDir=\"packages/reshape2\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'reshape2'\n\n\n  comparing 'reshape2-Ex.Rout' to 'reshape2-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'reshape2'\n  Running 'testthat.R'\n\nedit_log(\"reshape2\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nreshape2-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_rlang.html",
    "href": "packages/test_rlang.html",
    "title": "rlang",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"rlang\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/rlang\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/rlang/empty_output.Rout\")\nout &lt;- test_pkg(\"rlang\", outDir=\"packages/rlang\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'rlang'\n\n\n  comparing 'rlang-Ex.Rout' to 'rlang-Ex.Rout.prev' ... NOTE\n\n\n  1583c1583\n  &lt; env:  0x5bb53f25cc20\n  ---\n  &gt; env:  0x64b1296fc988\n  1593c1593\n  &lt; env:  0x5bb53f5465c8\n  ---\n  &gt; env:  0x64b1299e0b20\n  2159c2159\n  &lt; [1] \"0x5bb53e993d78\"\n  ---\n  &gt; [1] \"0x64b128e2f4c0\"\n  4332c4332\n  &lt; env:  0x5bb53e4ef858\n  ---\n  &gt; env:  0x64b128969200\n  4389,4390c4389,4390\n  &lt; Ncells  622413 33.3    1287548 68.8  1287548 68.8\n  &lt; Vcells 1130911  8.7    8388608 64.0  1923627 14.7\n  ---\n  &gt; Ncells  622384 33.3    1287542 68.8  1287542 68.8\n  &gt; Vcells 1130853  8.7    8388608 64.0  1923627 14.7\n  4410,4411c4410,4411\n  &lt; Ncells  622413 33.3    1287548 68.8  1287548 68.8\n  &lt; Vcells 1130790  8.7    8388608 64.0  1923627 14.7\n  ---\n  &gt; Ncells  622384 33.3    1287542 68.8  1287542 68.8\n  &gt; Vcells 1130732  8.7    8388608 64.0  1923627 14.7\n  4419,4420c4419,4420\n  &lt; Ncells  622412 33.3    1287548 68.8  1287548 68.8\n  &lt; Vcells 1130790  8.7    8388608 64.0  1923627 14.7\n  ---\n  &gt; Ncells  622383 33.3    1287542 68.8  1287542 68.8\n  &gt; Vcells 1130732  8.7    8388608 64.0  1923627 14.7\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'rlang'\n  Running 'sink.R'\n  Running 'testthat.R'\n\nedit_log(\"rlang\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nrlang-Ex.Rout\n\n\n\n\nsink.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_rms.html",
    "href": "packages/test_rms.html",
    "title": "rms",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"rms\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/rms\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/rms/empty_output.Rout\")\nout &lt;- test_pkg(\"rms\", outDir=\"packages/rms\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'rms'\n\n\nError: running examples in 'rms-Ex.R' failed\n\nedit_log(\"rms\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_rprojroot.html",
    "href": "packages/test_rprojroot.html",
    "title": "rprojroot",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"rprojroot\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/rprojroot\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/rprojroot/empty_output.Rout\")\nout &lt;- test_pkg(\"rprojroot\", outDir=\"packages/rprojroot\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'rprojroot'\n\n\n  comparing 'rprojroot-Ex.Rout' to 'rprojroot-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'rprojroot'\n  Running 'testthat.R'\n\nedit_log(\"rprojroot\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nrprojroot-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_rsconnect.html",
    "href": "packages/test_rsconnect.html",
    "title": "rsconnect",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"rsconnect\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/rsconnect\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/rsconnect/empty_output.Rout\")\nout &lt;- test_pkg(\"rsconnect\", outDir=\"packages/rsconnect\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'rsconnect'\n\n\n  comparing 'rsconnect-Ex.Rout' to 'rsconnect-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'rsconnect'\n  Running 'testthat.R'\n\nedit_log(\"rsconnect\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nrsconnect-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_rstudioapi.html",
    "href": "packages/test_rstudioapi.html",
    "title": "rstudioapi",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"rstudioapi\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/rstudioapi\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/rstudioapi/empty_output.Rout\")\nout &lt;- test_pkg(\"rstudioapi\", outDir=\"packages/rstudioapi\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'rstudioapi'\n\n\n  comparing 'rstudioapi-Ex.Rout' to 'rstudioapi-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"rstudioapi\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nrstudioapi-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_rversions.html",
    "href": "packages/test_rversions.html",
    "title": "rversions",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"rversions\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/rversions\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/rversions/empty_output.Rout\")\nout &lt;- test_pkg(\"rversions\", outDir=\"packages/rversions\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'rversions'\n\n\nError: running examples in 'rversions-Ex.R' failed\n\nedit_log(\"rversions\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_sandwich.html",
    "href": "packages/test_sandwich.html",
    "title": "sandwich",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"sandwich\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/sandwich\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/sandwich/empty_output.Rout\")\nout &lt;- test_pkg(\"sandwich\", outDir=\"packages/sandwich\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'sandwich'\n\n\n  comparing 'sandwich-Ex.Rout' to 'sandwich-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'sandwich'\n  Running 'vcovCL.R'\n  comparing 'vcovCL.Rout' to 'vcovCL.Rout.save' ...  Running 'vcovPC.R'\n  comparing 'vcovPC.Rout' to 'vcovPC.Rout.save' ...  Running 'vcovPL.R'\n  comparing 'vcovPL.Rout' to 'vcovPL.Rout.save' ...\n\nedit_log(\"sandwich\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nsandwich-Ex.Rout\n\n\n\n\nvcovCL.Rout\n\n\n\n\nvcovPC.Rout\n\n\n\n\nvcovPL.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_scales.html",
    "href": "packages/test_scales.html",
    "title": "scales",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"scales\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/scales\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/scales/empty_output.Rout\")\nout &lt;- test_pkg(\"scales\", outDir=\"packages/scales\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'scales'\n\n\n  comparing 'scales-Ex.Rout' to 'scales-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'scales'\n  Running 'testthat.R'\n\nedit_log(\"scales\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nscales-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_semEff.html",
    "href": "packages/test_semEff.html",
    "title": "semEff",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"semEff\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/semEff\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/semEff/empty_output.Rout\")\nout &lt;- test_pkg(\"semEff\", outDir=\"packages/semEff\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'semEff'\n\n\n  comparing 'semEff-Ex.Rout' to 'semEff-Ex.Rout.prev' ... NOTE\n\n\n  223,224c223,224\n  &lt; t1* -0.05600661 -0.11885942          NA\n  &lt; t2* -0.68772025  0.08243782          NA\n  ---\n  &gt; t1* -0.05600661  0.003732044          NA\n  &gt; t2* -0.68772025 -0.075295924          NA\n  238,239c238,239\n  &lt; t1* -0.01493651  0.041548031          NA\n  &lt; t2* -0.62813666 -0.008831471          NA\n  ---\n  &gt; t1* -0.01493651  0.05641156          NA\n  &gt; t2* -0.62813666 -0.05383798          NA\n  253,254c253,254\n  &lt; t1* -0.2917507 -0.10912618          NA\n  &lt; t2*  0.3824224  0.04228055          NA\n  ---\n  &gt; t1* -0.2917507 0.20883147          NA\n  &gt; t2*  0.3824224 0.07562711          NA\n  268,269c268,269\n  &lt; t1* 0.3105220 0.4498886          NA\n  &lt; t2* 0.3681961 0.2768170          NA\n  ---\n  &gt; t1* 0.3105220 0.06072720          NA\n  &gt; t2* 0.3681961 0.02709685          NA\n\n\nchecks for tests\n\nedit_log(\"semEff\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nsemEff-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_sessioninfo.html",
    "href": "packages/test_sessioninfo.html",
    "title": "sessioninfo",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"sessioninfo\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/sessioninfo\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/sessioninfo/empty_output.Rout\")\nout &lt;- test_pkg(\"sessioninfo\", outDir=\"packages/sessioninfo\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'sessioninfo'\n\n\n  comparing 'sessioninfo-Ex.Rout' to 'sessioninfo-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'sessioninfo'\n  Running 'testthat.R'\nError: running the tests in 'testthat.R' failed\n\nedit_log(\"sessioninfo\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nsessioninfo-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_shape.html",
    "href": "packages/test_shape.html",
    "title": "shape",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"shape\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/shape\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/shape/empty_output.Rout\")\nout &lt;- test_pkg(\"shape\", outDir=\"packages/shape\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'shape'\n\n\n  comparing 'shape-Ex.Rout' to 'shape-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"shape\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nshape-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_sourcetools.html",
    "href": "packages/test_sourcetools.html",
    "title": "sourcetools",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"sourcetools\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/sourcetools\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/sourcetools/empty_output.Rout\")\nout &lt;- test_pkg(\"sourcetools\", outDir=\"packages/sourcetools\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'sourcetools'\n\n\n  comparing 'sourcetools-Ex.Rout' to 'sourcetools-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'sourcetools'\n  Running 'testthat.R'\n\nedit_log(\"sourcetools\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nsourcetools-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_sparkline.html",
    "href": "packages/test_sparkline.html",
    "title": "sparkline",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"sparkline\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/sparkline\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/sparkline/empty_output.Rout\")\nout &lt;- test_pkg(\"sparkline\", outDir=\"packages/sparkline\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'sparkline'\n\n\n  comparing 'sparkline-Ex.Rout' to 'sparkline-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"sparkline\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nsparkline-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_statmod.html",
    "href": "packages/test_statmod.html",
    "title": "statmod",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"statmod\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/statmod\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/statmod/empty_output.Rout\")\nout &lt;- test_pkg(\"statmod\", outDir=\"packages/statmod\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'statmod'\n\n\n  comparing 'statmod-Ex.Rout' to 'statmod-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'statmod'\n  Running 'statmod-Tests.R'\n  comparing 'statmod-Tests.Rout' to 'statmod-Tests.Rout.save' ... OK\n\nedit_log(\"statmod\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nstatmod-Ex.Rout\n\n\n\n\nstatmod-Tests.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_stringr.html",
    "href": "packages/test_stringr.html",
    "title": "stringr",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"stringr\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/stringr\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/stringr/empty_output.Rout\")\nout &lt;- test_pkg(\"stringr\", outDir=\"packages/stringr\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'stringr'\n\n\n  comparing 'stringr-Ex.Rout' to 'stringr-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'stringr'\n  Running 'testthat.R'\n\nedit_log(\"stringr\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nstringr-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_sys.html",
    "href": "packages/test_sys.html",
    "title": "sys",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"sys\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/sys\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/sys/empty_output.Rout\")\nout &lt;- test_pkg(\"sys\", outDir=\"packages/sys\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'sys'\n\n\n  comparing 'sys-Ex.Rout' to 'sys-Ex.Rout.prev' ... NOTE\n\n\n  18c18\n  &lt; Thu Nov 21 07:46:39 PM GMT 2024\n  ---\n  &gt; Thu Nov 21 03:59:41 PM GMT 2024\n  25c25\n  &lt; Thu Nov 21 07:46:39 PM GMT 2024&gt; \n  ---\n  &gt; Thu Nov 21 03:59:41 PM GMT 2024&gt; \n  124c124\n  &lt; [1] 0.009935753\n  ---\n  &gt; [1] -0.1463568\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'sys'\n  Running 'spelling.R'\n  Running 'testthat.R'\n\nedit_log(\"sys\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nsys-Ex.Rout\n\n\n\n\nspelling.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_tensorA.html",
    "href": "packages/test_tensorA.html",
    "title": "tensorA",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"tensorA\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/tensorA\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/tensorA/empty_output.Rout\")\nout &lt;- test_pkg(\"tensorA\", outDir=\"packages/tensorA\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'tensorA'\n\n\n  comparing 'tensorA-Ex.Rout' to 'tensorA-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'tensorA'\n  Running 'checker.R'\n  Running 'examples.R'\n\nedit_log(\"tensorA\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ntensorA-Ex.Rout\n\n\n\n\nchecker.Rout\n\n\n\n\nexamples.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_testthat.html",
    "href": "packages/test_testthat.html",
    "title": "testthat",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"testthat\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/testthat\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/testthat/empty_output.Rout\")\nout &lt;- test_pkg(\"testthat\", outDir=\"packages/testthat\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'testthat'\n\n\n  comparing 'testthat-Ex.Rout' to 'testthat-Ex.Rout.prev' ... NOTE\n\n\n  775c775\n  &lt; [1] \"/tmp/RtmpYDSLEP/file5e06a711fea54.png\"\n  ---\n  &gt; [1] \"/tmp/RtmpSaA9Qc/file3c6be1ff3a2fc.png\"\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'testthat'\n  Running 'test-catch.R'\n  Running 'testthat.R'\n\nedit_log(\"testthat\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat-Ex.Rout\n\n\n\n\ntest-catch.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_tibble.html",
    "href": "packages/test_tibble.html",
    "title": "tibble",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"tibble\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/tibble\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/tibble/empty_output.Rout\")\nout &lt;- test_pkg(\"tibble\", outDir=\"packages/tibble\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'tibble'\n\n\n  comparing 'tibble-Ex.Rout' to 'tibble-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'tibble'\n  Running 'testthat.R'\n\nedit_log(\"tibble\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ntibble-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_tidyselect.html",
    "href": "packages/test_tidyselect.html",
    "title": "tidyselect",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"tidyselect\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/tidyselect\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/tidyselect/empty_output.Rout\")\nout &lt;- test_pkg(\"tidyselect\", outDir=\"packages/tidyselect\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'tidyselect'\n\n\n  comparing 'tidyselect-Ex.Rout' to 'tidyselect-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'tidyselect'\n  Running 'testthat.R'\n\nedit_log(\"tidyselect\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ntidyselect-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_timechange.html",
    "href": "packages/test_timechange.html",
    "title": "timechange",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"timechange\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/timechange\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/timechange/empty_output.Rout\")\nout &lt;- test_pkg(\"timechange\", outDir=\"packages/timechange\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'timechange'\n\n\n  comparing 'timechange-Ex.Rout' to 'timechange-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'timechange'\n  Running 'testthat.R'\n\nedit_log(\"timechange\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ntimechange-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_tufte.html",
    "href": "packages/test_tufte.html",
    "title": "tufte",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"tufte\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/tufte\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/tufte/empty_output.Rout\")\nout &lt;- test_pkg(\"tufte\", outDir=\"packages/tufte\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'tufte'\n\n\n  comparing 'tufte-Ex.Rout' to 'tufte-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'tufte'\n  Running 'testthat.R'\n\nedit_log(\"tufte\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ntufte-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_ucminf.html",
    "href": "packages/test_ucminf.html",
    "title": "ucminf",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"ucminf\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/ucminf\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/ucminf/empty_output.Rout\")\nout &lt;- test_pkg(\"ucminf\", outDir=\"packages/ucminf\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'ucminf'\n\n\n  comparing 'ucminf-Ex.Rout' to 'ucminf-Ex.Rout.prev' ... OK\nchecks for tests\n\nedit_log(\"ucminf\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nucminf-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_usethis.html",
    "href": "packages/test_usethis.html",
    "title": "usethis",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"usethis\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/usethis\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/usethis/empty_output.Rout\")\nout &lt;- test_pkg(\"usethis\", outDir=\"packages/usethis\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'usethis'\n\n\n  comparing 'usethis-Ex.Rout' to 'usethis-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'usethis'\n  Running 'spelling.R'\n  Running 'testthat.R'\n\nedit_log(\"usethis\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nusethis-Ex.Rout\n\n\n\n\nspelling.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_uuid.html",
    "href": "packages/test_uuid.html",
    "title": "uuid",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"uuid\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/uuid\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/uuid/empty_output.Rout\")\nout &lt;- test_pkg(\"uuid\", outDir=\"packages/uuid\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'uuid'\n\n\n  comparing 'uuid-Ex.Rout' to 'uuid-Ex.Rout.prev' ... NOTE\n\n\n  23,25c23,25\n  &lt; [3] \"efcec7da-f069-40a6-a2db-03fed046ac3e\"\n  &lt; [4] \"81df4d37-5f0e-4e72-a847-a3034953b52c\"\n  &lt; [5] \"f2e0f25b-3c42-4f55-b04e-16d4dabbf224\"\n  ---\n  &gt; [3] \"b1a5a54b-e331-4fe8-a987-9abec6d09fe4\"\n  &gt; [4] \"679439cc-6b6c-4faf-8c09-9c014589cb79\"\n  &gt; [5] \"0d704c33-d05f-4c7c-b424-09327102af34\"\n  59c59\n  &lt; [1] \"a66f473a-b036-4e4e-a0ca-60566b842cde\"\n  ---\n  &gt; [1] \"a9fbce38-d7dc-4a7e-914c-dc842566529f\"\n  61c61\n  &lt; [1] \"943a4ade-a8af-11ef-9c44-0242ac120002\"\n  ---\n  &gt; [1] \"fd22d364-a822-11ef-b559-0242ac120002\"\n  63c63\n  &lt; [1] \"1312ce44-c116-440b-9b76-612302fcefec\"\n  ---\n  &gt; [1] \"17cb57f0-7312-4cc3-9f1f-d50f405665a6\"\n  72,74c72,74\n  &lt; [1] \"0e380948-b842-42fe-96b6-f8be2b202107\"\n  &lt; [2] \"91f4c2c3-6333-4339-ba49-af0b516caf09\"\n  &lt; [3] \"1b6aa858-f6c0-4d3d-8a8b-e39bb40c088b\"\n  ---\n  &gt; [1] \"7422ff4c-05fd-4861-8252-7aafbd50a009\"\n  &gt; [2] \"c853d46c-a6cb-4703-b1de-e32216b6d3ad\"\n  &gt; [3] \"7b9454c9-dcc7-4d26-b1cf-5ff472c47cdb\"\n  77,79c77,79\n  &lt; [1] \"0e380948-b842-42fe-96b6-f8be2b202107\"\n  &lt; [2] \"91f4c2c3-6333-4339-ba49-af0b516caf09\"\n  &lt; [3] \"1b6aa858-f6c0-4d3d-8a8b-e39bb40c088b\"\n  ---\n  &gt; [1] \"7422ff4c-05fd-4861-8252-7aafbd50a009\"\n  &gt; [2] \"c853d46c-a6cb-4703-b1de-e32216b6d3ad\"\n  &gt; [3] \"7b9454c9-dcc7-4d26-b1cf-5ff472c47cdb\"\n  81c81\n  &lt;  [1] 0e 38 09 48 b8 42 42 fe 96 b6 f8 be 2b 20 21 07\n  ---\n  &gt;  [1] 74 22 ff 4c 05 fd 48 61 82 52 7a af bd 50 a0 09\n  84c84\n  &lt;  [1] 8e bd 45 72 6c 59 49 6e 9b 5c 10 f9 17 bf df 3c\n  ---\n  &gt;  [1] e6 7b 8f 9d 93 07 45 34 a6 39 30 c4 6b df b3 6d\n\n\nchecks for tests\n\nedit_log(\"uuid\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nuuid-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_vdiffr.html",
    "href": "packages/test_vdiffr.html",
    "title": "vdiffr",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"vdiffr\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/vdiffr\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/vdiffr/empty_output.Rout\")\nout &lt;- test_pkg(\"vdiffr\", outDir=\"packages/vdiffr\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'vdiffr'\n\n\n  comparing 'vdiffr-Ex.Rout' to 'vdiffr-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'vdiffr'\n  Running 'testthat.R'\n\nedit_log(\"vdiffr\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nvdiffr-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_viridisLite.html",
    "href": "packages/test_viridisLite.html",
    "title": "viridisLite",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"viridisLite\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/viridisLite\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/viridisLite/empty_output.Rout\")\nout &lt;- test_pkg(\"viridisLite\", outDir=\"packages/viridisLite\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'viridisLite'\n\n\nError: running examples in 'viridisLite-Ex.R' failed\n\nedit_log(\"viridisLite\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_vroom.html",
    "href": "packages/test_vroom.html",
    "title": "vroom",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"vroom\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/vroom\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/vroom/empty_output.Rout\")\nout &lt;- test_pkg(\"vroom\", outDir=\"packages/vroom\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'vroom'\n\n\n  comparing 'vroom-Ex.Rout' to 'vroom-Ex.Rout.prev' ... NOTE\n\n\n  368c368\n  &lt; [1] \"2024-11-22\"\n  ---\n  &gt; [1] \"2024-11-21\"\n  370c370\n  &lt; [1] \"2024-11-22T09:00:58Z\"\n  ---\n  &gt; [1] \"2024-11-21T16:13:49Z\"\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'vroom'\n  Running 'spelling.R'\n  Running 'testthat.R'\n\nedit_log(\"vroom\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nvroom-Ex.Rout\n\n\n\n\nspelling.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_webshot.html",
    "href": "packages/test_webshot.html",
    "title": "webshot",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"webshot\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/webshot\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/webshot/empty_output.Rout\")\nout &lt;- test_pkg(\"webshot\", outDir=\"packages/webshot\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'webshot'\n\n\n  comparing 'webshot-Ex.Rout' to 'webshot-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'webshot'\n  Running 'testthat.R'\n\nedit_log(\"webshot\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nwebshot-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_websocket.html",
    "href": "packages/test_websocket.html",
    "title": "websocket",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"websocket\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/websocket\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/websocket/empty_output.Rout\")\nout &lt;- test_pkg(\"websocket\", outDir=\"packages/websocket\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'websocket'\n\n\n  comparing 'websocket-Ex.Rout' to 'websocket-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'websocket'\n  Running 'testthat.R'\n\nedit_log(\"websocket\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nwebsocket-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_whoami.html",
    "href": "packages/test_whoami.html",
    "title": "whoami",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"whoami\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/whoami\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/whoami/empty_output.Rout\")\nout &lt;- test_pkg(\"whoami\", outDir=\"packages/whoami\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'whoami'\n\n\n  comparing 'whoami-Ex.Rout' to 'whoami-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'whoami'\n  Running 'testthat.R'\nError: running the tests in 'testthat.R' failed\n\nedit_log(\"whoami\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nwhoami-Ex.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_writexl.html",
    "href": "packages/test_writexl.html",
    "title": "writexl",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"writexl\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/writexl\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/writexl/empty_output.Rout\")\nout &lt;- test_pkg(\"writexl\", outDir=\"packages/writexl\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'writexl'\n\n\n  comparing 'writexl-Ex.Rout' to 'writexl-Ex.Rout.prev' ... OK\nchecks for tests\nDOing the tests\nRunning specific tests for package 'writexl'\n  Running 'spelling.R'\n  Running 'testthat.R'\n\nedit_log(\"writexl\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nwritexl-Ex.Rout\n\n\n\n\nspelling.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_xfun.html",
    "href": "packages/test_xfun.html",
    "title": "xfun",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"xfun\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/xfun\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/xfun/empty_output.Rout\")\nout &lt;- test_pkg(\"xfun\", outDir=\"packages/xfun\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'xfun'\n\n\n  comparing 'xfun-Ex.Rout' to 'xfun-Ex.Rout.prev' ... NOTE\n\n\n  415c415\n  &lt; Today's date is 2024-11-22\n  ---\n  &gt; Today's date is 2024-11-21\n  808,809c808,809\n  &lt; [1] \"/tmp/RtmpcHPV3Q\"\n  &lt; [1] \"file39de20714d38\"\n  ---\n  &gt; [1] \"/tmp/RtmphDhObj\"\n  &gt; [1] \"file4159423e932b6\"\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'xfun'\n  Running 'test-ci.R'\n  Running 'test-cran.R'\n\nedit_log(\"xfun\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nxfun-Ex.Rout\n\n\n\n\ntest-ci.Rout\n\n\n\n\ntest-cran.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_xopen.html",
    "href": "packages/test_xopen.html",
    "title": "xopen",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"xopen\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/xopen\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/xopen/empty_output.Rout\")\nout &lt;- test_pkg(\"xopen\", outDir=\"packages/xopen\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'xopen'\n\n\nWarning: no examples found for package 'xopen'\n\n\nchecks for tests\n\n\nDOing the tests\n\n\nRunning specific tests for package 'xopen'\n\n\n  Running 'testthat.R'\n\nedit_log(\"xopen\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_xtable.html",
    "href": "packages/test_xtable.html",
    "title": "xtable",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"xtable\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/xtable\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/xtable/empty_output.Rout\")\nout &lt;- test_pkg(\"xtable\", outDir=\"packages/xtable\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'xtable'\n\n\n  comparing 'xtable-Ex.Rout' to 'xtable-Ex.Rout.prev' ... NOTE\n\n\n  53c53\n  &lt; % Fri Nov 22 09:09:06 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  99c99\n  &lt; % Fri Nov 22 09:09:06 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  177c177\n  &lt; % Fri Nov 22 09:09:06 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  199c199\n  &lt; % Fri Nov 22 09:09:06 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  423c423\n  &lt; % Fri Nov 22 09:09:06 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  455c455\n  &lt; &lt;!-- Fri Nov 22 09:09:06 2024 --&gt;\n  ---\n  &gt; &lt;!-- Thu Nov 21 16:20:00 2024 --&gt;\n  481c481\n  &lt; % Fri Nov 22 09:09:06 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  525c525\n  &lt; % Fri Nov 22 09:09:06 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  574c574\n  &lt; % Fri Nov 22 09:09:06 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  606c606\n  &lt; &lt;!-- Fri Nov 22 09:09:06 2024 --&gt;\n  ---\n  &gt; &lt;!-- Thu Nov 21 16:20:00 2024 --&gt;\n  636c636\n  &lt; % Fri Nov 22 09:09:06 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  668c668\n  &lt; &lt;!-- Fri Nov 22 09:09:06 2024 --&gt;\n  ---\n  &gt; &lt;!-- Thu Nov 21 16:20:00 2024 --&gt;\n  698c698\n  &lt; % Fri Nov 22 09:09:06 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  715c715\n  &lt; &lt;!-- Fri Nov 22 09:09:06 2024 --&gt;\n  ---\n  &gt; &lt;!-- Thu Nov 21 16:20:00 2024 --&gt;\n  730c730\n  &lt; % Fri Nov 22 09:09:06 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  749c749\n  &lt; &lt;!-- Fri Nov 22 09:09:06 2024 --&gt;\n  ---\n  &gt; &lt;!-- Thu Nov 21 16:20:00 2024 --&gt;\n  762c762\n  &lt; % Fri Nov 22 09:09:06 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  778c778\n  &lt; &lt;!-- Fri Nov 22 09:09:06 2024 --&gt;\n  ---\n  &gt; &lt;!-- Thu Nov 21 16:20:00 2024 --&gt;\n  789c789\n  &lt; % Fri Nov 22 09:09:06 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  803c803\n  &lt; &lt;!-- Fri Nov 22 09:09:06 2024 --&gt;\n  ---\n  &gt; &lt;!-- Thu Nov 21 16:20:00 2024 --&gt;\n  815c815\n  &lt; % Fri Nov 22 09:09:07 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  835c835\n  &lt; &lt;!-- Fri Nov 22 09:09:07 2024 --&gt;\n  ---\n  &gt; &lt;!-- Thu Nov 21 16:20:00 2024 --&gt;\n  849c849\n  &lt; % Fri Nov 22 09:09:07 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  865c865\n  &lt; &lt;!-- Fri Nov 22 09:09:07 2024 --&gt;\n  ---\n  &gt; &lt;!-- Thu Nov 21 16:20:00 2024 --&gt;\n  903c903\n  &lt; % Fri Nov 22 09:09:07 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  923c923\n  &lt; % Fri Nov 22 09:09:07 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  943c943\n  &lt; % Fri Nov 22 09:09:07 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  982c982\n  &lt; &lt;!-- Fri Nov 22 09:09:07 2024 --&gt;\n  ---\n  &gt; &lt;!-- Thu Nov 21 16:20:00 2024 --&gt;\n  997c997\n  &lt; &lt;!-- Fri Nov 22 09:09:07 2024 --&gt;\n  ---\n  &gt; &lt;!-- Thu Nov 21 16:20:00 2024 --&gt;\n  1022c1022\n  &lt; % Fri Nov 22 09:09:07 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  1036c1036\n  &lt; % Fri Nov 22 09:09:07 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  1060c1060\n  &lt; % Fri Nov 22 09:09:07 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  1077c1077\n  &lt; % Fri Nov 22 09:09:07 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  1094c1094\n  &lt; % Fri Nov 22 09:09:07 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  1117c1117\n  &lt; % Fri Nov 22 09:09:07 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  1140c1140\n  &lt; % Fri Nov 22 09:09:07 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  1254c1254\n  &lt; % Fri Nov 22 09:09:07 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  1301c1301\n  &lt; % Fri Nov 22 09:09:07 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  1358c1358\n  &lt; % Fri Nov 22 09:09:07 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  1373c1373\n  &lt; % Fri Nov 22 09:09:07 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  1402c1402\n  &lt; % Fri Nov 22 09:09:07 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  1460c1460\n  &lt; % Fri Nov 22 09:09:07 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  1475c1475\n  &lt; % Fri Nov 22 09:09:07 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  1507c1507\n  &lt; % Fri Nov 22 09:09:07 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  1538c1538\n  &lt; % Fri Nov 22 09:09:07 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  1568c1568\n  &lt; % Fri Nov 22 09:09:07 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  1602c1602\n  &lt; % Fri Nov 22 09:09:07 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  1634c1634\n  &lt; % Fri Nov 22 09:09:07 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  1665c1665\n  &lt; % Fri Nov 22 09:09:07 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  1695c1695\n  &lt; % Fri Nov 22 09:09:07 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  1731c1731\n  &lt; % Fri Nov 22 09:09:07 2024\n  ---\n  &gt; % Thu Nov 21 16:20:00 2024\n  1846c1846\n  &lt; % Fri Nov 22 09:09:08 2024\n  ---\n  &gt; % Thu Nov 21 16:20:01 2024\n  1867c1867\n  &lt; % Fri Nov 22 09:09:08 2024\n  ---\n  &gt; % Thu Nov 21 16:20:01 2024\n  1910c1910\n  &lt; % Fri Nov 22 09:09:08 2024\n  ---\n  &gt; % Thu Nov 21 16:20:01 2024\n  1962c1962\n  &lt; % Fri Nov 22 09:09:08 2024\n  ---\n  &gt; % Thu Nov 21 16:20:01 2024\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'xtable'\n  Running 'test.margintable.R'\n  Running 'test.matharray.R'\n  Running 'test.xalign.xdigits.xdisplay.R'\n  Running 'test.xtable.data.frame.R'\n  Running 'test.xtable.R'\n  Running 'test.xtable.xtableFtable.R'\n\nedit_log(\"xtable\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nxtable-Ex.Rout\n\n\n\n\ntest.margintable.Rout\n\n\n\n\ntest.matharray.Rout\n\n\n\n\ntest.xalign.xdigits.xdisplay.Rout\n\n\n\n\ntest.xtable.Rout\n\n\n\n\ntest.xtable.data.frame.Rout\n\n\n\n\ntest.xtable.xtableFtable.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "packages/test_zip.html",
    "href": "packages/test_zip.html",
    "title": "zip",
    "section": "",
    "text": "source(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl &lt;- download.packages(\"zip\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/zip\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/zip/empty_output.Rout\")\nout &lt;- test_pkg(\"zip\", outDir=\"packages/zip\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n\nTesting examples for package 'zip'\n\n\n  comparing 'zip-Ex.Rout' to 'zip-Ex.Rout.prev' ... NOTE\n\n\n  87,89c87,89\n  &lt; 1      mydir/               0                 0 2024-11-22 09:09:50         755\n  &lt; 2 mydir/file1              15                10 2024-11-22 09:09:50         644\n  &lt; 3 mydir/file2              16                11 2024-11-22 09:09:50         644\n  ---\n  &gt; 1      mydir/               0                 0 2024-11-21 16:20:32         755\n  &gt; 2 mydir/file1              15                10 2024-11-21 16:20:32         644\n  &gt; 3 mydir/file2              16                11 2024-11-21 16:20:32         644\n  151,153c151,153\n  &lt; 1      mydir/               0                 0 2024-11-22 09:09:50         755\n  &lt; 2 mydir/file1              15                10 2024-11-22 09:09:50         644\n  &lt; 3 mydir/file2              16                11 2024-11-22 09:09:50         644\n  ---\n  &gt; 1      mydir/               0                 0 2024-11-21 16:20:32         755\n  &gt; 2 mydir/file1              15                10 2024-11-21 16:20:32         644\n  &gt; 3 mydir/file2              16                11 2024-11-21 16:20:32         644\n  164,167c164,167\n  &lt; 1      mydir/               0                 0 2024-11-22 09:09:50         644\n  &lt; 2 mydir/file1              15                10 2024-11-22 09:09:50         644\n  &lt; 3 mydir/file2              16                11 2024-11-22 09:09:50         644\n  &lt; 4 mydir/file3              15                10 2024-11-22 09:09:50         600\n  ---\n  &gt; 1      mydir/               0                 0 2024-11-21 16:20:32         644\n  &gt; 2 mydir/file1              15                10 2024-11-21 16:20:32         644\n  &gt; 3 mydir/file2              16                11 2024-11-21 16:20:32         644\n  &gt; 4 mydir/file3              15                10 2024-11-21 16:20:32         600\n  197,198c197,198\n  &lt; 1         file3e222020abed/               0                 0\n  &lt; 2 file3e222020abed/iris.ssv            1126              4818\n  ---\n  &gt; 1         file419e42b299978/               0                 0\n  &gt; 2 file419e42b299978/iris.ssv            1126              4818\n  200,201c200,201\n  &lt; 1 2024-11-22 09:09:50         755 00000000      0\n  &lt; 2 2024-11-22 09:09:50         644 474bc924     47\n  ---\n  &gt; 1 2024-11-21 16:20:32         755 00000000      0\n  &gt; 2 2024-11-21 16:20:32         644 474bc924     48\n\n\nchecks for tests\nDOing the tests\nRunning specific tests for package 'zip'\n  Running 'testthat.R'\n\nedit_log(\"zip\", out)\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nempty_output.Rout\n\n\n\n\nzip-Ex.Rout\n\n\n\n\ntestthat.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "test_base.html",
    "href": "test_base.html",
    "title": "Base Tests",
    "section": "",
    "text": "R code\nThis follows the recipe in the manual for basic R validation. The tests have to be run in the R_home directory. This directory is then copied across into this project folder. The output files created are listed in the next section\n\nsource(\"edit_log.R\")\nbase_dir &lt;- file.path(R.home(), \"tests\",\"base_tests\")\nunlink(base_dir,recursive = TRUE)\ndir.create(base_dir)\nSys.setenv(LC_COLLATE = \"C\", LC_TIME=\"C\", LANGUAGE = \"en\")\nsuccess_basic &lt;- tools::testInstalledBasic(\"all\")\n\nrunning strict specific tests\n\n\n  running code in 'eval-etc.R'\n\n\n  comparing 'eval-etc.Rout' to 'eval-etc.Rout.save' ... OK\n  running code in 'simple-true.R'\n  comparing 'simple-true.Rout' to 'simple-true.Rout.save' ... OK\n  running code in 'arith-true.R'\n  comparing 'arith-true.Rout' to 'arith-true.Rout.save' ... OK\n  running code in 'lm-tests.R'\n  comparing 'lm-tests.Rout' to 'lm-tests.Rout.save' ... OK\n  running code in 'ok-errors.R'\n  comparing 'ok-errors.Rout' to 'ok-errors.Rout.save' ... OK\n  running code in 'method-dispatch.R'\n  comparing 'method-dispatch.Rout' to 'method-dispatch.Rout.save' ... OK\n  running code in 'array-subset.R'\n  running code in 'p-r-random-tests.R'\n  comparing 'p-r-random-tests.Rout' to 'p-r-random-tests.Rout.save' ... OK\n  running code in 'd-p-q-r-tst-2.R'\n  running code in 'any-all.R'\n  comparing 'any-all.Rout' to 'any-all.Rout.save' ... OK\n  running code in 'structure.R'\n  comparing 'structure.Rout' to 'structure.Rout.save' ... OK\n  running code in 'd-p-q-r-tests.R'\n  comparing 'd-p-q-r-tests.Rout' to 'd-p-q-r-tests.Rout.save' ... OK\nrunning sloppy specific tests\n  running code in 'complex.R'\n  comparing 'complex.Rout' to 'complex.Rout.save' ... OK\n  running code in 'print-tests.R'\n  comparing 'print-tests.Rout' to 'print-tests.Rout.save' ... OK\n  running code in 'lapack.R'\n  comparing 'lapack.Rout' to 'lapack.Rout.save' ... OK\n  running code in 'datasets.R'\n  comparing 'datasets.Rout' to 'datasets.Rout.save' ... OK\n  running code in 'datetime.R'\n  comparing 'datetime.Rout' to 'datetime.Rout.save' ... OK\n  running code in 'iec60559.R'\n  comparing 'iec60559.Rout' to 'iec60559.Rout.save' ... OK\nrunning regression tests\n  running code in 'reg-tests-1a.R'\n  running code in 'reg-tests-1b.R'\n  running code in 'reg-tests-1c.R'\n  running code in 'reg-tests-2.R'\n  comparing 'reg-tests-2.Rout' to 'reg-tests-2.Rout.save' ... OK\n  running code in 'reg-tests-1d.R'\n  running code in 'reg-tests-1e.R'\n  running code in 'reg-examples1.R'\n  running code in 'reg-examples2.R'\n  running code in 'reg-packages.R'\n  running code in 'reg-S4-examples.R'\n  running code in 'classes-methods.R'\n  running code in 'datetime3.R'\n  running code in 'p-qbeta-strict-tst.R'\n  running code in 'reg-IO.R'\n  comparing 'reg-IO.Rout' to 'reg-IO.Rout.save' ... OK\n  running code in 'reg-IO2.R'\n  comparing 'reg-IO2.Rout' to 'reg-IO2.Rout.save' ... OK\n  running code in 'reg-plot.R'\n  comparing 'reg-plot.pdf' to 'reg-plot.pdf.save' ...OK\n  running code in 'reg-S4.R'\n  comparing 'reg-S4.Rout' to 'reg-S4.Rout.save' ... OK\n  running code in 'reg-BLAS.R'\n  running code in 'reg-translation.R'\n  running code in 'reg-tests-3.R'\n  comparing 'reg-tests-3.Rout' to 'reg-tests-3.Rout.save' ... OK\n  running code in 'reg-examples3.R'\n  comparing 'reg-examples3.Rout' to 'reg-examples3.Rout.save' ... OK\nrunning tests of plotting Latin-1\n  expect failure or some differences if not in a Latin or UTF-8 locale\n  running code in 'reg-plot-latin1.R'\n  comparing 'reg-plot-latin1.pdf' to 'reg-plot-latin1.pdf.save' ...OK\nrunning tests of date-time printing\n expect platform-specific differences\n  running code in 'datetime2.R'\n  comparing 'datetime2.Rout' to 'datetime2.Rout.save' ...  running code in 'datetime4.R'\n  comparing 'datetime4.Rout' to 'datetime4.Rout.save' ...  running code in 'datetime5.R'\n  comparing 'datetime5.Rout' to 'datetime5.Rout.save' ... OK\nrunning tests of consistency of as/is.*\ncreating 'isas-tests.R'\n  running code in 'isas-tests.R'\n  comparing 'isas-tests.Rout' to 'isas-tests.Rout.save' ... OK\nrunning tests of random deviate generation (should no longer ever fail)\n  running code in 'p-r-random-tests.R'\n  comparing 'p-r-random-tests.Rout' to 'p-r-random-tests.Rout.save' ... OK\nrunning miscellanous strict devel checks\n  running code in 'misc-devel.R'\nrunning tests demos from base and stats\n  running code in 'demos.R'\n  comparing 'demos.Rout' to 'demos.Rout.save' ... OK\n  running code in 'demos2.R'\nrunning tests of primitives\n  running code in 'primitives.R'\nrunning regexp regression tests\n  running code in 'utf8-regex.R'\n  running code in 'PCRE.R'\nrunning tests on encodings & iconv() - first with C, then current locale\n  running code in 'iconv.R'\n  running code in 'iconv.R'\nrunning tests of CRAN tools\n  running code in 'CRANtools.R'\nrunning tests to possibly trigger segfaults\ncreating 'no-segfault.R'\n  running code in 'no-segfault.R'\nrunning tests of Internet functions\n  running code in 'internet.R'\n  comparing 'internet.Rout' to 'internet.Rout.save' ... OK\nrunning more Internet and socket tests\n  running code in 'internet2.R'\n  running code in 'libcurl.R'\n\nedit_log(\"basic\",success_basic)\n#success_internet &lt;- tools::testInstalledBasic(\"internet\")\nsuccess_base_packages &lt;- tools::testInstalledPackages(scope = \"base\", \n                                             outDir =base_dir,\n                                             errorsAreFatal=TRUE)\n\nTesting examples for package 'base'\nTesting examples for package 'tools'\n  comparing 'tools-Ex.Rout' to 'tools-Ex.Rout.save' ... OK\nRunning specific tests for package 'tools'\n  Running 'QC.R'\n  Running 'Rd2HTML.R'\n  Running 'Rd.R'\n  Running 'S3.R'\n  Running 'undoc.R'\nTesting examples for package 'utils'\nRunning specific tests for package 'utils'\n  Running 'charclass.R'\n  Running 'completion.R'\n  Running 'relist.R'\n  Running 'Sweave-tst.R'\nRunning vignettes for package 'utils'\n  Running 'Sweave.Rnw'\nTesting examples for package 'grDevices'\n  comparing 'grDevices-Ex.Rout' to 'grDevices-Ex.Rout.save' ... OK\nRunning specific tests for package 'grDevices'\n  Running 'convertColor-tests.R'\n  Running 'encodings2.R'\n  comparing 'encodings2.Rout' to 'encodings2.Rout.save' ... OK\n  Running 'encodings3.R'\n  comparing 'encodings3.Rout' to 'encodings3.Rout.save' ... OK\n  Running 'encodings.R'\n  comparing 'encodings.Rout' to 'encodings.Rout.save' ... OK\n  Running 'grDev-tsts.R'\n  Running 'palettes-tests.R'\n  Running 'ps-tests.R'\n  comparing 'ps-tests.Rout' to 'ps-tests.Rout.save' ... OK\n  Running 'saved-recordPlot.R'\n  Running 'urw-fonts.R'\n  Running 'zzcheck-encodings.R'\nTesting examples for package 'graphics'\n  comparing 'graphics-Ex.Rout' to 'graphics-Ex.Rout.save' ... OK\nTesting examples for package 'stats'\n  comparing 'stats-Ex.Rout' to 'stats-Ex.Rout.save' ... OK\nRunning specific tests for package 'stats'\n  Running 'arimaML.R'\n  Running 'bandwidth.R'\n  comparing 'bandwidth.Rout' to 'bandwidth.Rout.save' ... OK\n  Running 'cmdscale.R'\n  Running 'density_chk.R'\n  Running 'dpq-xtra.R'\n  Running 'drop1-polr.R'\n  Running 'glm-etc.R'\n  Running 'glm.R'\n  comparing 'glm.Rout' to 'glm.Rout.save' ... OK\n  Running 'ig_glm.R'\n  Running 'ks-test.R'\n  comparing 'ks-test.Rout' to 'ks-test.Rout.save' ... OK\n  Running 'nafns.R'\n  Running 'nlm.R'\n  Running 'nls.R'\n  comparing 'nls.Rout' to 'nls.Rout.save' ... OK\n  Running 'NLSstClosest.R'\n  Running 'offsets.R'\n  Running 'ppr.R'\n  Running 'psmirnov.R'\n  comparing 'psmirnov.Rout' to 'psmirnov.Rout.save' ... OK\n  Running 'simulate.R'\n  comparing 'simulate.Rout' to 'simulate.Rout.save' ... OK\n  Running 'smooth.spline.R'\n  Running 'table-margins.R'\n  Running 'ts-tests.R'\nRunning vignettes for package 'stats'\n  Running 'reshape.Rnw'\nTesting examples for package 'datasets'\n  comparing 'datasets-Ex.Rout' to 'datasets-Ex.Rout.save' ... OK\nTesting examples for package 'methods'\nRunning specific tests for package 'methods'\n  Running 'basicRefClass.R'\n  Running 'duplicateClass.R'\n  Running 'envRefClass.R'\n  Running 'fieldAssignments.R'\n  Running 'mixinInitialize.R'\n  Running 'namesAndSlots.R'\n  Running 'nextWithDots.R'\n  Running 'refClassExample.R'\n  Running 'S3.R'\n  Running 'testConditionalIs.R'\n  Running 'testGroupGeneric.R'\n  Running 'testIs.R'\nTesting examples for package 'grid'\n  comparing 'grid-Ex.Rout' to 'grid-Ex.Rout.save' ... OK\nRunning specific tests for package 'grid'\n  Running 'bugs.R'\n  Running 'clippaths.R'\n  Running 'compositing.R'\n  Running 'coords.R'\n  Running 'glyphs.R'\n  Running 'grep.R'\n  comparing 'grep.Rout' to 'grep.Rout.save' ... OK\n  Running 'groups.R'\n  Running 'masks.R'\n  Running 'nesting.R'\n  Running 'paths.R'\n  Running 'patterns.R'\n  Running 'reg.R'\n  Running 'testls.R'\n  comparing 'testls.Rout' to 'testls.Rout.save' ... OK\n  Running 'units.R'\nRunning vignettes for package 'grid'\n  Running 'displaylist.Rnw'\n  Running 'frame.Rnw'\n  Running 'grid.Rnw'\n  Running 'grobs.Rnw'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Running 'interactive.Rnw'\n  Running 'locndimn.Rnw'\n  Running 'moveline.Rnw'\n  Running 'nonfinite.Rnw'\n  Running 'plotexample.Rnw'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Running 'rotated.Rnw'\n\n\n\n\n\n\n\n\n\n  Running 'saveload.Rnw'\n  Running 'sharing.Rnw'\n  Running 'viewports.Rnw'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTesting examples for package 'splines'\n  comparing 'splines-Ex.Rout' to 'splines-Ex.Rout.save' ... OK\nRunning specific tests for package 'splines'\n  Running 'sparse-tst.R'\n  Running 'spline-tst.R'\nTesting examples for package 'stats4'\n  comparing 'stats4-Ex.Rout' to 'stats4-Ex.Rout.save' ... OK\nRunning specific tests for package 'stats4'\n  Running 'confint.R'\nTesting examples for package 'tcltk'\nTesting examples for package 'compiler'\nRunning specific tests for package 'compiler'\n  Running 'assign.R'\n  Running 'basics.R'\n  Running 'const.R'\n  Running 'curexpr.R'\n  Running 'envir.R'\n  Running 'jit.R'\n  Running 'loop.R'\n  Running 'srcref.R'\n  Running 'switch.R'\n  Running 'vischk.R'\nTesting examples for package 'parallel'\nRunning specific tests for package 'parallel'\n  Running 'Master.R'\n  Running 'RSeed.R'\nRunning vignettes for package 'parallel'\n  Running 'parallel.Rnw'\n\n\n\n\n\n\n\n\nedit_log(\"base_packages\",success_base_packages)\n\nsystem(\"rm -rf base_tests\")\ntest_dir &lt;- paste0(R.home(),\"/tests\")\ncmd &lt;- paste(\"cp -r \", test_dir, \" base_tests\")\nsystem(cmd)\n\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nCRANtools.Rout\n\n\n\n\nPCRE.Rout\n\n\n\n\nany-all.Rout\n\n\n\n\narith-true.Rout\n\n\n\n\narray-subset.Rout\n\n\n\n\nbase-Ex.Rout\n\n\n\n\ncompiler-Ex.Rout\n\n\n\n\ndatasets-Ex.Rout\n\n\n\n\ngrDevices-Ex.Rout\n\n\n\n\ngraphics-Ex.Rout\n\n\n\n\ngrid-Ex.Rout\n\n\n\n\nmethods-Ex.Rout\n\n\n\n\nparallel-Ex.Rout\n\n\n\n\nsplines-Ex.Rout\n\n\n\n\nstats-Ex.Rout\n\n\n\n\nstats4-Ex.Rout\n\n\n\n\ntcltk-Ex.Rout\n\n\n\n\ntools-Ex.Rout\n\n\n\n\nutils-Ex.Rout\n\n\n\n\nclasses-methods.Rout\n\n\n\n\ncomplex.Rout\n\n\n\n\nd-p-q-r-tests.Rout\n\n\n\n\nd-p-q-r-tst-2.Rout\n\n\n\n\ndatasets.Rout\n\n\n\n\ndatetime.Rout\n\n\n\n\ndatetime2.Rout\n\n\n\n\ndatetime3.Rout\n\n\n\n\ndatetime4.Rout\n\n\n\n\ndatetime5.Rout\n\n\n\n\ndemos.Rout\n\n\n\n\ndemos2.Rout\n\n\n\n\neval-etc.Rout\n\n\n\n\niconv.Rout\n\n\n\n\niec60559.Rout\n\n\n\n\ninternet.Rout\n\n\n\n\ninternet2.Rout\n\n\n\n\nisas-tests.Rout\n\n\n\n\nlapack.Rout\n\n\n\n\nlibcurl.Rout\n\n\n\n\nlm-tests.Rout\n\n\n\n\nmethod-dispatch.Rout\n\n\n\n\nmisc-devel.Rout\n\n\n\n\nno-segfault.Rout\n\n\n\n\nok-errors.Rout\n\n\n\n\np-qbeta-strict-tst.Rout\n\n\n\n\np-r-random-tests.Rout\n\n\n\n\nprimitives.Rout\n\n\n\n\nprint-tests.Rout\n\n\n\n\nreg-BLAS.Rout\n\n\n\n\nreg-IO.Rout\n\n\n\n\nreg-IO2.Rout\n\n\n\n\nreg-S4-examples.Rout\n\n\n\n\nreg-S4.Rout\n\n\n\n\nreg-examples1.Rout\n\n\n\n\nreg-examples2.Rout\n\n\n\n\nreg-examples3.Rout\n\n\n\n\nreg-packages.Rout\n\n\n\n\nreg-plot-latin1.Rout\n\n\n\n\nreg-plot.Rout\n\n\n\n\nreg-tests-1a.Rout\n\n\n\n\nreg-tests-1b.Rout\n\n\n\n\nreg-tests-1c.Rout\n\n\n\n\nreg-tests-1d.Rout\n\n\n\n\nreg-tests-1e.Rout\n\n\n\n\nreg-tests-2.Rout\n\n\n\n\nreg-tests-3.Rout\n\n\n\n\nreg-translation.Rout\n\n\n\n\nsimple-true.Rout\n\n\n\n\nstructure.Rout\n\n\n\n\nutf8-regex.Rout\n\n\n\n\nassign.Rout\n\n\n\n\nbasics.Rout\n\n\n\n\nconst.Rout\n\n\n\n\ncurexpr.Rout\n\n\n\n\nenvir.Rout\n\n\n\n\njit.Rout\n\n\n\n\nloop.Rout\n\n\n\n\nsrcref.Rout\n\n\n\n\nswitch.Rout\n\n\n\n\nvischk.Rout\n\n\n\n\nconvertColor-tests.Rout\n\n\n\n\nencodings.Rout\n\n\n\n\nencodings2.Rout\n\n\n\n\nencodings3.Rout\n\n\n\n\ngrDev-tsts.Rout\n\n\n\n\npalettes-tests.Rout\n\n\n\n\nps-tests.Rout\n\n\n\n\nsaved-recordPlot.Rout\n\n\n\n\nurw-fonts.Rout\n\n\n\n\nzzcheck-encodings.Rout\n\n\n\n\nbugs.Rout\n\n\n\n\nclippaths.Rout\n\n\n\n\ncompositing.Rout\n\n\n\n\ncoords.Rout\n\n\n\n\nglyphs.Rout\n\n\n\n\ngrep.Rout\n\n\n\n\ngroups.Rout\n\n\n\n\nmasks.Rout\n\n\n\n\nnesting.Rout\n\n\n\n\npaths.Rout\n\n\n\n\npatterns.Rout\n\n\n\n\nreg.Rout\n\n\n\n\ntestls.Rout\n\n\n\n\nunits.Rout\n\n\n\n\nS3.Rout\n\n\n\n\nbasicRefClass.Rout\n\n\n\n\nduplicateClass.Rout\n\n\n\n\nenvRefClass.Rout\n\n\n\n\nfieldAssignments.Rout\n\n\n\n\nmixinInitialize.Rout\n\n\n\n\nnamesAndSlots.Rout\n\n\n\n\nnextWithDots.Rout\n\n\n\n\nrefClassExample.Rout\n\n\n\n\ntestConditionalIs.Rout\n\n\n\n\ntestGroupGeneric.Rout\n\n\n\n\ntestIs.Rout\n\n\n\n\nMaster.Rout\n\n\n\n\nRSeed.Rout\n\n\n\n\nmulticore1.Rout\n\n\n\n\nmulticore2.Rout\n\n\n\n\nmulticore3.Rout\n\n\n\n\nsnow1.Rout\n\n\n\n\nsnow2.Rout\n\n\n\n\nsparse-tst.Rout\n\n\n\n\nspline-tst.Rout\n\n\n\n\nNLSstClosest.Rout\n\n\n\n\narimaML.Rout\n\n\n\n\nbandwidth.Rout\n\n\n\n\ncmdscale.Rout\n\n\n\n\ndensity_chk.Rout\n\n\n\n\ndpq-xtra.Rout\n\n\n\n\ndrop1-polr.Rout\n\n\n\n\nglm-etc.Rout\n\n\n\n\nglm.Rout\n\n\n\n\nig_glm.Rout\n\n\n\n\nks-test.Rout\n\n\n\n\nnafns.Rout\n\n\n\n\nnlm.Rout\n\n\n\n\nnls.Rout\n\n\n\n\noffsets.Rout\n\n\n\n\nppr.Rout\n\n\n\n\npsmirnov.Rout\n\n\n\n\nsimulate.Rout\n\n\n\n\nsmooth.spline.Rout\n\n\n\n\ntable-margins.Rout\n\n\n\n\nts-tests.Rout\n\n\n\n\nconfint.Rout\n\n\n\n\nQC.Rout\n\n\n\n\nRd.Rout\n\n\n\n\nRd2HTML.Rout\n\n\n\n\nS3.Rout\n\n\n\n\nundoc.Rout\n\n\n\n\nSweave-tst.Rout\n\n\n\n\ncharclass.Rout\n\n\n\n\ncompletion.Rout\n\n\n\n\nrelist.Rout\n\n\n\n\nKernSmooth-Ex.Rout\n\n\n\n\nbkfe.Rout\n\n\n\n\nlocpoly.Rout\n\n\n\n\nMASS-Ex.Rout\n\n\n\n\nconfint.Rout\n\n\n\n\ncov.mcd.Rout\n\n\n\n\nfitdistr.Rout\n\n\n\n\nglm.nb.Rout\n\n\n\n\nglmmPQL.Rout\n\n\n\n\nhubers.Rout\n\n\n\n\nlme.Rout\n\n\n\n\nloglm.Rout\n\n\n\n\npolr.Rout\n\n\n\n\nprofile.Rout\n\n\n\n\nregression.Rout\n\n\n\n\nrlm.Rout\n\n\n\n\nscripts.Rout\n\n\n\n\nMatrix-Ex.Rout\n\n\n\n\nClass+Meth.Rout\n\n\n\n\nSimple.Rout\n\n\n\n\nabIndex-tsts.Rout\n\n\n\n\nbase-matrix-fun.Rout\n\n\n\n\nbind.Rout\n\n\n\n\ndg_Matrix.Rout\n\n\n\n\ndpo-test.Rout\n\n\n\n\ndtpMatrix.Rout\n\n\n\n\nfactorizing.Rout\n\n\n\n\ngroup-methods.Rout\n\n\n\n\nindexing.Rout\n\n\n\n\nmatprod.Rout\n\n\n\n\nmatr-exp.Rout\n\n\n\n\nother-pkgs.Rout\n\n\n\n\npacked-unpacked.Rout\n\n\n\n\nspModel.matrix.Rout\n\n\n\n\nsymmDN.Rout\n\n\n\n\nvalidObj.Rout\n\n\n\n\nwrite-read.Rout\n\n\n\n\nboot-Ex.Rout\n\n\n\n\nparallel-censboot.Rout\n\n\n\n\nclass-Ex.Rout\n\n\n\n\ncluster-Ex.Rout\n\n\n\n\nagnes-ex.Rout\n\n\n\n\nclara-NAs.Rout\n\n\n\n\nclara-ex.Rout\n\n\n\n\nclara-gower.Rout\n\n\n\n\nclara.Rout\n\n\n\n\nclusplot-out.Rout\n\n\n\n\ndaisy-ex.Rout\n\n\n\n\ndiana-boots.Rout\n\n\n\n\ndiana-ex.Rout\n\n\n\n\nellipsoid-ex.Rout\n\n\n\n\nfanny-ex.Rout\n\n\n\n\nmona.Rout\n\n\n\n\npam.Rout\n\n\n\n\nsilhouette-default.Rout\n\n\n\n\nsweep-ex.Rout\n\n\n\n\ncodetools-Ex.Rout\n\n\n\n\ntests.Rout\n\n\n\n\nforeign-Ex.Rout\n\n\n\n\nS3.Rout\n\n\n\n\narff.Rout\n\n\n\n\ndownload.Rout\n\n\n\n\nminitab.Rout\n\n\n\n\nmval_bug.Rout\n\n\n\n\noctave.Rout\n\n\n\n\nsas.Rout\n\n\n\n\nspss.Rout\n\n\n\n\nstata.Rout\n\n\n\n\ntestEmpty.Rout\n\n\n\n\nwriteForeignSPSS.Rout\n\n\n\n\nxport.Rout\n\n\n\n\nlattice-Ex.Rout\n\n\n\n\nMASSch04.Rout\n\n\n\n\nauto-key.Rout\n\n\n\n\nbarchart-width.Rout\n\n\n\n\ncall.Rout\n\n\n\n\ncolorkey-title.Rout\n\n\n\n\ndataframe-methods.Rout\n\n\n\n\ndates.Rout\n\n\n\n\ndotplotscoping.Rout\n\n\n\n\nfontsize.Rout\n\n\n\n\nlevelplot.Rout\n\n\n\n\nscales.Rout\n\n\n\n\nshade-wireframe.Rout\n\n\n\n\nsummary.Rout\n\n\n\n\ntemp.Rout\n\n\n\n\ntest.Rout\n\n\n\n\nwireframe.Rout\n\n\n\n\nmgcv-Ex.Rout\n\n\n\n\nnlme-Ex.Rout\n\n\n\n\nanova.gls.Rout\n\n\n\n\naugPred_lab.Rout\n\n\n\n\naugPredmissing.Rout\n\n\n\n\ncoef.Rout\n\n\n\n\ncontrMat.Rout\n\n\n\n\ncorFactor.Rout\n\n\n\n\ndata.frame.Rout\n\n\n\n\ndeparse.Rout\n\n\n\n\ndeviance.Rout\n\n\n\n\nfitted.Rout\n\n\n\n\ngetData.Rout\n\n\n\n\ngetVarCov.Rout\n\n\n\n\ngls.Rout\n\n\n\n\ngnls-ch8.Rout\n\n\n\n\nlmList.Rout\n\n\n\n\nlme.Rout\n\n\n\n\nmissing.Rout\n\n\n\n\nnlme.Rout\n\n\n\n\nnlme2.Rout\n\n\n\n\npredict.lme.Rout\n\n\n\n\nscoping.Rout\n\n\n\n\nsigma-fixed-etc.Rout\n\n\n\n\nupdateLme.Rout\n\n\n\n\nvarConstProp.Rout\n\n\n\n\nvarIdent.Rout\n\n\n\n\nnnet-Ex.Rout\n\n\n\n\nrpart-Ex.Rout\n\n\n\n\nbackticks.Rout\n\n\n\n\ncost.Rout\n\n\n\n\ncptest.Rout\n\n\n\n\nminus_in_formula.Rout\n\n\n\n\npriors.Rout\n\n\n\n\nrescale.Rout\n\n\n\n\ntestall.Rout\n\n\n\n\ntreble.Rout\n\n\n\n\ntreble2.Rout\n\n\n\n\ntreble3.Rout\n\n\n\n\ntreble4.Rout\n\n\n\n\nusersplits.Rout\n\n\n\n\nxpred1.Rout\n\n\n\n\nxpred2.Rout\n\n\n\n\nspatial-Ex.Rout\n\n\n\n\nsurvival-Ex.Rout\n\n\n\n\naareg.Rout\n\n\n\n\nanova.Rout\n\n\n\n\nbladder.Rout\n\n\n\n\nbook1.Rout\n\n\n\n\nbook2.Rout\n\n\n\n\nbook3.Rout\n\n\n\n\nbook4.Rout\n\n\n\n\nbook5.Rout\n\n\n\n\nbook6.Rout\n\n\n\n\nbook7.Rout\n\n\n\n\nbrier.Rout\n\n\n\n\ncancer.Rout\n\n\n\n\ncheckSurv2.Rout\n\n\n\n\nclogit.Rout\n\n\n\n\nconcordance.Rout\n\n\n\n\nconcordance2.Rout\n\n\n\n\nconcordance3.Rout\n\n\n\n\ncounting.Rout\n\n\n\n\ncoxsurv.Rout\n\n\n\n\ncoxsurv2.Rout\n\n\n\n\ncoxsurv3.Rout\n\n\n\n\ncoxsurv4.Rout\n\n\n\n\ncoxsurv5.Rout\n\n\n\n\ncoxsurv6.Rout\n\n\n\n\ndetail.Rout\n\n\n\n\ndifftest.Rout\n\n\n\n\ndoaml.Rout\n\n\n\n\ndoweight.Rout\n\n\n\n\ndropspecial.Rout\n\n\n\n\nexpected.Rout\n\n\n\n\nexpected2.Rout\n\n\n\n\nfactor.Rout\n\n\n\n\nfactor2.Rout\n\n\n\n\nfinegray.Rout\n\n\n\n\nfr_cancer.Rout\n\n\n\n\nfr_kidney.Rout\n\n\n\n\nfr_lung.Rout\n\n\n\n\nfr_ovarian.Rout\n\n\n\n\nfr_rat1.Rout\n\n\n\n\nfr_resid.Rout\n\n\n\n\nfr_simple.Rout\n\n\n\n\nfrailty.Rout\n\n\n\n\nfrank.Rout\n\n\n\n\ninfcox.Rout\n\n\n\n\njasa.Rout\n\n\n\n\nmodel.matrix.Rout\n\n\n\n\nmstate.Rout\n\n\n\n\nmstrata.Rout\n\n\n\n\nmulti2.Rout\n\n\n\n\nmulti3.Rout\n\n\n\n\nmultistate.Rout\n\n\n\n\nneardate.Rout\n\n\n\n\nnested.Rout\n\n\n\n\nnsk.Rout\n\n\n\n\novarian.Rout\n\n\n\n\noverlap.Rout\n\n\n\n\nprednew.Rout\n\n\n\n\npseudo.Rout\n\n\n\n\npspline.Rout\n\n\n\n\npyear.Rout\n\n\n\n\nquantile.Rout\n\n\n\n\nr_lung.Rout\n\n\n\n\nr_resid.Rout\n\n\n\n\nr_sas.Rout\n\n\n\n\nr_scale.Rout\n\n\n\n\nr_stanford.Rout\n\n\n\n\nr_strata.Rout\n\n\n\n\nr_tdist.Rout\n\n\n\n\nr_user.Rout\n\n\n\n\nratetable.Rout\n\n\n\n\nresidsf.Rout\n\n\n\n\nroyston.Rout\n\n\n\n\nrttright.Rout\n\n\n\n\nsingtest.Rout\n\n\n\n\nstrata2.Rout\n\n\n\n\nstratatest.Rout\n\n\n\n\nsummary_survfit.Rout\n\n\n\n\nsurv.Rout\n\n\n\n\nsurvSplit.Rout\n\n\n\n\nsurvcheck.Rout\n\n\n\n\nsurvfit1.Rout\n\n\n\n\nsurvfit2.Rout\n\n\n\n\nsurvreg1.Rout\n\n\n\n\nsurvreg2.Rout\n\n\n\n\nsurvtest.Rout\n\n\n\n\ntestci.Rout\n\n\n\n\ntestci2.Rout\n\n\n\n\ntestnull.Rout\n\n\n\n\ntestreg.Rout\n\n\n\n\ntiedtime.Rout\n\n\n\n\ntmerge.Rout\n\n\n\n\ntmerge2.Rout\n\n\n\n\ntmerge3.Rout\n\n\n\n\ntt.Rout\n\n\n\n\ntt2.Rout\n\n\n\n\nturnbull.Rout\n\n\n\n\nupdate.Rout\n\n\n\n\nyates0.Rout\n\n\n\n\nyates1.Rout\n\n\n\n\nyates2.Rout\n\n\n\n\nzph.Rout\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "test_recommended.html",
    "href": "test_recommended.html",
    "title": "Test recommended add-on packages",
    "section": "",
    "text": "R code\nThis follows the recipe in the manual for basic R validation. The tests have to be run in the R_home directory. This directory is then copied across into this project folder. The output files created are listed in the next section\n\nsource(\"edit_log.R\")\nrecommended_dir &lt;- file.path(R.home(), \"tests\",\"recommended_tests\")\nunlink(recommended_dir,recursive = TRUE)\ndir.create(recommended_dir)\nsuccess_recommended &lt;- tools::testInstalledPackages(scope = \"recommended\", \n                                             outDir =recommended_dir,\n                                             errorsAreFatal=TRUE)\n\nTesting examples for package 'MASS'\n\n\n  comparing 'MASS-Ex.Rout' to 'MASS-Ex.Rout.save' ... OK\nRunning specific tests for package 'MASS'\n  Running 'confint.R'\n  Running 'cov.mcd.R'\n  Running 'fitdistr.R'\n  comparing 'fitdistr.Rout' to 'fitdistr.Rout.save' ... OK\n  Running 'glm.nb.R'\n  Running 'glmmPQL.R'\n  Running 'hubers.R'\n  Running 'lme.R'\n  Running 'loglm.R'\n  Running 'polr.R'\n  Running 'profile.R'\n  Running 'regression.R'\n  comparing 'regression.Rout' to 'regression.Rout.save' ... OK\n  Running 'rlm.R'\n  Running 'scripts.R'\nTesting examples for package 'lattice'\nRunning specific tests for package 'lattice'\n  Running 'auto-key.R'\n  Running 'barchart-width.R'\n  Running 'call.R'\n  Running 'colorkey-title.R'\n  Running 'dataframe-methods.R'\n  Running 'dates.R'\n  Running 'dotplotscoping.R'\n  Running 'fontsize.R'\n  Running 'levelplot.R'\n  Running 'MASSch04.R'\n  Running 'scales.R'\n  Running 'shade-wireframe.R'\n  Running 'summary.R'\n  Running 'temp.R'\n  Running 'test.R'\n  Running 'wireframe.R'\nRunning vignettes for package 'lattice'\n  Running 'grid.Rnw'\nTesting examples for package 'Matrix'\nRunning specific tests for package 'Matrix'\n  Running 'abIndex-tsts.R'\n  Running 'base-matrix-fun.R'\n  Running 'bind.R'\n  comparing 'bind.Rout' to 'bind.Rout.save' ... OK\n  Running 'Class+Meth.R'\n  Running 'dg_Matrix.R'\n  Running 'dpo-test.R'\n  Running 'dtpMatrix.R'\n  Running 'factorizing.R'\n  Running 'group-methods.R'\n  Running 'indexing.R'\n  comparing 'indexing.Rout' to 'indexing.Rout.save' ... OK\n  Running 'matprod.R'\n  Running 'matr-exp.R'\n  Running 'other-pkgs.R'\n  Running 'packed-unpacked.R'\n  Running 'Simple.R'\n  Running 'spModel.matrix.R'\n  Running 'symmDN.R'\n  Running 'validObj.R'\n  Running 'write-read.R'\nRunning vignettes for package 'Matrix'\n  Running 'Comparisons.Rnw'\n  Running 'Design-issues.Rnw'\n  Running 'Intro2Matrix.Rnw'\n  Running 'Introduction.Rnw'\n  Running 'sparseModels.Rnw'\n  [[ suppressing 20 column names '1', '2', '3' ... ]]\n  [[ suppressing 24 column names '1', '2', '3' ... ]]\nTesting examples for package 'nlme'\nRunning specific tests for package 'nlme'\n  Running 'anova.gls.R'\n  Running 'augPred_lab.R'\n  Running 'augPredmissing.R'\n  Running 'coef.R'\n  comparing 'coef.Rout' to 'coef.Rout.save' ... OK\n  Running 'contrMat.R'\n  Running 'corFactor.R'\n  Running 'data.frame.R'\n  Running 'deparse.R'\n  Running 'deviance.R'\n  Running 'fitted.R'\n  Running 'getData.R'\n  Running 'getVarCov.R'\n  Running 'gls.R'\n  Running 'gnls-ch8.R'\n  Running 'lme.R'\n  comparing 'lme.Rout' to 'lme.Rout.save' ... OK\n  Running 'lmList.R'\n  Running 'missing.R'\n  comparing 'missing.Rout' to 'missing.Rout.save' ... OK\n  Running 'nlme.R'\n  Running 'nlme2.R'\n  Running 'predict.lme.R'\n  Running 'scoping.R'\n  Running 'sigma-fixed-etc.R'\n  Running 'updateLme.R'\n  Running 'varConstProp.R'\n  Running 'varIdent.R'\nTesting examples for package 'survival'\n  comparing 'survival-Ex.Rout' to 'survival-Ex.Rout.save' ... OK\nRunning specific tests for package 'survival'\n  Running 'aareg.R'\n  comparing 'aareg.Rout' to 'aareg.Rout.save' ... OK\n  Running 'anova.R'\n  comparing 'anova.Rout' to 'anova.Rout.save' ... OK\n  Running 'bladder.R'\n  comparing 'bladder.Rout' to 'bladder.Rout.save' ... OK\n  Running 'book1.R'\n  comparing 'book1.Rout' to 'book1.Rout.save' ... OK\n  Running 'book2.R'\n  comparing 'book2.Rout' to 'book2.Rout.save' ... OK\n  Running 'book3.R'\n  comparing 'book3.Rout' to 'book3.Rout.save' ... OK\n  Running 'book4.R'\n  comparing 'book4.Rout' to 'book4.Rout.save' ... OK\n  Running 'book5.R'\n  comparing 'book5.Rout' to 'book5.Rout.save' ... OK\n  Running 'book6.R'\n  comparing 'book6.Rout' to 'book6.Rout.save' ... OK\n  Running 'book7.R'\n  comparing 'book7.Rout' to 'book7.Rout.save' ... OK\n  Running 'brier.R'\n  comparing 'brier.Rout' to 'brier.Rout.save' ... OK\n  Running 'cancer.R'\n  comparing 'cancer.Rout' to 'cancer.Rout.save' ... OK\n  Running 'checkSurv2.R'\n  comparing 'checkSurv2.Rout' to 'checkSurv2.Rout.save' ... OK\n  Running 'clogit.R'\n  comparing 'clogit.Rout' to 'clogit.Rout.save' ... OK\n  Running 'concordance.R'\n  comparing 'concordance.Rout' to 'concordance.Rout.save' ... OK\n  Running 'concordance2.R'\n  comparing 'concordance2.Rout' to 'concordance2.Rout.save' ... OK\n  Running 'concordance3.R'\n  comparing 'concordance3.Rout' to 'concordance3.Rout.save' ... OK\n  Running 'counting.R'\n  comparing 'counting.Rout' to 'counting.Rout.save' ... OK\n  Running 'coxsurv.R'\n  comparing 'coxsurv.Rout' to 'coxsurv.Rout.save' ... OK\n  Running 'coxsurv2.R'\n  comparing 'coxsurv2.Rout' to 'coxsurv2.Rout.save' ... OK\n  Running 'coxsurv3.R'\n  comparing 'coxsurv3.Rout' to 'coxsurv3.Rout.save' ... OK\n  Running 'coxsurv4.R'\n  comparing 'coxsurv4.Rout' to 'coxsurv4.Rout.save' ... OK\n  Running 'coxsurv5.R'\n  comparing 'coxsurv5.Rout' to 'coxsurv5.Rout.save' ... OK\n  Running 'coxsurv6.R'\n  comparing 'coxsurv6.Rout' to 'coxsurv6.Rout.save' ... OK\n  Running 'detail.R'\n  comparing 'detail.Rout' to 'detail.Rout.save' ... OK\n  Running 'difftest.R'\n  comparing 'difftest.Rout' to 'difftest.Rout.save' ... OK\n  Running 'doaml.R'\n  comparing 'doaml.Rout' to 'doaml.Rout.save' ... OK\n  Running 'doweight.R'\n  comparing 'doweight.Rout' to 'doweight.Rout.save' ... OK\n  Running 'dropspecial.R'\n  comparing 'dropspecial.Rout' to 'dropspecial.Rout.save' ... OK\n  Running 'expected.R'\n  comparing 'expected.Rout' to 'expected.Rout.save' ... OK\n  Running 'expected2.R'\n  comparing 'expected2.Rout' to 'expected2.Rout.save' ... OK\n  Running 'factor.R'\n  comparing 'factor.Rout' to 'factor.Rout.save' ... OK\n  Running 'factor2.R'\n  comparing 'factor2.Rout' to 'factor2.Rout.save' ... OK\n  Running 'finegray.R'\n  comparing 'finegray.Rout' to 'finegray.Rout.save' ... OK\n  Running 'fr_cancer.R'\n  comparing 'fr_cancer.Rout' to 'fr_cancer.Rout.save' ... OK\n  Running 'fr_kidney.R'\n  comparing 'fr_kidney.Rout' to 'fr_kidney.Rout.save' ... OK\n  Running 'fr_lung.R'\n  comparing 'fr_lung.Rout' to 'fr_lung.Rout.save' ... OK\n  Running 'fr_ovarian.R'\n  comparing 'fr_ovarian.Rout' to 'fr_ovarian.Rout.save' ... OK\n  Running 'fr_rat1.R'\n  comparing 'fr_rat1.Rout' to 'fr_rat1.Rout.save' ... OK\n  Running 'fr_resid.R'\n  comparing 'fr_resid.Rout' to 'fr_resid.Rout.save' ... OK\n  Running 'fr_simple.R'\n  comparing 'fr_simple.Rout' to 'fr_simple.Rout.save' ... OK\n  Running 'frailty.R'\n  comparing 'frailty.Rout' to 'frailty.Rout.save' ... OK\n  Running 'frank.R'\n  comparing 'frank.Rout' to 'frank.Rout.save' ... OK\n  Running 'infcox.R'\n  comparing 'infcox.Rout' to 'infcox.Rout.save' ... OK\n  Running 'jasa.R'\n  comparing 'jasa.Rout' to 'jasa.Rout.save' ... OK\n  Running 'model.matrix.R'\n  comparing 'model.matrix.Rout' to 'model.matrix.Rout.save' ... OK\n  Running 'mstate.R'\n  comparing 'mstate.Rout' to 'mstate.Rout.save' ... OK\n  Running 'mstrata.R'\n  comparing 'mstrata.Rout' to 'mstrata.Rout.save' ... OK\n  Running 'multi2.R'\n  comparing 'multi2.Rout' to 'multi2.Rout.save' ...  Running 'multi3.R'\n  comparing 'multi3.Rout' to 'multi3.Rout.save' ... OK\n  Running 'multistate.R'\n  comparing 'multistate.Rout' to 'multistate.Rout.save' ... OK\n  Running 'neardate.R'\n  comparing 'neardate.Rout' to 'neardate.Rout.save' ... OK\n  Running 'nested.R'\n  comparing 'nested.Rout' to 'nested.Rout.save' ... OK\n  Running 'nsk.R'\n  comparing 'nsk.Rout' to 'nsk.Rout.save' ... OK\n  Running 'ovarian.R'\n  comparing 'ovarian.Rout' to 'ovarian.Rout.save' ... OK\n  Running 'overlap.R'\n  comparing 'overlap.Rout' to 'overlap.Rout.save' ... OK\n  Running 'prednew.R'\n  comparing 'prednew.Rout' to 'prednew.Rout.save' ... OK\n  Running 'pseudo.R'\n  comparing 'pseudo.Rout' to 'pseudo.Rout.save' ... OK\n  Running 'pspline.R'\n  comparing 'pspline.Rout' to 'pspline.Rout.save' ... OK\n  Running 'pyear.R'\n  comparing 'pyear.Rout' to 'pyear.Rout.save' ... OK\n  Running 'quantile.R'\n  comparing 'quantile.Rout' to 'quantile.Rout.save' ... OK\n  Running 'r_lung.R'\n  comparing 'r_lung.Rout' to 'r_lung.Rout.save' ... OK\n  Running 'r_resid.R'\n  comparing 'r_resid.Rout' to 'r_resid.Rout.save' ... OK\n  Running 'r_sas.R'\n  comparing 'r_sas.Rout' to 'r_sas.Rout.save' ... OK\n  Running 'r_scale.R'\n  comparing 'r_scale.Rout' to 'r_scale.Rout.save' ... OK\n  Running 'r_stanford.R'\n  comparing 'r_stanford.Rout' to 'r_stanford.Rout.save' ... OK\n  Running 'r_strata.R'\n  comparing 'r_strata.Rout' to 'r_strata.Rout.save' ... OK\n  Running 'r_tdist.R'\n  comparing 'r_tdist.Rout' to 'r_tdist.Rout.save' ... OK\n  Running 'r_user.R'\n  comparing 'r_user.Rout' to 'r_user.Rout.save' ... OK\n  Running 'ratetable.R'\n  comparing 'ratetable.Rout' to 'ratetable.Rout.save' ... OK\n  Running 'residsf.R'\n  comparing 'residsf.Rout' to 'residsf.Rout.save' ... OK\n  Running 'royston.R'\n  comparing 'royston.Rout' to 'royston.Rout.save' ... OK\n  Running 'rttright.R'\n  comparing 'rttright.Rout' to 'rttright.Rout.save' ... OK\n  Running 'singtest.R'\n  comparing 'singtest.Rout' to 'singtest.Rout.save' ... OK\n  Running 'strata2.R'\n  comparing 'strata2.Rout' to 'strata2.Rout.save' ... OK\n  Running 'stratatest.R'\n  comparing 'stratatest.Rout' to 'stratatest.Rout.save' ... OK\n  Running 'summary_survfit.R'\n  comparing 'summary_survfit.Rout' to 'summary_survfit.Rout.save' ... OK\n  Running 'surv.R'\n  comparing 'surv.Rout' to 'surv.Rout.save' ... OK\n  Running 'survcheck.R'\n  comparing 'survcheck.Rout' to 'survcheck.Rout.save' ... OK\n  Running 'survfit1.R'\n  comparing 'survfit1.Rout' to 'survfit1.Rout.save' ... OK\n  Running 'survfit2.R'\n  comparing 'survfit2.Rout' to 'survfit2.Rout.save' ... OK\n  Running 'survreg1.R'\n  comparing 'survreg1.Rout' to 'survreg1.Rout.save' ... OK\n  Running 'survreg2.R'\n  comparing 'survreg2.Rout' to 'survreg2.Rout.save' ... OK\n  Running 'survSplit.R'\n  comparing 'survSplit.Rout' to 'survSplit.Rout.save' ... OK\n  Running 'survtest.R'\n  comparing 'survtest.Rout' to 'survtest.Rout.save' ... OK\n  Running 'testci.R'\n  comparing 'testci.Rout' to 'testci.Rout.save' ... OK\n  Running 'testci2.R'\n  comparing 'testci2.Rout' to 'testci2.Rout.save' ... OK\n  Running 'testnull.R'\n  comparing 'testnull.Rout' to 'testnull.Rout.save' ... OK\n  Running 'testreg.R'\n  comparing 'testreg.Rout' to 'testreg.Rout.save' ... OK\n  Running 'tiedtime.R'\n  comparing 'tiedtime.Rout' to 'tiedtime.Rout.save' ... OK\n  Running 'tmerge.R'\n  comparing 'tmerge.Rout' to 'tmerge.Rout.save' ... OK\n  Running 'tmerge2.R'\n  comparing 'tmerge2.Rout' to 'tmerge2.Rout.save' ... OK\n  Running 'tmerge3.R'\n  comparing 'tmerge3.Rout' to 'tmerge3.Rout.save' ... OK\n  Running 'tt.R'\n  comparing 'tt.Rout' to 'tt.Rout.save' ... OK\n  Running 'tt2.R'\n  comparing 'tt2.Rout' to 'tt2.Rout.save' ... OK\n  Running 'turnbull.R'\n  comparing 'turnbull.Rout' to 'turnbull.Rout.save' ... OK\n  Running 'update.R'\n  comparing 'update.Rout' to 'update.Rout.save' ... OK\n  Running 'yates0.R'\n  comparing 'yates0.Rout' to 'yates0.Rout.save' ...  Running 'yates1.R'\n  comparing 'yates1.Rout' to 'yates1.Rout.save' ... OK\n  Running 'yates2.R'\n  Running 'zph.R'\n  comparing 'zph.Rout' to 'zph.Rout.save' ... OK\nRunning vignettes for package 'survival'\n  Running 'adjcurve.Rnw'\n  Running 'approximate.Rnw'\n  Running 'compete.Rnw'\n  Running 'concordance.Rnw'\n  Running 'discrim.Rnw'\n  Running 'matrix.Rnw'\n  Running 'multi.Rnw'\n  Running 'other.Rnw'\n  Running 'population.Rnw'\n  Running 'redistribute.Rnw'\n  Running 'splines.Rnw'\n  Running 'survival.Rnw'\n\n\nWarning in coxph(Surv(tstart, time, status) ~ trt +\ncelltype + karno + time:karno, : a variable appears on both\nthe left and right sides of the formula\n\n\nWarning in coxph(Surv(tstart, time, status) ~ trt +\ncelltype + karno + rank(time):karno, : a variable appears\non both the left and right sides of the formula\n\n\n  Running 'tiedtimes.Rnw'\n  Running 'timedep.Rnw'\n\n\nWarning in tmerge(jasa, tdata, id = subject, death =\nevent(futime, fustat), : replacement of variable\n'transplant'\n\n\n  Running 'validate.Rnw'\n\n\nWarning in coxph.fit(X, Y, istrat, offset, init, control,\nweights = weights, : Ran out of iterations and did not\nconverge\n\n\nWarning in coxph.fit(X, Y, istrat, offset, init, control,\nweights = weights, : Ran out of iterations and did not\nconverge\n\n\nWarning in coxph(Surv(tstart, time, status) ~ trt +\ncelltype + karno + time:karno, : a variable appears on both\nthe left and right sides of the formula\n\n\nWarning in coxph(Surv(tstart, time, status) ~ trt +\ncelltype + karno + rank(time):karno, : a variable appears\non both the left and right sides of the formula\n\n\nWarning in tmerge(jasa, tdata, id = subject, death =\nevent(futime, fustat), : replacement of variable\n'transplant'\n\n\nWarning in coxph.fit(X, Y, istrat, offset, init, control,\nweights = weights, : Ran out of iterations and did not\nconverge\nWarning in coxph.fit(X, Y, istrat, offset, init, control,\nweights = weights, : Ran out of iterations and did not\nconverge\n\n\nTesting examples for package 'boot'\n  comparing 'boot-Ex.Rout' to 'boot-Ex.Rout.save' ... OK\nRunning specific tests for package 'boot'\n  Running 'parallel-censboot.R'\nTesting examples for package 'cluster'\nRunning specific tests for package 'cluster'\n  Running 'agnes-ex.R'\n  comparing 'agnes-ex.Rout' to 'agnes-ex.Rout.save' ... OK\n  Running 'clara-ex.R'\n  comparing 'clara-ex.Rout' to 'clara-ex.Rout.save' ... OK\n  Running 'clara-gower.R'\n  Running 'clara-NAs.R'\n  comparing 'clara-NAs.Rout' to 'clara-NAs.Rout.save' ... OK\n  Running 'clara.R'\n  comparing 'clara.Rout' to 'clara.Rout.save' ... OK\n  Running 'clusplot-out.R'\n  comparing 'clusplot-out.Rout' to 'clusplot-out.Rout.save' ... OK\n  Running 'daisy-ex.R'\n  comparing 'daisy-ex.Rout' to 'daisy-ex.Rout.save' ... OK\n  Running 'diana-boots.R'\n  Running 'diana-ex.R'\n  comparing 'diana-ex.Rout' to 'diana-ex.Rout.save' ... OK\n  Running 'ellipsoid-ex.R'\n  comparing 'ellipsoid-ex.Rout' to 'ellipsoid-ex.Rout.save' ... OK\n  Running 'fanny-ex.R'\n  comparing 'fanny-ex.Rout' to 'fanny-ex.Rout.save' ...  Running 'mona.R'\n  comparing 'mona.Rout' to 'mona.Rout.save' ... OK\n  Running 'pam.R'\n  comparing 'pam.Rout' to 'pam.Rout.save' ... OK\n  Running 'silhouette-default.R'\n  comparing 'silhouette-default.Rout' to 'silhouette-default.Rout.save' ... OK\n  Running 'sweep-ex.R'\nTesting examples for package 'codetools'\nRunning specific tests for package 'codetools'\n  Running 'tests.R'\nTesting examples for package 'foreign'\nRunning specific tests for package 'foreign'\n  Running 'arff.R'\n  comparing 'arff.Rout' to 'arff.Rout.save' ... OK\n  Running 'download.R'\n  Running 'minitab.R'\n  comparing 'minitab.Rout' to 'minitab.Rout.save' ... OK\n  Running 'mval_bug.R'\n  comparing 'mval_bug.Rout' to 'mval_bug.Rout.save' ... OK\n  Running 'octave.R'\n  comparing 'octave.Rout' to 'octave.Rout.save' ... OK\n  Running 'S3.R'\n  comparing 'S3.Rout' to 'S3.Rout.save' ... OK\n  Running 'sas.R'\n  Running 'spss.R'\n  comparing 'spss.Rout' to 'spss.Rout.save' ... OK\n  Running 'stata.R'\n  comparing 'stata.Rout' to 'stata.Rout.save' ... OK\n  Running 'testEmpty.R'\n  comparing 'testEmpty.Rout' to 'testEmpty.Rout.save' ... OK\n  Running 'writeForeignSPSS.R'\n  comparing 'writeForeignSPSS.Rout' to 'writeForeignSPSS.Rout.save' ... OK\n  Running 'xport.R'\n  comparing 'xport.Rout' to 'xport.Rout.save' ... OK\nTesting examples for package 'KernSmooth'\nRunning specific tests for package 'KernSmooth'\n  Running 'bkfe.R'\n  Running 'locpoly.R'\nTesting examples for package 'rpart'\n  comparing 'rpart-Ex.Rout' to 'rpart-Ex.Rout.save' ... OK\nRunning specific tests for package 'rpart'\n  Running 'backticks.R'\n  comparing 'backticks.Rout' to 'backticks.Rout.save' ... OK\n  Running 'cost.R'\n  comparing 'cost.Rout' to 'cost.Rout.save' ... OK\n  Running 'cptest.R'\n  comparing 'cptest.Rout' to 'cptest.Rout.save' ... OK\n  Running 'minus_in_formula.R'\n  comparing 'minus_in_formula.Rout' to 'minus_in_formula.Rout.save' ... OK\n  Running 'priors.R'\n  comparing 'priors.Rout' to 'priors.Rout.save' ... OK\n  Running 'rescale.R'\n  comparing 'rescale.Rout' to 'rescale.Rout.save' ... OK\n  Running 'testall.R'\n  comparing 'testall.Rout' to 'testall.Rout.save' ... OK\n  Running 'treble.R'\n  comparing 'treble.Rout' to 'treble.Rout.save' ... OK\n  Running 'treble2.R'\n  comparing 'treble2.Rout' to 'treble2.Rout.save' ... OK\n  Running 'treble3.R'\n  comparing 'treble3.Rout' to 'treble3.Rout.save' ... OK\n  Running 'treble4.R'\n  comparing 'treble4.Rout' to 'treble4.Rout.save' ... OK\n  Running 'usersplits.R'\n  comparing 'usersplits.Rout' to 'usersplits.Rout.save' ... OK\n  Running 'xpred1.R'\n  comparing 'xpred1.Rout' to 'xpred1.Rout.save' ... OK\n  Running 'xpred2.R'\n  comparing 'xpred2.Rout' to 'xpred2.Rout.save' ... OK\nRunning vignettes for package 'rpart'\n  Running 'longintro.Rnw'\n  Running 'usercode.Rnw'\nTesting examples for package 'class'\nTesting examples for package 'nnet'\nTesting examples for package 'spatial'\n  comparing 'spatial-Ex.Rout' to 'spatial-Ex.Rout.save' ... OK\nRunning specific tests for package 'spatial'\nTesting examples for package 'mgcv'\n\nedit_log(\"recommended packages\",success_recommended )\n\nsystem(\"rm -rf recommended_tests\")\ncmd &lt;- paste(\"cp -r \", recommended_dir, \" recommended_tests\")\nsystem(cmd)\n\n\n\nOutput Files\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          File Name\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nFile Name\n\n\n\n\n\n\nKernSmooth-Ex.Rout\n\n\n\n\nMASS-Ex.Rout\n\n\n\n\nMatrix-Ex.Rout\n\n\n\n\nboot-Ex.Rout\n\n\n\n\nclass-Ex.Rout\n\n\n\n\ncluster-Ex.Rout\n\n\n\n\ncodetools-Ex.Rout\n\n\n\n\nforeign-Ex.Rout\n\n\n\n\nlattice-Ex.Rout\n\n\n\n\nmgcv-Ex.Rout\n\n\n\n\nnlme-Ex.Rout\n\n\n\n\nnnet-Ex.Rout\n\n\n\n\nrpart-Ex.Rout\n\n\n\n\nspatial-Ex.Rout\n\n\n\n\nsurvival-Ex.Rout\n\n\n\n\nKernSmooth-Ex.Rout\n\n\n\n\nMASS-Ex.Rout\n\n\n\n\nMatrix-Ex.Rout\n\n\n\n\nboot-Ex.Rout\n\n\n\n\nclass-Ex.Rout\n\n\n\n\ncluster-Ex.Rout\n\n\n\n\ncodetools-Ex.Rout\n\n\n\n\nforeign-Ex.Rout\n\n\n\n\nlattice-Ex.Rout\n\n\n\n\nmgcv-Ex.Rout\n\n\n\n\nnlme-Ex.Rout\n\n\n\n\nnnet-Ex.Rout\n\n\n\n\nrpart-Ex.Rout\n\n\n\n\nspatial-Ex.Rout\n\n\n\n\nsurvival-Ex.Rout\n\n\n\n\nbkfe.Rout\n\n\n\n\nlocpoly.Rout\n\n\n\n\nconfint.Rout\n\n\n\n\ncov.mcd.Rout\n\n\n\n\nfitdistr.Rout\n\n\n\n\nglm.nb.Rout\n\n\n\n\nglmmPQL.Rout\n\n\n\n\nhubers.Rout\n\n\n\n\nlme.Rout\n\n\n\n\nloglm.Rout\n\n\n\n\npolr.Rout\n\n\n\n\nprofile.Rout\n\n\n\n\nregression.Rout\n\n\n\n\nrlm.Rout\n\n\n\n\nscripts.Rout\n\n\n\n\nClass+Meth.Rout\n\n\n\n\nSimple.Rout\n\n\n\n\nabIndex-tsts.Rout\n\n\n\n\nbase-matrix-fun.Rout\n\n\n\n\nbind.Rout\n\n\n\n\ndg_Matrix.Rout\n\n\n\n\ndpo-test.Rout\n\n\n\n\ndtpMatrix.Rout\n\n\n\n\nfactorizing.Rout\n\n\n\n\ngroup-methods.Rout\n\n\n\n\nindexing.Rout\n\n\n\n\nmatprod.Rout\n\n\n\n\nmatr-exp.Rout\n\n\n\n\nother-pkgs.Rout\n\n\n\n\npacked-unpacked.Rout\n\n\n\n\nspModel.matrix.Rout\n\n\n\n\nsymmDN.Rout\n\n\n\n\nvalidObj.Rout\n\n\n\n\nwrite-read.Rout\n\n\n\n\nparallel-censboot.Rout\n\n\n\n\nagnes-ex.Rout\n\n\n\n\nclara-NAs.Rout\n\n\n\n\nclara-ex.Rout\n\n\n\n\nclara-gower.Rout\n\n\n\n\nclara.Rout\n\n\n\n\nclusplot-out.Rout\n\n\n\n\ndaisy-ex.Rout\n\n\n\n\ndiana-boots.Rout\n\n\n\n\ndiana-ex.Rout\n\n\n\n\nellipsoid-ex.Rout\n\n\n\n\nfanny-ex.Rout\n\n\n\n\nmona.Rout\n\n\n\n\npam.Rout\n\n\n\n\nsilhouette-default.Rout\n\n\n\n\nsweep-ex.Rout\n\n\n\n\ntests.Rout\n\n\n\n\nS3.Rout\n\n\n\n\narff.Rout\n\n\n\n\ndownload.Rout\n\n\n\n\nminitab.Rout\n\n\n\n\nmval_bug.Rout\n\n\n\n\noctave.Rout\n\n\n\n\nsas.Rout\n\n\n\n\nspss.Rout\n\n\n\n\nstata.Rout\n\n\n\n\ntestEmpty.Rout\n\n\n\n\nwriteForeignSPSS.Rout\n\n\n\n\nxport.Rout\n\n\n\n\nMASSch04.Rout\n\n\n\n\nauto-key.Rout\n\n\n\n\nbarchart-width.Rout\n\n\n\n\ncall.Rout\n\n\n\n\ncolorkey-title.Rout\n\n\n\n\ndataframe-methods.Rout\n\n\n\n\ndates.Rout\n\n\n\n\ndotplotscoping.Rout\n\n\n\n\nfontsize.Rout\n\n\n\n\nlevelplot.Rout\n\n\n\n\nscales.Rout\n\n\n\n\nshade-wireframe.Rout\n\n\n\n\nsummary.Rout\n\n\n\n\ntemp.Rout\n\n\n\n\ntest.Rout\n\n\n\n\nwireframe.Rout\n\n\n\n\nanova.gls.Rout\n\n\n\n\naugPred_lab.Rout\n\n\n\n\naugPredmissing.Rout\n\n\n\n\ncoef.Rout\n\n\n\n\ncontrMat.Rout\n\n\n\n\ncorFactor.Rout\n\n\n\n\ndata.frame.Rout\n\n\n\n\ndeparse.Rout\n\n\n\n\ndeviance.Rout\n\n\n\n\nfitted.Rout\n\n\n\n\ngetData.Rout\n\n\n\n\ngetVarCov.Rout\n\n\n\n\ngls.Rout\n\n\n\n\ngnls-ch8.Rout\n\n\n\n\nlmList.Rout\n\n\n\n\nlme.Rout\n\n\n\n\nmissing.Rout\n\n\n\n\nnlme.Rout\n\n\n\n\nnlme2.Rout\n\n\n\n\npredict.lme.Rout\n\n\n\n\nscoping.Rout\n\n\n\n\nsigma-fixed-etc.Rout\n\n\n\n\nupdateLme.Rout\n\n\n\n\nvarConstProp.Rout\n\n\n\n\nvarIdent.Rout\n\n\n\n\nbackticks.Rout\n\n\n\n\ncost.Rout\n\n\n\n\ncptest.Rout\n\n\n\n\nminus_in_formula.Rout\n\n\n\n\npriors.Rout\n\n\n\n\nrescale.Rout\n\n\n\n\ntestall.Rout\n\n\n\n\ntreble.Rout\n\n\n\n\ntreble2.Rout\n\n\n\n\ntreble3.Rout\n\n\n\n\ntreble4.Rout\n\n\n\n\nusersplits.Rout\n\n\n\n\nxpred1.Rout\n\n\n\n\nxpred2.Rout\n\n\n\n\naareg.Rout\n\n\n\n\nanova.Rout\n\n\n\n\nbladder.Rout\n\n\n\n\nbook1.Rout\n\n\n\n\nbook2.Rout\n\n\n\n\nbook3.Rout\n\n\n\n\nbook4.Rout\n\n\n\n\nbook5.Rout\n\n\n\n\nbook6.Rout\n\n\n\n\nbook7.Rout\n\n\n\n\nbrier.Rout\n\n\n\n\ncancer.Rout\n\n\n\n\ncheckSurv2.Rout\n\n\n\n\nclogit.Rout\n\n\n\n\nconcordance.Rout\n\n\n\n\nconcordance2.Rout\n\n\n\n\nconcordance3.Rout\n\n\n\n\ncounting.Rout\n\n\n\n\ncoxsurv.Rout\n\n\n\n\ncoxsurv2.Rout\n\n\n\n\ncoxsurv3.Rout\n\n\n\n\ncoxsurv4.Rout\n\n\n\n\ncoxsurv5.Rout\n\n\n\n\ncoxsurv6.Rout\n\n\n\n\ndetail.Rout\n\n\n\n\ndifftest.Rout\n\n\n\n\ndoaml.Rout\n\n\n\n\ndoweight.Rout\n\n\n\n\ndropspecial.Rout\n\n\n\n\nexpected.Rout\n\n\n\n\nexpected2.Rout\n\n\n\n\nfactor.Rout\n\n\n\n\nfactor2.Rout\n\n\n\n\nfinegray.Rout\n\n\n\n\nfr_cancer.Rout\n\n\n\n\nfr_kidney.Rout\n\n\n\n\nfr_lung.Rout\n\n\n\n\nfr_ovarian.Rout\n\n\n\n\nfr_rat1.Rout\n\n\n\n\nfr_resid.Rout\n\n\n\n\nfr_simple.Rout\n\n\n\n\nfrailty.Rout\n\n\n\n\nfrank.Rout\n\n\n\n\ninfcox.Rout\n\n\n\n\njasa.Rout\n\n\n\n\nmodel.matrix.Rout\n\n\n\n\nmstate.Rout\n\n\n\n\nmstrata.Rout\n\n\n\n\nmulti2.Rout\n\n\n\n\nmulti3.Rout\n\n\n\n\nmultistate.Rout\n\n\n\n\nneardate.Rout\n\n\n\n\nnested.Rout\n\n\n\n\nnsk.Rout\n\n\n\n\novarian.Rout\n\n\n\n\noverlap.Rout\n\n\n\n\nprednew.Rout\n\n\n\n\npseudo.Rout\n\n\n\n\npspline.Rout\n\n\n\n\npyear.Rout\n\n\n\n\nquantile.Rout\n\n\n\n\nr_lung.Rout\n\n\n\n\nr_resid.Rout\n\n\n\n\nr_sas.Rout\n\n\n\n\nr_scale.Rout\n\n\n\n\nr_stanford.Rout\n\n\n\n\nr_strata.Rout\n\n\n\n\nr_tdist.Rout\n\n\n\n\nr_user.Rout\n\n\n\n\nratetable.Rout\n\n\n\n\nresidsf.Rout\n\n\n\n\nroyston.Rout\n\n\n\n\nrttright.Rout\n\n\n\n\nsingtest.Rout\n\n\n\n\nstrata2.Rout\n\n\n\n\nstratatest.Rout\n\n\n\n\nsummary_survfit.Rout\n\n\n\n\nsurv.Rout\n\n\n\n\nsurvSplit.Rout\n\n\n\n\nsurvcheck.Rout\n\n\n\n\nsurvfit1.Rout\n\n\n\n\nsurvfit2.Rout\n\n\n\n\nsurvreg1.Rout\n\n\n\n\nsurvreg2.Rout\n\n\n\n\nsurvtest.Rout\n\n\n\n\ntestci.Rout\n\n\n\n\ntestci2.Rout\n\n\n\n\ntestnull.Rout\n\n\n\n\ntestreg.Rout\n\n\n\n\ntiedtime.Rout\n\n\n\n\ntmerge.Rout\n\n\n\n\ntmerge2.Rout\n\n\n\n\ntmerge3.Rout\n\n\n\n\ntt.Rout\n\n\n\n\ntt2.Rout\n\n\n\n\nturnbull.Rout\n\n\n\n\nupdate.Rout\n\n\n\n\nyates0.Rout\n\n\n\n\nyates1.Rout\n\n\n\n\nyates2.Rout\n\n\n\n\nzph.Rout\n\n\n\n\nbkfe.Rout\n\n\n\n\nlocpoly.Rout\n\n\n\n\nconfint.Rout\n\n\n\n\ncov.mcd.Rout\n\n\n\n\nfitdistr.Rout\n\n\n\n\nglm.nb.Rout\n\n\n\n\nglmmPQL.Rout\n\n\n\n\nhubers.Rout\n\n\n\n\nlme.Rout\n\n\n\n\nloglm.Rout\n\n\n\n\npolr.Rout\n\n\n\n\nprofile.Rout\n\n\n\n\nregression.Rout\n\n\n\n\nrlm.Rout\n\n\n\n\nscripts.Rout\n\n\n\n\nClass+Meth.Rout\n\n\n\n\nSimple.Rout\n\n\n\n\nabIndex-tsts.Rout\n\n\n\n\nbase-matrix-fun.Rout\n\n\n\n\nbind.Rout\n\n\n\n\ndg_Matrix.Rout\n\n\n\n\ndpo-test.Rout\n\n\n\n\ndtpMatrix.Rout\n\n\n\n\nfactorizing.Rout\n\n\n\n\ngroup-methods.Rout\n\n\n\n\nindexing.Rout\n\n\n\n\nmatprod.Rout\n\n\n\n\nmatr-exp.Rout\n\n\n\n\nother-pkgs.Rout\n\n\n\n\npacked-unpacked.Rout\n\n\n\n\nspModel.matrix.Rout\n\n\n\n\nsymmDN.Rout\n\n\n\n\nvalidObj.Rout\n\n\n\n\nwrite-read.Rout\n\n\n\n\nparallel-censboot.Rout\n\n\n\n\nagnes-ex.Rout\n\n\n\n\nclara-NAs.Rout\n\n\n\n\nclara-ex.Rout\n\n\n\n\nclara-gower.Rout\n\n\n\n\nclara.Rout\n\n\n\n\nclusplot-out.Rout\n\n\n\n\ndaisy-ex.Rout\n\n\n\n\ndiana-boots.Rout\n\n\n\n\ndiana-ex.Rout\n\n\n\n\nellipsoid-ex.Rout\n\n\n\n\nfanny-ex.Rout\n\n\n\n\nmona.Rout\n\n\n\n\npam.Rout\n\n\n\n\nsilhouette-default.Rout\n\n\n\n\nsweep-ex.Rout\n\n\n\n\ntests.Rout\n\n\n\n\nS3.Rout\n\n\n\n\narff.Rout\n\n\n\n\ndownload.Rout\n\n\n\n\nminitab.Rout\n\n\n\n\nmval_bug.Rout\n\n\n\n\noctave.Rout\n\n\n\n\nsas.Rout\n\n\n\n\nspss.Rout\n\n\n\n\nstata.Rout\n\n\n\n\ntestEmpty.Rout\n\n\n\n\nwriteForeignSPSS.Rout\n\n\n\n\nxport.Rout\n\n\n\n\nMASSch04.Rout\n\n\n\n\nauto-key.Rout\n\n\n\n\nbarchart-width.Rout\n\n\n\n\ncall.Rout\n\n\n\n\ncolorkey-title.Rout\n\n\n\n\ndataframe-methods.Rout\n\n\n\n\ndates.Rout\n\n\n\n\ndotplotscoping.Rout\n\n\n\n\nfontsize.Rout\n\n\n\n\nlevelplot.Rout\n\n\n\n\nscales.Rout\n\n\n\n\nshade-wireframe.Rout\n\n\n\n\nsummary.Rout\n\n\n\n\ntemp.Rout\n\n\n\n\ntest.Rout\n\n\n\n\nwireframe.Rout\n\n\n\n\nanova.gls.Rout\n\n\n\n\naugPred_lab.Rout\n\n\n\n\naugPredmissing.Rout\n\n\n\n\ncoef.Rout\n\n\n\n\ncontrMat.Rout\n\n\n\n\ncorFactor.Rout\n\n\n\n\ndata.frame.Rout\n\n\n\n\ndeparse.Rout\n\n\n\n\ndeviance.Rout\n\n\n\n\nfitted.Rout\n\n\n\n\ngetData.Rout\n\n\n\n\ngetVarCov.Rout\n\n\n\n\ngls.Rout\n\n\n\n\ngnls-ch8.Rout\n\n\n\n\nlmList.Rout\n\n\n\n\nlme.Rout\n\n\n\n\nmissing.Rout\n\n\n\n\nnlme.Rout\n\n\n\n\nnlme2.Rout\n\n\n\n\npredict.lme.Rout\n\n\n\n\nscoping.Rout\n\n\n\n\nsigma-fixed-etc.Rout\n\n\n\n\nupdateLme.Rout\n\n\n\n\nvarConstProp.Rout\n\n\n\n\nvarIdent.Rout\n\n\n\n\nbackticks.Rout\n\n\n\n\ncost.Rout\n\n\n\n\ncptest.Rout\n\n\n\n\nminus_in_formula.Rout\n\n\n\n\npriors.Rout\n\n\n\n\nrescale.Rout\n\n\n\n\ntestall.Rout\n\n\n\n\ntreble.Rout\n\n\n\n\ntreble2.Rout\n\n\n\n\ntreble3.Rout\n\n\n\n\ntreble4.Rout\n\n\n\n\nusersplits.Rout\n\n\n\n\nxpred1.Rout\n\n\n\n\nxpred2.Rout\n\n\n\n\naareg.Rout\n\n\n\n\nanova.Rout\n\n\n\n\nbladder.Rout\n\n\n\n\nbook1.Rout\n\n\n\n\nbook2.Rout\n\n\n\n\nbook3.Rout\n\n\n\n\nbook4.Rout\n\n\n\n\nbook5.Rout\n\n\n\n\nbook6.Rout\n\n\n\n\nbook7.Rout\n\n\n\n\nbrier.Rout\n\n\n\n\ncancer.Rout\n\n\n\n\ncheckSurv2.Rout\n\n\n\n\nclogit.Rout\n\n\n\n\nconcordance.Rout\n\n\n\n\nconcordance2.Rout\n\n\n\n\nconcordance3.Rout\n\n\n\n\ncounting.Rout\n\n\n\n\ncoxsurv.Rout\n\n\n\n\ncoxsurv2.Rout\n\n\n\n\ncoxsurv3.Rout\n\n\n\n\ncoxsurv4.Rout\n\n\n\n\ncoxsurv5.Rout\n\n\n\n\ncoxsurv6.Rout\n\n\n\n\ndetail.Rout\n\n\n\n\ndifftest.Rout\n\n\n\n\ndoaml.Rout\n\n\n\n\ndoweight.Rout\n\n\n\n\ndropspecial.Rout\n\n\n\n\nexpected.Rout\n\n\n\n\nexpected2.Rout\n\n\n\n\nfactor.Rout\n\n\n\n\nfactor2.Rout\n\n\n\n\nfinegray.Rout\n\n\n\n\nfr_cancer.Rout\n\n\n\n\nfr_kidney.Rout\n\n\n\n\nfr_lung.Rout\n\n\n\n\nfr_ovarian.Rout\n\n\n\n\nfr_rat1.Rout\n\n\n\n\nfr_resid.Rout\n\n\n\n\nfr_simple.Rout\n\n\n\n\nfrailty.Rout\n\n\n\n\nfrank.Rout\n\n\n\n\ninfcox.Rout\n\n\n\n\njasa.Rout\n\n\n\n\nmodel.matrix.Rout\n\n\n\n\nmstate.Rout\n\n\n\n\nmstrata.Rout\n\n\n\n\nmulti2.Rout\n\n\n\n\nmulti3.Rout\n\n\n\n\nmultistate.Rout\n\n\n\n\nneardate.Rout\n\n\n\n\nnested.Rout\n\n\n\n\nnsk.Rout\n\n\n\n\novarian.Rout\n\n\n\n\noverlap.Rout\n\n\n\n\nprednew.Rout\n\n\n\n\npseudo.Rout\n\n\n\n\npspline.Rout\n\n\n\n\npyear.Rout\n\n\n\n\nquantile.Rout\n\n\n\n\nr_lung.Rout\n\n\n\n\nr_resid.Rout\n\n\n\n\nr_sas.Rout\n\n\n\n\nr_scale.Rout\n\n\n\n\nr_stanford.Rout\n\n\n\n\nr_strata.Rout\n\n\n\n\nr_tdist.Rout\n\n\n\n\nr_user.Rout\n\n\n\n\nratetable.Rout\n\n\n\n\nresidsf.Rout\n\n\n\n\nroyston.Rout\n\n\n\n\nrttright.Rout\n\n\n\n\nsingtest.Rout\n\n\n\n\nstrata2.Rout\n\n\n\n\nstratatest.Rout\n\n\n\n\nsummary_survfit.Rout\n\n\n\n\nsurv.Rout\n\n\n\n\nsurvSplit.Rout\n\n\n\n\nsurvcheck.Rout\n\n\n\n\nsurvfit1.Rout\n\n\n\n\nsurvfit2.Rout\n\n\n\n\nsurvreg1.Rout\n\n\n\n\nsurvreg2.Rout\n\n\n\n\nsurvtest.Rout\n\n\n\n\ntestci.Rout\n\n\n\n\ntestci2.Rout\n\n\n\n\ntestnull.Rout\n\n\n\n\ntestreg.Rout\n\n\n\n\ntiedtime.Rout\n\n\n\n\ntmerge.Rout\n\n\n\n\ntmerge2.Rout\n\n\n\n\ntmerge3.Rout\n\n\n\n\ntt.Rout\n\n\n\n\ntt2.Rout\n\n\n\n\nturnbull.Rout\n\n\n\n\nupdate.Rout\n\n\n\n\nyates0.Rout\n\n\n\n\nyates1.Rout\n\n\n\n\nyates2.Rout\n\n\n\n\nzph.Rout\n\n\n\n\n\nNo matching items"
  }
]