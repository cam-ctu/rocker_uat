
R version 4.3.0 (2023-04-21) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "coda"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('coda')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("HPDinterval")
> ### * HPDinterval
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: HPDinterval
> ### Title: Highest Posterior Density intervals
> ### Aliases: HPDinterval HPDinterval.mcmc HPDinterval.mcmc.list
> ### Keywords: univar htest
> 
> ### ** Examples
> 
> data(line)
> HPDinterval(line)
$line1
         lower   upper
alpha 2.125550 3.87634
beta  0.306433 1.51562
sigma 0.326157 1.81988
attr(,"Probability")
[1] 0.95

$line2
         lower   upper
alpha 2.036040 3.97947
beta  0.150777 1.51109
sigma 0.353713 2.24906
attr(,"Probability")
[1] 0.95

> 
> 
> 
> cleanEx()
> nameEx("mcmc.list")
> ### * mcmc.list
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: mcmc.list
> ### Title: Replicated Markov Chain Monte Carlo Objects
> ### Aliases: mcmc.list as.mcmc.list as.mcmc.list.default is.mcmc.list
> ###   plot.mcmc.list
> ### Keywords: ts
> 
> ### ** Examples
> 
> data(line)
> x1 <- line[[1]]                    #Select first chain
> x2 <- line[,1, drop=FALSE]         #Select first var from all chains
> varnames(x2) == varnames(line)[1]  #TRUE
[1] TRUE
> 
> 
> 
> cleanEx()
> nameEx("trellisplots")
> ### * trellisplots
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: trellisplots
> ### Title: Trellis plots for mcmc objects
> ### Aliases: densityplot.mcmc levelplot.mcmc qqmath.mcmc xyplot.mcmc
> ###   densityplot.mcmc.list levelplot.mcmc.list qqmath.mcmc.list
> ###   xyplot.mcmc.list acfplot acfplot.mcmc acfplot.mcmc.list
> ### Keywords: hplot
> 
> ### ** Examples
> 
> data(line)
> 
> ## Not run: 
> ##D xyplot(line)
> ##D xyplot(line[[1]], start = 10)
> ##D densityplot(line, start = 10)
> ##D qqmath(line, start = 10)
> ##D levelplot(line[[2]])
> ##D acfplot(line, outer = TRUE)
> ## End(Not run)
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.093 0.011 0.104 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
