
R version 4.3.0 (2023-04-21) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "deldir"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('deldir')
deldir 1.0-9      Nickname: "Partial Distinction"

     The syntax of deldir() has changed since version 
     0.0-10.  In particular the "dummy points" facility 
     (which was a historical artifact) has been removed. 
     In the current version, 1.0-8, an argument "id" has 
     been added to deldir().  This new argument permits the 
     user to specifier identifiers for points.  The default 
     behaviour is to continue using the indices of the 
     points to identify them.  In view of the fact that 
     point identifiers may be user-supplied, the arguement 
     "number", in plot.deldir() and plot.tile.list(), has 
     had its name changed to "labelPts", and the argument 
     "nex" in plot.deldir() has had its name changed to 
     "lex".  In addition the name of the forth component 
     of the "cmpnt_col" argument in plot.deldir() has been 
     changed from "num" to "labels".  There is a new 
     function getNbrs(), and the function tileInfo() has 
     been modified to include output from getNbrs(). 
     Please consult the help.

> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("cvt")
> ### * cvt
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cvt
> ### Title: Centroidal Voronoi (Dirichlet) tessellation.
> ### Aliases: cvt
> ### Keywords: spatial
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("deldir")
> ### * deldir
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: deldir
> ### Title: Delaunay triangulation and Dirichlet tessellation
> ### Aliases: deldir
> ### Keywords: spatial
> 
> ### ** Examples
> 
> x <- c(2.3,3.0,7.0,1.0,3.0,8.0)
> y <- c(2.3,3.0,2.0,5.0,8.0,9.0)
> 
> # Let deldir() choose the rectangular window.
> dxy1 <- deldir(x,y)
> 
> # User chooses the rectangular window.
> dxy2 <- deldir(x,y,rw=c(0,10,0,10))
> 
> # Put "dummy" points at the corners of the rectangular
> # window, i.e. at (0,0), (10,0), (10,10), and (0,10)
> xx <- c(x,0,10,10,0)
> yy <- c(y,0,0,10,10)
> dxy3 <- deldir(xx,yy,rw=c(0,10,0,10))
> 
> # Plot the triangulation created (but not the tessellation).
> dxy2 <- deldir(x,y,rw=c(0,10,0,10),plot=TRUE,wl="tr")
> 
> # Example of collinearity error.
> ## Not run: 
> ##D     dniP <- deldir(niProperties) # Throws an error
> ## End(Not run)
>     dniP <- deldir(niProperties,eps=1e-8) # No error.
> 
> # Example of using data stored in a data frame.
> dsw  <- deldir(seaweed)
> # Example where "data" is of class "ppp".
> dtoy <- deldir(toyPattern)
> # The "tags", in dtoy$summary$z, are the marks of the toy ppp
> # object which consists of the letters "a","b","c" and "d".
> 
> # Artificial example of tags.
> set.seed(42)
> trees1  <- sample(c("spruce","birch","poplar","shoe"),20,TRUE)
> trees2  <- sample(c("fir","maple","larch","palm"),20,TRUE)
> egDat   <- data.frame(x=runif(20),y=runif(20),species=trees1)
> tagNm   <- "species"
> species <- trees2
> dd1     <- deldir(egDat) # No tags.
> dd2     <- deldir(egDat,z=species)  # Uses trees1 as the tags.
> dd3     <- deldir(egDat,z="species") # Same as dd2.
> dd4     <- deldir(egDat,z=tagNm) # Same as dd2 and dd3.
> spec    <- species
> dd5     <- deldir(egDat,z=spec) # Uses trees2 as the tags.
> 
> # Duncan Murdoch's examples.  The deldir() function was not
> # handling such examples correctly until Duncan kindly set
> # me on the right path.
> set.seed(123)
> dd6 <- deldir(rnorm(32),rnorm(32),rnorm(32))
> #
> x <- cbind(x = 1:10, junk = 11:20)
> y <- 21:30
> z <- 31:40
> d7 <- deldir(x=x, y=y, z=z)
> #
> # print(d7$summary) reveals that x is 1:10, y is 21:30
> # and z is 31:40; x[,"junk"] is ignored as it should be.
> x <- cbind(x = 1:10, "rnorm(10)" = 11:20)
> y <- 21:30
> z <- 41:50
> d8 <- deldir(x=x, y=y, z=rnorm(10))  
> #
> # print(d8$summary) reveals that x is 1:10, y is 21:30 and z is a
> # vector of standard normal values.  Even though x has a column with
> # the name of the z argument i.e. "rnorm(10)" (!!!)  the specified
> # value of z takes precedence over this column (and, as per the usual
> # R syntax) over the object named "z" in the global environment.
> 
> # Artificial example of the use of the "id" argument.
> set.seed(42)
> x  <- runif(50)
> y  <- runif(50)
> ll <- expand.grid(a=letters[1:10],b=letters[1:10])
> aa <- sample(paste0(ll[["a"]],ll[["b"]]),50)
> dxy.wid <- deldir(x,y,id=aa)
> 
> 
> 
> cleanEx()
> nameEx("divchain")
> ### * divchain
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: divchain
> ### Title: Dividing chain.
> ### Aliases: divchain divchain.default divchain.deldir
> ### Keywords: spatial
> 
> ### ** Examples
> 
>    set.seed(42)
>    x   <- runif(50)
>    y   <- runif(50)
>    z   <- factor(kmeans(cbind(x,y),centers=4)$cluster)
>    dc1 <- divchain(x,y,z,rw=c(0,1,0,1))
>    dxy <- deldir(x,y,z=z,rw=c(0,1,0,1))
>    dc2 <- divchain(dxy)
> 
> 
> 
> cleanEx()
> nameEx("duplicatedxy")
> ### * duplicatedxy
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: duplicatedxy
> ### Title: Determine duplicated points.
> ### Aliases: duplicatedxy
> ### Keywords: utilities
> 
> ### ** Examples
> 
>    set.seed(42)
>    xy  <- data.frame(x=runif(20),y=runif(20))
>    # Lots of duplicated points.
>    xy  <- rbind(xy,xy[sample(1:20,20,TRUE),])
>    # Scramble.
>    ii  <- sample(1:40,40)
>    x   <- xy$x[ii]
>    y   <- xy$y[ii]
>    # Unduplicate!
>    iii <- !duplicatedxy(x,y)
>    xu  <- x[iii]
>    yu  <- y[iii]
>    # The i-th tile is determined by (xu[i],yu[i]):
>    dxy <- deldir(xu,yu)
> 
> 
> 
> cleanEx()
> nameEx("getNbrs")
> ### * getNbrs
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: getNbrs
> ### Title: List Delaunay neighbours.
> ### Aliases: getNbrs
> ### Keywords: spatial
> 
> ### ** Examples
> 
> set.seed(42)
> x <- runif(60)
> y <- runif(60)
> dxy <- deldir(x,y,rw=c(0,1,0,1))
> nbrs <- getNbrs(dxy,interior=c(0.2,0.8,0.2,0.8))
> nbrs[["14"]] # Correct.
NULL
> nbrs[[14]]   # Incorrect.
[1]  6 15 27 33 19
> names(nbrs)[14] # The result is 42.
[1] "pt.42"
> # Thus nbrs[[14]] actually gives the Delaunay neighbours of point 42.
> 
> # Demonstrate that neighbours can have discontiguous clipped tiles.
> if(require(polyclip)) {
+     x <- c(0.38,0.44,0.04,0.97,0.43,0.96,0.89,0.64,0.97,0.62,0.33,0.35,
+            0.40,0.78,0.04,0.75,0.68,0.17,0.26,0.51)
+     y <- c(0.68,0.98,0.76,0.57,0.85,0.19,0.27,0.83,0.69,0.24,0.04,0.14,
+            0.22,0.48,0.20,0.72,0.01,0.38,0.51,0.00)
+     CP <- list(x=c(0.72,0.93,0.76,0.61,-0.03,-0.04,0.41),
+                y=c(0.46,0.76,0.94,1.03,1.01,0.37,0.31))
+     dxy <- deldir(x,y,rw=c(0,1,0,1))
+     TL <- tile.list(dxy)
+     plot(TL,labelPts=TRUE)
+     plot(TL[16],clipp=CP,fillcol="orange",labelPts=TRUE,add=TRUE)
+     polygon(CP,border="red")
+     nbrs <- getNbrs(dxy,interior=CP) # Tiles are clipped to CP.
+ # Note that point 14 is a neighbour of point 16, even though their
+ # clipped tiles do not meet.
+ }
Loading required package: polyclip
polyclip 1.10-4 built from Clipper C++ version 6.4.0
> 
> 
> 
> cleanEx()

detaching ‘package:polyclip’

> nameEx("grapherXmpl")
> ### * grapherXmpl
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: grapherXmpl
> ### Title: grapherXmpl
> ### Aliases: grapherXmpl
> ### Keywords: datasets
> 
> ### ** Examples
> 
> dgX <- deldir(grapherXmpl) # Now works!!!`
> 
> 
> 
> cleanEx()
> nameEx("lawSummary")
> ### * lawSummary
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: lawSummary
> ### Title: Produce a Lewis-Aboav-Weaire summary of a tessellation.
> ### Aliases: lawSummary
> ### Keywords: spatial
> 
> ### ** Examples
> 
> # A random pattern:
> set.seed(42)
> xy1   <- data.frame(x=runif(400,0,20),y=runif(400,0,20))
> dxy1  <- deldir(xy1)
> ldxy1 <- lawSummary(dxy1)
> tl1   <- tile.list(dxy1)
> plot(0,0,type="n",xlim=c(-2,35),ylim=c(0,20),asp=1,xlab="x",ylab="y",bty="l")
> plot(tl1,showpoints=FALSE,add=TRUE)
> points(xy1[attr(ldxy1,"i1"),],pch=20,col="yellow")
> points(xy1[attr(ldxy1,"i2"),],pch=20,col="blue")
> points(xy1[attr(ldxy1,"i3"),],pch=20,col="green")
> points(xy1[attr(ldxy1,"i.kept"),],pch=20,col="red")
> legend("right",pch=20,col=c("yellow","blue","green","red"),
+        legend=c("layer 1","layer 2","layer 3","interior"))
> 
> # A highly structured pattern (example due to Kai Xu):
> set.seed(115)
> x  <- c(rep(1:20,10),rep((1:20)+0.5,10))
> y  <- c(rep(1:10,each=20),rep((1:10)+0.5,each=20))*sqrt(3)
> a  <- runif(400,0,2*pi)
> b  <- runif(400,-1,1)
> x  <- x+0.1*cos(a)*b
> y  <- y+0.1*sin(a)*b
> xy2 <- data.frame(x,y)
> dxy2  <- deldir(xy2)
> ldxy2 <- lawSummary(dxy2)
> tl2   <- tile.list(dxy2)
> plot(0,0,type="n",xlim=c(-2,35),ylim=c(0,20),asp=1,xlab="x",ylab="y",bty="l")
> plot(tl2,showpoints=FALSE,add=TRUE)
> points(xy2[attr(ldxy2,"i1"),],pch=20,col="yellow")
> points(xy2[attr(ldxy2,"i2"),],pch=20,col="blue")
> points(xy2[attr(ldxy2,"i3"),],pch=20,col="green")
> points(xy2[attr(ldxy2,"i.kept"),],pch=20,col="red")
> legend("right",pch=20,col=c("yellow","blue","green","red"),
+        legend=c("layer 1","layer 2","layer 3","interior"))
> 
> 
> 
> 
> cleanEx()
> nameEx("niProperties")
> ### * niProperties
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: niProperties
> ### Title: Northern Ireland properties.
> ### Aliases: niProperties
> ### Keywords: datasets
> 
> ### ** Examples
> 
> # data(niProperties)
> # It is unnecessary to use \code{data} since \code{niProperties} is
> # a "first class object".  It is "lazily loaded".
> plot(niProperties)
> 
> 
> 
> cleanEx()
> nameEx("plot.deldir")
> ### * plot.deldir
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: plot.deldir
> ### Title: Plot objects produced by deldir
> ### Aliases: plot.deldir
> ### Keywords: hplot
> 
> ### ** Examples
> 
> x <- c(2.3,3.0,7.0,1.0,3.0,8.0) + 0.5
> y <- c(2.3,3.0,2.0,5.0,8.0,9.0) + 0.5
> x <- c(x,1,10,10,1)
> y <- c(y,1,1,10,10)
> dxy <- deldir(x,y,rw=c(0,11,0,11))
> plot(dxy)
> 
> # Plots the tessellation, but does not save the results:
> deldir(x,y,rw=c(0,11,0,11),plot=TRUE,
+        wl="tess",cmpnt_col=c(1,1,2,3,4),labelPts=TRUE)
> 
> # Plots the triangulation, but not the tessellation or the points,
> # and saves the returned structure:
> 
> dxy <- deldir(x,y,rw=c(0,11,0,11),plot=TRUE,wl="triang",wp="none")
Warning in (function (x0, y0, x1 = x0, y1 = y0, col = par("fg"), lty = par("lty"),  :
  "wp" is not a graphical parameter
Warning in plot.xy(xy.coords(x, y), type = type, ...) :
  "wp" is not a graphical parameter
> 
> # Plot everything:
> plot(dxy,cmpnt_col=c("orange","green","red","blue","black"),cmpnt_lty=1,
+      labelPts=TRUE,lex=1.5,pch=c(19,9),showrect=TRUE,axes=TRUE)
> 
> # Complicated example from He Huang:
> # "Linguistic distances".
> vldm <- c(308.298557,592.555483,284.256926,141.421356,449.719913,
+           733.976839,591.141269,282.842712,1.414214,732.562625)
> ldm <- matrix(nrow=5,ncol=5)
> ldm[row(ldm) > col(ldm)]  <- vldm
> ldm[row(ldm) <= col(ldm)] <- 0
> ldm <- (ldm + t(ldm))/2
> rownames(ldm) <- LETTERS[1:5]
> colnames(ldm) <- LETTERS[1:5]
> 
> # Data to be triangulated.
> id <- c("A","B","C","D","E")
> x  <- c(0.5,1,1,1.5,2)
> y  <- c(5.5,3,7,6.5,5)
> dat_Huang <- data.frame(id = id, x = x, y = y)
> 
> # Form the triangulation/tessellation.
> dH <- deldir(dat_Huang)
> 
> # Plot the triangulation with line widths proportional
> # to "linguistic distances".
> all_col <- rainbow(100)
> i       <- pmax(1,round(100*vldm/max(vldm)))
> use_col <- all_col[i]
> ind     <- as.matrix(dH$delsgs[,c("ind1","ind2")])
> lwv <- ldm[ind]
> lwv <- 10*lwv/max(lwv)
> plot(dH,wlines="triang",col=use_col,showpoints=FALSE,
+      lw=lwv,asp=NA)
> with(dH,text(x,y,id,cex=1.5))
> 
> 
> 
> cleanEx()
> nameEx("plot.divchain")
> ### * plot.divchain
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: plot.divchain
> ### Title: Plot a dividing chain.
> ### Aliases: plot.divchain
> ### Keywords: spatial
> 
> ### ** Examples
> 
>    set.seed(42)
>    x   <- runif(50)
>    y   <- runif(50)
>    z   <- factor(kmeans(cbind(x,y),centers=4)$cluster)
>    dc  <- divchain(x,y,z,rw=c(0,1,0,1))
>    plot(dc,lwd=2,col="blue",bty="o")
> 
> 
> 
> cleanEx()
> nameEx("plot.tile.list")
> ### * plot.tile.list
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: plot.tile.list
> ### Title: Plot Dirichlet (Voronoi) tiles
> ### Aliases: plot.tile.list
> ### Keywords: hplot
> 
> ### ** Examples
> 
>   set.seed(42)
>   x <- runif(20)
>   y <- runif(20)
>   z <- deldir(x,y,rw=c(0,1,0,1))
>   w <- tile.list(z)
>   plot(w)
>   ccc <- heat.colors(20) # Or topo.colors(20), or terrain.colors(20)
>                          # or cm.colors(20), or rainbow(20).
>   plot(w,fillcol=ccc,close=TRUE)
>   if(require(polyclip)) {
+      CP  <- list(x=c(0.49,0.35,0.15,0.20,0.35,0.42,
+                      0.43,0.62,0.46,0.63,0.82,0.79),
+                  y=c(0.78,0.86,0.79,0.54,0.58,0.70,
+                      0.51,0.46,0.31,0.20,0.37,0.54))
+      cul <- rainbow(10)[c(1,7,3:6,2,8:10)] # Rearranging colours to improve
+                                            # the contrast between contiguous tiles.
+      plot(w,clipp=CP,showpoints=FALSE,fillcol=cul)
+   }
Loading required package: polyclip
polyclip 1.10-4 built from Clipper C++ version 6.4.0
>   plot(w,labelPts=TRUE,col.lbls="red")
>   plot(w,labelPts=TRUE,col.lbls="red",cex=0.5)
>   plot(w,showpoints=TRUE,labelPts=TRUE,col.pts="green",col.lbls="red")
> 
> 
> 
> cleanEx()

detaching ‘package:polyclip’

> nameEx("plot.triang.list")
> ### * plot.triang.list
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: plot.triang.list
> ### Title: Plot Delaunay triangles
> ### Aliases: plot.triang.list
> ### Keywords: spatial
> 
> ### ** Examples
> 
> set.seed(42)
> x <- runif(20)
> y <- runif(20)
> d <- deldir(x,y)
> ttt <- triang.list(d)
> plot(ttt,border="red",showrect=TRUE,rectcol="green")
> sss <- tile.list(d)
> plot(sss)
> plot(ttt,add=TRUE,border="blue",showrect=TRUE,rectcol="red")
> 
> 
> 
> cleanEx()
> nameEx("print.deldir")
> ### * print.deldir
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: print.deldir
> ### Title: Print some information about a tessellation/triangulation.
> ### Aliases: print.deldir
> ### Keywords: utilities
> 
> ### ** Examples
> 
> set.seed(42)
> x    <- rnorm(200,0,4)
> y    <- rnorm(200,0,4)
> dxy1 <- deldir(x,y)
> dxy2 <- deldir(x,y,rw=c(-12,12,-11,11))
> dxy1

Delaunay triangulation and Dirchlet tessellation
 of 200  points.

Enclosing rectangular window:
[-14.250353,13.085556] x [-12.863529,11.902184] 

Area of rectangular window (total area of
Dirichlet tiles):
676.9933 

Area of convex hull of points (total area of
Delaunay triangles):
331.27 

> dxy2

Delaunay triangulation and Dirchlet tessellation
 of 200  points.

Enclosing rectangular window:
[-12,12] x [-11,11] 

Area of rectangular window (total area of
Dirichlet tiles):
528 

Area of convex hull of points (total area of
Delaunay triangles):
331.27 

> print(dxy1,digits=4)

Delaunay triangulation and Dirchlet tessellation
 of 200  points.

Enclosing rectangular window:
[-14.2504,13.0856] x [-12.8635,11.9022] 

Area of rectangular window (total area of
Dirichlet tiles):
676.9933 

Area of convex hull of points (total area of
Delaunay triangles):
331.27 

> 
> 
> 
> cleanEx()
> nameEx("print.tileInfo")
> ### * print.tileInfo
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: print.tileInfo
> ### Title: Print a summary of tile information.
> ### Aliases: print.tileInfo
> ### Keywords: utilities
> 
> ### ** Examples
> 
> set.seed(179)
> x    <- runif(100)
> y    <- runif(100)
> dxy  <- deldir(x,y,rw=c(0,1,0,1))
> ixy1 <- tileInfo(dxy)
> print(ixy1)

Edge lengths:
=============
point 1:   0.0029 0.0454 0.1076 0.0790 0.0910 
point 2:   0.0270 0.0937 0.0577 0.0128 0.1513 
point 4:   0.0670 0.0349 0.0036 0.0482 0.0456 0.0155 
point 5:   0.1722 0.0327 0.2278 0.2019 
point 6:   0.0252 0.0450 0.0561 0.0488 
point 9:   0.1884 0.0506 0.0943 0.1000 0.1062 0.0262 
           0.0628 
point 10:  0.0458 0.1714 0.0150 0.0468 0.1189 
point 11:  0.0887 0.1041 0.1099 0.0280 0.0525 
point 12:  0.0340 0.0353 0.0947 0.0628 0.0188 0.0934 
           0.0736 
point 13:  0.0026 0.0562 0.0489 0.0903 0.0344 0.0808 
           0.1227 
point 17:  0.0432 0.0478 0.0771 0.0339 0.0150 0.0589 
point 19:  0.0386 0.0931 0.0546 0.0937 
point 21:  0.0530 0.0188 0.0262 0.1476 0.0562 0.1288 
           0.0518 
point 22:  0.0857 0.1246 0.0383 0.1397 
point 23:  0.0209 0.1177 0.0066 0.1312 0.0307 0.0454 
           0.0447 0.0857 
point 24:  0.0469 0.1667 0.1280 0.0472 0.0683 
point 26:  0.0664 0.0315 0.1097 0.0272 0.1004 
point 29:  0.0521 0.1006 0.1004 0.0043 0.1209 
point 30:  0.0195 0.0524 0.1125 0.0982 0.0181 0.0594 
point 31:  0.0685 0.0424 0.0631 0.0353 0.0516 
point 32:  0.1384 0.1976 0.1172 
point 33:  0.0274 0.1640 0.0131 0.0837 0.0429 0.1221 
point 34:  0.0263 0.0585 0.0244 0.0080 0.0806 
point 35:  0.0459 0.0175 0.1058 0.0432 0.0916 
point 36:  0.0837 0.0000 0.0521 0.1399 0.0273 0.1363 
point 38:  0.0343 0.0808 0.0349 0.0683 0.0025 0.1384 
           0.0263 0.0123 0.0564 
point 39:  0.0447 0.0029 0.0955 0.0595 0.0575 0.1246 
point 40:  0.0953 0.0667 0.1050 0.0064 0.1243 
point 41:  0.0906 0.0623 0.1884 0.0947 0.0631 
point 43:  0.0339 0.0348 0.0516 0.0340 0.0733 
point 44:  0.0331 0.0601 0.0175 0.0875 0.0642 0.0131 
           0.0597 0.0263 
point 45:  0.0508 0.0425 0.0459 0.0517 0.0973 0.0768 
point 46:  0.0131 0.0984 0.0958 0.0045 0.1722 0.0120 
           0.0829 
point 47:  0.0307 0.0330 0.1069 0.0564 0.0210 0.1076 
point 49:  0.0482 0.0414 0.0768 0.0126 0.0560 
point 50:  0.0501 0.0273 0.1079 0.0049 0.1243 0.1242 
           0.1185 0.0200 
point 51:  0.0516 0.0288 0.0120 0.2019 0.0088 0.0718 
           0.1667 
point 52:  0.0651 0.1288 0.0026 0.0763 0.0330 0.1312 
point 53:  0.0502 0.0316 0.0934 0.0530 0.0830 0.0931 
point 54:  0.1000 0.1236 0.0638 0.0360 0.0630 
point 56:  0.0210 0.0123 0.0961 0.0289 0.0790 
point 57:  0.0598 0.0097 0.1458 0.1202 0.1714 
point 58:  0.1166 0.1163 0.0338 0.0478 0.1058 
point 59:  0.0244 0.0181 0.1399 0.0958 0.0263 0.0561 
point 61:  0.0400 0.0331 0.0806 0.0455 0.0638 
point 64:  0.0338 0.0098 0.0748 0.0685 0.0348 0.0771 
point 65:  0.0611 0.1189 0.0379 0.0256 0.0550 
point 67:  0.0594 0.0244 0.0450 0.0667 
point 68:  0.1431 0.1309 0.0906 0.0424 0.0748 
point 70:  0.0603 0.1221 0.1462 0.0200 0.0021 0.0506 
           0.0623 0.1309 
point 72:  0.0429 0.1363 0.0501 0.1462 
point 74:  0.1242 0.0064 0.0292 0.0350 0.0524 0.0816 
           0.0175 0.0790 
point 75:  0.0360 0.0455 0.0080 0.1169 0.0903 0.0922 
point 76:  0.0379 0.0468 0.0385 0.0209 0.1397 0.0154 
           0.0692 0.0975 
point 80:  0.0943 0.0021 0.1185 0.0790 0.0601 0.0400 
           0.1236 
point 81:  0.0208 0.0150 0.0733 0.0736 0.0316 0.1034 
point 83:  0.0577 0.0546 0.0830 0.0518 0.0651 0.0066 
           0.1404 
point 86:  0.0014 0.0128 0.1404 0.1177 0.0385 0.0150 
           0.1202 
point 88:  0.1209 0.0609 0.1079 0.1399 
point 89:  0.0585 0.0597 0.0829 0.0288 0.1256 
point 90:  0.0763 0.1227 0.0343 0.1069 
point 93:  0.0028 0.0488 0.0263 0.0984 0.0642 
point 94:  0.1062 0.0630 0.0922 0.0489 0.1476 
point 96:  0.0095 0.1034 0.0502 0.0386 0.0270 0.0116 
           0.1099 
point 97:  0.0816 0.0195 0.0667 0.0252 0.0028 0.0875 
point 98:  0.0244 0.1256 0.0516 0.0469 0.0349 0.0344 
           0.1169 
point 99:  0.0320 0.0063 0.0517 0.0916 0.0589 0.0208 
           0.0095 0.1041 
point 100: 0.0280 0.0116 0.1513 0.0014 0.1458 0.1696 

Table of edge counts:
=====================

    3  4  5  6  7  8  9 
    1  8 24 16 11  7  1 

Tile areas:
===========

  pt.1   pt.2   pt.4   pt.5   pt.6   pt.9  pt.10  pt.11  pt.12  pt.13  pt.17 
0.0061 0.0048 0.0028 0.0205 0.0016 0.0222 0.0054 0.0089 0.0111 0.0116 0.0045 
 pt.19  pt.21  pt.22  pt.23  pt.24  pt.26  pt.29  pt.30  pt.31  pt.32  pt.33 
0.0043 0.0147 0.0078 0.0152 0.0116 0.0061 0.0073 0.0080 0.0045 0.0080 0.0116 
 pt.34  pt.35  pt.36  pt.38  pt.39  pt.40  pt.41  pt.43  pt.44  pt.45  pt.46 
0.0019 0.0053 0.0075 0.0133 0.0089 0.0096 0.0144 0.0032 0.0084 0.0090 0.0126 
 pt.47  pt.49  pt.50  pt.51  pt.52  pt.53  pt.54  pt.56  pt.57  pt.58  pt.59 
0.0073 0.0034 0.0216 0.0133 0.0117 0.0106 0.0093 0.0025 0.0114 0.0110 0.0063 
 pt.61  pt.64  pt.65  pt.67  pt.68  pt.70  pt.72  pt.74  pt.75  pt.76  pt.80 
0.0041 0.0055 0.0044 0.0019 0.0142 0.0193 0.0060 0.0122 0.0090 0.0140 0.0168 
 pt.81  pt.83  pt.86  pt.88  pt.89  pt.90  pt.93  pt.94  pt.96  pt.97  pt.98 
0.0059 0.0128 0.0114 0.0107 0.0073 0.0061 0.0027 0.0129 0.0073 0.0048 0.0120 
 pt.99 pt.100 
0.0088 0.0139 


Tile perimeters:
================

  pt.1   pt.2   pt.4   pt.5   pt.6   pt.9  pt.10  pt.11  pt.12  pt.13  pt.17 
0.3260 0.3425 0.2148 0.6346 0.1751 0.6284 0.3980 0.3832 0.4124 0.4357 0.2760 
 pt.19  pt.21  pt.22  pt.23  pt.24  pt.26  pt.29  pt.30  pt.31  pt.32  pt.33 
0.2800 0.4823 0.3883 0.4830 0.4571 0.3352 0.3784 0.3602 0.2609 0.4533 0.4531 
 pt.34  pt.35  pt.36  pt.38  pt.39  pt.40  pt.41  pt.43  pt.44  pt.45  pt.46 
0.1978 0.3040 0.4395 0.4542 0.3848 0.3976 0.4990 0.2276 0.3615 0.3650 0.4789 
 pt.47  pt.49  pt.50  pt.51  pt.52  pt.53  pt.54  pt.56  pt.57  pt.58  pt.59 
0.3556 0.2350 0.5773 0.5415 0.4370 0.4043 0.3865 0.2374 0.5070 0.4203 0.3608 
 pt.61  pt.64  pt.65  pt.67  pt.68  pt.70  pt.72  pt.74  pt.75  pt.76  pt.80 
0.2630 0.2988 0.2984 0.1957 0.4817 0.5945 0.3755 0.4252 0.3888 0.4659 0.5177 
 pt.81  pt.83  pt.86  pt.88  pt.89  pt.90  pt.93  pt.94  pt.96  pt.97  pt.98 
0.3177 0.4592 0.4461 0.4296 0.3554 0.3402 0.2405 0.4579 0.3503 0.2833 0.4346 
 pt.99 pt.100 
0.3750 0.5078 


Delaunay neighbours of tile centres:
=====================================

point 1 has neighbours: 3 47 56 39 23
point 2 has neighbours: 83 86 96 19 100
point 4 has neighbours: 8 15 18 49 63 95
point 5 has neighbours: 27 51 46 66
point 6 has neighbours: 59 67 93 97
point 9 has neighbours: 21 94 54 80 12 41 70
point 10 has neighbours: 57 65 76 86 87
point 11 has neighbours: 96 14 25 100 99
point 12 has neighbours: 21 9 31 41 43 53 81
point 13 has neighbours: 38 21 52 90 94 75 98
point 17 has neighbours: 43 64 81 99 35 58
point 19 has neighbours: 83 53 96 2
point 21 has neighbours: 83 13 52 94 9 12 53
point 22 has neighbours: 28 39 76 23
point 23 has neighbours: 1 47 22 39 76 83 86 52
point 24 has neighbours: 51 62 85 38 98
point 26 has neighbours: 29 71 73 79 92
point 29 has neighbours: 36 26 71 88 92
point 30 has neighbours: 59 66 67 97 48 74
point 31 has neighbours: 12 41 43 64 68
point 32 has neighbours: 62 38 55
point 33 has neighbours: 91 16 36 70 72 92
point 34 has neighbours: 44 61 75 89 98
point 35 has neighbours: 45 82 99 17 58
point 36 has neighbours: 50 33 72 29 88 92
point 38 has neighbours: 24 62 32 47 55 56 13 90 98
point 39 has neighbours: 1 3 20 22 28 23
point 40 has neighbours: 50 60 74 84 71
point 41 has neighbours: 9 12 31 68 70
point 43 has neighbours: 12 31 64 81 17
point 44 has neighbours: 34 61 80 89 46 93 97 74
point 45 has neighbours: 8 49 77 82 99 35
point 46 has neighbours: 5 51 44 89 59 66 93
point 47 has neighbours: 1 38 56 23 52 90
point 49 has neighbours: 4 8 18 45 77
point 50 has neighbours: 80 40 74 36 70 72 71 88
point 51 has neighbours: 5 27 24 85 89 98 46
point 52 has neighbours: 47 83 13 21 23 90
point 53 has neighbours: 83 21 12 81 96 19
point 54 has neighbours: 94 61 75 80 9
point 56 has neighbours: 1 3 38 47 55
point 57 has neighbours: 10 86 87 14 100
point 58 has neighbours: 64 82 17 35 91
point 59 has neighbours: 6 30 46 66 67 93
point 61 has neighbours: 34 44 54 75 80
point 64 has neighbours: 31 43 17 58 68 91
point 65 has neighbours: 10 42 76 78 87
point 67 has neighbours: 6 30 59 97
point 68 has neighbours: 31 41 64 91 70
point 70 has neighbours: 80 50 9 41 68 91 33 72
point 72 has neighbours: 50 33 36 70
point 74 has neighbours: 44 80 30 97 40 48 50 60
point 75 has neighbours: 13 94 34 54 61 98
point 76 has neighbours: 22 28 37 10 65 78 86 23
point 80 has neighbours: 44 54 61 50 74 9 70
point 81 has neighbours: 12 43 53 96 99 17
point 83 has neighbours: 86 21 23 52 53 2 19
point 86 has neighbours: 10 57 76 83 23 2 100
point 88 has neighbours: 50 36 29 71
point 89 has neighbours: 51 34 44 98 46
point 90 has neighbours: 38 47 13 52
point 93 has neighbours: 44 6 46 59 97
point 94 has neighbours: 13 21 54 75 9
point 96 has neighbours: 53 81 2 11 19 100 99
point 97 has neighbours: 44 6 30 67 93 74
point 98 has neighbours: 24 51 38 13 34 75 89
point 99 has neighbours: 81 96 11 25 45 77 17 35
point 100 has neighbours: 57 86 96 2 11 14

> ixy2 <- tileInfo(dxy,bndry=TRUE)
> print(ixy2)

Edge lengths:
=============
point 1:   0.0029 0.0454 0.1076 0.0790 0.0910 
point 2:   0.0270 0.0937 0.0577 0.0128 0.1513 
point 3:   0.0955 0.0910 0.0289 0.1108 0.0762 0.1338 
point 4:   0.0670 0.0349 0.0036 0.0482 0.0456 0.0155 
point 5:   0.1722 0.0327 0.2278 0.2019 
point 6:   0.0252 0.0450 0.0561 0.0488 
point 7:   0.1319 0.1118 0.0996 
point 8:   0.0312 0.0922 0.0508 0.0414 0.0036 0.0670 
point 9:   0.1884 0.0506 0.0943 0.1000 0.1062 0.0262 
           0.0628 
point 10:  0.0458 0.1714 0.0150 0.0468 0.1189 
point 11:  0.0887 0.1041 0.1099 0.0280 0.0525 
point 12:  0.0340 0.0353 0.0947 0.0628 0.0188 0.0934 
           0.0736 
point 13:  0.0026 0.0562 0.0489 0.0903 0.0344 0.0808 
           0.1227 
point 14:  0.1598 0.0525 0.1696 0.0097 0.0119 0.2150 
point 15:  0.0599 0.0670 0.0349 0.0227 
point 16:  0.2404 0.1035 0.1640 0.0815 
point 17:  0.0432 0.0478 0.0771 0.0339 0.0150 0.0589 
point 18:  0.0456 0.0560 0.1021 0.0549 0.0866 
point 19:  0.0386 0.0931 0.0546 0.0937 
point 20:  0.0595 0.1338 0.1710 0.1440 
point 21:  0.0530 0.0188 0.0262 0.1476 0.0562 0.1288 
           0.0518 
point 22:  0.0857 0.1246 0.0383 0.1397 
point 23:  0.0209 0.1177 0.0066 0.1312 0.0307 0.0454 
           0.0447 0.0857 
point 24:  0.0469 0.1667 0.1280 0.0472 0.0683 
point 25:  0.0001 0.1807 0.0320 0.0887 0.1598 
point 26:  0.0664 0.0315 0.1097 0.0272 0.1004 
point 27:  0.0714 0.1052 0.1790 0.0735 0.0541 0.0088 
           0.2278 
point 28:  0.0154 0.0383 0.0575 0.1440 0.0459 0.1847 
point 29:  0.0521 0.1006 0.1004 0.0043 0.1209 
point 30:  0.0195 0.0524 0.1125 0.0982 0.0181 0.0594 
point 31:  0.0685 0.0424 0.0631 0.0353 0.0516 
point 32:  0.1384 0.1976 0.1172 
point 33:  0.0274 0.1640 0.0131 0.0837 0.0429 0.1221 
point 34:  0.0263 0.0585 0.0244 0.0080 0.0806 
point 35:  0.0459 0.0175 0.1058 0.0432 0.0916 
point 36:  0.0837 0.0000 0.0521 0.1399 0.0273 0.1363 
point 37:  0.0286 0.0692 0.1847 0.0671 0.2158 
point 38:  0.0343 0.0808 0.0349 0.0683 0.0025 0.1384 
           0.0263 0.0123 0.0564 
point 39:  0.0447 0.0029 0.0955 0.0595 0.0575 0.1246 
point 40:  0.0953 0.0667 0.1050 0.0064 0.1243 
point 41:  0.0906 0.0623 0.1884 0.0947 0.0631 
point 42:  0.0280 0.0550 0.0530 0.0193 
point 43:  0.0339 0.0348 0.0516 0.0340 0.0733 
point 44:  0.0331 0.0601 0.0175 0.0875 0.0642 0.0131 
           0.0597 0.0263 
point 45:  0.0508 0.0425 0.0459 0.0517 0.0973 0.0768 
point 46:  0.0131 0.0984 0.0958 0.0045 0.1722 0.0120 
           0.0829 
point 47:  0.0307 0.0330 0.1069 0.0564 0.0210 0.1076 
point 48:  0.0350 0.1348 0.0956 0.0289 0.1125 
point 49:  0.0482 0.0414 0.0768 0.0126 0.0560 
point 50:  0.0501 0.0273 0.1079 0.0049 0.1243 0.1242 
           0.1185 0.0200 
point 51:  0.0516 0.0288 0.0120 0.2019 0.0088 0.0718 
           0.1667 
point 52:  0.0651 0.1288 0.0026 0.0763 0.0330 0.1312 
point 53:  0.0502 0.0316 0.0934 0.0530 0.0830 0.0931 
point 54:  0.1000 0.1236 0.0638 0.0360 0.0630 
point 55:  0.0961 0.0263 0.1172 0.0240 0.0635 0.1108 
point 56:  0.0210 0.0123 0.0961 0.0289 0.0790 
point 57:  0.0598 0.0097 0.1458 0.1202 0.1714 
point 58:  0.1166 0.1163 0.0338 0.0478 0.1058 
point 59:  0.0244 0.0181 0.1399 0.0958 0.0263 0.0561 
point 60:  0.0647 0.0210 0.1348 0.0292 0.1050 
point 61:  0.0400 0.0331 0.0806 0.0455 0.0638 
point 62:  0.0025 0.0472 0.1100 0.1829 0.0240 0.1976 
point 63:  0.0221 0.0414 0.0155 0.0866 0.1234 
point 64:  0.0338 0.0098 0.0748 0.0685 0.0348 0.0771 
point 65:  0.0611 0.1189 0.0379 0.0256 0.0550 
point 66:  0.0982 0.0289 0.2402 0.0714 0.0327 0.0045 
           0.1399 
point 67:  0.0594 0.0244 0.0450 0.0667 
point 68:  0.1431 0.1309 0.0906 0.0424 0.0748 
point 69:  0.1278 0.1253 0.1790 
point 70:  0.0603 0.1221 0.1462 0.0200 0.0021 0.0506 
           0.0623 0.1309 
point 71:  0.0043 0.0272 0.1251 0.0396 0.0923 0.0953 
           0.0049 0.0609 
point 72:  0.0429 0.1363 0.0501 0.1462 
point 73:  0.0857 0.0616 0.1251 0.1097 
point 74:  0.1242 0.0064 0.0292 0.0350 0.0524 0.0816 
           0.0175 0.0790 
point 75:  0.0360 0.0455 0.0080 0.1169 0.0903 0.0922 
point 76:  0.0379 0.0468 0.0385 0.0209 0.1397 0.0154 
           0.0692 0.0975 
point 77:  0.1021 0.0126 0.0973 0.0063 0.1807 0.0728 
point 78:  0.0530 0.0256 0.0975 0.0286 0.1196 
point 79:  0.0285 0.1475 0.0857 0.0315 0.0121 0.1118 
point 80:  0.0943 0.0021 0.1185 0.0790 0.0601 0.0400 
           0.1236 
point 81:  0.0208 0.0150 0.0733 0.0736 0.0316 0.1034 
point 82:  0.1862 0.0742 0.1166 0.0175 0.0425 0.0922 
point 83:  0.0577 0.0546 0.0830 0.0518 0.0651 0.0066 
           0.1404 
point 84:  0.0923 0.1616 0.0647 0.0667 
point 85:  0.1280 0.0718 0.0541 0.1945 0.1100 
point 86:  0.0014 0.0128 0.1404 0.1177 0.0385 0.0150 
           0.1202 
point 87:  0.0119 0.0598 0.0458 0.0611 0.0280 0.1790 
point 88:  0.1209 0.0609 0.1079 0.1399 
point 89:  0.0585 0.0597 0.0829 0.0288 0.1256 
point 90:  0.0763 0.1227 0.0343 0.1069 
point 91:  0.0742 0.1448 0.0815 0.0274 0.0603 0.1431 
           0.0098 0.1163 
point 92:  0.0662 0.0996 0.0121 0.0664 0.1006 0.0000 
           0.0131 0.1035 
point 93:  0.0028 0.0488 0.0263 0.0984 0.0642 
point 94:  0.1062 0.0630 0.0922 0.0489 0.1476 
point 95:  0.0887 0.0227 0.0670 0.0414 
point 96:  0.0095 0.1034 0.0502 0.0386 0.0270 0.0116 
           0.1099 
point 97:  0.0816 0.0195 0.0667 0.0252 0.0028 0.0875 
point 98:  0.0244 0.1256 0.0516 0.0469 0.0349 0.0344 
           0.1169 
point 99:  0.0320 0.0063 0.0517 0.0916 0.0589 0.0208 
           0.0095 0.1041 
point 100: 0.0280 0.0116 0.1513 0.0014 0.1458 0.1696 

Table of edge counts:
=====================

    3  4  5  6  7  8  9 
    3 15 32 26 13 10  1 

Tile areas:
===========

  pt.1   pt.2   pt.3   pt.4   pt.5   pt.6   pt.7   pt.8   pt.9  pt.10  pt.11 
0.0061 0.0048 0.0165 0.0028 0.0205 0.0016 0.0054 0.0051 0.0222 0.0054 0.0089 
 pt.12  pt.13  pt.14  pt.15  pt.16  pt.17  pt.18  pt.19  pt.20  pt.21  pt.22 
0.0111 0.0116 0.0215 0.0018 0.0169 0.0045 0.0070 0.0043 0.0146 0.0147 0.0078 
 pt.23  pt.24  pt.25  pt.26  pt.27  pt.28  pt.29  pt.30  pt.31  pt.32  pt.33 
0.0152 0.0116 0.0100 0.0061 0.0295 0.0127 0.0073 0.0080 0.0045 0.0080 0.0116 
 pt.34  pt.35  pt.36  pt.37  pt.38  pt.39  pt.40  pt.41  pt.42  pt.43  pt.44 
0.0019 0.0053 0.0075 0.0162 0.0133 0.0089 0.0096 0.0144 0.0013 0.0032 0.0084 
 pt.45  pt.46  pt.47  pt.48  pt.49  pt.50  pt.51  pt.52  pt.53  pt.54  pt.55 
0.0090 0.0126 0.0073 0.0094 0.0034 0.0216 0.0133 0.0117 0.0106 0.0093 0.0114 
 pt.56  pt.57  pt.58  pt.59  pt.60  pt.61  pt.62  pt.63  pt.64  pt.65  pt.66 
0.0025 0.0114 0.0110 0.0063 0.0064 0.0041 0.0160 0.0036 0.0055 0.0044 0.0208 
 pt.67  pt.68  pt.69  pt.70  pt.71  pt.72  pt.73  pt.74  pt.75  pt.76  pt.77 
0.0019 0.0142 0.0080 0.0193 0.0123 0.0060 0.0086 0.0122 0.0090 0.0140 0.0122 
 pt.78  pt.79  pt.80  pt.81  pt.82  pt.83  pt.84  pt.85  pt.86  pt.87  pt.88 
0.0057 0.0099 0.0168 0.0059 0.0162 0.0128 0.0070 0.0170 0.0114 0.0047 0.0107 
 pt.89  pt.90  pt.91  pt.92  pt.93  pt.94  pt.95  pt.96  pt.97  pt.98  pt.99 
0.0073 0.0061 0.0307 0.0142 0.0027 0.0129 0.0023 0.0073 0.0048 0.0120 0.0088 
pt.100 
0.0139 


Tile perimeters:
================

  pt.1   pt.2   pt.3   pt.4   pt.5   pt.6   pt.7   pt.8   pt.9  pt.10  pt.11 
0.3260 0.3425 0.5362 0.2148 0.6346 0.1751 0.3434 0.2864 0.6284 0.3980 0.3832 
 pt.12  pt.13  pt.14  pt.15  pt.16  pt.17  pt.18  pt.19  pt.20  pt.21  pt.22 
0.4124 0.4357 0.6186 0.1845 0.5893 0.2760 0.3453 0.2800 0.5084 0.4823 0.3883 
 pt.23  pt.24  pt.25  pt.26  pt.27  pt.28  pt.29  pt.30  pt.31  pt.32  pt.33 
0.4830 0.4571 0.4613 0.3352 0.7197 0.4857 0.3784 0.3602 0.2609 0.4533 0.4531 
 pt.34  pt.35  pt.36  pt.37  pt.38  pt.39  pt.40  pt.41  pt.42  pt.43  pt.44 
0.1978 0.3040 0.4395 0.5654 0.4542 0.3848 0.3976 0.4990 0.1554 0.2276 0.3615 
 pt.45  pt.46  pt.47  pt.48  pt.49  pt.50  pt.51  pt.52  pt.53  pt.54  pt.55 
0.3650 0.4789 0.3556 0.4068 0.2350 0.5773 0.5415 0.4370 0.4043 0.3865 0.4380 
 pt.56  pt.57  pt.58  pt.59  pt.60  pt.61  pt.62  pt.63  pt.64  pt.65  pt.66 
0.2374 0.5070 0.4203 0.3608 0.3546 0.2630 0.5644 0.2891 0.2988 0.2984 0.6159 
 pt.67  pt.68  pt.69  pt.70  pt.71  pt.72  pt.73  pt.74  pt.75  pt.76  pt.77 
0.1957 0.4817 0.4320 0.5945 0.4495 0.3755 0.3822 0.4252 0.3888 0.4659 0.4718 
 pt.78  pt.79  pt.80  pt.81  pt.82  pt.83  pt.84  pt.85  pt.86  pt.87  pt.88 
0.3243 0.4172 0.5177 0.3177 0.5293 0.4592 0.3853 0.5586 0.4461 0.3856 0.4296 
 pt.89  pt.90  pt.91  pt.92  pt.93  pt.94  pt.95  pt.96  pt.97  pt.98  pt.99 
0.3554 0.3402 0.6574 0.4615 0.2405 0.4579 0.2198 0.3503 0.2833 0.4346 0.3750 
pt.100 
0.5078 


Delaunay neighbours of tile centres:
=====================================

point 1 has neighbours: 3 47 56 39 23
point 2 has neighbours: 83 86 96 19 100
point 3 has neighbours: 1 55 56 20 39
point 4 has neighbours: 8 15 18 49 63 95
point 5 has neighbours: 27 51 46 66
point 6 has neighbours: 59 67 93 97
point 7 has neighbours: 79 92
point 8 has neighbours: 4 15 45 49 82
point 9 has neighbours: 21 94 54 80 12 41 70
point 10 has neighbours: 57 65 76 86 87
point 11 has neighbours: 96 14 25 100 99
point 12 has neighbours: 21 9 31 41 43 53 81
point 13 has neighbours: 38 21 52 90 94 75 98
point 14 has neighbours: 57 87 11 25 100
point 15 has neighbours: 4 8 95
point 16 has neighbours: 91 33 92
point 17 has neighbours: 43 64 81 99 35 58
point 18 has neighbours: 4 49 63 77
point 19 has neighbours: 83 53 96 2
point 20 has neighbours: 3 28 39
point 21 has neighbours: 83 13 52 94 9 12 53
point 22 has neighbours: 28 39 76 23
point 23 has neighbours: 1 47 22 39 76 83 86 52
point 24 has neighbours: 51 62 85 38 98
point 25 has neighbours: 11 14 77 99
point 26 has neighbours: 29 71 73 79 92
point 27 has neighbours: 5 69 51 85 66
point 28 has neighbours: 20 22 37 39 76
point 29 has neighbours: 36 26 71 88 92
point 30 has neighbours: 59 66 67 97 48 74
point 31 has neighbours: 12 41 43 64 68
point 32 has neighbours: 62 38 55
point 33 has neighbours: 91 16 36 70 72 92
point 34 has neighbours: 44 61 75 89 98
point 35 has neighbours: 45 82 99 17 58
point 36 has neighbours: 50 33 72 29 88 92
point 37 has neighbours: 28 76 78
point 38 has neighbours: 24 62 32 47 55 56 13 90 98
point 39 has neighbours: 1 3 20 22 28 23
point 40 has neighbours: 50 60 74 84 71
point 41 has neighbours: 9 12 31 68 70
point 42 has neighbours: 65 78 87
point 43 has neighbours: 12 31 64 81 17
point 44 has neighbours: 34 61 80 89 46 93 97 74
point 45 has neighbours: 8 49 77 82 99 35
point 46 has neighbours: 5 51 44 89 59 66 93
point 47 has neighbours: 1 38 56 23 52 90
point 48 has neighbours: 30 66 60 74
point 49 has neighbours: 4 8 18 45 77
point 50 has neighbours: 80 40 74 36 70 72 71 88
point 51 has neighbours: 5 27 24 85 89 98 46
point 52 has neighbours: 47 83 13 21 23 90
point 53 has neighbours: 83 21 12 81 96 19
point 54 has neighbours: 94 61 75 80 9
point 55 has neighbours: 62 3 32 38 56
point 56 has neighbours: 1 3 38 47 55
point 57 has neighbours: 10 86 87 14 100
point 58 has neighbours: 64 82 17 35 91
point 59 has neighbours: 6 30 46 66 67 93
point 60 has neighbours: 40 48 74 84
point 61 has neighbours: 34 44 54 75 80
point 62 has neighbours: 24 85 32 38 55
point 63 has neighbours: 4 18 95
point 64 has neighbours: 31 43 17 58 68 91
point 65 has neighbours: 10 42 76 78 87
point 66 has neighbours: 5 27 30 46 59 48
point 67 has neighbours: 6 30 59 97
point 68 has neighbours: 31 41 64 91 70
point 69 has neighbours: 27
point 70 has neighbours: 80 50 9 41 68 91 33 72
point 71 has neighbours: 40 50 84 26 29 73 88
point 72 has neighbours: 50 33 36 70
point 73 has neighbours: 26 71 79
point 74 has neighbours: 44 80 30 97 40 48 50 60
point 75 has neighbours: 13 94 34 54 61 98
point 76 has neighbours: 22 28 37 10 65 78 86 23
point 77 has neighbours: 25 18 45 49 99
point 78 has neighbours: 37 42 65 76
point 79 has neighbours: 7 26 73 92
point 80 has neighbours: 44 54 61 50 74 9 70
point 81 has neighbours: 12 43 53 96 99 17
point 82 has neighbours: 8 45 35 58 91
point 83 has neighbours: 86 21 23 52 53 2 19
point 84 has neighbours: 40 60 71
point 85 has neighbours: 27 24 51 62
point 86 has neighbours: 10 57 76 83 23 2 100
point 87 has neighbours: 10 42 57 65 14
point 88 has neighbours: 50 36 29 71
point 89 has neighbours: 51 34 44 98 46
point 90 has neighbours: 38 47 13 52
point 91 has neighbours: 64 82 58 68 16 33 70
point 92 has neighbours: 16 33 36 7 26 29 79
point 93 has neighbours: 44 6 46 59 97
point 94 has neighbours: 13 21 54 75 9
point 95 has neighbours: 4 15 63
point 96 has neighbours: 53 81 2 11 19 100 99
point 97 has neighbours: 44 6 30 67 93 74
point 98 has neighbours: 24 51 38 13 34 75 89
point 99 has neighbours: 81 96 11 25 45 77 17 35
point 100 has neighbours: 57 86 96 2 11 14

> if(require(polyclip)) {
+     CP <- list(x=c(0.49,0.35,0.15,0.20,0.35,0.42,
+                    0.43,0.62,0.46,0.63,0.82,0.79),
+                y=c(0.78,0.86,0.79,0.54,0.58,0.70,
+                    0.51,0.46,0.31,0.20,0.37,0.54))
+     ixy3 <- tileInfo(dxy,clipp=CP)
+     options(width=120) # And enlarge the console window.
+     print(ixy3) # 33 tiles are retained.
+     print(ixy3$perimeters$perComps) # The tiles for points 9 and 94 have
+                                     # been split into two components.
+ }
Loading required package: polyclip
polyclip 1.10-4 built from Clipper C++ version 6.4.0

Edge lengths:
=============
point 1:  0.0390 0.0052 0.0373 
point 2:  0.0059 0.0377 0.0151 0.0435 
point 9:  0.0494 0.0343 0.0596 0.0262 0.0628 0.1671 
          0.1285 0.0380 0.0369 0.0819 
point 12: 0.0684 0.0129 0.0250 0.0353 0.0947 0.0628 
          0.0188 0.0934 
point 13: 0.0026 0.0562 0.0189 0.0724 0.0836 0.0866 
point 19: 0.0377 0.0532 0.0744 0.0546 
point 21: 0.0518 0.0530 0.0188 0.0262 0.0314 0.0592 
          0.1144 0.0193 0.0562 0.1288 
point 23: 0.0781 0.0066 0.1312 0.0273 0.1452 
point 26: 0.0018 0.0053 0.0058 
point 29: 0.0556 0.0058 0.0129 0.0626 
point 31: 0.0080 0.0820 0.0187 0.0631 0.0353 
point 33: 0.0358 0.0519 0.0193 0.0429 0.0432 
point 36: 0.0193 0.0507 0.1235 0.0273 0.1363 
point 41: 0.0631 0.0906 0.0384 0.0278 0.1671 0.0947 
point 43: 0.0080 0.0250 0.0263 
point 47: 0.0263 0.0273 0.0330 0.0728 0.0671 0.0390 
point 50: 0.0200 0.0501 0.0273 0.1079 0.0030 0.1346 
          0.0827 0.1185 
point 52: 0.0651 0.1288 0.0026 0.0763 0.0330 0.1312 
point 53: 0.0744 0.0378 0.0170 0.0316 0.0934 0.0530 
          0.0830 
point 54: 0.0216 0.0253 0.0380 
point 68: 0.0187 0.0787 0.0409 0.0857 0.0906 
point 70: 0.0343 0.0123 0.0384 0.0857 0.0845 0.0432 
          0.1462 0.0200 0.0021 0.0494 
point 71: 0.0384 0.0399 0.0030 
point 72: 0.0429 0.1363 0.0501 0.1462 
point 74: 0.0050 0.0827 0.0392 0.0755 
point 80: 0.0450 0.0343 0.0021 0.1185 0.0050 0.0798 
point 81: 0.0091 0.0691 0.0684 0.0316 
point 83: 0.0467 0.0151 0.0546 0.0830 0.0518 0.0651 
          0.0066 0.1067 
point 86: 0.0825 0.1067 0.0781 0.0462 
point 88: 0.0518 0.0626 0.0231 0.0384 0.1079 0.1235 
point 90: 0.0763 0.0866 0.0466 0.0728 
point 94: 0.0819 0.0751 0.0314 0.0193 0.0325 0.0189 
point 96: 0.0091 0.0170 0.0183 

Table of edge counts:
=====================

    3  4  5  6  7  8 10 
    6  8  5  7  1  3  3 

Tile areas:
===========

  pt.1   pt.2   pt.9  pt.12  pt.13  pt.19  pt.21  pt.23  pt.26  pt.29  pt.31  pt.33  pt.36  pt.41  pt.43  pt.47  pt.50 
0.0001 0.0003 0.0177 0.0111 0.0064 0.0028 0.0119 0.0075 0.0000 0.0005 0.0020 0.0022 0.0058 0.0141 0.0001 0.0043 0.0189 
 pt.52  pt.53  pt.54  pt.68  pt.70  pt.71  pt.72  pt.74  pt.80  pt.81  pt.83  pt.86  pt.88  pt.90  pt.94  pt.96 
0.0117 0.0103 0.0003 0.0052 0.0153 0.0001 0.0060 0.0017 0.0035 0.0014 0.0121 0.0056 0.0103 0.0047 0.0013 0.0001 


Tile perimeters:
================

  pt.1   pt.2   pt.9  pt.12  pt.13  pt.19  pt.21  pt.23  pt.26  pt.29  pt.31  pt.33  pt.36  pt.41  pt.43  pt.47  pt.50 
0.0815 0.1022 0.6846 0.4112 0.3202 0.2199 0.5590 0.3884 0.0129 0.1370 0.2070 0.1931 0.3571 0.4817 0.0592 0.2655 0.5442 
 pt.52  pt.53  pt.54  pt.68  pt.70  pt.71  pt.72  pt.74  pt.80  pt.81  pt.83  pt.86  pt.88  pt.90  pt.94  pt.96 
0.4370 0.3902 0.0849 0.3146 0.5163 0.0814 0.3755 0.2024 0.2847 0.1783 0.4295 0.3134 0.4073 0.2823 0.2592 0.0445 


Delaunay neighbours of tile centres:
=====================================

point 9 has neighbours: 21 94 54 80 12 41 70
point 12 has neighbours: 21 9 31 41 43 53 81
point 13 has neighbours: 38 21 52 90 94 75 98
point 19 has neighbours: 83 53 96 2
point 21 has neighbours: 83 13 52 94 9 12 53
point 23 has neighbours: 1 47 22 39 76 83 86 52
point 33 has neighbours: 91 16 36 70 72 92
point 36 has neighbours: 50 33 72 29 88 92
point 41 has neighbours: 9 12 31 68 70
point 50 has neighbours: 80 40 74 36 70 72 71 88
point 52 has neighbours: 47 83 13 21 23 90
point 53 has neighbours: 83 21 12 81 96 19
point 70 has neighbours: 80 50 9 41 68 91 33 72
point 72 has neighbours: 50 33 36 70
point 83 has neighbours: 86 21 23 52 53 2 19
point 86 has neighbours: 10 57 76 83 23 2 100
point 88 has neighbours: 50 36 29 71
point 90 has neighbours: 38 47 13 52

$pt.1
[1] 0.08147883

$pt.2
[1] 0.1021949

$pt.9
[1] 0.1432715 0.5412919

$pt.12
[1] 0.4112145

$pt.13
[1] 0.3201934

$pt.19
[1] 0.219861

$pt.21
[1] 0.5589993

$pt.23
[1] 0.3883753

$pt.26
[1] 0.01289074

$pt.29
[1] 0.1369739

$pt.31
[1] 0.2070488

$pt.33
[1] 0.1930612

$pt.36
[1] 0.3570848

$pt.41
[1] 0.4816582

$pt.43
[1] 0.05921131

$pt.47
[1] 0.2655484

$pt.50
[1] 0.5441788

$pt.52
[1] 0.4370433

$pt.53
[1] 0.3901958

$pt.54
[1] 0.08488556

$pt.68
[1] 0.3145729

$pt.70
[1] 0.5162717

$pt.71
[1] 0.08135254

$pt.72
[1] 0.3755241

$pt.74
[1] 0.2023652

$pt.80
[1] 0.284689

$pt.81
[1] 0.1783091

$pt.83
[1] 0.4295172

$pt.86
[1] 0.3133689

$pt.88
[1] 0.4072897

$pt.90
[1] 0.2823451

$pt.94
[1] 0.18850193 0.07071162

$pt.96
[1] 0.04446377

> 
> 
> 
> cleanEx()

detaching ‘package:polyclip’

> nameEx("seaweed")
> ### * seaweed
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: seaweed
> ### Title: seaweed
> ### Aliases: seaweed
> ### Keywords: datasets
> 
> ### ** Examples
> 
> # data(seaweed)
> # It is unnecessary to use \code{data} since \code{seaweed} is
> # a "first class object".  It is "lazily loaded".
> 
> dsw <- deldir(seaweed)
> isw <- tileInfo(dsw)
> # Expand the width of the terminal window.
> options(width=120)
> isw

Edge lengths:
=============
point 14:   58.4934  13.0753  61.8038  83.1607   0.2047  39.6474 
point 15:   21.6915  46.5709  35.0228 149.7863  16.7816 125.2687 
point 16:   31.8669  16.3349  64.6221 125.2687 134.7689 
point 17:   22.9973  64.4873  28.0676  11.8685  75.1814  13.0705 
            35.9761 
point 18:   40.9209  69.2501  16.5050  18.6245  82.8958  28.0676 
point 19:   16.7786  35.1574  49.0581  29.5286  41.3222  65.5145 
point 21:   34.6533  67.7963  68.0540  16.5050  50.7867 
point 22:   74.3980  35.9761  73.2818  13.0753  55.3178 
point 23:   23.1315  68.4242  31.8669  28.4507  46.2090  55.3485 
point 24:   17.8555  43.8455  33.9646  28.4146  33.2487  35.0228 
            65.9351 
point 25:   59.6858  43.2262  16.7786  39.4987  37.2698  33.9646 
point 26:   20.0607  33.2196  37.0413  55.3485  34.3970  16.5684 
            67.7963 
point 27:   20.0627  66.1015  50.7867  69.2501  28.7900 
point 28:   13.0176  45.9393  41.3544  21.6915  64.6221  54.2176 
point 30:   56.6996  22.3130  55.3178  58.4934  10.1167  68.6532 
point 31:   51.4113  21.1974  26.7149  65.9351  46.5709  41.3544 
point 32:   27.2978  66.6333  28.7900  40.9209  64.4873  29.2653 
point 33:   58.4198  57.1445  11.8549  49.0581  52.7102 
point 34:   49.1132  55.9668  54.2176  16.3349  68.4242 
point 35:   60.0510  12.4877  52.7102  35.1574  43.2262  17.7419 
point 36:   11.9538  36.4852  65.6868  29.2653  22.9973  74.3980 
            22.3130 
point 37:   35.6228  24.3960  68.6532 134.3241 106.0918 
point 38:    6.1371  42.7893  17.7419  59.6858  43.8455  64.2738 
point 39:   27.2872  47.0564  34.5318  20.0607  34.6533  66.1015 
            21.7229 
point 40:    2.3066  81.9308  51.4113  45.9393  69.6262 
point 41:   58.8566  33.7250  49.1132  23.1315  37.0413  67.6425 
point 42:   53.7347  49.3439  21.7229  20.0627  66.6333  42.2784 
point 43:   29.7414  13.3374  78.2380  38.5660  58.4198  12.4877 
            26.4586 
point 44:   40.8676  15.9493  42.2784  27.2978  65.6868  50.2798 
point 45:   48.8792  26.4586  60.0510  42.7893  52.4841 
point 46:    8.4987  83.9734  69.6262  13.0176  55.9668  33.7250 
point 47:   10.6879  41.3728  44.1702  64.2738  17.8555  26.7149 
            60.6774 
point 48:    3.3677  52.9432   2.1475  67.6425  33.2196  34.5318 
            59.9294 
point 49:   30.4971   0.8106  79.5252  11.9538  56.6996  24.3960 
            68.2406 
point 50:   20.4370  43.4675  48.2585  60.6774  21.1974  81.9308 
point 51:    5.7693  50.1763  59.9294  47.0564  62.1141 
point 52:   62.9338  32.1808  50.2798  36.4852  79.5252 
point 54:   57.2408  62.1141  27.2872  49.3439  46.1072 
point 55:   48.9685  33.5206  35.8950  52.4841   6.1371  44.1702 
point 56:   47.0072  23.1326  68.2406  35.6228  69.8180 
point 58:   53.8808   2.3701  46.1072  53.7347  15.9493  58.1624 
point 59:   36.0994  16.1622  64.2639  29.7414  48.8792  35.8950 
point 60:    1.0477  75.8225  30.6502  20.4370   2.3066  83.9734 
            68.2319 
point 61:    3.7129  50.7779  68.2319   8.4987  58.8566   2.1475 
            74.6377 
point 62:   61.1410  27.5131  58.1624  40.8676  32.1808  13.2499 
point 63:   37.6600  40.8202  48.9685  41.3728  64.0703 
point 64:   51.7161  74.6377  52.9432  60.2134 
point 65:   47.6930  56.9480  49.4528  13.3374  64.2639 
point 66:   26.0397  22.5573  64.0703  10.6879  48.2585  62.9421 
point 67:   37.6339  30.9061  60.2134   3.3677  50.1763  52.7893 
point 68:   32.6998  63.2373  13.2499  62.9338   0.8106  80.3345 
point 69:    1.9947  63.1473  52.7893   5.7693  57.2408   2.3701 
            66.2130 
point 71:   50.0207   4.9302  80.3345  30.4971  23.1326  67.1657 
point 72:   53.5068  32.8670  62.9421  43.4675  30.6502  28.5202 
point 73:   57.8219   0.9087  67.1657  47.0072   0.8376  56.8121 
point 74:   22.3697  45.2086  54.2418  36.0994  33.5206  40.8202 
point 75:   78.1006  66.2130  53.8808  27.5131  34.8062 
point 77:   28.1556  52.9823  13.3586  34.8062  61.1410  63.2373 
point 78:   22.4655  69.8816  28.5202  75.8225  71.7063 
point 79:   21.5934  48.4306  45.8203  10.5617  47.6930  16.1622 
            54.2418 
point 80:   29.7797  26.9790  24.1980  62.3374   3.7129  51.7161 
            30.9061  29.3166 
point 81:   52.4934  31.7900  71.7063   1.0477  50.7779  62.3374 
point 82:   24.8079   6.8839  58.2430  22.3697  37.6600  22.5573 
            64.3492 
point 83:   26.2917  47.7279  20.1925  23.1238  53.5068  69.8816 
point 84:   51.1093  47.4343  29.3166  37.6339  63.1473  29.2755 
point 85:   56.8104  21.4994  64.3492  26.0397  32.8670  23.1238 
point 87:   36.9196  53.9369  57.8219  51.2146  67.6184 
point 88:   55.8991  44.4578  21.5934  45.2086  58.2430 
point 89:    4.8447  74.7463  12.5972  29.2755   1.9947  78.1006 
            13.3586  49.7336 
point 90:   47.3173  67.7020  28.1556  32.6998   4.9302  73.4176 
point 91:   32.0505  24.1576  27.3008  73.4176  50.0207   0.9087 
            53.9369 
point 92:   12.2815  74.0716  49.7336  52.9823  67.7020 
point 93:    3.7524  51.4541  53.5556  11.5051  48.4306  44.4578 
            45.4799 
point 94:   30.3193  64.0443  29.7797  47.4343  56.5373 
point 95:   22.3985   6.2371  64.7874  56.8104  20.1925  61.2132 
point 97:   47.6375  17.4856  56.5373  51.1093  12.5972  50.9281 
point 98:   50.6857  51.4762  52.4934  24.1980  64.5425 
point 100:  32.7038  32.5310  50.9281  74.7463  50.9213 
point 101:  62.8101  61.2132  47.7279  45.7618 
point 102:  11.3590  49.5603  28.8241  45.7618  26.2917  22.4655 
            31.7900  51.4762 
point 103:   5.1194  62.8194  45.4799  55.8991   6.8839  62.2137 
point 104:  33.4760  23.3652  27.5216  64.5425  26.9790  64.0443 
point 105:  31.7854  47.5724  62.2137  24.8079  21.4994  64.7874 
point 106:  47.9144  65.1891  32.0505  36.9196  80.0493 
point 107:  60.3323  45.0768  50.9213   4.8447  74.0716  23.7996 
point 108:  32.6371  58.2326  23.7996  12.2815  47.3173  27.3008 
            65.5512 
point 109:  64.9573  38.2958  22.3985  62.8101  28.8241  28.8338 
point 111:  54.1066  48.0136  65.5512  24.1576  65.1891 
point 112:  44.0058  62.3906  47.6375  32.5310  64.9392 
point 113:  40.7323  58.5302  11.3590  50.6857  27.5216  46.6280 
point 114:  53.5511  32.3794  48.3995  14.5320  51.4541  54.0167 
point 115:   6.1077  45.9183  50.2275  33.4760  30.3193  17.4856 
            62.3906 
point 116:  30.2651  28.4976  54.0167   3.7524  62.8194  61.5369 
point 117:  21.5611  45.3790  42.0621  28.8338  49.5603  58.5302 
point 118:  26.3692  58.4662  10.5743  64.9392  32.7038  45.0768 
            24.2698 
point 119:  44.5578  11.4476  61.5369   5.1194  47.5724  61.6169 
point 120:  11.7637  78.2274  24.2698  60.3323  58.2326  31.7698 
point 121:  55.5987   7.2825  61.6169  31.7854   6.2371  38.2958 
            47.2332 
point 122:  47.6203  26.7254  32.6501  46.6280  23.3652  50.2275 
point 123:   6.1885  76.5295  15.1627  47.2332  64.9573  42.0621 
point 124:  47.5054  38.9658  54.1066  47.9144   2.1472  90.1099 
point 125:  64.0106 102.5034 115.4924  32.3794  13.2392 
point 127:  29.6562  38.3655  13.2392  53.5511  28.4976  58.5414 
point 128:  22.0174  16.8023  81.3074  31.7698  32.6371  48.0136 
            38.9658 
point 129:   2.3768  67.4172  21.5611  40.7323  32.6501  57.2605 
point 130:  45.3558  33.8969  47.6203  45.9183  58.7761 
point 131:   3.8215  62.6054  38.1386  26.3692  78.2274  47.9265 
point 132:  44.6290  20.0465  58.5414  30.2651  11.4476  61.4656 
point 133:  22.6619  52.6647  59.0803   6.1885  45.3790  67.4172 
point 134:  36.3118  13.4240  61.4656  44.5578   7.2825  58.9479 
point 135:  48.1159  22.7343  58.7761   6.1077  44.0058  10.5743 
            70.9028 
point 136:  13.7842  48.4236  15.4103  58.9479  55.5987  15.1627 
            35.8915 
point 137:  42.1838   6.9316  70.9028  58.4662  38.1386  45.8680 
point 138:  13.8359  75.9902  35.8915  76.5295  59.0803 
point 139:  39.0730  19.0133  64.0106  38.3655  57.5288 
point 140:  43.0394  75.2238  47.9265  11.7637  81.3074 
point 141:  38.8079  69.0152  57.2605  26.7254  33.8969 
point 143:   8.6987  83.1614  22.0174  47.5054  47.7636  62.7237 
point 144:   8.7426  54.3012   5.2815  57.5288  29.6562  20.0465 
            46.7421 
point 145:  21.5910  36.4439  20.5969  38.8079  45.3558  22.7343 
            67.8160 
point 146:  61.9279  28.4990  45.8680  62.6054  46.4923 
point 147:  48.1028  50.1497  17.3037  22.6619   2.3768  69.0152 
            20.5969 
point 148:  63.5427  53.4077  13.7842  75.9902  47.1259 
point 149:  27.0422  75.9276  11.6440  43.0394  16.8023  83.1614 
point 150:  16.4827  58.9731  46.7421  44.6290  13.4240  59.7993 
point 151:  27.4034   9.3330  66.0818   3.0853  46.4923   3.8215 
            75.2238  11.6440 
point 152:  10.8918  52.3013  66.5318  39.0730   5.2815  59.0956 
point 153:   6.2473  44.4162  59.7993  36.3118  15.4103  62.6348 
point 154:  51.5738  14.6434  67.8160  48.1159   6.9316  75.2547 
point 155:  19.5897  55.5912  62.6348  48.4236  53.4077 
point 156:  33.8715  26.0551  47.1259  13.8359  52.6647  17.3037 
            61.8567 
point 158:  63.1942   7.2454  75.2547  42.1838  28.4990  33.0756 
point 159:  16.0760  45.0814  59.0956  54.3012  55.0685 
point 160:  10.3401  27.4613  42.0393  33.0756  61.9279   3.0853 
            57.7479 
point 161:  39.8781  28.1111  61.8567  50.1497  35.3668 
point 162:  51.2445  57.7479  66.0818  42.3942 
point 163:  38.7713   8.6281  64.5104  27.4034  75.9276  17.1993 
point 164:  37.6523  35.3668  48.1028  36.4439  79.0750 
point 165:  31.6624  45.1006  55.0685   8.7426  58.9731  45.6327 
point 166:  60.0666  39.6400  19.5897  63.5427  26.0551  42.1339 
point 167:  63.4632  71.9175  17.1993  27.0422   8.6987 104.3155 
point 169:  47.0221  28.1194  45.6327  16.4827  44.4162  56.0881 
point 170:  42.7275  20.8934  36.3824  42.3942   9.3330  64.5104 
point 171:  32.5133  36.7611  23.0908  56.0881   6.2473  55.5912 
            39.6400 
point 172:  22.3538  46.8773  15.7011  79.0750  21.5910  14.6434 
            71.9589 
point 173:  40.6922  62.6822  27.3587  63.1942  42.0393 
point 174:  45.7204  33.3017  42.1339  33.8715  28.1111  49.6613 
point 175:   1.3145  57.4769  64.0143  10.8918  45.0814  56.6073 
point 176:  58.1085  53.7631  71.9589  51.5738   7.2454  27.3587 
point 177:  18.2662  43.2222  62.7076  38.7713  71.9175 
point 178:  23.2216  47.5489  26.1749  49.6613  39.8781  37.6523 
            15.7011 
point 179:  39.1789  27.7516  65.6388  10.3401  51.2445  36.3824 
point 180:  59.1901  56.6073  16.0760  45.1006  45.0751 
point 181:  25.8746  24.5315  54.5813  42.7275   8.6281  62.7076 
point 182:   7.5196  61.8008  23.4593  32.5133  60.0666  33.3017 
            31.8462 
point 183:  52.5080  34.4514  18.0998  58.1085  62.6822  24.8818 
point 184:  35.9214  60.4865  24.8818  40.6922  27.4613  65.6388 
point 185:  20.8140  22.3956  19.3825  20.4639  45.0751  31.6624 
            28.1194  44.4240 
point 186:  51.9216  44.4240  47.0221  23.0908  56.8383 
point 187:  47.4983  63.1981  39.1789  20.8934  54.5813 
point 188:  33.7903 125.8891 108.6178  57.4769  47.0094 
point 190:  24.7502  65.0987  31.8462  45.7204  26.1749  38.0759 
point 191:  60.8760  25.3350  47.0094   1.3145  59.1901  20.4639 
point 192:  19.9926  35.8846  13.1286  56.8383  36.7611  23.4593 
            61.0232 
point 193:  19.9073  29.1617  74.6827  23.2216  46.8773  65.1303 
point 194:  12.4083  57.8033  38.0759  47.5489  74.6827 
point 195:  48.9536  65.1303  22.3538  53.7631  18.0998  59.0094 
point 196:  39.0482  26.3602  52.1256  25.8746  43.2222  69.5431 
point 197:  32.5173  25.6027  61.0232  61.8008  56.5153 
point 198:  15.7770  30.8183  64.0006  14.0292  35.9214  27.7516 
            63.1981 
point 199:  37.0599  69.6936  21.0305  52.5080  60.4865  14.0292 
point 200:  65.5619  60.2808  20.8140  51.9216  13.1286 
point 201:  43.7240  24.7429  56.5153   7.5196  65.0987  35.9762 
point 202:  15.3713  26.8735  25.2128  60.8760  19.3825  64.1257 
point 203:  61.6465  52.8916  15.7770  47.4983  24.5315  52.1256 
point 204:   9.1166  33.3597  36.8164  64.1257  22.3956  60.2808 
point 205:  37.3109   4.9102  58.9154  59.0094  34.4514  21.0305 
            62.6074 
point 206:  60.5664  15.6270  59.1172  33.7903  25.3350  25.2128 
point 207:  57.1741  17.6393  35.9762  24.7502  57.8033  36.1512 
point 209:  20.9544  46.5416   9.1166  65.5619  35.8846  60.8724 
point 210:  61.5271  27.3944  62.6074  69.6936  20.2300 
point 211:   7.4951  43.9822  27.0150  20.2300  37.0599  64.0006 
            44.1586 
point 213:  72.4380  73.6627  19.9073  48.9536  58.9154 
point 214:  37.8947  29.0178  60.8724  19.9926  25.6027  61.3152 
point 215:   6.8550   0.2019  58.3242  36.6481  36.1512  12.4083 
            29.1617  73.6627 
point 216:  43.8481  61.3152  32.5173  24.7429  67.8662 
point 217:  53.7154  60.5844  18.1436  61.6465  26.3602  47.3415 
point 218:  37.1314  55.4563  44.1586  30.8183  52.8916  18.1436 
point 219:  37.8481  33.9820  60.5664  26.8735  62.1127 
point 220:  69.8892   1.8156  67.8662  43.7240  17.6393  41.6132 
point 221:  40.0361  22.2985  29.6166  41.6132  57.1741  36.6481 
point 222:  32.6127  41.6744  62.1127  15.3713  36.8164  46.2205 
point 223:   2.4173  25.1466  55.5800  61.5271  27.0150  67.6848 
point 225:  54.9675  46.2205  33.3597  46.5416  62.0721 
point 226:  59.5005  67.6848  43.9822  63.8216 
point 227:  52.0786   3.1207  63.8216   7.4951  55.4563  50.8145 
point 228:  37.8958  53.8216  54.4796  37.3109  27.3944  55.5800 
point 229:  61.2370  17.0699  62.0721  20.9544  29.0178  60.6568 
point 230:  47.0762   9.6839  50.8145  37.1314  60.5844   2.3001 
            46.7825 
point 231:  73.3649   2.4435  60.6568  37.8947  43.8481   1.8156 
            45.3420 
point 232:  58.4871   2.3001  53.7154 102.7108 108.1106 
point 233:  45.9654  24.9596  65.3472   6.8550  72.4380   4.9102 
            54.4796 
point 234:  52.0742  40.0361  58.3242  75.0460 
point 235:  72.7905   1.9222  45.3420  69.8892  29.6166  46.0926 
point 236:  73.0986  30.9820  49.0025  37.8481  41.6744  25.4586 
point 237:   3.4349  68.3068   6.9236  25.4586  32.6127  54.9675 
            17.0699  33.2783 
point 238:  28.8591  35.5472  21.0765  17.0336  75.0460   0.2019 
            65.3472 
point 239:  17.0336  67.8244  38.2884  46.0926  22.2985  52.0742 
point 240:  48.5378  46.2315  45.9654  53.8216  44.2307 
point 241:   5.8866  50.3500  46.7825  58.4871   8.8536  64.6073 
point 243:   9.4625  46.3944  65.2279   2.4173  59.5005   3.1207 
            55.1721 
point 244:  49.1776  41.1529  44.2307  37.8958  25.1466  65.2279 
point 245:  52.6737  61.5732  73.0986   6.9236  44.2140 
point 246:  31.9189  65.3895  33.2783  61.2370   2.4435  42.9408 
point 247:  64.5859  55.1721  52.0786   9.6839  53.0314 
point 248:  64.4054   5.9651  53.0314  47.0762  50.3500 
point 249:  42.3342  44.4592  42.9408  73.3649   1.9222  55.2394 
point 250:  60.9627  44.2140  68.3068  68.9194 
point 251:   6.6745  75.5532  21.0996  55.2394  72.7905  38.2884 
point 254:  88.3946 104.3233  28.8591  24.9596  46.2315 
point 255: 141.9580   6.6745  67.8244  21.0765 153.7548 

Table of edge counts:
=====================

      4   5   6   7   8 
      6  59 108  41   7 

Tile areas:
===========

   pt.14    pt.15    pt.16    pt.17    pt.18    pt.19    pt.21    pt.22    pt.23    pt.24    pt.25    pt.26    pt.27 
3964.257 7453.351 6962.856 4157.208 4054.701 3782.369 3434.932 3916.421 4337.836 4649.136 3662.815 4839.728 3392.926 
   pt.28    pt.30    pt.31    pt.32    pt.33    pt.34    pt.35    pt.36    pt.37    pt.38    pt.39    pt.40    pt.41 
3903.742 4923.220 4331.757 4480.386 3370.828 3853.577 3234.867 4545.974 7040.508 3607.893 4243.143 3754.668 4991.967 
   pt.42    pt.43    pt.44    pt.45    pt.46    pt.47    pt.48    pt.49    pt.50    pt.51    pt.52    pt.54    pt.55 
4380.260 4285.263 4006.274 3476.919 4329.589 4905.953 4273.215 4774.571 4854.299 3189.164 4330.670 3808.828 3333.434 
   pt.56    pt.58    pt.59    pt.60    pt.61    pt.62    pt.63    pt.64    pt.65    pt.66    pt.67    pt.68    pt.69 
3783.367 3436.992 3610.430 4930.604 4542.360 3645.608 3610.211 3491.716 3445.532 3592.506 3679.402 3910.990 3963.809 
   pt.71    pt.72    pt.73    pt.74    pt.75    pt.77    pt.78    pt.79    pt.80    pt.81    pt.82    pt.83    pt.84 
4098.460 4289.738 3275.470 3788.150 4319.259 4321.118 4460.833 4193.125 4771.015 4874.927 3786.298 3834.157 4411.542 
   pt.85    pt.87    pt.88    pt.89    pt.90    pt.91    pt.92    pt.93    pt.94    pt.95    pt.97    pt.98   pt.100 
3339.423 4396.930 3328.378 4432.976 4151.322 4634.675 4135.499 4652.545 3354.532 3244.962 3663.373 3921.894 3770.027 
  pt.101   pt.102   pt.103   pt.104   pt.105   pt.106   pt.107   pt.108   pt.109   pt.111   pt.112   pt.113   pt.114 
2880.906 5196.337 3587.467 3827.099 4218.974 4186.209 4411.567 4968.872 3901.600 4354.362 4219.455 3738.544 4471.334 
  pt.115   pt.116   pt.117   pt.118   pt.119   pt.120   pt.121   pt.122   pt.123   pt.124   pt.125   pt.127   pt.128 
4110.136 3807.071 4179.186 4806.159 3486.461 4570.563 4147.628 3598.131 4045.248 4845.689 5623.839 3296.652 4997.531 
  pt.129   pt.130   pt.131   pt.132   pt.133   pt.134   pt.135   pt.136   pt.137   pt.138   pt.139   pt.140   pt.141 
3136.510 3585.636 4251.560 3377.407 4236.170 3200.233 4604.380 4079.779 4649.297 4199.604 3038.246 4085.520 3257.742 
  pt.143   pt.144   pt.145   pt.146   pt.147   pt.148   pt.149   pt.150   pt.151   pt.152   pt.153   pt.154   pt.155 
4623.572 3323.020 4491.917 3974.559 3389.094 4080.432 4025.212 3879.547 3719.401 3483.961 3281.378 4503.728 3757.011 
  pt.156   pt.158   pt.159   pt.160   pt.161   pt.162   pt.163   pt.164   pt.165   pt.166   pt.167   pt.169   pt.170 
4414.949 4021.843 3444.713 3736.687 3018.975 2854.076 3320.528 3529.764 4108.928 4309.248 4919.594 3935.943 3066.970 
  pt.171   pt.172   pt.173   pt.174   pt.175   pt.176   pt.177   pt.178   pt.179   pt.180   pt.181   pt.182   pt.183 
4401.981 4806.649 3588.376 3844.178 3557.170 4833.992 3470.153 4063.708 3544.362 3202.469 3141.005 4319.578 4287.619 
  pt.184   pt.185   pt.186   pt.187   pt.188   pt.190   pt.191   pt.192   pt.193   pt.194   pt.195   pt.196   pt.197 
4416.178 3953.716 3305.786 3302.625 6773.472 3666.619 2908.408 4180.664 4357.142 3273.694 4854.241 4463.075 3667.175 
  pt.198   pt.199   pt.200   pt.201   pt.202   pt.203   pt.204   pt.205   pt.206   pt.207   pt.209   pt.210   pt.211 
4290.989 4246.321 2697.788 3604.515 2847.849 4426.922 3311.161 5237.013 3179.733 3535.353 3723.155 3638.433 4127.249 
  pt.213   pt.214   pt.215   pt.216   pt.217   pt.218   pt.219   pt.220   pt.221   pt.222   pt.223   pt.225   pt.226 
4811.328 3708.477 4279.787 3333.647 4918.816 3933.482 3135.312 3711.100 3585.810 3762.085 3651.474 3985.636 3371.002 
  pt.227   pt.228   pt.229   pt.230   pt.231   pt.232   pt.233   pt.234   pt.235   pt.236   pt.237   pt.238   pt.239 
3471.822 4897.773 4173.571 4361.951 4677.755 5573.097 5010.075 2904.005 4594.636 4335.515 3959.172 3716.269 3959.507 
  pt.240   pt.241   pt.243   pt.244   pt.245   pt.246   pt.247   pt.248   pt.249   pt.250   pt.251   pt.254   pt.255 
3881.037 3510.819 3737.489 4625.820 3476.452 3695.580 3521.499 3056.427 4527.821 3503.490 4631.389 4590.059 6708.073 


Tile perimeters:
================

   pt.14    pt.15    pt.16    pt.17    pt.18    pt.19    pt.21    pt.22    pt.23    pt.24    pt.25    pt.26    pt.27 
256.3854 395.1217 372.8614 251.6487 256.2640 237.3594 237.7952 252.0490 253.4308 258.2867 230.4236 264.4317 234.9910 
   pt.28    pt.30    pt.31    pt.32    pt.33    pt.34    pt.35    pt.36    pt.37    pt.38    pt.39    pt.40    pt.41 
240.8424 271.5937 253.1840 257.3947 229.1875 244.0567 221.3744 263.0994 369.0879 234.4733 251.4138 251.2141 269.5100 
   pt.42    pt.43    pt.44    pt.45    pt.46    pt.47    pt.48    pt.49    pt.50    pt.51    pt.52    pt.54    pt.55 
253.7759 257.2489 242.3596 230.6621 264.8076 265.7526 253.7817 272.1229 275.9686 225.0456 261.4047 242.0933 221.1755 
   pt.56    pt.58    pt.59    pt.60    pt.61    pt.62    pt.63    pt.64    pt.65    pt.66    pt.67    pt.68    pt.69 
243.8212 230.2046 231.0411 282.4693 266.8632 233.1149 232.8917 239.5103 231.6951 234.5557 235.0867 253.2659 249.5245 
   pt.71    pt.72    pt.73    pt.74    pt.75    pt.77    pt.78    pt.79    pt.80    pt.81    pt.82    pt.83    pt.84 
256.0808 251.9539 230.5532 232.2603 260.5137 253.6810 268.3961 244.5029 258.9459 270.1527 236.8710 240.7242 257.9170 
   pt.85    pt.87    pt.88    pt.89    pt.90    pt.91    pt.92    pt.93    pt.94    pt.95    pt.97    pt.98   pt.100 
224.6895 267.5114 225.4019 264.6512 254.2225 261.7928 256.7710 258.6356 228.1149 231.6392 236.2951 243.3959 241.8305 
  pt.101   pt.102   pt.103   pt.104   pt.105   pt.106   pt.107   pt.108   pt.109   pt.111   pt.112   pt.113   pt.114 
217.5131 267.5285 238.4154 239.9287 252.6663 262.1230 259.0462 267.1200 246.1197 257.0181 251.5042 235.4568 254.3328 
  pt.115   pt.116   pt.117   pt.118   pt.119   pt.120   pt.121   pt.122   pt.123   pt.124   pt.125   pt.127   pt.128 
245.9251 240.8880 245.9265 262.3992 231.8510 264.5954 248.0496 227.2166 252.1333 280.7492 327.6250 221.8511 271.5133 
  pt.129   pt.130   pt.131   pt.132   pt.133   pt.134   pt.135   pt.136   pt.137   pt.138   pt.139   pt.140   pt.141 
221.9980 231.5674 257.0885 226.3952 253.3916 221.9896 261.2168 243.2190 262.4909 261.3274 217.9913 259.2608 225.7059 
  pt.143   pt.144   pt.145   pt.146   pt.147   pt.148   pt.149   pt.150   pt.151   pt.152   pt.153   pt.154   pt.155 
271.8701 222.2989 253.3457 245.3925 230.2069 253.8507 257.6170 240.0502 243.0851 233.1750 224.8197 264.3354 239.6470 
  pt.156   pt.158   pt.159   pt.160   pt.161   pt.162   pt.163   pt.164   pt.165   pt.166   pt.167   pt.169   pt.170 
252.7135 249.4527 229.6227 235.6774 215.3622 217.4683 232.4401 236.6407 245.1800 251.0279 292.6364 237.7612 216.2408 
  pt.171   pt.172   pt.173   pt.174   pt.175   pt.176   pt.177   pt.178   pt.179   pt.180   pt.181   pt.182   pt.183 
249.9317 272.2006 235.9665 232.7998 235.3861 270.0084 234.8848 239.8382 230.5363 222.0490 219.0506 250.5075 250.7317 
  pt.184   pt.185   pt.186   pt.187   pt.188   pt.190   pt.191   pt.192   pt.193   pt.194   pt.195   pt.196   pt.197 
255.0820 232.3368 223.2968 225.3500 372.7835 231.6663 214.1890 247.0877 258.9809 230.5192 267.3100 256.1740 237.4592 
  pt.198   pt.199   pt.200   pt.201   pt.202   pt.203   pt.204   pt.205   pt.206   pt.207   pt.209   pt.210   pt.211 
251.4963 254.8076 211.7069 233.5766 211.8417 254.4705 226.0947 278.2352 219.6488 229.4943 238.9315 241.4524 243.9413 
  pt.213   pt.214   pt.215   pt.216   pt.217   pt.218   pt.219   pt.220   pt.221   pt.222   pt.223   pt.225   pt.226 
273.8771 234.6954 253.4133 230.2897 267.7916 238.5998 221.3827 242.5475 227.3866 234.8080 239.3708 243.1613 234.9891 
  pt.227   pt.228   pt.229   pt.230   pt.231   pt.232   pt.233   pt.234   pt.235   pt.236   pt.237   pt.238   pt.239 
232.7867 266.4821 251.0081 254.3730 265.3657 325.3240 274.9551 225.4805 265.6531 258.0642 242.0524 243.1114 243.6116 
  pt.240   pt.241   pt.243   pt.244   pt.245   pt.246   pt.247   pt.248   pt.249   pt.250   pt.251   pt.254   pt.255 
238.7869 234.9671 241.2955 262.8315 238.4831 237.2080 234.5518 220.8281 260.2607 242.4030 269.6456 292.7680 391.2881 


Delaunay neighbours of tile centres:
=====================================

point 14 has neighbours: 12 22 3 10 20 30
point 15 has neighbours: 4 24 28 31 2 16
point 16 has neighbours: 15 28 2 23 34
point 17 has neighbours: 5 6 12 18 22 32 36
point 18 has neighbours: 8 21 5 17 27 32
point 19 has neighbours: 1 11 13 33 35 25
point 21 has neighbours: 8 26 39 18 27
point 22 has neighbours: 12 17 36 14 30
point 23 has neighbours: 2 9 16 26 34 41
point 24 has neighbours: 4 7 15 25 31 38 47
point 25 has neighbours: 11 19 35 7 24 38
point 26 has neighbours: 8 9 21 23 39 41 48
point 27 has neighbours: 21 39 18 32 42
point 28 has neighbours: 15 31 16 34 46 40
point 30 has neighbours: 22 36 14 20 37 49
point 31 has neighbours: 15 24 28 40 47 50
point 32 has neighbours: 17 18 27 36 42 44
point 33 has neighbours: 13 19 29 35 43
point 34 has neighbours: 28 16 23 41 46
point 35 has neighbours: 19 33 25 38 43 45
point 36 has neighbours: 17 22 32 30 49 44 52
point 37 has neighbours: 20 30 49 56 57
point 38 has neighbours: 35 24 25 47 55 45
point 39 has neighbours: 21 26 27 42 54 48 51
point 40 has neighbours: 28 31 46 60 50
point 41 has neighbours: 23 26 34 46 48 61
point 42 has neighbours: 39 27 32 44 54 58
point 43 has neighbours: 29 33 35 45 53 59 65
point 44 has neighbours: 32 36 42 52 58 62
point 45 has neighbours: 35 38 55 43 59
point 46 has neighbours: 28 34 41 60 61 40
point 47 has neighbours: 24 31 38 50 55 63 66
point 48 has neighbours: 26 39 41 51 61 64 67
point 49 has neighbours: 36 30 37 56 71 52 68
point 50 has neighbours: 31 60 40 47 66 72
point 51 has neighbours: 39 54 69 48 67
point 52 has neighbours: 36 49 44 62 68
point 54 has neighbours: 39 42 58 69 51
point 55 has neighbours: 38 47 63 74 45 59
point 56 has neighbours: 37 49 57 71 73
point 58 has neighbours: 42 44 54 62 69 75
point 59 has neighbours: 55 74 43 45 65 79
point 60 has neighbours: 46 61 78 81 40 50 72
point 61 has neighbours: 41 46 48 60 64 80 81
point 62 has neighbours: 44 52 58 68 75 77
point 63 has neighbours: 47 55 66 74 82
point 64 has neighbours: 48 61 67 80
point 65 has neighbours: 43 53 59 76 79
point 66 has neighbours: 47 50 63 72 82 85
point 67 has neighbours: 69 48 51 64 80 84
point 68 has neighbours: 49 71 52 62 77 90
point 69 has neighbours: 54 58 75 89 51 67 84
point 71 has neighbours: 49 56 73 91 68 90
point 72 has neighbours: 60 78 50 66 83 85
point 73 has neighbours: 56 57 70 71 87 91
point 74 has neighbours: 55 63 82 88 59 79
point 75 has neighbours: 58 62 69 77 89
point 77 has neighbours: 62 68 75 89 90 92
point 78 has neighbours: 60 81 102 72 83
point 79 has neighbours: 74 88 59 65 76 86 93
point 80 has neighbours: 61 64 67 81 84 94 98 104
point 81 has neighbours: 60 61 78 80 98 102
point 82 has neighbours: 63 66 74 85 88 103 105
point 83 has neighbours: 78 102 72 85 95 101
point 84 has neighbours: 69 89 67 80 94 97
point 85 has neighbours: 66 72 82 83 95 105
point 87 has neighbours: 70 73 91 96 106
point 88 has neighbours: 74 82 103 79 93
point 89 has neighbours: 69 75 77 92 100 84 97 107
point 90 has neighbours: 71 91 68 77 92 108
point 91 has neighbours: 71 73 87 90 108 106 111
point 92 has neighbours: 77 89 90 107 108
point 93 has neighbours: 88 103 79 86 99 114 116
point 94 has neighbours: 80 84 97 104 115
point 95 has neighbours: 83 85 101 105 109 121
point 97 has neighbours: 89 100 84 94 115 112
point 98 has neighbours: 80 81 102 104 113
point 100 has neighbours: 89 97 107 112 118
point 101 has neighbours: 102 83 95 109
point 102 has neighbours: 78 81 98 83 101 109 113 117
point 103 has neighbours: 82 88 93 105 116 119
point 104 has neighbours: 80 94 98 113 115 122
point 105 has neighbours: 82 85 95 103 119 121
point 106 has neighbours: 87 91 96 111 124
point 107 has neighbours: 89 92 100 108 118 120
point 108 has neighbours: 91 90 92 107 120 128 111
point 109 has neighbours: 102 95 101 121 123 117
point 111 has neighbours: 91 108 128 106 124
point 112 has neighbours: 100 97 115 118 135
point 113 has neighbours: 98 102 104 117 122 129
point 114 has neighbours: 93 99 110 125 127 116
point 115 has neighbours: 94 97 104 122 130 112 135
point 116 has neighbours: 103 93 114 127 119 132
point 117 has neighbours: 102 109 123 113 129 133
point 118 has neighbours: 100 107 112 120 131 135 137
point 119 has neighbours: 103 105 116 121 132 134
point 120 has neighbours: 107 108 118 128 131 140
point 121 has neighbours: 95 105 109 119 123 134 136
point 122 has neighbours: 104 113 115 129 130 141
point 123 has neighbours: 109 121 136 138 117 133
point 124 has neighbours: 96 128 106 111 126 143
point 125 has neighbours: 110 114 127 139 142
point 127 has neighbours: 114 125 139 144 116 132
point 128 has neighbours: 108 120 140 111 124 143 149
point 129 has neighbours: 113 117 122 133 141 147
point 130 has neighbours: 115 122 141 145 135
point 131 has neighbours: 118 120 137 140 146 151
point 132 has neighbours: 127 144 116 119 134 150
point 133 has neighbours: 123 138 117 129 147 156
point 134 has neighbours: 119 121 132 136 150 153
point 135 has neighbours: 115 130 145 154 112 118 137
point 136 has neighbours: 121 123 134 138 148 153 155
point 137 has neighbours: 154 118 131 135 146 158
point 138 has neighbours: 123 136 148 133 156
point 139 has neighbours: 125 127 142 144 152
point 140 has neighbours: 120 128 131 151 149
point 141 has neighbours: 122 129 130 145 147
point 143 has neighbours: 128 124 126 149 157 167
point 144 has neighbours: 127 139 152 159 132 150 165
point 145 has neighbours: 130 141 147 154 135 164 172
point 146 has neighbours: 131 137 151 158 160
point 147 has neighbours: 129 133 141 145 156 161 164
point 148 has neighbours: 136 138 155 156 166
point 149 has neighbours: 128 140 151 143 163 167
point 150 has neighbours: 144 132 134 153 165 169
point 151 has neighbours: 131 140 146 160 162 149 163 170
point 152 has neighbours: 139 142 144 159 168 175
point 153 has neighbours: 134 136 150 155 169 171
point 154 has neighbours: 145 135 137 158 172 176
point 155 has neighbours: 136 148 153 166 171
point 156 has neighbours: 138 148 133 147 161 174 166
point 158 has neighbours: 154 137 146 160 173 176
point 159 has neighbours: 144 152 165 175 180
point 160 has neighbours: 146 151 158 162 173 179 184
point 161 has neighbours: 147 156 164 174 178
point 162 has neighbours: 151 160 170 179
point 163 has neighbours: 151 149 167 177 181 170
point 164 has neighbours: 145 147 161 172 178
point 165 has neighbours: 144 159 150 169 185 180
point 166 has neighbours: 148 155 156 174 171 182
point 167 has neighbours: 143 149 157 163 177 189
point 169 has neighbours: 150 153 165 171 185 186
point 170 has neighbours: 151 162 163 181 179 187
point 171 has neighbours: 153 155 166 169 182 186 192
point 172 has neighbours: 145 154 164 176 178 193 195
point 173 has neighbours: 158 160 183 184 176
point 174 has neighbours: 156 161 178 190 166 182
point 175 has neighbours: 152 159 168 180 188 191
point 176 has neighbours: 154 158 173 183 172 195
point 177 has neighbours: 163 167 181 189 196
point 178 has neighbours: 161 164 172 174 190 193 194
point 179 has neighbours: 160 162 170 184 187 198
point 180 has neighbours: 159 165 185 175 191
point 181 has neighbours: 163 177 196 203 170 187
point 182 has neighbours: 174 190 166 171 192 197 201
point 183 has neighbours: 173 184 199 205 176 195
point 184 has neighbours: 160 173 179 183 198 199
point 185 has neighbours: 165 169 186 200 204 180 191 202
point 186 has neighbours: 169 171 185 192 200
point 187 has neighbours: 181 203 170 179 198
point 188 has neighbours: 168 175 191 206 208
point 190 has neighbours: 174 178 194 207 182 201
point 191 has neighbours: 185 175 180 188 202 206
point 192 has neighbours: 171 182 186 197 200 209 214
point 193 has neighbours: 172 178 194 195 213 215
point 194 has neighbours: 178 190 193 207 215
point 195 has neighbours: 183 205 172 176 193 213
point 196 has neighbours: 177 181 189 203 212 217
point 197 has neighbours: 182 192 201 214 216
point 198 has neighbours: 203 179 184 187 199 211 218
point 199 has neighbours: 183 184 198 205 210 211
point 200 has neighbours: 185 186 192 204 209
point 201 has neighbours: 190 207 182 197 216 220
point 202 has neighbours: 185 204 191 206 219 222
point 203 has neighbours: 181 196 217 187 198 218
point 204 has neighbours: 185 200 209 225 202 222
point 205 has neighbours: 183 199 210 195 213 233 228
point 206 has neighbours: 188 191 202 208 219 224
point 207 has neighbours: 190 194 215 221 201 220
point 209 has neighbours: 192 200 204 214 225 229
point 210 has neighbours: 199 205 211 223 228
point 211 has neighbours: 198 199 210 218 223 226 227
point 213 has neighbours: 205 193 195 215 233
point 214 has neighbours: 192 197 209 216 229 231
point 215 has neighbours: 193 194 207 213 221 233 234 238
point 216 has neighbours: 197 201 214 220 231
point 217 has neighbours: 196 203 212 218 230 232
point 218 has neighbours: 203 217 198 211 227 230
point 219 has neighbours: 202 206 222 224 236
point 220 has neighbours: 207 221 201 216 231 235
point 221 has neighbours: 207 215 220 234 235 239
point 222 has neighbours: 204 225 202 219 236 237
point 223 has neighbours: 210 211 226 228 243 244
point 225 has neighbours: 204 209 222 229 237
point 226 has neighbours: 211 223 227 243
point 227 has neighbours: 211 218 226 243 247 230
point 228 has neighbours: 205 210 223 233 240 244
point 229 has neighbours: 209 214 225 231 237 246
point 230 has neighbours: 217 218 227 247 232 241 248
point 231 has neighbours: 214 216 220 229 246 249 235
point 232 has neighbours: 212 217 230 241 242
point 233 has neighbours: 205 213 215 238 254 228 240
point 234 has neighbours: 215 221 238 239
point 235 has neighbours: 221 220 231 249 239 251
point 236 has neighbours: 219 222 224 245 252 237
point 237 has neighbours: 225 222 236 245 229 246 250 256
point 238 has neighbours: 215 233 234 239 254 255 257
point 239 has neighbours: 221 234 235 238 251 255
point 240 has neighbours: 233 254 228 244 261
point 241 has neighbours: 230 232 242 248 253 259
point 243 has neighbours: 223 226 227 244 247 258 260
point 244 has neighbours: 223 228 240 243 260 261
point 245 has neighbours: 236 252 264 237 250
point 246 has neighbours: 229 231 237 249 256 262
point 247 has neighbours: 227 243 258 230 248
point 248 has neighbours: 247 258 230 241 259
point 249 has neighbours: 231 246 262 266 235 251
point 250 has neighbours: 245 264 237 256
point 251 has neighbours: 249 266 235 239 255 265
point 254 has neighbours: 233 238 257 240 261
point 255 has neighbours: 238 239 251 257 265

> tsw <- tile.list(dsw)
> plot(tsw,labelPts=TRUE,col.lbls="red",cex=0.5,adj=0.5)
> 
> 
> 
> cleanEx()
> nameEx("tile.centroids")
> ### * tile.centroids
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: tile.centroids
> ### Title: Compute centroids of Dirichlet (Voronoi) tiles
> ### Aliases: tile.centroids
> ### Keywords: spatial
> 
> ### ** Examples
> 
> set.seed(42)
> x <- runif(20)
> y <- runif(20)
> d <- deldir(x,y)
> l <- tile.list(d)
> g <- tile.centroids(l)
> plot(l,close=TRUE)
> points(g,pch=20,col="red")
> 
> 
> 
> cleanEx()
> nameEx("tile.list")
> ### * tile.list
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: tile.list
> ### Title: Create a list of tiles in a tessellation
> ### Aliases: tile.list
> ### Keywords: spatial
> 
> ### ** Examples
> 
>     set.seed(42)
>     x <- runif(20)
>     y <- runif(20)
>     z <- deldir(x,y)
>     w <- tile.list(z)
> 
>     z <- deldir(x,y,rw=c(0,1,0,1))
>     w <- tile.list(z)
> 
>     z <- deldir(x,y,rw=c(0,1,0,1),dpl=list(ndx=2,ndy=2))
>     w <- tile.list(z)
>     if(require(polyclip)) {
+         CP <- list(x=c(0.49,0.35,0.15,0.20,0.35,0.42,
+                        0.43,0.62,0.46,0.63,0.82,0.79),
+                    y=c(0.78,0.86,0.79,0.54,0.58,0.70,
+                        0.51,0.46,0.31,0.20,0.37,0.54)) 
+         wc <- tile.list(z,clipp=CP) # 10 tiles are retained; the third tile,
+                                     # corresponding to point 6, is
+                                     # subdivided into two parts.
+     }
Loading required package: polyclip
polyclip 1.10-4 built from Clipper C++ version 6.4.0
> 
> 
> 
> cleanEx()

detaching ‘package:polyclip’

> nameEx("tileArea")
> ### * tileArea
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: tileArea
> ### Title: Area of a Dirichlet tile.
> ### Aliases: tileArea
> ### Keywords: utilities
> 
> ### ** Examples
> 
> set.seed(42)
> x <- runif(20)
> y <- runif(20)
> z <- deldir(x,y,rw=c(0,1,0,1))
> w <- tile.list(z)
> with(w[[1]],tileArea(x,y,rw=z$rw))
[1] 0.01673089
> sapply(w,function(x,rw){tileArea(x$x,x$y,attr(w,"rw"))})
      pt.1       pt.2       pt.3       pt.4       pt.5       pt.6       pt.7       pt.8       pt.9      pt.10 
0.01673089 0.04375112 0.02325225 0.02028819 0.06814804 0.07188510 0.04985293 0.05696854 0.04535698 0.02828429 
     pt.11      pt.12      pt.13      pt.14      pt.15      pt.16      pt.17      pt.18      pt.19      pt.20 
0.03946221 0.03944295 0.05690313 0.11192240 0.05506540 0.04097512 0.01092658 0.14364597 0.04189607 0.03524183 
> x <- c(0.613102,0.429294,0.386023,0.271880,0.387249,0.455900,0.486101)
> y <- c(0.531978,0.609665,0.597780,0.421738,0.270596,0.262953,0.271532)
> # The vertices of the Dirichlet tile for point 6.
> tileArea(x,y,rw=c(0,1,0,1))
[1] 0.0718851
> tileArea(x,y,rw=c(-1,2,-3,4)) # Same as above.
[1] 0.0718851
> 
> 
> 
> cleanEx()
> nameEx("tileInfo")
> ### * tileInfo
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: tileInfo
> ### Title: Extract information from a tile list.
> ### Aliases: tileInfo
> ### Keywords: spatial
> 
> ### ** Examples
> 
> set.seed(42)
> x    <- runif(20)
> y    <- runif(20)
> dxy  <- deldir(x,y,rw=c(0,1,0,1))
> ixy1 <- tileInfo(dxy)
> ixy2 <- tileInfo(dxy,bndry=TRUE)
> if(require(polyclip)) {
+     CP <- list(x=c(0.49,0.35,0.15,0.20,0.35,0.42,
+                    0.43,0.62,0.46,0.63,0.82,0.79),
+                y=c(0.78,0.86,0.79,0.54,0.58,0.70,
+                    0.51,0.46,0.31,0.20,0.37,0.54))
+     ixy3 <- tileInfo(dxy,clipp=CP) # 10 tiles are retained; the third tile,
+                                    # corresponding to point 6, is
+                                    # subdivided into two parts.
+ }
Loading required package: polyclip
polyclip 1.10-4 built from Clipper C++ version 6.4.0
> 
> 
> 
> cleanEx()

detaching ‘package:polyclip’

> nameEx("tilePerim")
> ### * tilePerim
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: tilePerim
> ### Title: Calculate tile perimeters.
> ### Aliases: tilePerim
> ### Keywords: spatial
> 
> ### ** Examples
> 
>     x <- runif(20)
>     y <- runif(20)
>     z <- deldir(x,y,rw=c(0,1,0,1))
>     w <- tile.list(z)
>     p1 <- tilePerim(w)
>     p0 <- tilePerim(w,inclbdry=FALSE)
>     p1$totalPerim - p0$totalPerim # Get 4 = the perimeter of rw.
[1] 4
>     ss <- apply(as.matrix(z$dirsgs[,1:4]),1,
+                 function(x){(x[1]-x[3])^2 + (x[2]-x[4])^2})
>     2*sum(sqrt(ss)) - p0$totalPerim # Get 0; in tilePerim() each interior
[1] 0
>                                     # edge is counted twice.
>     if(require(polyclip)) {
+         CP <- list(x=c(0.49,0.35,0.15,0.20,0.35,0.42,
+                        0.43,0.62,0.46,0.63,0.82,0.79),
+                    y=c(0.78,0.86,0.79,0.54,0.58,0.70,
+                        0.51,0.46,0.31,0.20,0.37,0.54))
+         wc <- tile.list(z,clipp=CP)
+         p2 <- tilePerim(wc) # Doesn't matter here if inclbdry is TRUE or FALSE.
+         p2$perComps[["pt.6"]] # The tile for point 6 has got subdivided into
+                               # two parts, a tetrahedron and a triangle.
+         cul <- rainbow(10)[c(1,7,3:6,2,8:10)] # Rearranging colours to improve
+                                               # the contrast between contiguous tiles.
+         plot(wc,labelPts=TRUE,fillcol=cul)
+     }
Loading required package: polyclip
polyclip 1.10-4 built from Clipper C++ version 6.4.0
> 
> 
> 
> cleanEx()

detaching ‘package:polyclip’

> nameEx("toyPattern")
> ### * toyPattern
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: toyPattern
> ### Title: A toy marked point pattern object, with 59 points.
> ### Aliases: toyPattern
> ### Keywords: datasets
> 
> ### ** Examples
> 
> dtoy    <- deldir(toyPattern) # "Tags" are the marks of the pattern.
> set.seed(42)
> dtoy.nt <- deldir(toyPattern,z=round(runif(59),2)) # Tags are numeric.
> 
> 
> 
> cleanEx()
> nameEx("triMat")
> ### * triMat
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: triMat
> ### Title: Produce matrix of triangle vertex indices.
> ### Aliases: triMat
> ### Keywords: spatial
> 
> ### ** Examples
> 
> # These are the data used by Jay Call to illustrate the bug
> # that appeared in a previous incarnation of triMat.
> xy <- data.frame(
+           x = c(0.048,0.412,0.174,0.472,0.607,0.565,0.005,0.237,0.810,0.023),
+           y = c(0.512,0.928,0.955,0.739,0.946,0.134,0.468,0.965,0.631,0.782)
+       )
> dxy <- deldir(xy)
> M   <- triMat(dxy)
> plot(dxy,wlines="triang",num=TRUE,axes=FALSE,cmpnt_col=c(1,1,1,1,2,1))
Warning in (function (x0, y0, x1 = x0, y1 = y0, col = par("fg"), lty = par("lty"),  :
  "num" is not a graphical parameter
Warning in plot.xy(xy.coords(x, y), type = type, ...) :
  "num" is not a graphical parameter
> # The triangle with vertices {4,5,8} was listed in the output of
> # the previous (buggy) version of triMat().  It is NOT a Delaunay
> # triangle and hence should NOT be listed.
> 
> 
> 
> cleanEx()
> nameEx("triang.list")
> ### * triang.list
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: triang.list
> ### Title: Create a list of Delaunay triangles
> ### Aliases: triang.list
> ### Keywords: spatial
> 
> ### ** Examples
> 
> set.seed(42)
> x  <- runif(20)
> y  <- runif(20)
> z  <- sample(1:100,20)
> d1 <- deldir(x,y,z=z)
> t1 <- triang.list(d1)
> # A "triangulation" with no triangles!
> d2 <- deldir(x=1:10,y=11:20)
> plot(d2)
> t2 <- triang.list(d2)
> plot(t2,showrect=TRUE,rectcol="blue") # Pretty boring!
> 
> 
> 
> cleanEx()
> nameEx("volTriPoints")
> ### * volTriPoints
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: volTriPoints
> ### Title: Solute plume concentration data set.
> ### Aliases: volTriPoints
> ### Keywords: datasets
> 
> ### ** Examples
> 
> dvtp <- deldir(volTriPoints)
Increasing madj from 47 to 57 and trying again.
> plot(dvtp)
> 
> 
> 
> cleanEx()
> nameEx("which.tile")
> ### * which.tile
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: which.tile
> ### Title: Determine the tile containing a given point.
> ### Aliases: which.tile
> ### Keywords: spatial
> 
> ### ** Examples
> 
> set.seed(42)
> x   <- runif(20,0,100)
> y   <- runif(20,0,100)
> dxy <- deldir(x,y)
> txy <- tile.list(dxy)
> i   <- which.tile(30,50,txy) # The value of i here is 14.
> plot(txy,showpoints=FALSE)
> text(x,y,labels=1:length(txy),col="red")
> points(30,50,pch=20,col="blue")
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  1.775 0.039 1.815 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
