
R version 4.3.0 (2023-04-21) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(testthat)
> library(bslib)

Attaching package: ‘bslib’

The following object is masked from ‘package:utils’:

    page

> 
> test_check("bslib")
Failed with error:  'there is no package called 'thematic''

Quitting from lines 48-49 [unnamed-chunk-3] (tmp.Rmd)
Failed with error:  'there is no package called 'thematic''

Quitting from lines 50-51 [unnamed-chunk-3] (tmp.Rmd)
Failed with error:  'there is no package called 'thematic''
 Downloaded 170 bytes... Downloaded 180 bytes... [20%] Downloaded 12393 bytes... [26%] Downloaded 16518 bytes... [29%] Downloaded 17896 bytes... [38%] Downloaded 23408 bytes... [66%] Downloaded 41027 bytes... [86%] Downloaded 53420 bytes... [100%] Downloaded 61488 bytes...
 Downloaded 190 bytes... [56%] Downloaded 24786 bytes... [59%] Downloaded 26164 bytes... [100%] Downloaded 43861 bytes...
[ FAIL 2 | WARN 0 | SKIP 21 | PASS 379 ]

══ Skipped tests ═══════════════════════════════════════════════════════════════
• On CRAN (21)

══ Failed tests ════════════════════════════════════════════════════════════════
── Failure ('test-rmd-skeletons.R:17:3'): Rmd skeletons can be render cleanly ──
`render_skeleton("legacy")` threw an unexpected error.
Message: there is no package called 'thematic'
Class:   rlang_error/error/condition
Backtrace:
     ▆
  1. ├─testthat::expect_error(render_skeleton("legacy"), NA) at test-rmd-skeletons.R:17:2
  2. │ └─testthat:::expect_condition_matching(...)
  3. │   └─testthat:::quasi_capture(...)
  4. │     ├─testthat (local) .capture(...)
  5. │     │ └─base::withCallingHandlers(...)
  6. │     └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  7. ├─bslib (local) render_skeleton("legacy")
  8. │ ├─rmarkdown::render(file.path(tmp, "tmp.Rmd"), quiet = TRUE) at test-rmd-skeletons.R:9:2
  9. │ │ └─knitr::knit(knit_input, knit_output, envir = envir, quiet = quiet)
 10. │ │   └─knitr:::process_file(text, output)
 11. │ │     ├─base::withCallingHandlers(...)
 12. │ │     ├─base::withCallingHandlers(...)
 13. │ │     ├─knitr:::process_group(group)
 14. │ │     └─knitr:::process_group.block(group)
 15. │ │       └─knitr:::call_block(x)
 16. │ │         └─knitr:::block_exec(params)
 17. │ │           └─knitr:::eng_r(options)
 18. │ │             ├─knitr:::in_input_dir(...)
 19. │ │             │ └─knitr:::in_dir(input_dir(), expr)
 20. │ │             └─knitr (local) evaluate(...)
 21. │ │               └─evaluate::evaluate(...)
 22. │ │                 └─evaluate:::evaluate_call(...)
 23. │ │                   ├─evaluate (local) timing_fn(...)
 24. │ │                   ├─base (local) handle(...)
 25. │ │                   ├─base::withCallingHandlers(...)
 26. │ │                   ├─base::withVisible(...)
 27. │ │                   └─evaluate:::eval_with_user_handlers(expr, envir, enclos, user_handlers)
 28. │ │                     └─base::eval(expr, envir, enclos)
 29. │ │                       └─base::eval(expr, envir, enclos)
 30. │ ├─base::plot(pressure, col = thematic::thematic_get_option("accent"))
 31. │ └─graphics:::plot.data.frame(pressure, col = thematic::thematic_get_option("accent"))
 32. │   └─graphics (local) plot2(x, ...)
 33. │     ├─base::plot(x[[1L]], x[[2L]], xlab = xlab, ylab = ylab, ...)
 34. │     └─graphics::plot.default(...)
 35. │       └─graphics::plot.xy(xy, type, ...)
 36. └─base::loadNamespace(x)
 37.   └─base::withRestarts(stop(cond), retry_loadNamespace = function() NULL)
 38.     └─base (local) withOneRestart(expr, restarts[[1L]])
 39.       └─base (local) doWithOneRestart(return(expr), restart)
── Failure ('test-rmd-skeletons.R:18:3'): Rmd skeletons can be render cleanly ──
`render_skeleton("new")` threw an unexpected error.
Message: there is no package called 'thematic'
Class:   rlang_error/error/condition
Backtrace:
     ▆
  1. ├─testthat::expect_error(render_skeleton("new"), NA) at test-rmd-skeletons.R:18:2
  2. │ └─testthat:::expect_condition_matching(...)
  3. │   └─testthat:::quasi_capture(...)
  4. │     ├─testthat (local) .capture(...)
  5. │     │ └─base::withCallingHandlers(...)
  6. │     └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  7. ├─bslib (local) render_skeleton("new")
  8. │ ├─rmarkdown::render(file.path(tmp, "tmp.Rmd"), quiet = TRUE) at test-rmd-skeletons.R:9:2
  9. │ │ └─knitr::knit(knit_input, knit_output, envir = envir, quiet = quiet)
 10. │ │   └─knitr:::process_file(text, output)
 11. │ │     ├─base::withCallingHandlers(...)
 12. │ │     ├─base::withCallingHandlers(...)
 13. │ │     ├─knitr:::process_group(group)
 14. │ │     └─knitr:::process_group.block(group)
 15. │ │       └─knitr:::call_block(x)
 16. │ │         └─knitr:::block_exec(params)
 17. │ │           └─knitr:::eng_r(options)
 18. │ │             ├─knitr:::in_input_dir(...)
 19. │ │             │ └─knitr:::in_dir(input_dir(), expr)
 20. │ │             └─knitr (local) evaluate(...)
 21. │ │               └─evaluate::evaluate(...)
 22. │ │                 └─evaluate:::evaluate_call(...)
 23. │ │                   ├─evaluate (local) timing_fn(...)
 24. │ │                   ├─base (local) handle(...)
 25. │ │                   ├─base::withCallingHandlers(...)
 26. │ │                   ├─base::withVisible(...)
 27. │ │                   └─evaluate:::eval_with_user_handlers(expr, envir, enclos, user_handlers)
 28. │ │                     └─base::eval(expr, envir, enclos)
 29. │ │                       └─base::eval(expr, envir, enclos)
 30. │ ├─base::plot(pressure, col = thematic::thematic_get_option("accent"))
 31. │ └─graphics:::plot.data.frame(pressure, col = thematic::thematic_get_option("accent"))
 32. │   └─graphics (local) plot2(x, ...)
 33. │     ├─base::plot(x[[1L]], x[[2L]], xlab = xlab, ylab = ylab, ...)
 34. │     └─graphics::plot.default(...)
 35. │       └─graphics::plot.xy(xy, type, ...)
 36. └─base::loadNamespace(x)
 37.   └─base::withRestarts(stop(cond), retry_loadNamespace = function() NULL)
 38.     └─base (local) withOneRestart(expr, restarts[[1L]])
 39.       └─base (local) doWithOneRestart(return(expr), restart)

[ FAIL 2 | WARN 0 | SKIP 21 | PASS 379 ]
Error: Test failures
Execution halted
