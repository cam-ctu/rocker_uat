
R version 4.3.0 (2023-04-21) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> source("incl/start.R")
[16:13:02.840] plan(): Setting new future strategy stack:
[16:13:02.841] List of future strategies:
[16:13:02.841] 1. sequential:
[16:13:02.841]    - args: function (..., envir = parent.frame())
[16:13:02.841]    - tweaked: FALSE
[16:13:02.841]    - call: future::plan("sequential")
[16:13:02.856] plan(): nbrOfWorkers() = 1
> stopCluster <- parallel::stopCluster
> 
> message("*** MPI ...")
*** MPI ...
> 
> pkg <- "Rmpi"
> if (fullTest && requireNamespace(pkg, quietly = TRUE)) {
+   cl <- makeClusterMPI(availableCores())
+   str(cl)
+   
+   plan(cluster, workers = cl)
+ 
+   fs <- lapply(1:2, FUN = function(x) future({
+     printf("Hostname: %s\n", Sys.info()[["nodename"]])
+     printf("PID: %d\n", Sys.getpid())
+     Sys.sleep(0.5)
+     x^2
+   }))
+   print(fs)
+   vs <- value(fs)
+   print(vs)
+   stopifnot(all(unlist(vs) == c(1, 4)))
+ 
+   stopCluster(cl)
+   str(cl)
+ }
> 
> message("*** MPI ... DONE")
*** MPI ... DONE
> 
> source("incl/end.R")
[16:13:02.867] plan(): Setting new future strategy stack:
[16:13:02.867] List of future strategies:
[16:13:02.867] 1. FutureStrategy:
[16:13:02.867]    - args: function (..., envir = parent.frame())
[16:13:02.867]    - tweaked: FALSE
[16:13:02.867]    - call: future::plan(oplan)
[16:13:02.878] plan(): nbrOfWorkers() = 1
> 
