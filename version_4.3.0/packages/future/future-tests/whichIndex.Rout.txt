
R version 4.3.0 (2023-04-21) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> source("incl/start,load-only.R")
[16:14:33.246] plan(): Setting new future strategy stack:
[16:14:33.246] List of future strategies:
[16:14:33.246] 1. sequential:
[16:14:33.246]    - args: function (..., envir = parent.frame())
[16:14:33.246]    - tweaked: FALSE
[16:14:33.246]    - call: future::plan("sequential")
[16:14:33.259] plan(): nbrOfWorkers() = 1
> 
> message("*** whichIndex() ...")
*** whichIndex() ...
> 
> dims <- list(
+   c(1),
+   c(1, 1),
+   c(2),
+   c(2, 1),
+   c(3, 4, 3)
+ )
> 
> for (dim in dims) {
+   printf("Dimensions: (%s)\n", paste(dim, collapse = ", "))
+   dimnames <- lapply(dim, FUN = function(n) letters[seq_len(n)])
+   X <- array(seq_len(prod(dim)), dim = dim, dimnames = dimnames)
+   print(X)
+ 
+   idxs <- unique(round(seq(from = 1L, to = length(X), length.out = 5)))
+   print(idxs)
+   stopifnot(all(X[idxs] == idxs))
+ 
+   ## (a) By matrix and dimindices
+   I <- arrayInd(idxs, .dim = dim(X))
+   print(I)
+   idxs2 <- whichIndex(I, dim = dim(X))
+   print(idxs2)
+   stopifnot(all(idxs2 == idxs))
+ 
+   ## (b) By matrix and dimnames
+   N <- array(NA_character_, dim = dim(I))
+   for (kk in seq_len(ncol(N))) {
+     N[, kk] <- dimnames[[kk]][I[, kk]]
+   }
+   print(N)
+   idxs3 <- whichIndex(N, dim = dim(X), dimnames = dimnames(X))
+   print(idxs3)
+   stopifnot(all(idxs3 == idxs))
+ 
+   ## (b) By data.frame
+   D <- as.data.frame(I)
+   for (cc in seq(from = 1L, to = ncol(D))) D[[cc]] <- N[, cc]
+   print(D)
+   idxs4 <- whichIndex(D, dim = dim(X), dimnames = dimnames(X))
+   print(idxs4)
+   stopifnot(all(idxs4 == idxs))
+ }
Dimensions: (1)
a 
1 
[1] 1
     [,1]
[1,]    1
[1] 1
     [,1]
[1,] "a" 
[1] 1
  V1
1  a
[1] 1
Dimensions: (1, 1)
  a
a 1
[1] 1
     [,1] [,2]
[1,]    1    1
[1] 1
     [,1] [,2]
[1,] "a"  "a" 
[1] 1
  V1 V2
1  a  a
[1] 1
Dimensions: (2)
a b 
1 2 
[1] 1 2
     [,1]
[1,]    1
[2,]    2
[1] 1 2
     [,1]
[1,] "a" 
[2,] "b" 
[1] 1 2
  V1
1  a
2  b
[1] 1 2
Dimensions: (2, 1)
  a
a 1
b 2
[1] 1 2
     [,1] [,2]
[1,]    1    1
[2,]    2    1
[1] 1 2
     [,1] [,2]
[1,] "a"  "a" 
[2,] "b"  "a" 
[1] 1 2
  V1 V2
1  a  a
2  b  a
[1] 1 2
Dimensions: (3, 4, 3)
, , a

  a b c  d
a 1 4 7 10
b 2 5 8 11
c 3 6 9 12

, , b

   a  b  c  d
a 13 16 19 22
b 14 17 20 23
c 15 18 21 24

, , c

   a  b  c  d
a 25 28 31 34
b 26 29 32 35
c 27 30 33 36

[1]  1 10 18 27 36
     [,1] [,2] [,3]
[1,]    1    1    1
[2,]    1    4    1
[3,]    3    2    2
[4,]    3    1    3
[5,]    3    4    3
[1]  1 10 18 27 36
     [,1] [,2] [,3]
[1,] "a"  "a"  "a" 
[2,] "a"  "d"  "a" 
[3,] "c"  "b"  "b" 
[4,] "c"  "a"  "c" 
[5,] "c"  "d"  "c" 
[1]  1 10 18 27 36
  V1 V2 V3
1  a  a  a
2  a  d  a
3  c  b  b
4  c  a  c
5  c  d  c
[1]  1 10 18 27 36
> 
> 
> ## Exceptions
> dim <- c(2, 3)
> ndim <- length(dim)
> dimnames <- lapply(dim, FUN = function(n) letters[seq_len(n)])
> 
> I <- matrix(c(1, 1, 2, 4), ncol = ndim)
> res <- try(idxs <- whichIndex(I, dim = dim, dimnames = dimnames), silent = TRUE)
> stopifnot(inherits(res, "try-error"))
> 
> I <- matrix(c(0, 0), ncol = ndim)
> res <- try(idxs <- whichIndex(I, dim = dim, dimnames = dimnames), silent = TRUE)
> stopifnot(inherits(res, "try-error"))
> 
> I <- matrix(c("a", "q"), ncol = ndim)
> res <- try(idxs <- whichIndex(I, dim = dim, dimnames = dimnames), silent = TRUE)
> stopifnot(inherits(res, "try-error"))
> 
> D <- data.frame(a = c(1, 1), b = c(2, 4))
> res <- try(idxs <- whichIndex(D, dim = dim, dimnames = dimnames), silent = TRUE)
> stopifnot(inherits(res, "try-error"))
> 
> D <- data.frame(a = c("a", "q"), b = c(1, 2), stringsAsFactors = FALSE)
> res <- try(idxs <- whichIndex(D, dim = dim, dimnames = dimnames), silent = TRUE)
> stopifnot(inherits(res, "try-error"))
> 
> message("*** whichIndex() ... DONE")
*** whichIndex() ... DONE
> 
> source("incl/end.R")
[16:14:33.298] plan(): Setting new future strategy stack:
[16:14:33.299] List of future strategies:
[16:14:33.299] 1. FutureStrategy:
[16:14:33.299]    - args: function (..., envir = parent.frame())
[16:14:33.299]    - tweaked: FALSE
[16:14:33.299]    - call: future::plan(oplan)
[16:14:33.309] plan(): nbrOfWorkers() = 1
> 
