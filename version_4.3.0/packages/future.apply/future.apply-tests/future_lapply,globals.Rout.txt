
R version 4.3.0 (2023-04-21) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> source("incl/start.R")
Loading required package: future
[17:39:31.057] plan(): Setting new future strategy stack:
[17:39:31.057] List of future strategies:
[17:39:31.057] 1. sequential:
[17:39:31.057]    - args: function (..., envir = parent.frame())
[17:39:31.057]    - tweaked: FALSE
[17:39:31.057]    - call: future::plan("sequential")
[17:39:31.068] plan(): nbrOfWorkers() = 1
> library("tools") ## toTitleCase()
> 
> options(future.debug = FALSE)
> options(future.apply.debug = TRUE)
> 
> message("*** future_lapply() - globals ...")
*** future_lapply() - globals ...
> 
> plan(cluster, workers = "localhost")
> 
> a <- 1
> b <- 2
> 
> globals_set <- list(
+   A = FALSE,
+   B = TRUE,
+   C = c("a", "b"),
+   D = list(a = 2, b = 3)
+ )
> 
> x <- list(1)
> y_truth <- list(A = NULL, B = list(1), C = list(1), D = list(2))
> str(y_truth)
List of 4
 $ A: NULL
 $ B:List of 1
  ..$ : num 1
 $ C:List of 1
  ..$ : num 1
 $ D:List of 1
  ..$ : num 2
> 
> for (name in names(globals_set)) {
+   globals <- globals_set[[name]]
+   message("Globals set ", sQuote(name))
+   y <- tryCatch({
+     future_lapply(x, FUN = function(x) {
+       median(c(x, a, b))
+     }, future.globals = globals, future.packages = "utils")
+   }, error = identity)
+   print(y)
+   stopifnot((name == "A" && inherits(y, "error")) || 
+              identical(y, y_truth[[name]]))
+ }
Globals set ‘A’
[17:39:31.639] future_lapply() ...
[17:39:31.643] Number of chunks: 1
[17:39:31.644] getGlobalsAndPackagesXApply() ...
[17:39:31.644]  - future.globals: FALSE
[17:39:31.647]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[17:39:31.647]  - needed namespaces: [n=0] 
[17:39:31.647] Finding globals ... DONE
[17:39:31.647]  - use_args: TRUE
[17:39:31.647]  - Getting '...' globals ...
[17:39:31.648]    - '...' content: [n=0] 
[17:39:31.648] List of 1
[17:39:31.648]  $ ...: list()
[17:39:31.648]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:31.648]  - attr(*, "where")=List of 1
[17:39:31.648]   ..$ ...:<environment: 0x556102db9b30> 
[17:39:31.648]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:31.648]  - attr(*, "resolved")= logi TRUE
[17:39:31.648]  - attr(*, "total_size")= num NA
[17:39:31.651]  - Getting '...' globals ... DONE
[17:39:31.651] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[17:39:31.651] List of 3
[17:39:31.651]  $ ...future.FUN        :function (x)  
[17:39:31.651]  $ future.call.arguments: list()
[17:39:31.651]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:31.651]  $ ...                  : list()
[17:39:31.651]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:31.651]  - attr(*, "where")=List of 3
[17:39:31.651]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[17:39:31.651]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[17:39:31.651]   ..$ ...                  :<environment: 0x556102db9b30> 
[17:39:31.651]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:31.651]  - attr(*, "resolved")= logi FALSE
[17:39:31.651]  - attr(*, "total_size")= num 3824
[17:39:31.655] Packages to be attached in all futures: [n=1] ‘utils’
[17:39:31.656] getGlobalsAndPackagesXApply() ... DONE
[17:39:31.656] Number of futures (= number of chunks): 1
[17:39:31.656] Launching 1 futures (chunks) ...
[17:39:31.656] Chunk #1 of 1 ...
[17:39:31.657]  - seeds: <none>
[17:39:31.667] Created future:
[17:39:31.667] ClusterFuture:
[17:39:31.667] Label: ‘future_lapply-1’
[17:39:31.667] Expression:
[17:39:31.667] {
[17:39:31.667]     do.call(function(...) {
[17:39:31.667]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:31.667]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:31.667]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:31.667]             on.exit(options(oopts), add = TRUE)
[17:39:31.667]         }
[17:39:31.667]         {
[17:39:31.667]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:31.667]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:31.667]                 ...future.FUN(...future.X_jj, ...)
[17:39:31.667]             })
[17:39:31.667]         }
[17:39:31.667]     }, args = future.call.arguments)
[17:39:31.667] }
[17:39:31.667] Lazy evaluation: FALSE
[17:39:31.667] Asynchronous evaluation: TRUE
[17:39:31.667] Local evaluation: TRUE
[17:39:31.667] Environment: R_GlobalEnv
[17:39:31.667] Capture standard output: TRUE
[17:39:31.667] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:31.667] Globals: 5 objects totaling 3.79 KiB (function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:31.667] Packages: 1 packages (‘utils’)
[17:39:31.667] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:31.667] Resolved: FALSE
[17:39:31.667] Value: <not collected>
[17:39:31.667] Conditions captured: <none>
[17:39:31.667] Early signaling: FALSE
[17:39:31.667] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:31.667] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:31.680] Chunk #1 of 1 ... DONE
[17:39:31.680] Launching 1 futures (chunks) ... DONE
[17:39:31.680] Resolving 1 futures (chunks) ...
<simpleError in ...future.FUN(...future.X_jj, ...): object 'a' not found>
Globals set ‘B’
[17:39:31.724] future_lapply() ...
[17:39:31.725] Number of chunks: 1
[17:39:31.725] getGlobalsAndPackagesXApply() ...
[17:39:31.725]  - future.globals: TRUE
[17:39:31.729]  - globals found/used: [n=3] ‘FUN’, ‘a’, ‘b’
[17:39:31.729]  - needed namespaces: [n=1] ‘stats’
[17:39:31.729] Finding globals ... DONE
[17:39:31.729]  - use_args: TRUE
[17:39:31.729]  - Getting '...' globals ...
[17:39:31.730]    - '...' content: [n=0] 
[17:39:31.730] List of 1
[17:39:31.730]  $ ...: list()
[17:39:31.730]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:31.730]  - attr(*, "where")=List of 1
[17:39:31.730]   ..$ ...:<environment: 0x5561048e0888> 
[17:39:31.730]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:31.730]  - attr(*, "resolved")= logi TRUE
[17:39:31.730]  - attr(*, "total_size")= num NA
[17:39:31.733]  - Getting '...' globals ... DONE
[17:39:31.733] Globals to be used in all futures (chunks): [n=4] ‘...future.FUN’, ‘a’, ‘b’, ‘...’
[17:39:31.734] List of 4
[17:39:31.734]  $ ...future.FUN:function (x)  
[17:39:31.734]  $ a            : num 1
[17:39:31.734]  $ b            : num 2
[17:39:31.734]  $ ...          : list()
[17:39:31.734]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:31.734]  - attr(*, "where")=List of 4
[17:39:31.734]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:31.734]   ..$ a            :<environment: R_EmptyEnv> 
[17:39:31.734]   ..$ b            :<environment: R_EmptyEnv> 
[17:39:31.734]   ..$ ...          :<environment: 0x5561048e0888> 
[17:39:31.734]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:31.734]  - attr(*, "resolved")= logi FALSE
[17:39:31.734]  - attr(*, "total_size")= num 3936
[17:39:31.738] Packages to be attached in all futures: [n=2] ‘stats’, ‘utils’
[17:39:31.738] getGlobalsAndPackagesXApply() ... DONE
[17:39:31.742] Number of futures (= number of chunks): 1
[17:39:31.742] Launching 1 futures (chunks) ...
[17:39:31.742] Chunk #1 of 1 ...
[17:39:31.742]  - Finding globals in 'X' for chunk #1 ...
[17:39:31.742]    + additional globals found: [n=0] 
[17:39:31.742]    + additional namespaces needed: [n=0] 
[17:39:31.743]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:31.743]  - seeds: <none>
[17:39:31.752] Created future:
[17:39:31.752] ClusterFuture:
[17:39:31.752] Label: ‘future_lapply-1’
[17:39:31.752] Expression:
[17:39:31.752] {
[17:39:31.752]     do.call(function(...) {
[17:39:31.752]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:31.752]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:31.752]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:31.752]             on.exit(options(oopts), add = TRUE)
[17:39:31.752]         }
[17:39:31.752]         {
[17:39:31.752]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:31.752]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:31.752]                 ...future.FUN(...future.X_jj, ...)
[17:39:31.752]             })
[17:39:31.752]         }
[17:39:31.752]     }, args = future.call.arguments)
[17:39:31.752] }
[17:39:31.752] Lazy evaluation: FALSE
[17:39:31.752] Asynchronous evaluation: TRUE
[17:39:31.752] Local evaluation: TRUE
[17:39:31.752] Environment: R_GlobalEnv
[17:39:31.752] Capture standard output: TRUE
[17:39:31.752] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:31.752] Globals: 7 objects totaling 3.90 KiB (function ‘...future.FUN’ of 3.73 KiB, numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[17:39:31.752] Packages: 2 packages (‘stats’, ‘utils’)
[17:39:31.752] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:31.752] Resolved: FALSE
[17:39:31.752] Value: <not collected>
[17:39:31.752] Conditions captured: <none>
[17:39:31.752] Early signaling: FALSE
[17:39:31.752] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:31.752] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:31.764] Chunk #1 of 1 ... DONE
[17:39:31.764] Launching 1 futures (chunks) ... DONE
[17:39:31.764] Resolving 1 futures (chunks) ...
[17:39:31.806]  - Number of value chunks collected: 1
[17:39:31.806] Resolving 1 futures (chunks) ... DONE
[17:39:31.807] Reducing values from 1 chunks ...
[17:39:31.807]  - Number of values collected after concatenation: 1
[17:39:31.807]  - Number of values expected: 1
[17:39:31.807] Reducing values from 1 chunks ... DONE
[17:39:31.807] future_lapply() ... DONE
[[1]]
[1] 1

Globals set ‘C’
[17:39:31.807] future_lapply() ...
[17:39:31.808] Number of chunks: 1
[17:39:31.808] getGlobalsAndPackagesXApply() ...
[17:39:31.808]  - future.globals: ‘a’, ‘b’
[17:39:31.808]  - use_args: TRUE
[17:39:31.808] Globals to be used in all futures (chunks): [n=4] ‘a’, ‘b’, ‘...future.FUN’, ‘...’
[17:39:31.809] List of 4
[17:39:31.809]  $ a            : num 1
[17:39:31.809]  $ b            : num 2
[17:39:31.809]  $ ...future.FUN:function (x)  
[17:39:31.809]  $ ...          : list()
[17:39:31.809]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:31.809]  - attr(*, "where")=List of 4
[17:39:31.809]   ..$ a            :<environment: R_GlobalEnv> 
[17:39:31.809]   ..$ b            :<environment: R_GlobalEnv> 
[17:39:31.809]   ..$ ...future.FUN:<environment: 0x5561038bb2e0> 
[17:39:31.809]   ..$ ...          :<environment: 0x5561038bb2e0> 
[17:39:31.809]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:31.809]  - attr(*, "resolved")= logi FALSE
[17:39:31.809]  - attr(*, "total_size")= num NA
[17:39:31.812] Packages to be attached in all futures: [n=1] ‘utils’
[17:39:31.812] getGlobalsAndPackagesXApply() ... DONE
[17:39:31.813] Number of futures (= number of chunks): 1
[17:39:31.813] Launching 1 futures (chunks) ...
[17:39:31.813] Chunk #1 of 1 ...
[17:39:31.813]  - seeds: <none>
[17:39:31.823] Created future:
[17:39:31.823] ClusterFuture:
[17:39:31.823] Label: ‘future_lapply-1’
[17:39:31.823] Expression:
[17:39:31.823] {
[17:39:31.823]     do.call(function(...) {
[17:39:31.823]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:31.823]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:31.823]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:31.823]             on.exit(options(oopts), add = TRUE)
[17:39:31.823]         }
[17:39:31.823]         {
[17:39:31.823]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:31.823]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:31.823]                 ...future.FUN(...future.X_jj, ...)
[17:39:31.823]             })
[17:39:31.823]         }
[17:39:31.823]     }, args = future.call.arguments)
[17:39:31.823] }
[17:39:31.823] Lazy evaluation: FALSE
[17:39:31.823] Asynchronous evaluation: TRUE
[17:39:31.823] Local evaluation: TRUE
[17:39:31.823] Environment: R_GlobalEnv
[17:39:31.823] Capture standard output: TRUE
[17:39:31.823] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:31.823] Globals: 7 objects totaling 3.90 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[17:39:31.823] Packages: 1 packages (‘utils’)
[17:39:31.823] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:31.823] Resolved: FALSE
[17:39:31.823] Value: <not collected>
[17:39:31.823] Conditions captured: <none>
[17:39:31.823] Early signaling: FALSE
[17:39:31.823] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:31.823] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:31.835] Chunk #1 of 1 ... DONE
[17:39:31.835] Launching 1 futures (chunks) ... DONE
[17:39:31.835] Resolving 1 futures (chunks) ...
[17:39:31.878]  - Number of value chunks collected: 1
[17:39:31.878] Resolving 1 futures (chunks) ... DONE
[17:39:31.878] Reducing values from 1 chunks ...
[17:39:31.878]  - Number of values collected after concatenation: 1
[17:39:31.879]  - Number of values expected: 1
[17:39:31.879] Reducing values from 1 chunks ... DONE
[17:39:31.879] future_lapply() ... DONE
[[1]]
[1] 1

Globals set ‘D’
[17:39:31.879] future_lapply() ...
[17:39:31.880] Number of chunks: 1
[17:39:31.880] getGlobalsAndPackagesXApply() ...
[17:39:31.880]  - future.globals: <name-value list> with names ‘2’, ‘3’
[17:39:31.880]  - use_args: TRUE
[17:39:31.880]  - Getting '...' globals ...
[17:39:31.881]    - '...' content: [n=0] 
[17:39:31.881] List of 1
[17:39:31.881]  $ ...: list()
[17:39:31.881]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:31.881]  - attr(*, "where")=List of 1
[17:39:31.881]   ..$ ...:<environment: 0x556102e03750> 
[17:39:31.881]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:31.881]  - attr(*, "resolved")= logi TRUE
[17:39:31.881]  - attr(*, "total_size")= num NA
[17:39:31.883]  - Getting '...' globals ... DONE
[17:39:31.884] Globals to be used in all futures (chunks): [n=4] ‘a’, ‘b’, ‘...future.FUN’, ‘...’
[17:39:31.884] List of 4
[17:39:31.884]  $ a            : num 2
[17:39:31.884]  $ b            : num 3
[17:39:31.884]  $ ...future.FUN:function (x)  
[17:39:31.884]  $ ...          : list()
[17:39:31.884]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:31.884]  - attr(*, "where")=List of 4
[17:39:31.884]   ..$ a            :<environment: R_EmptyEnv> 
[17:39:31.884]   ..$ b            :<environment: R_EmptyEnv> 
[17:39:31.884]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[17:39:31.884]   ..$ ...          :<environment: 0x556102e03750> 
[17:39:31.884]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:31.884]  - attr(*, "resolved")= logi FALSE
[17:39:31.884]  - attr(*, "total_size")= num NA
[17:39:31.888] Packages to be attached in all futures: [n=1] ‘utils’
[17:39:31.888] getGlobalsAndPackagesXApply() ... DONE
[17:39:31.888] Number of futures (= number of chunks): 1
[17:39:31.888] Launching 1 futures (chunks) ...
[17:39:31.888] Chunk #1 of 1 ...
[17:39:31.888]  - seeds: <none>
[17:39:31.899] Created future:
[17:39:31.899] ClusterFuture:
[17:39:31.899] Label: ‘future_lapply-1’
[17:39:31.899] Expression:
[17:39:31.899] {
[17:39:31.899]     do.call(function(...) {
[17:39:31.899]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:31.899]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:31.899]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:31.899]             on.exit(options(oopts), add = TRUE)
[17:39:31.899]         }
[17:39:31.899]         {
[17:39:31.899]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:31.899]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:31.899]                 ...future.FUN(...future.X_jj, ...)
[17:39:31.899]             })
[17:39:31.899]         }
[17:39:31.899]     }, args = future.call.arguments)
[17:39:31.899] }
[17:39:31.899] Lazy evaluation: FALSE
[17:39:31.899] Asynchronous evaluation: TRUE
[17:39:31.899] Local evaluation: TRUE
[17:39:31.899] Environment: R_GlobalEnv
[17:39:31.899] Capture standard output: TRUE
[17:39:31.899] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:31.899] Globals: 7 objects totaling 3.90 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[17:39:31.899] Packages: 1 packages (‘utils’)
[17:39:31.899] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:31.899] Resolved: FALSE
[17:39:31.899] Value: <not collected>
[17:39:31.899] Conditions captured: <none>
[17:39:31.899] Early signaling: FALSE
[17:39:31.899] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:31.899] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:31.911] Chunk #1 of 1 ... DONE
[17:39:31.911] Launching 1 futures (chunks) ... DONE
[17:39:31.911] Resolving 1 futures (chunks) ...
[17:39:31.954]  - Number of value chunks collected: 1
[17:39:31.954] Resolving 1 futures (chunks) ... DONE
[17:39:31.954] Reducing values from 1 chunks ...
[17:39:31.954]  - Number of values collected after concatenation: 1
[17:39:31.954]  - Number of values expected: 1
[17:39:31.955] Reducing values from 1 chunks ... DONE
[17:39:31.955] future_lapply() ... DONE
[[1]]
[1] 2

> 
> message("*** future_lapply() - globals ... DONE")
*** future_lapply() - globals ... DONE
> 
> 
> message("*** future_lapply() - manual globals ...")
*** future_lapply() - manual globals ...
> 
> d <- 42
> y <- future_lapply(1:2, FUN = function(x) { x * d },
+                    future.globals = structure(FALSE, add = "d"))
[17:39:31.955] future_lapply() ...
[17:39:31.956] Number of chunks: 1
[17:39:31.956] getGlobalsAndPackagesXApply() ...
[17:39:31.956]  - future.globals: FALSE
[17:39:31.957]  - globals found/used: [n=3] ‘d’, ‘FUN’, ‘future.call.arguments’
[17:39:31.957]  - needed namespaces: [n=0] 
[17:39:31.957] Finding globals ... DONE
[17:39:31.957]  - use_args: TRUE
[17:39:31.957]  - Getting '...' globals ...
[17:39:31.958]    - '...' content: [n=0] 
[17:39:31.958] List of 1
[17:39:31.958]  $ ...: list()
[17:39:31.958]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:31.958]  - attr(*, "where")=List of 1
[17:39:31.958]   ..$ ...:<environment: 0x5561048bd5b8> 
[17:39:31.958]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:31.958]  - attr(*, "resolved")= logi TRUE
[17:39:31.958]  - attr(*, "total_size")= num NA
[17:39:31.960]  - Getting '...' globals ... DONE
[17:39:31.961] Globals to be used in all futures (chunks): [n=4] ‘d’, ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[17:39:31.961] List of 4
[17:39:31.961]  $ d                    : num 42
[17:39:31.961]  $ ...future.FUN        :function (x)  
[17:39:31.961]  $ future.call.arguments: list()
[17:39:31.961]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:31.961]  $ ...                  : list()
[17:39:31.961]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:31.961]  - attr(*, "where")=List of 4
[17:39:31.961]   ..$ d                    :<environment: R_EmptyEnv> 
[17:39:31.961]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[17:39:31.961]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[17:39:31.961]   ..$ ...                  :<environment: 0x5561048bd5b8> 
[17:39:31.961]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:31.961]  - attr(*, "resolved")= logi FALSE
[17:39:31.961]  - attr(*, "total_size")= num 784
[17:39:31.964] Packages to be attached in all futures: [n=0] 
[17:39:31.965] getGlobalsAndPackagesXApply() ... DONE
[17:39:31.965] Number of futures (= number of chunks): 1
[17:39:31.965] Launching 1 futures (chunks) ...
[17:39:31.965] Chunk #1 of 1 ...
[17:39:31.965]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:39:31.965]  - seeds: <none>
[17:39:31.976] Created future:
[17:39:31.977] ClusterFuture:
[17:39:31.977] Label: ‘future_lapply-1’
[17:39:31.977] Expression:
[17:39:31.977] {
[17:39:31.977]     do.call(function(...) {
[17:39:31.977]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:31.977]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:31.977]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:31.977]             on.exit(options(oopts), add = TRUE)
[17:39:31.977]         }
[17:39:31.977]         {
[17:39:31.977]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:31.977]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:31.977]                 ...future.FUN(...future.X_jj, ...)
[17:39:31.977]             })
[17:39:31.977]         }
[17:39:31.977]     }, args = future.call.arguments)
[17:39:31.977] }
[17:39:31.977] Lazy evaluation: FALSE
[17:39:31.977] Asynchronous evaluation: TRUE
[17:39:31.977] Local evaluation: TRUE
[17:39:31.977] Environment: R_GlobalEnv
[17:39:31.977] Capture standard output: TRUE
[17:39:31.977] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:31.977] Globals: 6 objects totaling 896 bytes (numeric ‘d’ of 56 bytes, function ‘...future.FUN’ of 728 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 112 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:39:31.977] Packages: <none>
[17:39:31.977] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:31.977] Resolved: FALSE
[17:39:31.977] Value: <not collected>
[17:39:31.977] Conditions captured: <none>
[17:39:31.977] Early signaling: FALSE
[17:39:31.977] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:31.977] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:31.988] Chunk #1 of 1 ... DONE
[17:39:31.988] Launching 1 futures (chunks) ... DONE
[17:39:31.988] Resolving 1 futures (chunks) ...
[17:39:32.030]  - Number of value chunks collected: 1
[17:39:32.031] Resolving 1 futures (chunks) ... DONE
[17:39:32.031] Reducing values from 1 chunks ...
[17:39:32.031]  - Number of values collected after concatenation: 2
[17:39:32.031]  - Number of values expected: 2
[17:39:32.031] Reducing values from 1 chunks ... DONE
[17:39:32.031] future_lapply() ... DONE
> stopifnot(identical(y, list(42, 84)))
> 
> e <- 42
> res <- tryCatch({
+   future_lapply(1:2, FUN = function(x) { 2 * e },
+                 future.globals = structure(TRUE, ignore = "e"))
+ }, error = identity)
[17:39:32.031] future_lapply() ...
[17:39:32.032] Number of chunks: 1
[17:39:32.032] getGlobalsAndPackagesXApply() ...
[17:39:32.032]  - future.globals: TRUE
[17:39:32.034]  - globals found/used: [n=1] ‘FUN’
[17:39:32.034]  - needed namespaces: [n=0] 
[17:39:32.034] Finding globals ... DONE
[17:39:32.034]  - use_args: TRUE
[17:39:32.034]  - Getting '...' globals ...
[17:39:32.034]    - '...' content: [n=0] 
[17:39:32.035] List of 1
[17:39:32.035]  $ ...: list()
[17:39:32.035]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.035]  - attr(*, "where")=List of 1
[17:39:32.035]   ..$ ...:<environment: 0x556103a7ab90> 
[17:39:32.035]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.035]  - attr(*, "resolved")= logi TRUE
[17:39:32.035]  - attr(*, "total_size")= num NA
[17:39:32.037]  - Getting '...' globals ... DONE
[17:39:32.037] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:39:32.037] List of 2
[17:39:32.037]  $ ...future.FUN:function (x)  
[17:39:32.037]  $ ...          : list()
[17:39:32.037]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.037]  - attr(*, "where")=List of 2
[17:39:32.037]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:32.037]   ..$ ...          :<environment: 0x556103a7ab90> 
[17:39:32.037]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.037]  - attr(*, "resolved")= logi FALSE
[17:39:32.037]  - attr(*, "total_size")= num 728
[17:39:32.040] Packages to be attached in all futures: [n=0] 
[17:39:32.040] getGlobalsAndPackagesXApply() ... DONE
[17:39:32.040] Number of futures (= number of chunks): 1
[17:39:32.040] Launching 1 futures (chunks) ...
[17:39:32.041] Chunk #1 of 1 ...
[17:39:32.041]  - Finding globals in 'X' for chunk #1 ...
[17:39:32.041]    + additional globals found: [n=0] 
[17:39:32.041]    + additional namespaces needed: [n=0] 
[17:39:32.041]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:32.041]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:39:32.041]  - seeds: <none>
[17:39:32.050] Created future:
[17:39:32.051] ClusterFuture:
[17:39:32.051] Label: ‘future_lapply-1’
[17:39:32.051] Expression:
[17:39:32.051] {
[17:39:32.051]     do.call(function(...) {
[17:39:32.051]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:32.051]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:32.051]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:32.051]             on.exit(options(oopts), add = TRUE)
[17:39:32.051]         }
[17:39:32.051]         {
[17:39:32.051]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:32.051]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:32.051]                 ...future.FUN(...future.X_jj, ...)
[17:39:32.051]             })
[17:39:32.051]         }
[17:39:32.051]     }, args = future.call.arguments)
[17:39:32.051] }
[17:39:32.051] Lazy evaluation: FALSE
[17:39:32.051] Asynchronous evaluation: TRUE
[17:39:32.051] Local evaluation: TRUE
[17:39:32.051] Environment: R_GlobalEnv
[17:39:32.051] Capture standard output: TRUE
[17:39:32.051] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:32.051] Globals: 5 objects totaling 840 bytes (function ‘...future.FUN’ of 728 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 112 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:32.051] Packages: <none>
[17:39:32.051] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:32.051] Resolved: FALSE
[17:39:32.051] Value: <not collected>
[17:39:32.051] Conditions captured: <none>
[17:39:32.051] Early signaling: FALSE
[17:39:32.051] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:32.051] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:32.062] Chunk #1 of 1 ... DONE
[17:39:32.062] Launching 1 futures (chunks) ... DONE
[17:39:32.062] Resolving 1 futures (chunks) ...
> stopifnot(inherits(res, "error"))
> 
> message("*** future_lapply() - manual globals ... DONE")
*** future_lapply() - manual globals ... DONE
> 
> 
> 
> ## Test adopted from http://stackoverflow.com/questions/42561088/nested-do-call-within-a-foreach-dopar-environment-cant-find-function-passed-w
> 
> message("*** future_lapply() - tricky globals ...")
*** future_lapply() - tricky globals ...
> 
> my_add <- function(a, b) a + b
> 
> call_my_add <- function(a, b) {
+   do.call(my_add, args = list(a = a, b = b))
+ }
> 
> call_my_add_caller <- function(a, b, FUN = call_my_add) {
+   do.call(FUN, args = list(a = a, b = b))
+ }
> 
> main <- function(x = 1:2, caller = call_my_add_caller,
+                  args = list(FUN = call_my_add)) {
+   results <- future_lapply(x, FUN = function(i) {
+     do.call(caller, args = c(list(a = i, b = i + 1L), args))
+   })
+   results
+ }
> 
> x <- list(list(1:2))
> z_length <- lapply(x, FUN = do.call, what = length)
> fun <- function(...) sum(...)
> z_fun <- lapply(x, FUN = do.call, what = fun)
> 
> y0 <- NULL
> for (strategy in supportedStrategies()) {
+   plan(strategy)
+ 
+   y <- main(1:3)
+   if (is.null(y0)) y0 <- y
+   stopifnot(identical(y, y0))
+ 
+   message("- future_lapply(x, FUN = do.call, ...) ...")
+   z <- future_lapply(x, FUN = do.call, what = length)
+   stopifnot(identical(z, z_length))
+   z <- future_lapply(x, FUN = do.call, what = fun)
+   stopifnot(identical(z, z_fun))
+ 
+   message("- future_lapply(x, ...) - passing arguments via '...' ...")
+   ## typeof() == "list"
+   obj <- data.frame(a = 1:2)
+   stopifnot(typeof(obj) == "list")
+   y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+   stopifnot(identical(y[[1]], typeof(obj)))
+ 
+   ## typeof() == "environment"
+   obj <- new.env()
+   stopifnot(typeof(obj) == "environment")
+   y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+   stopifnot(identical(y[[1]], typeof(obj)))
+ 
+   ## typeof() == "S4"
+   if (requireNamespace("methods")) {
+     obj <- methods::getClass("MethodDefinition")
+     stopifnot(typeof(obj) == "S4")
+     y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+     stopifnot(identical(y[[1]], typeof(obj)))
+   }
+ 
+   message("- future_lapply(X, ...) - 'X' containing globals ...")
+   ## From https://github.com/HenrikBengtsson/future.apply/issues/12
+   a <- 42
+   b <- 21
+   X <- list(
+     function(b) 2 * a,
+     function() b / 2,
+     function() a + b,
+     function() nchar(toTitleCase("hello world"))
+   )
+   z0 <- lapply(X, FUN = function(f) f())
+   str(z0)
+   z1 <- future_lapply(X, FUN = function(f) f())
+   str(z1)
+   stopifnot(identical(z1, z0))
+ 
+   message("- future_lapply(x, ...) - passing '...' as a global ...")
+   ## https://github.com/HenrikBengtsson/future/issues/417
+   fcn0 <- function(...) { lapply(1, FUN = function(x) list(...)) }
+   z0 <- fcn0(a = 1)
+   str(list(z0 = z0))
+   stopifnot(identical(z0, list(list(a = 1))))
+   fcn <- function(...) { future_lapply(1, FUN = function(x) list(...)) }
+   z1 <- fcn(a = 1)
+   str(list(z1 = z1))
+   stopifnot(identical(z1, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/47
+   message("- future_lapply(X, ...) - '{ a <- a + 1; a }' ...")
+   a <- 1
+   z0 <- lapply(1, function(ii) {
+     a <- a + 1
+     a
+   })
+   z1 <- future_lapply(1, function(ii) {
+     a <- a + 1
+     a
+   })
+   stopifnot(identical(z1, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/47
+   message("- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...")
+   z2 <- tryCatch(future_lapply(1, function(ii) {
+     a
+     a <- a + 1
+   }), error = identity)
+   stopifnot(identical(z2, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/85
+   message("- future_lapply(..., future.globals = <list>) ...")
+   a <- 0
+   y <- future_lapply(1, FUN = function(x) a, future.globals = list(a = 42))
+   str(y)
+   stopifnot(y[[1]] == 42)
+ } ## for (strategy ...)
[17:39:32.146] future_lapply() ...
[17:39:32.147] Number of chunks: 1
[17:39:32.147] getGlobalsAndPackagesXApply() ...
[17:39:32.147]  - future.globals: TRUE
[17:39:32.154]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[17:39:32.154]  - needed namespaces: [n=0] 
[17:39:32.154] Finding globals ... DONE
[17:39:32.154]  - use_args: TRUE
[17:39:32.155]  - Getting '...' globals ...
[17:39:32.155]    - '...' content: [n=0] 
[17:39:32.155] List of 1
[17:39:32.155]  $ ...: list()
[17:39:32.155]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.155]  - attr(*, "where")=List of 1
[17:39:32.155]   ..$ ...:<environment: 0x5561048daaf0> 
[17:39:32.155]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.155]  - attr(*, "resolved")= logi TRUE
[17:39:32.155]  - attr(*, "total_size")= num NA
[17:39:32.158]  - Getting '...' globals ... DONE
[17:39:32.158] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[17:39:32.158] List of 6
[17:39:32.158]  $ ...future.FUN:function (i)  
[17:39:32.158]  $ caller       :function (a, b, FUN = call_my_add)  
[17:39:32.158]  $ args         :List of 1
[17:39:32.158]   ..$ FUN:function (a, b)  
[17:39:32.158]  $ call_my_add  :function (a, b)  
[17:39:32.158]  $ my_add       :function (a, b)  
[17:39:32.158]  $ ...          : list()
[17:39:32.158]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.158]  - attr(*, "where")=List of 6
[17:39:32.158]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:32.158]   ..$ caller       :<environment: R_EmptyEnv> 
[17:39:32.158]   ..$ args         :<environment: R_EmptyEnv> 
[17:39:32.158]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[17:39:32.158]   ..$ my_add       :<environment: R_EmptyEnv> 
[17:39:32.158]   ..$ ...          :<environment: 0x5561048daaf0> 
[17:39:32.158]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.158]  - attr(*, "resolved")= logi FALSE
[17:39:32.158]  - attr(*, "total_size")= num 6664
[17:39:32.165] Packages to be attached in all futures: [n=0] 
[17:39:32.165] getGlobalsAndPackagesXApply() ... DONE
[17:39:32.165] Number of futures (= number of chunks): 1
[17:39:32.165] Launching 1 futures (chunks) ...
[17:39:32.165] Chunk #1 of 1 ...
[17:39:32.165]  - Finding globals in 'X' for chunk #1 ...
[17:39:32.165]    + additional globals found: [n=0] 
[17:39:32.166]    + additional namespaces needed: [n=0] 
[17:39:32.166]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:32.166]  - Adjusted option 'future.globals.maxSize': 524288000 -> 3 * 524288000 = 1572864000 (bytes)
[17:39:32.166]  - seeds: <none>
[17:39:32.171] Created future:
[17:39:32.172] SequentialFuture:
[17:39:32.172] Label: ‘future_lapply-1’
[17:39:32.172] Expression:
[17:39:32.172] {
[17:39:32.172]     do.call(function(...) {
[17:39:32.172]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:32.172]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:32.172]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:32.172]             on.exit(options(oopts), add = TRUE)
[17:39:32.172]         }
[17:39:32.172]         {
[17:39:32.172]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:32.172]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:32.172]                 ...future.FUN(...future.X_jj, ...)
[17:39:32.172]             })
[17:39:32.172]         }
[17:39:32.172]     }, args = future.call.arguments)
[17:39:32.172] }
[17:39:32.172] Lazy evaluation: FALSE
[17:39:32.172] Asynchronous evaluation: FALSE
[17:39:32.172] Local evaluation: TRUE
[17:39:32.172] Environment: 0x5561048daf50
[17:39:32.172] Capture standard output: TRUE
[17:39:32.172] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:32.172] Globals: 9 objects totaling 16.21 KiB (function ‘...future.FUN’ of 1.70 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[17:39:32.172] Packages: <none>
[17:39:32.172] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:32.172] Resolved: TRUE
[17:39:32.172] Value: 168 bytes of class ‘list’
[17:39:32.172] Early signaling: FALSE
[17:39:32.172] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:32.172] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:39:32.173] Chunk #1 of 1 ... DONE
[17:39:32.173] Launching 1 futures (chunks) ... DONE
[17:39:32.173] Resolving 1 futures (chunks) ...
[17:39:32.173]  - Number of value chunks collected: 1
[17:39:32.174] Resolving 1 futures (chunks) ... DONE
[17:39:32.174] Reducing values from 1 chunks ...
[17:39:32.174]  - Number of values collected after concatenation: 3
[17:39:32.174]  - Number of values expected: 3
[17:39:32.174] Reducing values from 1 chunks ... DONE
[17:39:32.174] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[17:39:32.174] future_lapply() ...
[17:39:32.178] Number of chunks: 1
[17:39:32.178] getGlobalsAndPackagesXApply() ...
[17:39:32.178]  - future.globals: TRUE
[17:39:32.180]  - globals found/used: [n=1] ‘FUN’
[17:39:32.180]  - needed namespaces: [n=0] 
[17:39:32.181] Finding globals ... DONE
[17:39:32.181]  - use_args: TRUE
[17:39:32.181]  - Getting '...' globals ...
[17:39:32.181]    - '...' content: [n=1] ‘what’
[17:39:32.181] List of 1
[17:39:32.181]  $ ...:List of 1
[17:39:32.181]   ..$ what:function (x)  
[17:39:32.181]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.181]  - attr(*, "where")=List of 1
[17:39:32.181]   ..$ ...:<environment: 0x5561034b35a8> 
[17:39:32.181]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.181]  - attr(*, "resolved")= logi TRUE
[17:39:32.181]  - attr(*, "total_size")= num NA
[17:39:32.184]  - Getting '...' globals ... DONE
[17:39:32.184] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:39:32.184] List of 2
[17:39:32.184]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[17:39:32.184]  $ ...          :List of 1
[17:39:32.184]   ..$ what:function (x)  
[17:39:32.184]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.184]  - attr(*, "where")=List of 2
[17:39:32.184]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:32.184]   ..$ ...          :<environment: 0x5561034b35a8> 
[17:39:32.184]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.184]  - attr(*, "resolved")= logi FALSE
[17:39:32.184]  - attr(*, "total_size")= num 12192
[17:39:32.187] Packages to be attached in all futures: [n=0] 
[17:39:32.187] getGlobalsAndPackagesXApply() ... DONE
[17:39:32.188] Number of futures (= number of chunks): 1
[17:39:32.188] Launching 1 futures (chunks) ...
[17:39:32.188] Chunk #1 of 1 ...
[17:39:32.188]  - Finding globals in 'X' for chunk #1 ...
[17:39:32.188]    + additional globals found: [n=0] 
[17:39:32.188]    + additional namespaces needed: [n=0] 
[17:39:32.188]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:32.188]  - seeds: <none>
[17:39:32.191] Created future:
[17:39:32.191] SequentialFuture:
[17:39:32.191] Label: ‘future_lapply-1’
[17:39:32.191] Expression:
[17:39:32.191] {
[17:39:32.191]     do.call(function(...) {
[17:39:32.191]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:32.191]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:32.191]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:32.191]             on.exit(options(oopts), add = TRUE)
[17:39:32.191]         }
[17:39:32.191]         {
[17:39:32.191]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:32.191]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:32.191]                 ...future.FUN(...future.X_jj, ...)
[17:39:32.191]             })
[17:39:32.191]         }
[17:39:32.191]     }, args = future.call.arguments)
[17:39:32.191] }
[17:39:32.191] Lazy evaluation: FALSE
[17:39:32.191] Asynchronous evaluation: FALSE
[17:39:32.191] Local evaluation: TRUE
[17:39:32.191] Environment: R_GlobalEnv
[17:39:32.191] Capture standard output: TRUE
[17:39:32.191] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:32.191] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:32.191] Packages: <none>
[17:39:32.191] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:32.191] Resolved: TRUE
[17:39:32.191] Value: 56 bytes of class ‘list’
[17:39:32.191] Early signaling: FALSE
[17:39:32.191] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:32.191] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:39:32.192] Chunk #1 of 1 ... DONE
[17:39:32.192] Launching 1 futures (chunks) ... DONE
[17:39:32.192] Resolving 1 futures (chunks) ...
[17:39:32.193]  - Number of value chunks collected: 1
[17:39:32.193] Resolving 1 futures (chunks) ... DONE
[17:39:32.193] Reducing values from 1 chunks ...
[17:39:32.193]  - Number of values collected after concatenation: 1
[17:39:32.193]  - Number of values expected: 1
[17:39:32.193] Reducing values from 1 chunks ... DONE
[17:39:32.193] future_lapply() ... DONE
[17:39:32.193] future_lapply() ...
[17:39:32.194] Number of chunks: 1
[17:39:32.194] getGlobalsAndPackagesXApply() ...
[17:39:32.195]  - future.globals: TRUE
[17:39:32.197]  - globals found/used: [n=1] ‘FUN’
[17:39:32.197]  - needed namespaces: [n=0] 
[17:39:32.197] Finding globals ... DONE
[17:39:32.198]  - use_args: TRUE
[17:39:32.198]  - Getting '...' globals ...
[17:39:32.198]    - '...' content: [n=1] ‘what’
[17:39:32.198] List of 1
[17:39:32.198]  $ ...:List of 1
[17:39:32.198]   ..$ what:function (...)  
[17:39:32.198]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.198]  - attr(*, "where")=List of 1
[17:39:32.198]   ..$ ...:<environment: 0x5561045f81f8> 
[17:39:32.198]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.198]  - attr(*, "resolved")= logi TRUE
[17:39:32.198]  - attr(*, "total_size")= num NA
[17:39:32.201]  - Getting '...' globals ... DONE
[17:39:32.201] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:39:32.201] List of 2
[17:39:32.201]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[17:39:32.201]  $ ...          :List of 1
[17:39:32.201]   ..$ what:function (...)  
[17:39:32.201]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.201]  - attr(*, "where")=List of 2
[17:39:32.201]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:32.201]   ..$ ...          :<environment: 0x5561045f81f8> 
[17:39:32.201]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.201]  - attr(*, "resolved")= logi FALSE
[17:39:32.201]  - attr(*, "total_size")= num 12584
[17:39:32.204] Packages to be attached in all futures: [n=0] 
[17:39:32.204] getGlobalsAndPackagesXApply() ... DONE
[17:39:32.204] Number of futures (= number of chunks): 1
[17:39:32.204] Launching 1 futures (chunks) ...
[17:39:32.205] Chunk #1 of 1 ...
[17:39:32.205]  - Finding globals in 'X' for chunk #1 ...
[17:39:32.205]    + additional globals found: [n=0] 
[17:39:32.205]    + additional namespaces needed: [n=0] 
[17:39:32.205]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:32.205]  - seeds: <none>
[17:39:32.210] Created future:
[17:39:32.210] SequentialFuture:
[17:39:32.210] Label: ‘future_lapply-1’
[17:39:32.210] Expression:
[17:39:32.210] {
[17:39:32.210]     do.call(function(...) {
[17:39:32.210]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:32.210]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:32.210]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:32.210]             on.exit(options(oopts), add = TRUE)
[17:39:32.210]         }
[17:39:32.210]         {
[17:39:32.210]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:32.210]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:32.210]                 ...future.FUN(...future.X_jj, ...)
[17:39:32.210]             })
[17:39:32.210]         }
[17:39:32.210]     }, args = future.call.arguments)
[17:39:32.210] }
[17:39:32.210] Lazy evaluation: FALSE
[17:39:32.210] Asynchronous evaluation: FALSE
[17:39:32.210] Local evaluation: TRUE
[17:39:32.210] Environment: R_GlobalEnv
[17:39:32.210] Capture standard output: TRUE
[17:39:32.210] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:32.210] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:32.210] Packages: <none>
[17:39:32.210] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:32.210] Resolved: TRUE
[17:39:32.210] Value: 56 bytes of class ‘list’
[17:39:32.210] Early signaling: FALSE
[17:39:32.210] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:32.210] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:39:32.211] Chunk #1 of 1 ... DONE
[17:39:32.211] Launching 1 futures (chunks) ... DONE
[17:39:32.211] Resolving 1 futures (chunks) ...
[17:39:32.212]  - Number of value chunks collected: 1
[17:39:32.212] Resolving 1 futures (chunks) ... DONE
[17:39:32.212] Reducing values from 1 chunks ...
[17:39:32.212]  - Number of values collected after concatenation: 1
[17:39:32.212]  - Number of values expected: 1
[17:39:32.212] Reducing values from 1 chunks ... DONE
[17:39:32.212] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[17:39:32.213] future_lapply() ...
[17:39:32.213] Number of chunks: 1
[17:39:32.213] getGlobalsAndPackagesXApply() ...
[17:39:32.213]  - future.globals: TRUE
[17:39:32.215]  - globals found/used: [n=1] ‘FUN’
[17:39:32.215]  - needed namespaces: [n=0] 
[17:39:32.215] Finding globals ... DONE
[17:39:32.215]  - use_args: TRUE
[17:39:32.215]  - Getting '...' globals ...
[17:39:32.216]    - '...' content: [n=1] ‘b’
[17:39:32.216] List of 1
[17:39:32.216]  $ ...:List of 1
[17:39:32.216]   ..$ b:'data.frame':	2 obs. of  1 variable:
[17:39:32.216]   .. ..$ a: int [1:2] 1 2
[17:39:32.216]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.216]  - attr(*, "where")=List of 1
[17:39:32.216]   ..$ ...:<environment: 0x556103c09250> 
[17:39:32.216]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.216]  - attr(*, "resolved")= logi TRUE
[17:39:32.216]  - attr(*, "total_size")= num NA
[17:39:32.219]  - Getting '...' globals ... DONE
[17:39:32.219] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:39:32.219] List of 2
[17:39:32.219]  $ ...future.FUN:function (a, b)  
[17:39:32.219]  $ ...          :List of 1
[17:39:32.219]   ..$ b:'data.frame':	2 obs. of  1 variable:
[17:39:32.219]   .. ..$ a: int [1:2] 1 2
[17:39:32.219]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.219]  - attr(*, "where")=List of 2
[17:39:32.219]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:32.219]   ..$ ...          :<environment: 0x556103c09250> 
[17:39:32.219]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.219]  - attr(*, "resolved")= logi FALSE
[17:39:32.219]  - attr(*, "total_size")= num 1440
[17:39:32.223] Packages to be attached in all futures: [n=0] 
[17:39:32.223] getGlobalsAndPackagesXApply() ... DONE
[17:39:32.223] Number of futures (= number of chunks): 1
[17:39:32.223] Launching 1 futures (chunks) ...
[17:39:32.223] Chunk #1 of 1 ...
[17:39:32.223]  - Finding globals in 'X' for chunk #1 ...
[17:39:32.224]    + additional globals found: [n=0] 
[17:39:32.224]    + additional namespaces needed: [n=0] 
[17:39:32.224]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:32.224]  - seeds: <none>
[17:39:32.226] Created future:
[17:39:32.226] SequentialFuture:
[17:39:32.226] Label: ‘future_lapply-1’
[17:39:32.226] Expression:
[17:39:32.226] {
[17:39:32.226]     do.call(function(...) {
[17:39:32.226]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:32.226]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:32.226]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:32.226]             on.exit(options(oopts), add = TRUE)
[17:39:32.226]         }
[17:39:32.226]         {
[17:39:32.226]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:32.226]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:32.226]                 ...future.FUN(...future.X_jj, ...)
[17:39:32.226]             })
[17:39:32.226]         }
[17:39:32.226]     }, args = future.call.arguments)
[17:39:32.226] }
[17:39:32.226] Lazy evaluation: FALSE
[17:39:32.226] Asynchronous evaluation: FALSE
[17:39:32.226] Local evaluation: TRUE
[17:39:32.226] Environment: R_GlobalEnv
[17:39:32.226] Capture standard output: TRUE
[17:39:32.226] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:32.226] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:32.226] Packages: <none>
[17:39:32.226] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:32.226] Resolved: TRUE
[17:39:32.226] Value: 112 bytes of class ‘list’
[17:39:32.226] Early signaling: FALSE
[17:39:32.226] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:32.226] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:39:32.227] Chunk #1 of 1 ... DONE
[17:39:32.227] Launching 1 futures (chunks) ... DONE
[17:39:32.227] Resolving 1 futures (chunks) ...
[17:39:32.228]  - Number of value chunks collected: 1
[17:39:32.228] Resolving 1 futures (chunks) ... DONE
[17:39:32.228] Reducing values from 1 chunks ...
[17:39:32.228]  - Number of values collected after concatenation: 1
[17:39:32.228]  - Number of values expected: 1
[17:39:32.228] Reducing values from 1 chunks ... DONE
[17:39:32.228] future_lapply() ... DONE
[17:39:32.228] future_lapply() ...
[17:39:32.229] Number of chunks: 1
[17:39:32.229] getGlobalsAndPackagesXApply() ...
[17:39:32.229]  - future.globals: TRUE
[17:39:32.231]  - globals found/used: [n=1] ‘FUN’
[17:39:32.231]  - needed namespaces: [n=0] 
[17:39:32.231] Finding globals ... DONE
[17:39:32.231]  - use_args: TRUE
[17:39:32.231]  - Getting '...' globals ...
[17:39:32.231]    - '...' content: [n=1] ‘b’
[17:39:32.231] List of 1
[17:39:32.231]  $ ...:List of 1
[17:39:32.231]   ..$ b:<environment: 0x556102e26ca8> 
[17:39:32.231]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.231]  - attr(*, "where")=List of 1
[17:39:32.231]   ..$ ...:<environment: 0x556102e27760> 
[17:39:32.231]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.231]  - attr(*, "resolved")= logi TRUE
[17:39:32.231]  - attr(*, "total_size")= num NA
[17:39:32.234]  - Getting '...' globals ... DONE
[17:39:32.234] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:39:32.234] List of 2
[17:39:32.234]  $ ...future.FUN:function (a, b)  
[17:39:32.234]  $ ...          :List of 1
[17:39:32.234]   ..$ b:<environment: 0x556102e26ca8> 
[17:39:32.234]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.234]  - attr(*, "where")=List of 2
[17:39:32.234]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:32.234]   ..$ ...          :<environment: 0x556102e27760> 
[17:39:32.234]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.234]  - attr(*, "resolved")= logi FALSE
[17:39:32.234]  - attr(*, "total_size")= num 1440
[17:39:32.237] Packages to be attached in all futures: [n=0] 
[17:39:32.238] getGlobalsAndPackagesXApply() ... DONE
[17:39:32.238] Number of futures (= number of chunks): 1
[17:39:32.238] Launching 1 futures (chunks) ...
[17:39:32.238] Chunk #1 of 1 ...
[17:39:32.238]  - Finding globals in 'X' for chunk #1 ...
[17:39:32.238]    + additional globals found: [n=0] 
[17:39:32.238]    + additional namespaces needed: [n=0] 
[17:39:32.238]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:32.239]  - seeds: <none>
[17:39:32.241] Created future:
[17:39:32.241] SequentialFuture:
[17:39:32.241] Label: ‘future_lapply-1’
[17:39:32.241] Expression:
[17:39:32.241] {
[17:39:32.241]     do.call(function(...) {
[17:39:32.241]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:32.241]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:32.241]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:32.241]             on.exit(options(oopts), add = TRUE)
[17:39:32.241]         }
[17:39:32.241]         {
[17:39:32.241]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:32.241]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:32.241]                 ...future.FUN(...future.X_jj, ...)
[17:39:32.241]             })
[17:39:32.241]         }
[17:39:32.241]     }, args = future.call.arguments)
[17:39:32.241] }
[17:39:32.241] Lazy evaluation: FALSE
[17:39:32.241] Asynchronous evaluation: FALSE
[17:39:32.241] Local evaluation: TRUE
[17:39:32.241] Environment: R_GlobalEnv
[17:39:32.241] Capture standard output: TRUE
[17:39:32.241] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:32.241] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:32.241] Packages: <none>
[17:39:32.241] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:32.241] Resolved: TRUE
[17:39:32.241] Value: 120 bytes of class ‘list’
[17:39:32.241] Early signaling: FALSE
[17:39:32.241] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:32.241] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:39:32.242] Chunk #1 of 1 ... DONE
[17:39:32.242] Launching 1 futures (chunks) ... DONE
[17:39:32.242] Resolving 1 futures (chunks) ...
[17:39:32.242]  - Number of value chunks collected: 1
[17:39:32.242] Resolving 1 futures (chunks) ... DONE
[17:39:32.243] Reducing values from 1 chunks ...
[17:39:32.243]  - Number of values collected after concatenation: 1
[17:39:32.243]  - Number of values expected: 1
[17:39:32.243] Reducing values from 1 chunks ... DONE
[17:39:32.243] future_lapply() ... DONE
[17:39:32.243] future_lapply() ...
[17:39:32.244] Number of chunks: 1
[17:39:32.244] getGlobalsAndPackagesXApply() ...
[17:39:32.244]  - future.globals: TRUE
[17:39:32.246]  - globals found/used: [n=1] ‘FUN’
[17:39:32.246]  - needed namespaces: [n=0] 
[17:39:32.246] Finding globals ... DONE
[17:39:32.246]  - use_args: TRUE
[17:39:32.246]  - Getting '...' globals ...
[17:39:32.246]    - '...' content: [n=1] ‘b’
[17:39:32.247] List of 1
[17:39:32.247]  $ ...:List of 1
[17:39:32.247]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[17:39:32.247]   .. .. ..@ slots     :List of 4
[17:39:32.247]   .. .. .. ..$ .Data  : chr "function"
[17:39:32.247]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.247]   .. .. .. ..$ target : chr "signature"
[17:39:32.247]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.247]   .. .. .. ..$ defined: chr "signature"
[17:39:32.247]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.247]   .. .. .. ..$ generic: chr "character"
[17:39:32.247]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.247]   .. .. ..@ contains  :List of 3
[17:39:32.247]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.247]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:39:32.247]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ superClass: chr "function"
[17:39:32.247]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.247]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.247]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.247]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.247]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:32.247]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[17:39:32.247]   .. .. .. .. .. ..@ distance  : num 1
[17:39:32.247]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.247]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:39:32.247]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[17:39:32.247]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.247]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.247]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.247]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.247]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:32.247]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.247]   .. .. .. .. .. ..@ distance  : num 1
[17:39:32.247]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.247]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:39:32.247]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[17:39:32.247]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.247]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.247]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.247]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.247]   .. .. .. .. .. ..@ by        : chr "function"
[17:39:32.247]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.247]   .. .. .. .. .. ..@ distance  : num 2
[17:39:32.247]   .. .. ..@ virtual   : logi FALSE
[17:39:32.247]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[17:39:32.247]  list()
[17:39:32.247]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[17:39:32.247]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:39:32.247]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:39:32.247]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:39:32.247]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[17:39:32.247]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:39:32.247]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:39:32.247]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:39:32.247]   .. .. .. .. ..$ generic: chr(0) 
[17:39:32.247]   .. .. ..@ validity  : NULL
[17:39:32.247]   .. .. ..@ access    : list()
[17:39:32.247]   .. .. ..@ className : chr "MethodDefinition"
[17:39:32.247]   .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.247]   .. .. ..@ package   : chr "methods"
[17:39:32.247]   .. .. ..@ subclasses:List of 7
[17:39:32.247]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.247]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[17:39:32.247]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:32.247]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.247]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.247]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.247]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.247]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:32.247]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.247]   .. .. .. .. .. ..@ distance  : num 1
[17:39:32.247]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.247]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[17:39:32.247]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:32.247]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.247]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.247]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.247]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.247]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:32.247]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.247]   .. .. .. .. .. ..@ distance  : num 1
[17:39:32.247]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.247]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[17:39:32.247]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:32.247]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.247]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.247]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.247]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.247]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:32.247]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.247]   .. .. .. .. .. ..@ distance  : num 1
[17:39:32.247]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.247]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[17:39:32.247]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:32.247]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.247]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.247]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.247]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.247]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:32.247]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.247]   .. .. .. .. .. ..@ distance  : num 1
[17:39:32.247]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.247]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[17:39:32.247]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:32.247]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.247]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.247]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.247]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.247]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:39:32.247]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.247]   .. .. .. .. .. ..@ distance  : num 2
[17:39:32.247]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.247]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[17:39:32.247]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:32.247]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.247]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.247]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.247]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.247]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[17:39:32.247]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.247]   .. .. .. .. .. ..@ distance  : num 2
[17:39:32.247]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.247]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[17:39:32.247]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:32.247]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.247]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.247]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.247]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.247]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:39:32.247]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.247]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.247]   .. .. .. .. .. ..@ distance  : num 2
[17:39:32.247]   .. .. ..@ versionKey:<externalptr> 
[17:39:32.247]   .. .. ..@ sealed    : logi TRUE
[17:39:32.247]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.247]  - attr(*, "where")=List of 1
[17:39:32.247]   ..$ ...:<environment: 0x5561047f55d0> 
[17:39:32.247]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.247]  - attr(*, "resolved")= logi TRUE
[17:39:32.247]  - attr(*, "total_size")= num NA
[17:39:32.294]  - Getting '...' globals ... DONE
[17:39:32.294] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:39:32.295] List of 2
[17:39:32.295]  $ ...future.FUN:function (a, b)  
[17:39:32.295]  $ ...          :List of 1
[17:39:32.295]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[17:39:32.295]   .. .. ..@ slots     :List of 4
[17:39:32.295]   .. .. .. ..$ .Data  : chr "function"
[17:39:32.295]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.295]   .. .. .. ..$ target : chr "signature"
[17:39:32.295]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.295]   .. .. .. ..$ defined: chr "signature"
[17:39:32.295]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.295]   .. .. .. ..$ generic: chr "character"
[17:39:32.295]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.295]   .. .. ..@ contains  :List of 3
[17:39:32.295]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.295]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:39:32.295]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ superClass: chr "function"
[17:39:32.295]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.295]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.295]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.295]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.295]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:32.295]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[17:39:32.295]   .. .. .. .. .. ..@ distance  : num 1
[17:39:32.295]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.295]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:39:32.295]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[17:39:32.295]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.295]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.295]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.295]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.295]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:32.295]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.295]   .. .. .. .. .. ..@ distance  : num 1
[17:39:32.295]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.295]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:39:32.295]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[17:39:32.295]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.295]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.295]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.295]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.295]   .. .. .. .. .. ..@ by        : chr "function"
[17:39:32.295]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.295]   .. .. .. .. .. ..@ distance  : num 2
[17:39:32.295]   .. .. ..@ virtual   : logi FALSE
[17:39:32.295]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[17:39:32.295]  list()
[17:39:32.295]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[17:39:32.295]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:39:32.295]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:39:32.295]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:39:32.295]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[17:39:32.295]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:39:32.295]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:39:32.295]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:39:32.295]   .. .. .. .. ..$ generic: chr(0) 
[17:39:32.295]   .. .. ..@ validity  : NULL
[17:39:32.295]   .. .. ..@ access    : list()
[17:39:32.295]   .. .. ..@ className : chr "MethodDefinition"
[17:39:32.295]   .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.295]   .. .. ..@ package   : chr "methods"
[17:39:32.295]   .. .. ..@ subclasses:List of 7
[17:39:32.295]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.295]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[17:39:32.295]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:32.295]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.295]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.295]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.295]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.295]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:32.295]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.295]   .. .. .. .. .. ..@ distance  : num 1
[17:39:32.295]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.295]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[17:39:32.295]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:32.295]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.295]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.295]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.295]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.295]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:32.295]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.295]   .. .. .. .. .. ..@ distance  : num 1
[17:39:32.295]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.295]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[17:39:32.295]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:32.295]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.295]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.295]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.295]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.295]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:32.295]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.295]   .. .. .. .. .. ..@ distance  : num 1
[17:39:32.295]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.295]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[17:39:32.295]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:32.295]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.295]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.295]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.295]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.295]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:32.295]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.295]   .. .. .. .. .. ..@ distance  : num 1
[17:39:32.295]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.295]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[17:39:32.295]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:32.295]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.295]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.295]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.295]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.295]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:39:32.295]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.295]   .. .. .. .. .. ..@ distance  : num 2
[17:39:32.295]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.295]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[17:39:32.295]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:32.295]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.295]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.295]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.295]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.295]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[17:39:32.295]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.295]   .. .. .. .. .. ..@ distance  : num 2
[17:39:32.295]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.295]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[17:39:32.295]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:32.295]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.295]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.295]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.295]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.295]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:39:32.295]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.295]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.295]   .. .. .. .. .. ..@ distance  : num 2
[17:39:32.295]   .. .. ..@ versionKey:<externalptr> 
[17:39:32.295]   .. .. ..@ sealed    : logi TRUE
[17:39:32.295]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.295]  - attr(*, "where")=List of 2
[17:39:32.295]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:32.295]   ..$ ...          :<environment: 0x5561047f55d0> 
[17:39:32.295]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.295]  - attr(*, "resolved")= logi FALSE
[17:39:32.295]  - attr(*, "total_size")= num 312512
[17:39:32.343] Packages to be attached in all futures: [n=0] 
[17:39:32.343] getGlobalsAndPackagesXApply() ... DONE
[17:39:32.344] Number of futures (= number of chunks): 1
[17:39:32.344] Launching 1 futures (chunks) ...
[17:39:32.344] Chunk #1 of 1 ...
[17:39:32.344]  - Finding globals in 'X' for chunk #1 ...
[17:39:32.344]    + additional globals found: [n=0] 
[17:39:32.344]    + additional namespaces needed: [n=0] 
[17:39:32.344]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:32.344]  - seeds: <none>
[17:39:32.347] Created future:
[17:39:32.347] SequentialFuture:
[17:39:32.347] Label: ‘future_lapply-1’
[17:39:32.347] Expression:
[17:39:32.347] {
[17:39:32.347]     do.call(function(...) {
[17:39:32.347]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:32.347]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:32.347]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:32.347]             on.exit(options(oopts), add = TRUE)
[17:39:32.347]         }
[17:39:32.347]         {
[17:39:32.347]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:32.347]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:32.347]                 ...future.FUN(...future.X_jj, ...)
[17:39:32.347]             })
[17:39:32.347]         }
[17:39:32.347]     }, args = future.call.arguments)
[17:39:32.347] }
[17:39:32.347] Lazy evaluation: FALSE
[17:39:32.347] Asynchronous evaluation: FALSE
[17:39:32.347] Local evaluation: TRUE
[17:39:32.347] Environment: R_GlobalEnv
[17:39:32.347] Capture standard output: TRUE
[17:39:32.347] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:32.347] Globals: 5 objects totaling 305.24 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 303.78 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:32.347] Packages: <none>
[17:39:32.347] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:32.347] Resolved: TRUE
[17:39:32.347] Value: 112 bytes of class ‘list’
[17:39:32.347] Early signaling: FALSE
[17:39:32.347] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:32.347] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:39:32.348] Chunk #1 of 1 ... DONE
[17:39:32.348] Launching 1 futures (chunks) ... DONE
[17:39:32.348] Resolving 1 futures (chunks) ...
[17:39:32.349]  - Number of value chunks collected: 1
[17:39:32.349] Resolving 1 futures (chunks) ... DONE
[17:39:32.349] Reducing values from 1 chunks ...
[17:39:32.349]  - Number of values collected after concatenation: 1
[17:39:32.349]  - Number of values expected: 1
[17:39:32.349] Reducing values from 1 chunks ... DONE
[17:39:32.349] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[17:39:32.351] future_lapply() ...
[17:39:32.352] Number of chunks: 1
[17:39:32.352] getGlobalsAndPackagesXApply() ...
[17:39:32.352]  - future.globals: TRUE
[17:39:32.353]  - globals found/used: [n=1] ‘FUN’
[17:39:32.353]  - needed namespaces: [n=0] 
[17:39:32.353] Finding globals ... DONE
[17:39:32.354]  - use_args: TRUE
[17:39:32.354]  - Getting '...' globals ...
[17:39:32.354]    - '...' content: [n=0] 
[17:39:32.354] List of 1
[17:39:32.354]  $ ...: list()
[17:39:32.354]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.354]  - attr(*, "where")=List of 1
[17:39:32.354]   ..$ ...:<environment: 0x556103248f78> 
[17:39:32.354]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.354]  - attr(*, "resolved")= logi TRUE
[17:39:32.354]  - attr(*, "total_size")= num NA
[17:39:32.357]  - Getting '...' globals ... DONE
[17:39:32.357] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:39:32.357] List of 2
[17:39:32.357]  $ ...future.FUN:function (f)  
[17:39:32.357]  $ ...          : list()
[17:39:32.357]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.357]  - attr(*, "where")=List of 2
[17:39:32.357]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:32.357]   ..$ ...          :<environment: 0x556103248f78> 
[17:39:32.357]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.357]  - attr(*, "resolved")= logi FALSE
[17:39:32.357]  - attr(*, "total_size")= num 1008
[17:39:32.360] Packages to be attached in all futures: [n=0] 
[17:39:32.360] getGlobalsAndPackagesXApply() ... DONE
[17:39:32.360] Number of futures (= number of chunks): 1
[17:39:32.360] Launching 1 futures (chunks) ...
[17:39:32.360] Chunk #1 of 1 ...
[17:39:32.360]  - Finding globals in 'X' for chunk #1 ...
[17:39:32.362]    + additional globals found: [n=2] ‘a’, ‘b’
[17:39:32.363]    + additional namespaces needed: [n=1] ‘tools’
[17:39:32.363]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:32.363]  - Adjusted option 'future.globals.maxSize': 524288000 -> 4 * 524288000 = 2097152000 (bytes)
[17:39:32.363]  - seeds: <none>
[17:39:32.366] Created future:
[17:39:32.366] SequentialFuture:
[17:39:32.366] Label: ‘future_lapply-1’
[17:39:32.366] Expression:
[17:39:32.366] {
[17:39:32.366]     do.call(function(...) {
[17:39:32.366]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:32.366]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:32.366]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:32.366]             on.exit(options(oopts), add = TRUE)
[17:39:32.366]         }
[17:39:32.366]         {
[17:39:32.366]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:32.366]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:32.366]                 ...future.FUN(...future.X_jj, ...)
[17:39:32.366]             })
[17:39:32.366]         }
[17:39:32.366]     }, args = future.call.arguments)
[17:39:32.366] }
[17:39:32.366] Lazy evaluation: FALSE
[17:39:32.366] Asynchronous evaluation: FALSE
[17:39:32.366] Local evaluation: TRUE
[17:39:32.366] Environment: R_GlobalEnv
[17:39:32.366] Capture standard output: TRUE
[17:39:32.366] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:32.366] Globals: 7 objects totaling 7.49 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 6.40 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[17:39:32.366] Packages: 1 packages (‘tools’)
[17:39:32.366] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:32.366] Resolved: TRUE
[17:39:32.366] Value: 224 bytes of class ‘list’
[17:39:32.366] Early signaling: FALSE
[17:39:32.366] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:32.366] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:39:32.367] Chunk #1 of 1 ... DONE
[17:39:32.367] Launching 1 futures (chunks) ... DONE
[17:39:32.367] Resolving 1 futures (chunks) ...
[17:39:32.368]  - Number of value chunks collected: 1
[17:39:32.368] Resolving 1 futures (chunks) ... DONE
[17:39:32.368] Reducing values from 1 chunks ...
[17:39:32.368]  - Number of values collected after concatenation: 4
[17:39:32.368]  - Number of values expected: 4
[17:39:32.368] Reducing values from 1 chunks ... DONE
[17:39:32.368] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[17:39:32.371] future_lapply() ...
[17:39:32.372] Number of chunks: 1
[17:39:32.372] getGlobalsAndPackagesXApply() ...
[17:39:32.372]  - future.globals: TRUE
[17:39:32.374]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[17:39:32.374]  - needed namespaces: [n=0] 
[17:39:32.374] Finding globals ... DONE
[17:39:32.374]  - use_args: TRUE
[17:39:32.374]  - Getting '...' globals ...
[17:39:32.375]    - '...' content: [n=0] 
[17:39:32.375] List of 1
[17:39:32.375]  $ ...: list()
[17:39:32.375]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.375]  - attr(*, "where")=List of 1
[17:39:32.375]   ..$ ...:<environment: 0x5561048579f0> 
[17:39:32.375]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.375]  - attr(*, "resolved")= logi TRUE
[17:39:32.375]  - attr(*, "total_size")= num NA
[17:39:32.377]  - Getting '...' globals ... DONE
[17:39:32.377] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[17:39:32.377] List of 3
[17:39:32.377]  $ ...future.FUN        :function (x)  
[17:39:32.377]  $ future.call.arguments:List of 1
[17:39:32.377]   ..$ a: num 1
[17:39:32.377]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.377]  $ ...                  : list()
[17:39:32.377]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.377]  - attr(*, "where")=List of 3
[17:39:32.377]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[17:39:32.377]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[17:39:32.377]   ..$ ...                  :<environment: 0x5561048579f0> 
[17:39:32.377]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.377]  - attr(*, "resolved")= logi FALSE
[17:39:32.377]  - attr(*, "total_size")= num 1272
[17:39:32.381] Packages to be attached in all futures: [n=0] 
[17:39:32.383] getGlobalsAndPackagesXApply() ... DONE
[17:39:32.383] Number of futures (= number of chunks): 1
[17:39:32.383] Launching 1 futures (chunks) ...
[17:39:32.383] Chunk #1 of 1 ...
[17:39:32.384]  - Finding globals in 'X' for chunk #1 ...
[17:39:32.384]    + additional globals found: [n=0] 
[17:39:32.384]    + additional namespaces needed: [n=0] 
[17:39:32.384]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:32.384]  - seeds: <none>
[17:39:32.386] Created future:
[17:39:32.387] SequentialFuture:
[17:39:32.387] Label: ‘future_lapply-1’
[17:39:32.387] Expression:
[17:39:32.387] {
[17:39:32.387]     do.call(function(...) {
[17:39:32.387]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:32.387]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:32.387]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:32.387]             on.exit(options(oopts), add = TRUE)
[17:39:32.387]         }
[17:39:32.387]         {
[17:39:32.387]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:32.387]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:32.387]                 ...future.FUN(...future.X_jj)
[17:39:32.387]             })
[17:39:32.387]         }
[17:39:32.387]     }, args = future.call.arguments)
[17:39:32.387] }
[17:39:32.387] Lazy evaluation: FALSE
[17:39:32.387] Asynchronous evaluation: FALSE
[17:39:32.387] Local evaluation: TRUE
[17:39:32.387] Environment: 0x556104857d70
[17:39:32.387] Capture standard output: TRUE
[17:39:32.387] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:32.387] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:32.387] Packages: <none>
[17:39:32.387] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:32.387] Resolved: TRUE
[17:39:32.387] Value: 56 bytes of class ‘list’
[17:39:32.387] Early signaling: FALSE
[17:39:32.387] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:32.387] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:39:32.388] Chunk #1 of 1 ... DONE
[17:39:32.388] Launching 1 futures (chunks) ... DONE
[17:39:32.388] Resolving 1 futures (chunks) ...
[17:39:32.388]  - Number of value chunks collected: 1
[17:39:32.388] Resolving 1 futures (chunks) ... DONE
[17:39:32.388] Reducing values from 1 chunks ...
[17:39:32.389]  - Number of values collected after concatenation: 1
[17:39:32.389]  - Number of values expected: 1
[17:39:32.389] Reducing values from 1 chunks ... DONE
[17:39:32.389] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[17:39:32.390] future_lapply() ...
[17:39:32.391] Number of chunks: 1
[17:39:32.391] getGlobalsAndPackagesXApply() ...
[17:39:32.391]  - future.globals: TRUE
[17:39:32.393]  - globals found/used: [n=2] ‘FUN’, ‘a’
[17:39:32.393]  - needed namespaces: [n=0] 
[17:39:32.393] Finding globals ... DONE
[17:39:32.393]  - use_args: TRUE
[17:39:32.394]  - Getting '...' globals ...
[17:39:32.394]    - '...' content: [n=0] 
[17:39:32.394] List of 1
[17:39:32.394]  $ ...: list()
[17:39:32.394]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.394]  - attr(*, "where")=List of 1
[17:39:32.394]   ..$ ...:<environment: 0x5561038fc890> 
[17:39:32.394]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.394]  - attr(*, "resolved")= logi TRUE
[17:39:32.394]  - attr(*, "total_size")= num NA
[17:39:32.396]  - Getting '...' globals ... DONE
[17:39:32.397] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[17:39:32.397] List of 3
[17:39:32.397]  $ ...future.FUN:function (ii)  
[17:39:32.397]  $ a            : num 1
[17:39:32.397]  $ ...          : list()
[17:39:32.397]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.397]  - attr(*, "where")=List of 3
[17:39:32.397]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:32.397]   ..$ a            :<environment: R_EmptyEnv> 
[17:39:32.397]   ..$ ...          :<environment: 0x5561038fc890> 
[17:39:32.397]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.397]  - attr(*, "resolved")= logi FALSE
[17:39:32.397]  - attr(*, "total_size")= num 2984
[17:39:32.400] Packages to be attached in all futures: [n=0] 
[17:39:32.400] getGlobalsAndPackagesXApply() ... DONE
[17:39:32.400] Number of futures (= number of chunks): 1
[17:39:32.400] Launching 1 futures (chunks) ...
[17:39:32.401] Chunk #1 of 1 ...
[17:39:32.401]  - Finding globals in 'X' for chunk #1 ...
[17:39:32.401]    + additional globals found: [n=0] 
[17:39:32.401]    + additional namespaces needed: [n=0] 
[17:39:32.401]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:32.401]  - seeds: <none>
[17:39:32.404] Created future:
[17:39:32.404] SequentialFuture:
[17:39:32.404] Label: ‘future_lapply-1’
[17:39:32.404] Expression:
[17:39:32.404] {
[17:39:32.404]     do.call(function(...) {
[17:39:32.404]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:32.404]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:32.404]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:32.404]             on.exit(options(oopts), add = TRUE)
[17:39:32.404]         }
[17:39:32.404]         {
[17:39:32.404]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:32.404]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:32.404]                 ...future.FUN(...future.X_jj, ...)
[17:39:32.404]             })
[17:39:32.404]         }
[17:39:32.404]     }, args = future.call.arguments)
[17:39:32.404] }
[17:39:32.404] Lazy evaluation: FALSE
[17:39:32.404] Asynchronous evaluation: FALSE
[17:39:32.404] Local evaluation: TRUE
[17:39:32.404] Environment: R_GlobalEnv
[17:39:32.404] Capture standard output: TRUE
[17:39:32.404] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:32.404] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:39:32.404] Packages: <none>
[17:39:32.404] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:32.404] Resolved: TRUE
[17:39:32.404] Value: 56 bytes of class ‘list’
[17:39:32.404] Early signaling: FALSE
[17:39:32.404] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:32.404] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:39:32.405] Chunk #1 of 1 ... DONE
[17:39:32.405] Launching 1 futures (chunks) ... DONE
[17:39:32.405] Resolving 1 futures (chunks) ...
[17:39:32.406]  - Number of value chunks collected: 1
[17:39:32.406] Resolving 1 futures (chunks) ... DONE
[17:39:32.406] Reducing values from 1 chunks ...
[17:39:32.406]  - Number of values collected after concatenation: 1
[17:39:32.406]  - Number of values expected: 1
[17:39:32.406] Reducing values from 1 chunks ... DONE
[17:39:32.406] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[17:39:32.406] future_lapply() ...
[17:39:32.407] Number of chunks: 1
[17:39:32.407] getGlobalsAndPackagesXApply() ...
[17:39:32.407]  - future.globals: TRUE
[17:39:32.409]  - globals found/used: [n=2] ‘FUN’, ‘a’
[17:39:32.410]  - needed namespaces: [n=0] 
[17:39:32.410] Finding globals ... DONE
[17:39:32.410]  - use_args: TRUE
[17:39:32.410]  - Getting '...' globals ...
[17:39:32.410]    - '...' content: [n=0] 
[17:39:32.410] List of 1
[17:39:32.410]  $ ...: list()
[17:39:32.410]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.410]  - attr(*, "where")=List of 1
[17:39:32.410]   ..$ ...:<environment: 0x556101dd3cc0> 
[17:39:32.410]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.410]  - attr(*, "resolved")= logi TRUE
[17:39:32.410]  - attr(*, "total_size")= num NA
[17:39:32.413]  - Getting '...' globals ... DONE
[17:39:32.413] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[17:39:32.413] List of 3
[17:39:32.413]  $ ...future.FUN:function (ii)  
[17:39:32.413]  $ a            : num 1
[17:39:32.413]  $ ...          : list()
[17:39:32.413]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.413]  - attr(*, "where")=List of 3
[17:39:32.413]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:32.413]   ..$ a            :<environment: R_EmptyEnv> 
[17:39:32.413]   ..$ ...          :<environment: 0x556101dd3cc0> 
[17:39:32.413]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.413]  - attr(*, "resolved")= logi FALSE
[17:39:32.413]  - attr(*, "total_size")= num 2984
[17:39:32.416] Packages to be attached in all futures: [n=0] 
[17:39:32.417] getGlobalsAndPackagesXApply() ... DONE
[17:39:32.417] Number of futures (= number of chunks): 1
[17:39:32.417] Launching 1 futures (chunks) ...
[17:39:32.417] Chunk #1 of 1 ...
[17:39:32.417]  - Finding globals in 'X' for chunk #1 ...
[17:39:32.417]    + additional globals found: [n=0] 
[17:39:32.417]    + additional namespaces needed: [n=0] 
[17:39:32.418]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:32.418]  - seeds: <none>
[17:39:32.420] Created future:
[17:39:32.420] SequentialFuture:
[17:39:32.420] Label: ‘future_lapply-1’
[17:39:32.420] Expression:
[17:39:32.420] {
[17:39:32.420]     do.call(function(...) {
[17:39:32.420]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:32.420]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:32.420]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:32.420]             on.exit(options(oopts), add = TRUE)
[17:39:32.420]         }
[17:39:32.420]         {
[17:39:32.420]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:32.420]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:32.420]                 ...future.FUN(...future.X_jj, ...)
[17:39:32.420]             })
[17:39:32.420]         }
[17:39:32.420]     }, args = future.call.arguments)
[17:39:32.420] }
[17:39:32.420] Lazy evaluation: FALSE
[17:39:32.420] Asynchronous evaluation: FALSE
[17:39:32.420] Local evaluation: TRUE
[17:39:32.420] Environment: R_GlobalEnv
[17:39:32.420] Capture standard output: TRUE
[17:39:32.420] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:32.420] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:39:32.420] Packages: <none>
[17:39:32.420] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:32.420] Resolved: TRUE
[17:39:32.420] Value: 56 bytes of class ‘list’
[17:39:32.420] Early signaling: FALSE
[17:39:32.420] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:32.420] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:39:32.421] Chunk #1 of 1 ... DONE
[17:39:32.421] Launching 1 futures (chunks) ... DONE
[17:39:32.421] Resolving 1 futures (chunks) ...
[17:39:32.422]  - Number of value chunks collected: 1
[17:39:32.422] Resolving 1 futures (chunks) ... DONE
[17:39:32.422] Reducing values from 1 chunks ...
[17:39:32.422]  - Number of values collected after concatenation: 1
[17:39:32.422]  - Number of values expected: 1
[17:39:32.422] Reducing values from 1 chunks ... DONE
[17:39:32.422] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[17:39:32.423] future_lapply() ...
[17:39:32.423] Number of chunks: 1
[17:39:32.423] getGlobalsAndPackagesXApply() ...
[17:39:32.423]  - future.globals: <name-value list> with names ‘42’
[17:39:32.424]  - use_args: TRUE
[17:39:32.424]  - Getting '...' globals ...
[17:39:32.424]    - '...' content: [n=0] 
[17:39:32.424] List of 1
[17:39:32.424]  $ ...: list()
[17:39:32.424]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.424]  - attr(*, "where")=List of 1
[17:39:32.424]   ..$ ...:<environment: 0x556104ad4dc0> 
[17:39:32.424]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.424]  - attr(*, "resolved")= logi TRUE
[17:39:32.424]  - attr(*, "total_size")= num NA
[17:39:32.426]  - Getting '...' globals ... DONE
[17:39:32.427] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[17:39:32.427] List of 3
[17:39:32.427]  $ a            : num 42
[17:39:32.427]  $ ...future.FUN:function (x)  
[17:39:32.427]  $ ...          : list()
[17:39:32.427]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.427]  - attr(*, "where")=List of 3
[17:39:32.427]   ..$ a            :<environment: R_EmptyEnv> 
[17:39:32.427]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[17:39:32.427]   ..$ ...          :<environment: 0x556104ad4dc0> 
[17:39:32.427]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.427]  - attr(*, "resolved")= logi FALSE
[17:39:32.427]  - attr(*, "total_size")= num NA
[17:39:32.432] Packages to be attached in all futures: [n=0] 
[17:39:32.432] getGlobalsAndPackagesXApply() ... DONE
[17:39:32.432] Number of futures (= number of chunks): 1
[17:39:32.432] Launching 1 futures (chunks) ...
[17:39:32.432] Chunk #1 of 1 ...
[17:39:32.433]  - seeds: <none>
[17:39:32.435] Created future:
[17:39:32.436] SequentialFuture:
[17:39:32.436] Label: ‘future_lapply-1’
[17:39:32.436] Expression:
[17:39:32.436] {
[17:39:32.436]     do.call(function(...) {
[17:39:32.436]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:32.436]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:32.436]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:32.436]             on.exit(options(oopts), add = TRUE)
[17:39:32.436]         }
[17:39:32.436]         {
[17:39:32.436]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:32.436]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:32.436]                 ...future.FUN(...future.X_jj, ...)
[17:39:32.436]             })
[17:39:32.436]         }
[17:39:32.436]     }, args = future.call.arguments)
[17:39:32.436] }
[17:39:32.436] Lazy evaluation: FALSE
[17:39:32.436] Asynchronous evaluation: FALSE
[17:39:32.436] Local evaluation: TRUE
[17:39:32.436] Environment: R_GlobalEnv
[17:39:32.436] Capture standard output: TRUE
[17:39:32.436] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:32.436] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:39:32.436] Packages: <none>
[17:39:32.436] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:32.436] Resolved: TRUE
[17:39:32.436] Value: 56 bytes of class ‘list’
[17:39:32.436] Early signaling: FALSE
[17:39:32.436] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:32.436] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:39:32.437] Chunk #1 of 1 ... DONE
[17:39:32.437] Launching 1 futures (chunks) ... DONE
[17:39:32.437] Resolving 1 futures (chunks) ...
[17:39:32.437]  - Number of value chunks collected: 1
[17:39:32.437] Resolving 1 futures (chunks) ... DONE
[17:39:32.437] Reducing values from 1 chunks ...
[17:39:32.437]  - Number of values collected after concatenation: 1
[17:39:32.438]  - Number of values expected: 1
[17:39:32.438] Reducing values from 1 chunks ... DONE
[17:39:32.438] future_lapply() ... DONE
List of 1
 $ : num 42
[17:39:32.445] future_lapply() ...
[17:39:32.451] Number of chunks: 2
[17:39:32.451] getGlobalsAndPackagesXApply() ...
[17:39:32.451]  - future.globals: TRUE
[17:39:32.456]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[17:39:32.456]  - needed namespaces: [n=0] 
[17:39:32.456] Finding globals ... DONE
[17:39:32.456]  - use_args: TRUE
[17:39:32.456]  - Getting '...' globals ...
[17:39:32.456]    - '...' content: [n=0] 
[17:39:32.457] List of 1
[17:39:32.457]  $ ...: list()
[17:39:32.457]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.457]  - attr(*, "where")=List of 1
[17:39:32.457]   ..$ ...:<environment: 0x5561034d4590> 
[17:39:32.457]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.457]  - attr(*, "resolved")= logi TRUE
[17:39:32.457]  - attr(*, "total_size")= num NA
[17:39:32.459]  - Getting '...' globals ... DONE
[17:39:32.459] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[17:39:32.460] List of 6
[17:39:32.460]  $ ...future.FUN:function (i)  
[17:39:32.460]  $ caller       :function (a, b, FUN = call_my_add)  
[17:39:32.460]  $ args         :List of 1
[17:39:32.460]   ..$ FUN:function (a, b)  
[17:39:32.460]  $ call_my_add  :function (a, b)  
[17:39:32.460]  $ my_add       :function (a, b)  
[17:39:32.460]  $ ...          : list()
[17:39:32.460]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.460]  - attr(*, "where")=List of 6
[17:39:32.460]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:32.460]   ..$ caller       :<environment: R_EmptyEnv> 
[17:39:32.460]   ..$ args         :<environment: R_EmptyEnv> 
[17:39:32.460]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[17:39:32.460]   ..$ my_add       :<environment: R_EmptyEnv> 
[17:39:32.460]   ..$ ...          :<environment: 0x5561034d4590> 
[17:39:32.460]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.460]  - attr(*, "resolved")= logi FALSE
[17:39:32.460]  - attr(*, "total_size")= num 24120
[17:39:32.464] Packages to be attached in all futures: [n=0] 
[17:39:32.464] getGlobalsAndPackagesXApply() ... DONE
[17:39:32.465] Number of futures (= number of chunks): 2
[17:39:32.465] Launching 2 futures (chunks) ...
[17:39:32.465] Chunk #1 of 2 ...
[17:39:32.465]  - Finding globals in 'X' for chunk #1 ...
[17:39:32.465]    + additional globals found: [n=0] 
[17:39:32.465]    + additional namespaces needed: [n=0] 
[17:39:32.465]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:32.466]  - seeds: <none>
[17:39:32.475] Created future:
[17:39:32.475] MulticoreFuture:
[17:39:32.475] Label: ‘future_lapply-1’
[17:39:32.475] Expression:
[17:39:32.475] {
[17:39:32.475]     do.call(function(...) {
[17:39:32.475]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:32.475]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:32.475]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:32.475]             on.exit(options(oopts), add = TRUE)
[17:39:32.475]         }
[17:39:32.475]         {
[17:39:32.475]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:32.475]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:32.475]                 ...future.FUN(...future.X_jj, ...)
[17:39:32.475]             })
[17:39:32.475]         }
[17:39:32.475]     }, args = future.call.arguments)
[17:39:32.475] }
[17:39:32.475] Lazy evaluation: FALSE
[17:39:32.475] Asynchronous evaluation: TRUE
[17:39:32.475] Local evaluation: TRUE
[17:39:32.475] Environment: 0x5561037628e0
[17:39:32.475] Capture standard output: TRUE
[17:39:32.475] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:32.475] Globals: 9 objects totaling 23.61 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[17:39:32.475] Packages: <none>
[17:39:32.475] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:32.475] Resolved: TRUE
[17:39:32.475] Value: <not collected>
[17:39:32.475] Conditions captured: <none>
[17:39:32.475] Early signaling: FALSE
[17:39:32.475] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:32.475] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:32.483] Chunk #1 of 2 ... DONE
[17:39:32.484] Chunk #2 of 2 ...
[17:39:32.484]  - Finding globals in 'X' for chunk #2 ...
[17:39:32.484]    + additional globals found: [n=0] 
[17:39:32.485]    + additional namespaces needed: [n=0] 
[17:39:32.485]  - Finding globals in 'X' for chunk #2 ... DONE
[17:39:32.485]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:39:32.485]  - seeds: <none>
[17:39:32.495] Created future:
[17:39:32.495] MulticoreFuture:
[17:39:32.495] Label: ‘future_lapply-2’
[17:39:32.495] Expression:
[17:39:32.495] {
[17:39:32.495]     do.call(function(...) {
[17:39:32.495]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:32.495]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:32.495]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:32.495]             on.exit(options(oopts), add = TRUE)
[17:39:32.495]         }
[17:39:32.495]         {
[17:39:32.495]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:32.495]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:32.495]                 ...future.FUN(...future.X_jj, ...)
[17:39:32.495]             })
[17:39:32.495]         }
[17:39:32.495]     }, args = future.call.arguments)
[17:39:32.495] }
[17:39:32.495] Lazy evaluation: FALSE
[17:39:32.495] Asynchronous evaluation: TRUE
[17:39:32.495] Local evaluation: TRUE
[17:39:32.495] Environment: 0x5561037628e0
[17:39:32.495] Capture standard output: TRUE
[17:39:32.495] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:32.495] Globals: 9 objects totaling 23.66 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[17:39:32.495] Packages: <none>
[17:39:32.495] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:32.495] Resolved: TRUE
[17:39:32.495] Value: <not collected>
[17:39:32.495] Conditions captured: <none>
[17:39:32.495] Early signaling: FALSE
[17:39:32.495] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:32.495] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:32.503] Chunk #2 of 2 ... DONE
[17:39:32.504] Launching 2 futures (chunks) ... DONE
[17:39:32.504] Resolving 2 futures (chunks) ...
[17:39:32.508]  - Number of value chunks collected: 2
[17:39:32.508] Resolving 2 futures (chunks) ... DONE
[17:39:32.508] Reducing values from 2 chunks ...
[17:39:32.508]  - Number of values collected after concatenation: 3
[17:39:32.508]  - Number of values expected: 3
[17:39:32.508] Reducing values from 2 chunks ... DONE
[17:39:32.508] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[17:39:32.509] future_lapply() ...
[17:39:32.514] Number of chunks: 1
[17:39:32.515] getGlobalsAndPackagesXApply() ...
[17:39:32.515]  - future.globals: TRUE
[17:39:32.521]  - globals found/used: [n=1] ‘FUN’
[17:39:32.521]  - needed namespaces: [n=0] 
[17:39:32.521] Finding globals ... DONE
[17:39:32.521]  - use_args: TRUE
[17:39:32.521]  - Getting '...' globals ...
[17:39:32.522]    - '...' content: [n=1] ‘what’
[17:39:32.522] List of 1
[17:39:32.522]  $ ...:List of 1
[17:39:32.522]   ..$ what:function (x)  
[17:39:32.522]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.522]  - attr(*, "where")=List of 1
[17:39:32.522]   ..$ ...:<environment: 0x556104c644b0> 
[17:39:32.522]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.522]  - attr(*, "resolved")= logi TRUE
[17:39:32.522]  - attr(*, "total_size")= num NA
[17:39:32.526]  - Getting '...' globals ... DONE
[17:39:32.526] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:39:32.526] List of 2
[17:39:32.526]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[17:39:32.526]  $ ...          :List of 1
[17:39:32.526]   ..$ what:function (x)  
[17:39:32.526]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.526]  - attr(*, "where")=List of 2
[17:39:32.526]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:32.526]   ..$ ...          :<environment: 0x556104c644b0> 
[17:39:32.526]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.526]  - attr(*, "resolved")= logi FALSE
[17:39:32.526]  - attr(*, "total_size")= num 12192
[17:39:32.530] Packages to be attached in all futures: [n=0] 
[17:39:32.530] getGlobalsAndPackagesXApply() ... DONE
[17:39:32.530] Number of futures (= number of chunks): 1
[17:39:32.530] Launching 1 futures (chunks) ...
[17:39:32.530] Chunk #1 of 1 ...
[17:39:32.530]  - Finding globals in 'X' for chunk #1 ...
[17:39:32.531]    + additional globals found: [n=0] 
[17:39:32.531]    + additional namespaces needed: [n=0] 
[17:39:32.531]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:32.531]  - seeds: <none>
[17:39:32.539] Created future:
[17:39:32.539] MulticoreFuture:
[17:39:32.539] Label: ‘future_lapply-1’
[17:39:32.539] Expression:
[17:39:32.539] {
[17:39:32.539]     do.call(function(...) {
[17:39:32.539]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:32.539]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:32.539]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:32.539]             on.exit(options(oopts), add = TRUE)
[17:39:32.539]         }
[17:39:32.539]         {
[17:39:32.539]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:32.539]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:32.539]                 ...future.FUN(...future.X_jj, ...)
[17:39:32.539]             })
[17:39:32.539]         }
[17:39:32.539]     }, args = future.call.arguments)
[17:39:32.539] }
[17:39:32.539] Lazy evaluation: FALSE
[17:39:32.539] Asynchronous evaluation: TRUE
[17:39:32.539] Local evaluation: TRUE
[17:39:32.539] Environment: R_GlobalEnv
[17:39:32.539] Capture standard output: TRUE
[17:39:32.539] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:32.539] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:32.539] Packages: <none>
[17:39:32.539] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:32.539] Resolved: TRUE
[17:39:32.539] Value: <not collected>
[17:39:32.539] Conditions captured: <none>
[17:39:32.539] Early signaling: FALSE
[17:39:32.539] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:32.539] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:32.547] Chunk #1 of 1 ... DONE
[17:39:32.548] Launching 1 futures (chunks) ... DONE
[17:39:32.548] Resolving 1 futures (chunks) ...
[17:39:32.549]  - Number of value chunks collected: 1
[17:39:32.549] Resolving 1 futures (chunks) ... DONE
[17:39:32.549] Reducing values from 1 chunks ...
[17:39:32.550]  - Number of values collected after concatenation: 1
[17:39:32.550]  - Number of values expected: 1
[17:39:32.550] Reducing values from 1 chunks ... DONE
[17:39:32.550] future_lapply() ... DONE
[17:39:32.550] future_lapply() ...
[17:39:32.556] Number of chunks: 1
[17:39:32.556] getGlobalsAndPackagesXApply() ...
[17:39:32.556]  - future.globals: TRUE
[17:39:32.560]  - globals found/used: [n=1] ‘FUN’
[17:39:32.560]  - needed namespaces: [n=0] 
[17:39:32.560] Finding globals ... DONE
[17:39:32.560]  - use_args: TRUE
[17:39:32.560]  - Getting '...' globals ...
[17:39:32.561]    - '...' content: [n=1] ‘what’
[17:39:32.561] List of 1
[17:39:32.561]  $ ...:List of 1
[17:39:32.561]   ..$ what:function (...)  
[17:39:32.561]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.561]  - attr(*, "where")=List of 1
[17:39:32.561]   ..$ ...:<environment: 0x556102fa7140> 
[17:39:32.561]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.561]  - attr(*, "resolved")= logi TRUE
[17:39:32.561]  - attr(*, "total_size")= num NA
[17:39:32.564]  - Getting '...' globals ... DONE
[17:39:32.565] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:39:32.565] List of 2
[17:39:32.565]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[17:39:32.565]  $ ...          :List of 1
[17:39:32.565]   ..$ what:function (...)  
[17:39:32.565]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.565]  - attr(*, "where")=List of 2
[17:39:32.565]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:32.565]   ..$ ...          :<environment: 0x556102fa7140> 
[17:39:32.565]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.565]  - attr(*, "resolved")= logi FALSE
[17:39:32.565]  - attr(*, "total_size")= num 13352
[17:39:32.568] Packages to be attached in all futures: [n=0] 
[17:39:32.568] getGlobalsAndPackagesXApply() ... DONE
[17:39:32.569] Number of futures (= number of chunks): 1
[17:39:32.569] Launching 1 futures (chunks) ...
[17:39:32.569] Chunk #1 of 1 ...
[17:39:32.569]  - Finding globals in 'X' for chunk #1 ...
[17:39:32.569]    + additional globals found: [n=0] 
[17:39:32.570]    + additional namespaces needed: [n=0] 
[17:39:32.570]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:32.570]  - seeds: <none>
[17:39:32.577] Created future:
[17:39:32.577] MulticoreFuture:
[17:39:32.577] Label: ‘future_lapply-1’
[17:39:32.577] Expression:
[17:39:32.577] {
[17:39:32.577]     do.call(function(...) {
[17:39:32.577]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:32.577]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:32.577]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:32.577]             on.exit(options(oopts), add = TRUE)
[17:39:32.577]         }
[17:39:32.577]         {
[17:39:32.577]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:32.577]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:32.577]                 ...future.FUN(...future.X_jj, ...)
[17:39:32.577]             })
[17:39:32.577]         }
[17:39:32.577]     }, args = future.call.arguments)
[17:39:32.577] }
[17:39:32.577] Lazy evaluation: FALSE
[17:39:32.577] Asynchronous evaluation: TRUE
[17:39:32.577] Local evaluation: TRUE
[17:39:32.577] Environment: R_GlobalEnv
[17:39:32.577] Capture standard output: TRUE
[17:39:32.577] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:32.577] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:32.577] Packages: <none>
[17:39:32.577] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:32.577] Resolved: TRUE
[17:39:32.577] Value: <not collected>
[17:39:32.577] Conditions captured: <none>
[17:39:32.577] Early signaling: FALSE
[17:39:32.577] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:32.577] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:32.585] Chunk #1 of 1 ... DONE
[17:39:32.585] Launching 1 futures (chunks) ... DONE
[17:39:32.586] Resolving 1 futures (chunks) ...
[17:39:32.587]  - Number of value chunks collected: 1
[17:39:32.587] Resolving 1 futures (chunks) ... DONE
[17:39:32.587] Reducing values from 1 chunks ...
[17:39:32.588]  - Number of values collected after concatenation: 1
[17:39:32.588]  - Number of values expected: 1
[17:39:32.588] Reducing values from 1 chunks ... DONE
[17:39:32.588] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[17:39:32.589] future_lapply() ...
[17:39:32.593] Number of chunks: 1
[17:39:32.593] getGlobalsAndPackagesXApply() ...
[17:39:32.593]  - future.globals: TRUE
[17:39:32.595]  - globals found/used: [n=1] ‘FUN’
[17:39:32.596]  - needed namespaces: [n=0] 
[17:39:32.596] Finding globals ... DONE
[17:39:32.596]  - use_args: TRUE
[17:39:32.596]  - Getting '...' globals ...
[17:39:32.596]    - '...' content: [n=1] ‘b’
[17:39:32.596] List of 1
[17:39:32.596]  $ ...:List of 1
[17:39:32.596]   ..$ b:'data.frame':	2 obs. of  1 variable:
[17:39:32.596]   .. ..$ a: int [1:2] 1 2
[17:39:32.596]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.596]  - attr(*, "where")=List of 1
[17:39:32.596]   ..$ ...:<environment: 0x55610491cd10> 
[17:39:32.596]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.596]  - attr(*, "resolved")= logi TRUE
[17:39:32.596]  - attr(*, "total_size")= num NA
[17:39:32.601]  - Getting '...' globals ... DONE
[17:39:32.601] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:39:32.601] List of 2
[17:39:32.601]  $ ...future.FUN:function (a, b)  
[17:39:32.601]  $ ...          :List of 1
[17:39:32.601]   ..$ b:'data.frame':	2 obs. of  1 variable:
[17:39:32.601]   .. ..$ a: int [1:2] 1 2
[17:39:32.601]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.601]  - attr(*, "where")=List of 2
[17:39:32.601]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:32.601]   ..$ ...          :<environment: 0x55610491cd10> 
[17:39:32.601]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.601]  - attr(*, "resolved")= logi FALSE
[17:39:32.601]  - attr(*, "total_size")= num 1440
[17:39:32.607] Packages to be attached in all futures: [n=0] 
[17:39:32.607] getGlobalsAndPackagesXApply() ... DONE
[17:39:32.607] Number of futures (= number of chunks): 1
[17:39:32.607] Launching 1 futures (chunks) ...
[17:39:32.608] Chunk #1 of 1 ...
[17:39:32.608]  - Finding globals in 'X' for chunk #1 ...
[17:39:32.608]    + additional globals found: [n=0] 
[17:39:32.608]    + additional namespaces needed: [n=0] 
[17:39:32.608]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:32.608]  - seeds: <none>
[17:39:32.616] Created future:
[17:39:32.616] MulticoreFuture:
[17:39:32.616] Label: ‘future_lapply-1’
[17:39:32.616] Expression:
[17:39:32.616] {
[17:39:32.616]     do.call(function(...) {
[17:39:32.616]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:32.616]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:32.616]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:32.616]             on.exit(options(oopts), add = TRUE)
[17:39:32.616]         }
[17:39:32.616]         {
[17:39:32.616]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:32.616]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:32.616]                 ...future.FUN(...future.X_jj, ...)
[17:39:32.616]             })
[17:39:32.616]         }
[17:39:32.616]     }, args = future.call.arguments)
[17:39:32.616] }
[17:39:32.616] Lazy evaluation: FALSE
[17:39:32.616] Asynchronous evaluation: TRUE
[17:39:32.616] Local evaluation: TRUE
[17:39:32.616] Environment: R_GlobalEnv
[17:39:32.616] Capture standard output: TRUE
[17:39:32.616] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:32.616] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:32.616] Packages: <none>
[17:39:32.616] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:32.616] Resolved: TRUE
[17:39:32.616] Value: <not collected>
[17:39:32.616] Conditions captured: <none>
[17:39:32.616] Early signaling: FALSE
[17:39:32.616] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:32.616] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:32.624] Chunk #1 of 1 ... DONE
[17:39:32.624] Launching 1 futures (chunks) ... DONE
[17:39:32.624] Resolving 1 futures (chunks) ...
[17:39:32.626]  - Number of value chunks collected: 1
[17:39:32.626] Resolving 1 futures (chunks) ... DONE
[17:39:32.626] Reducing values from 1 chunks ...
[17:39:32.626]  - Number of values collected after concatenation: 1
[17:39:32.626]  - Number of values expected: 1
[17:39:32.627] Reducing values from 1 chunks ... DONE
[17:39:32.627] future_lapply() ... DONE
[17:39:32.627] future_lapply() ...
[17:39:32.631] Number of chunks: 1
[17:39:32.631] getGlobalsAndPackagesXApply() ...
[17:39:32.632]  - future.globals: TRUE
[17:39:32.634]  - globals found/used: [n=1] ‘FUN’
[17:39:32.634]  - needed namespaces: [n=0] 
[17:39:32.634] Finding globals ... DONE
[17:39:32.634]  - use_args: TRUE
[17:39:32.634]  - Getting '...' globals ...
[17:39:32.634]    - '...' content: [n=1] ‘b’
[17:39:32.635] List of 1
[17:39:32.635]  $ ...:List of 1
[17:39:32.635]   ..$ b:<environment: 0x55610369b720> 
[17:39:32.635]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.635]  - attr(*, "where")=List of 1
[17:39:32.635]   ..$ ...:<environment: 0x5561036983a8> 
[17:39:32.635]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.635]  - attr(*, "resolved")= logi TRUE
[17:39:32.635]  - attr(*, "total_size")= num NA
[17:39:32.638]  - Getting '...' globals ... DONE
[17:39:32.638] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:39:32.638] List of 2
[17:39:32.638]  $ ...future.FUN:function (a, b)  
[17:39:32.638]  $ ...          :List of 1
[17:39:32.638]   ..$ b:<environment: 0x55610369b720> 
[17:39:32.638]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.638]  - attr(*, "where")=List of 2
[17:39:32.638]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:32.638]   ..$ ...          :<environment: 0x5561036983a8> 
[17:39:32.638]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.638]  - attr(*, "resolved")= logi FALSE
[17:39:32.638]  - attr(*, "total_size")= num 1440
[17:39:32.642] Packages to be attached in all futures: [n=0] 
[17:39:32.642] getGlobalsAndPackagesXApply() ... DONE
[17:39:32.643] Number of futures (= number of chunks): 1
[17:39:32.643] Launching 1 futures (chunks) ...
[17:39:32.643] Chunk #1 of 1 ...
[17:39:32.643]  - Finding globals in 'X' for chunk #1 ...
[17:39:32.643]    + additional globals found: [n=0] 
[17:39:32.644]    + additional namespaces needed: [n=0] 
[17:39:32.644]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:32.644]  - seeds: <none>
[17:39:32.651] Created future:
[17:39:32.652] MulticoreFuture:
[17:39:32.652] Label: ‘future_lapply-1’
[17:39:32.652] Expression:
[17:39:32.652] {
[17:39:32.652]     do.call(function(...) {
[17:39:32.652]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:32.652]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:32.652]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:32.652]             on.exit(options(oopts), add = TRUE)
[17:39:32.652]         }
[17:39:32.652]         {
[17:39:32.652]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:32.652]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:32.652]                 ...future.FUN(...future.X_jj, ...)
[17:39:32.652]             })
[17:39:32.652]         }
[17:39:32.652]     }, args = future.call.arguments)
[17:39:32.652] }
[17:39:32.652] Lazy evaluation: FALSE
[17:39:32.652] Asynchronous evaluation: TRUE
[17:39:32.652] Local evaluation: TRUE
[17:39:32.652] Environment: R_GlobalEnv
[17:39:32.652] Capture standard output: TRUE
[17:39:32.652] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:32.652] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:32.652] Packages: <none>
[17:39:32.652] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:32.652] Resolved: TRUE
[17:39:32.652] Value: <not collected>
[17:39:32.652] Conditions captured: <none>
[17:39:32.652] Early signaling: FALSE
[17:39:32.652] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:32.652] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:32.660] Chunk #1 of 1 ... DONE
[17:39:32.660] Launching 1 futures (chunks) ... DONE
[17:39:32.660] Resolving 1 futures (chunks) ...
[17:39:32.662]  - Number of value chunks collected: 1
[17:39:32.662] Resolving 1 futures (chunks) ... DONE
[17:39:32.662] Reducing values from 1 chunks ...
[17:39:32.662]  - Number of values collected after concatenation: 1
[17:39:32.662]  - Number of values expected: 1
[17:39:32.662] Reducing values from 1 chunks ... DONE
[17:39:32.662] future_lapply() ... DONE
[17:39:32.663] future_lapply() ...
[17:39:32.667] Number of chunks: 1
[17:39:32.667] getGlobalsAndPackagesXApply() ...
[17:39:32.667]  - future.globals: TRUE
[17:39:32.670]  - globals found/used: [n=1] ‘FUN’
[17:39:32.670]  - needed namespaces: [n=0] 
[17:39:32.670] Finding globals ... DONE
[17:39:32.670]  - use_args: TRUE
[17:39:32.670]  - Getting '...' globals ...
[17:39:32.671]    - '...' content: [n=1] ‘b’
[17:39:32.671] List of 1
[17:39:32.671]  $ ...:List of 1
[17:39:32.671]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[17:39:32.671]   .. .. ..@ slots     :List of 4
[17:39:32.671]   .. .. .. ..$ .Data  : chr "function"
[17:39:32.671]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.671]   .. .. .. ..$ target : chr "signature"
[17:39:32.671]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.671]   .. .. .. ..$ defined: chr "signature"
[17:39:32.671]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.671]   .. .. .. ..$ generic: chr "character"
[17:39:32.671]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.671]   .. .. ..@ contains  :List of 3
[17:39:32.671]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.671]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:39:32.671]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ superClass: chr "function"
[17:39:32.671]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.671]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.671]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.671]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.671]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:32.671]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[17:39:32.671]   .. .. .. .. .. ..@ distance  : num 1
[17:39:32.671]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.671]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:39:32.671]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[17:39:32.671]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.671]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.671]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.671]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.671]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:32.671]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.671]   .. .. .. .. .. ..@ distance  : num 1
[17:39:32.671]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.671]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:39:32.671]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[17:39:32.671]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.671]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.671]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.671]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.671]   .. .. .. .. .. ..@ by        : chr "function"
[17:39:32.671]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.671]   .. .. .. .. .. ..@ distance  : num 2
[17:39:32.671]   .. .. ..@ virtual   : logi FALSE
[17:39:32.671]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[17:39:32.671]  list()
[17:39:32.671]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[17:39:32.671]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:39:32.671]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:39:32.671]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:39:32.671]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[17:39:32.671]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:39:32.671]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:39:32.671]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:39:32.671]   .. .. .. .. ..$ generic: chr(0) 
[17:39:32.671]   .. .. ..@ validity  : NULL
[17:39:32.671]   .. .. ..@ access    : list()
[17:39:32.671]   .. .. ..@ className : chr "MethodDefinition"
[17:39:32.671]   .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.671]   .. .. ..@ package   : chr "methods"
[17:39:32.671]   .. .. ..@ subclasses:List of 7
[17:39:32.671]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.671]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[17:39:32.671]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:32.671]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.671]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.671]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.671]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.671]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:32.671]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.671]   .. .. .. .. .. ..@ distance  : num 1
[17:39:32.671]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.671]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[17:39:32.671]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:32.671]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.671]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.671]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.671]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.671]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:32.671]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.671]   .. .. .. .. .. ..@ distance  : num 1
[17:39:32.671]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.671]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[17:39:32.671]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:32.671]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.671]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.671]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.671]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.671]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:32.671]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.671]   .. .. .. .. .. ..@ distance  : num 1
[17:39:32.671]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.671]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[17:39:32.671]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:32.671]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.671]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.671]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.671]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.671]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:32.671]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.671]   .. .. .. .. .. ..@ distance  : num 1
[17:39:32.671]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.671]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[17:39:32.671]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:32.671]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.671]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.671]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.671]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.671]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:39:32.671]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.671]   .. .. .. .. .. ..@ distance  : num 2
[17:39:32.671]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.671]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[17:39:32.671]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:32.671]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.671]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.671]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.671]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.671]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[17:39:32.671]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.671]   .. .. .. .. .. ..@ distance  : num 2
[17:39:32.671]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.671]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[17:39:32.671]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:32.671]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.671]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.671]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.671]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.671]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:39:32.671]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.671]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.671]   .. .. .. .. .. ..@ distance  : num 2
[17:39:32.671]   .. .. ..@ versionKey:<externalptr> 
[17:39:32.671]   .. .. ..@ sealed    : logi TRUE
[17:39:32.671]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.671]  - attr(*, "where")=List of 1
[17:39:32.671]   ..$ ...:<environment: 0x5561012b5a70> 
[17:39:32.671]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.671]  - attr(*, "resolved")= logi TRUE
[17:39:32.671]  - attr(*, "total_size")= num NA
[17:39:32.726]  - Getting '...' globals ... DONE
[17:39:32.726] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:39:32.726] List of 2
[17:39:32.726]  $ ...future.FUN:function (a, b)  
[17:39:32.726]  $ ...          :List of 1
[17:39:32.726]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[17:39:32.726]   .. .. ..@ slots     :List of 4
[17:39:32.726]   .. .. .. ..$ .Data  : chr "function"
[17:39:32.726]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.726]   .. .. .. ..$ target : chr "signature"
[17:39:32.726]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.726]   .. .. .. ..$ defined: chr "signature"
[17:39:32.726]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.726]   .. .. .. ..$ generic: chr "character"
[17:39:32.726]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.726]   .. .. ..@ contains  :List of 3
[17:39:32.726]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.726]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:39:32.726]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ superClass: chr "function"
[17:39:32.726]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.726]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.726]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.726]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.726]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:32.726]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[17:39:32.726]   .. .. .. .. .. ..@ distance  : num 1
[17:39:32.726]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.726]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:39:32.726]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[17:39:32.726]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.726]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.726]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.726]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.726]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:32.726]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.726]   .. .. .. .. .. ..@ distance  : num 1
[17:39:32.726]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.726]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:39:32.726]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[17:39:32.726]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.726]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.726]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.726]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.726]   .. .. .. .. .. ..@ by        : chr "function"
[17:39:32.726]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.726]   .. .. .. .. .. ..@ distance  : num 2
[17:39:32.726]   .. .. ..@ virtual   : logi FALSE
[17:39:32.726]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[17:39:32.726]  list()
[17:39:32.726]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[17:39:32.726]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:39:32.726]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:39:32.726]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:39:32.726]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[17:39:32.726]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:39:32.726]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:39:32.726]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:39:32.726]   .. .. .. .. ..$ generic: chr(0) 
[17:39:32.726]   .. .. ..@ validity  : NULL
[17:39:32.726]   .. .. ..@ access    : list()
[17:39:32.726]   .. .. ..@ className : chr "MethodDefinition"
[17:39:32.726]   .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.726]   .. .. ..@ package   : chr "methods"
[17:39:32.726]   .. .. ..@ subclasses:List of 7
[17:39:32.726]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.726]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[17:39:32.726]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:32.726]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.726]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.726]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.726]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.726]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:32.726]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.726]   .. .. .. .. .. ..@ distance  : num 1
[17:39:32.726]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.726]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[17:39:32.726]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:32.726]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.726]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.726]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.726]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.726]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:32.726]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.726]   .. .. .. .. .. ..@ distance  : num 1
[17:39:32.726]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.726]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[17:39:32.726]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:32.726]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.726]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.726]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.726]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.726]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:32.726]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.726]   .. .. .. .. .. ..@ distance  : num 1
[17:39:32.726]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.726]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[17:39:32.726]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:32.726]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.726]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.726]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.726]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.726]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:32.726]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.726]   .. .. .. .. .. ..@ distance  : num 1
[17:39:32.726]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.726]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[17:39:32.726]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:32.726]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.726]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.726]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.726]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.726]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:39:32.726]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.726]   .. .. .. .. .. ..@ distance  : num 2
[17:39:32.726]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.726]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[17:39:32.726]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:32.726]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.726]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.726]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.726]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.726]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[17:39:32.726]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.726]   .. .. .. .. .. ..@ distance  : num 2
[17:39:32.726]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:32.726]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[17:39:32.726]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:32.726]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:32.726]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:32.726]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:32.726]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:32.726]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:39:32.726]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:32.726]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:32.726]   .. .. .. .. .. ..@ distance  : num 2
[17:39:32.726]   .. .. ..@ versionKey:<externalptr> 
[17:39:32.726]   .. .. ..@ sealed    : logi TRUE
[17:39:32.726]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.726]  - attr(*, "where")=List of 2
[17:39:32.726]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:32.726]   ..$ ...          :<environment: 0x5561012b5a70> 
[17:39:32.726]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.726]  - attr(*, "resolved")= logi FALSE
[17:39:32.726]  - attr(*, "total_size")= num 312512
[17:39:32.778] Packages to be attached in all futures: [n=0] 
[17:39:32.778] getGlobalsAndPackagesXApply() ... DONE
[17:39:32.778] Number of futures (= number of chunks): 1
[17:39:32.778] Launching 1 futures (chunks) ...
[17:39:32.779] Chunk #1 of 1 ...
[17:39:32.779]  - Finding globals in 'X' for chunk #1 ...
[17:39:32.779]    + additional globals found: [n=0] 
[17:39:32.779]    + additional namespaces needed: [n=0] 
[17:39:32.779]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:32.780]  - seeds: <none>
[17:39:32.787] Created future:
[17:39:32.788] MulticoreFuture:
[17:39:32.788] Label: ‘future_lapply-1’
[17:39:32.788] Expression:
[17:39:32.788] {
[17:39:32.788]     do.call(function(...) {
[17:39:32.788]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:32.788]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:32.788]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:32.788]             on.exit(options(oopts), add = TRUE)
[17:39:32.788]         }
[17:39:32.788]         {
[17:39:32.788]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:32.788]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:32.788]                 ...future.FUN(...future.X_jj, ...)
[17:39:32.788]             })
[17:39:32.788]         }
[17:39:32.788]     }, args = future.call.arguments)
[17:39:32.788] }
[17:39:32.788] Lazy evaluation: FALSE
[17:39:32.788] Asynchronous evaluation: TRUE
[17:39:32.788] Local evaluation: TRUE
[17:39:32.788] Environment: R_GlobalEnv
[17:39:32.788] Capture standard output: TRUE
[17:39:32.788] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:32.788] Globals: 5 objects totaling 305.24 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 303.78 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:32.788] Packages: <none>
[17:39:32.788] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:32.788] Resolved: TRUE
[17:39:32.788] Value: <not collected>
[17:39:32.788] Conditions captured: <none>
[17:39:32.788] Early signaling: FALSE
[17:39:32.788] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:32.788] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:32.796] Chunk #1 of 1 ... DONE
[17:39:32.796] Launching 1 futures (chunks) ... DONE
[17:39:32.796] Resolving 1 futures (chunks) ...
[17:39:32.797]  - Number of value chunks collected: 1
[17:39:32.798] Resolving 1 futures (chunks) ... DONE
[17:39:32.798] Reducing values from 1 chunks ...
[17:39:32.798]  - Number of values collected after concatenation: 1
[17:39:32.798]  - Number of values expected: 1
[17:39:32.798] Reducing values from 1 chunks ... DONE
[17:39:32.798] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[17:39:32.801] future_lapply() ...
[17:39:32.806] Number of chunks: 2
[17:39:32.806] getGlobalsAndPackagesXApply() ...
[17:39:32.806]  - future.globals: TRUE
[17:39:32.808]  - globals found/used: [n=1] ‘FUN’
[17:39:32.808]  - needed namespaces: [n=0] 
[17:39:32.808] Finding globals ... DONE
[17:39:32.808]  - use_args: TRUE
[17:39:32.808]  - Getting '...' globals ...
[17:39:32.809]    - '...' content: [n=0] 
[17:39:32.809] List of 1
[17:39:32.809]  $ ...: list()
[17:39:32.809]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.809]  - attr(*, "where")=List of 1
[17:39:32.809]   ..$ ...:<environment: 0x556102f62d60> 
[17:39:32.809]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.809]  - attr(*, "resolved")= logi TRUE
[17:39:32.809]  - attr(*, "total_size")= num NA
[17:39:32.812]  - Getting '...' globals ... DONE
[17:39:32.813] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:39:32.813] List of 2
[17:39:32.813]  $ ...future.FUN:function (f)  
[17:39:32.813]  $ ...          : list()
[17:39:32.813]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.813]  - attr(*, "where")=List of 2
[17:39:32.813]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:32.813]   ..$ ...          :<environment: 0x556102f62d60> 
[17:39:32.813]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.813]  - attr(*, "resolved")= logi FALSE
[17:39:32.813]  - attr(*, "total_size")= num 1008
[17:39:32.816] Packages to be attached in all futures: [n=0] 
[17:39:32.816] getGlobalsAndPackagesXApply() ... DONE
[17:39:32.816] Number of futures (= number of chunks): 2
[17:39:32.816] Launching 2 futures (chunks) ...
[17:39:32.817] Chunk #1 of 2 ...
[17:39:32.817]  - Finding globals in 'X' for chunk #1 ...
[17:39:32.819]    + additional globals found: [n=2] ‘a’, ‘b’
[17:39:32.819]    + additional namespaces needed: [n=0] 
[17:39:32.819]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:32.819]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:39:32.819]  - seeds: <none>
[17:39:32.827] Created future:
[17:39:32.827] MulticoreFuture:
[17:39:32.827] Label: ‘future_lapply-1’
[17:39:32.827] Expression:
[17:39:32.827] {
[17:39:32.827]     do.call(function(...) {
[17:39:32.827]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:32.827]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:32.827]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:32.827]             on.exit(options(oopts), add = TRUE)
[17:39:32.827]         }
[17:39:32.827]         {
[17:39:32.827]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:32.827]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:32.827]                 ...future.FUN(...future.X_jj, ...)
[17:39:32.827]             })
[17:39:32.827]         }
[17:39:32.827]     }, args = future.call.arguments)
[17:39:32.827] }
[17:39:32.827] Lazy evaluation: FALSE
[17:39:32.827] Asynchronous evaluation: TRUE
[17:39:32.827] Local evaluation: TRUE
[17:39:32.827] Environment: R_GlobalEnv
[17:39:32.827] Capture standard output: TRUE
[17:39:32.827] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:32.827] Globals: 7 objects totaling 3.48 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[17:39:32.827] Packages: <none>
[17:39:32.827] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:32.827] Resolved: TRUE
[17:39:32.827] Value: <not collected>
[17:39:32.827] Conditions captured: <none>
[17:39:32.827] Early signaling: FALSE
[17:39:32.827] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:32.827] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:32.835] Chunk #1 of 2 ... DONE
[17:39:32.835] Chunk #2 of 2 ...
[17:39:32.836]  - Finding globals in 'X' for chunk #2 ...
[17:39:32.839]    + additional globals found: [n=2] ‘a’, ‘b’
[17:39:32.839]    + additional namespaces needed: [n=1] ‘tools’
[17:39:32.839]  - Finding globals in 'X' for chunk #2 ... DONE
[17:39:32.840]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:39:32.840]  - seeds: <none>
[17:39:32.849] Created future:
[17:39:32.849] MulticoreFuture:
[17:39:32.849] Label: ‘future_lapply-2’
[17:39:32.849] Expression:
[17:39:32.849] {
[17:39:32.849]     do.call(function(...) {
[17:39:32.849]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:32.849]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:32.849]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:32.849]             on.exit(options(oopts), add = TRUE)
[17:39:32.849]         }
[17:39:32.849]         {
[17:39:32.849]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:32.849]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:32.849]                 ...future.FUN(...future.X_jj, ...)
[17:39:32.849]             })
[17:39:32.849]         }
[17:39:32.849]     }, args = future.call.arguments)
[17:39:32.849] }
[17:39:32.849] Lazy evaluation: FALSE
[17:39:32.849] Asynchronous evaluation: TRUE
[17:39:32.849] Local evaluation: TRUE
[17:39:32.849] Environment: R_GlobalEnv
[17:39:32.849] Capture standard output: TRUE
[17:39:32.849] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:32.849] Globals: 7 objects totaling 5.11 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.02 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[17:39:32.849] Packages: 1 packages (‘tools’)
[17:39:32.849] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:32.849] Resolved: TRUE
[17:39:32.849] Value: <not collected>
[17:39:32.849] Conditions captured: <none>
[17:39:32.849] Early signaling: FALSE
[17:39:32.849] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:32.849] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:32.859] Chunk #2 of 2 ... DONE
[17:39:32.859] Launching 2 futures (chunks) ... DONE
[17:39:32.859] Resolving 2 futures (chunks) ...
[17:39:32.862]  - Number of value chunks collected: 2
[17:39:32.862] Resolving 2 futures (chunks) ... DONE
[17:39:32.862] Reducing values from 2 chunks ...
[17:39:32.862]  - Number of values collected after concatenation: 4
[17:39:32.863]  - Number of values expected: 4
[17:39:32.863] Reducing values from 2 chunks ... DONE
[17:39:32.863] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[17:39:32.869] future_lapply() ...
[17:39:32.874] Number of chunks: 1
[17:39:32.874] getGlobalsAndPackagesXApply() ...
[17:39:32.874]  - future.globals: TRUE
[17:39:32.877]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[17:39:32.877]  - needed namespaces: [n=0] 
[17:39:32.878] Finding globals ... DONE
[17:39:32.878]  - use_args: TRUE
[17:39:32.878]  - Getting '...' globals ...
[17:39:32.878]    - '...' content: [n=0] 
[17:39:32.878] List of 1
[17:39:32.878]  $ ...: list()
[17:39:32.878]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.878]  - attr(*, "where")=List of 1
[17:39:32.878]   ..$ ...:<environment: 0x556103e3ff08> 
[17:39:32.878]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.878]  - attr(*, "resolved")= logi TRUE
[17:39:32.878]  - attr(*, "total_size")= num NA
[17:39:32.881]  - Getting '...' globals ... DONE
[17:39:32.882] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[17:39:32.882] List of 3
[17:39:32.882]  $ ...future.FUN        :function (x)  
[17:39:32.882]  $ future.call.arguments:List of 1
[17:39:32.882]   ..$ a: num 1
[17:39:32.882]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.882]  $ ...                  : list()
[17:39:32.882]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.882]  - attr(*, "where")=List of 3
[17:39:32.882]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[17:39:32.882]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[17:39:32.882]   ..$ ...                  :<environment: 0x556103e3ff08> 
[17:39:32.882]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.882]  - attr(*, "resolved")= logi FALSE
[17:39:32.882]  - attr(*, "total_size")= num 1272
[17:39:32.886] Packages to be attached in all futures: [n=0] 
[17:39:32.886] getGlobalsAndPackagesXApply() ... DONE
[17:39:32.886] Number of futures (= number of chunks): 1
[17:39:32.887] Launching 1 futures (chunks) ...
[17:39:32.887] Chunk #1 of 1 ...
[17:39:32.887]  - Finding globals in 'X' for chunk #1 ...
[17:39:32.887]    + additional globals found: [n=0] 
[17:39:32.887]    + additional namespaces needed: [n=0] 
[17:39:32.887]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:32.888]  - seeds: <none>
[17:39:32.895] Created future:
[17:39:32.895] MulticoreFuture:
[17:39:32.895] Label: ‘future_lapply-1’
[17:39:32.895] Expression:
[17:39:32.895] {
[17:39:32.895]     do.call(function(...) {
[17:39:32.895]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:32.895]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:32.895]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:32.895]             on.exit(options(oopts), add = TRUE)
[17:39:32.895]         }
[17:39:32.895]         {
[17:39:32.895]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:32.895]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:32.895]                 ...future.FUN(...future.X_jj)
[17:39:32.895]             })
[17:39:32.895]         }
[17:39:32.895]     }, args = future.call.arguments)
[17:39:32.895] }
[17:39:32.895] Lazy evaluation: FALSE
[17:39:32.895] Asynchronous evaluation: TRUE
[17:39:32.895] Local evaluation: TRUE
[17:39:32.895] Environment: 0x556103e3fb88
[17:39:32.895] Capture standard output: TRUE
[17:39:32.895] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:32.895] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:32.895] Packages: <none>
[17:39:32.895] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:32.895] Resolved: TRUE
[17:39:32.895] Value: <not collected>
[17:39:32.895] Conditions captured: <none>
[17:39:32.895] Early signaling: FALSE
[17:39:32.895] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:32.895] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:32.904] Chunk #1 of 1 ... DONE
[17:39:32.904] Launching 1 futures (chunks) ... DONE
[17:39:32.904] Resolving 1 futures (chunks) ...
[17:39:32.906]  - Number of value chunks collected: 1
[17:39:32.906] Resolving 1 futures (chunks) ... DONE
[17:39:32.906] Reducing values from 1 chunks ...
[17:39:32.906]  - Number of values collected after concatenation: 1
[17:39:32.906]  - Number of values expected: 1
[17:39:32.907] Reducing values from 1 chunks ... DONE
[17:39:32.907] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[17:39:32.908] future_lapply() ...
[17:39:32.914] Number of chunks: 1
[17:39:32.914] getGlobalsAndPackagesXApply() ...
[17:39:32.914]  - future.globals: TRUE
[17:39:32.917]  - globals found/used: [n=2] ‘FUN’, ‘a’
[17:39:32.917]  - needed namespaces: [n=0] 
[17:39:32.917] Finding globals ... DONE
[17:39:32.917]  - use_args: TRUE
[17:39:32.917]  - Getting '...' globals ...
[17:39:32.918]    - '...' content: [n=0] 
[17:39:32.918] List of 1
[17:39:32.918]  $ ...: list()
[17:39:32.918]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.918]  - attr(*, "where")=List of 1
[17:39:32.918]   ..$ ...:<environment: 0x556101608120> 
[17:39:32.918]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.918]  - attr(*, "resolved")= logi TRUE
[17:39:32.918]  - attr(*, "total_size")= num NA
[17:39:32.921]  - Getting '...' globals ... DONE
[17:39:32.921] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[17:39:32.921] List of 3
[17:39:32.921]  $ ...future.FUN:function (ii)  
[17:39:32.921]  $ a            : num 1
[17:39:32.921]  $ ...          : list()
[17:39:32.921]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.921]  - attr(*, "where")=List of 3
[17:39:32.921]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:32.921]   ..$ a            :<environment: R_EmptyEnv> 
[17:39:32.921]   ..$ ...          :<environment: 0x556101608120> 
[17:39:32.921]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.921]  - attr(*, "resolved")= logi FALSE
[17:39:32.921]  - attr(*, "total_size")= num 2984
[17:39:32.925] Packages to be attached in all futures: [n=0] 
[17:39:32.925] getGlobalsAndPackagesXApply() ... DONE
[17:39:32.925] Number of futures (= number of chunks): 1
[17:39:32.926] Launching 1 futures (chunks) ...
[17:39:32.926] Chunk #1 of 1 ...
[17:39:32.926]  - Finding globals in 'X' for chunk #1 ...
[17:39:32.926]    + additional globals found: [n=0] 
[17:39:32.926]    + additional namespaces needed: [n=0] 
[17:39:32.926]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:32.926]  - seeds: <none>
[17:39:32.933] Created future:
[17:39:32.934] MulticoreFuture:
[17:39:32.934] Label: ‘future_lapply-1’
[17:39:32.934] Expression:
[17:39:32.934] {
[17:39:32.934]     do.call(function(...) {
[17:39:32.934]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:32.934]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:32.934]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:32.934]             on.exit(options(oopts), add = TRUE)
[17:39:32.934]         }
[17:39:32.934]         {
[17:39:32.934]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:32.934]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:32.934]                 ...future.FUN(...future.X_jj, ...)
[17:39:32.934]             })
[17:39:32.934]         }
[17:39:32.934]     }, args = future.call.arguments)
[17:39:32.934] }
[17:39:32.934] Lazy evaluation: FALSE
[17:39:32.934] Asynchronous evaluation: TRUE
[17:39:32.934] Local evaluation: TRUE
[17:39:32.934] Environment: R_GlobalEnv
[17:39:32.934] Capture standard output: TRUE
[17:39:32.934] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:32.934] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:39:32.934] Packages: <none>
[17:39:32.934] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:32.934] Resolved: TRUE
[17:39:32.934] Value: <not collected>
[17:39:32.934] Conditions captured: <none>
[17:39:32.934] Early signaling: FALSE
[17:39:32.934] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:32.934] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:32.942] Chunk #1 of 1 ... DONE
[17:39:32.942] Launching 1 futures (chunks) ... DONE
[17:39:32.942] Resolving 1 futures (chunks) ...
[17:39:32.944]  - Number of value chunks collected: 1
[17:39:32.944] Resolving 1 futures (chunks) ... DONE
[17:39:32.944] Reducing values from 1 chunks ...
[17:39:32.944]  - Number of values collected after concatenation: 1
[17:39:32.944]  - Number of values expected: 1
[17:39:32.945] Reducing values from 1 chunks ... DONE
[17:39:32.945] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[17:39:32.945] future_lapply() ...
[17:39:32.950] Number of chunks: 1
[17:39:32.950] getGlobalsAndPackagesXApply() ...
[17:39:32.950]  - future.globals: TRUE
[17:39:32.953]  - globals found/used: [n=2] ‘FUN’, ‘a’
[17:39:32.953]  - needed namespaces: [n=0] 
[17:39:32.953] Finding globals ... DONE
[17:39:32.953]  - use_args: TRUE
[17:39:32.953]  - Getting '...' globals ...
[17:39:32.954]    - '...' content: [n=0] 
[17:39:32.954] List of 1
[17:39:32.954]  $ ...: list()
[17:39:32.954]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.954]  - attr(*, "where")=List of 1
[17:39:32.954]   ..$ ...:<environment: 0x556104acc4b8> 
[17:39:32.954]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.954]  - attr(*, "resolved")= logi TRUE
[17:39:32.954]  - attr(*, "total_size")= num NA
[17:39:32.959]  - Getting '...' globals ... DONE
[17:39:32.959] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[17:39:32.960] List of 3
[17:39:32.960]  $ ...future.FUN:function (ii)  
[17:39:32.960]  $ a            : num 1
[17:39:32.960]  $ ...          : list()
[17:39:32.960]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.960]  - attr(*, "where")=List of 3
[17:39:32.960]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:32.960]   ..$ a            :<environment: R_EmptyEnv> 
[17:39:32.960]   ..$ ...          :<environment: 0x556104acc4b8> 
[17:39:32.960]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.960]  - attr(*, "resolved")= logi FALSE
[17:39:32.960]  - attr(*, "total_size")= num 2984
[17:39:32.963] Packages to be attached in all futures: [n=0] 
[17:39:32.964] getGlobalsAndPackagesXApply() ... DONE
[17:39:32.964] Number of futures (= number of chunks): 1
[17:39:32.964] Launching 1 futures (chunks) ...
[17:39:32.964] Chunk #1 of 1 ...
[17:39:32.964]  - Finding globals in 'X' for chunk #1 ...
[17:39:32.965]    + additional globals found: [n=0] 
[17:39:32.965]    + additional namespaces needed: [n=0] 
[17:39:32.965]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:32.965]  - seeds: <none>
[17:39:32.973] Created future:
[17:39:32.973] MulticoreFuture:
[17:39:32.973] Label: ‘future_lapply-1’
[17:39:32.973] Expression:
[17:39:32.973] {
[17:39:32.973]     do.call(function(...) {
[17:39:32.973]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:32.973]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:32.973]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:32.973]             on.exit(options(oopts), add = TRUE)
[17:39:32.973]         }
[17:39:32.973]         {
[17:39:32.973]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:32.973]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:32.973]                 ...future.FUN(...future.X_jj, ...)
[17:39:32.973]             })
[17:39:32.973]         }
[17:39:32.973]     }, args = future.call.arguments)
[17:39:32.973] }
[17:39:32.973] Lazy evaluation: FALSE
[17:39:32.973] Asynchronous evaluation: TRUE
[17:39:32.973] Local evaluation: TRUE
[17:39:32.973] Environment: R_GlobalEnv
[17:39:32.973] Capture standard output: TRUE
[17:39:32.973] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:32.973] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:39:32.973] Packages: <none>
[17:39:32.973] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:32.973] Resolved: TRUE
[17:39:32.973] Value: <not collected>
[17:39:32.973] Conditions captured: <none>
[17:39:32.973] Early signaling: FALSE
[17:39:32.973] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:32.973] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:32.981] Chunk #1 of 1 ... DONE
[17:39:32.981] Launching 1 futures (chunks) ... DONE
[17:39:32.981] Resolving 1 futures (chunks) ...
[17:39:32.983]  - Number of value chunks collected: 1
[17:39:32.983] Resolving 1 futures (chunks) ... DONE
[17:39:32.983] Reducing values from 1 chunks ...
[17:39:32.983]  - Number of values collected after concatenation: 1
[17:39:32.984]  - Number of values expected: 1
[17:39:32.984] Reducing values from 1 chunks ... DONE
[17:39:32.984] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[17:39:32.984] future_lapply() ...
[17:39:32.988] Number of chunks: 1
[17:39:32.989] getGlobalsAndPackagesXApply() ...
[17:39:32.989]  - future.globals: <name-value list> with names ‘42’
[17:39:32.989]  - use_args: TRUE
[17:39:32.989]  - Getting '...' globals ...
[17:39:32.989]    - '...' content: [n=0] 
[17:39:32.990] List of 1
[17:39:32.990]  $ ...: list()
[17:39:32.990]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.990]  - attr(*, "where")=List of 1
[17:39:32.990]   ..$ ...:<environment: 0x5561034717f0> 
[17:39:32.990]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.990]  - attr(*, "resolved")= logi TRUE
[17:39:32.990]  - attr(*, "total_size")= num NA
[17:39:32.993]  - Getting '...' globals ... DONE
[17:39:32.993] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[17:39:32.993] List of 3
[17:39:32.993]  $ a            : num 42
[17:39:32.993]  $ ...future.FUN:function (x)  
[17:39:32.993]  $ ...          : list()
[17:39:32.993]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:32.993]  - attr(*, "where")=List of 3
[17:39:32.993]   ..$ a            :<environment: R_EmptyEnv> 
[17:39:32.993]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[17:39:32.993]   ..$ ...          :<environment: 0x5561034717f0> 
[17:39:32.993]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:32.993]  - attr(*, "resolved")= logi FALSE
[17:39:32.993]  - attr(*, "total_size")= num NA
[17:39:32.997] Packages to be attached in all futures: [n=0] 
[17:39:32.998] getGlobalsAndPackagesXApply() ... DONE
[17:39:32.998] Number of futures (= number of chunks): 1
[17:39:32.998] Launching 1 futures (chunks) ...
[17:39:32.998] Chunk #1 of 1 ...
[17:39:32.998]  - seeds: <none>
[17:39:33.007] Created future:
[17:39:33.007] MulticoreFuture:
[17:39:33.007] Label: ‘future_lapply-1’
[17:39:33.007] Expression:
[17:39:33.007] {
[17:39:33.007]     do.call(function(...) {
[17:39:33.007]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:33.007]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:33.007]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:33.007]             on.exit(options(oopts), add = TRUE)
[17:39:33.007]         }
[17:39:33.007]         {
[17:39:33.007]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:33.007]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:33.007]                 ...future.FUN(...future.X_jj, ...)
[17:39:33.007]             })
[17:39:33.007]         }
[17:39:33.007]     }, args = future.call.arguments)
[17:39:33.007] }
[17:39:33.007] Lazy evaluation: FALSE
[17:39:33.007] Asynchronous evaluation: TRUE
[17:39:33.007] Local evaluation: TRUE
[17:39:33.007] Environment: R_GlobalEnv
[17:39:33.007] Capture standard output: TRUE
[17:39:33.007] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:33.007] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:39:33.007] Packages: <none>
[17:39:33.007] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:33.007] Resolved: TRUE
[17:39:33.007] Value: <not collected>
[17:39:33.007] Conditions captured: <none>
[17:39:33.007] Early signaling: FALSE
[17:39:33.007] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:33.007] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:33.015] Chunk #1 of 1 ... DONE
[17:39:33.015] Launching 1 futures (chunks) ... DONE
[17:39:33.016] Resolving 1 futures (chunks) ...
[17:39:33.017]  - Number of value chunks collected: 1
[17:39:33.017] Resolving 1 futures (chunks) ... DONE
[17:39:33.017] Reducing values from 1 chunks ...
[17:39:33.018]  - Number of values collected after concatenation: 1
[17:39:33.018]  - Number of values expected: 1
[17:39:33.018] Reducing values from 1 chunks ... DONE
[17:39:33.018] future_lapply() ... DONE
List of 1
 $ : num 42
[17:39:33.433] future_lapply() ...
[17:39:33.438] Number of chunks: 2
[17:39:33.438] getGlobalsAndPackagesXApply() ...
[17:39:33.438]  - future.globals: TRUE
[17:39:33.444]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[17:39:33.444]  - needed namespaces: [n=0] 
[17:39:33.456] Finding globals ... DONE
[17:39:33.456]  - use_args: TRUE
[17:39:33.456]  - Getting '...' globals ...
[17:39:33.456]    - '...' content: [n=0] 
[17:39:33.456] List of 1
[17:39:33.456]  $ ...: list()
[17:39:33.456]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:33.456]  - attr(*, "where")=List of 1
[17:39:33.456]   ..$ ...:<environment: 0x5561048e8818> 
[17:39:33.456]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:33.456]  - attr(*, "resolved")= logi TRUE
[17:39:33.456]  - attr(*, "total_size")= num NA
[17:39:33.459]  - Getting '...' globals ... DONE
[17:39:33.460] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[17:39:33.460] List of 6
[17:39:33.460]  $ ...future.FUN:function (i)  
[17:39:33.460]  $ caller       :function (a, b, FUN = call_my_add)  
[17:39:33.460]  $ args         :List of 1
[17:39:33.460]   ..$ FUN:function (a, b)  
[17:39:33.460]  $ call_my_add  :function (a, b)  
[17:39:33.460]  $ my_add       :function (a, b)  
[17:39:33.460]  $ ...          : list()
[17:39:33.460]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:33.460]  - attr(*, "where")=List of 6
[17:39:33.460]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:33.460]   ..$ caller       :<environment: R_EmptyEnv> 
[17:39:33.460]   ..$ args         :<environment: R_EmptyEnv> 
[17:39:33.460]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[17:39:33.460]   ..$ my_add       :<environment: R_EmptyEnv> 
[17:39:33.460]   ..$ ...          :<environment: 0x5561048e8818> 
[17:39:33.460]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:33.460]  - attr(*, "resolved")= logi FALSE
[17:39:33.460]  - attr(*, "total_size")= num 24120
[17:39:33.465] Packages to be attached in all futures: [n=0] 
[17:39:33.465] getGlobalsAndPackagesXApply() ... DONE
[17:39:33.465] Number of futures (= number of chunks): 2
[17:39:33.465] Launching 2 futures (chunks) ...
[17:39:33.465] Chunk #1 of 2 ...
[17:39:33.465]  - Finding globals in 'X' for chunk #1 ...
[17:39:33.466]    + additional globals found: [n=0] 
[17:39:33.466]    + additional namespaces needed: [n=0] 
[17:39:33.466]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:33.466]  - seeds: <none>
[17:39:33.525] Created future:
[17:39:33.526] MultisessionFuture:
[17:39:33.526] Label: ‘future_lapply-1’
[17:39:33.526] Expression:
[17:39:33.526] {
[17:39:33.526]     do.call(function(...) {
[17:39:33.526]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:33.526]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:33.526]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:33.526]             on.exit(options(oopts), add = TRUE)
[17:39:33.526]         }
[17:39:33.526]         {
[17:39:33.526]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:33.526]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:33.526]                 ...future.FUN(...future.X_jj, ...)
[17:39:33.526]             })
[17:39:33.526]         }
[17:39:33.526]     }, args = future.call.arguments)
[17:39:33.526] }
[17:39:33.526] Lazy evaluation: FALSE
[17:39:33.526] Asynchronous evaluation: TRUE
[17:39:33.526] Local evaluation: TRUE
[17:39:33.526] Environment: 0x5561048e8c40
[17:39:33.526] Capture standard output: TRUE
[17:39:33.526] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:33.526] Globals: 9 objects totaling 23.61 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[17:39:33.526] Packages: <none>
[17:39:33.526] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:33.526] Resolved: FALSE
[17:39:33.526] Value: <not collected>
[17:39:33.526] Conditions captured: <none>
[17:39:33.526] Early signaling: FALSE
[17:39:33.526] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:33.526] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:33.538] Chunk #1 of 2 ... DONE
[17:39:33.538] Chunk #2 of 2 ...
[17:39:33.538]  - Finding globals in 'X' for chunk #2 ...
[17:39:33.538]    + additional globals found: [n=0] 
[17:39:33.538]    + additional namespaces needed: [n=0] 
[17:39:33.538]  - Finding globals in 'X' for chunk #2 ... DONE
[17:39:33.539]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:39:33.539]  - seeds: <none>
[17:39:33.626] Created future:
[17:39:33.626] MultisessionFuture:
[17:39:33.626] Label: ‘future_lapply-2’
[17:39:33.626] Expression:
[17:39:33.626] {
[17:39:33.626]     do.call(function(...) {
[17:39:33.626]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:33.626]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:33.626]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:33.626]             on.exit(options(oopts), add = TRUE)
[17:39:33.626]         }
[17:39:33.626]         {
[17:39:33.626]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:33.626]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:33.626]                 ...future.FUN(...future.X_jj, ...)
[17:39:33.626]             })
[17:39:33.626]         }
[17:39:33.626]     }, args = future.call.arguments)
[17:39:33.626] }
[17:39:33.626] Lazy evaluation: FALSE
[17:39:33.626] Asynchronous evaluation: TRUE
[17:39:33.626] Local evaluation: TRUE
[17:39:33.626] Environment: 0x5561048e8c40
[17:39:33.626] Capture standard output: TRUE
[17:39:33.626] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:33.626] Globals: 9 objects totaling 23.66 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[17:39:33.626] Packages: <none>
[17:39:33.626] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:33.626] Resolved: FALSE
[17:39:33.626] Value: <not collected>
[17:39:33.626] Conditions captured: <none>
[17:39:33.626] Early signaling: FALSE
[17:39:33.626] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:33.626] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:33.638] Chunk #2 of 2 ... DONE
[17:39:33.638] Launching 2 futures (chunks) ... DONE
[17:39:33.638] Resolving 2 futures (chunks) ...
[17:39:33.702]  - Number of value chunks collected: 2
[17:39:33.702] Resolving 2 futures (chunks) ... DONE
[17:39:33.703] Reducing values from 2 chunks ...
[17:39:33.703]  - Number of values collected after concatenation: 3
[17:39:33.703]  - Number of values expected: 3
[17:39:33.703] Reducing values from 2 chunks ... DONE
[17:39:33.703] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[17:39:33.703] future_lapply() ...
[17:39:33.708] Number of chunks: 1
[17:39:33.708] getGlobalsAndPackagesXApply() ...
[17:39:33.708]  - future.globals: TRUE
[17:39:33.711]  - globals found/used: [n=1] ‘FUN’
[17:39:33.711]  - needed namespaces: [n=0] 
[17:39:33.711] Finding globals ... DONE
[17:39:33.711]  - use_args: TRUE
[17:39:33.712]  - Getting '...' globals ...
[17:39:33.712]    - '...' content: [n=1] ‘what’
[17:39:33.712] List of 1
[17:39:33.712]  $ ...:List of 1
[17:39:33.712]   ..$ what:function (x)  
[17:39:33.712]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:33.712]  - attr(*, "where")=List of 1
[17:39:33.712]   ..$ ...:<environment: 0x556104ba0750> 
[17:39:33.712]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:33.712]  - attr(*, "resolved")= logi TRUE
[17:39:33.712]  - attr(*, "total_size")= num NA
[17:39:33.715]  - Getting '...' globals ... DONE
[17:39:33.715] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:39:33.715] List of 2
[17:39:33.715]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[17:39:33.715]  $ ...          :List of 1
[17:39:33.715]   ..$ what:function (x)  
[17:39:33.715]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:33.715]  - attr(*, "where")=List of 2
[17:39:33.715]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:33.715]   ..$ ...          :<environment: 0x556104ba0750> 
[17:39:33.715]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:33.715]  - attr(*, "resolved")= logi FALSE
[17:39:33.715]  - attr(*, "total_size")= num 12192
[17:39:33.718] Packages to be attached in all futures: [n=0] 
[17:39:33.718] getGlobalsAndPackagesXApply() ... DONE
[17:39:33.719] Number of futures (= number of chunks): 1
[17:39:33.719] Launching 1 futures (chunks) ...
[17:39:33.719] Chunk #1 of 1 ...
[17:39:33.719]  - Finding globals in 'X' for chunk #1 ...
[17:39:33.719]    + additional globals found: [n=0] 
[17:39:33.720]    + additional namespaces needed: [n=0] 
[17:39:33.720]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:33.720]  - seeds: <none>
[17:39:33.738] Created future:
[17:39:33.738] MultisessionFuture:
[17:39:33.738] Label: ‘future_lapply-1’
[17:39:33.738] Expression:
[17:39:33.738] {
[17:39:33.738]     do.call(function(...) {
[17:39:33.738]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:33.738]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:33.738]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:33.738]             on.exit(options(oopts), add = TRUE)
[17:39:33.738]         }
[17:39:33.738]         {
[17:39:33.738]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:33.738]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:33.738]                 ...future.FUN(...future.X_jj, ...)
[17:39:33.738]             })
[17:39:33.738]         }
[17:39:33.738]     }, args = future.call.arguments)
[17:39:33.738] }
[17:39:33.738] Lazy evaluation: FALSE
[17:39:33.738] Asynchronous evaluation: TRUE
[17:39:33.738] Local evaluation: TRUE
[17:39:33.738] Environment: R_GlobalEnv
[17:39:33.738] Capture standard output: TRUE
[17:39:33.738] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:33.738] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:33.738] Packages: <none>
[17:39:33.738] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:33.738] Resolved: FALSE
[17:39:33.738] Value: <not collected>
[17:39:33.738] Conditions captured: <none>
[17:39:33.738] Early signaling: FALSE
[17:39:33.738] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:33.738] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:33.753] Chunk #1 of 1 ... DONE
[17:39:33.753] Launching 1 futures (chunks) ... DONE
[17:39:33.753] Resolving 1 futures (chunks) ...
[17:39:33.784]  - Number of value chunks collected: 1
[17:39:33.784] Resolving 1 futures (chunks) ... DONE
[17:39:33.784] Reducing values from 1 chunks ...
[17:39:33.785]  - Number of values collected after concatenation: 1
[17:39:33.785]  - Number of values expected: 1
[17:39:33.785] Reducing values from 1 chunks ... DONE
[17:39:33.785] future_lapply() ... DONE
[17:39:33.785] future_lapply() ...
[17:39:33.789] Number of chunks: 1
[17:39:33.789] getGlobalsAndPackagesXApply() ...
[17:39:33.790]  - future.globals: TRUE
[17:39:33.792]  - globals found/used: [n=1] ‘FUN’
[17:39:33.792]  - needed namespaces: [n=0] 
[17:39:33.792] Finding globals ... DONE
[17:39:33.793]  - use_args: TRUE
[17:39:33.793]  - Getting '...' globals ...
[17:39:33.793]    - '...' content: [n=1] ‘what’
[17:39:33.793] List of 1
[17:39:33.793]  $ ...:List of 1
[17:39:33.793]   ..$ what:function (...)  
[17:39:33.793]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:33.793]  - attr(*, "where")=List of 1
[17:39:33.793]   ..$ ...:<environment: 0x556103c21af8> 
[17:39:33.793]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:33.793]  - attr(*, "resolved")= logi TRUE
[17:39:33.793]  - attr(*, "total_size")= num NA
[17:39:33.796]  - Getting '...' globals ... DONE
[17:39:33.796] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:39:33.796] List of 2
[17:39:33.796]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[17:39:33.796]  $ ...          :List of 1
[17:39:33.796]   ..$ what:function (...)  
[17:39:33.796]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:33.796]  - attr(*, "where")=List of 2
[17:39:33.796]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:33.796]   ..$ ...          :<environment: 0x556103c21af8> 
[17:39:33.796]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:33.796]  - attr(*, "resolved")= logi FALSE
[17:39:33.796]  - attr(*, "total_size")= num 13352
[17:39:33.799] Packages to be attached in all futures: [n=0] 
[17:39:33.799] getGlobalsAndPackagesXApply() ... DONE
[17:39:33.799] Number of futures (= number of chunks): 1
[17:39:33.800] Launching 1 futures (chunks) ...
[17:39:33.800] Chunk #1 of 1 ...
[17:39:33.800]  - Finding globals in 'X' for chunk #1 ...
[17:39:33.800]    + additional globals found: [n=0] 
[17:39:33.800]    + additional namespaces needed: [n=0] 
[17:39:33.800]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:33.800]  - seeds: <none>
[17:39:33.819] Created future:
[17:39:33.819] MultisessionFuture:
[17:39:33.819] Label: ‘future_lapply-1’
[17:39:33.819] Expression:
[17:39:33.819] {
[17:39:33.819]     do.call(function(...) {
[17:39:33.819]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:33.819]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:33.819]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:33.819]             on.exit(options(oopts), add = TRUE)
[17:39:33.819]         }
[17:39:33.819]         {
[17:39:33.819]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:33.819]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:33.819]                 ...future.FUN(...future.X_jj, ...)
[17:39:33.819]             })
[17:39:33.819]         }
[17:39:33.819]     }, args = future.call.arguments)
[17:39:33.819] }
[17:39:33.819] Lazy evaluation: FALSE
[17:39:33.819] Asynchronous evaluation: TRUE
[17:39:33.819] Local evaluation: TRUE
[17:39:33.819] Environment: R_GlobalEnv
[17:39:33.819] Capture standard output: TRUE
[17:39:33.819] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:33.819] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:33.819] Packages: <none>
[17:39:33.819] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:33.819] Resolved: FALSE
[17:39:33.819] Value: <not collected>
[17:39:33.819] Conditions captured: <none>
[17:39:33.819] Early signaling: FALSE
[17:39:33.819] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:33.819] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:33.830] Chunk #1 of 1 ... DONE
[17:39:33.830] Launching 1 futures (chunks) ... DONE
[17:39:33.831] Resolving 1 futures (chunks) ...
[17:39:33.873]  - Number of value chunks collected: 1
[17:39:33.873] Resolving 1 futures (chunks) ... DONE
[17:39:33.873] Reducing values from 1 chunks ...
[17:39:33.873]  - Number of values collected after concatenation: 1
[17:39:33.873]  - Number of values expected: 1
[17:39:33.873] Reducing values from 1 chunks ... DONE
[17:39:33.873] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[17:39:33.874] future_lapply() ...
[17:39:33.877] Number of chunks: 1
[17:39:33.877] getGlobalsAndPackagesXApply() ...
[17:39:33.877]  - future.globals: TRUE
[17:39:33.879]  - globals found/used: [n=1] ‘FUN’
[17:39:33.879]  - needed namespaces: [n=0] 
[17:39:33.879] Finding globals ... DONE
[17:39:33.879]  - use_args: TRUE
[17:39:33.879]  - Getting '...' globals ...
[17:39:33.880]    - '...' content: [n=1] ‘b’
[17:39:33.880] List of 1
[17:39:33.880]  $ ...:List of 1
[17:39:33.880]   ..$ b:'data.frame':	2 obs. of  1 variable:
[17:39:33.880]   .. ..$ a: int [1:2] 1 2
[17:39:33.880]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:33.880]  - attr(*, "where")=List of 1
[17:39:33.880]   ..$ ...:<environment: 0x5561047982d8> 
[17:39:33.880]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:33.880]  - attr(*, "resolved")= logi TRUE
[17:39:33.880]  - attr(*, "total_size")= num NA
[17:39:33.883]  - Getting '...' globals ... DONE
[17:39:33.883] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:39:33.884] List of 2
[17:39:33.884]  $ ...future.FUN:function (a, b)  
[17:39:33.884]  $ ...          :List of 1
[17:39:33.884]   ..$ b:'data.frame':	2 obs. of  1 variable:
[17:39:33.884]   .. ..$ a: int [1:2] 1 2
[17:39:33.884]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:33.884]  - attr(*, "where")=List of 2
[17:39:33.884]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:33.884]   ..$ ...          :<environment: 0x5561047982d8> 
[17:39:33.884]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:33.884]  - attr(*, "resolved")= logi FALSE
[17:39:33.884]  - attr(*, "total_size")= num 1440
[17:39:33.887] Packages to be attached in all futures: [n=0] 
[17:39:33.887] getGlobalsAndPackagesXApply() ... DONE
[17:39:33.887] Number of futures (= number of chunks): 1
[17:39:33.887] Launching 1 futures (chunks) ...
[17:39:33.887] Chunk #1 of 1 ...
[17:39:33.888]  - Finding globals in 'X' for chunk #1 ...
[17:39:33.888]    + additional globals found: [n=0] 
[17:39:33.888]    + additional namespaces needed: [n=0] 
[17:39:33.888]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:33.888]  - seeds: <none>
[17:39:33.906] Created future:
[17:39:33.906] MultisessionFuture:
[17:39:33.906] Label: ‘future_lapply-1’
[17:39:33.906] Expression:
[17:39:33.906] {
[17:39:33.906]     do.call(function(...) {
[17:39:33.906]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:33.906]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:33.906]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:33.906]             on.exit(options(oopts), add = TRUE)
[17:39:33.906]         }
[17:39:33.906]         {
[17:39:33.906]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:33.906]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:33.906]                 ...future.FUN(...future.X_jj, ...)
[17:39:33.906]             })
[17:39:33.906]         }
[17:39:33.906]     }, args = future.call.arguments)
[17:39:33.906] }
[17:39:33.906] Lazy evaluation: FALSE
[17:39:33.906] Asynchronous evaluation: TRUE
[17:39:33.906] Local evaluation: TRUE
[17:39:33.906] Environment: R_GlobalEnv
[17:39:33.906] Capture standard output: TRUE
[17:39:33.906] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:33.906] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:33.906] Packages: <none>
[17:39:33.906] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:33.906] Resolved: FALSE
[17:39:33.906] Value: <not collected>
[17:39:33.906] Conditions captured: <none>
[17:39:33.906] Early signaling: FALSE
[17:39:33.906] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:33.906] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:33.918] Chunk #1 of 1 ... DONE
[17:39:33.918] Launching 1 futures (chunks) ... DONE
[17:39:33.918] Resolving 1 futures (chunks) ...
[17:39:33.960]  - Number of value chunks collected: 1
[17:39:33.960] Resolving 1 futures (chunks) ... DONE
[17:39:33.960] Reducing values from 1 chunks ...
[17:39:33.960]  - Number of values collected after concatenation: 1
[17:39:33.960]  - Number of values expected: 1
[17:39:33.961] Reducing values from 1 chunks ... DONE
[17:39:33.961] future_lapply() ... DONE
[17:39:33.961] future_lapply() ...
[17:39:33.966] Number of chunks: 1
[17:39:33.966] getGlobalsAndPackagesXApply() ...
[17:39:33.967]  - future.globals: TRUE
[17:39:33.968]  - globals found/used: [n=1] ‘FUN’
[17:39:33.968]  - needed namespaces: [n=0] 
[17:39:33.968] Finding globals ... DONE
[17:39:33.969]  - use_args: TRUE
[17:39:33.969]  - Getting '...' globals ...
[17:39:33.969]    - '...' content: [n=1] ‘b’
[17:39:33.969] List of 1
[17:39:33.969]  $ ...:List of 1
[17:39:33.969]   ..$ b:<environment: 0x556103f7d1d0> 
[17:39:33.969]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:33.969]  - attr(*, "where")=List of 1
[17:39:33.969]   ..$ ...:<environment: 0x556103f7c718> 
[17:39:33.969]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:33.969]  - attr(*, "resolved")= logi TRUE
[17:39:33.969]  - attr(*, "total_size")= num NA
[17:39:33.972]  - Getting '...' globals ... DONE
[17:39:33.972] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:39:33.972] List of 2
[17:39:33.972]  $ ...future.FUN:function (a, b)  
[17:39:33.972]  $ ...          :List of 1
[17:39:33.972]   ..$ b:<environment: 0x556103f7d1d0> 
[17:39:33.972]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:33.972]  - attr(*, "where")=List of 2
[17:39:33.972]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:33.972]   ..$ ...          :<environment: 0x556103f7c718> 
[17:39:33.972]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:33.972]  - attr(*, "resolved")= logi FALSE
[17:39:33.972]  - attr(*, "total_size")= num 1440
[17:39:33.975] Packages to be attached in all futures: [n=0] 
[17:39:33.975] getGlobalsAndPackagesXApply() ... DONE
[17:39:33.975] Number of futures (= number of chunks): 1
[17:39:33.976] Launching 1 futures (chunks) ...
[17:39:33.976] Chunk #1 of 1 ...
[17:39:33.976]  - Finding globals in 'X' for chunk #1 ...
[17:39:33.976]    + additional globals found: [n=0] 
[17:39:33.976]    + additional namespaces needed: [n=0] 
[17:39:33.976]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:33.976]  - seeds: <none>
[17:39:33.993] Created future:
[17:39:33.994] MultisessionFuture:
[17:39:33.994] Label: ‘future_lapply-1’
[17:39:33.994] Expression:
[17:39:33.994] {
[17:39:33.994]     do.call(function(...) {
[17:39:33.994]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:33.994]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:33.994]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:33.994]             on.exit(options(oopts), add = TRUE)
[17:39:33.994]         }
[17:39:33.994]         {
[17:39:33.994]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:33.994]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:33.994]                 ...future.FUN(...future.X_jj, ...)
[17:39:33.994]             })
[17:39:33.994]         }
[17:39:33.994]     }, args = future.call.arguments)
[17:39:33.994] }
[17:39:33.994] Lazy evaluation: FALSE
[17:39:33.994] Asynchronous evaluation: TRUE
[17:39:33.994] Local evaluation: TRUE
[17:39:33.994] Environment: R_GlobalEnv
[17:39:33.994] Capture standard output: TRUE
[17:39:33.994] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:33.994] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:33.994] Packages: <none>
[17:39:33.994] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:33.994] Resolved: FALSE
[17:39:33.994] Value: <not collected>
[17:39:33.994] Conditions captured: <none>
[17:39:33.994] Early signaling: FALSE
[17:39:33.994] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:33.994] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:34.005] Chunk #1 of 1 ... DONE
[17:39:34.005] Launching 1 futures (chunks) ... DONE
[17:39:34.005] Resolving 1 futures (chunks) ...
[17:39:34.047]  - Number of value chunks collected: 1
[17:39:34.048] Resolving 1 futures (chunks) ... DONE
[17:39:34.048] Reducing values from 1 chunks ...
[17:39:34.048]  - Number of values collected after concatenation: 1
[17:39:34.048]  - Number of values expected: 1
[17:39:34.048] Reducing values from 1 chunks ... DONE
[17:39:34.048] future_lapply() ... DONE
[17:39:34.048] future_lapply() ...
[17:39:34.052] Number of chunks: 1
[17:39:34.052] getGlobalsAndPackagesXApply() ...
[17:39:34.052]  - future.globals: TRUE
[17:39:34.054]  - globals found/used: [n=1] ‘FUN’
[17:39:34.054]  - needed namespaces: [n=0] 
[17:39:34.054] Finding globals ... DONE
[17:39:34.054]  - use_args: TRUE
[17:39:34.055]  - Getting '...' globals ...
[17:39:34.055]    - '...' content: [n=1] ‘b’
[17:39:34.055] List of 1
[17:39:34.055]  $ ...:List of 1
[17:39:34.055]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[17:39:34.055]   .. .. ..@ slots     :List of 4
[17:39:34.055]   .. .. .. ..$ .Data  : chr "function"
[17:39:34.055]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.055]   .. .. .. ..$ target : chr "signature"
[17:39:34.055]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.055]   .. .. .. ..$ defined: chr "signature"
[17:39:34.055]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.055]   .. .. .. ..$ generic: chr "character"
[17:39:34.055]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.055]   .. .. ..@ contains  :List of 3
[17:39:34.055]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:34.055]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:39:34.055]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ superClass: chr "function"
[17:39:34.055]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:34.055]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:34.055]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:34.055]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:34.055]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:34.055]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[17:39:34.055]   .. .. .. .. .. ..@ distance  : num 1
[17:39:34.055]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:34.055]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:39:34.055]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[17:39:34.055]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:34.055]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:34.055]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:34.055]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:34.055]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:34.055]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:34.055]   .. .. .. .. .. ..@ distance  : num 1
[17:39:34.055]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:34.055]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:39:34.055]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[17:39:34.055]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:34.055]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:34.055]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:34.055]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:34.055]   .. .. .. .. .. ..@ by        : chr "function"
[17:39:34.055]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:34.055]   .. .. .. .. .. ..@ distance  : num 2
[17:39:34.055]   .. .. ..@ virtual   : logi FALSE
[17:39:34.055]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[17:39:34.055]  list()
[17:39:34.055]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[17:39:34.055]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:39:34.055]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:39:34.055]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:39:34.055]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[17:39:34.055]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:39:34.055]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:39:34.055]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:39:34.055]   .. .. .. .. ..$ generic: chr(0) 
[17:39:34.055]   .. .. ..@ validity  : NULL
[17:39:34.055]   .. .. ..@ access    : list()
[17:39:34.055]   .. .. ..@ className : chr "MethodDefinition"
[17:39:34.055]   .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.055]   .. .. ..@ package   : chr "methods"
[17:39:34.055]   .. .. ..@ subclasses:List of 7
[17:39:34.055]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:34.055]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[17:39:34.055]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:34.055]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:34.055]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:34.055]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:34.055]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:34.055]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:34.055]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:34.055]   .. .. .. .. .. ..@ distance  : num 1
[17:39:34.055]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:34.055]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[17:39:34.055]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:34.055]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:34.055]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:34.055]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:34.055]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:34.055]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:34.055]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:34.055]   .. .. .. .. .. ..@ distance  : num 1
[17:39:34.055]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:34.055]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[17:39:34.055]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:34.055]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:34.055]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:34.055]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:34.055]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:34.055]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:34.055]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:34.055]   .. .. .. .. .. ..@ distance  : num 1
[17:39:34.055]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:34.055]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[17:39:34.055]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:34.055]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:34.055]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:34.055]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:34.055]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:34.055]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:34.055]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:34.055]   .. .. .. .. .. ..@ distance  : num 1
[17:39:34.055]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:34.055]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[17:39:34.055]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:34.055]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:34.055]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:34.055]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:34.055]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:34.055]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:39:34.055]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:34.055]   .. .. .. .. .. ..@ distance  : num 2
[17:39:34.055]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:34.055]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[17:39:34.055]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:34.055]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:34.055]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:34.055]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:34.055]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:34.055]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[17:39:34.055]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:34.055]   .. .. .. .. .. ..@ distance  : num 2
[17:39:34.055]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:34.055]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[17:39:34.055]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:34.055]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:34.055]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:34.055]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:34.055]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:34.055]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:39:34.055]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.055]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:34.055]   .. .. .. .. .. ..@ distance  : num 2
[17:39:34.055]   .. .. ..@ versionKey:<externalptr> 
[17:39:34.055]   .. .. ..@ sealed    : logi TRUE
[17:39:34.055]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:34.055]  - attr(*, "where")=List of 1
[17:39:34.055]   ..$ ...:<environment: 0x556101f93ad0> 
[17:39:34.055]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:34.055]  - attr(*, "resolved")= logi TRUE
[17:39:34.055]  - attr(*, "total_size")= num NA
[17:39:34.104]  - Getting '...' globals ... DONE
[17:39:34.104] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:39:34.104] List of 2
[17:39:34.104]  $ ...future.FUN:function (a, b)  
[17:39:34.104]  $ ...          :List of 1
[17:39:34.104]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[17:39:34.104]   .. .. ..@ slots     :List of 4
[17:39:34.104]   .. .. .. ..$ .Data  : chr "function"
[17:39:34.104]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.104]   .. .. .. ..$ target : chr "signature"
[17:39:34.104]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.104]   .. .. .. ..$ defined: chr "signature"
[17:39:34.104]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.104]   .. .. .. ..$ generic: chr "character"
[17:39:34.104]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.104]   .. .. ..@ contains  :List of 3
[17:39:34.104]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:34.104]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:39:34.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ superClass: chr "function"
[17:39:34.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:34.104]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:34.104]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:34.104]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:34.104]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:34.104]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[17:39:34.104]   .. .. .. .. .. ..@ distance  : num 1
[17:39:34.104]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:34.104]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:39:34.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[17:39:34.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:34.104]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:34.104]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:34.104]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:34.104]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:34.104]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:34.104]   .. .. .. .. .. ..@ distance  : num 1
[17:39:34.104]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:34.104]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:39:34.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[17:39:34.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:34.104]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:34.104]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:34.104]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:34.104]   .. .. .. .. .. ..@ by        : chr "function"
[17:39:34.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:34.104]   .. .. .. .. .. ..@ distance  : num 2
[17:39:34.104]   .. .. ..@ virtual   : logi FALSE
[17:39:34.104]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[17:39:34.104]  list()
[17:39:34.104]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[17:39:34.104]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:39:34.104]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:39:34.104]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:39:34.104]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[17:39:34.104]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:39:34.104]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:39:34.104]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:39:34.104]   .. .. .. .. ..$ generic: chr(0) 
[17:39:34.104]   .. .. ..@ validity  : NULL
[17:39:34.104]   .. .. ..@ access    : list()
[17:39:34.104]   .. .. ..@ className : chr "MethodDefinition"
[17:39:34.104]   .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.104]   .. .. ..@ package   : chr "methods"
[17:39:34.104]   .. .. ..@ subclasses:List of 7
[17:39:34.104]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:34.104]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[17:39:34.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:34.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:34.104]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:34.104]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:34.104]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:34.104]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:34.104]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:34.104]   .. .. .. .. .. ..@ distance  : num 1
[17:39:34.104]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:34.104]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[17:39:34.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:34.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:34.104]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:34.104]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:34.104]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:34.104]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:34.104]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:34.104]   .. .. .. .. .. ..@ distance  : num 1
[17:39:34.104]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:34.104]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[17:39:34.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:34.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:34.104]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:34.104]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:34.104]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:34.104]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:34.104]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:34.104]   .. .. .. .. .. ..@ distance  : num 1
[17:39:34.104]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:34.104]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[17:39:34.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:34.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:34.104]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:34.104]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:34.104]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:34.104]   .. .. .. .. .. ..@ by        : chr(0) 
[17:39:34.104]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:34.104]   .. .. .. .. .. ..@ distance  : num 1
[17:39:34.104]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:34.104]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[17:39:34.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:34.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:34.104]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:34.104]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:34.104]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:34.104]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:39:34.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:34.104]   .. .. .. .. .. ..@ distance  : num 2
[17:39:34.104]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:34.104]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[17:39:34.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:34.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:34.104]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:34.104]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:34.104]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:34.104]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[17:39:34.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:34.104]   .. .. .. .. .. ..@ distance  : num 2
[17:39:34.104]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:39:34.104]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[17:39:34.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:39:34.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ package   : chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:39:34.104]   .. .. .. .. .. ..@ test      :function (object)  
[17:39:34.104]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:39:34.104]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:39:34.104]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:39:34.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:39:34.104]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:39:34.104]   .. .. .. .. .. ..@ distance  : num 2
[17:39:34.104]   .. .. ..@ versionKey:<externalptr> 
[17:39:34.104]   .. .. ..@ sealed    : logi TRUE
[17:39:34.104]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:34.104]  - attr(*, "where")=List of 2
[17:39:34.104]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:34.104]   ..$ ...          :<environment: 0x556101f93ad0> 
[17:39:34.104]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:34.104]  - attr(*, "resolved")= logi FALSE
[17:39:34.104]  - attr(*, "total_size")= num 312512
[17:39:34.153] Packages to be attached in all futures: [n=0] 
[17:39:34.153] getGlobalsAndPackagesXApply() ... DONE
[17:39:34.153] Number of futures (= number of chunks): 1
[17:39:34.153] Launching 1 futures (chunks) ...
[17:39:34.153] Chunk #1 of 1 ...
[17:39:34.153]  - Finding globals in 'X' for chunk #1 ...
[17:39:34.154]    + additional globals found: [n=0] 
[17:39:34.154]    + additional namespaces needed: [n=0] 
[17:39:34.154]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:34.154]  - seeds: <none>
[17:39:34.217] Created future:
[17:39:34.217] MultisessionFuture:
[17:39:34.217] Label: ‘future_lapply-1’
[17:39:34.217] Expression:
[17:39:34.217] {
[17:39:34.217]     do.call(function(...) {
[17:39:34.217]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:34.217]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:34.217]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:34.217]             on.exit(options(oopts), add = TRUE)
[17:39:34.217]         }
[17:39:34.217]         {
[17:39:34.217]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:34.217]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:34.217]                 ...future.FUN(...future.X_jj, ...)
[17:39:34.217]             })
[17:39:34.217]         }
[17:39:34.217]     }, args = future.call.arguments)
[17:39:34.217] }
[17:39:34.217] Lazy evaluation: FALSE
[17:39:34.217] Asynchronous evaluation: TRUE
[17:39:34.217] Local evaluation: TRUE
[17:39:34.217] Environment: R_GlobalEnv
[17:39:34.217] Capture standard output: TRUE
[17:39:34.217] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:34.217] Globals: 5 objects totaling 305.24 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 303.78 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:34.217] Packages: <none>
[17:39:34.217] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:34.217] Resolved: FALSE
[17:39:34.217] Value: <not collected>
[17:39:34.217] Conditions captured: <none>
[17:39:34.217] Early signaling: FALSE
[17:39:34.217] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:34.217] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:34.229] Chunk #1 of 1 ... DONE
[17:39:34.229] Launching 1 futures (chunks) ... DONE
[17:39:34.229] Resolving 1 futures (chunks) ...
[17:39:34.272]  - Number of value chunks collected: 1
[17:39:34.272] Resolving 1 futures (chunks) ... DONE
[17:39:34.272] Reducing values from 1 chunks ...
[17:39:34.272]  - Number of values collected after concatenation: 1
[17:39:34.272]  - Number of values expected: 1
[17:39:34.272] Reducing values from 1 chunks ... DONE
[17:39:34.272] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[17:39:34.275] future_lapply() ...
[17:39:34.279] Number of chunks: 2
[17:39:34.279] getGlobalsAndPackagesXApply() ...
[17:39:34.279]  - future.globals: TRUE
[17:39:34.280]  - globals found/used: [n=1] ‘FUN’
[17:39:34.280]  - needed namespaces: [n=0] 
[17:39:34.280] Finding globals ... DONE
[17:39:34.281]  - use_args: TRUE
[17:39:34.281]  - Getting '...' globals ...
[17:39:34.281]    - '...' content: [n=0] 
[17:39:34.281] List of 1
[17:39:34.281]  $ ...: list()
[17:39:34.281]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:34.281]  - attr(*, "where")=List of 1
[17:39:34.281]   ..$ ...:<environment: 0x55610358edf8> 
[17:39:34.281]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:34.281]  - attr(*, "resolved")= logi TRUE
[17:39:34.281]  - attr(*, "total_size")= num NA
[17:39:34.284]  - Getting '...' globals ... DONE
[17:39:34.285] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:39:34.285] List of 2
[17:39:34.285]  $ ...future.FUN:function (f)  
[17:39:34.285]  $ ...          : list()
[17:39:34.285]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:34.285]  - attr(*, "where")=List of 2
[17:39:34.285]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:34.285]   ..$ ...          :<environment: 0x55610358edf8> 
[17:39:34.285]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:34.285]  - attr(*, "resolved")= logi FALSE
[17:39:34.285]  - attr(*, "total_size")= num 1008
[17:39:34.287] Packages to be attached in all futures: [n=0] 
[17:39:34.288] getGlobalsAndPackagesXApply() ... DONE
[17:39:34.288] Number of futures (= number of chunks): 2
[17:39:34.288] Launching 2 futures (chunks) ...
[17:39:34.288] Chunk #1 of 2 ...
[17:39:34.288]  - Finding globals in 'X' for chunk #1 ...
[17:39:34.290]    + additional globals found: [n=2] ‘a’, ‘b’
[17:39:34.290]    + additional namespaces needed: [n=0] 
[17:39:34.290]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:34.290]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:39:34.290]  - seeds: <none>
[17:39:34.311] Created future:
[17:39:34.311] MultisessionFuture:
[17:39:34.311] Label: ‘future_lapply-1’
[17:39:34.311] Expression:
[17:39:34.311] {
[17:39:34.311]     do.call(function(...) {
[17:39:34.311]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:34.311]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:34.311]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:34.311]             on.exit(options(oopts), add = TRUE)
[17:39:34.311]         }
[17:39:34.311]         {
[17:39:34.311]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:34.311]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:34.311]                 ...future.FUN(...future.X_jj, ...)
[17:39:34.311]             })
[17:39:34.311]         }
[17:39:34.311]     }, args = future.call.arguments)
[17:39:34.311] }
[17:39:34.311] Lazy evaluation: FALSE
[17:39:34.311] Asynchronous evaluation: TRUE
[17:39:34.311] Local evaluation: TRUE
[17:39:34.311] Environment: R_GlobalEnv
[17:39:34.311] Capture standard output: TRUE
[17:39:34.311] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:34.311] Globals: 7 objects totaling 3.48 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[17:39:34.311] Packages: <none>
[17:39:34.311] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:34.311] Resolved: FALSE
[17:39:34.311] Value: <not collected>
[17:39:34.311] Conditions captured: <none>
[17:39:34.311] Early signaling: FALSE
[17:39:34.311] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:34.311] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:34.323] Chunk #1 of 2 ... DONE
[17:39:34.323] Chunk #2 of 2 ...
[17:39:34.323]  - Finding globals in 'X' for chunk #2 ...
[17:39:34.325]    + additional globals found: [n=2] ‘a’, ‘b’
[17:39:34.325]    + additional namespaces needed: [n=1] ‘tools’
[17:39:34.325]  - Finding globals in 'X' for chunk #2 ... DONE
[17:39:34.325]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:39:34.325]  - seeds: <none>
[17:39:34.344] Created future:
[17:39:34.344] MultisessionFuture:
[17:39:34.344] Label: ‘future_lapply-2’
[17:39:34.344] Expression:
[17:39:34.344] {
[17:39:34.344]     do.call(function(...) {
[17:39:34.344]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:34.344]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:34.344]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:34.344]             on.exit(options(oopts), add = TRUE)
[17:39:34.344]         }
[17:39:34.344]         {
[17:39:34.344]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:34.344]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:34.344]                 ...future.FUN(...future.X_jj, ...)
[17:39:34.344]             })
[17:39:34.344]         }
[17:39:34.344]     }, args = future.call.arguments)
[17:39:34.344] }
[17:39:34.344] Lazy evaluation: FALSE
[17:39:34.344] Asynchronous evaluation: TRUE
[17:39:34.344] Local evaluation: TRUE
[17:39:34.344] Environment: R_GlobalEnv
[17:39:34.344] Capture standard output: TRUE
[17:39:34.344] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:34.344] Globals: 7 objects totaling 5.11 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.02 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[17:39:34.344] Packages: 1 packages (‘tools’)
[17:39:34.344] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:34.344] Resolved: FALSE
[17:39:34.344] Value: <not collected>
[17:39:34.344] Conditions captured: <none>
[17:39:34.344] Early signaling: FALSE
[17:39:34.344] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:34.344] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:34.356] Chunk #2 of 2 ... DONE
[17:39:34.356] Launching 2 futures (chunks) ... DONE
[17:39:34.356] Resolving 2 futures (chunks) ...
[17:39:34.399]  - Number of value chunks collected: 2
[17:39:34.399] Resolving 2 futures (chunks) ... DONE
[17:39:34.399] Reducing values from 2 chunks ...
[17:39:34.399]  - Number of values collected after concatenation: 4
[17:39:34.400]  - Number of values expected: 4
[17:39:34.400] Reducing values from 2 chunks ... DONE
[17:39:34.400] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[17:39:34.402] future_lapply() ...
[17:39:34.406] Number of chunks: 1
[17:39:34.406] getGlobalsAndPackagesXApply() ...
[17:39:34.407]  - future.globals: TRUE
[17:39:34.409]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[17:39:34.409]  - needed namespaces: [n=0] 
[17:39:34.409] Finding globals ... DONE
[17:39:34.409]  - use_args: TRUE
[17:39:34.409]  - Getting '...' globals ...
[17:39:34.411]    - '...' content: [n=0] 
[17:39:34.412] List of 1
[17:39:34.412]  $ ...: list()
[17:39:34.412]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:34.412]  - attr(*, "where")=List of 1
[17:39:34.412]   ..$ ...:<environment: 0x5561043ed4d8> 
[17:39:34.412]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:34.412]  - attr(*, "resolved")= logi TRUE
[17:39:34.412]  - attr(*, "total_size")= num NA
[17:39:34.414]  - Getting '...' globals ... DONE
[17:39:34.414] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[17:39:34.415] List of 3
[17:39:34.415]  $ ...future.FUN        :function (x)  
[17:39:34.415]  $ future.call.arguments:List of 1
[17:39:34.415]   ..$ a: num 1
[17:39:34.415]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:34.415]  $ ...                  : list()
[17:39:34.415]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:34.415]  - attr(*, "where")=List of 3
[17:39:34.415]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[17:39:34.415]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[17:39:34.415]   ..$ ...                  :<environment: 0x5561043ed4d8> 
[17:39:34.415]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:34.415]  - attr(*, "resolved")= logi FALSE
[17:39:34.415]  - attr(*, "total_size")= num 1272
[17:39:34.418] Packages to be attached in all futures: [n=0] 
[17:39:34.418] getGlobalsAndPackagesXApply() ... DONE
[17:39:34.418] Number of futures (= number of chunks): 1
[17:39:34.419] Launching 1 futures (chunks) ...
[17:39:34.419] Chunk #1 of 1 ...
[17:39:34.419]  - Finding globals in 'X' for chunk #1 ...
[17:39:34.419]    + additional globals found: [n=0] 
[17:39:34.419]    + additional namespaces needed: [n=0] 
[17:39:34.419]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:34.419]  - seeds: <none>
[17:39:34.437] Created future:
[17:39:34.437] MultisessionFuture:
[17:39:34.437] Label: ‘future_lapply-1’
[17:39:34.437] Expression:
[17:39:34.437] {
[17:39:34.437]     do.call(function(...) {
[17:39:34.437]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:34.437]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:34.437]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:34.437]             on.exit(options(oopts), add = TRUE)
[17:39:34.437]         }
[17:39:34.437]         {
[17:39:34.437]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:34.437]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:34.437]                 ...future.FUN(...future.X_jj)
[17:39:34.437]             })
[17:39:34.437]         }
[17:39:34.437]     }, args = future.call.arguments)
[17:39:34.437] }
[17:39:34.437] Lazy evaluation: FALSE
[17:39:34.437] Asynchronous evaluation: TRUE
[17:39:34.437] Local evaluation: TRUE
[17:39:34.437] Environment: 0x5561043ed858
[17:39:34.437] Capture standard output: TRUE
[17:39:34.437] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:34.437] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:34.437] Packages: <none>
[17:39:34.437] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:34.437] Resolved: FALSE
[17:39:34.437] Value: <not collected>
[17:39:34.437] Conditions captured: <none>
[17:39:34.437] Early signaling: FALSE
[17:39:34.437] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:34.437] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:34.449] Chunk #1 of 1 ... DONE
[17:39:34.449] Launching 1 futures (chunks) ... DONE
[17:39:34.449] Resolving 1 futures (chunks) ...
[17:39:34.492]  - Number of value chunks collected: 1
[17:39:34.492] Resolving 1 futures (chunks) ... DONE
[17:39:34.492] Reducing values from 1 chunks ...
[17:39:34.492]  - Number of values collected after concatenation: 1
[17:39:34.492]  - Number of values expected: 1
[17:39:34.493] Reducing values from 1 chunks ... DONE
[17:39:34.493] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[17:39:34.494] future_lapply() ...
[17:39:34.498] Number of chunks: 1
[17:39:34.498] getGlobalsAndPackagesXApply() ...
[17:39:34.498]  - future.globals: TRUE
[17:39:34.500]  - globals found/used: [n=2] ‘FUN’, ‘a’
[17:39:34.501]  - needed namespaces: [n=0] 
[17:39:34.501] Finding globals ... DONE
[17:39:34.501]  - use_args: TRUE
[17:39:34.501]  - Getting '...' globals ...
[17:39:34.501]    - '...' content: [n=0] 
[17:39:34.501] List of 1
[17:39:34.501]  $ ...: list()
[17:39:34.501]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:34.501]  - attr(*, "where")=List of 1
[17:39:34.501]   ..$ ...:<environment: 0x556101509940> 
[17:39:34.501]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:34.501]  - attr(*, "resolved")= logi TRUE
[17:39:34.501]  - attr(*, "total_size")= num NA
[17:39:34.504]  - Getting '...' globals ... DONE
[17:39:34.504] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[17:39:34.504] List of 3
[17:39:34.504]  $ ...future.FUN:function (ii)  
[17:39:34.504]  $ a            : num 1
[17:39:34.504]  $ ...          : list()
[17:39:34.504]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:34.504]  - attr(*, "where")=List of 3
[17:39:34.504]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:34.504]   ..$ a            :<environment: R_EmptyEnv> 
[17:39:34.504]   ..$ ...          :<environment: 0x556101509940> 
[17:39:34.504]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:34.504]  - attr(*, "resolved")= logi FALSE
[17:39:34.504]  - attr(*, "total_size")= num 2984
[17:39:34.507] Packages to be attached in all futures: [n=0] 
[17:39:34.507] getGlobalsAndPackagesXApply() ... DONE
[17:39:34.508] Number of futures (= number of chunks): 1
[17:39:34.508] Launching 1 futures (chunks) ...
[17:39:34.508] Chunk #1 of 1 ...
[17:39:34.508]  - Finding globals in 'X' for chunk #1 ...
[17:39:34.508]    + additional globals found: [n=0] 
[17:39:34.508]    + additional namespaces needed: [n=0] 
[17:39:34.508]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:34.508]  - seeds: <none>
[17:39:34.526] Created future:
[17:39:34.527] MultisessionFuture:
[17:39:34.527] Label: ‘future_lapply-1’
[17:39:34.527] Expression:
[17:39:34.527] {
[17:39:34.527]     do.call(function(...) {
[17:39:34.527]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:34.527]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:34.527]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:34.527]             on.exit(options(oopts), add = TRUE)
[17:39:34.527]         }
[17:39:34.527]         {
[17:39:34.527]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:34.527]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:34.527]                 ...future.FUN(...future.X_jj, ...)
[17:39:34.527]             })
[17:39:34.527]         }
[17:39:34.527]     }, args = future.call.arguments)
[17:39:34.527] }
[17:39:34.527] Lazy evaluation: FALSE
[17:39:34.527] Asynchronous evaluation: TRUE
[17:39:34.527] Local evaluation: TRUE
[17:39:34.527] Environment: R_GlobalEnv
[17:39:34.527] Capture standard output: TRUE
[17:39:34.527] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:34.527] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:39:34.527] Packages: <none>
[17:39:34.527] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:34.527] Resolved: FALSE
[17:39:34.527] Value: <not collected>
[17:39:34.527] Conditions captured: <none>
[17:39:34.527] Early signaling: FALSE
[17:39:34.527] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:34.527] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:34.538] Chunk #1 of 1 ... DONE
[17:39:34.538] Launching 1 futures (chunks) ... DONE
[17:39:34.539] Resolving 1 futures (chunks) ...
[17:39:34.581]  - Number of value chunks collected: 1
[17:39:34.581] Resolving 1 futures (chunks) ... DONE
[17:39:34.581] Reducing values from 1 chunks ...
[17:39:34.581]  - Number of values collected after concatenation: 1
[17:39:34.581]  - Number of values expected: 1
[17:39:34.581] Reducing values from 1 chunks ... DONE
[17:39:34.581] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[17:39:34.581] future_lapply() ...
[17:39:34.585] Number of chunks: 1
[17:39:34.586] getGlobalsAndPackagesXApply() ...
[17:39:34.586]  - future.globals: TRUE
[17:39:34.588]  - globals found/used: [n=2] ‘FUN’, ‘a’
[17:39:34.588]  - needed namespaces: [n=0] 
[17:39:34.588] Finding globals ... DONE
[17:39:34.588]  - use_args: TRUE
[17:39:34.588]  - Getting '...' globals ...
[17:39:34.589]    - '...' content: [n=0] 
[17:39:34.589] List of 1
[17:39:34.589]  $ ...: list()
[17:39:34.589]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:34.589]  - attr(*, "where")=List of 1
[17:39:34.589]   ..$ ...:<environment: 0x556104c64f68> 
[17:39:34.589]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:34.589]  - attr(*, "resolved")= logi TRUE
[17:39:34.589]  - attr(*, "total_size")= num NA
[17:39:34.593]  - Getting '...' globals ... DONE
[17:39:34.593] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[17:39:34.594] List of 3
[17:39:34.594]  $ ...future.FUN:function (ii)  
[17:39:34.594]  $ a            : num 1
[17:39:34.594]  $ ...          : list()
[17:39:34.594]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:34.594]  - attr(*, "where")=List of 3
[17:39:34.594]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:34.594]   ..$ a            :<environment: R_EmptyEnv> 
[17:39:34.594]   ..$ ...          :<environment: 0x556104c64f68> 
[17:39:34.594]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:34.594]  - attr(*, "resolved")= logi FALSE
[17:39:34.594]  - attr(*, "total_size")= num 2984
[17:39:34.597] Packages to be attached in all futures: [n=0] 
[17:39:34.597] getGlobalsAndPackagesXApply() ... DONE
[17:39:34.597] Number of futures (= number of chunks): 1
[17:39:34.597] Launching 1 futures (chunks) ...
[17:39:34.597] Chunk #1 of 1 ...
[17:39:34.597]  - Finding globals in 'X' for chunk #1 ...
[17:39:34.598]    + additional globals found: [n=0] 
[17:39:34.598]    + additional namespaces needed: [n=0] 
[17:39:34.598]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:34.598]  - seeds: <none>
[17:39:34.616] Created future:
[17:39:34.616] MultisessionFuture:
[17:39:34.616] Label: ‘future_lapply-1’
[17:39:34.616] Expression:
[17:39:34.616] {
[17:39:34.616]     do.call(function(...) {
[17:39:34.616]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:34.616]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:34.616]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:34.616]             on.exit(options(oopts), add = TRUE)
[17:39:34.616]         }
[17:39:34.616]         {
[17:39:34.616]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:34.616]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:34.616]                 ...future.FUN(...future.X_jj, ...)
[17:39:34.616]             })
[17:39:34.616]         }
[17:39:34.616]     }, args = future.call.arguments)
[17:39:34.616] }
[17:39:34.616] Lazy evaluation: FALSE
[17:39:34.616] Asynchronous evaluation: TRUE
[17:39:34.616] Local evaluation: TRUE
[17:39:34.616] Environment: R_GlobalEnv
[17:39:34.616] Capture standard output: TRUE
[17:39:34.616] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:34.616] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:39:34.616] Packages: <none>
[17:39:34.616] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:34.616] Resolved: FALSE
[17:39:34.616] Value: <not collected>
[17:39:34.616] Conditions captured: <none>
[17:39:34.616] Early signaling: FALSE
[17:39:34.616] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:34.616] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:34.627] Chunk #1 of 1 ... DONE
[17:39:34.627] Launching 1 futures (chunks) ... DONE
[17:39:34.627] Resolving 1 futures (chunks) ...
[17:39:34.670]  - Number of value chunks collected: 1
[17:39:34.670] Resolving 1 futures (chunks) ... DONE
[17:39:34.670] Reducing values from 1 chunks ...
[17:39:34.671]  - Number of values collected after concatenation: 1
[17:39:34.671]  - Number of values expected: 1
[17:39:34.671] Reducing values from 1 chunks ... DONE
[17:39:34.671] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[17:39:34.671] future_lapply() ...
[17:39:34.675] Number of chunks: 1
[17:39:34.675] getGlobalsAndPackagesXApply() ...
[17:39:34.675]  - future.globals: <name-value list> with names ‘42’
[17:39:34.675]  - use_args: TRUE
[17:39:34.675]  - Getting '...' globals ...
[17:39:34.676]    - '...' content: [n=0] 
[17:39:34.676] List of 1
[17:39:34.676]  $ ...: list()
[17:39:34.676]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:34.676]  - attr(*, "where")=List of 1
[17:39:34.676]   ..$ ...:<environment: 0x556102f50740> 
[17:39:34.676]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:34.676]  - attr(*, "resolved")= logi TRUE
[17:39:34.676]  - attr(*, "total_size")= num NA
[17:39:34.678]  - Getting '...' globals ... DONE
[17:39:34.679] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[17:39:34.679] List of 3
[17:39:34.679]  $ a            : num 42
[17:39:34.679]  $ ...future.FUN:function (x)  
[17:39:34.679]  $ ...          : list()
[17:39:34.679]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:34.679]  - attr(*, "where")=List of 3
[17:39:34.679]   ..$ a            :<environment: R_EmptyEnv> 
[17:39:34.679]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[17:39:34.679]   ..$ ...          :<environment: 0x556102f50740> 
[17:39:34.679]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:34.679]  - attr(*, "resolved")= logi FALSE
[17:39:34.679]  - attr(*, "total_size")= num NA
[17:39:34.682] Packages to be attached in all futures: [n=0] 
[17:39:34.682] getGlobalsAndPackagesXApply() ... DONE
[17:39:34.682] Number of futures (= number of chunks): 1
[17:39:34.682] Launching 1 futures (chunks) ...
[17:39:34.683] Chunk #1 of 1 ...
[17:39:34.683]  - seeds: <none>
[17:39:34.702] Created future:
[17:39:34.702] MultisessionFuture:
[17:39:34.702] Label: ‘future_lapply-1’
[17:39:34.702] Expression:
[17:39:34.702] {
[17:39:34.702]     do.call(function(...) {
[17:39:34.702]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:34.702]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:34.702]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:34.702]             on.exit(options(oopts), add = TRUE)
[17:39:34.702]         }
[17:39:34.702]         {
[17:39:34.702]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:34.702]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:34.702]                 ...future.FUN(...future.X_jj, ...)
[17:39:34.702]             })
[17:39:34.702]         }
[17:39:34.702]     }, args = future.call.arguments)
[17:39:34.702] }
[17:39:34.702] Lazy evaluation: FALSE
[17:39:34.702] Asynchronous evaluation: TRUE
[17:39:34.702] Local evaluation: TRUE
[17:39:34.702] Environment: R_GlobalEnv
[17:39:34.702] Capture standard output: TRUE
[17:39:34.702] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:34.702] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:39:34.702] Packages: <none>
[17:39:34.702] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:34.702] Resolved: FALSE
[17:39:34.702] Value: <not collected>
[17:39:34.702] Conditions captured: <none>
[17:39:34.702] Early signaling: FALSE
[17:39:34.702] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:34.702] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:34.714] Chunk #1 of 1 ... DONE
[17:39:34.714] Launching 1 futures (chunks) ... DONE
[17:39:34.714] Resolving 1 futures (chunks) ...
[17:39:34.757]  - Number of value chunks collected: 1
[17:39:34.757] Resolving 1 futures (chunks) ... DONE
[17:39:34.757] Reducing values from 1 chunks ...
[17:39:34.757]  - Number of values collected after concatenation: 1
[17:39:34.757]  - Number of values expected: 1
[17:39:34.757] Reducing values from 1 chunks ... DONE
[17:39:34.757] future_lapply() ... DONE
List of 1
 $ : num 42
> 
> message("*** future_lapply() - tricky globals ... DONE")
*** future_lapply() - tricky globals ... DONE
> 
> 
> message("*** future_lapply() - missing arguments ...")
*** future_lapply() - missing arguments ...
> 
> ## Here 'abc' becomes missing, i.e. missing(abc) is TRUE
> foo <- function(x, abc) future_lapply(x, FUN = function(y) y)
> y <- foo(1:2)
[17:39:34.758] future_lapply() ...
[17:39:34.762] Number of chunks: 2
[17:39:34.762] getGlobalsAndPackagesXApply() ...
[17:39:34.762]  - future.globals: TRUE
[17:39:34.764]  - globals found/used: [n=1] ‘FUN’
[17:39:34.764]  - needed namespaces: [n=0] 
[17:39:34.764] Finding globals ... DONE
[17:39:34.764]  - use_args: TRUE
[17:39:34.764]  - Getting '...' globals ...
[17:39:34.765]    - '...' content: [n=0] 
[17:39:34.765] List of 1
[17:39:34.765]  $ ...: list()
[17:39:34.765]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:34.765]  - attr(*, "where")=List of 1
[17:39:34.765]   ..$ ...:<environment: 0x556104ba7310> 
[17:39:34.765]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:34.765]  - attr(*, "resolved")= logi TRUE
[17:39:34.765]  - attr(*, "total_size")= num NA
[17:39:34.767]  - Getting '...' globals ... DONE
[17:39:34.767] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:39:34.767] List of 2
[17:39:34.767]  $ ...future.FUN:function (y)  
[17:39:34.767]  $ ...          : list()
[17:39:34.767]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:34.767]  - attr(*, "where")=List of 2
[17:39:34.767]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:34.767]   ..$ ...          :<environment: 0x556104ba7310> 
[17:39:34.767]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:34.767]  - attr(*, "resolved")= logi FALSE
[17:39:34.767]  - attr(*, "total_size")= num 280
[17:39:34.770] Packages to be attached in all futures: [n=0] 
[17:39:34.770] getGlobalsAndPackagesXApply() ... DONE
[17:39:34.770] Number of futures (= number of chunks): 2
[17:39:34.770] Launching 2 futures (chunks) ...
[17:39:34.771] Chunk #1 of 2 ...
[17:39:34.771]  - Finding globals in 'X' for chunk #1 ...
[17:39:34.771]    + additional globals found: [n=0] 
[17:39:34.771]    + additional namespaces needed: [n=0] 
[17:39:34.771]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:34.771]  - seeds: <none>
[17:39:34.791] Created future:
[17:39:34.792] MultisessionFuture:
[17:39:34.792] Label: ‘future_lapply-1’
[17:39:34.792] Expression:
[17:39:34.792] {
[17:39:34.792]     do.call(function(...) {
[17:39:34.792]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:34.792]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:34.792]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:34.792]             on.exit(options(oopts), add = TRUE)
[17:39:34.792]         }
[17:39:34.792]         {
[17:39:34.792]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:34.792]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:34.792]                 ...future.FUN(...future.X_jj, ...)
[17:39:34.792]             })
[17:39:34.792]         }
[17:39:34.792]     }, args = future.call.arguments)
[17:39:34.792] }
[17:39:34.792] Lazy evaluation: FALSE
[17:39:34.792] Asynchronous evaluation: TRUE
[17:39:34.792] Local evaluation: TRUE
[17:39:34.792] Environment: 0x556104ba7700
[17:39:34.792] Capture standard output: TRUE
[17:39:34.792] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:34.792] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:34.792] Packages: <none>
[17:39:34.792] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:34.792] Resolved: FALSE
[17:39:34.792] Value: <not collected>
[17:39:34.792] Conditions captured: <none>
[17:39:34.792] Early signaling: FALSE
[17:39:34.792] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:34.792] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:34.804] Chunk #1 of 2 ... DONE
[17:39:34.804] Chunk #2 of 2 ...
[17:39:34.804]  - Finding globals in 'X' for chunk #2 ...
[17:39:34.804]    + additional globals found: [n=0] 
[17:39:34.804]    + additional namespaces needed: [n=0] 
[17:39:34.805]  - Finding globals in 'X' for chunk #2 ... DONE
[17:39:34.805]  - seeds: <none>
[17:39:34.823] Created future:
[17:39:34.823] MultisessionFuture:
[17:39:34.823] Label: ‘future_lapply-2’
[17:39:34.823] Expression:
[17:39:34.823] {
[17:39:34.823]     do.call(function(...) {
[17:39:34.823]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:34.823]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:34.823]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:34.823]             on.exit(options(oopts), add = TRUE)
[17:39:34.823]         }
[17:39:34.823]         {
[17:39:34.823]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:34.823]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:34.823]                 ...future.FUN(...future.X_jj, ...)
[17:39:34.823]             })
[17:39:34.823]         }
[17:39:34.823]     }, args = future.call.arguments)
[17:39:34.823] }
[17:39:34.823] Lazy evaluation: FALSE
[17:39:34.823] Asynchronous evaluation: TRUE
[17:39:34.823] Local evaluation: TRUE
[17:39:34.823] Environment: 0x556104ba7700
[17:39:34.823] Capture standard output: TRUE
[17:39:34.823] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:34.823] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:34.823] Packages: <none>
[17:39:34.823] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:34.823] Resolved: FALSE
[17:39:34.823] Value: <not collected>
[17:39:34.823] Conditions captured: <none>
[17:39:34.823] Early signaling: FALSE
[17:39:34.823] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:34.823] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:34.834] Chunk #2 of 2 ... DONE
[17:39:34.835] Launching 2 futures (chunks) ... DONE
[17:39:34.835] Resolving 2 futures (chunks) ...
[17:39:34.872]  - Number of value chunks collected: 2
[17:39:34.873] Resolving 2 futures (chunks) ... DONE
[17:39:34.873] Reducing values from 2 chunks ...
[17:39:34.873]  - Number of values collected after concatenation: 2
[17:39:34.873]  - Number of values expected: 2
[17:39:34.873] Reducing values from 2 chunks ... DONE
[17:39:34.873] future_lapply() ... DONE
> stopifnot(identical(y, as.list(1:2)))
> 
> message("*** future_lapply() - missing arguments ... DONE")
*** future_lapply() - missing arguments ... DONE
> 
> 
> message("*** future_lapply() - false positives ...")
*** future_lapply() - false positives ...
> 
> ## Here 'abc' becomes a promise, which fails to resolve
> ## iff 'xyz' does not exist. (Issue #161)
> suppressWarnings(rm(list = "xyz"))
> foo <- function(x, abc) future_lapply(x, FUN = function(y) y)
> y <- foo(1:2, abc = (xyz >= 3.14))
[17:39:34.874] future_lapply() ...
[17:39:34.877] Number of chunks: 2
[17:39:34.877] getGlobalsAndPackagesXApply() ...
[17:39:34.878]  - future.globals: TRUE
[17:39:34.879]  - globals found/used: [n=1] ‘FUN’
[17:39:34.879]  - needed namespaces: [n=0] 
[17:39:34.879] Finding globals ... DONE
[17:39:34.879]  - use_args: TRUE
[17:39:34.879]  - Getting '...' globals ...
[17:39:34.880]    - '...' content: [n=0] 
[17:39:34.880] List of 1
[17:39:34.880]  $ ...: list()
[17:39:34.880]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:34.880]  - attr(*, "where")=List of 1
[17:39:34.880]   ..$ ...:<environment: 0x556102fc3de0> 
[17:39:34.880]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:34.880]  - attr(*, "resolved")= logi TRUE
[17:39:34.880]  - attr(*, "total_size")= num NA
[17:39:34.883]  - Getting '...' globals ... DONE
[17:39:34.883] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:39:34.883] List of 2
[17:39:34.883]  $ ...future.FUN:function (y)  
[17:39:34.883]  $ ...          : list()
[17:39:34.883]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:34.883]  - attr(*, "where")=List of 2
[17:39:34.883]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:34.883]   ..$ ...          :<environment: 0x556102fc3de0> 
[17:39:34.883]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:34.883]  - attr(*, "resolved")= logi FALSE
[17:39:34.883]  - attr(*, "total_size")= num 280
[17:39:34.886] Packages to be attached in all futures: [n=0] 
[17:39:34.886] getGlobalsAndPackagesXApply() ... DONE
[17:39:34.886] Number of futures (= number of chunks): 2
[17:39:34.886] Launching 2 futures (chunks) ...
[17:39:34.886] Chunk #1 of 2 ...
[17:39:34.886]  - Finding globals in 'X' for chunk #1 ...
[17:39:34.886]    + additional globals found: [n=0] 
[17:39:34.887]    + additional namespaces needed: [n=0] 
[17:39:34.887]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:34.887]  - seeds: <none>
[17:39:34.905] Created future:
[17:39:34.905] MultisessionFuture:
[17:39:34.905] Label: ‘future_lapply-1’
[17:39:34.905] Expression:
[17:39:34.905] {
[17:39:34.905]     do.call(function(...) {
[17:39:34.905]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:34.905]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:34.905]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:34.905]             on.exit(options(oopts), add = TRUE)
[17:39:34.905]         }
[17:39:34.905]         {
[17:39:34.905]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:34.905]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:34.905]                 ...future.FUN(...future.X_jj, ...)
[17:39:34.905]             })
[17:39:34.905]         }
[17:39:34.905]     }, args = future.call.arguments)
[17:39:34.905] }
[17:39:34.905] Lazy evaluation: FALSE
[17:39:34.905] Asynchronous evaluation: TRUE
[17:39:34.905] Local evaluation: TRUE
[17:39:34.905] Environment: 0x556102fc39f0
[17:39:34.905] Capture standard output: TRUE
[17:39:34.905] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:34.905] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:34.905] Packages: <none>
[17:39:34.905] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:34.905] Resolved: FALSE
[17:39:34.905] Value: <not collected>
[17:39:34.905] Conditions captured: <none>
[17:39:34.905] Early signaling: FALSE
[17:39:34.905] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:34.905] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:34.917] Chunk #1 of 2 ... DONE
[17:39:34.917] Chunk #2 of 2 ...
[17:39:34.917]  - Finding globals in 'X' for chunk #2 ...
[17:39:34.917]    + additional globals found: [n=0] 
[17:39:34.918]    + additional namespaces needed: [n=0] 
[17:39:34.918]  - Finding globals in 'X' for chunk #2 ... DONE
[17:39:34.918]  - seeds: <none>
[17:39:34.936] Created future:
[17:39:34.936] MultisessionFuture:
[17:39:34.936] Label: ‘future_lapply-2’
[17:39:34.936] Expression:
[17:39:34.936] {
[17:39:34.936]     do.call(function(...) {
[17:39:34.936]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:34.936]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:34.936]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:34.936]             on.exit(options(oopts), add = TRUE)
[17:39:34.936]         }
[17:39:34.936]         {
[17:39:34.936]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:34.936]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:34.936]                 ...future.FUN(...future.X_jj, ...)
[17:39:34.936]             })
[17:39:34.936]         }
[17:39:34.936]     }, args = future.call.arguments)
[17:39:34.936] }
[17:39:34.936] Lazy evaluation: FALSE
[17:39:34.936] Asynchronous evaluation: TRUE
[17:39:34.936] Local evaluation: TRUE
[17:39:34.936] Environment: 0x556102fc39f0
[17:39:34.936] Capture standard output: TRUE
[17:39:34.936] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:34.936] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:34.936] Packages: <none>
[17:39:34.936] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:34.936] Resolved: FALSE
[17:39:34.936] Value: <not collected>
[17:39:34.936] Conditions captured: <none>
[17:39:34.936] Early signaling: FALSE
[17:39:34.936] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:34.936] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:34.948] Chunk #2 of 2 ... DONE
[17:39:34.948] Launching 2 futures (chunks) ... DONE
[17:39:34.948] Resolving 2 futures (chunks) ...
[17:39:34.995]  - Number of value chunks collected: 2
[17:39:34.995] Resolving 2 futures (chunks) ... DONE
[17:39:34.995] Reducing values from 2 chunks ...
[17:39:34.995]  - Number of values collected after concatenation: 2
[17:39:34.995]  - Number of values expected: 2
[17:39:34.995] Reducing values from 2 chunks ... DONE
[17:39:34.995] future_lapply() ... DONE
> stopifnot(identical(y, as.list(1:2)))
> 
> message("*** future_lapply() - false positives ... DONE")
*** future_lapply() - false positives ... DONE
> 
> 
> message("*** future_lapply() - too large ...")
*** future_lapply() - too large ...
> 
> oMaxSize <- getOption("future.globals.maxSize")
> X <- replicate(10L, 1:100, simplify = FALSE)
> FUN <- function(x) {
+   getOption("future.globals.maxSize")
+ }
> 
> y0 <- lapply(X, FUN = FUN)
> stopifnot(all(sapply(y0, FUN = identical, oMaxSize)))
> 
> sizes <- unclass(c(FUN = object.size(FUN), X = object.size(X)))
> cat(sprintf("Baseline size of globals: %.2f KiB\n", sizes[["FUN"]] / 1024))
Baseline size of globals: 1.80 KiB
> 
> message("- true positive ...")
- true positive ...
> options(future.globals.maxSize = 1L)
> res <- tryCatch({
+   y <- future_lapply(X, FUN = FUN)
+ }, error = identity)
[17:39:34.998] future_lapply() ...
[17:39:35.002] Number of chunks: 2
[17:39:35.002] getGlobalsAndPackagesXApply() ...
[17:39:35.002]  - future.globals: TRUE
[17:39:35.006] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> res <- NULL
> options(future.globals.maxSize = oMaxSize)
> 
> maxSize <- getOption("future.globals.maxSize")
> y <- future_lapply(X, FUN = FUN)
[17:39:35.006] future_lapply() ...
[17:39:35.010] Number of chunks: 2
[17:39:35.010] getGlobalsAndPackagesXApply() ...
[17:39:35.010]  - future.globals: TRUE
[17:39:35.012]  - globals found/used: [n=1] ‘FUN’
[17:39:35.012]  - needed namespaces: [n=0] 
[17:39:35.012] Finding globals ... DONE
[17:39:35.012]  - use_args: TRUE
[17:39:35.012]  - Getting '...' globals ...
[17:39:35.012]    - '...' content: [n=0] 
[17:39:35.012] List of 1
[17:39:35.012]  $ ...: list()
[17:39:35.012]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:35.012]  - attr(*, "where")=List of 1
[17:39:35.012]   ..$ ...:<environment: 0x556103e66ca8> 
[17:39:35.012]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:35.012]  - attr(*, "resolved")= logi TRUE
[17:39:35.012]  - attr(*, "total_size")= num NA
[17:39:35.015]  - Getting '...' globals ... DONE
[17:39:35.015] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:39:35.015] List of 2
[17:39:35.015]  $ ...future.FUN:function (x)  
[17:39:35.015]  $ ...          : list()
[17:39:35.015]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:35.015]  - attr(*, "where")=List of 2
[17:39:35.015]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:35.015]   ..$ ...          :<environment: 0x556103e66ca8> 
[17:39:35.015]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:35.015]  - attr(*, "resolved")= logi FALSE
[17:39:35.015]  - attr(*, "total_size")= num 1840
[17:39:35.018] Packages to be attached in all futures: [n=0] 
[17:39:35.018] getGlobalsAndPackagesXApply() ... DONE
[17:39:35.018] Number of futures (= number of chunks): 2
[17:39:35.018] Launching 2 futures (chunks) ...
[17:39:35.018] Chunk #1 of 2 ...
[17:39:35.018]  - Finding globals in 'X' for chunk #1 ...
[17:39:35.019]    + additional globals found: [n=0] 
[17:39:35.019]    + additional namespaces needed: [n=0] 
[17:39:35.019]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:35.019]  - Adjusted option 'future.globals.maxSize': 524288000 -> 5 * 524288000 = 2621440000 (bytes)
[17:39:35.019]  - seeds: <none>
[17:39:35.037] Created future:
[17:39:35.037] MultisessionFuture:
[17:39:35.037] Label: ‘future_lapply-1’
[17:39:35.037] Expression:
[17:39:35.037] {
[17:39:35.037]     do.call(function(...) {
[17:39:35.037]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:35.037]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:35.037]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:35.037]             on.exit(options(oopts), add = TRUE)
[17:39:35.037]         }
[17:39:35.037]         {
[17:39:35.037]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:35.037]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:35.037]                 ...future.FUN(...future.X_jj, ...)
[17:39:35.037]             })
[17:39:35.037]         }
[17:39:35.037]     }, args = future.call.arguments)
[17:39:35.037] }
[17:39:35.037] Lazy evaluation: FALSE
[17:39:35.037] Asynchronous evaluation: TRUE
[17:39:35.037] Local evaluation: TRUE
[17:39:35.037] Environment: R_GlobalEnv
[17:39:35.037] Capture standard output: TRUE
[17:39:35.037] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:35.037] Globals: 5 objects totaling 3.98 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:35.037] Packages: <none>
[17:39:35.037] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:35.037] Resolved: FALSE
[17:39:35.037] Value: <not collected>
[17:39:35.037] Conditions captured: <none>
[17:39:35.037] Early signaling: FALSE
[17:39:35.037] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:35.037] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:35.048] Chunk #1 of 2 ... DONE
[17:39:35.049] Chunk #2 of 2 ...
[17:39:35.049]  - Finding globals in 'X' for chunk #2 ...
[17:39:35.049]    + additional globals found: [n=0] 
[17:39:35.049]    + additional namespaces needed: [n=0] 
[17:39:35.049]  - Finding globals in 'X' for chunk #2 ... DONE
[17:39:35.049]  - Adjusted option 'future.globals.maxSize': 524288000 -> 5 * 524288000 = 2621440000 (bytes)
[17:39:35.049]  - seeds: <none>
[17:39:35.068] Created future:
[17:39:35.069] MultisessionFuture:
[17:39:35.069] Label: ‘future_lapply-2’
[17:39:35.069] Expression:
[17:39:35.069] {
[17:39:35.069]     do.call(function(...) {
[17:39:35.069]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:35.069]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:35.069]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:35.069]             on.exit(options(oopts), add = TRUE)
[17:39:35.069]         }
[17:39:35.069]         {
[17:39:35.069]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:35.069]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:35.069]                 ...future.FUN(...future.X_jj, ...)
[17:39:35.069]             })
[17:39:35.069]         }
[17:39:35.069]     }, args = future.call.arguments)
[17:39:35.069] }
[17:39:35.069] Lazy evaluation: FALSE
[17:39:35.069] Asynchronous evaluation: TRUE
[17:39:35.069] Local evaluation: TRUE
[17:39:35.069] Environment: R_GlobalEnv
[17:39:35.069] Capture standard output: TRUE
[17:39:35.069] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:35.069] Globals: 5 objects totaling 3.98 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:35.069] Packages: <none>
[17:39:35.069] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:35.069] Resolved: FALSE
[17:39:35.069] Value: <not collected>
[17:39:35.069] Conditions captured: <none>
[17:39:35.069] Early signaling: FALSE
[17:39:35.069] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:35.069] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:35.080] Chunk #2 of 2 ... DONE
[17:39:35.081] Launching 2 futures (chunks) ... DONE
[17:39:35.081] Resolving 2 futures (chunks) ...
[17:39:35.127]  - Number of value chunks collected: 2
[17:39:35.127] Resolving 2 futures (chunks) ... DONE
[17:39:35.127] Reducing values from 2 chunks ...
[17:39:35.127]  - Number of values collected after concatenation: 10
[17:39:35.127]  - Number of values expected: 10
[17:39:35.127] Reducing values from 2 chunks ... DONE
[17:39:35.127] future_lapply() ... DONE
> str(y)
List of 10
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
> stopifnot(all(sapply(y, FUN = identical, oMaxSize)))
> 
> message("- approximately invariant to chunk size ...")
- approximately invariant to chunk size ...
> maxSize <- sizes[["FUN"]] + sizes[["X"]] / length(X)
> options(future.globals.maxSize = maxSize)
> 
> for (chunk.size in c(1L, 2L, 5L, 10L)) {
+   y <- future_lapply(X, FUN = FUN, future.chunk.size = chunk.size)
+   str(y)
+   stopifnot(all(unlist(y) == maxSize))
+   cat(sprintf("maxSize = %g bytes\nfuture.globals.maxSize = %g bytes\n",
+               maxSize, getOption("future.globals.maxSize")))
+   stopifnot(getOption("future.globals.maxSize") == maxSize)
+ }
[17:39:35.135] future_lapply() ...
[17:39:35.139] Number of chunks: 10
[17:39:35.139] getGlobalsAndPackagesXApply() ...
[17:39:35.139]  - future.globals: TRUE
[17:39:35.141]  - globals found/used: [n=1] ‘FUN’
[17:39:35.141]  - needed namespaces: [n=0] 
[17:39:35.142] Finding globals ... DONE
[17:39:35.142]  - use_args: TRUE
[17:39:35.142]  - Getting '...' globals ...
[17:39:35.142]    - '...' content: [n=0] 
[17:39:35.142] List of 1
[17:39:35.142]  $ ...: list()
[17:39:35.142]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:35.142]  - attr(*, "where")=List of 1
[17:39:35.142]   ..$ ...:<environment: 0x556104d49698> 
[17:39:35.142]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:35.142]  - attr(*, "resolved")= logi TRUE
[17:39:35.142]  - attr(*, "total_size")= num NA
[17:39:35.145]  - Getting '...' globals ... DONE
[17:39:35.145] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:39:35.145] List of 2
[17:39:35.145]  $ ...future.FUN:function (x)  
[17:39:35.145]  $ ...          : list()
[17:39:35.145]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:35.145]  - attr(*, "where")=List of 2
[17:39:35.145]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:35.145]   ..$ ...          :<environment: 0x556104d49698> 
[17:39:35.145]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:35.145]  - attr(*, "resolved")= logi FALSE
[17:39:35.145]  - attr(*, "total_size")= num 1840
[17:39:35.150] Packages to be attached in all futures: [n=0] 
[17:39:35.150] getGlobalsAndPackagesXApply() ... DONE
[17:39:35.150] Number of futures (= number of chunks): 10
[17:39:35.150] Launching 10 futures (chunks) ...
[17:39:35.150] Chunk #1 of 10 ...
[17:39:35.150]  - Finding globals in 'X' for chunk #1 ...
[17:39:35.151]    + additional globals found: [n=0] 
[17:39:35.151]    + additional namespaces needed: [n=0] 
[17:39:35.151]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:35.151]  - seeds: <none>
[17:39:35.169] Created future:
[17:39:35.169] MultisessionFuture:
[17:39:35.169] Label: ‘future_lapply-1’
[17:39:35.169] Expression:
[17:39:35.169] {
[17:39:35.169]     do.call(function(...) {
[17:39:35.169]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:35.169]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:35.169]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:35.169]             on.exit(options(oopts), add = TRUE)
[17:39:35.169]         }
[17:39:35.169]         {
[17:39:35.169]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:35.169]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:35.169]                 ...future.FUN(...future.X_jj, ...)
[17:39:35.169]             })
[17:39:35.169]         }
[17:39:35.169]     }, args = future.call.arguments)
[17:39:35.169] }
[17:39:35.169] Lazy evaluation: FALSE
[17:39:35.169] Asynchronous evaluation: TRUE
[17:39:35.169] Local evaluation: TRUE
[17:39:35.169] Environment: R_GlobalEnv
[17:39:35.169] Capture standard output: TRUE
[17:39:35.169] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:35.169] Globals: 5 objects totaling 2.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:35.169] Packages: <none>
[17:39:35.169] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:35.169] Resolved: FALSE
[17:39:35.169] Value: <not collected>
[17:39:35.169] Conditions captured: <none>
[17:39:35.169] Early signaling: FALSE
[17:39:35.169] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:35.169] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:35.180] Chunk #1 of 10 ... DONE
[17:39:35.180] Chunk #2 of 10 ...
[17:39:35.181]  - Finding globals in 'X' for chunk #2 ...
[17:39:35.181]    + additional globals found: [n=0] 
[17:39:35.181]    + additional namespaces needed: [n=0] 
[17:39:35.181]  - Finding globals in 'X' for chunk #2 ... DONE
[17:39:35.181]  - seeds: <none>
[17:39:35.199] Created future:
[17:39:35.199] MultisessionFuture:
[17:39:35.199] Label: ‘future_lapply-2’
[17:39:35.199] Expression:
[17:39:35.199] {
[17:39:35.199]     do.call(function(...) {
[17:39:35.199]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:35.199]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:35.199]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:35.199]             on.exit(options(oopts), add = TRUE)
[17:39:35.199]         }
[17:39:35.199]         {
[17:39:35.199]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:35.199]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:35.199]                 ...future.FUN(...future.X_jj, ...)
[17:39:35.199]             })
[17:39:35.199]         }
[17:39:35.199]     }, args = future.call.arguments)
[17:39:35.199] }
[17:39:35.199] Lazy evaluation: FALSE
[17:39:35.199] Asynchronous evaluation: TRUE
[17:39:35.199] Local evaluation: TRUE
[17:39:35.199] Environment: R_GlobalEnv
[17:39:35.199] Capture standard output: TRUE
[17:39:35.199] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:35.199] Globals: 5 objects totaling 2.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:35.199] Packages: <none>
[17:39:35.199] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:35.199] Resolved: FALSE
[17:39:35.199] Value: <not collected>
[17:39:35.199] Conditions captured: <none>
[17:39:35.199] Early signaling: FALSE
[17:39:35.199] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:35.199] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:35.211] Chunk #2 of 10 ... DONE
[17:39:35.211] Chunk #3 of 10 ...
[17:39:35.211]  - Finding globals in 'X' for chunk #3 ...
[17:39:35.211]    + additional globals found: [n=0] 
[17:39:35.212]    + additional namespaces needed: [n=0] 
[17:39:35.212]  - Finding globals in 'X' for chunk #3 ... DONE
[17:39:35.212]  - seeds: <none>
[17:39:35.244] Created future:
[17:39:35.244] MultisessionFuture:
[17:39:35.244] Label: ‘future_lapply-3’
[17:39:35.244] Expression:
[17:39:35.244] {
[17:39:35.244]     do.call(function(...) {
[17:39:35.244]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:35.244]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:35.244]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:35.244]             on.exit(options(oopts), add = TRUE)
[17:39:35.244]         }
[17:39:35.244]         {
[17:39:35.244]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:35.244]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:35.244]                 ...future.FUN(...future.X_jj, ...)
[17:39:35.244]             })
[17:39:35.244]         }
[17:39:35.244]     }, args = future.call.arguments)
[17:39:35.244] }
[17:39:35.244] Lazy evaluation: FALSE
[17:39:35.244] Asynchronous evaluation: TRUE
[17:39:35.244] Local evaluation: TRUE
[17:39:35.244] Environment: R_GlobalEnv
[17:39:35.244] Capture standard output: TRUE
[17:39:35.244] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:35.244] Globals: 5 objects totaling 2.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:35.244] Packages: <none>
[17:39:35.244] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:35.244] Resolved: FALSE
[17:39:35.244] Value: <not collected>
[17:39:35.244] Conditions captured: <none>
[17:39:35.244] Early signaling: FALSE
[17:39:35.244] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:35.244] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:35.256] Chunk #3 of 10 ... DONE
[17:39:35.256] Chunk #4 of 10 ...
[17:39:35.256]  - Finding globals in 'X' for chunk #4 ...
[17:39:35.256]    + additional globals found: [n=0] 
[17:39:35.256]    + additional namespaces needed: [n=0] 
[17:39:35.256]  - Finding globals in 'X' for chunk #4 ... DONE
[17:39:35.257]  - seeds: <none>
[17:39:35.297] Created future:
[17:39:35.297] MultisessionFuture:
[17:39:35.297] Label: ‘future_lapply-4’
[17:39:35.297] Expression:
[17:39:35.297] {
[17:39:35.297]     do.call(function(...) {
[17:39:35.297]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:35.297]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:35.297]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:35.297]             on.exit(options(oopts), add = TRUE)
[17:39:35.297]         }
[17:39:35.297]         {
[17:39:35.297]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:35.297]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:35.297]                 ...future.FUN(...future.X_jj, ...)
[17:39:35.297]             })
[17:39:35.297]         }
[17:39:35.297]     }, args = future.call.arguments)
[17:39:35.297] }
[17:39:35.297] Lazy evaluation: FALSE
[17:39:35.297] Asynchronous evaluation: TRUE
[17:39:35.297] Local evaluation: TRUE
[17:39:35.297] Environment: R_GlobalEnv
[17:39:35.297] Capture standard output: TRUE
[17:39:35.297] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:35.297] Globals: 5 objects totaling 2.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:35.297] Packages: <none>
[17:39:35.297] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:35.297] Resolved: FALSE
[17:39:35.297] Value: <not collected>
[17:39:35.297] Conditions captured: <none>
[17:39:35.297] Early signaling: FALSE
[17:39:35.297] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:35.297] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:35.308] Chunk #4 of 10 ... DONE
[17:39:35.308] Chunk #5 of 10 ...
[17:39:35.309]  - Finding globals in 'X' for chunk #5 ...
[17:39:35.309]    + additional globals found: [n=0] 
[17:39:35.309]    + additional namespaces needed: [n=0] 
[17:39:35.309]  - Finding globals in 'X' for chunk #5 ... DONE
[17:39:35.309]  - seeds: <none>
[17:39:35.340] Created future:
[17:39:35.340] MultisessionFuture:
[17:39:35.340] Label: ‘future_lapply-5’
[17:39:35.340] Expression:
[17:39:35.340] {
[17:39:35.340]     do.call(function(...) {
[17:39:35.340]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:35.340]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:35.340]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:35.340]             on.exit(options(oopts), add = TRUE)
[17:39:35.340]         }
[17:39:35.340]         {
[17:39:35.340]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:35.340]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:35.340]                 ...future.FUN(...future.X_jj, ...)
[17:39:35.340]             })
[17:39:35.340]         }
[17:39:35.340]     }, args = future.call.arguments)
[17:39:35.340] }
[17:39:35.340] Lazy evaluation: FALSE
[17:39:35.340] Asynchronous evaluation: TRUE
[17:39:35.340] Local evaluation: TRUE
[17:39:35.340] Environment: R_GlobalEnv
[17:39:35.340] Capture standard output: TRUE
[17:39:35.340] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:35.340] Globals: 5 objects totaling 2.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:35.340] Packages: <none>
[17:39:35.340] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:35.340] Resolved: FALSE
[17:39:35.340] Value: <not collected>
[17:39:35.340] Conditions captured: <none>
[17:39:35.340] Early signaling: FALSE
[17:39:35.340] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:35.340] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:35.352] Chunk #5 of 10 ... DONE
[17:39:35.352] Chunk #6 of 10 ...
[17:39:35.352]  - Finding globals in 'X' for chunk #6 ...
[17:39:35.353]    + additional globals found: [n=0] 
[17:39:35.353]    + additional namespaces needed: [n=0] 
[17:39:35.353]  - Finding globals in 'X' for chunk #6 ... DONE
[17:39:35.353]  - seeds: <none>
[17:39:35.383] Created future:
[17:39:35.384] MultisessionFuture:
[17:39:35.384] Label: ‘future_lapply-6’
[17:39:35.384] Expression:
[17:39:35.384] {
[17:39:35.384]     do.call(function(...) {
[17:39:35.384]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:35.384]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:35.384]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:35.384]             on.exit(options(oopts), add = TRUE)
[17:39:35.384]         }
[17:39:35.384]         {
[17:39:35.384]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:35.384]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:35.384]                 ...future.FUN(...future.X_jj, ...)
[17:39:35.384]             })
[17:39:35.384]         }
[17:39:35.384]     }, args = future.call.arguments)
[17:39:35.384] }
[17:39:35.384] Lazy evaluation: FALSE
[17:39:35.384] Asynchronous evaluation: TRUE
[17:39:35.384] Local evaluation: TRUE
[17:39:35.384] Environment: R_GlobalEnv
[17:39:35.384] Capture standard output: TRUE
[17:39:35.384] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:35.384] Globals: 5 objects totaling 2.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:35.384] Packages: <none>
[17:39:35.384] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:35.384] Resolved: FALSE
[17:39:35.384] Value: <not collected>
[17:39:35.384] Conditions captured: <none>
[17:39:35.384] Early signaling: FALSE
[17:39:35.384] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:35.384] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:35.395] Chunk #6 of 10 ... DONE
[17:39:35.395] Chunk #7 of 10 ...
[17:39:35.395]  - Finding globals in 'X' for chunk #7 ...
[17:39:35.396]    + additional globals found: [n=0] 
[17:39:35.396]    + additional namespaces needed: [n=0] 
[17:39:35.396]  - Finding globals in 'X' for chunk #7 ... DONE
[17:39:35.396]  - seeds: <none>
[17:39:35.425] Created future:
[17:39:35.425] MultisessionFuture:
[17:39:35.425] Label: ‘future_lapply-7’
[17:39:35.425] Expression:
[17:39:35.425] {
[17:39:35.425]     do.call(function(...) {
[17:39:35.425]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:35.425]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:35.425]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:35.425]             on.exit(options(oopts), add = TRUE)
[17:39:35.425]         }
[17:39:35.425]         {
[17:39:35.425]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:35.425]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:35.425]                 ...future.FUN(...future.X_jj, ...)
[17:39:35.425]             })
[17:39:35.425]         }
[17:39:35.425]     }, args = future.call.arguments)
[17:39:35.425] }
[17:39:35.425] Lazy evaluation: FALSE
[17:39:35.425] Asynchronous evaluation: TRUE
[17:39:35.425] Local evaluation: TRUE
[17:39:35.425] Environment: R_GlobalEnv
[17:39:35.425] Capture standard output: TRUE
[17:39:35.425] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:35.425] Globals: 5 objects totaling 2.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:35.425] Packages: <none>
[17:39:35.425] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:35.425] Resolved: FALSE
[17:39:35.425] Value: <not collected>
[17:39:35.425] Conditions captured: <none>
[17:39:35.425] Early signaling: FALSE
[17:39:35.425] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:35.425] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:35.436] Chunk #7 of 10 ... DONE
[17:39:35.437] Chunk #8 of 10 ...
[17:39:35.437]  - Finding globals in 'X' for chunk #8 ...
[17:39:35.437]    + additional globals found: [n=0] 
[17:39:35.437]    + additional namespaces needed: [n=0] 
[17:39:35.437]  - Finding globals in 'X' for chunk #8 ... DONE
[17:39:35.437]  - seeds: <none>
[17:39:35.467] Created future:
[17:39:35.467] MultisessionFuture:
[17:39:35.467] Label: ‘future_lapply-8’
[17:39:35.467] Expression:
[17:39:35.467] {
[17:39:35.467]     do.call(function(...) {
[17:39:35.467]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:35.467]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:35.467]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:35.467]             on.exit(options(oopts), add = TRUE)
[17:39:35.467]         }
[17:39:35.467]         {
[17:39:35.467]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:35.467]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:35.467]                 ...future.FUN(...future.X_jj, ...)
[17:39:35.467]             })
[17:39:35.467]         }
[17:39:35.467]     }, args = future.call.arguments)
[17:39:35.467] }
[17:39:35.467] Lazy evaluation: FALSE
[17:39:35.467] Asynchronous evaluation: TRUE
[17:39:35.467] Local evaluation: TRUE
[17:39:35.467] Environment: R_GlobalEnv
[17:39:35.467] Capture standard output: TRUE
[17:39:35.467] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:35.467] Globals: 5 objects totaling 2.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:35.467] Packages: <none>
[17:39:35.467] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:35.467] Resolved: FALSE
[17:39:35.467] Value: <not collected>
[17:39:35.467] Conditions captured: <none>
[17:39:35.467] Early signaling: FALSE
[17:39:35.467] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:35.467] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:35.480] Chunk #8 of 10 ... DONE
[17:39:35.480] Chunk #9 of 10 ...
[17:39:35.480]  - Finding globals in 'X' for chunk #9 ...
[17:39:35.480]    + additional globals found: [n=0] 
[17:39:35.480]    + additional namespaces needed: [n=0] 
[17:39:35.480]  - Finding globals in 'X' for chunk #9 ... DONE
[17:39:35.480]  - seeds: <none>
[17:39:35.509] Created future:
[17:39:35.509] MultisessionFuture:
[17:39:35.509] Label: ‘future_lapply-9’
[17:39:35.509] Expression:
[17:39:35.509] {
[17:39:35.509]     do.call(function(...) {
[17:39:35.509]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:35.509]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:35.509]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:35.509]             on.exit(options(oopts), add = TRUE)
[17:39:35.509]         }
[17:39:35.509]         {
[17:39:35.509]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:35.509]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:35.509]                 ...future.FUN(...future.X_jj, ...)
[17:39:35.509]             })
[17:39:35.509]         }
[17:39:35.509]     }, args = future.call.arguments)
[17:39:35.509] }
[17:39:35.509] Lazy evaluation: FALSE
[17:39:35.509] Asynchronous evaluation: TRUE
[17:39:35.509] Local evaluation: TRUE
[17:39:35.509] Environment: R_GlobalEnv
[17:39:35.509] Capture standard output: TRUE
[17:39:35.509] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:35.509] Globals: 5 objects totaling 2.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:35.509] Packages: <none>
[17:39:35.509] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:35.509] Resolved: FALSE
[17:39:35.509] Value: <not collected>
[17:39:35.509] Conditions captured: <none>
[17:39:35.509] Early signaling: FALSE
[17:39:35.509] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:35.509] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:35.521] Chunk #9 of 10 ... DONE
[17:39:35.521] Chunk #10 of 10 ...
[17:39:35.521]  - Finding globals in 'X' for chunk #10 ...
[17:39:35.522]    + additional globals found: [n=0] 
[17:39:35.522]    + additional namespaces needed: [n=0] 
[17:39:35.522]  - Finding globals in 'X' for chunk #10 ... DONE
[17:39:35.522]  - seeds: <none>
[17:39:35.550] Created future:
[17:39:35.550] MultisessionFuture:
[17:39:35.550] Label: ‘future_lapply-10’
[17:39:35.550] Expression:
[17:39:35.550] {
[17:39:35.550]     do.call(function(...) {
[17:39:35.550]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:35.550]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:35.550]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:35.550]             on.exit(options(oopts), add = TRUE)
[17:39:35.550]         }
[17:39:35.550]         {
[17:39:35.550]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:35.550]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:35.550]                 ...future.FUN(...future.X_jj, ...)
[17:39:35.550]             })
[17:39:35.550]         }
[17:39:35.550]     }, args = future.call.arguments)
[17:39:35.550] }
[17:39:35.550] Lazy evaluation: FALSE
[17:39:35.550] Asynchronous evaluation: TRUE
[17:39:35.550] Local evaluation: TRUE
[17:39:35.550] Environment: R_GlobalEnv
[17:39:35.550] Capture standard output: TRUE
[17:39:35.550] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:35.550] Globals: 5 objects totaling 2.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:39:35.550] Packages: <none>
[17:39:35.550] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:35.550] Resolved: FALSE
[17:39:35.550] Value: <not collected>
[17:39:35.550] Conditions captured: <none>
[17:39:35.550] Early signaling: FALSE
[17:39:35.550] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:35.550] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:35.562] Chunk #10 of 10 ... DONE
[17:39:35.562] Launching 10 futures (chunks) ... DONE
[17:39:35.562] Resolving 10 futures (chunks) ...
[17:39:35.607]  - Number of value chunks collected: 10
[17:39:35.608] Resolving 10 futures (chunks) ... DONE
[17:39:35.608] Reducing values from 10 chunks ...
[17:39:35.608]  - Number of values collected after concatenation: 10
[17:39:35.608]  - Number of values expected: 10
[17:39:35.608] Reducing values from 10 chunks ... DONE
[17:39:35.608] future_lapply() ... DONE
List of 10
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[17:39:35.610] future_lapply() ...
[17:39:35.616] Number of chunks: 5
[17:39:35.617] getGlobalsAndPackagesXApply() ...
[17:39:35.617]  - future.globals: TRUE
[17:39:35.618]  - globals found/used: [n=1] ‘FUN’
[17:39:35.619]  - needed namespaces: [n=0] 
[17:39:35.619] Finding globals ... DONE
[17:39:35.619]  - use_args: TRUE
[17:39:35.619]  - Getting '...' globals ...
[17:39:35.619]    - '...' content: [n=0] 
[17:39:35.619] List of 1
[17:39:35.619]  $ ...: list()
[17:39:35.619]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:35.619]  - attr(*, "where")=List of 1
[17:39:35.619]   ..$ ...:<environment: 0x5561046683a0> 
[17:39:35.619]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:35.619]  - attr(*, "resolved")= logi TRUE
[17:39:35.619]  - attr(*, "total_size")= num NA
[17:39:35.622]  - Getting '...' globals ... DONE
[17:39:35.622] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:39:35.622] List of 2
[17:39:35.622]  $ ...future.FUN:function (x)  
[17:39:35.622]  $ ...          : list()
[17:39:35.622]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:35.622]  - attr(*, "where")=List of 2
[17:39:35.622]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:35.622]   ..$ ...          :<environment: 0x5561046683a0> 
[17:39:35.622]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:35.622]  - attr(*, "resolved")= logi FALSE
[17:39:35.622]  - attr(*, "total_size")= num 1840
[17:39:35.625] Packages to be attached in all futures: [n=0] 
[17:39:35.625] getGlobalsAndPackagesXApply() ... DONE
[17:39:35.625] Number of futures (= number of chunks): 5
[17:39:35.625] Launching 5 futures (chunks) ...
[17:39:35.625] Chunk #1 of 5 ...
[17:39:35.625]  - Finding globals in 'X' for chunk #1 ...
[17:39:35.626]    + additional globals found: [n=0] 
[17:39:35.626]    + additional namespaces needed: [n=0] 
[17:39:35.626]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:35.626]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[17:39:35.626]  - seeds: <none>
[17:39:35.643] Created future:
[17:39:35.644] MultisessionFuture:
[17:39:35.644] Label: ‘future_lapply-1’
[17:39:35.644] Expression:
[17:39:35.644] {
[17:39:35.644]     do.call(function(...) {
[17:39:35.644]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:35.644]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:35.644]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:35.644]             on.exit(options(oopts), add = TRUE)
[17:39:35.644]         }
[17:39:35.644]         {
[17:39:35.644]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:35.644]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:35.644]                 ...future.FUN(...future.X_jj, ...)
[17:39:35.644]             })
[17:39:35.644]         }
[17:39:35.644]     }, args = future.call.arguments)
[17:39:35.644] }
[17:39:35.644] Lazy evaluation: FALSE
[17:39:35.644] Asynchronous evaluation: TRUE
[17:39:35.644] Local evaluation: TRUE
[17:39:35.644] Environment: R_GlobalEnv
[17:39:35.644] Capture standard output: TRUE
[17:39:35.644] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:35.644] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:39:35.644] Packages: <none>
[17:39:35.644] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:35.644] Resolved: FALSE
[17:39:35.644] Value: <not collected>
[17:39:35.644] Conditions captured: <none>
[17:39:35.644] Early signaling: FALSE
[17:39:35.644] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:35.644] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:35.655] Chunk #1 of 5 ... DONE
[17:39:35.655] Chunk #2 of 5 ...
[17:39:35.655]  - Finding globals in 'X' for chunk #2 ...
[17:39:35.656]    + additional globals found: [n=0] 
[17:39:35.656]    + additional namespaces needed: [n=0] 
[17:39:35.656]  - Finding globals in 'X' for chunk #2 ... DONE
[17:39:35.656]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[17:39:35.656]  - seeds: <none>
[17:39:35.674] Created future:
[17:39:35.674] MultisessionFuture:
[17:39:35.674] Label: ‘future_lapply-2’
[17:39:35.674] Expression:
[17:39:35.674] {
[17:39:35.674]     do.call(function(...) {
[17:39:35.674]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:35.674]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:35.674]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:35.674]             on.exit(options(oopts), add = TRUE)
[17:39:35.674]         }
[17:39:35.674]         {
[17:39:35.674]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:35.674]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:35.674]                 ...future.FUN(...future.X_jj, ...)
[17:39:35.674]             })
[17:39:35.674]         }
[17:39:35.674]     }, args = future.call.arguments)
[17:39:35.674] }
[17:39:35.674] Lazy evaluation: FALSE
[17:39:35.674] Asynchronous evaluation: TRUE
[17:39:35.674] Local evaluation: TRUE
[17:39:35.674] Environment: R_GlobalEnv
[17:39:35.674] Capture standard output: TRUE
[17:39:35.674] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:35.674] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:39:35.674] Packages: <none>
[17:39:35.674] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:35.674] Resolved: FALSE
[17:39:35.674] Value: <not collected>
[17:39:35.674] Conditions captured: <none>
[17:39:35.674] Early signaling: FALSE
[17:39:35.674] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:35.674] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:35.686] Chunk #2 of 5 ... DONE
[17:39:35.686] Chunk #3 of 5 ...
[17:39:35.686]  - Finding globals in 'X' for chunk #3 ...
[17:39:35.686]    + additional globals found: [n=0] 
[17:39:35.687]    + additional namespaces needed: [n=0] 
[17:39:35.687]  - Finding globals in 'X' for chunk #3 ... DONE
[17:39:35.687]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[17:39:35.687]  - seeds: <none>
[17:39:35.718] Created future:
[17:39:35.718] MultisessionFuture:
[17:39:35.718] Label: ‘future_lapply-3’
[17:39:35.718] Expression:
[17:39:35.718] {
[17:39:35.718]     do.call(function(...) {
[17:39:35.718]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:35.718]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:35.718]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:35.718]             on.exit(options(oopts), add = TRUE)
[17:39:35.718]         }
[17:39:35.718]         {
[17:39:35.718]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:35.718]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:35.718]                 ...future.FUN(...future.X_jj, ...)
[17:39:35.718]             })
[17:39:35.718]         }
[17:39:35.718]     }, args = future.call.arguments)
[17:39:35.718] }
[17:39:35.718] Lazy evaluation: FALSE
[17:39:35.718] Asynchronous evaluation: TRUE
[17:39:35.718] Local evaluation: TRUE
[17:39:35.718] Environment: R_GlobalEnv
[17:39:35.718] Capture standard output: TRUE
[17:39:35.718] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:35.718] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:39:35.718] Packages: <none>
[17:39:35.718] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:35.718] Resolved: FALSE
[17:39:35.718] Value: <not collected>
[17:39:35.718] Conditions captured: <none>
[17:39:35.718] Early signaling: FALSE
[17:39:35.718] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:35.718] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:35.730] Chunk #3 of 5 ... DONE
[17:39:35.730] Chunk #4 of 5 ...
[17:39:35.730]  - Finding globals in 'X' for chunk #4 ...
[17:39:35.730]    + additional globals found: [n=0] 
[17:39:35.730]    + additional namespaces needed: [n=0] 
[17:39:35.731]  - Finding globals in 'X' for chunk #4 ... DONE
[17:39:35.731]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[17:39:35.731]  - seeds: <none>
[17:39:35.759] Created future:
[17:39:35.759] MultisessionFuture:
[17:39:35.759] Label: ‘future_lapply-4’
[17:39:35.759] Expression:
[17:39:35.759] {
[17:39:35.759]     do.call(function(...) {
[17:39:35.759]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:35.759]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:35.759]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:35.759]             on.exit(options(oopts), add = TRUE)
[17:39:35.759]         }
[17:39:35.759]         {
[17:39:35.759]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:35.759]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:35.759]                 ...future.FUN(...future.X_jj, ...)
[17:39:35.759]             })
[17:39:35.759]         }
[17:39:35.759]     }, args = future.call.arguments)
[17:39:35.759] }
[17:39:35.759] Lazy evaluation: FALSE
[17:39:35.759] Asynchronous evaluation: TRUE
[17:39:35.759] Local evaluation: TRUE
[17:39:35.759] Environment: R_GlobalEnv
[17:39:35.759] Capture standard output: TRUE
[17:39:35.759] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:35.759] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:39:35.759] Packages: <none>
[17:39:35.759] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:35.759] Resolved: FALSE
[17:39:35.759] Value: <not collected>
[17:39:35.759] Conditions captured: <none>
[17:39:35.759] Early signaling: FALSE
[17:39:35.759] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:35.759] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:35.771] Chunk #4 of 5 ... DONE
[17:39:35.771] Chunk #5 of 5 ...
[17:39:35.771]  - Finding globals in 'X' for chunk #5 ...
[17:39:35.771]    + additional globals found: [n=0] 
[17:39:35.771]    + additional namespaces needed: [n=0] 
[17:39:35.772]  - Finding globals in 'X' for chunk #5 ... DONE
[17:39:35.772]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[17:39:35.772]  - seeds: <none>
[17:39:35.800] Created future:
[17:39:35.801] MultisessionFuture:
[17:39:35.801] Label: ‘future_lapply-5’
[17:39:35.801] Expression:
[17:39:35.801] {
[17:39:35.801]     do.call(function(...) {
[17:39:35.801]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:35.801]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:35.801]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:35.801]             on.exit(options(oopts), add = TRUE)
[17:39:35.801]         }
[17:39:35.801]         {
[17:39:35.801]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:35.801]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:35.801]                 ...future.FUN(...future.X_jj, ...)
[17:39:35.801]             })
[17:39:35.801]         }
[17:39:35.801]     }, args = future.call.arguments)
[17:39:35.801] }
[17:39:35.801] Lazy evaluation: FALSE
[17:39:35.801] Asynchronous evaluation: TRUE
[17:39:35.801] Local evaluation: TRUE
[17:39:35.801] Environment: R_GlobalEnv
[17:39:35.801] Capture standard output: TRUE
[17:39:35.801] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:35.801] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:39:35.801] Packages: <none>
[17:39:35.801] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:35.801] Resolved: FALSE
[17:39:35.801] Value: <not collected>
[17:39:35.801] Conditions captured: <none>
[17:39:35.801] Early signaling: FALSE
[17:39:35.801] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:35.801] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:35.812] Chunk #5 of 5 ... DONE
[17:39:35.812] Launching 5 futures (chunks) ... DONE
[17:39:35.812] Resolving 5 futures (chunks) ...
[17:39:35.858]  - Number of value chunks collected: 5
[17:39:35.859] Resolving 5 futures (chunks) ... DONE
[17:39:35.859] Reducing values from 5 chunks ...
[17:39:35.859]  - Number of values collected after concatenation: 10
[17:39:35.859]  - Number of values expected: 10
[17:39:35.859] Reducing values from 5 chunks ... DONE
[17:39:35.859] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[17:39:35.863] future_lapply() ...
[17:39:35.867] Number of chunks: 2
[17:39:35.867] getGlobalsAndPackagesXApply() ...
[17:39:35.867]  - future.globals: TRUE
[17:39:35.868]  - globals found/used: [n=1] ‘FUN’
[17:39:35.869]  - needed namespaces: [n=0] 
[17:39:35.869] Finding globals ... DONE
[17:39:35.869]  - use_args: TRUE
[17:39:35.869]  - Getting '...' globals ...
[17:39:35.869]    - '...' content: [n=0] 
[17:39:35.869] List of 1
[17:39:35.869]  $ ...: list()
[17:39:35.869]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:35.869]  - attr(*, "where")=List of 1
[17:39:35.869]   ..$ ...:<environment: 0x5561036734d0> 
[17:39:35.869]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:35.869]  - attr(*, "resolved")= logi TRUE
[17:39:35.869]  - attr(*, "total_size")= num NA
[17:39:35.872]  - Getting '...' globals ... DONE
[17:39:35.872] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:39:35.872] List of 2
[17:39:35.872]  $ ...future.FUN:function (x)  
[17:39:35.872]  $ ...          : list()
[17:39:35.872]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:35.872]  - attr(*, "where")=List of 2
[17:39:35.872]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:35.872]   ..$ ...          :<environment: 0x5561036734d0> 
[17:39:35.872]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:35.872]  - attr(*, "resolved")= logi FALSE
[17:39:35.872]  - attr(*, "total_size")= num 1840
[17:39:35.875] Packages to be attached in all futures: [n=0] 
[17:39:35.875] getGlobalsAndPackagesXApply() ... DONE
[17:39:35.875] Number of futures (= number of chunks): 2
[17:39:35.875] Launching 2 futures (chunks) ...
[17:39:35.875] Chunk #1 of 2 ...
[17:39:35.875]  - Finding globals in 'X' for chunk #1 ...
[17:39:35.876]    + additional globals found: [n=0] 
[17:39:35.876]    + additional namespaces needed: [n=0] 
[17:39:35.876]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:35.876]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[17:39:35.876]  - seeds: <none>
[17:39:35.894] Created future:
[17:39:35.894] MultisessionFuture:
[17:39:35.894] Label: ‘future_lapply-1’
[17:39:35.894] Expression:
[17:39:35.894] {
[17:39:35.894]     do.call(function(...) {
[17:39:35.894]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:35.894]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:35.894]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:35.894]             on.exit(options(oopts), add = TRUE)
[17:39:35.894]         }
[17:39:35.894]         {
[17:39:35.894]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:35.894]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:35.894]                 ...future.FUN(...future.X_jj, ...)
[17:39:35.894]             })
[17:39:35.894]         }
[17:39:35.894]     }, args = future.call.arguments)
[17:39:35.894] }
[17:39:35.894] Lazy evaluation: FALSE
[17:39:35.894] Asynchronous evaluation: TRUE
[17:39:35.894] Local evaluation: TRUE
[17:39:35.894] Environment: R_GlobalEnv
[17:39:35.894] Capture standard output: TRUE
[17:39:35.894] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:35.894] Globals: 5 objects totaling 4.04 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:39:35.894] Packages: <none>
[17:39:35.894] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:35.894] Resolved: FALSE
[17:39:35.894] Value: <not collected>
[17:39:35.894] Conditions captured: <none>
[17:39:35.894] Early signaling: FALSE
[17:39:35.894] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:35.894] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:35.906] Chunk #1 of 2 ... DONE
[17:39:35.906] Chunk #2 of 2 ...
[17:39:35.906]  - Finding globals in 'X' for chunk #2 ...
[17:39:35.907]    + additional globals found: [n=0] 
[17:39:35.907]    + additional namespaces needed: [n=0] 
[17:39:35.907]  - Finding globals in 'X' for chunk #2 ... DONE
[17:39:35.907]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[17:39:35.907]  - seeds: <none>
[17:39:35.925] Created future:
[17:39:35.925] MultisessionFuture:
[17:39:35.925] Label: ‘future_lapply-2’
[17:39:35.925] Expression:
[17:39:35.925] {
[17:39:35.925]     do.call(function(...) {
[17:39:35.925]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:35.925]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:35.925]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:35.925]             on.exit(options(oopts), add = TRUE)
[17:39:35.925]         }
[17:39:35.925]         {
[17:39:35.925]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:35.925]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:35.925]                 ...future.FUN(...future.X_jj, ...)
[17:39:35.925]             })
[17:39:35.925]         }
[17:39:35.925]     }, args = future.call.arguments)
[17:39:35.925] }
[17:39:35.925] Lazy evaluation: FALSE
[17:39:35.925] Asynchronous evaluation: TRUE
[17:39:35.925] Local evaluation: TRUE
[17:39:35.925] Environment: R_GlobalEnv
[17:39:35.925] Capture standard output: TRUE
[17:39:35.925] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:35.925] Globals: 5 objects totaling 4.04 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:39:35.925] Packages: <none>
[17:39:35.925] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:35.925] Resolved: FALSE
[17:39:35.925] Value: <not collected>
[17:39:35.925] Conditions captured: <none>
[17:39:35.925] Early signaling: FALSE
[17:39:35.925] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:35.925] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:35.936] Chunk #2 of 2 ... DONE
[17:39:35.936] Launching 2 futures (chunks) ... DONE
[17:39:35.937] Resolving 2 futures (chunks) ...
[17:39:35.984]  - Number of value chunks collected: 2
[17:39:35.984] Resolving 2 futures (chunks) ... DONE
[17:39:35.985] Reducing values from 2 chunks ...
[17:39:35.985]  - Number of values collected after concatenation: 10
[17:39:35.985]  - Number of values expected: 10
[17:39:35.985] Reducing values from 2 chunks ... DONE
[17:39:35.985] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[17:39:35.989] future_lapply() ...
[17:39:35.993] Number of chunks: 1
[17:39:35.993] getGlobalsAndPackagesXApply() ...
[17:39:35.993]  - future.globals: TRUE
[17:39:35.995]  - globals found/used: [n=1] ‘FUN’
[17:39:35.995]  - needed namespaces: [n=0] 
[17:39:35.995] Finding globals ... DONE
[17:39:35.995]  - use_args: TRUE
[17:39:35.995]  - Getting '...' globals ...
[17:39:35.996]    - '...' content: [n=0] 
[17:39:35.996] List of 1
[17:39:35.996]  $ ...: list()
[17:39:35.996]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:35.996]  - attr(*, "where")=List of 1
[17:39:35.996]   ..$ ...:<environment: 0x5561044d2a40> 
[17:39:35.996]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:35.996]  - attr(*, "resolved")= logi TRUE
[17:39:35.996]  - attr(*, "total_size")= num NA
[17:39:36.000]  - Getting '...' globals ... DONE
[17:39:36.001] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:39:36.001] List of 2
[17:39:36.001]  $ ...future.FUN:function (x)  
[17:39:36.001]  $ ...          : list()
[17:39:36.001]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:36.001]  - attr(*, "where")=List of 2
[17:39:36.001]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:36.001]   ..$ ...          :<environment: 0x5561044d2a40> 
[17:39:36.001]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:36.001]  - attr(*, "resolved")= logi FALSE
[17:39:36.001]  - attr(*, "total_size")= num 1840
[17:39:36.004] Packages to be attached in all futures: [n=0] 
[17:39:36.004] getGlobalsAndPackagesXApply() ... DONE
[17:39:36.004] Number of futures (= number of chunks): 1
[17:39:36.004] Launching 1 futures (chunks) ...
[17:39:36.004] Chunk #1 of 1 ...
[17:39:36.004]  - Finding globals in 'X' for chunk #1 ...
[17:39:36.004]    + additional globals found: [n=0] 
[17:39:36.005]    + additional namespaces needed: [n=0] 
[17:39:36.005]  - Finding globals in 'X' for chunk #1 ... DONE
[17:39:36.005]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[17:39:36.005]  - seeds: <none>
[17:39:36.022] Created future:
[17:39:36.023] MultisessionFuture:
[17:39:36.023] Label: ‘future_lapply-1’
[17:39:36.023] Expression:
[17:39:36.023] {
[17:39:36.023]     do.call(function(...) {
[17:39:36.023]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:39:36.023]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:39:36.023]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:39:36.023]             on.exit(options(oopts), add = TRUE)
[17:39:36.023]         }
[17:39:36.023]         {
[17:39:36.023]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:39:36.023]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:39:36.023]                 ...future.FUN(...future.X_jj, ...)
[17:39:36.023]             })
[17:39:36.023]         }
[17:39:36.023]     }, args = future.call.arguments)
[17:39:36.023] }
[17:39:36.023] Lazy evaluation: FALSE
[17:39:36.023] Asynchronous evaluation: TRUE
[17:39:36.023] Local evaluation: TRUE
[17:39:36.023] Environment: R_GlobalEnv
[17:39:36.023] Capture standard output: TRUE
[17:39:36.023] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:39:36.023] Globals: 5 objects totaling 6.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:39:36.023] Packages: <none>
[17:39:36.023] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:39:36.023] Resolved: FALSE
[17:39:36.023] Value: <not collected>
[17:39:36.023] Conditions captured: <none>
[17:39:36.023] Early signaling: FALSE
[17:39:36.023] Owner process: 9e8fd8ad-5a2a-fe91-6a2b-4ecd6a46e7eb
[17:39:36.023] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:39:36.034] Chunk #1 of 1 ... DONE
[17:39:36.034] Launching 1 futures (chunks) ... DONE
[17:39:36.035] Resolving 1 futures (chunks) ...
[17:39:36.077]  - Number of value chunks collected: 1
[17:39:36.077] Resolving 1 futures (chunks) ... DONE
[17:39:36.077] Reducing values from 1 chunks ...
[17:39:36.077]  - Number of values collected after concatenation: 10
[17:39:36.077]  - Number of values expected: 10
[17:39:36.077] Reducing values from 1 chunks ... DONE
[17:39:36.077] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
> y <- NULL
> options(future.globals.maxSize = oMaxSize)
> 
> 
> message("*** future_lapply() - too large ... DONE")
*** future_lapply() - too large ... DONE
> 
> 
> message("*** future_lapply() - globals exceptions ...")
*** future_lapply() - globals exceptions ...
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = 42)
+ }, error = identity)
[17:39:36.081] future_lapply() ...
[17:39:36.085] Number of chunks: 1
[17:39:36.085] getGlobalsAndPackagesXApply() ...
[17:39:36.085] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = list(1))
+ }, error = identity)
[17:39:36.085] future_lapply() ...
[17:39:36.089] Number of chunks: 1
[17:39:36.089] getGlobalsAndPackagesXApply() ...
[17:39:36.089]  - future.globals: <name-value list> with names ‘1’
[17:39:36.089] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = "...future.FUN")
+ }, error = identity)
[17:39:36.090] future_lapply() ...
[17:39:36.093] Number of chunks: 1
[17:39:36.093] getGlobalsAndPackagesXApply() ...
[17:39:36.093]  - future.globals: ‘...future.FUN’
[17:39:36.093]  - use_args: TRUE
[17:39:36.094] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = "...future.FUN")
+ }, error = identity)
[17:39:36.094] future_lapply() ...
[17:39:36.097] Number of chunks: 1
[17:39:36.097] getGlobalsAndPackagesXApply() ...
[17:39:36.098]  - future.globals: ‘...future.FUN’
[17:39:36.098]  - use_args: TRUE
[17:39:36.098] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> ...future.elements_ii <- 42L
> X <- list(function() 2 * ...future.elements_ii)
> res <- tryCatch({
+   y <- future_lapply(X, FUN = function(f) f())
+ }, error = identity)
[17:39:36.098] future_lapply() ...
[17:39:36.102] Number of chunks: 1
[17:39:36.102] getGlobalsAndPackagesXApply() ...
[17:39:36.102]  - future.globals: TRUE
[17:39:36.103]  - globals found/used: [n=1] ‘FUN’
[17:39:36.103]  - needed namespaces: [n=0] 
[17:39:36.104] Finding globals ... DONE
[17:39:36.104]  - use_args: TRUE
[17:39:36.104]  - Getting '...' globals ...
[17:39:36.104]    - '...' content: [n=0] 
[17:39:36.104] List of 1
[17:39:36.104]  $ ...: list()
[17:39:36.104]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:36.104]  - attr(*, "where")=List of 1
[17:39:36.104]   ..$ ...:<environment: 0x556104717d78> 
[17:39:36.104]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:36.104]  - attr(*, "resolved")= logi TRUE
[17:39:36.104]  - attr(*, "total_size")= num NA
[17:39:36.107]  - Getting '...' globals ... DONE
[17:39:36.107] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:39:36.107] List of 2
[17:39:36.107]  $ ...future.FUN:function (f)  
[17:39:36.107]  $ ...          : list()
[17:39:36.107]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:39:36.107]  - attr(*, "where")=List of 2
[17:39:36.107]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:39:36.107]   ..$ ...          :<environment: 0x556104717d78> 
[17:39:36.107]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:39:36.107]  - attr(*, "resolved")= logi FALSE
[17:39:36.107]  - attr(*, "total_size")= num 336
[17:39:36.110] Packages to be attached in all futures: [n=0] 
[17:39:36.110] getGlobalsAndPackagesXApply() ... DONE
[17:39:36.110] Number of futures (= number of chunks): 1
[17:39:36.110] Launching 1 futures (chunks) ...
[17:39:36.110] Chunk #1 of 1 ...
[17:39:36.110]  - Finding globals in 'X' for chunk #1 ...
[17:39:36.111]    + additional globals found: [n=1] ‘...future.elements_ii’
[17:39:36.112]    + additional namespaces needed: [n=0] 
> stopifnot(inherits(res, "error"))
> 
> message("*** future_lapply() - globals exceptions ... DONE")
*** future_lapply() - globals exceptions ... DONE
> 
> source("incl/end.R")
> 
