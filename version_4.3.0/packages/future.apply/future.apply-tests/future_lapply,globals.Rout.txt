
R version 4.3.0 (2023-04-21) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> source("incl/start.R")
Loading required package: future
[16:09:38.000] plan(): Setting new future strategy stack:
[16:09:38.000] List of future strategies:
[16:09:38.000] 1. sequential:
[16:09:38.000]    - args: function (..., envir = parent.frame())
[16:09:38.000]    - tweaked: FALSE
[16:09:38.000]    - call: future::plan("sequential")
[16:09:38.010] plan(): nbrOfWorkers() = 1
> library("tools") ## toTitleCase()
> 
> options(future.debug = FALSE)
> options(future.apply.debug = TRUE)
> 
> message("*** future_lapply() - globals ...")
*** future_lapply() - globals ...
> 
> plan(cluster, workers = "localhost")
> 
> a <- 1
> b <- 2
> 
> globals_set <- list(
+   A = FALSE,
+   B = TRUE,
+   C = c("a", "b"),
+   D = list(a = 2, b = 3)
+ )
> 
> x <- list(1)
> y_truth <- list(A = NULL, B = list(1), C = list(1), D = list(2))
> str(y_truth)
List of 4
 $ A: NULL
 $ B:List of 1
  ..$ : num 1
 $ C:List of 1
  ..$ : num 1
 $ D:List of 1
  ..$ : num 2
> 
> for (name in names(globals_set)) {
+   globals <- globals_set[[name]]
+   message("Globals set ", sQuote(name))
+   y <- tryCatch({
+     future_lapply(x, FUN = function(x) {
+       median(c(x, a, b))
+     }, future.globals = globals, future.packages = "utils")
+   }, error = identity)
+   print(y)
+   stopifnot((name == "A" && inherits(y, "error")) || 
+              identical(y, y_truth[[name]]))
+ }
Globals set ‘A’
[16:09:38.572] future_lapply() ...
[16:09:38.577] Number of chunks: 1
[16:09:38.577] getGlobalsAndPackagesXApply() ...
[16:09:38.577]  - future.globals: FALSE
[16:09:38.580]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[16:09:38.581]  - needed namespaces: [n=0] 
[16:09:38.581] Finding globals ... DONE
[16:09:38.581]  - use_args: TRUE
[16:09:38.581]  - Getting '...' globals ...
[16:09:38.582]    - '...' content: [n=0] 
[16:09:38.582] List of 1
[16:09:38.582]  $ ...: list()
[16:09:38.582]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:38.582]  - attr(*, "where")=List of 1
[16:09:38.582]   ..$ ...:<environment: 0x55ef09cacce0> 
[16:09:38.582]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:38.582]  - attr(*, "resolved")= logi TRUE
[16:09:38.582]  - attr(*, "total_size")= num NA
[16:09:38.585]  - Getting '...' globals ... DONE
[16:09:38.585] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[16:09:38.585] List of 3
[16:09:38.585]  $ ...future.FUN        :function (x)  
[16:09:38.585]  $ future.call.arguments: list()
[16:09:38.585]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:38.585]  $ ...                  : list()
[16:09:38.585]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:38.585]  - attr(*, "where")=List of 3
[16:09:38.585]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[16:09:38.585]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[16:09:38.585]   ..$ ...                  :<environment: 0x55ef09cacce0> 
[16:09:38.585]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:38.585]  - attr(*, "resolved")= logi FALSE
[16:09:38.585]  - attr(*, "total_size")= num 3824
[16:09:38.589] Packages to be attached in all futures: [n=1] ‘utils’
[16:09:38.589] getGlobalsAndPackagesXApply() ... DONE
[16:09:38.589] Number of futures (= number of chunks): 1
[16:09:38.590] Launching 1 futures (chunks) ...
[16:09:38.590] Chunk #1 of 1 ...
[16:09:38.590]  - seeds: <none>
[16:09:38.600] Created future:
[16:09:38.601] ClusterFuture:
[16:09:38.601] Label: ‘future_lapply-1’
[16:09:38.601] Expression:
[16:09:38.601] {
[16:09:38.601]     do.call(function(...) {
[16:09:38.601]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:38.601]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:38.601]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:38.601]             on.exit(options(oopts), add = TRUE)
[16:09:38.601]         }
[16:09:38.601]         {
[16:09:38.601]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:38.601]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:38.601]                 ...future.FUN(...future.X_jj, ...)
[16:09:38.601]             })
[16:09:38.601]         }
[16:09:38.601]     }, args = future.call.arguments)
[16:09:38.601] }
[16:09:38.601] Lazy evaluation: FALSE
[16:09:38.601] Asynchronous evaluation: TRUE
[16:09:38.601] Local evaluation: TRUE
[16:09:38.601] Environment: R_GlobalEnv
[16:09:38.601] Capture standard output: TRUE
[16:09:38.601] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:38.601] Globals: 5 objects totaling 3.79 KiB (function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:38.601] Packages: 1 packages (‘utils’)
[16:09:38.601] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:38.601] Resolved: FALSE
[16:09:38.601] Value: <not collected>
[16:09:38.601] Conditions captured: <none>
[16:09:38.601] Early signaling: FALSE
[16:09:38.601] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:38.601] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:38.613] Chunk #1 of 1 ... DONE
[16:09:38.613] Launching 1 futures (chunks) ... DONE
[16:09:38.614] Resolving 1 futures (chunks) ...
<simpleError in ...future.FUN(...future.X_jj, ...): object 'a' not found>
Globals set ‘B’
[16:09:38.657] future_lapply() ...
[16:09:38.658] Number of chunks: 1
[16:09:38.658] getGlobalsAndPackagesXApply() ...
[16:09:38.658]  - future.globals: TRUE
[16:09:38.661]  - globals found/used: [n=3] ‘FUN’, ‘a’, ‘b’
[16:09:38.661]  - needed namespaces: [n=1] ‘stats’
[16:09:38.662] Finding globals ... DONE
[16:09:38.662]  - use_args: TRUE
[16:09:38.662]  - Getting '...' globals ...
[16:09:38.662]    - '...' content: [n=0] 
[16:09:38.662] List of 1
[16:09:38.662]  $ ...: list()
[16:09:38.662]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:38.662]  - attr(*, "where")=List of 1
[16:09:38.662]   ..$ ...:<environment: 0x55ef0b7d5f28> 
[16:09:38.662]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:38.662]  - attr(*, "resolved")= logi TRUE
[16:09:38.662]  - attr(*, "total_size")= num NA
[16:09:38.665]  - Getting '...' globals ... DONE
[16:09:38.666] Globals to be used in all futures (chunks): [n=4] ‘...future.FUN’, ‘a’, ‘b’, ‘...’
[16:09:38.666] List of 4
[16:09:38.666]  $ ...future.FUN:function (x)  
[16:09:38.666]  $ a            : num 1
[16:09:38.666]  $ b            : num 2
[16:09:38.666]  $ ...          : list()
[16:09:38.666]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:38.666]  - attr(*, "where")=List of 4
[16:09:38.666]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:38.666]   ..$ a            :<environment: R_EmptyEnv> 
[16:09:38.666]   ..$ b            :<environment: R_EmptyEnv> 
[16:09:38.666]   ..$ ...          :<environment: 0x55ef0b7d5f28> 
[16:09:38.666]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:38.666]  - attr(*, "resolved")= logi FALSE
[16:09:38.666]  - attr(*, "total_size")= num 3936
[16:09:38.670] Packages to be attached in all futures: [n=2] ‘stats’, ‘utils’
[16:09:38.670] getGlobalsAndPackagesXApply() ... DONE
[16:09:38.674] Number of futures (= number of chunks): 1
[16:09:38.674] Launching 1 futures (chunks) ...
[16:09:38.674] Chunk #1 of 1 ...
[16:09:38.674]  - Finding globals in 'X' for chunk #1 ...
[16:09:38.674]    + additional globals found: [n=0] 
[16:09:38.674]    + additional namespaces needed: [n=0] 
[16:09:38.674]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:38.675]  - seeds: <none>
[16:09:38.684] Created future:
[16:09:38.684] ClusterFuture:
[16:09:38.684] Label: ‘future_lapply-1’
[16:09:38.684] Expression:
[16:09:38.684] {
[16:09:38.684]     do.call(function(...) {
[16:09:38.684]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:38.684]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:38.684]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:38.684]             on.exit(options(oopts), add = TRUE)
[16:09:38.684]         }
[16:09:38.684]         {
[16:09:38.684]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:38.684]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:38.684]                 ...future.FUN(...future.X_jj, ...)
[16:09:38.684]             })
[16:09:38.684]         }
[16:09:38.684]     }, args = future.call.arguments)
[16:09:38.684] }
[16:09:38.684] Lazy evaluation: FALSE
[16:09:38.684] Asynchronous evaluation: TRUE
[16:09:38.684] Local evaluation: TRUE
[16:09:38.684] Environment: R_GlobalEnv
[16:09:38.684] Capture standard output: TRUE
[16:09:38.684] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:38.684] Globals: 7 objects totaling 3.90 KiB (function ‘...future.FUN’ of 3.73 KiB, numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[16:09:38.684] Packages: 2 packages (‘stats’, ‘utils’)
[16:09:38.684] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:38.684] Resolved: FALSE
[16:09:38.684] Value: <not collected>
[16:09:38.684] Conditions captured: <none>
[16:09:38.684] Early signaling: FALSE
[16:09:38.684] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:38.684] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:38.696] Chunk #1 of 1 ... DONE
[16:09:38.696] Launching 1 futures (chunks) ... DONE
[16:09:38.696] Resolving 1 futures (chunks) ...
[16:09:38.738]  - Number of value chunks collected: 1
[16:09:38.738] Resolving 1 futures (chunks) ... DONE
[16:09:38.738] Reducing values from 1 chunks ...
[16:09:38.738]  - Number of values collected after concatenation: 1
[16:09:38.738]  - Number of values expected: 1
[16:09:38.739] Reducing values from 1 chunks ... DONE
[16:09:38.739] future_lapply() ... DONE
[[1]]
[1] 1

Globals set ‘C’
[16:09:38.739] future_lapply() ...
[16:09:38.739] Number of chunks: 1
[16:09:38.740] getGlobalsAndPackagesXApply() ...
[16:09:38.740]  - future.globals: ‘a’, ‘b’
[16:09:38.740]  - use_args: TRUE
[16:09:38.740] Globals to be used in all futures (chunks): [n=4] ‘a’, ‘b’, ‘...future.FUN’, ‘...’
[16:09:38.740] List of 4
[16:09:38.740]  $ a            : num 1
[16:09:38.740]  $ b            : num 2
[16:09:38.740]  $ ...future.FUN:function (x)  
[16:09:38.740]  $ ...          : list()
[16:09:38.740]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:38.740]  - attr(*, "where")=List of 4
[16:09:38.740]   ..$ a            :<environment: R_GlobalEnv> 
[16:09:38.740]   ..$ b            :<environment: R_GlobalEnv> 
[16:09:38.740]   ..$ ...future.FUN:<environment: 0x55ef0a7b0d68> 
[16:09:38.740]   ..$ ...          :<environment: 0x55ef0a7b0d68> 
[16:09:38.740]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:38.740]  - attr(*, "resolved")= logi FALSE
[16:09:38.740]  - attr(*, "total_size")= num NA
[16:09:38.744] Packages to be attached in all futures: [n=1] ‘utils’
[16:09:38.744] getGlobalsAndPackagesXApply() ... DONE
[16:09:38.744] Number of futures (= number of chunks): 1
[16:09:38.744] Launching 1 futures (chunks) ...
[16:09:38.744] Chunk #1 of 1 ...
[16:09:38.744]  - seeds: <none>
[16:09:38.754] Created future:
[16:09:38.754] ClusterFuture:
[16:09:38.754] Label: ‘future_lapply-1’
[16:09:38.754] Expression:
[16:09:38.754] {
[16:09:38.754]     do.call(function(...) {
[16:09:38.754]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:38.754]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:38.754]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:38.754]             on.exit(options(oopts), add = TRUE)
[16:09:38.754]         }
[16:09:38.754]         {
[16:09:38.754]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:38.754]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:38.754]                 ...future.FUN(...future.X_jj, ...)
[16:09:38.754]             })
[16:09:38.754]         }
[16:09:38.754]     }, args = future.call.arguments)
[16:09:38.754] }
[16:09:38.754] Lazy evaluation: FALSE
[16:09:38.754] Asynchronous evaluation: TRUE
[16:09:38.754] Local evaluation: TRUE
[16:09:38.754] Environment: R_GlobalEnv
[16:09:38.754] Capture standard output: TRUE
[16:09:38.754] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:38.754] Globals: 7 objects totaling 3.90 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[16:09:38.754] Packages: 1 packages (‘utils’)
[16:09:38.754] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:38.754] Resolved: FALSE
[16:09:38.754] Value: <not collected>
[16:09:38.754] Conditions captured: <none>
[16:09:38.754] Early signaling: FALSE
[16:09:38.754] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:38.754] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:38.766] Chunk #1 of 1 ... DONE
[16:09:38.766] Launching 1 futures (chunks) ... DONE
[16:09:38.766] Resolving 1 futures (chunks) ...
[16:09:38.808]  - Number of value chunks collected: 1
[16:09:38.808] Resolving 1 futures (chunks) ... DONE
[16:09:38.808] Reducing values from 1 chunks ...
[16:09:38.808]  - Number of values collected after concatenation: 1
[16:09:38.808]  - Number of values expected: 1
[16:09:38.809] Reducing values from 1 chunks ... DONE
[16:09:38.809] future_lapply() ... DONE
[[1]]
[1] 1

Globals set ‘D’
[16:09:38.809] future_lapply() ...
[16:09:38.810] Number of chunks: 1
[16:09:38.810] getGlobalsAndPackagesXApply() ...
[16:09:38.810]  - future.globals: <name-value list> with names ‘2’, ‘3’
[16:09:38.810]  - use_args: TRUE
[16:09:38.810]  - Getting '...' globals ...
[16:09:38.810]    - '...' content: [n=0] 
[16:09:38.810] List of 1
[16:09:38.810]  $ ...: list()
[16:09:38.810]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:38.810]  - attr(*, "where")=List of 1
[16:09:38.810]   ..$ ...:<environment: 0x55ef09cf6858> 
[16:09:38.810]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:38.810]  - attr(*, "resolved")= logi TRUE
[16:09:38.810]  - attr(*, "total_size")= num NA
[16:09:38.813]  - Getting '...' globals ... DONE
[16:09:38.813] Globals to be used in all futures (chunks): [n=4] ‘a’, ‘b’, ‘...future.FUN’, ‘...’
[16:09:38.813] List of 4
[16:09:38.813]  $ a            : num 2
[16:09:38.813]  $ b            : num 3
[16:09:38.813]  $ ...future.FUN:function (x)  
[16:09:38.813]  $ ...          : list()
[16:09:38.813]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:38.813]  - attr(*, "where")=List of 4
[16:09:38.813]   ..$ a            :<environment: R_EmptyEnv> 
[16:09:38.813]   ..$ b            :<environment: R_EmptyEnv> 
[16:09:38.813]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[16:09:38.813]   ..$ ...          :<environment: 0x55ef09cf6858> 
[16:09:38.813]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:38.813]  - attr(*, "resolved")= logi FALSE
[16:09:38.813]  - attr(*, "total_size")= num NA
[16:09:38.817] Packages to be attached in all futures: [n=1] ‘utils’
[16:09:38.817] getGlobalsAndPackagesXApply() ... DONE
[16:09:38.817] Number of futures (= number of chunks): 1
[16:09:38.817] Launching 1 futures (chunks) ...
[16:09:38.817] Chunk #1 of 1 ...
[16:09:38.817]  - seeds: <none>
[16:09:38.827] Created future:
[16:09:38.828] ClusterFuture:
[16:09:38.828] Label: ‘future_lapply-1’
[16:09:38.828] Expression:
[16:09:38.828] {
[16:09:38.828]     do.call(function(...) {
[16:09:38.828]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:38.828]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:38.828]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:38.828]             on.exit(options(oopts), add = TRUE)
[16:09:38.828]         }
[16:09:38.828]         {
[16:09:38.828]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:38.828]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:38.828]                 ...future.FUN(...future.X_jj, ...)
[16:09:38.828]             })
[16:09:38.828]         }
[16:09:38.828]     }, args = future.call.arguments)
[16:09:38.828] }
[16:09:38.828] Lazy evaluation: FALSE
[16:09:38.828] Asynchronous evaluation: TRUE
[16:09:38.828] Local evaluation: TRUE
[16:09:38.828] Environment: R_GlobalEnv
[16:09:38.828] Capture standard output: TRUE
[16:09:38.828] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:38.828] Globals: 7 objects totaling 3.90 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[16:09:38.828] Packages: 1 packages (‘utils’)
[16:09:38.828] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:38.828] Resolved: FALSE
[16:09:38.828] Value: <not collected>
[16:09:38.828] Conditions captured: <none>
[16:09:38.828] Early signaling: FALSE
[16:09:38.828] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:38.828] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:38.839] Chunk #1 of 1 ... DONE
[16:09:38.839] Launching 1 futures (chunks) ... DONE
[16:09:38.839] Resolving 1 futures (chunks) ...
[16:09:38.870]  - Number of value chunks collected: 1
[16:09:38.870] Resolving 1 futures (chunks) ... DONE
[16:09:38.870] Reducing values from 1 chunks ...
[16:09:38.870]  - Number of values collected after concatenation: 1
[16:09:38.870]  - Number of values expected: 1
[16:09:38.870] Reducing values from 1 chunks ... DONE
[16:09:38.870] future_lapply() ... DONE
[[1]]
[1] 2

> 
> message("*** future_lapply() - globals ... DONE")
*** future_lapply() - globals ... DONE
> 
> 
> message("*** future_lapply() - manual globals ...")
*** future_lapply() - manual globals ...
> 
> d <- 42
> y <- future_lapply(1:2, FUN = function(x) { x * d },
+                    future.globals = structure(FALSE, add = "d"))
[16:09:38.871] future_lapply() ...
[16:09:38.871] Number of chunks: 1
[16:09:38.871] getGlobalsAndPackagesXApply() ...
[16:09:38.871]  - future.globals: FALSE
[16:09:38.872]  - globals found/used: [n=3] ‘d’, ‘FUN’, ‘future.call.arguments’
[16:09:38.872]  - needed namespaces: [n=0] 
[16:09:38.873] Finding globals ... DONE
[16:09:38.873]  - use_args: TRUE
[16:09:38.873]  - Getting '...' globals ...
[16:09:38.873]    - '...' content: [n=0] 
[16:09:38.873] List of 1
[16:09:38.873]  $ ...: list()
[16:09:38.873]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:38.873]  - attr(*, "where")=List of 1
[16:09:38.873]   ..$ ...:<environment: 0x55ef0b78fdb0> 
[16:09:38.873]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:38.873]  - attr(*, "resolved")= logi TRUE
[16:09:38.873]  - attr(*, "total_size")= num NA
[16:09:38.876]  - Getting '...' globals ... DONE
[16:09:38.876] Globals to be used in all futures (chunks): [n=4] ‘d’, ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[16:09:38.876] List of 4
[16:09:38.876]  $ d                    : num 42
[16:09:38.876]  $ ...future.FUN        :function (x)  
[16:09:38.876]  $ future.call.arguments: list()
[16:09:38.876]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:38.876]  $ ...                  : list()
[16:09:38.876]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:38.876]  - attr(*, "where")=List of 4
[16:09:38.876]   ..$ d                    :<environment: R_EmptyEnv> 
[16:09:38.876]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[16:09:38.876]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[16:09:38.876]   ..$ ...                  :<environment: 0x55ef0b78fdb0> 
[16:09:38.876]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:38.876]  - attr(*, "resolved")= logi FALSE
[16:09:38.876]  - attr(*, "total_size")= num 784
[16:09:38.880] Packages to be attached in all futures: [n=0] 
[16:09:38.880] getGlobalsAndPackagesXApply() ... DONE
[16:09:38.880] Number of futures (= number of chunks): 1
[16:09:38.880] Launching 1 futures (chunks) ...
[16:09:38.880] Chunk #1 of 1 ...
[16:09:38.880]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:09:38.881]  - seeds: <none>
[16:09:38.892] Created future:
[16:09:38.892] ClusterFuture:
[16:09:38.892] Label: ‘future_lapply-1’
[16:09:38.892] Expression:
[16:09:38.892] {
[16:09:38.892]     do.call(function(...) {
[16:09:38.892]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:38.892]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:38.892]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:38.892]             on.exit(options(oopts), add = TRUE)
[16:09:38.892]         }
[16:09:38.892]         {
[16:09:38.892]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:38.892]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:38.892]                 ...future.FUN(...future.X_jj, ...)
[16:09:38.892]             })
[16:09:38.892]         }
[16:09:38.892]     }, args = future.call.arguments)
[16:09:38.892] }
[16:09:38.892] Lazy evaluation: FALSE
[16:09:38.892] Asynchronous evaluation: TRUE
[16:09:38.892] Local evaluation: TRUE
[16:09:38.892] Environment: R_GlobalEnv
[16:09:38.892] Capture standard output: TRUE
[16:09:38.892] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:38.892] Globals: 6 objects totaling 896 bytes (numeric ‘d’ of 56 bytes, function ‘...future.FUN’ of 728 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 112 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:09:38.892] Packages: <none>
[16:09:38.892] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:38.892] Resolved: FALSE
[16:09:38.892] Value: <not collected>
[16:09:38.892] Conditions captured: <none>
[16:09:38.892] Early signaling: FALSE
[16:09:38.892] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:38.892] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:38.903] Chunk #1 of 1 ... DONE
[16:09:38.904] Launching 1 futures (chunks) ... DONE
[16:09:38.904] Resolving 1 futures (chunks) ...
[16:09:38.946]  - Number of value chunks collected: 1
[16:09:38.946] Resolving 1 futures (chunks) ... DONE
[16:09:38.946] Reducing values from 1 chunks ...
[16:09:38.946]  - Number of values collected after concatenation: 2
[16:09:38.946]  - Number of values expected: 2
[16:09:38.947] Reducing values from 1 chunks ... DONE
[16:09:38.947] future_lapply() ... DONE
> stopifnot(identical(y, list(42, 84)))
> 
> e <- 42
> res <- tryCatch({
+   future_lapply(1:2, FUN = function(x) { 2 * e },
+                 future.globals = structure(TRUE, ignore = "e"))
+ }, error = identity)
[16:09:38.947] future_lapply() ...
[16:09:38.947] Number of chunks: 1
[16:09:38.948] getGlobalsAndPackagesXApply() ...
[16:09:38.948]  - future.globals: TRUE
[16:09:38.949]  - globals found/used: [n=1] ‘FUN’
[16:09:38.950]  - needed namespaces: [n=0] 
[16:09:38.950] Finding globals ... DONE
[16:09:38.950]  - use_args: TRUE
[16:09:38.950]  - Getting '...' globals ...
[16:09:38.950]    - '...' content: [n=0] 
[16:09:38.950] List of 1
[16:09:38.950]  $ ...: list()
[16:09:38.950]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:38.950]  - attr(*, "where")=List of 1
[16:09:38.950]   ..$ ...:<environment: 0x55ef0a9a7b78> 
[16:09:38.950]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:38.950]  - attr(*, "resolved")= logi TRUE
[16:09:38.950]  - attr(*, "total_size")= num NA
[16:09:38.953]  - Getting '...' globals ... DONE
[16:09:38.953] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:09:38.953] List of 2
[16:09:38.953]  $ ...future.FUN:function (x)  
[16:09:38.953]  $ ...          : list()
[16:09:38.953]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:38.953]  - attr(*, "where")=List of 2
[16:09:38.953]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:38.953]   ..$ ...          :<environment: 0x55ef0a9a7b78> 
[16:09:38.953]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:38.953]  - attr(*, "resolved")= logi FALSE
[16:09:38.953]  - attr(*, "total_size")= num 728
[16:09:38.955] Packages to be attached in all futures: [n=0] 
[16:09:38.956] getGlobalsAndPackagesXApply() ... DONE
[16:09:38.956] Number of futures (= number of chunks): 1
[16:09:38.956] Launching 1 futures (chunks) ...
[16:09:38.956] Chunk #1 of 1 ...
[16:09:38.956]  - Finding globals in 'X' for chunk #1 ...
[16:09:38.956]    + additional globals found: [n=0] 
[16:09:38.956]    + additional namespaces needed: [n=0] 
[16:09:38.957]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:38.957]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:09:38.957]  - seeds: <none>
[16:09:38.966] Created future:
[16:09:38.966] ClusterFuture:
[16:09:38.966] Label: ‘future_lapply-1’
[16:09:38.966] Expression:
[16:09:38.966] {
[16:09:38.966]     do.call(function(...) {
[16:09:38.966]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:38.966]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:38.966]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:38.966]             on.exit(options(oopts), add = TRUE)
[16:09:38.966]         }
[16:09:38.966]         {
[16:09:38.966]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:38.966]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:38.966]                 ...future.FUN(...future.X_jj, ...)
[16:09:38.966]             })
[16:09:38.966]         }
[16:09:38.966]     }, args = future.call.arguments)
[16:09:38.966] }
[16:09:38.966] Lazy evaluation: FALSE
[16:09:38.966] Asynchronous evaluation: TRUE
[16:09:38.966] Local evaluation: TRUE
[16:09:38.966] Environment: R_GlobalEnv
[16:09:38.966] Capture standard output: TRUE
[16:09:38.966] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:38.966] Globals: 5 objects totaling 840 bytes (function ‘...future.FUN’ of 728 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 112 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:38.966] Packages: <none>
[16:09:38.966] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:38.966] Resolved: FALSE
[16:09:38.966] Value: <not collected>
[16:09:38.966] Conditions captured: <none>
[16:09:38.966] Early signaling: FALSE
[16:09:38.966] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:38.966] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:38.977] Chunk #1 of 1 ... DONE
[16:09:38.977] Launching 1 futures (chunks) ... DONE
[16:09:38.978] Resolving 1 futures (chunks) ...
> stopifnot(inherits(res, "error"))
> 
> message("*** future_lapply() - manual globals ... DONE")
*** future_lapply() - manual globals ... DONE
> 
> 
> 
> ## Test adopted from http://stackoverflow.com/questions/42561088/nested-do-call-within-a-foreach-dopar-environment-cant-find-function-passed-w
> 
> message("*** future_lapply() - tricky globals ...")
*** future_lapply() - tricky globals ...
> 
> my_add <- function(a, b) a + b
> 
> call_my_add <- function(a, b) {
+   do.call(my_add, args = list(a = a, b = b))
+ }
> 
> call_my_add_caller <- function(a, b, FUN = call_my_add) {
+   do.call(FUN, args = list(a = a, b = b))
+ }
> 
> main <- function(x = 1:2, caller = call_my_add_caller,
+                  args = list(FUN = call_my_add)) {
+   results <- future_lapply(x, FUN = function(i) {
+     do.call(caller, args = c(list(a = i, b = i + 1L), args))
+   })
+   results
+ }
> 
> x <- list(list(1:2))
> z_length <- lapply(x, FUN = do.call, what = length)
> fun <- function(...) sum(...)
> z_fun <- lapply(x, FUN = do.call, what = fun)
> 
> y0 <- NULL
> for (strategy in supportedStrategies()) {
+   plan(strategy)
+ 
+   y <- main(1:3)
+   if (is.null(y0)) y0 <- y
+   stopifnot(identical(y, y0))
+ 
+   message("- future_lapply(x, FUN = do.call, ...) ...")
+   z <- future_lapply(x, FUN = do.call, what = length)
+   stopifnot(identical(z, z_length))
+   z <- future_lapply(x, FUN = do.call, what = fun)
+   stopifnot(identical(z, z_fun))
+ 
+   message("- future_lapply(x, ...) - passing arguments via '...' ...")
+   ## typeof() == "list"
+   obj <- data.frame(a = 1:2)
+   stopifnot(typeof(obj) == "list")
+   y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+   stopifnot(identical(y[[1]], typeof(obj)))
+ 
+   ## typeof() == "environment"
+   obj <- new.env()
+   stopifnot(typeof(obj) == "environment")
+   y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+   stopifnot(identical(y[[1]], typeof(obj)))
+ 
+   ## typeof() == "S4"
+   if (requireNamespace("methods")) {
+     obj <- methods::getClass("MethodDefinition")
+     stopifnot(typeof(obj) == "S4")
+     y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+     stopifnot(identical(y[[1]], typeof(obj)))
+   }
+ 
+   message("- future_lapply(X, ...) - 'X' containing globals ...")
+   ## From https://github.com/HenrikBengtsson/future.apply/issues/12
+   a <- 42
+   b <- 21
+   X <- list(
+     function(b) 2 * a,
+     function() b / 2,
+     function() a + b,
+     function() nchar(toTitleCase("hello world"))
+   )
+   z0 <- lapply(X, FUN = function(f) f())
+   str(z0)
+   z1 <- future_lapply(X, FUN = function(f) f())
+   str(z1)
+   stopifnot(identical(z1, z0))
+ 
+   message("- future_lapply(x, ...) - passing '...' as a global ...")
+   ## https://github.com/HenrikBengtsson/future/issues/417
+   fcn0 <- function(...) { lapply(1, FUN = function(x) list(...)) }
+   z0 <- fcn0(a = 1)
+   str(list(z0 = z0))
+   stopifnot(identical(z0, list(list(a = 1))))
+   fcn <- function(...) { future_lapply(1, FUN = function(x) list(...)) }
+   z1 <- fcn(a = 1)
+   str(list(z1 = z1))
+   stopifnot(identical(z1, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/47
+   message("- future_lapply(X, ...) - '{ a <- a + 1; a }' ...")
+   a <- 1
+   z0 <- lapply(1, function(ii) {
+     a <- a + 1
+     a
+   })
+   z1 <- future_lapply(1, function(ii) {
+     a <- a + 1
+     a
+   })
+   stopifnot(identical(z1, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/47
+   message("- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...")
+   z2 <- tryCatch(future_lapply(1, function(ii) {
+     a
+     a <- a + 1
+   }), error = identity)
+   stopifnot(identical(z2, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/85
+   message("- future_lapply(..., future.globals = <list>) ...")
+   a <- 0
+   y <- future_lapply(1, FUN = function(x) a, future.globals = list(a = 42))
+   str(y)
+   stopifnot(y[[1]] == 42)
+ } ## for (strategy ...)
[16:09:39.070] future_lapply() ...
[16:09:39.071] Number of chunks: 1
[16:09:39.071] getGlobalsAndPackagesXApply() ...
[16:09:39.071]  - future.globals: TRUE
[16:09:39.078]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[16:09:39.078]  - needed namespaces: [n=0] 
[16:09:39.078] Finding globals ... DONE
[16:09:39.078]  - use_args: TRUE
[16:09:39.078]  - Getting '...' globals ...
[16:09:39.079]    - '...' content: [n=0] 
[16:09:39.079] List of 1
[16:09:39.079]  $ ...: list()
[16:09:39.079]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.079]  - attr(*, "where")=List of 1
[16:09:39.079]   ..$ ...:<environment: 0x55ef0b80b640> 
[16:09:39.079]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.079]  - attr(*, "resolved")= logi TRUE
[16:09:39.079]  - attr(*, "total_size")= num NA
[16:09:39.082]  - Getting '...' globals ... DONE
[16:09:39.082] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[16:09:39.082] List of 6
[16:09:39.082]  $ ...future.FUN:function (i)  
[16:09:39.082]  $ caller       :function (a, b, FUN = call_my_add)  
[16:09:39.082]  $ args         :List of 1
[16:09:39.082]   ..$ FUN:function (a, b)  
[16:09:39.082]  $ call_my_add  :function (a, b)  
[16:09:39.082]  $ my_add       :function (a, b)  
[16:09:39.082]  $ ...          : list()
[16:09:39.082]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.082]  - attr(*, "where")=List of 6
[16:09:39.082]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:39.082]   ..$ caller       :<environment: R_EmptyEnv> 
[16:09:39.082]   ..$ args         :<environment: R_EmptyEnv> 
[16:09:39.082]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[16:09:39.082]   ..$ my_add       :<environment: R_EmptyEnv> 
[16:09:39.082]   ..$ ...          :<environment: 0x55ef0b80b640> 
[16:09:39.082]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.082]  - attr(*, "resolved")= logi FALSE
[16:09:39.082]  - attr(*, "total_size")= num 6664
[16:09:39.088] Packages to be attached in all futures: [n=0] 
[16:09:39.088] getGlobalsAndPackagesXApply() ... DONE
[16:09:39.088] Number of futures (= number of chunks): 1
[16:09:39.088] Launching 1 futures (chunks) ...
[16:09:39.088] Chunk #1 of 1 ...
[16:09:39.089]  - Finding globals in 'X' for chunk #1 ...
[16:09:39.089]    + additional globals found: [n=0] 
[16:09:39.089]    + additional namespaces needed: [n=0] 
[16:09:39.089]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:39.089]  - Adjusted option 'future.globals.maxSize': 524288000 -> 3 * 524288000 = 1572864000 (bytes)
[16:09:39.089]  - seeds: <none>
[16:09:39.095] Created future:
[16:09:39.095] SequentialFuture:
[16:09:39.095] Label: ‘future_lapply-1’
[16:09:39.095] Expression:
[16:09:39.095] {
[16:09:39.095]     do.call(function(...) {
[16:09:39.095]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:39.095]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:39.095]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:39.095]             on.exit(options(oopts), add = TRUE)
[16:09:39.095]         }
[16:09:39.095]         {
[16:09:39.095]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:39.095]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:39.095]                 ...future.FUN(...future.X_jj, ...)
[16:09:39.095]             })
[16:09:39.095]         }
[16:09:39.095]     }, args = future.call.arguments)
[16:09:39.095] }
[16:09:39.095] Lazy evaluation: FALSE
[16:09:39.095] Asynchronous evaluation: FALSE
[16:09:39.095] Local evaluation: TRUE
[16:09:39.095] Environment: 0x55ef0b80baa0
[16:09:39.095] Capture standard output: TRUE
[16:09:39.095] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:39.095] Globals: 9 objects totaling 16.21 KiB (function ‘...future.FUN’ of 1.70 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[16:09:39.095] Packages: <none>
[16:09:39.095] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:39.095] Resolved: TRUE
[16:09:39.095] Value: 168 bytes of class ‘list’
[16:09:39.095] Early signaling: FALSE
[16:09:39.095] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:39.095] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:09:39.096] Chunk #1 of 1 ... DONE
[16:09:39.096] Launching 1 futures (chunks) ... DONE
[16:09:39.096] Resolving 1 futures (chunks) ...
[16:09:39.097]  - Number of value chunks collected: 1
[16:09:39.097] Resolving 1 futures (chunks) ... DONE
[16:09:39.097] Reducing values from 1 chunks ...
[16:09:39.097]  - Number of values collected after concatenation: 3
[16:09:39.097]  - Number of values expected: 3
[16:09:39.097] Reducing values from 1 chunks ... DONE
[16:09:39.097] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[16:09:39.097] future_lapply() ...
[16:09:39.101] Number of chunks: 1
[16:09:39.101] getGlobalsAndPackagesXApply() ...
[16:09:39.101]  - future.globals: TRUE
[16:09:39.104]  - globals found/used: [n=1] ‘FUN’
[16:09:39.104]  - needed namespaces: [n=0] 
[16:09:39.104] Finding globals ... DONE
[16:09:39.104]  - use_args: TRUE
[16:09:39.104]  - Getting '...' globals ...
[16:09:39.104]    - '...' content: [n=1] ‘what’
[16:09:39.104] List of 1
[16:09:39.104]  $ ...:List of 1
[16:09:39.104]   ..$ what:function (x)  
[16:09:39.104]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.104]  - attr(*, "where")=List of 1
[16:09:39.104]   ..$ ...:<environment: 0x55ef0a313608> 
[16:09:39.104]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.104]  - attr(*, "resolved")= logi TRUE
[16:09:39.104]  - attr(*, "total_size")= num NA
[16:09:39.107]  - Getting '...' globals ... DONE
[16:09:39.107] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:09:39.108] List of 2
[16:09:39.108]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[16:09:39.108]  $ ...          :List of 1
[16:09:39.108]   ..$ what:function (x)  
[16:09:39.108]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.108]  - attr(*, "where")=List of 2
[16:09:39.108]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:39.108]   ..$ ...          :<environment: 0x55ef0a313608> 
[16:09:39.108]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.108]  - attr(*, "resolved")= logi FALSE
[16:09:39.108]  - attr(*, "total_size")= num 12192
[16:09:39.110] Packages to be attached in all futures: [n=0] 
[16:09:39.111] getGlobalsAndPackagesXApply() ... DONE
[16:09:39.111] Number of futures (= number of chunks): 1
[16:09:39.111] Launching 1 futures (chunks) ...
[16:09:39.111] Chunk #1 of 1 ...
[16:09:39.111]  - Finding globals in 'X' for chunk #1 ...
[16:09:39.111]    + additional globals found: [n=0] 
[16:09:39.111]    + additional namespaces needed: [n=0] 
[16:09:39.112]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:39.112]  - seeds: <none>
[16:09:39.114] Created future:
[16:09:39.114] SequentialFuture:
[16:09:39.114] Label: ‘future_lapply-1’
[16:09:39.114] Expression:
[16:09:39.114] {
[16:09:39.114]     do.call(function(...) {
[16:09:39.114]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:39.114]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:39.114]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:39.114]             on.exit(options(oopts), add = TRUE)
[16:09:39.114]         }
[16:09:39.114]         {
[16:09:39.114]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:39.114]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:39.114]                 ...future.FUN(...future.X_jj, ...)
[16:09:39.114]             })
[16:09:39.114]         }
[16:09:39.114]     }, args = future.call.arguments)
[16:09:39.114] }
[16:09:39.114] Lazy evaluation: FALSE
[16:09:39.114] Asynchronous evaluation: FALSE
[16:09:39.114] Local evaluation: TRUE
[16:09:39.114] Environment: R_GlobalEnv
[16:09:39.114] Capture standard output: TRUE
[16:09:39.114] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:39.114] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:39.114] Packages: <none>
[16:09:39.114] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:39.114] Resolved: TRUE
[16:09:39.114] Value: 56 bytes of class ‘list’
[16:09:39.114] Early signaling: FALSE
[16:09:39.114] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:39.114] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:09:39.115] Chunk #1 of 1 ... DONE
[16:09:39.115] Launching 1 futures (chunks) ... DONE
[16:09:39.115] Resolving 1 futures (chunks) ...
[16:09:39.116]  - Number of value chunks collected: 1
[16:09:39.116] Resolving 1 futures (chunks) ... DONE
[16:09:39.116] Reducing values from 1 chunks ...
[16:09:39.116]  - Number of values collected after concatenation: 1
[16:09:39.116]  - Number of values expected: 1
[16:09:39.116] Reducing values from 1 chunks ... DONE
[16:09:39.116] future_lapply() ... DONE
[16:09:39.116] future_lapply() ...
[16:09:39.118] Number of chunks: 1
[16:09:39.118] getGlobalsAndPackagesXApply() ...
[16:09:39.118]  - future.globals: TRUE
[16:09:39.120]  - globals found/used: [n=1] ‘FUN’
[16:09:39.121]  - needed namespaces: [n=0] 
[16:09:39.121] Finding globals ... DONE
[16:09:39.121]  - use_args: TRUE
[16:09:39.121]  - Getting '...' globals ...
[16:09:39.121]    - '...' content: [n=1] ‘what’
[16:09:39.121] List of 1
[16:09:39.121]  $ ...:List of 1
[16:09:39.121]   ..$ what:function (...)  
[16:09:39.121]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.121]  - attr(*, "where")=List of 1
[16:09:39.121]   ..$ ...:<environment: 0x55ef0b5ba4b0> 
[16:09:39.121]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.121]  - attr(*, "resolved")= logi TRUE
[16:09:39.121]  - attr(*, "total_size")= num NA
[16:09:39.124]  - Getting '...' globals ... DONE
[16:09:39.124] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:09:39.124] List of 2
[16:09:39.124]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[16:09:39.124]  $ ...          :List of 1
[16:09:39.124]   ..$ what:function (...)  
[16:09:39.124]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.124]  - attr(*, "where")=List of 2
[16:09:39.124]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:39.124]   ..$ ...          :<environment: 0x55ef0b5ba4b0> 
[16:09:39.124]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.124]  - attr(*, "resolved")= logi FALSE
[16:09:39.124]  - attr(*, "total_size")= num 12584
[16:09:39.127] Packages to be attached in all futures: [n=0] 
[16:09:39.127] getGlobalsAndPackagesXApply() ... DONE
[16:09:39.127] Number of futures (= number of chunks): 1
[16:09:39.128] Launching 1 futures (chunks) ...
[16:09:39.128] Chunk #1 of 1 ...
[16:09:39.128]  - Finding globals in 'X' for chunk #1 ...
[16:09:39.128]    + additional globals found: [n=0] 
[16:09:39.128]    + additional namespaces needed: [n=0] 
[16:09:39.128]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:39.128]  - seeds: <none>
[16:09:39.133] Created future:
[16:09:39.133] SequentialFuture:
[16:09:39.133] Label: ‘future_lapply-1’
[16:09:39.133] Expression:
[16:09:39.133] {
[16:09:39.133]     do.call(function(...) {
[16:09:39.133]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:39.133]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:39.133]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:39.133]             on.exit(options(oopts), add = TRUE)
[16:09:39.133]         }
[16:09:39.133]         {
[16:09:39.133]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:39.133]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:39.133]                 ...future.FUN(...future.X_jj, ...)
[16:09:39.133]             })
[16:09:39.133]         }
[16:09:39.133]     }, args = future.call.arguments)
[16:09:39.133] }
[16:09:39.133] Lazy evaluation: FALSE
[16:09:39.133] Asynchronous evaluation: FALSE
[16:09:39.133] Local evaluation: TRUE
[16:09:39.133] Environment: R_GlobalEnv
[16:09:39.133] Capture standard output: TRUE
[16:09:39.133] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:39.133] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:39.133] Packages: <none>
[16:09:39.133] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:39.133] Resolved: TRUE
[16:09:39.133] Value: 56 bytes of class ‘list’
[16:09:39.133] Early signaling: FALSE
[16:09:39.133] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:39.133] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:09:39.134] Chunk #1 of 1 ... DONE
[16:09:39.134] Launching 1 futures (chunks) ... DONE
[16:09:39.134] Resolving 1 futures (chunks) ...
[16:09:39.135]  - Number of value chunks collected: 1
[16:09:39.135] Resolving 1 futures (chunks) ... DONE
[16:09:39.135] Reducing values from 1 chunks ...
[16:09:39.135]  - Number of values collected after concatenation: 1
[16:09:39.135]  - Number of values expected: 1
[16:09:39.135] Reducing values from 1 chunks ... DONE
[16:09:39.135] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[16:09:39.136] future_lapply() ...
[16:09:39.136] Number of chunks: 1
[16:09:39.136] getGlobalsAndPackagesXApply() ...
[16:09:39.136]  - future.globals: TRUE
[16:09:39.138]  - globals found/used: [n=1] ‘FUN’
[16:09:39.138]  - needed namespaces: [n=0] 
[16:09:39.138] Finding globals ... DONE
[16:09:39.138]  - use_args: TRUE
[16:09:39.138]  - Getting '...' globals ...
[16:09:39.139]    - '...' content: [n=1] ‘b’
[16:09:39.139] List of 1
[16:09:39.139]  $ ...:List of 1
[16:09:39.139]   ..$ b:'data.frame':	2 obs. of  1 variable:
[16:09:39.139]   .. ..$ a: int [1:2] 1 2
[16:09:39.139]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.139]  - attr(*, "where")=List of 1
[16:09:39.139]   ..$ ...:<environment: 0x55ef0a9876d0> 
[16:09:39.139]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.139]  - attr(*, "resolved")= logi TRUE
[16:09:39.139]  - attr(*, "total_size")= num NA
[16:09:39.142]  - Getting '...' globals ... DONE
[16:09:39.142] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:09:39.142] List of 2
[16:09:39.142]  $ ...future.FUN:function (a, b)  
[16:09:39.142]  $ ...          :List of 1
[16:09:39.142]   ..$ b:'data.frame':	2 obs. of  1 variable:
[16:09:39.142]   .. ..$ a: int [1:2] 1 2
[16:09:39.142]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.142]  - attr(*, "where")=List of 2
[16:09:39.142]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:39.142]   ..$ ...          :<environment: 0x55ef0a9876d0> 
[16:09:39.142]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.142]  - attr(*, "resolved")= logi FALSE
[16:09:39.142]  - attr(*, "total_size")= num 1440
[16:09:39.146] Packages to be attached in all futures: [n=0] 
[16:09:39.146] getGlobalsAndPackagesXApply() ... DONE
[16:09:39.146] Number of futures (= number of chunks): 1
[16:09:39.146] Launching 1 futures (chunks) ...
[16:09:39.146] Chunk #1 of 1 ...
[16:09:39.146]  - Finding globals in 'X' for chunk #1 ...
[16:09:39.146]    + additional globals found: [n=0] 
[16:09:39.147]    + additional namespaces needed: [n=0] 
[16:09:39.147]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:39.147]  - seeds: <none>
[16:09:39.149] Created future:
[16:09:39.149] SequentialFuture:
[16:09:39.149] Label: ‘future_lapply-1’
[16:09:39.149] Expression:
[16:09:39.149] {
[16:09:39.149]     do.call(function(...) {
[16:09:39.149]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:39.149]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:39.149]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:39.149]             on.exit(options(oopts), add = TRUE)
[16:09:39.149]         }
[16:09:39.149]         {
[16:09:39.149]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:39.149]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:39.149]                 ...future.FUN(...future.X_jj, ...)
[16:09:39.149]             })
[16:09:39.149]         }
[16:09:39.149]     }, args = future.call.arguments)
[16:09:39.149] }
[16:09:39.149] Lazy evaluation: FALSE
[16:09:39.149] Asynchronous evaluation: FALSE
[16:09:39.149] Local evaluation: TRUE
[16:09:39.149] Environment: R_GlobalEnv
[16:09:39.149] Capture standard output: TRUE
[16:09:39.149] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:39.149] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:39.149] Packages: <none>
[16:09:39.149] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:39.149] Resolved: TRUE
[16:09:39.149] Value: 112 bytes of class ‘list’
[16:09:39.149] Early signaling: FALSE
[16:09:39.149] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:39.149] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:09:39.150] Chunk #1 of 1 ... DONE
[16:09:39.150] Launching 1 futures (chunks) ... DONE
[16:09:39.150] Resolving 1 futures (chunks) ...
[16:09:39.151]  - Number of value chunks collected: 1
[16:09:39.151] Resolving 1 futures (chunks) ... DONE
[16:09:39.151] Reducing values from 1 chunks ...
[16:09:39.151]  - Number of values collected after concatenation: 1
[16:09:39.151]  - Number of values expected: 1
[16:09:39.151] Reducing values from 1 chunks ... DONE
[16:09:39.151] future_lapply() ... DONE
[16:09:39.151] future_lapply() ...
[16:09:39.152] Number of chunks: 1
[16:09:39.152] getGlobalsAndPackagesXApply() ...
[16:09:39.152]  - future.globals: TRUE
[16:09:39.154]  - globals found/used: [n=1] ‘FUN’
[16:09:39.154]  - needed namespaces: [n=0] 
[16:09:39.154] Finding globals ... DONE
[16:09:39.154]  - use_args: TRUE
[16:09:39.154]  - Getting '...' globals ...
[16:09:39.154]    - '...' content: [n=1] ‘b’
[16:09:39.155] List of 1
[16:09:39.155]  $ ...:List of 1
[16:09:39.155]   ..$ b:<environment: 0x55ef083fe588> 
[16:09:39.155]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.155]  - attr(*, "where")=List of 1
[16:09:39.155]   ..$ ...:<environment: 0x55ef083fb210> 
[16:09:39.155]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.155]  - attr(*, "resolved")= logi TRUE
[16:09:39.155]  - attr(*, "total_size")= num NA
[16:09:39.157]  - Getting '...' globals ... DONE
[16:09:39.157] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:09:39.158] List of 2
[16:09:39.158]  $ ...future.FUN:function (a, b)  
[16:09:39.158]  $ ...          :List of 1
[16:09:39.158]   ..$ b:<environment: 0x55ef083fe588> 
[16:09:39.158]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.158]  - attr(*, "where")=List of 2
[16:09:39.158]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:39.158]   ..$ ...          :<environment: 0x55ef083fb210> 
[16:09:39.158]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.158]  - attr(*, "resolved")= logi FALSE
[16:09:39.158]  - attr(*, "total_size")= num 1440
[16:09:39.161] Packages to be attached in all futures: [n=0] 
[16:09:39.161] getGlobalsAndPackagesXApply() ... DONE
[16:09:39.161] Number of futures (= number of chunks): 1
[16:09:39.161] Launching 1 futures (chunks) ...
[16:09:39.161] Chunk #1 of 1 ...
[16:09:39.161]  - Finding globals in 'X' for chunk #1 ...
[16:09:39.161]    + additional globals found: [n=0] 
[16:09:39.161]    + additional namespaces needed: [n=0] 
[16:09:39.162]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:39.162]  - seeds: <none>
[16:09:39.164] Created future:
[16:09:39.164] SequentialFuture:
[16:09:39.164] Label: ‘future_lapply-1’
[16:09:39.164] Expression:
[16:09:39.164] {
[16:09:39.164]     do.call(function(...) {
[16:09:39.164]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:39.164]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:39.164]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:39.164]             on.exit(options(oopts), add = TRUE)
[16:09:39.164]         }
[16:09:39.164]         {
[16:09:39.164]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:39.164]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:39.164]                 ...future.FUN(...future.X_jj, ...)
[16:09:39.164]             })
[16:09:39.164]         }
[16:09:39.164]     }, args = future.call.arguments)
[16:09:39.164] }
[16:09:39.164] Lazy evaluation: FALSE
[16:09:39.164] Asynchronous evaluation: FALSE
[16:09:39.164] Local evaluation: TRUE
[16:09:39.164] Environment: R_GlobalEnv
[16:09:39.164] Capture standard output: TRUE
[16:09:39.164] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:39.164] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:39.164] Packages: <none>
[16:09:39.164] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:39.164] Resolved: TRUE
[16:09:39.164] Value: 120 bytes of class ‘list’
[16:09:39.164] Early signaling: FALSE
[16:09:39.164] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:39.164] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:09:39.165] Chunk #1 of 1 ... DONE
[16:09:39.165] Launching 1 futures (chunks) ... DONE
[16:09:39.165] Resolving 1 futures (chunks) ...
[16:09:39.166]  - Number of value chunks collected: 1
[16:09:39.166] Resolving 1 futures (chunks) ... DONE
[16:09:39.166] Reducing values from 1 chunks ...
[16:09:39.166]  - Number of values collected after concatenation: 1
[16:09:39.166]  - Number of values expected: 1
[16:09:39.166] Reducing values from 1 chunks ... DONE
[16:09:39.166] future_lapply() ... DONE
[16:09:39.166] future_lapply() ...
[16:09:39.167] Number of chunks: 1
[16:09:39.167] getGlobalsAndPackagesXApply() ...
[16:09:39.167]  - future.globals: TRUE
[16:09:39.169]  - globals found/used: [n=1] ‘FUN’
[16:09:39.169]  - needed namespaces: [n=0] 
[16:09:39.169] Finding globals ... DONE
[16:09:39.169]  - use_args: TRUE
[16:09:39.169]  - Getting '...' globals ...
[16:09:39.170]    - '...' content: [n=1] ‘b’
[16:09:39.170] List of 1
[16:09:39.170]  $ ...:List of 1
[16:09:39.170]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[16:09:39.170]   .. .. ..@ slots     :List of 4
[16:09:39.170]   .. .. .. ..$ .Data  : chr "function"
[16:09:39.170]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.170]   .. .. .. ..$ target : chr "signature"
[16:09:39.170]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.170]   .. .. .. ..$ defined: chr "signature"
[16:09:39.170]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.170]   .. .. .. ..$ generic: chr "character"
[16:09:39.170]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.170]   .. .. ..@ contains  :List of 3
[16:09:39.170]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.170]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:09:39.170]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ superClass: chr "function"
[16:09:39.170]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.170]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.170]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.170]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.170]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:39.170]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[16:09:39.170]   .. .. .. .. .. ..@ distance  : num 1
[16:09:39.170]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.170]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:09:39.170]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[16:09:39.170]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.170]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.170]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.170]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.170]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:39.170]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.170]   .. .. .. .. .. ..@ distance  : num 1
[16:09:39.170]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.170]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:09:39.170]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[16:09:39.170]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.170]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.170]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.170]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.170]   .. .. .. .. .. ..@ by        : chr "function"
[16:09:39.170]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.170]   .. .. .. .. .. ..@ distance  : num 2
[16:09:39.170]   .. .. ..@ virtual   : logi FALSE
[16:09:39.170]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[16:09:39.170]  list()
[16:09:39.170]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[16:09:39.170]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:09:39.170]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:09:39.170]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:09:39.170]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[16:09:39.170]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:09:39.170]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:09:39.170]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:09:39.170]   .. .. .. .. ..$ generic: chr(0) 
[16:09:39.170]   .. .. ..@ validity  : NULL
[16:09:39.170]   .. .. ..@ access    : list()
[16:09:39.170]   .. .. ..@ className : chr "MethodDefinition"
[16:09:39.170]   .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.170]   .. .. ..@ package   : chr "methods"
[16:09:39.170]   .. .. ..@ subclasses:List of 7
[16:09:39.170]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.170]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[16:09:39.170]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:39.170]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.170]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.170]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.170]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.170]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:39.170]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.170]   .. .. .. .. .. ..@ distance  : num 1
[16:09:39.170]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.170]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[16:09:39.170]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:39.170]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.170]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.170]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.170]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.170]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:39.170]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.170]   .. .. .. .. .. ..@ distance  : num 1
[16:09:39.170]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.170]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[16:09:39.170]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:39.170]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.170]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.170]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.170]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.170]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:39.170]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.170]   .. .. .. .. .. ..@ distance  : num 1
[16:09:39.170]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.170]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[16:09:39.170]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:39.170]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.170]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.170]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.170]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.170]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:39.170]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.170]   .. .. .. .. .. ..@ distance  : num 1
[16:09:39.170]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.170]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[16:09:39.170]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:39.170]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.170]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.170]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.170]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.170]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:09:39.170]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.170]   .. .. .. .. .. ..@ distance  : num 2
[16:09:39.170]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.170]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[16:09:39.170]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:39.170]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.170]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.170]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.170]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.170]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[16:09:39.170]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.170]   .. .. .. .. .. ..@ distance  : num 2
[16:09:39.170]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.170]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[16:09:39.170]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:39.170]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.170]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.170]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.170]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.170]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:09:39.170]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.170]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.170]   .. .. .. .. .. ..@ distance  : num 2
[16:09:39.170]   .. .. ..@ versionKey:<externalptr> 
[16:09:39.170]   .. .. ..@ sealed    : logi TRUE
[16:09:39.170]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.170]  - attr(*, "where")=List of 1
[16:09:39.170]   ..$ ...:<environment: 0x55ef0b7c2350> 
[16:09:39.170]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.170]  - attr(*, "resolved")= logi TRUE
[16:09:39.170]  - attr(*, "total_size")= num NA
[16:09:39.220]  - Getting '...' globals ... DONE
[16:09:39.220] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:09:39.220] List of 2
[16:09:39.220]  $ ...future.FUN:function (a, b)  
[16:09:39.220]  $ ...          :List of 1
[16:09:39.220]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[16:09:39.220]   .. .. ..@ slots     :List of 4
[16:09:39.220]   .. .. .. ..$ .Data  : chr "function"
[16:09:39.220]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.220]   .. .. .. ..$ target : chr "signature"
[16:09:39.220]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.220]   .. .. .. ..$ defined: chr "signature"
[16:09:39.220]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.220]   .. .. .. ..$ generic: chr "character"
[16:09:39.220]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.220]   .. .. ..@ contains  :List of 3
[16:09:39.220]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.220]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:09:39.220]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ superClass: chr "function"
[16:09:39.220]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.220]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.220]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.220]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.220]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:39.220]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[16:09:39.220]   .. .. .. .. .. ..@ distance  : num 1
[16:09:39.220]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.220]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:09:39.220]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[16:09:39.220]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.220]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.220]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.220]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.220]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:39.220]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.220]   .. .. .. .. .. ..@ distance  : num 1
[16:09:39.220]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.220]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:09:39.220]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[16:09:39.220]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.220]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.220]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.220]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.220]   .. .. .. .. .. ..@ by        : chr "function"
[16:09:39.220]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.220]   .. .. .. .. .. ..@ distance  : num 2
[16:09:39.220]   .. .. ..@ virtual   : logi FALSE
[16:09:39.220]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[16:09:39.220]  list()
[16:09:39.220]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[16:09:39.220]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:09:39.220]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:09:39.220]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:09:39.220]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[16:09:39.220]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:09:39.220]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:09:39.220]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:09:39.220]   .. .. .. .. ..$ generic: chr(0) 
[16:09:39.220]   .. .. ..@ validity  : NULL
[16:09:39.220]   .. .. ..@ access    : list()
[16:09:39.220]   .. .. ..@ className : chr "MethodDefinition"
[16:09:39.220]   .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.220]   .. .. ..@ package   : chr "methods"
[16:09:39.220]   .. .. ..@ subclasses:List of 7
[16:09:39.220]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.220]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[16:09:39.220]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:39.220]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.220]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.220]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.220]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.220]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:39.220]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.220]   .. .. .. .. .. ..@ distance  : num 1
[16:09:39.220]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.220]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[16:09:39.220]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:39.220]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.220]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.220]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.220]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.220]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:39.220]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.220]   .. .. .. .. .. ..@ distance  : num 1
[16:09:39.220]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.220]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[16:09:39.220]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:39.220]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.220]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.220]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.220]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.220]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:39.220]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.220]   .. .. .. .. .. ..@ distance  : num 1
[16:09:39.220]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.220]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[16:09:39.220]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:39.220]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.220]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.220]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.220]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.220]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:39.220]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.220]   .. .. .. .. .. ..@ distance  : num 1
[16:09:39.220]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.220]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[16:09:39.220]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:39.220]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.220]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.220]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.220]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.220]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:09:39.220]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.220]   .. .. .. .. .. ..@ distance  : num 2
[16:09:39.220]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.220]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[16:09:39.220]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:39.220]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.220]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.220]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.220]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.220]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[16:09:39.220]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.220]   .. .. .. .. .. ..@ distance  : num 2
[16:09:39.220]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.220]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[16:09:39.220]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:39.220]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.220]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.220]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.220]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.220]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:09:39.220]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.220]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.220]   .. .. .. .. .. ..@ distance  : num 2
[16:09:39.220]   .. .. ..@ versionKey:<externalptr> 
[16:09:39.220]   .. .. ..@ sealed    : logi TRUE
[16:09:39.220]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.220]  - attr(*, "where")=List of 2
[16:09:39.220]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:39.220]   ..$ ...          :<environment: 0x55ef0b7c2350> 
[16:09:39.220]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.220]  - attr(*, "resolved")= logi FALSE
[16:09:39.220]  - attr(*, "total_size")= num 312512
[16:09:39.267] Packages to be attached in all futures: [n=0] 
[16:09:39.268] getGlobalsAndPackagesXApply() ... DONE
[16:09:39.268] Number of futures (= number of chunks): 1
[16:09:39.268] Launching 1 futures (chunks) ...
[16:09:39.268] Chunk #1 of 1 ...
[16:09:39.268]  - Finding globals in 'X' for chunk #1 ...
[16:09:39.268]    + additional globals found: [n=0] 
[16:09:39.269]    + additional namespaces needed: [n=0] 
[16:09:39.269]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:39.269]  - seeds: <none>
[16:09:39.271] Created future:
[16:09:39.271] SequentialFuture:
[16:09:39.271] Label: ‘future_lapply-1’
[16:09:39.271] Expression:
[16:09:39.271] {
[16:09:39.271]     do.call(function(...) {
[16:09:39.271]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:39.271]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:39.271]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:39.271]             on.exit(options(oopts), add = TRUE)
[16:09:39.271]         }
[16:09:39.271]         {
[16:09:39.271]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:39.271]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:39.271]                 ...future.FUN(...future.X_jj, ...)
[16:09:39.271]             })
[16:09:39.271]         }
[16:09:39.271]     }, args = future.call.arguments)
[16:09:39.271] }
[16:09:39.271] Lazy evaluation: FALSE
[16:09:39.271] Asynchronous evaluation: FALSE
[16:09:39.271] Local evaluation: TRUE
[16:09:39.271] Environment: R_GlobalEnv
[16:09:39.271] Capture standard output: TRUE
[16:09:39.271] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:39.271] Globals: 5 objects totaling 305.24 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 303.78 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:39.271] Packages: <none>
[16:09:39.271] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:39.271] Resolved: TRUE
[16:09:39.271] Value: 112 bytes of class ‘list’
[16:09:39.271] Early signaling: FALSE
[16:09:39.271] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:39.271] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:09:39.272] Chunk #1 of 1 ... DONE
[16:09:39.273] Launching 1 futures (chunks) ... DONE
[16:09:39.273] Resolving 1 futures (chunks) ...
[16:09:39.273]  - Number of value chunks collected: 1
[16:09:39.273] Resolving 1 futures (chunks) ... DONE
[16:09:39.273] Reducing values from 1 chunks ...
[16:09:39.273]  - Number of values collected after concatenation: 1
[16:09:39.273]  - Number of values expected: 1
[16:09:39.273] Reducing values from 1 chunks ... DONE
[16:09:39.274] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[16:09:39.275] future_lapply() ...
[16:09:39.276] Number of chunks: 1
[16:09:39.276] getGlobalsAndPackagesXApply() ...
[16:09:39.276]  - future.globals: TRUE
[16:09:39.277]  - globals found/used: [n=1] ‘FUN’
[16:09:39.278]  - needed namespaces: [n=0] 
[16:09:39.278] Finding globals ... DONE
[16:09:39.278]  - use_args: TRUE
[16:09:39.278]  - Getting '...' globals ...
[16:09:39.278]    - '...' content: [n=0] 
[16:09:39.278] List of 1
[16:09:39.278]  $ ...: list()
[16:09:39.278]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.278]  - attr(*, "where")=List of 1
[16:09:39.278]   ..$ ...:<environment: 0x55ef09de1d78> 
[16:09:39.278]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.278]  - attr(*, "resolved")= logi TRUE
[16:09:39.278]  - attr(*, "total_size")= num NA
[16:09:39.281]  - Getting '...' globals ... DONE
[16:09:39.281] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:09:39.281] List of 2
[16:09:39.281]  $ ...future.FUN:function (f)  
[16:09:39.281]  $ ...          : list()
[16:09:39.281]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.281]  - attr(*, "where")=List of 2
[16:09:39.281]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:39.281]   ..$ ...          :<environment: 0x55ef09de1d78> 
[16:09:39.281]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.281]  - attr(*, "resolved")= logi FALSE
[16:09:39.281]  - attr(*, "total_size")= num 1008
[16:09:39.284] Packages to be attached in all futures: [n=0] 
[16:09:39.284] getGlobalsAndPackagesXApply() ... DONE
[16:09:39.284] Number of futures (= number of chunks): 1
[16:09:39.284] Launching 1 futures (chunks) ...
[16:09:39.284] Chunk #1 of 1 ...
[16:09:39.284]  - Finding globals in 'X' for chunk #1 ...
[16:09:39.287]    + additional globals found: [n=2] ‘a’, ‘b’
[16:09:39.287]    + additional namespaces needed: [n=1] ‘tools’
[16:09:39.287]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:39.287]  - Adjusted option 'future.globals.maxSize': 524288000 -> 4 * 524288000 = 2097152000 (bytes)
[16:09:39.287]  - seeds: <none>
[16:09:39.290] Created future:
[16:09:39.290] SequentialFuture:
[16:09:39.290] Label: ‘future_lapply-1’
[16:09:39.290] Expression:
[16:09:39.290] {
[16:09:39.290]     do.call(function(...) {
[16:09:39.290]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:39.290]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:39.290]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:39.290]             on.exit(options(oopts), add = TRUE)
[16:09:39.290]         }
[16:09:39.290]         {
[16:09:39.290]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:39.290]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:39.290]                 ...future.FUN(...future.X_jj, ...)
[16:09:39.290]             })
[16:09:39.290]         }
[16:09:39.290]     }, args = future.call.arguments)
[16:09:39.290] }
[16:09:39.290] Lazy evaluation: FALSE
[16:09:39.290] Asynchronous evaluation: FALSE
[16:09:39.290] Local evaluation: TRUE
[16:09:39.290] Environment: R_GlobalEnv
[16:09:39.290] Capture standard output: TRUE
[16:09:39.290] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:39.290] Globals: 7 objects totaling 7.49 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 6.40 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[16:09:39.290] Packages: 1 packages (‘tools’)
[16:09:39.290] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:39.290] Resolved: TRUE
[16:09:39.290] Value: 224 bytes of class ‘list’
[16:09:39.290] Early signaling: FALSE
[16:09:39.290] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:39.290] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:09:39.291] Chunk #1 of 1 ... DONE
[16:09:39.291] Launching 1 futures (chunks) ... DONE
[16:09:39.291] Resolving 1 futures (chunks) ...
[16:09:39.292]  - Number of value chunks collected: 1
[16:09:39.292] Resolving 1 futures (chunks) ... DONE
[16:09:39.292] Reducing values from 1 chunks ...
[16:09:39.292]  - Number of values collected after concatenation: 4
[16:09:39.292]  - Number of values expected: 4
[16:09:39.292] Reducing values from 1 chunks ... DONE
[16:09:39.292] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[16:09:39.295] future_lapply() ...
[16:09:39.296] Number of chunks: 1
[16:09:39.296] getGlobalsAndPackagesXApply() ...
[16:09:39.296]  - future.globals: TRUE
[16:09:39.298]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[16:09:39.298]  - needed namespaces: [n=0] 
[16:09:39.298] Finding globals ... DONE
[16:09:39.298]  - use_args: TRUE
[16:09:39.298]  - Getting '...' globals ...
[16:09:39.299]    - '...' content: [n=0] 
[16:09:39.299] List of 1
[16:09:39.299]  $ ...: list()
[16:09:39.299]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.299]  - attr(*, "where")=List of 1
[16:09:39.299]   ..$ ...:<environment: 0x55ef0b921598> 
[16:09:39.299]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.299]  - attr(*, "resolved")= logi TRUE
[16:09:39.299]  - attr(*, "total_size")= num NA
[16:09:39.301]  - Getting '...' globals ... DONE
[16:09:39.301] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[16:09:39.301] List of 3
[16:09:39.301]  $ ...future.FUN        :function (x)  
[16:09:39.301]  $ future.call.arguments:List of 1
[16:09:39.301]   ..$ a: num 1
[16:09:39.301]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.301]  $ ...                  : list()
[16:09:39.301]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.301]  - attr(*, "where")=List of 3
[16:09:39.301]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[16:09:39.301]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[16:09:39.301]   ..$ ...                  :<environment: 0x55ef0b921598> 
[16:09:39.301]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.301]  - attr(*, "resolved")= logi FALSE
[16:09:39.301]  - attr(*, "total_size")= num 1272
[16:09:39.307] Packages to be attached in all futures: [n=0] 
[16:09:39.307] getGlobalsAndPackagesXApply() ... DONE
[16:09:39.307] Number of futures (= number of chunks): 1
[16:09:39.307] Launching 1 futures (chunks) ...
[16:09:39.307] Chunk #1 of 1 ...
[16:09:39.307]  - Finding globals in 'X' for chunk #1 ...
[16:09:39.308]    + additional globals found: [n=0] 
[16:09:39.308]    + additional namespaces needed: [n=0] 
[16:09:39.308]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:39.308]  - seeds: <none>
[16:09:39.310] Created future:
[16:09:39.310] SequentialFuture:
[16:09:39.310] Label: ‘future_lapply-1’
[16:09:39.310] Expression:
[16:09:39.310] {
[16:09:39.310]     do.call(function(...) {
[16:09:39.310]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:39.310]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:39.310]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:39.310]             on.exit(options(oopts), add = TRUE)
[16:09:39.310]         }
[16:09:39.310]         {
[16:09:39.310]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:39.310]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:39.310]                 ...future.FUN(...future.X_jj)
[16:09:39.310]             })
[16:09:39.310]         }
[16:09:39.310]     }, args = future.call.arguments)
[16:09:39.310] }
[16:09:39.310] Lazy evaluation: FALSE
[16:09:39.310] Asynchronous evaluation: FALSE
[16:09:39.310] Local evaluation: TRUE
[16:09:39.310] Environment: 0x55ef0b921918
[16:09:39.310] Capture standard output: TRUE
[16:09:39.310] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:39.310] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:39.310] Packages: <none>
[16:09:39.310] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:39.310] Resolved: TRUE
[16:09:39.310] Value: 56 bytes of class ‘list’
[16:09:39.310] Early signaling: FALSE
[16:09:39.310] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:39.310] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:09:39.311] Chunk #1 of 1 ... DONE
[16:09:39.311] Launching 1 futures (chunks) ... DONE
[16:09:39.311] Resolving 1 futures (chunks) ...
[16:09:39.312]  - Number of value chunks collected: 1
[16:09:39.312] Resolving 1 futures (chunks) ... DONE
[16:09:39.312] Reducing values from 1 chunks ...
[16:09:39.312]  - Number of values collected after concatenation: 1
[16:09:39.312]  - Number of values expected: 1
[16:09:39.312] Reducing values from 1 chunks ... DONE
[16:09:39.312] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[16:09:39.314] future_lapply() ...
[16:09:39.314] Number of chunks: 1
[16:09:39.314] getGlobalsAndPackagesXApply() ...
[16:09:39.315]  - future.globals: TRUE
[16:09:39.317]  - globals found/used: [n=2] ‘FUN’, ‘a’
[16:09:39.317]  - needed namespaces: [n=0] 
[16:09:39.317] Finding globals ... DONE
[16:09:39.317]  - use_args: TRUE
[16:09:39.317]  - Getting '...' globals ...
[16:09:39.317]    - '...' content: [n=0] 
[16:09:39.317] List of 1
[16:09:39.317]  $ ...: list()
[16:09:39.317]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.317]  - attr(*, "where")=List of 1
[16:09:39.317]   ..$ ...:<environment: 0x55ef0a533038> 
[16:09:39.317]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.317]  - attr(*, "resolved")= logi TRUE
[16:09:39.317]  - attr(*, "total_size")= num NA
[16:09:39.320]  - Getting '...' globals ... DONE
[16:09:39.320] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[16:09:39.320] List of 3
[16:09:39.320]  $ ...future.FUN:function (ii)  
[16:09:39.320]  $ a            : num 1
[16:09:39.320]  $ ...          : list()
[16:09:39.320]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.320]  - attr(*, "where")=List of 3
[16:09:39.320]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:39.320]   ..$ a            :<environment: R_EmptyEnv> 
[16:09:39.320]   ..$ ...          :<environment: 0x55ef0a533038> 
[16:09:39.320]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.320]  - attr(*, "resolved")= logi FALSE
[16:09:39.320]  - attr(*, "total_size")= num 2984
[16:09:39.323] Packages to be attached in all futures: [n=0] 
[16:09:39.323] getGlobalsAndPackagesXApply() ... DONE
[16:09:39.323] Number of futures (= number of chunks): 1
[16:09:39.323] Launching 1 futures (chunks) ...
[16:09:39.324] Chunk #1 of 1 ...
[16:09:39.324]  - Finding globals in 'X' for chunk #1 ...
[16:09:39.324]    + additional globals found: [n=0] 
[16:09:39.324]    + additional namespaces needed: [n=0] 
[16:09:39.324]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:39.324]  - seeds: <none>
[16:09:39.326] Created future:
[16:09:39.327] SequentialFuture:
[16:09:39.327] Label: ‘future_lapply-1’
[16:09:39.327] Expression:
[16:09:39.327] {
[16:09:39.327]     do.call(function(...) {
[16:09:39.327]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:39.327]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:39.327]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:39.327]             on.exit(options(oopts), add = TRUE)
[16:09:39.327]         }
[16:09:39.327]         {
[16:09:39.327]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:39.327]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:39.327]                 ...future.FUN(...future.X_jj, ...)
[16:09:39.327]             })
[16:09:39.327]         }
[16:09:39.327]     }, args = future.call.arguments)
[16:09:39.327] }
[16:09:39.327] Lazy evaluation: FALSE
[16:09:39.327] Asynchronous evaluation: FALSE
[16:09:39.327] Local evaluation: TRUE
[16:09:39.327] Environment: R_GlobalEnv
[16:09:39.327] Capture standard output: TRUE
[16:09:39.327] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:39.327] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:09:39.327] Packages: <none>
[16:09:39.327] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:39.327] Resolved: TRUE
[16:09:39.327] Value: 56 bytes of class ‘list’
[16:09:39.327] Early signaling: FALSE
[16:09:39.327] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:39.327] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:09:39.328] Chunk #1 of 1 ... DONE
[16:09:39.328] Launching 1 futures (chunks) ... DONE
[16:09:39.328] Resolving 1 futures (chunks) ...
[16:09:39.328]  - Number of value chunks collected: 1
[16:09:39.328] Resolving 1 futures (chunks) ... DONE
[16:09:39.328] Reducing values from 1 chunks ...
[16:09:39.328]  - Number of values collected after concatenation: 1
[16:09:39.328]  - Number of values expected: 1
[16:09:39.329] Reducing values from 1 chunks ... DONE
[16:09:39.329] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[16:09:39.329] future_lapply() ...
[16:09:39.330] Number of chunks: 1
[16:09:39.330] getGlobalsAndPackagesXApply() ...
[16:09:39.330]  - future.globals: TRUE
[16:09:39.332]  - globals found/used: [n=2] ‘FUN’, ‘a’
[16:09:39.332]  - needed namespaces: [n=0] 
[16:09:39.332] Finding globals ... DONE
[16:09:39.332]  - use_args: TRUE
[16:09:39.332]  - Getting '...' globals ...
[16:09:39.332]    - '...' content: [n=0] 
[16:09:39.333] List of 1
[16:09:39.333]  $ ...: list()
[16:09:39.333]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.333]  - attr(*, "where")=List of 1
[16:09:39.333]   ..$ ...:<environment: 0x55ef081c0d90> 
[16:09:39.333]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.333]  - attr(*, "resolved")= logi TRUE
[16:09:39.333]  - attr(*, "total_size")= num NA
[16:09:39.335]  - Getting '...' globals ... DONE
[16:09:39.335] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[16:09:39.335] List of 3
[16:09:39.335]  $ ...future.FUN:function (ii)  
[16:09:39.335]  $ a            : num 1
[16:09:39.335]  $ ...          : list()
[16:09:39.335]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.335]  - attr(*, "where")=List of 3
[16:09:39.335]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:39.335]   ..$ a            :<environment: R_EmptyEnv> 
[16:09:39.335]   ..$ ...          :<environment: 0x55ef081c0d90> 
[16:09:39.335]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.335]  - attr(*, "resolved")= logi FALSE
[16:09:39.335]  - attr(*, "total_size")= num 2984
[16:09:39.338] Packages to be attached in all futures: [n=0] 
[16:09:39.338] getGlobalsAndPackagesXApply() ... DONE
[16:09:39.339] Number of futures (= number of chunks): 1
[16:09:39.339] Launching 1 futures (chunks) ...
[16:09:39.339] Chunk #1 of 1 ...
[16:09:39.339]  - Finding globals in 'X' for chunk #1 ...
[16:09:39.339]    + additional globals found: [n=0] 
[16:09:39.339]    + additional namespaces needed: [n=0] 
[16:09:39.339]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:39.339]  - seeds: <none>
[16:09:39.342] Created future:
[16:09:39.342] SequentialFuture:
[16:09:39.342] Label: ‘future_lapply-1’
[16:09:39.342] Expression:
[16:09:39.342] {
[16:09:39.342]     do.call(function(...) {
[16:09:39.342]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:39.342]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:39.342]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:39.342]             on.exit(options(oopts), add = TRUE)
[16:09:39.342]         }
[16:09:39.342]         {
[16:09:39.342]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:39.342]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:39.342]                 ...future.FUN(...future.X_jj, ...)
[16:09:39.342]             })
[16:09:39.342]         }
[16:09:39.342]     }, args = future.call.arguments)
[16:09:39.342] }
[16:09:39.342] Lazy evaluation: FALSE
[16:09:39.342] Asynchronous evaluation: FALSE
[16:09:39.342] Local evaluation: TRUE
[16:09:39.342] Environment: R_GlobalEnv
[16:09:39.342] Capture standard output: TRUE
[16:09:39.342] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:39.342] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:09:39.342] Packages: <none>
[16:09:39.342] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:39.342] Resolved: TRUE
[16:09:39.342] Value: 56 bytes of class ‘list’
[16:09:39.342] Early signaling: FALSE
[16:09:39.342] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:39.342] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:09:39.343] Chunk #1 of 1 ... DONE
[16:09:39.343] Launching 1 futures (chunks) ... DONE
[16:09:39.343] Resolving 1 futures (chunks) ...
[16:09:39.343]  - Number of value chunks collected: 1
[16:09:39.343] Resolving 1 futures (chunks) ... DONE
[16:09:39.343] Reducing values from 1 chunks ...
[16:09:39.344]  - Number of values collected after concatenation: 1
[16:09:39.344]  - Number of values expected: 1
[16:09:39.344] Reducing values from 1 chunks ... DONE
[16:09:39.344] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[16:09:39.344] future_lapply() ...
[16:09:39.344] Number of chunks: 1
[16:09:39.345] getGlobalsAndPackagesXApply() ...
[16:09:39.345]  - future.globals: <name-value list> with names ‘42’
[16:09:39.345]  - use_args: TRUE
[16:09:39.345]  - Getting '...' globals ...
[16:09:39.345]    - '...' content: [n=0] 
[16:09:39.345] List of 1
[16:09:39.345]  $ ...: list()
[16:09:39.345]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.345]  - attr(*, "where")=List of 1
[16:09:39.345]   ..$ ...:<environment: 0x55ef0bb5d708> 
[16:09:39.345]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.345]  - attr(*, "resolved")= logi TRUE
[16:09:39.345]  - attr(*, "total_size")= num NA
[16:09:39.349]  - Getting '...' globals ... DONE
[16:09:39.349] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[16:09:39.350] List of 3
[16:09:39.350]  $ a            : num 42
[16:09:39.350]  $ ...future.FUN:function (x)  
[16:09:39.350]  $ ...          : list()
[16:09:39.350]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.350]  - attr(*, "where")=List of 3
[16:09:39.350]   ..$ a            :<environment: R_EmptyEnv> 
[16:09:39.350]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[16:09:39.350]   ..$ ...          :<environment: 0x55ef0bb5d708> 
[16:09:39.350]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.350]  - attr(*, "resolved")= logi FALSE
[16:09:39.350]  - attr(*, "total_size")= num NA
[16:09:39.353] Packages to be attached in all futures: [n=0] 
[16:09:39.353] getGlobalsAndPackagesXApply() ... DONE
[16:09:39.353] Number of futures (= number of chunks): 1
[16:09:39.353] Launching 1 futures (chunks) ...
[16:09:39.353] Chunk #1 of 1 ...
[16:09:39.353]  - seeds: <none>
[16:09:39.356] Created future:
[16:09:39.356] SequentialFuture:
[16:09:39.356] Label: ‘future_lapply-1’
[16:09:39.356] Expression:
[16:09:39.356] {
[16:09:39.356]     do.call(function(...) {
[16:09:39.356]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:39.356]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:39.356]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:39.356]             on.exit(options(oopts), add = TRUE)
[16:09:39.356]         }
[16:09:39.356]         {
[16:09:39.356]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:39.356]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:39.356]                 ...future.FUN(...future.X_jj, ...)
[16:09:39.356]             })
[16:09:39.356]         }
[16:09:39.356]     }, args = future.call.arguments)
[16:09:39.356] }
[16:09:39.356] Lazy evaluation: FALSE
[16:09:39.356] Asynchronous evaluation: FALSE
[16:09:39.356] Local evaluation: TRUE
[16:09:39.356] Environment: R_GlobalEnv
[16:09:39.356] Capture standard output: TRUE
[16:09:39.356] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:39.356] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:09:39.356] Packages: <none>
[16:09:39.356] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:39.356] Resolved: TRUE
[16:09:39.356] Value: 56 bytes of class ‘list’
[16:09:39.356] Early signaling: FALSE
[16:09:39.356] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:39.356] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:09:39.357] Chunk #1 of 1 ... DONE
[16:09:39.357] Launching 1 futures (chunks) ... DONE
[16:09:39.357] Resolving 1 futures (chunks) ...
[16:09:39.358]  - Number of value chunks collected: 1
[16:09:39.358] Resolving 1 futures (chunks) ... DONE
[16:09:39.358] Reducing values from 1 chunks ...
[16:09:39.358]  - Number of values collected after concatenation: 1
[16:09:39.358]  - Number of values expected: 1
[16:09:39.358] Reducing values from 1 chunks ... DONE
[16:09:39.358] future_lapply() ... DONE
List of 1
 $ : num 42
[16:09:39.365] future_lapply() ...
[16:09:39.371] Number of chunks: 2
[16:09:39.371] getGlobalsAndPackagesXApply() ...
[16:09:39.371]  - future.globals: TRUE
[16:09:39.376]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[16:09:39.376]  - needed namespaces: [n=0] 
[16:09:39.376] Finding globals ... DONE
[16:09:39.376]  - use_args: TRUE
[16:09:39.376]  - Getting '...' globals ...
[16:09:39.376]    - '...' content: [n=0] 
[16:09:39.376] List of 1
[16:09:39.376]  $ ...: list()
[16:09:39.376]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.376]  - attr(*, "where")=List of 1
[16:09:39.376]   ..$ ...:<environment: 0x55ef09fe19d0> 
[16:09:39.376]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.376]  - attr(*, "resolved")= logi TRUE
[16:09:39.376]  - attr(*, "total_size")= num NA
[16:09:39.379]  - Getting '...' globals ... DONE
[16:09:39.379] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[16:09:39.379] List of 6
[16:09:39.379]  $ ...future.FUN:function (i)  
[16:09:39.379]  $ caller       :function (a, b, FUN = call_my_add)  
[16:09:39.379]  $ args         :List of 1
[16:09:39.379]   ..$ FUN:function (a, b)  
[16:09:39.379]  $ call_my_add  :function (a, b)  
[16:09:39.379]  $ my_add       :function (a, b)  
[16:09:39.379]  $ ...          : list()
[16:09:39.379]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.379]  - attr(*, "where")=List of 6
[16:09:39.379]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:39.379]   ..$ caller       :<environment: R_EmptyEnv> 
[16:09:39.379]   ..$ args         :<environment: R_EmptyEnv> 
[16:09:39.379]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[16:09:39.379]   ..$ my_add       :<environment: R_EmptyEnv> 
[16:09:39.379]   ..$ ...          :<environment: 0x55ef09fe19d0> 
[16:09:39.379]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.379]  - attr(*, "resolved")= logi FALSE
[16:09:39.379]  - attr(*, "total_size")= num 24120
[16:09:39.384] Packages to be attached in all futures: [n=0] 
[16:09:39.384] getGlobalsAndPackagesXApply() ... DONE
[16:09:39.384] Number of futures (= number of chunks): 2
[16:09:39.384] Launching 2 futures (chunks) ...
[16:09:39.384] Chunk #1 of 2 ...
[16:09:39.384]  - Finding globals in 'X' for chunk #1 ...
[16:09:39.384]    + additional globals found: [n=0] 
[16:09:39.385]    + additional namespaces needed: [n=0] 
[16:09:39.385]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:39.385]  - seeds: <none>
[16:09:39.394] Created future:
[16:09:39.394] MulticoreFuture:
[16:09:39.394] Label: ‘future_lapply-1’
[16:09:39.394] Expression:
[16:09:39.394] {
[16:09:39.394]     do.call(function(...) {
[16:09:39.394]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:39.394]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:39.394]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:39.394]             on.exit(options(oopts), add = TRUE)
[16:09:39.394]         }
[16:09:39.394]         {
[16:09:39.394]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:39.394]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:39.394]                 ...future.FUN(...future.X_jj, ...)
[16:09:39.394]             })
[16:09:39.394]         }
[16:09:39.394]     }, args = future.call.arguments)
[16:09:39.394] }
[16:09:39.394] Lazy evaluation: FALSE
[16:09:39.394] Asynchronous evaluation: TRUE
[16:09:39.394] Local evaluation: TRUE
[16:09:39.394] Environment: 0x55ef0a3cb3a0
[16:09:39.394] Capture standard output: TRUE
[16:09:39.394] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:39.394] Globals: 9 objects totaling 23.61 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[16:09:39.394] Packages: <none>
[16:09:39.394] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:39.394] Resolved: TRUE
[16:09:39.394] Value: <not collected>
[16:09:39.394] Conditions captured: <none>
[16:09:39.394] Early signaling: FALSE
[16:09:39.394] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:39.394] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:39.403] Chunk #1 of 2 ... DONE
[16:09:39.403] Chunk #2 of 2 ...
[16:09:39.403]  - Finding globals in 'X' for chunk #2 ...
[16:09:39.404]    + additional globals found: [n=0] 
[16:09:39.404]    + additional namespaces needed: [n=0] 
[16:09:39.404]  - Finding globals in 'X' for chunk #2 ... DONE
[16:09:39.404]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:09:39.405]  - seeds: <none>
[16:09:39.414] Created future:
[16:09:39.415] MulticoreFuture:
[16:09:39.415] Label: ‘future_lapply-2’
[16:09:39.415] Expression:
[16:09:39.415] {
[16:09:39.415]     do.call(function(...) {
[16:09:39.415]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:39.415]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:39.415]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:39.415]             on.exit(options(oopts), add = TRUE)
[16:09:39.415]         }
[16:09:39.415]         {
[16:09:39.415]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:39.415]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:39.415]                 ...future.FUN(...future.X_jj, ...)
[16:09:39.415]             })
[16:09:39.415]         }
[16:09:39.415]     }, args = future.call.arguments)
[16:09:39.415] }
[16:09:39.415] Lazy evaluation: FALSE
[16:09:39.415] Asynchronous evaluation: TRUE
[16:09:39.415] Local evaluation: TRUE
[16:09:39.415] Environment: 0x55ef0a3cb3a0
[16:09:39.415] Capture standard output: TRUE
[16:09:39.415] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:39.415] Globals: 9 objects totaling 23.66 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[16:09:39.415] Packages: <none>
[16:09:39.415] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:39.415] Resolved: TRUE
[16:09:39.415] Value: <not collected>
[16:09:39.415] Conditions captured: <none>
[16:09:39.415] Early signaling: FALSE
[16:09:39.415] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:39.415] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:39.423] Chunk #2 of 2 ... DONE
[16:09:39.423] Launching 2 futures (chunks) ... DONE
[16:09:39.423] Resolving 2 futures (chunks) ...
[16:09:39.433]  - Number of value chunks collected: 2
[16:09:39.433] Resolving 2 futures (chunks) ... DONE
[16:09:39.433] Reducing values from 2 chunks ...
[16:09:39.433]  - Number of values collected after concatenation: 3
[16:09:39.433]  - Number of values expected: 3
[16:09:39.433] Reducing values from 2 chunks ... DONE
[16:09:39.433] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[16:09:39.433] future_lapply() ...
[16:09:39.439] Number of chunks: 1
[16:09:39.439] getGlobalsAndPackagesXApply() ...
[16:09:39.439]  - future.globals: TRUE
[16:09:39.443]  - globals found/used: [n=1] ‘FUN’
[16:09:39.443]  - needed namespaces: [n=0] 
[16:09:39.443] Finding globals ... DONE
[16:09:39.443]  - use_args: TRUE
[16:09:39.443]  - Getting '...' globals ...
[16:09:39.444]    - '...' content: [n=1] ‘what’
[16:09:39.444] List of 1
[16:09:39.444]  $ ...:List of 1
[16:09:39.444]   ..$ what:function (x)  
[16:09:39.444]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.444]  - attr(*, "where")=List of 1
[16:09:39.444]   ..$ ...:<environment: 0x55ef0aca82a0> 
[16:09:39.444]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.444]  - attr(*, "resolved")= logi TRUE
[16:09:39.444]  - attr(*, "total_size")= num NA
[16:09:39.447]  - Getting '...' globals ... DONE
[16:09:39.448] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:09:39.448] List of 2
[16:09:39.448]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[16:09:39.448]  $ ...          :List of 1
[16:09:39.448]   ..$ what:function (x)  
[16:09:39.448]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.448]  - attr(*, "where")=List of 2
[16:09:39.448]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:39.448]   ..$ ...          :<environment: 0x55ef0aca82a0> 
[16:09:39.448]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.448]  - attr(*, "resolved")= logi FALSE
[16:09:39.448]  - attr(*, "total_size")= num 12192
[16:09:39.451] Packages to be attached in all futures: [n=0] 
[16:09:39.451] getGlobalsAndPackagesXApply() ... DONE
[16:09:39.452] Number of futures (= number of chunks): 1
[16:09:39.452] Launching 1 futures (chunks) ...
[16:09:39.452] Chunk #1 of 1 ...
[16:09:39.452]  - Finding globals in 'X' for chunk #1 ...
[16:09:39.452]    + additional globals found: [n=0] 
[16:09:39.452]    + additional namespaces needed: [n=0] 
[16:09:39.453]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:39.453]  - seeds: <none>
[16:09:39.461] Created future:
[16:09:39.461] MulticoreFuture:
[16:09:39.461] Label: ‘future_lapply-1’
[16:09:39.461] Expression:
[16:09:39.461] {
[16:09:39.461]     do.call(function(...) {
[16:09:39.461]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:39.461]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:39.461]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:39.461]             on.exit(options(oopts), add = TRUE)
[16:09:39.461]         }
[16:09:39.461]         {
[16:09:39.461]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:39.461]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:39.461]                 ...future.FUN(...future.X_jj, ...)
[16:09:39.461]             })
[16:09:39.461]         }
[16:09:39.461]     }, args = future.call.arguments)
[16:09:39.461] }
[16:09:39.461] Lazy evaluation: FALSE
[16:09:39.461] Asynchronous evaluation: TRUE
[16:09:39.461] Local evaluation: TRUE
[16:09:39.461] Environment: R_GlobalEnv
[16:09:39.461] Capture standard output: TRUE
[16:09:39.461] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:39.461] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:39.461] Packages: <none>
[16:09:39.461] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:39.461] Resolved: TRUE
[16:09:39.461] Value: <not collected>
[16:09:39.461] Conditions captured: <none>
[16:09:39.461] Early signaling: FALSE
[16:09:39.461] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:39.461] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:39.470] Chunk #1 of 1 ... DONE
[16:09:39.470] Launching 1 futures (chunks) ... DONE
[16:09:39.470] Resolving 1 futures (chunks) ...
[16:09:39.472]  - Number of value chunks collected: 1
[16:09:39.472] Resolving 1 futures (chunks) ... DONE
[16:09:39.472] Reducing values from 1 chunks ...
[16:09:39.472]  - Number of values collected after concatenation: 1
[16:09:39.473]  - Number of values expected: 1
[16:09:39.473] Reducing values from 1 chunks ... DONE
[16:09:39.473] future_lapply() ... DONE
[16:09:39.473] future_lapply() ...
[16:09:39.479] Number of chunks: 1
[16:09:39.479] getGlobalsAndPackagesXApply() ...
[16:09:39.479]  - future.globals: TRUE
[16:09:39.483]  - globals found/used: [n=1] ‘FUN’
[16:09:39.483]  - needed namespaces: [n=0] 
[16:09:39.483] Finding globals ... DONE
[16:09:39.483]  - use_args: TRUE
[16:09:39.483]  - Getting '...' globals ...
[16:09:39.484]    - '...' content: [n=1] ‘what’
[16:09:39.484] List of 1
[16:09:39.484]  $ ...:List of 1
[16:09:39.484]   ..$ what:function (...)  
[16:09:39.484]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.484]  - attr(*, "where")=List of 1
[16:09:39.484]   ..$ ...:<environment: 0x55ef09913b68> 
[16:09:39.484]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.484]  - attr(*, "resolved")= logi TRUE
[16:09:39.484]  - attr(*, "total_size")= num NA
[16:09:39.487]  - Getting '...' globals ... DONE
[16:09:39.487] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:09:39.488] List of 2
[16:09:39.488]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[16:09:39.488]  $ ...          :List of 1
[16:09:39.488]   ..$ what:function (...)  
[16:09:39.488]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.488]  - attr(*, "where")=List of 2
[16:09:39.488]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:39.488]   ..$ ...          :<environment: 0x55ef09913b68> 
[16:09:39.488]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.488]  - attr(*, "resolved")= logi FALSE
[16:09:39.488]  - attr(*, "total_size")= num 13352
[16:09:39.491] Packages to be attached in all futures: [n=0] 
[16:09:39.491] getGlobalsAndPackagesXApply() ... DONE
[16:09:39.491] Number of futures (= number of chunks): 1
[16:09:39.492] Launching 1 futures (chunks) ...
[16:09:39.492] Chunk #1 of 1 ...
[16:09:39.492]  - Finding globals in 'X' for chunk #1 ...
[16:09:39.492]    + additional globals found: [n=0] 
[16:09:39.492]    + additional namespaces needed: [n=0] 
[16:09:39.493]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:39.493]  - seeds: <none>
[16:09:39.501] Created future:
[16:09:39.502] MulticoreFuture:
[16:09:39.502] Label: ‘future_lapply-1’
[16:09:39.502] Expression:
[16:09:39.502] {
[16:09:39.502]     do.call(function(...) {
[16:09:39.502]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:39.502]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:39.502]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:39.502]             on.exit(options(oopts), add = TRUE)
[16:09:39.502]         }
[16:09:39.502]         {
[16:09:39.502]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:39.502]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:39.502]                 ...future.FUN(...future.X_jj, ...)
[16:09:39.502]             })
[16:09:39.502]         }
[16:09:39.502]     }, args = future.call.arguments)
[16:09:39.502] }
[16:09:39.502] Lazy evaluation: FALSE
[16:09:39.502] Asynchronous evaluation: TRUE
[16:09:39.502] Local evaluation: TRUE
[16:09:39.502] Environment: R_GlobalEnv
[16:09:39.502] Capture standard output: TRUE
[16:09:39.502] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:39.502] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:39.502] Packages: <none>
[16:09:39.502] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:39.502] Resolved: TRUE
[16:09:39.502] Value: <not collected>
[16:09:39.502] Conditions captured: <none>
[16:09:39.502] Early signaling: FALSE
[16:09:39.502] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:39.502] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:39.511] Chunk #1 of 1 ... DONE
[16:09:39.511] Launching 1 futures (chunks) ... DONE
[16:09:39.511] Resolving 1 futures (chunks) ...
[16:09:39.513]  - Number of value chunks collected: 1
[16:09:39.513] Resolving 1 futures (chunks) ... DONE
[16:09:39.513] Reducing values from 1 chunks ...
[16:09:39.513]  - Number of values collected after concatenation: 1
[16:09:39.513]  - Number of values expected: 1
[16:09:39.513] Reducing values from 1 chunks ... DONE
[16:09:39.514] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[16:09:39.514] future_lapply() ...
[16:09:39.519] Number of chunks: 1
[16:09:39.519] getGlobalsAndPackagesXApply() ...
[16:09:39.519]  - future.globals: TRUE
[16:09:39.522]  - globals found/used: [n=1] ‘FUN’
[16:09:39.522]  - needed namespaces: [n=0] 
[16:09:39.522] Finding globals ... DONE
[16:09:39.522]  - use_args: TRUE
[16:09:39.522]  - Getting '...' globals ...
[16:09:39.523]    - '...' content: [n=1] ‘b’
[16:09:39.525] List of 1
[16:09:39.525]  $ ...:List of 1
[16:09:39.525]   ..$ b:'data.frame':	2 obs. of  1 variable:
[16:09:39.525]   .. ..$ a: int [1:2] 1 2
[16:09:39.525]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.525]  - attr(*, "where")=List of 1
[16:09:39.525]   ..$ ...:<environment: 0x55ef0baa46b8> 
[16:09:39.525]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.525]  - attr(*, "resolved")= logi TRUE
[16:09:39.525]  - attr(*, "total_size")= num NA
[16:09:39.530]  - Getting '...' globals ... DONE
[16:09:39.530] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:09:39.530] List of 2
[16:09:39.530]  $ ...future.FUN:function (a, b)  
[16:09:39.530]  $ ...          :List of 1
[16:09:39.530]   ..$ b:'data.frame':	2 obs. of  1 variable:
[16:09:39.530]   .. ..$ a: int [1:2] 1 2
[16:09:39.530]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.530]  - attr(*, "where")=List of 2
[16:09:39.530]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:39.530]   ..$ ...          :<environment: 0x55ef0baa46b8> 
[16:09:39.530]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.530]  - attr(*, "resolved")= logi FALSE
[16:09:39.530]  - attr(*, "total_size")= num 1440
[16:09:39.534] Packages to be attached in all futures: [n=0] 
[16:09:39.534] getGlobalsAndPackagesXApply() ... DONE
[16:09:39.534] Number of futures (= number of chunks): 1
[16:09:39.535] Launching 1 futures (chunks) ...
[16:09:39.535] Chunk #1 of 1 ...
[16:09:39.535]  - Finding globals in 'X' for chunk #1 ...
[16:09:39.535]    + additional globals found: [n=0] 
[16:09:39.535]    + additional namespaces needed: [n=0] 
[16:09:39.535]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:39.536]  - seeds: <none>
[16:09:39.544] Created future:
[16:09:39.544] MulticoreFuture:
[16:09:39.544] Label: ‘future_lapply-1’
[16:09:39.544] Expression:
[16:09:39.544] {
[16:09:39.544]     do.call(function(...) {
[16:09:39.544]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:39.544]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:39.544]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:39.544]             on.exit(options(oopts), add = TRUE)
[16:09:39.544]         }
[16:09:39.544]         {
[16:09:39.544]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:39.544]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:39.544]                 ...future.FUN(...future.X_jj, ...)
[16:09:39.544]             })
[16:09:39.544]         }
[16:09:39.544]     }, args = future.call.arguments)
[16:09:39.544] }
[16:09:39.544] Lazy evaluation: FALSE
[16:09:39.544] Asynchronous evaluation: TRUE
[16:09:39.544] Local evaluation: TRUE
[16:09:39.544] Environment: R_GlobalEnv
[16:09:39.544] Capture standard output: TRUE
[16:09:39.544] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:39.544] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:39.544] Packages: <none>
[16:09:39.544] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:39.544] Resolved: TRUE
[16:09:39.544] Value: <not collected>
[16:09:39.544] Conditions captured: <none>
[16:09:39.544] Early signaling: FALSE
[16:09:39.544] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:39.544] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:39.553] Chunk #1 of 1 ... DONE
[16:09:39.553] Launching 1 futures (chunks) ... DONE
[16:09:39.553] Resolving 1 futures (chunks) ...
[16:09:39.555]  - Number of value chunks collected: 1
[16:09:39.555] Resolving 1 futures (chunks) ... DONE
[16:09:39.555] Reducing values from 1 chunks ...
[16:09:39.555]  - Number of values collected after concatenation: 1
[16:09:39.555]  - Number of values expected: 1
[16:09:39.555] Reducing values from 1 chunks ... DONE
[16:09:39.556] future_lapply() ... DONE
[16:09:39.556] future_lapply() ...
[16:09:39.560] Number of chunks: 1
[16:09:39.561] getGlobalsAndPackagesXApply() ...
[16:09:39.561]  - future.globals: TRUE
[16:09:39.563]  - globals found/used: [n=1] ‘FUN’
[16:09:39.563]  - needed namespaces: [n=0] 
[16:09:39.563] Finding globals ... DONE
[16:09:39.563]  - use_args: TRUE
[16:09:39.564]  - Getting '...' globals ...
[16:09:39.564]    - '...' content: [n=1] ‘b’
[16:09:39.564] List of 1
[16:09:39.564]  $ ...:List of 1
[16:09:39.564]   ..$ b:<environment: 0x55ef0a2a6f10> 
[16:09:39.564]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.564]  - attr(*, "where")=List of 1
[16:09:39.564]   ..$ ...:<environment: 0x55ef0a2a79c8> 
[16:09:39.564]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.564]  - attr(*, "resolved")= logi TRUE
[16:09:39.564]  - attr(*, "total_size")= num NA
[16:09:39.569]  - Getting '...' globals ... DONE
[16:09:39.569] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:09:39.569] List of 2
[16:09:39.569]  $ ...future.FUN:function (a, b)  
[16:09:39.569]  $ ...          :List of 1
[16:09:39.569]   ..$ b:<environment: 0x55ef0a2a6f10> 
[16:09:39.569]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.569]  - attr(*, "where")=List of 2
[16:09:39.569]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:39.569]   ..$ ...          :<environment: 0x55ef0a2a79c8> 
[16:09:39.569]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.569]  - attr(*, "resolved")= logi FALSE
[16:09:39.569]  - attr(*, "total_size")= num 1440
[16:09:39.573] Packages to be attached in all futures: [n=0] 
[16:09:39.573] getGlobalsAndPackagesXApply() ... DONE
[16:09:39.573] Number of futures (= number of chunks): 1
[16:09:39.573] Launching 1 futures (chunks) ...
[16:09:39.573] Chunk #1 of 1 ...
[16:09:39.574]  - Finding globals in 'X' for chunk #1 ...
[16:09:39.574]    + additional globals found: [n=0] 
[16:09:39.574]    + additional namespaces needed: [n=0] 
[16:09:39.574]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:39.574]  - seeds: <none>
[16:09:39.582] Created future:
[16:09:39.583] MulticoreFuture:
[16:09:39.583] Label: ‘future_lapply-1’
[16:09:39.583] Expression:
[16:09:39.583] {
[16:09:39.583]     do.call(function(...) {
[16:09:39.583]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:39.583]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:39.583]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:39.583]             on.exit(options(oopts), add = TRUE)
[16:09:39.583]         }
[16:09:39.583]         {
[16:09:39.583]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:39.583]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:39.583]                 ...future.FUN(...future.X_jj, ...)
[16:09:39.583]             })
[16:09:39.583]         }
[16:09:39.583]     }, args = future.call.arguments)
[16:09:39.583] }
[16:09:39.583] Lazy evaluation: FALSE
[16:09:39.583] Asynchronous evaluation: TRUE
[16:09:39.583] Local evaluation: TRUE
[16:09:39.583] Environment: R_GlobalEnv
[16:09:39.583] Capture standard output: TRUE
[16:09:39.583] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:39.583] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:39.583] Packages: <none>
[16:09:39.583] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:39.583] Resolved: TRUE
[16:09:39.583] Value: <not collected>
[16:09:39.583] Conditions captured: <none>
[16:09:39.583] Early signaling: FALSE
[16:09:39.583] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:39.583] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:39.592] Chunk #1 of 1 ... DONE
[16:09:39.592] Launching 1 futures (chunks) ... DONE
[16:09:39.592] Resolving 1 futures (chunks) ...
[16:09:39.593]  - Number of value chunks collected: 1
[16:09:39.594] Resolving 1 futures (chunks) ... DONE
[16:09:39.594] Reducing values from 1 chunks ...
[16:09:39.594]  - Number of values collected after concatenation: 1
[16:09:39.594]  - Number of values expected: 1
[16:09:39.594] Reducing values from 1 chunks ... DONE
[16:09:39.594] future_lapply() ... DONE
[16:09:39.594] future_lapply() ...
[16:09:39.599] Number of chunks: 1
[16:09:39.599] getGlobalsAndPackagesXApply() ...
[16:09:39.599]  - future.globals: TRUE
[16:09:39.602]  - globals found/used: [n=1] ‘FUN’
[16:09:39.602]  - needed namespaces: [n=0] 
[16:09:39.602] Finding globals ... DONE
[16:09:39.602]  - use_args: TRUE
[16:09:39.602]  - Getting '...' globals ...
[16:09:39.603]    - '...' content: [n=1] ‘b’
[16:09:39.603] List of 1
[16:09:39.603]  $ ...:List of 1
[16:09:39.603]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[16:09:39.603]   .. .. ..@ slots     :List of 4
[16:09:39.603]   .. .. .. ..$ .Data  : chr "function"
[16:09:39.603]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.603]   .. .. .. ..$ target : chr "signature"
[16:09:39.603]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.603]   .. .. .. ..$ defined: chr "signature"
[16:09:39.603]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.603]   .. .. .. ..$ generic: chr "character"
[16:09:39.603]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.603]   .. .. ..@ contains  :List of 3
[16:09:39.603]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.603]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:09:39.603]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ superClass: chr "function"
[16:09:39.603]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.603]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.603]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.603]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.603]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:39.603]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[16:09:39.603]   .. .. .. .. .. ..@ distance  : num 1
[16:09:39.603]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.603]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:09:39.603]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[16:09:39.603]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.603]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.603]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.603]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.603]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:39.603]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.603]   .. .. .. .. .. ..@ distance  : num 1
[16:09:39.603]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.603]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:09:39.603]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[16:09:39.603]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.603]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.603]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.603]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.603]   .. .. .. .. .. ..@ by        : chr "function"
[16:09:39.603]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.603]   .. .. .. .. .. ..@ distance  : num 2
[16:09:39.603]   .. .. ..@ virtual   : logi FALSE
[16:09:39.603]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[16:09:39.603]  list()
[16:09:39.603]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[16:09:39.603]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:09:39.603]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:09:39.603]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:09:39.603]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[16:09:39.603]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:09:39.603]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:09:39.603]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:09:39.603]   .. .. .. .. ..$ generic: chr(0) 
[16:09:39.603]   .. .. ..@ validity  : NULL
[16:09:39.603]   .. .. ..@ access    : list()
[16:09:39.603]   .. .. ..@ className : chr "MethodDefinition"
[16:09:39.603]   .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.603]   .. .. ..@ package   : chr "methods"
[16:09:39.603]   .. .. ..@ subclasses:List of 7
[16:09:39.603]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.603]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[16:09:39.603]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:39.603]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.603]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.603]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.603]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.603]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:39.603]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.603]   .. .. .. .. .. ..@ distance  : num 1
[16:09:39.603]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.603]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[16:09:39.603]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:39.603]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.603]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.603]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.603]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.603]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:39.603]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.603]   .. .. .. .. .. ..@ distance  : num 1
[16:09:39.603]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.603]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[16:09:39.603]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:39.603]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.603]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.603]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.603]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.603]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:39.603]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.603]   .. .. .. .. .. ..@ distance  : num 1
[16:09:39.603]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.603]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[16:09:39.603]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:39.603]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.603]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.603]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.603]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.603]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:39.603]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.603]   .. .. .. .. .. ..@ distance  : num 1
[16:09:39.603]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.603]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[16:09:39.603]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:39.603]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.603]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.603]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.603]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.603]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:09:39.603]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.603]   .. .. .. .. .. ..@ distance  : num 2
[16:09:39.603]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.603]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[16:09:39.603]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:39.603]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.603]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.603]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.603]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.603]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[16:09:39.603]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.603]   .. .. .. .. .. ..@ distance  : num 2
[16:09:39.603]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.603]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[16:09:39.603]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:39.603]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.603]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.603]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.603]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.603]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:09:39.603]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.603]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.603]   .. .. .. .. .. ..@ distance  : num 2
[16:09:39.603]   .. .. ..@ versionKey:<externalptr> 
[16:09:39.603]   .. .. ..@ sealed    : logi TRUE
[16:09:39.603]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.603]  - attr(*, "where")=List of 1
[16:09:39.603]   ..$ ...:<environment: 0x55ef0b4bea50> 
[16:09:39.603]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.603]  - attr(*, "resolved")= logi TRUE
[16:09:39.603]  - attr(*, "total_size")= num NA
[16:09:39.660]  - Getting '...' globals ... DONE
[16:09:39.660] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:09:39.660] List of 2
[16:09:39.660]  $ ...future.FUN:function (a, b)  
[16:09:39.660]  $ ...          :List of 1
[16:09:39.660]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[16:09:39.660]   .. .. ..@ slots     :List of 4
[16:09:39.660]   .. .. .. ..$ .Data  : chr "function"
[16:09:39.660]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.660]   .. .. .. ..$ target : chr "signature"
[16:09:39.660]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.660]   .. .. .. ..$ defined: chr "signature"
[16:09:39.660]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.660]   .. .. .. ..$ generic: chr "character"
[16:09:39.660]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.660]   .. .. ..@ contains  :List of 3
[16:09:39.660]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.660]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:09:39.660]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ superClass: chr "function"
[16:09:39.660]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.660]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.660]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.660]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.660]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:39.660]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[16:09:39.660]   .. .. .. .. .. ..@ distance  : num 1
[16:09:39.660]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.660]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:09:39.660]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[16:09:39.660]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.660]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.660]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.660]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.660]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:39.660]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.660]   .. .. .. .. .. ..@ distance  : num 1
[16:09:39.660]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.660]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:09:39.660]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[16:09:39.660]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.660]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.660]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.660]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.660]   .. .. .. .. .. ..@ by        : chr "function"
[16:09:39.660]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.660]   .. .. .. .. .. ..@ distance  : num 2
[16:09:39.660]   .. .. ..@ virtual   : logi FALSE
[16:09:39.660]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[16:09:39.660]  list()
[16:09:39.660]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[16:09:39.660]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:09:39.660]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:09:39.660]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:09:39.660]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[16:09:39.660]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:09:39.660]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:09:39.660]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:09:39.660]   .. .. .. .. ..$ generic: chr(0) 
[16:09:39.660]   .. .. ..@ validity  : NULL
[16:09:39.660]   .. .. ..@ access    : list()
[16:09:39.660]   .. .. ..@ className : chr "MethodDefinition"
[16:09:39.660]   .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.660]   .. .. ..@ package   : chr "methods"
[16:09:39.660]   .. .. ..@ subclasses:List of 7
[16:09:39.660]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.660]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[16:09:39.660]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:39.660]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.660]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.660]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.660]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.660]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:39.660]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.660]   .. .. .. .. .. ..@ distance  : num 1
[16:09:39.660]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.660]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[16:09:39.660]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:39.660]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.660]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.660]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.660]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.660]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:39.660]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.660]   .. .. .. .. .. ..@ distance  : num 1
[16:09:39.660]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.660]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[16:09:39.660]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:39.660]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.660]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.660]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.660]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.660]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:39.660]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.660]   .. .. .. .. .. ..@ distance  : num 1
[16:09:39.660]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.660]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[16:09:39.660]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:39.660]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.660]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.660]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.660]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.660]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:39.660]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.660]   .. .. .. .. .. ..@ distance  : num 1
[16:09:39.660]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.660]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[16:09:39.660]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:39.660]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.660]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.660]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.660]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.660]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:09:39.660]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.660]   .. .. .. .. .. ..@ distance  : num 2
[16:09:39.660]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.660]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[16:09:39.660]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:39.660]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.660]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.660]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.660]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.660]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[16:09:39.660]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.660]   .. .. .. .. .. ..@ distance  : num 2
[16:09:39.660]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:39.660]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[16:09:39.660]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:39.660]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:39.660]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:39.660]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:39.660]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:39.660]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:09:39.660]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:39.660]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:39.660]   .. .. .. .. .. ..@ distance  : num 2
[16:09:39.660]   .. .. ..@ versionKey:<externalptr> 
[16:09:39.660]   .. .. ..@ sealed    : logi TRUE
[16:09:39.660]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.660]  - attr(*, "where")=List of 2
[16:09:39.660]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:39.660]   ..$ ...          :<environment: 0x55ef0b4bea50> 
[16:09:39.660]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.660]  - attr(*, "resolved")= logi FALSE
[16:09:39.660]  - attr(*, "total_size")= num 312512
[16:09:39.706] Packages to be attached in all futures: [n=0] 
[16:09:39.706] getGlobalsAndPackagesXApply() ... DONE
[16:09:39.707] Number of futures (= number of chunks): 1
[16:09:39.707] Launching 1 futures (chunks) ...
[16:09:39.707] Chunk #1 of 1 ...
[16:09:39.707]  - Finding globals in 'X' for chunk #1 ...
[16:09:39.707]    + additional globals found: [n=0] 
[16:09:39.707]    + additional namespaces needed: [n=0] 
[16:09:39.708]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:39.708]  - seeds: <none>
[16:09:39.715] Created future:
[16:09:39.715] MulticoreFuture:
[16:09:39.715] Label: ‘future_lapply-1’
[16:09:39.715] Expression:
[16:09:39.715] {
[16:09:39.715]     do.call(function(...) {
[16:09:39.715]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:39.715]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:39.715]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:39.715]             on.exit(options(oopts), add = TRUE)
[16:09:39.715]         }
[16:09:39.715]         {
[16:09:39.715]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:39.715]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:39.715]                 ...future.FUN(...future.X_jj, ...)
[16:09:39.715]             })
[16:09:39.715]         }
[16:09:39.715]     }, args = future.call.arguments)
[16:09:39.715] }
[16:09:39.715] Lazy evaluation: FALSE
[16:09:39.715] Asynchronous evaluation: TRUE
[16:09:39.715] Local evaluation: TRUE
[16:09:39.715] Environment: R_GlobalEnv
[16:09:39.715] Capture standard output: TRUE
[16:09:39.715] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:39.715] Globals: 5 objects totaling 305.24 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 303.78 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:39.715] Packages: <none>
[16:09:39.715] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:39.715] Resolved: TRUE
[16:09:39.715] Value: <not collected>
[16:09:39.715] Conditions captured: <none>
[16:09:39.715] Early signaling: FALSE
[16:09:39.715] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:39.715] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:39.724] Chunk #1 of 1 ... DONE
[16:09:39.725] Launching 1 futures (chunks) ... DONE
[16:09:39.725] Resolving 1 futures (chunks) ...
[16:09:39.726]  - Number of value chunks collected: 1
[16:09:39.727] Resolving 1 futures (chunks) ... DONE
[16:09:39.727] Reducing values from 1 chunks ...
[16:09:39.727]  - Number of values collected after concatenation: 1
[16:09:39.727]  - Number of values expected: 1
[16:09:39.727] Reducing values from 1 chunks ... DONE
[16:09:39.727] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[16:09:39.730] future_lapply() ...
[16:09:39.735] Number of chunks: 2
[16:09:39.735] getGlobalsAndPackagesXApply() ...
[16:09:39.736]  - future.globals: TRUE
[16:09:39.738]  - globals found/used: [n=1] ‘FUN’
[16:09:39.738]  - needed namespaces: [n=0] 
[16:09:39.738] Finding globals ... DONE
[16:09:39.738]  - use_args: TRUE
[16:09:39.738]  - Getting '...' globals ...
[16:09:39.738]    - '...' content: [n=0] 
[16:09:39.739] List of 1
[16:09:39.739]  $ ...: list()
[16:09:39.739]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.739]  - attr(*, "where")=List of 1
[16:09:39.739]   ..$ ...:<environment: 0x55ef08aea638> 
[16:09:39.739]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.739]  - attr(*, "resolved")= logi TRUE
[16:09:39.739]  - attr(*, "total_size")= num NA
[16:09:39.742]  - Getting '...' globals ... DONE
[16:09:39.742] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:09:39.742] List of 2
[16:09:39.742]  $ ...future.FUN:function (f)  
[16:09:39.742]  $ ...          : list()
[16:09:39.742]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.742]  - attr(*, "where")=List of 2
[16:09:39.742]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:39.742]   ..$ ...          :<environment: 0x55ef08aea638> 
[16:09:39.742]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.742]  - attr(*, "resolved")= logi FALSE
[16:09:39.742]  - attr(*, "total_size")= num 1008
[16:09:39.745] Packages to be attached in all futures: [n=0] 
[16:09:39.745] getGlobalsAndPackagesXApply() ... DONE
[16:09:39.746] Number of futures (= number of chunks): 2
[16:09:39.746] Launching 2 futures (chunks) ...
[16:09:39.746] Chunk #1 of 2 ...
[16:09:39.746]  - Finding globals in 'X' for chunk #1 ...
[16:09:39.748]    + additional globals found: [n=2] ‘a’, ‘b’
[16:09:39.748]    + additional namespaces needed: [n=0] 
[16:09:39.748]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:39.749]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:09:39.749]  - seeds: <none>
[16:09:39.757] Created future:
[16:09:39.757] MulticoreFuture:
[16:09:39.757] Label: ‘future_lapply-1’
[16:09:39.757] Expression:
[16:09:39.757] {
[16:09:39.757]     do.call(function(...) {
[16:09:39.757]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:39.757]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:39.757]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:39.757]             on.exit(options(oopts), add = TRUE)
[16:09:39.757]         }
[16:09:39.757]         {
[16:09:39.757]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:39.757]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:39.757]                 ...future.FUN(...future.X_jj, ...)
[16:09:39.757]             })
[16:09:39.757]         }
[16:09:39.757]     }, args = future.call.arguments)
[16:09:39.757] }
[16:09:39.757] Lazy evaluation: FALSE
[16:09:39.757] Asynchronous evaluation: TRUE
[16:09:39.757] Local evaluation: TRUE
[16:09:39.757] Environment: R_GlobalEnv
[16:09:39.757] Capture standard output: TRUE
[16:09:39.757] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:39.757] Globals: 7 objects totaling 3.48 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[16:09:39.757] Packages: <none>
[16:09:39.757] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:39.757] Resolved: TRUE
[16:09:39.757] Value: <not collected>
[16:09:39.757] Conditions captured: <none>
[16:09:39.757] Early signaling: FALSE
[16:09:39.757] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:39.757] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:39.766] Chunk #1 of 2 ... DONE
[16:09:39.766] Chunk #2 of 2 ...
[16:09:39.766]  - Finding globals in 'X' for chunk #2 ...
[16:09:39.769]    + additional globals found: [n=2] ‘a’, ‘b’
[16:09:39.769]    + additional namespaces needed: [n=1] ‘tools’
[16:09:39.770]  - Finding globals in 'X' for chunk #2 ... DONE
[16:09:39.770]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:09:39.770]  - seeds: <none>
[16:09:39.783] Created future:
[16:09:39.783] MulticoreFuture:
[16:09:39.783] Label: ‘future_lapply-2’
[16:09:39.783] Expression:
[16:09:39.783] {
[16:09:39.783]     do.call(function(...) {
[16:09:39.783]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:39.783]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:39.783]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:39.783]             on.exit(options(oopts), add = TRUE)
[16:09:39.783]         }
[16:09:39.783]         {
[16:09:39.783]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:39.783]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:39.783]                 ...future.FUN(...future.X_jj, ...)
[16:09:39.783]             })
[16:09:39.783]         }
[16:09:39.783]     }, args = future.call.arguments)
[16:09:39.783] }
[16:09:39.783] Lazy evaluation: FALSE
[16:09:39.783] Asynchronous evaluation: TRUE
[16:09:39.783] Local evaluation: TRUE
[16:09:39.783] Environment: R_GlobalEnv
[16:09:39.783] Capture standard output: TRUE
[16:09:39.783] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:39.783] Globals: 7 objects totaling 5.11 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.02 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[16:09:39.783] Packages: 1 packages (‘tools’)
[16:09:39.783] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:39.783] Resolved: TRUE
[16:09:39.783] Value: <not collected>
[16:09:39.783] Conditions captured: <none>
[16:09:39.783] Early signaling: FALSE
[16:09:39.783] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:39.783] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:39.793] Chunk #2 of 2 ... DONE
[16:09:39.793] Launching 2 futures (chunks) ... DONE
[16:09:39.793] Resolving 2 futures (chunks) ...
[16:09:39.796]  - Number of value chunks collected: 2
[16:09:39.796] Resolving 2 futures (chunks) ... DONE
[16:09:39.796] Reducing values from 2 chunks ...
[16:09:39.797]  - Number of values collected after concatenation: 4
[16:09:39.797]  - Number of values expected: 4
[16:09:39.797] Reducing values from 2 chunks ... DONE
[16:09:39.797] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[16:09:39.801] future_lapply() ...
[16:09:39.806] Number of chunks: 1
[16:09:39.806] getGlobalsAndPackagesXApply() ...
[16:09:39.806]  - future.globals: TRUE
[16:09:39.809]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[16:09:39.810]  - needed namespaces: [n=0] 
[16:09:39.810] Finding globals ... DONE
[16:09:39.810]  - use_args: TRUE
[16:09:39.810]  - Getting '...' globals ...
[16:09:39.810]    - '...' content: [n=0] 
[16:09:39.810] List of 1
[16:09:39.810]  $ ...: list()
[16:09:39.810]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.810]  - attr(*, "where")=List of 1
[16:09:39.810]   ..$ ...:<environment: 0x55ef0a793ab0> 
[16:09:39.810]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.810]  - attr(*, "resolved")= logi TRUE
[16:09:39.810]  - attr(*, "total_size")= num NA
[16:09:39.813]  - Getting '...' globals ... DONE
[16:09:39.814] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[16:09:39.814] List of 3
[16:09:39.814]  $ ...future.FUN        :function (x)  
[16:09:39.814]  $ future.call.arguments:List of 1
[16:09:39.814]   ..$ a: num 1
[16:09:39.814]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.814]  $ ...                  : list()
[16:09:39.814]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.814]  - attr(*, "where")=List of 3
[16:09:39.814]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[16:09:39.814]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[16:09:39.814]   ..$ ...                  :<environment: 0x55ef0a793ab0> 
[16:09:39.814]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.814]  - attr(*, "resolved")= logi FALSE
[16:09:39.814]  - attr(*, "total_size")= num 1272
[16:09:39.818] Packages to be attached in all futures: [n=0] 
[16:09:39.819] getGlobalsAndPackagesXApply() ... DONE
[16:09:39.819] Number of futures (= number of chunks): 1
[16:09:39.819] Launching 1 futures (chunks) ...
[16:09:39.819] Chunk #1 of 1 ...
[16:09:39.819]  - Finding globals in 'X' for chunk #1 ...
[16:09:39.820]    + additional globals found: [n=0] 
[16:09:39.820]    + additional namespaces needed: [n=0] 
[16:09:39.820]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:39.820]  - seeds: <none>
[16:09:39.829] Created future:
[16:09:39.829] MulticoreFuture:
[16:09:39.829] Label: ‘future_lapply-1’
[16:09:39.829] Expression:
[16:09:39.829] {
[16:09:39.829]     do.call(function(...) {
[16:09:39.829]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:39.829]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:39.829]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:39.829]             on.exit(options(oopts), add = TRUE)
[16:09:39.829]         }
[16:09:39.829]         {
[16:09:39.829]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:39.829]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:39.829]                 ...future.FUN(...future.X_jj)
[16:09:39.829]             })
[16:09:39.829]         }
[16:09:39.829]     }, args = future.call.arguments)
[16:09:39.829] }
[16:09:39.829] Lazy evaluation: FALSE
[16:09:39.829] Asynchronous evaluation: TRUE
[16:09:39.829] Local evaluation: TRUE
[16:09:39.829] Environment: 0x55ef0a793730
[16:09:39.829] Capture standard output: TRUE
[16:09:39.829] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:39.829] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:39.829] Packages: <none>
[16:09:39.829] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:39.829] Resolved: TRUE
[16:09:39.829] Value: <not collected>
[16:09:39.829] Conditions captured: <none>
[16:09:39.829] Early signaling: FALSE
[16:09:39.829] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:39.829] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:39.838] Chunk #1 of 1 ... DONE
[16:09:39.838] Launching 1 futures (chunks) ... DONE
[16:09:39.838] Resolving 1 futures (chunks) ...
[16:09:39.840]  - Number of value chunks collected: 1
[16:09:39.840] Resolving 1 futures (chunks) ... DONE
[16:09:39.840] Reducing values from 1 chunks ...
[16:09:39.840]  - Number of values collected after concatenation: 1
[16:09:39.840]  - Number of values expected: 1
[16:09:39.840] Reducing values from 1 chunks ... DONE
[16:09:39.840] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[16:09:39.842] future_lapply() ...
[16:09:39.847] Number of chunks: 1
[16:09:39.847] getGlobalsAndPackagesXApply() ...
[16:09:39.847]  - future.globals: TRUE
[16:09:39.850]  - globals found/used: [n=2] ‘FUN’, ‘a’
[16:09:39.850]  - needed namespaces: [n=0] 
[16:09:39.850] Finding globals ... DONE
[16:09:39.851]  - use_args: TRUE
[16:09:39.851]  - Getting '...' globals ...
[16:09:39.851]    - '...' content: [n=0] 
[16:09:39.851] List of 1
[16:09:39.851]  $ ...: list()
[16:09:39.851]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.851]  - attr(*, "where")=List of 1
[16:09:39.851]   ..$ ...:<environment: 0x55ef0b28abb0> 
[16:09:39.851]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.851]  - attr(*, "resolved")= logi TRUE
[16:09:39.851]  - attr(*, "total_size")= num NA
[16:09:39.854]  - Getting '...' globals ... DONE
[16:09:39.854] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[16:09:39.855] List of 3
[16:09:39.855]  $ ...future.FUN:function (ii)  
[16:09:39.855]  $ a            : num 1
[16:09:39.855]  $ ...          : list()
[16:09:39.855]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.855]  - attr(*, "where")=List of 3
[16:09:39.855]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:39.855]   ..$ a            :<environment: R_EmptyEnv> 
[16:09:39.855]   ..$ ...          :<environment: 0x55ef0b28abb0> 
[16:09:39.855]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.855]  - attr(*, "resolved")= logi FALSE
[16:09:39.855]  - attr(*, "total_size")= num 2984
[16:09:39.858] Packages to be attached in all futures: [n=0] 
[16:09:39.859] getGlobalsAndPackagesXApply() ... DONE
[16:09:39.859] Number of futures (= number of chunks): 1
[16:09:39.859] Launching 1 futures (chunks) ...
[16:09:39.859] Chunk #1 of 1 ...
[16:09:39.859]  - Finding globals in 'X' for chunk #1 ...
[16:09:39.860]    + additional globals found: [n=0] 
[16:09:39.860]    + additional namespaces needed: [n=0] 
[16:09:39.860]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:39.860]  - seeds: <none>
[16:09:39.868] Created future:
[16:09:39.869] MulticoreFuture:
[16:09:39.869] Label: ‘future_lapply-1’
[16:09:39.869] Expression:
[16:09:39.869] {
[16:09:39.869]     do.call(function(...) {
[16:09:39.869]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:39.869]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:39.869]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:39.869]             on.exit(options(oopts), add = TRUE)
[16:09:39.869]         }
[16:09:39.869]         {
[16:09:39.869]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:39.869]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:39.869]                 ...future.FUN(...future.X_jj, ...)
[16:09:39.869]             })
[16:09:39.869]         }
[16:09:39.869]     }, args = future.call.arguments)
[16:09:39.869] }
[16:09:39.869] Lazy evaluation: FALSE
[16:09:39.869] Asynchronous evaluation: TRUE
[16:09:39.869] Local evaluation: TRUE
[16:09:39.869] Environment: R_GlobalEnv
[16:09:39.869] Capture standard output: TRUE
[16:09:39.869] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:39.869] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:09:39.869] Packages: <none>
[16:09:39.869] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:39.869] Resolved: TRUE
[16:09:39.869] Value: <not collected>
[16:09:39.869] Conditions captured: <none>
[16:09:39.869] Early signaling: FALSE
[16:09:39.869] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:39.869] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:39.881] Chunk #1 of 1 ... DONE
[16:09:39.881] Launching 1 futures (chunks) ... DONE
[16:09:39.881] Resolving 1 futures (chunks) ...
[16:09:39.885]  - Number of value chunks collected: 1
[16:09:39.885] Resolving 1 futures (chunks) ... DONE
[16:09:39.885] Reducing values from 1 chunks ...
[16:09:39.885]  - Number of values collected after concatenation: 1
[16:09:39.885]  - Number of values expected: 1
[16:09:39.885] Reducing values from 1 chunks ... DONE
[16:09:39.885] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[16:09:39.886] future_lapply() ...
[16:09:39.891] Number of chunks: 1
[16:09:39.891] getGlobalsAndPackagesXApply() ...
[16:09:39.891]  - future.globals: TRUE
[16:09:39.893]  - globals found/used: [n=2] ‘FUN’, ‘a’
[16:09:39.894]  - needed namespaces: [n=0] 
[16:09:39.894] Finding globals ... DONE
[16:09:39.894]  - use_args: TRUE
[16:09:39.894]  - Getting '...' globals ...
[16:09:39.894]    - '...' content: [n=0] 
[16:09:39.895] List of 1
[16:09:39.895]  $ ...: list()
[16:09:39.895]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.895]  - attr(*, "where")=List of 1
[16:09:39.895]   ..$ ...:<environment: 0x55ef0ace6338> 
[16:09:39.895]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.895]  - attr(*, "resolved")= logi TRUE
[16:09:39.895]  - attr(*, "total_size")= num NA
[16:09:39.898]  - Getting '...' globals ... DONE
[16:09:39.898] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[16:09:39.899] List of 3
[16:09:39.899]  $ ...future.FUN:function (ii)  
[16:09:39.899]  $ a            : num 1
[16:09:39.899]  $ ...          : list()
[16:09:39.899]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.899]  - attr(*, "where")=List of 3
[16:09:39.899]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:39.899]   ..$ a            :<environment: R_EmptyEnv> 
[16:09:39.899]   ..$ ...          :<environment: 0x55ef0ace6338> 
[16:09:39.899]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.899]  - attr(*, "resolved")= logi FALSE
[16:09:39.899]  - attr(*, "total_size")= num 2984
[16:09:39.904] Packages to be attached in all futures: [n=0] 
[16:09:39.904] getGlobalsAndPackagesXApply() ... DONE
[16:09:39.904] Number of futures (= number of chunks): 1
[16:09:39.904] Launching 1 futures (chunks) ...
[16:09:39.904] Chunk #1 of 1 ...
[16:09:39.905]  - Finding globals in 'X' for chunk #1 ...
[16:09:39.905]    + additional globals found: [n=0] 
[16:09:39.905]    + additional namespaces needed: [n=0] 
[16:09:39.905]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:39.906]  - seeds: <none>
[16:09:39.913] Created future:
[16:09:39.914] MulticoreFuture:
[16:09:39.914] Label: ‘future_lapply-1’
[16:09:39.914] Expression:
[16:09:39.914] {
[16:09:39.914]     do.call(function(...) {
[16:09:39.914]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:39.914]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:39.914]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:39.914]             on.exit(options(oopts), add = TRUE)
[16:09:39.914]         }
[16:09:39.914]         {
[16:09:39.914]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:39.914]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:39.914]                 ...future.FUN(...future.X_jj, ...)
[16:09:39.914]             })
[16:09:39.914]         }
[16:09:39.914]     }, args = future.call.arguments)
[16:09:39.914] }
[16:09:39.914] Lazy evaluation: FALSE
[16:09:39.914] Asynchronous evaluation: TRUE
[16:09:39.914] Local evaluation: TRUE
[16:09:39.914] Environment: R_GlobalEnv
[16:09:39.914] Capture standard output: TRUE
[16:09:39.914] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:39.914] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:09:39.914] Packages: <none>
[16:09:39.914] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:39.914] Resolved: TRUE
[16:09:39.914] Value: <not collected>
[16:09:39.914] Conditions captured: <none>
[16:09:39.914] Early signaling: FALSE
[16:09:39.914] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:39.914] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:39.922] Chunk #1 of 1 ... DONE
[16:09:39.923] Launching 1 futures (chunks) ... DONE
[16:09:39.923] Resolving 1 futures (chunks) ...
[16:09:39.925]  - Number of value chunks collected: 1
[16:09:39.925] Resolving 1 futures (chunks) ... DONE
[16:09:39.925] Reducing values from 1 chunks ...
[16:09:39.925]  - Number of values collected after concatenation: 1
[16:09:39.925]  - Number of values expected: 1
[16:09:39.925] Reducing values from 1 chunks ... DONE
[16:09:39.925] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[16:09:39.926] future_lapply() ...
[16:09:39.930] Number of chunks: 1
[16:09:39.930] getGlobalsAndPackagesXApply() ...
[16:09:39.930]  - future.globals: <name-value list> with names ‘42’
[16:09:39.930]  - use_args: TRUE
[16:09:39.931]  - Getting '...' globals ...
[16:09:39.931]    - '...' content: [n=0] 
[16:09:39.931] List of 1
[16:09:39.931]  $ ...: list()
[16:09:39.931]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.931]  - attr(*, "where")=List of 1
[16:09:39.931]   ..$ ...:<environment: 0x55ef09cac180> 
[16:09:39.931]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.931]  - attr(*, "resolved")= logi TRUE
[16:09:39.931]  - attr(*, "total_size")= num NA
[16:09:39.935]  - Getting '...' globals ... DONE
[16:09:39.935] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[16:09:39.935] List of 3
[16:09:39.935]  $ a            : num 42
[16:09:39.935]  $ ...future.FUN:function (x)  
[16:09:39.935]  $ ...          : list()
[16:09:39.935]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:39.935]  - attr(*, "where")=List of 3
[16:09:39.935]   ..$ a            :<environment: R_EmptyEnv> 
[16:09:39.935]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[16:09:39.935]   ..$ ...          :<environment: 0x55ef09cac180> 
[16:09:39.935]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:39.935]  - attr(*, "resolved")= logi FALSE
[16:09:39.935]  - attr(*, "total_size")= num NA
[16:09:39.939] Packages to be attached in all futures: [n=0] 
[16:09:39.939] getGlobalsAndPackagesXApply() ... DONE
[16:09:39.939] Number of futures (= number of chunks): 1
[16:09:39.939] Launching 1 futures (chunks) ...
[16:09:39.939] Chunk #1 of 1 ...
[16:09:39.939]  - seeds: <none>
[16:09:39.948] Created future:
[16:09:39.948] MulticoreFuture:
[16:09:39.948] Label: ‘future_lapply-1’
[16:09:39.948] Expression:
[16:09:39.948] {
[16:09:39.948]     do.call(function(...) {
[16:09:39.948]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:39.948]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:39.948]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:39.948]             on.exit(options(oopts), add = TRUE)
[16:09:39.948]         }
[16:09:39.948]         {
[16:09:39.948]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:39.948]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:39.948]                 ...future.FUN(...future.X_jj, ...)
[16:09:39.948]             })
[16:09:39.948]         }
[16:09:39.948]     }, args = future.call.arguments)
[16:09:39.948] }
[16:09:39.948] Lazy evaluation: FALSE
[16:09:39.948] Asynchronous evaluation: TRUE
[16:09:39.948] Local evaluation: TRUE
[16:09:39.948] Environment: R_GlobalEnv
[16:09:39.948] Capture standard output: TRUE
[16:09:39.948] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:39.948] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:09:39.948] Packages: <none>
[16:09:39.948] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:39.948] Resolved: TRUE
[16:09:39.948] Value: <not collected>
[16:09:39.948] Conditions captured: <none>
[16:09:39.948] Early signaling: FALSE
[16:09:39.948] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:39.948] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:39.956] Chunk #1 of 1 ... DONE
[16:09:39.956] Launching 1 futures (chunks) ... DONE
[16:09:39.956] Resolving 1 futures (chunks) ...
[16:09:39.958]  - Number of value chunks collected: 1
[16:09:39.958] Resolving 1 futures (chunks) ... DONE
[16:09:39.958] Reducing values from 1 chunks ...
[16:09:39.958]  - Number of values collected after concatenation: 1
[16:09:39.958]  - Number of values expected: 1
[16:09:39.958] Reducing values from 1 chunks ... DONE
[16:09:39.959] future_lapply() ... DONE
List of 1
 $ : num 42
[16:09:40.338] future_lapply() ...
[16:09:40.355] Number of chunks: 2
[16:09:40.355] getGlobalsAndPackagesXApply() ...
[16:09:40.355]  - future.globals: TRUE
[16:09:40.360]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[16:09:40.360]  - needed namespaces: [n=0] 
[16:09:40.360] Finding globals ... DONE
[16:09:40.360]  - use_args: TRUE
[16:09:40.360]  - Getting '...' globals ...
[16:09:40.361]    - '...' content: [n=0] 
[16:09:40.361] List of 1
[16:09:40.361]  $ ...: list()
[16:09:40.361]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:40.361]  - attr(*, "where")=List of 1
[16:09:40.361]   ..$ ...:<environment: 0x55ef0bbab170> 
[16:09:40.361]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:40.361]  - attr(*, "resolved")= logi TRUE
[16:09:40.361]  - attr(*, "total_size")= num NA
[16:09:40.363]  - Getting '...' globals ... DONE
[16:09:40.364] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[16:09:40.364] List of 6
[16:09:40.364]  $ ...future.FUN:function (i)  
[16:09:40.364]  $ caller       :function (a, b, FUN = call_my_add)  
[16:09:40.364]  $ args         :List of 1
[16:09:40.364]   ..$ FUN:function (a, b)  
[16:09:40.364]  $ call_my_add  :function (a, b)  
[16:09:40.364]  $ my_add       :function (a, b)  
[16:09:40.364]  $ ...          : list()
[16:09:40.364]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:40.364]  - attr(*, "where")=List of 6
[16:09:40.364]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:40.364]   ..$ caller       :<environment: R_EmptyEnv> 
[16:09:40.364]   ..$ args         :<environment: R_EmptyEnv> 
[16:09:40.364]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[16:09:40.364]   ..$ my_add       :<environment: R_EmptyEnv> 
[16:09:40.364]   ..$ ...          :<environment: 0x55ef0bbab170> 
[16:09:40.364]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:40.364]  - attr(*, "resolved")= logi FALSE
[16:09:40.364]  - attr(*, "total_size")= num 24120
[16:09:40.369] Packages to be attached in all futures: [n=0] 
[16:09:40.369] getGlobalsAndPackagesXApply() ... DONE
[16:09:40.369] Number of futures (= number of chunks): 2
[16:09:40.369] Launching 2 futures (chunks) ...
[16:09:40.369] Chunk #1 of 2 ...
[16:09:40.370]  - Finding globals in 'X' for chunk #1 ...
[16:09:40.370]    + additional globals found: [n=0] 
[16:09:40.370]    + additional namespaces needed: [n=0] 
[16:09:40.370]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:40.370]  - seeds: <none>
[16:09:40.430] Created future:
[16:09:40.430] MultisessionFuture:
[16:09:40.430] Label: ‘future_lapply-1’
[16:09:40.430] Expression:
[16:09:40.430] {
[16:09:40.430]     do.call(function(...) {
[16:09:40.430]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:40.430]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:40.430]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:40.430]             on.exit(options(oopts), add = TRUE)
[16:09:40.430]         }
[16:09:40.430]         {
[16:09:40.430]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:40.430]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:40.430]                 ...future.FUN(...future.X_jj, ...)
[16:09:40.430]             })
[16:09:40.430]         }
[16:09:40.430]     }, args = future.call.arguments)
[16:09:40.430] }
[16:09:40.430] Lazy evaluation: FALSE
[16:09:40.430] Asynchronous evaluation: TRUE
[16:09:40.430] Local evaluation: TRUE
[16:09:40.430] Environment: 0x55ef0bba7768
[16:09:40.430] Capture standard output: TRUE
[16:09:40.430] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:40.430] Globals: 9 objects totaling 23.61 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[16:09:40.430] Packages: <none>
[16:09:40.430] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:40.430] Resolved: FALSE
[16:09:40.430] Value: <not collected>
[16:09:40.430] Conditions captured: <none>
[16:09:40.430] Early signaling: FALSE
[16:09:40.430] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:40.430] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:40.442] Chunk #1 of 2 ... DONE
[16:09:40.442] Chunk #2 of 2 ...
[16:09:40.443]  - Finding globals in 'X' for chunk #2 ...
[16:09:40.443]    + additional globals found: [n=0] 
[16:09:40.443]    + additional namespaces needed: [n=0] 
[16:09:40.443]  - Finding globals in 'X' for chunk #2 ... DONE
[16:09:40.443]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:09:40.443]  - seeds: <none>
[16:09:40.530] Created future:
[16:09:40.530] MultisessionFuture:
[16:09:40.530] Label: ‘future_lapply-2’
[16:09:40.530] Expression:
[16:09:40.530] {
[16:09:40.530]     do.call(function(...) {
[16:09:40.530]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:40.530]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:40.530]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:40.530]             on.exit(options(oopts), add = TRUE)
[16:09:40.530]         }
[16:09:40.530]         {
[16:09:40.530]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:40.530]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:40.530]                 ...future.FUN(...future.X_jj, ...)
[16:09:40.530]             })
[16:09:40.530]         }
[16:09:40.530]     }, args = future.call.arguments)
[16:09:40.530] }
[16:09:40.530] Lazy evaluation: FALSE
[16:09:40.530] Asynchronous evaluation: TRUE
[16:09:40.530] Local evaluation: TRUE
[16:09:40.530] Environment: 0x55ef0bba7768
[16:09:40.530] Capture standard output: TRUE
[16:09:40.530] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:40.530] Globals: 9 objects totaling 23.66 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[16:09:40.530] Packages: <none>
[16:09:40.530] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:40.530] Resolved: FALSE
[16:09:40.530] Value: <not collected>
[16:09:40.530] Conditions captured: <none>
[16:09:40.530] Early signaling: FALSE
[16:09:40.530] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:40.530] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:40.542] Chunk #2 of 2 ... DONE
[16:09:40.542] Launching 2 futures (chunks) ... DONE
[16:09:40.542] Resolving 2 futures (chunks) ...
[16:09:40.606]  - Number of value chunks collected: 2
[16:09:40.606] Resolving 2 futures (chunks) ... DONE
[16:09:40.606] Reducing values from 2 chunks ...
[16:09:40.606]  - Number of values collected after concatenation: 3
[16:09:40.607]  - Number of values expected: 3
[16:09:40.607] Reducing values from 2 chunks ... DONE
[16:09:40.607] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[16:09:40.607] future_lapply() ...
[16:09:40.611] Number of chunks: 1
[16:09:40.612] getGlobalsAndPackagesXApply() ...
[16:09:40.612]  - future.globals: TRUE
[16:09:40.615]  - globals found/used: [n=1] ‘FUN’
[16:09:40.615]  - needed namespaces: [n=0] 
[16:09:40.615] Finding globals ... DONE
[16:09:40.615]  - use_args: TRUE
[16:09:40.615]  - Getting '...' globals ...
[16:09:40.615]    - '...' content: [n=1] ‘what’
[16:09:40.615] List of 1
[16:09:40.615]  $ ...:List of 1
[16:09:40.615]   ..$ what:function (x)  
[16:09:40.615]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:40.615]  - attr(*, "where")=List of 1
[16:09:40.615]   ..$ ...:<environment: 0x55ef0b693d60> 
[16:09:40.615]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:40.615]  - attr(*, "resolved")= logi TRUE
[16:09:40.615]  - attr(*, "total_size")= num NA
[16:09:40.618]  - Getting '...' globals ... DONE
[16:09:40.619] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:09:40.619] List of 2
[16:09:40.619]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[16:09:40.619]  $ ...          :List of 1
[16:09:40.619]   ..$ what:function (x)  
[16:09:40.619]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:40.619]  - attr(*, "where")=List of 2
[16:09:40.619]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:40.619]   ..$ ...          :<environment: 0x55ef0b693d60> 
[16:09:40.619]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:40.619]  - attr(*, "resolved")= logi FALSE
[16:09:40.619]  - attr(*, "total_size")= num 12192
[16:09:40.624] Packages to be attached in all futures: [n=0] 
[16:09:40.624] getGlobalsAndPackagesXApply() ... DONE
[16:09:40.624] Number of futures (= number of chunks): 1
[16:09:40.624] Launching 1 futures (chunks) ...
[16:09:40.624] Chunk #1 of 1 ...
[16:09:40.624]  - Finding globals in 'X' for chunk #1 ...
[16:09:40.625]    + additional globals found: [n=0] 
[16:09:40.625]    + additional namespaces needed: [n=0] 
[16:09:40.625]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:40.625]  - seeds: <none>
[16:09:40.643] Created future:
[16:09:40.643] MultisessionFuture:
[16:09:40.643] Label: ‘future_lapply-1’
[16:09:40.643] Expression:
[16:09:40.643] {
[16:09:40.643]     do.call(function(...) {
[16:09:40.643]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:40.643]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:40.643]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:40.643]             on.exit(options(oopts), add = TRUE)
[16:09:40.643]         }
[16:09:40.643]         {
[16:09:40.643]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:40.643]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:40.643]                 ...future.FUN(...future.X_jj, ...)
[16:09:40.643]             })
[16:09:40.643]         }
[16:09:40.643]     }, args = future.call.arguments)
[16:09:40.643] }
[16:09:40.643] Lazy evaluation: FALSE
[16:09:40.643] Asynchronous evaluation: TRUE
[16:09:40.643] Local evaluation: TRUE
[16:09:40.643] Environment: R_GlobalEnv
[16:09:40.643] Capture standard output: TRUE
[16:09:40.643] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:40.643] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:40.643] Packages: <none>
[16:09:40.643] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:40.643] Resolved: FALSE
[16:09:40.643] Value: <not collected>
[16:09:40.643] Conditions captured: <none>
[16:09:40.643] Early signaling: FALSE
[16:09:40.643] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:40.643] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:40.654] Chunk #1 of 1 ... DONE
[16:09:40.655] Launching 1 futures (chunks) ... DONE
[16:09:40.655] Resolving 1 futures (chunks) ...
[16:09:40.697]  - Number of value chunks collected: 1
[16:09:40.697] Resolving 1 futures (chunks) ... DONE
[16:09:40.697] Reducing values from 1 chunks ...
[16:09:40.698]  - Number of values collected after concatenation: 1
[16:09:40.698]  - Number of values expected: 1
[16:09:40.698] Reducing values from 1 chunks ... DONE
[16:09:40.698] future_lapply() ... DONE
[16:09:40.698] future_lapply() ...
[16:09:40.702] Number of chunks: 1
[16:09:40.703] getGlobalsAndPackagesXApply() ...
[16:09:40.703]  - future.globals: TRUE
[16:09:40.705]  - globals found/used: [n=1] ‘FUN’
[16:09:40.705]  - needed namespaces: [n=0] 
[16:09:40.706] Finding globals ... DONE
[16:09:40.706]  - use_args: TRUE
[16:09:40.706]  - Getting '...' globals ...
[16:09:40.706]    - '...' content: [n=1] ‘what’
[16:09:40.706] List of 1
[16:09:40.706]  $ ...:List of 1
[16:09:40.706]   ..$ what:function (...)  
[16:09:40.706]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:40.706]  - attr(*, "where")=List of 1
[16:09:40.706]   ..$ ...:<environment: 0x55ef0a3f2f58> 
[16:09:40.706]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:40.706]  - attr(*, "resolved")= logi TRUE
[16:09:40.706]  - attr(*, "total_size")= num NA
[16:09:40.709]  - Getting '...' globals ... DONE
[16:09:40.709] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:09:40.709] List of 2
[16:09:40.709]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[16:09:40.709]  $ ...          :List of 1
[16:09:40.709]   ..$ what:function (...)  
[16:09:40.709]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:40.709]  - attr(*, "where")=List of 2
[16:09:40.709]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:40.709]   ..$ ...          :<environment: 0x55ef0a3f2f58> 
[16:09:40.709]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:40.709]  - attr(*, "resolved")= logi FALSE
[16:09:40.709]  - attr(*, "total_size")= num 13352
[16:09:40.712] Packages to be attached in all futures: [n=0] 
[16:09:40.712] getGlobalsAndPackagesXApply() ... DONE
[16:09:40.713] Number of futures (= number of chunks): 1
[16:09:40.713] Launching 1 futures (chunks) ...
[16:09:40.713] Chunk #1 of 1 ...
[16:09:40.713]  - Finding globals in 'X' for chunk #1 ...
[16:09:40.713]    + additional globals found: [n=0] 
[16:09:40.713]    + additional namespaces needed: [n=0] 
[16:09:40.713]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:40.714]  - seeds: <none>
[16:09:40.732] Created future:
[16:09:40.732] MultisessionFuture:
[16:09:40.732] Label: ‘future_lapply-1’
[16:09:40.732] Expression:
[16:09:40.732] {
[16:09:40.732]     do.call(function(...) {
[16:09:40.732]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:40.732]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:40.732]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:40.732]             on.exit(options(oopts), add = TRUE)
[16:09:40.732]         }
[16:09:40.732]         {
[16:09:40.732]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:40.732]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:40.732]                 ...future.FUN(...future.X_jj, ...)
[16:09:40.732]             })
[16:09:40.732]         }
[16:09:40.732]     }, args = future.call.arguments)
[16:09:40.732] }
[16:09:40.732] Lazy evaluation: FALSE
[16:09:40.732] Asynchronous evaluation: TRUE
[16:09:40.732] Local evaluation: TRUE
[16:09:40.732] Environment: R_GlobalEnv
[16:09:40.732] Capture standard output: TRUE
[16:09:40.732] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:40.732] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:40.732] Packages: <none>
[16:09:40.732] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:40.732] Resolved: FALSE
[16:09:40.732] Value: <not collected>
[16:09:40.732] Conditions captured: <none>
[16:09:40.732] Early signaling: FALSE
[16:09:40.732] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:40.732] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:40.744] Chunk #1 of 1 ... DONE
[16:09:40.744] Launching 1 futures (chunks) ... DONE
[16:09:40.744] Resolving 1 futures (chunks) ...
[16:09:40.787]  - Number of value chunks collected: 1
[16:09:40.787] Resolving 1 futures (chunks) ... DONE
[16:09:40.787] Reducing values from 1 chunks ...
[16:09:40.787]  - Number of values collected after concatenation: 1
[16:09:40.787]  - Number of values expected: 1
[16:09:40.787] Reducing values from 1 chunks ... DONE
[16:09:40.787] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[16:09:40.787] future_lapply() ...
[16:09:40.791] Number of chunks: 1
[16:09:40.791] getGlobalsAndPackagesXApply() ...
[16:09:40.791]  - future.globals: TRUE
[16:09:40.793]  - globals found/used: [n=1] ‘FUN’
[16:09:40.793]  - needed namespaces: [n=0] 
[16:09:40.793] Finding globals ... DONE
[16:09:40.793]  - use_args: TRUE
[16:09:40.793]  - Getting '...' globals ...
[16:09:40.794]    - '...' content: [n=1] ‘b’
[16:09:40.794] List of 1
[16:09:40.794]  $ ...:List of 1
[16:09:40.794]   ..$ b:'data.frame':	2 obs. of  1 variable:
[16:09:40.794]   .. ..$ a: int [1:2] 1 2
[16:09:40.794]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:40.794]  - attr(*, "where")=List of 1
[16:09:40.794]   ..$ ...:<environment: 0x55ef0b6666b8> 
[16:09:40.794]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:40.794]  - attr(*, "resolved")= logi TRUE
[16:09:40.794]  - attr(*, "total_size")= num NA
[16:09:40.797]  - Getting '...' globals ... DONE
[16:09:40.797] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:09:40.797] List of 2
[16:09:40.797]  $ ...future.FUN:function (a, b)  
[16:09:40.797]  $ ...          :List of 1
[16:09:40.797]   ..$ b:'data.frame':	2 obs. of  1 variable:
[16:09:40.797]   .. ..$ a: int [1:2] 1 2
[16:09:40.797]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:40.797]  - attr(*, "where")=List of 2
[16:09:40.797]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:40.797]   ..$ ...          :<environment: 0x55ef0b6666b8> 
[16:09:40.797]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:40.797]  - attr(*, "resolved")= logi FALSE
[16:09:40.797]  - attr(*, "total_size")= num 1440
[16:09:40.801] Packages to be attached in all futures: [n=0] 
[16:09:40.801] getGlobalsAndPackagesXApply() ... DONE
[16:09:40.801] Number of futures (= number of chunks): 1
[16:09:40.801] Launching 1 futures (chunks) ...
[16:09:40.801] Chunk #1 of 1 ...
[16:09:40.801]  - Finding globals in 'X' for chunk #1 ...
[16:09:40.802]    + additional globals found: [n=0] 
[16:09:40.802]    + additional namespaces needed: [n=0] 
[16:09:40.802]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:40.802]  - seeds: <none>
[16:09:40.826] Created future:
[16:09:40.827] MultisessionFuture:
[16:09:40.827] Label: ‘future_lapply-1’
[16:09:40.827] Expression:
[16:09:40.827] {
[16:09:40.827]     do.call(function(...) {
[16:09:40.827]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:40.827]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:40.827]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:40.827]             on.exit(options(oopts), add = TRUE)
[16:09:40.827]         }
[16:09:40.827]         {
[16:09:40.827]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:40.827]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:40.827]                 ...future.FUN(...future.X_jj, ...)
[16:09:40.827]             })
[16:09:40.827]         }
[16:09:40.827]     }, args = future.call.arguments)
[16:09:40.827] }
[16:09:40.827] Lazy evaluation: FALSE
[16:09:40.827] Asynchronous evaluation: TRUE
[16:09:40.827] Local evaluation: TRUE
[16:09:40.827] Environment: R_GlobalEnv
[16:09:40.827] Capture standard output: TRUE
[16:09:40.827] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:40.827] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:40.827] Packages: <none>
[16:09:40.827] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:40.827] Resolved: FALSE
[16:09:40.827] Value: <not collected>
[16:09:40.827] Conditions captured: <none>
[16:09:40.827] Early signaling: FALSE
[16:09:40.827] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:40.827] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:40.838] Chunk #1 of 1 ... DONE
[16:09:40.838] Launching 1 futures (chunks) ... DONE
[16:09:40.839] Resolving 1 futures (chunks) ...
[16:09:40.881]  - Number of value chunks collected: 1
[16:09:40.882] Resolving 1 futures (chunks) ... DONE
[16:09:40.882] Reducing values from 1 chunks ...
[16:09:40.882]  - Number of values collected after concatenation: 1
[16:09:40.882]  - Number of values expected: 1
[16:09:40.882] Reducing values from 1 chunks ... DONE
[16:09:40.882] future_lapply() ... DONE
[16:09:40.882] future_lapply() ...
[16:09:40.886] Number of chunks: 1
[16:09:40.887] getGlobalsAndPackagesXApply() ...
[16:09:40.887]  - future.globals: TRUE
[16:09:40.889]  - globals found/used: [n=1] ‘FUN’
[16:09:40.889]  - needed namespaces: [n=0] 
[16:09:40.889] Finding globals ... DONE
[16:09:40.889]  - use_args: TRUE
[16:09:40.889]  - Getting '...' globals ...
[16:09:40.890]    - '...' content: [n=1] ‘b’
[16:09:40.890] List of 1
[16:09:40.890]  $ ...:List of 1
[16:09:40.890]   ..$ b:<environment: 0x55ef0a640b80> 
[16:09:40.890]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:40.890]  - attr(*, "where")=List of 1
[16:09:40.890]   ..$ ...:<environment: 0x55ef0a63d808> 
[16:09:40.890]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:40.890]  - attr(*, "resolved")= logi TRUE
[16:09:40.890]  - attr(*, "total_size")= num NA
[16:09:40.893]  - Getting '...' globals ... DONE
[16:09:40.893] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:09:40.893] List of 2
[16:09:40.893]  $ ...future.FUN:function (a, b)  
[16:09:40.893]  $ ...          :List of 1
[16:09:40.893]   ..$ b:<environment: 0x55ef0a640b80> 
[16:09:40.893]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:40.893]  - attr(*, "where")=List of 2
[16:09:40.893]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:40.893]   ..$ ...          :<environment: 0x55ef0a63d808> 
[16:09:40.893]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:40.893]  - attr(*, "resolved")= logi FALSE
[16:09:40.893]  - attr(*, "total_size")= num 1440
[16:09:40.896] Packages to be attached in all futures: [n=0] 
[16:09:40.896] getGlobalsAndPackagesXApply() ... DONE
[16:09:40.896] Number of futures (= number of chunks): 1
[16:09:40.896] Launching 1 futures (chunks) ...
[16:09:40.896] Chunk #1 of 1 ...
[16:09:40.897]  - Finding globals in 'X' for chunk #1 ...
[16:09:40.897]    + additional globals found: [n=0] 
[16:09:40.897]    + additional namespaces needed: [n=0] 
[16:09:40.897]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:40.897]  - seeds: <none>
[16:09:40.917] Created future:
[16:09:40.918] MultisessionFuture:
[16:09:40.918] Label: ‘future_lapply-1’
[16:09:40.918] Expression:
[16:09:40.918] {
[16:09:40.918]     do.call(function(...) {
[16:09:40.918]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:40.918]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:40.918]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:40.918]             on.exit(options(oopts), add = TRUE)
[16:09:40.918]         }
[16:09:40.918]         {
[16:09:40.918]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:40.918]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:40.918]                 ...future.FUN(...future.X_jj, ...)
[16:09:40.918]             })
[16:09:40.918]         }
[16:09:40.918]     }, args = future.call.arguments)
[16:09:40.918] }
[16:09:40.918] Lazy evaluation: FALSE
[16:09:40.918] Asynchronous evaluation: TRUE
[16:09:40.918] Local evaluation: TRUE
[16:09:40.918] Environment: R_GlobalEnv
[16:09:40.918] Capture standard output: TRUE
[16:09:40.918] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:40.918] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:40.918] Packages: <none>
[16:09:40.918] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:40.918] Resolved: FALSE
[16:09:40.918] Value: <not collected>
[16:09:40.918] Conditions captured: <none>
[16:09:40.918] Early signaling: FALSE
[16:09:40.918] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:40.918] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:40.929] Chunk #1 of 1 ... DONE
[16:09:40.929] Launching 1 futures (chunks) ... DONE
[16:09:40.929] Resolving 1 futures (chunks) ...
[16:09:40.972]  - Number of value chunks collected: 1
[16:09:40.972] Resolving 1 futures (chunks) ... DONE
[16:09:40.972] Reducing values from 1 chunks ...
[16:09:40.972]  - Number of values collected after concatenation: 1
[16:09:40.972]  - Number of values expected: 1
[16:09:40.973] Reducing values from 1 chunks ... DONE
[16:09:40.973] future_lapply() ... DONE
[16:09:40.973] future_lapply() ...
[16:09:40.977] Number of chunks: 1
[16:09:40.977] getGlobalsAndPackagesXApply() ...
[16:09:40.977]  - future.globals: TRUE
[16:09:40.979]  - globals found/used: [n=1] ‘FUN’
[16:09:40.979]  - needed namespaces: [n=0] 
[16:09:40.979] Finding globals ... DONE
[16:09:40.979]  - use_args: TRUE
[16:09:40.979]  - Getting '...' globals ...
[16:09:40.980]    - '...' content: [n=1] ‘b’
[16:09:40.980] List of 1
[16:09:40.980]  $ ...:List of 1
[16:09:40.980]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[16:09:40.980]   .. .. ..@ slots     :List of 4
[16:09:40.980]   .. .. .. ..$ .Data  : chr "function"
[16:09:40.980]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:40.980]   .. .. .. ..$ target : chr "signature"
[16:09:40.980]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:40.980]   .. .. .. ..$ defined: chr "signature"
[16:09:40.980]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:40.980]   .. .. .. ..$ generic: chr "character"
[16:09:40.980]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:40.980]   .. .. ..@ contains  :List of 3
[16:09:40.980]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:40.980]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:09:40.980]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ superClass: chr "function"
[16:09:40.980]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:40.980]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:40.980]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:40.980]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:40.980]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:40.980]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[16:09:40.980]   .. .. .. .. .. ..@ distance  : num 1
[16:09:40.980]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:40.980]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:09:40.980]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[16:09:40.980]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:40.980]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:40.980]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:40.980]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:40.980]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:40.980]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:40.980]   .. .. .. .. .. ..@ distance  : num 1
[16:09:40.980]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:40.980]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:09:40.980]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[16:09:40.980]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:40.980]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:40.980]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:40.980]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:40.980]   .. .. .. .. .. ..@ by        : chr "function"
[16:09:40.980]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:40.980]   .. .. .. .. .. ..@ distance  : num 2
[16:09:40.980]   .. .. ..@ virtual   : logi FALSE
[16:09:40.980]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[16:09:40.980]  list()
[16:09:40.980]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[16:09:40.980]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:09:40.980]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:09:40.980]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:09:40.980]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[16:09:40.980]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:09:40.980]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:09:40.980]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:09:40.980]   .. .. .. .. ..$ generic: chr(0) 
[16:09:40.980]   .. .. ..@ validity  : NULL
[16:09:40.980]   .. .. ..@ access    : list()
[16:09:40.980]   .. .. ..@ className : chr "MethodDefinition"
[16:09:40.980]   .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:40.980]   .. .. ..@ package   : chr "methods"
[16:09:40.980]   .. .. ..@ subclasses:List of 7
[16:09:40.980]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:40.980]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[16:09:40.980]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:40.980]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:40.980]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:40.980]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:40.980]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:40.980]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:40.980]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:40.980]   .. .. .. .. .. ..@ distance  : num 1
[16:09:40.980]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:40.980]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[16:09:40.980]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:40.980]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:40.980]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:40.980]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:40.980]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:40.980]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:40.980]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:40.980]   .. .. .. .. .. ..@ distance  : num 1
[16:09:40.980]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:40.980]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[16:09:40.980]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:40.980]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:40.980]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:40.980]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:40.980]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:40.980]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:40.980]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:40.980]   .. .. .. .. .. ..@ distance  : num 1
[16:09:40.980]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:40.980]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[16:09:40.980]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:40.980]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:40.980]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:40.980]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:40.980]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:40.980]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:40.980]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:40.980]   .. .. .. .. .. ..@ distance  : num 1
[16:09:40.980]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:40.980]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[16:09:40.980]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:40.980]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:40.980]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:40.980]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:40.980]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:40.980]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:09:40.980]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:40.980]   .. .. .. .. .. ..@ distance  : num 2
[16:09:40.980]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:40.980]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[16:09:40.980]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:40.980]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:40.980]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:40.980]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:40.980]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:40.980]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[16:09:40.980]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:40.980]   .. .. .. .. .. ..@ distance  : num 2
[16:09:40.980]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:40.980]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[16:09:40.980]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:40.980]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:40.980]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:40.980]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:40.980]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:40.980]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:09:40.980]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:40.980]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:40.980]   .. .. .. .. .. ..@ distance  : num 2
[16:09:40.980]   .. .. ..@ versionKey:<externalptr> 
[16:09:40.980]   .. .. ..@ sealed    : logi TRUE
[16:09:40.980]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:40.980]  - attr(*, "where")=List of 1
[16:09:40.980]   ..$ ...:<environment: 0x55ef0b9c10b8> 
[16:09:40.980]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:40.980]  - attr(*, "resolved")= logi TRUE
[16:09:40.980]  - attr(*, "total_size")= num NA
[16:09:41.028]  - Getting '...' globals ... DONE
[16:09:41.028] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:09:41.028] List of 2
[16:09:41.028]  $ ...future.FUN:function (a, b)  
[16:09:41.028]  $ ...          :List of 1
[16:09:41.028]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[16:09:41.028]   .. .. ..@ slots     :List of 4
[16:09:41.028]   .. .. .. ..$ .Data  : chr "function"
[16:09:41.028]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:41.028]   .. .. .. ..$ target : chr "signature"
[16:09:41.028]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:41.028]   .. .. .. ..$ defined: chr "signature"
[16:09:41.028]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:41.028]   .. .. .. ..$ generic: chr "character"
[16:09:41.028]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:41.028]   .. .. ..@ contains  :List of 3
[16:09:41.028]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:41.028]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:09:41.028]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ superClass: chr "function"
[16:09:41.028]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:41.028]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:41.028]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:41.028]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:41.028]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:41.028]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[16:09:41.028]   .. .. .. .. .. ..@ distance  : num 1
[16:09:41.028]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:41.028]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:09:41.028]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[16:09:41.028]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:41.028]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:41.028]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:41.028]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:41.028]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:41.028]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:41.028]   .. .. .. .. .. ..@ distance  : num 1
[16:09:41.028]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:41.028]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:09:41.028]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[16:09:41.028]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:41.028]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:41.028]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:41.028]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:41.028]   .. .. .. .. .. ..@ by        : chr "function"
[16:09:41.028]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:41.028]   .. .. .. .. .. ..@ distance  : num 2
[16:09:41.028]   .. .. ..@ virtual   : logi FALSE
[16:09:41.028]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[16:09:41.028]  list()
[16:09:41.028]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[16:09:41.028]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:09:41.028]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:09:41.028]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:09:41.028]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[16:09:41.028]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:09:41.028]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:09:41.028]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:09:41.028]   .. .. .. .. ..$ generic: chr(0) 
[16:09:41.028]   .. .. ..@ validity  : NULL
[16:09:41.028]   .. .. ..@ access    : list()
[16:09:41.028]   .. .. ..@ className : chr "MethodDefinition"
[16:09:41.028]   .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:41.028]   .. .. ..@ package   : chr "methods"
[16:09:41.028]   .. .. ..@ subclasses:List of 7
[16:09:41.028]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:41.028]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[16:09:41.028]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:41.028]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:41.028]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:41.028]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:41.028]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:41.028]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:41.028]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:41.028]   .. .. .. .. .. ..@ distance  : num 1
[16:09:41.028]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:41.028]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[16:09:41.028]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:41.028]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:41.028]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:41.028]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:41.028]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:41.028]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:41.028]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:41.028]   .. .. .. .. .. ..@ distance  : num 1
[16:09:41.028]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:41.028]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[16:09:41.028]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:41.028]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:41.028]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:41.028]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:41.028]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:41.028]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:41.028]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:41.028]   .. .. .. .. .. ..@ distance  : num 1
[16:09:41.028]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:41.028]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[16:09:41.028]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:41.028]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:41.028]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:41.028]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:41.028]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:41.028]   .. .. .. .. .. ..@ by        : chr(0) 
[16:09:41.028]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:41.028]   .. .. .. .. .. ..@ distance  : num 1
[16:09:41.028]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:41.028]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[16:09:41.028]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:41.028]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:41.028]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:41.028]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:41.028]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:41.028]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:09:41.028]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:41.028]   .. .. .. .. .. ..@ distance  : num 2
[16:09:41.028]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:41.028]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[16:09:41.028]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:41.028]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:41.028]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:41.028]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:41.028]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:41.028]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[16:09:41.028]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:41.028]   .. .. .. .. .. ..@ distance  : num 2
[16:09:41.028]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:09:41.028]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[16:09:41.028]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:09:41.028]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ package   : chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:09:41.028]   .. .. .. .. .. ..@ test      :function (object)  
[16:09:41.028]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:09:41.028]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:09:41.028]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:09:41.028]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:09:41.028]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:09:41.028]   .. .. .. .. .. ..@ distance  : num 2
[16:09:41.028]   .. .. ..@ versionKey:<externalptr> 
[16:09:41.028]   .. .. ..@ sealed    : logi TRUE
[16:09:41.028]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:41.028]  - attr(*, "where")=List of 2
[16:09:41.028]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:41.028]   ..$ ...          :<environment: 0x55ef0b9c10b8> 
[16:09:41.028]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:41.028]  - attr(*, "resolved")= logi FALSE
[16:09:41.028]  - attr(*, "total_size")= num 312512
[16:09:41.078] Packages to be attached in all futures: [n=0] 
[16:09:41.079] getGlobalsAndPackagesXApply() ... DONE
[16:09:41.079] Number of futures (= number of chunks): 1
[16:09:41.079] Launching 1 futures (chunks) ...
[16:09:41.079] Chunk #1 of 1 ...
[16:09:41.079]  - Finding globals in 'X' for chunk #1 ...
[16:09:41.079]    + additional globals found: [n=0] 
[16:09:41.080]    + additional namespaces needed: [n=0] 
[16:09:41.080]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:41.080]  - seeds: <none>
[16:09:41.099] Created future:
[16:09:41.099] MultisessionFuture:
[16:09:41.099] Label: ‘future_lapply-1’
[16:09:41.099] Expression:
[16:09:41.099] {
[16:09:41.099]     do.call(function(...) {
[16:09:41.099]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:41.099]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:41.099]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:41.099]             on.exit(options(oopts), add = TRUE)
[16:09:41.099]         }
[16:09:41.099]         {
[16:09:41.099]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:41.099]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:41.099]                 ...future.FUN(...future.X_jj, ...)
[16:09:41.099]             })
[16:09:41.099]         }
[16:09:41.099]     }, args = future.call.arguments)
[16:09:41.099] }
[16:09:41.099] Lazy evaluation: FALSE
[16:09:41.099] Asynchronous evaluation: TRUE
[16:09:41.099] Local evaluation: TRUE
[16:09:41.099] Environment: R_GlobalEnv
[16:09:41.099] Capture standard output: TRUE
[16:09:41.099] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:41.099] Globals: 5 objects totaling 305.24 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 303.78 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:41.099] Packages: <none>
[16:09:41.099] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:41.099] Resolved: FALSE
[16:09:41.099] Value: <not collected>
[16:09:41.099] Conditions captured: <none>
[16:09:41.099] Early signaling: FALSE
[16:09:41.099] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:41.099] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:41.111] Chunk #1 of 1 ... DONE
[16:09:41.111] Launching 1 futures (chunks) ... DONE
[16:09:41.111] Resolving 1 futures (chunks) ...
[16:09:41.153]  - Number of value chunks collected: 1
[16:09:41.154] Resolving 1 futures (chunks) ... DONE
[16:09:41.154] Reducing values from 1 chunks ...
[16:09:41.154]  - Number of values collected after concatenation: 1
[16:09:41.154]  - Number of values expected: 1
[16:09:41.154] Reducing values from 1 chunks ... DONE
[16:09:41.154] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[16:09:41.156] future_lapply() ...
[16:09:41.160] Number of chunks: 2
[16:09:41.160] getGlobalsAndPackagesXApply() ...
[16:09:41.160]  - future.globals: TRUE
[16:09:41.162]  - globals found/used: [n=1] ‘FUN’
[16:09:41.162]  - needed namespaces: [n=0] 
[16:09:41.162] Finding globals ... DONE
[16:09:41.162]  - use_args: TRUE
[16:09:41.162]  - Getting '...' globals ...
[16:09:41.163]    - '...' content: [n=0] 
[16:09:41.163] List of 1
[16:09:41.163]  $ ...: list()
[16:09:41.163]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:41.163]  - attr(*, "where")=List of 1
[16:09:41.163]   ..$ ...:<environment: 0x55ef09da0ac0> 
[16:09:41.163]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:41.163]  - attr(*, "resolved")= logi TRUE
[16:09:41.163]  - attr(*, "total_size")= num NA
[16:09:41.165]  - Getting '...' globals ... DONE
[16:09:41.166] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:09:41.166] List of 2
[16:09:41.166]  $ ...future.FUN:function (f)  
[16:09:41.166]  $ ...          : list()
[16:09:41.166]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:41.166]  - attr(*, "where")=List of 2
[16:09:41.166]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:41.166]   ..$ ...          :<environment: 0x55ef09da0ac0> 
[16:09:41.166]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:41.166]  - attr(*, "resolved")= logi FALSE
[16:09:41.166]  - attr(*, "total_size")= num 1008
[16:09:41.168] Packages to be attached in all futures: [n=0] 
[16:09:41.169] getGlobalsAndPackagesXApply() ... DONE
[16:09:41.169] Number of futures (= number of chunks): 2
[16:09:41.169] Launching 2 futures (chunks) ...
[16:09:41.169] Chunk #1 of 2 ...
[16:09:41.169]  - Finding globals in 'X' for chunk #1 ...
[16:09:41.171]    + additional globals found: [n=2] ‘a’, ‘b’
[16:09:41.171]    + additional namespaces needed: [n=0] 
[16:09:41.171]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:41.171]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:09:41.171]  - seeds: <none>
[16:09:41.190] Created future:
[16:09:41.190] MultisessionFuture:
[16:09:41.190] Label: ‘future_lapply-1’
[16:09:41.190] Expression:
[16:09:41.190] {
[16:09:41.190]     do.call(function(...) {
[16:09:41.190]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:41.190]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:41.190]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:41.190]             on.exit(options(oopts), add = TRUE)
[16:09:41.190]         }
[16:09:41.190]         {
[16:09:41.190]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:41.190]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:41.190]                 ...future.FUN(...future.X_jj, ...)
[16:09:41.190]             })
[16:09:41.190]         }
[16:09:41.190]     }, args = future.call.arguments)
[16:09:41.190] }
[16:09:41.190] Lazy evaluation: FALSE
[16:09:41.190] Asynchronous evaluation: TRUE
[16:09:41.190] Local evaluation: TRUE
[16:09:41.190] Environment: R_GlobalEnv
[16:09:41.190] Capture standard output: TRUE
[16:09:41.190] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:41.190] Globals: 7 objects totaling 3.48 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[16:09:41.190] Packages: <none>
[16:09:41.190] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:41.190] Resolved: FALSE
[16:09:41.190] Value: <not collected>
[16:09:41.190] Conditions captured: <none>
[16:09:41.190] Early signaling: FALSE
[16:09:41.190] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:41.190] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:41.201] Chunk #1 of 2 ... DONE
[16:09:41.201] Chunk #2 of 2 ...
[16:09:41.202]  - Finding globals in 'X' for chunk #2 ...
[16:09:41.204]    + additional globals found: [n=2] ‘a’, ‘b’
[16:09:41.204]    + additional namespaces needed: [n=1] ‘tools’
[16:09:41.204]  - Finding globals in 'X' for chunk #2 ... DONE
[16:09:41.204]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:09:41.204]  - seeds: <none>
[16:09:41.223] Created future:
[16:09:41.223] MultisessionFuture:
[16:09:41.223] Label: ‘future_lapply-2’
[16:09:41.223] Expression:
[16:09:41.223] {
[16:09:41.223]     do.call(function(...) {
[16:09:41.223]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:41.223]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:41.223]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:41.223]             on.exit(options(oopts), add = TRUE)
[16:09:41.223]         }
[16:09:41.223]         {
[16:09:41.223]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:41.223]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:41.223]                 ...future.FUN(...future.X_jj, ...)
[16:09:41.223]             })
[16:09:41.223]         }
[16:09:41.223]     }, args = future.call.arguments)
[16:09:41.223] }
[16:09:41.223] Lazy evaluation: FALSE
[16:09:41.223] Asynchronous evaluation: TRUE
[16:09:41.223] Local evaluation: TRUE
[16:09:41.223] Environment: R_GlobalEnv
[16:09:41.223] Capture standard output: TRUE
[16:09:41.223] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:41.223] Globals: 7 objects totaling 5.11 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.02 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[16:09:41.223] Packages: 1 packages (‘tools’)
[16:09:41.223] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:41.223] Resolved: FALSE
[16:09:41.223] Value: <not collected>
[16:09:41.223] Conditions captured: <none>
[16:09:41.223] Early signaling: FALSE
[16:09:41.223] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:41.223] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:41.235] Chunk #2 of 2 ... DONE
[16:09:41.235] Launching 2 futures (chunks) ... DONE
[16:09:41.235] Resolving 2 futures (chunks) ...
[16:09:41.282]  - Number of value chunks collected: 2
[16:09:41.282] Resolving 2 futures (chunks) ... DONE
[16:09:41.282] Reducing values from 2 chunks ...
[16:09:41.283]  - Number of values collected after concatenation: 4
[16:09:41.283]  - Number of values expected: 4
[16:09:41.283] Reducing values from 2 chunks ... DONE
[16:09:41.283] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[16:09:41.286] future_lapply() ...
[16:09:41.291] Number of chunks: 1
[16:09:41.291] getGlobalsAndPackagesXApply() ...
[16:09:41.291]  - future.globals: TRUE
[16:09:41.294]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[16:09:41.294]  - needed namespaces: [n=0] 
[16:09:41.294] Finding globals ... DONE
[16:09:41.294]  - use_args: TRUE
[16:09:41.294]  - Getting '...' globals ...
[16:09:41.295]    - '...' content: [n=0] 
[16:09:41.295] List of 1
[16:09:41.295]  $ ...: list()
[16:09:41.295]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:41.295]  - attr(*, "where")=List of 1
[16:09:41.295]   ..$ ...:<environment: 0x55ef0aa28260> 
[16:09:41.295]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:41.295]  - attr(*, "resolved")= logi TRUE
[16:09:41.295]  - attr(*, "total_size")= num NA
[16:09:41.297]  - Getting '...' globals ... DONE
[16:09:41.297] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[16:09:41.297] List of 3
[16:09:41.297]  $ ...future.FUN        :function (x)  
[16:09:41.297]  $ future.call.arguments:List of 1
[16:09:41.297]   ..$ a: num 1
[16:09:41.297]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:41.297]  $ ...                  : list()
[16:09:41.297]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:41.297]  - attr(*, "where")=List of 3
[16:09:41.297]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[16:09:41.297]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[16:09:41.297]   ..$ ...                  :<environment: 0x55ef0aa28260> 
[16:09:41.297]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:41.297]  - attr(*, "resolved")= logi FALSE
[16:09:41.297]  - attr(*, "total_size")= num 1272
[16:09:41.301] Packages to be attached in all futures: [n=0] 
[16:09:41.301] getGlobalsAndPackagesXApply() ... DONE
[16:09:41.301] Number of futures (= number of chunks): 1
[16:09:41.302] Launching 1 futures (chunks) ...
[16:09:41.302] Chunk #1 of 1 ...
[16:09:41.302]  - Finding globals in 'X' for chunk #1 ...
[16:09:41.302]    + additional globals found: [n=0] 
[16:09:41.302]    + additional namespaces needed: [n=0] 
[16:09:41.302]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:41.302]  - seeds: <none>
[16:09:41.326] Created future:
[16:09:41.326] MultisessionFuture:
[16:09:41.326] Label: ‘future_lapply-1’
[16:09:41.326] Expression:
[16:09:41.326] {
[16:09:41.326]     do.call(function(...) {
[16:09:41.326]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:41.326]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:41.326]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:41.326]             on.exit(options(oopts), add = TRUE)
[16:09:41.326]         }
[16:09:41.326]         {
[16:09:41.326]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:41.326]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:41.326]                 ...future.FUN(...future.X_jj)
[16:09:41.326]             })
[16:09:41.326]         }
[16:09:41.326]     }, args = future.call.arguments)
[16:09:41.326] }
[16:09:41.326] Lazy evaluation: FALSE
[16:09:41.326] Asynchronous evaluation: TRUE
[16:09:41.326] Local evaluation: TRUE
[16:09:41.326] Environment: 0x55ef0aa27e00
[16:09:41.326] Capture standard output: TRUE
[16:09:41.326] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:41.326] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:41.326] Packages: <none>
[16:09:41.326] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:41.326] Resolved: FALSE
[16:09:41.326] Value: <not collected>
[16:09:41.326] Conditions captured: <none>
[16:09:41.326] Early signaling: FALSE
[16:09:41.326] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:41.326] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:41.339] Chunk #1 of 1 ... DONE
[16:09:41.339] Launching 1 futures (chunks) ... DONE
[16:09:41.339] Resolving 1 futures (chunks) ...
[16:09:41.382]  - Number of value chunks collected: 1
[16:09:41.382] Resolving 1 futures (chunks) ... DONE
[16:09:41.382] Reducing values from 1 chunks ...
[16:09:41.382]  - Number of values collected after concatenation: 1
[16:09:41.382]  - Number of values expected: 1
[16:09:41.382] Reducing values from 1 chunks ... DONE
[16:09:41.382] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[16:09:41.384] future_lapply() ...
[16:09:41.388] Number of chunks: 1
[16:09:41.388] getGlobalsAndPackagesXApply() ...
[16:09:41.388]  - future.globals: TRUE
[16:09:41.391]  - globals found/used: [n=2] ‘FUN’, ‘a’
[16:09:41.391]  - needed namespaces: [n=0] 
[16:09:41.391] Finding globals ... DONE
[16:09:41.391]  - use_args: TRUE
[16:09:41.391]  - Getting '...' globals ...
[16:09:41.391]    - '...' content: [n=0] 
[16:09:41.391] List of 1
[16:09:41.391]  $ ...: list()
[16:09:41.391]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:41.391]  - attr(*, "where")=List of 1
[16:09:41.391]   ..$ ...:<environment: 0x55ef0b931598> 
[16:09:41.391]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:41.391]  - attr(*, "resolved")= logi TRUE
[16:09:41.391]  - attr(*, "total_size")= num NA
[16:09:41.394]  - Getting '...' globals ... DONE
[16:09:41.394] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[16:09:41.394] List of 3
[16:09:41.394]  $ ...future.FUN:function (ii)  
[16:09:41.394]  $ a            : num 1
[16:09:41.394]  $ ...          : list()
[16:09:41.394]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:41.394]  - attr(*, "where")=List of 3
[16:09:41.394]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:41.394]   ..$ a            :<environment: R_EmptyEnv> 
[16:09:41.394]   ..$ ...          :<environment: 0x55ef0b931598> 
[16:09:41.394]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:41.394]  - attr(*, "resolved")= logi FALSE
[16:09:41.394]  - attr(*, "total_size")= num 2984
[16:09:41.397] Packages to be attached in all futures: [n=0] 
[16:09:41.397] getGlobalsAndPackagesXApply() ... DONE
[16:09:41.398] Number of futures (= number of chunks): 1
[16:09:41.398] Launching 1 futures (chunks) ...
[16:09:41.398] Chunk #1 of 1 ...
[16:09:41.398]  - Finding globals in 'X' for chunk #1 ...
[16:09:41.398]    + additional globals found: [n=0] 
[16:09:41.398]    + additional namespaces needed: [n=0] 
[16:09:41.398]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:41.399]  - seeds: <none>
[16:09:41.416] Created future:
[16:09:41.417] MultisessionFuture:
[16:09:41.417] Label: ‘future_lapply-1’
[16:09:41.417] Expression:
[16:09:41.417] {
[16:09:41.417]     do.call(function(...) {
[16:09:41.417]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:41.417]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:41.417]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:41.417]             on.exit(options(oopts), add = TRUE)
[16:09:41.417]         }
[16:09:41.417]         {
[16:09:41.417]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:41.417]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:41.417]                 ...future.FUN(...future.X_jj, ...)
[16:09:41.417]             })
[16:09:41.417]         }
[16:09:41.417]     }, args = future.call.arguments)
[16:09:41.417] }
[16:09:41.417] Lazy evaluation: FALSE
[16:09:41.417] Asynchronous evaluation: TRUE
[16:09:41.417] Local evaluation: TRUE
[16:09:41.417] Environment: R_GlobalEnv
[16:09:41.417] Capture standard output: TRUE
[16:09:41.417] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:41.417] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:09:41.417] Packages: <none>
[16:09:41.417] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:41.417] Resolved: FALSE
[16:09:41.417] Value: <not collected>
[16:09:41.417] Conditions captured: <none>
[16:09:41.417] Early signaling: FALSE
[16:09:41.417] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:41.417] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:41.428] Chunk #1 of 1 ... DONE
[16:09:41.428] Launching 1 futures (chunks) ... DONE
[16:09:41.429] Resolving 1 futures (chunks) ...
[16:09:41.473]  - Number of value chunks collected: 1
[16:09:41.473] Resolving 1 futures (chunks) ... DONE
[16:09:41.474] Reducing values from 1 chunks ...
[16:09:41.474]  - Number of values collected after concatenation: 1
[16:09:41.474]  - Number of values expected: 1
[16:09:41.474] Reducing values from 1 chunks ... DONE
[16:09:41.474] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[16:09:41.474] future_lapply() ...
[16:09:41.478] Number of chunks: 1
[16:09:41.478] getGlobalsAndPackagesXApply() ...
[16:09:41.478]  - future.globals: TRUE
[16:09:41.481]  - globals found/used: [n=2] ‘FUN’, ‘a’
[16:09:41.481]  - needed namespaces: [n=0] 
[16:09:41.481] Finding globals ... DONE
[16:09:41.481]  - use_args: TRUE
[16:09:41.481]  - Getting '...' globals ...
[16:09:41.482]    - '...' content: [n=0] 
[16:09:41.482] List of 1
[16:09:41.482]  $ ...: list()
[16:09:41.482]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:41.482]  - attr(*, "where")=List of 1
[16:09:41.482]   ..$ ...:<environment: 0x55ef0ac70fe0> 
[16:09:41.482]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:41.482]  - attr(*, "resolved")= logi TRUE
[16:09:41.482]  - attr(*, "total_size")= num NA
[16:09:41.484]  - Getting '...' globals ... DONE
[16:09:41.485] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[16:09:41.485] List of 3
[16:09:41.485]  $ ...future.FUN:function (ii)  
[16:09:41.485]  $ a            : num 1
[16:09:41.485]  $ ...          : list()
[16:09:41.485]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:41.485]  - attr(*, "where")=List of 3
[16:09:41.485]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:41.485]   ..$ a            :<environment: R_EmptyEnv> 
[16:09:41.485]   ..$ ...          :<environment: 0x55ef0ac70fe0> 
[16:09:41.485]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:41.485]  - attr(*, "resolved")= logi FALSE
[16:09:41.485]  - attr(*, "total_size")= num 2984
[16:09:41.488] Packages to be attached in all futures: [n=0] 
[16:09:41.488] getGlobalsAndPackagesXApply() ... DONE
[16:09:41.488] Number of futures (= number of chunks): 1
[16:09:41.488] Launching 1 futures (chunks) ...
[16:09:41.488] Chunk #1 of 1 ...
[16:09:41.488]  - Finding globals in 'X' for chunk #1 ...
[16:09:41.489]    + additional globals found: [n=0] 
[16:09:41.489]    + additional namespaces needed: [n=0] 
[16:09:41.489]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:41.489]  - seeds: <none>
[16:09:41.509] Created future:
[16:09:41.509] MultisessionFuture:
[16:09:41.509] Label: ‘future_lapply-1’
[16:09:41.509] Expression:
[16:09:41.509] {
[16:09:41.509]     do.call(function(...) {
[16:09:41.509]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:41.509]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:41.509]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:41.509]             on.exit(options(oopts), add = TRUE)
[16:09:41.509]         }
[16:09:41.509]         {
[16:09:41.509]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:41.509]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:41.509]                 ...future.FUN(...future.X_jj, ...)
[16:09:41.509]             })
[16:09:41.509]         }
[16:09:41.509]     }, args = future.call.arguments)
[16:09:41.509] }
[16:09:41.509] Lazy evaluation: FALSE
[16:09:41.509] Asynchronous evaluation: TRUE
[16:09:41.509] Local evaluation: TRUE
[16:09:41.509] Environment: R_GlobalEnv
[16:09:41.509] Capture standard output: TRUE
[16:09:41.509] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:41.509] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:09:41.509] Packages: <none>
[16:09:41.509] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:41.509] Resolved: FALSE
[16:09:41.509] Value: <not collected>
[16:09:41.509] Conditions captured: <none>
[16:09:41.509] Early signaling: FALSE
[16:09:41.509] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:41.509] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:41.521] Chunk #1 of 1 ... DONE
[16:09:41.521] Launching 1 futures (chunks) ... DONE
[16:09:41.521] Resolving 1 futures (chunks) ...
[16:09:41.563]  - Number of value chunks collected: 1
[16:09:41.564] Resolving 1 futures (chunks) ... DONE
[16:09:41.564] Reducing values from 1 chunks ...
[16:09:41.564]  - Number of values collected after concatenation: 1
[16:09:41.564]  - Number of values expected: 1
[16:09:41.564] Reducing values from 1 chunks ... DONE
[16:09:41.564] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[16:09:41.564] future_lapply() ...
[16:09:41.568] Number of chunks: 1
[16:09:41.568] getGlobalsAndPackagesXApply() ...
[16:09:41.569]  - future.globals: <name-value list> with names ‘42’
[16:09:41.569]  - use_args: TRUE
[16:09:41.569]  - Getting '...' globals ...
[16:09:41.569]    - '...' content: [n=0] 
[16:09:41.569] List of 1
[16:09:41.569]  $ ...: list()
[16:09:41.569]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:41.569]  - attr(*, "where")=List of 1
[16:09:41.569]   ..$ ...:<environment: 0x55ef082df1d8> 
[16:09:41.569]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:41.569]  - attr(*, "resolved")= logi TRUE
[16:09:41.569]  - attr(*, "total_size")= num NA
[16:09:41.572]  - Getting '...' globals ... DONE
[16:09:41.572] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[16:09:41.572] List of 3
[16:09:41.572]  $ a            : num 42
[16:09:41.572]  $ ...future.FUN:function (x)  
[16:09:41.572]  $ ...          : list()
[16:09:41.572]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:41.572]  - attr(*, "where")=List of 3
[16:09:41.572]   ..$ a            :<environment: R_EmptyEnv> 
[16:09:41.572]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[16:09:41.572]   ..$ ...          :<environment: 0x55ef082df1d8> 
[16:09:41.572]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:41.572]  - attr(*, "resolved")= logi FALSE
[16:09:41.572]  - attr(*, "total_size")= num NA
[16:09:41.575] Packages to be attached in all futures: [n=0] 
[16:09:41.576] getGlobalsAndPackagesXApply() ... DONE
[16:09:41.576] Number of futures (= number of chunks): 1
[16:09:41.576] Launching 1 futures (chunks) ...
[16:09:41.576] Chunk #1 of 1 ...
[16:09:41.576]  - seeds: <none>
[16:09:41.595] Created future:
[16:09:41.595] MultisessionFuture:
[16:09:41.595] Label: ‘future_lapply-1’
[16:09:41.595] Expression:
[16:09:41.595] {
[16:09:41.595]     do.call(function(...) {
[16:09:41.595]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:41.595]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:41.595]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:41.595]             on.exit(options(oopts), add = TRUE)
[16:09:41.595]         }
[16:09:41.595]         {
[16:09:41.595]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:41.595]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:41.595]                 ...future.FUN(...future.X_jj, ...)
[16:09:41.595]             })
[16:09:41.595]         }
[16:09:41.595]     }, args = future.call.arguments)
[16:09:41.595] }
[16:09:41.595] Lazy evaluation: FALSE
[16:09:41.595] Asynchronous evaluation: TRUE
[16:09:41.595] Local evaluation: TRUE
[16:09:41.595] Environment: R_GlobalEnv
[16:09:41.595] Capture standard output: TRUE
[16:09:41.595] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:41.595] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:09:41.595] Packages: <none>
[16:09:41.595] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:41.595] Resolved: FALSE
[16:09:41.595] Value: <not collected>
[16:09:41.595] Conditions captured: <none>
[16:09:41.595] Early signaling: FALSE
[16:09:41.595] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:41.595] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:41.607] Chunk #1 of 1 ... DONE
[16:09:41.607] Launching 1 futures (chunks) ... DONE
[16:09:41.607] Resolving 1 futures (chunks) ...
[16:09:41.649]  - Number of value chunks collected: 1
[16:09:41.649] Resolving 1 futures (chunks) ... DONE
[16:09:41.649] Reducing values from 1 chunks ...
[16:09:41.649]  - Number of values collected after concatenation: 1
[16:09:41.650]  - Number of values expected: 1
[16:09:41.650] Reducing values from 1 chunks ... DONE
[16:09:41.650] future_lapply() ... DONE
List of 1
 $ : num 42
> 
> message("*** future_lapply() - tricky globals ... DONE")
*** future_lapply() - tricky globals ... DONE
> 
> 
> message("*** future_lapply() - missing arguments ...")
*** future_lapply() - missing arguments ...
> 
> ## Here 'abc' becomes missing, i.e. missing(abc) is TRUE
> foo <- function(x, abc) future_lapply(x, FUN = function(y) y)
> y <- foo(1:2)
[16:09:41.651] future_lapply() ...
[16:09:41.655] Number of chunks: 2
[16:09:41.655] getGlobalsAndPackagesXApply() ...
[16:09:41.655]  - future.globals: TRUE
[16:09:41.656]  - globals found/used: [n=1] ‘FUN’
[16:09:41.656]  - needed namespaces: [n=0] 
[16:09:41.657] Finding globals ... DONE
[16:09:41.657]  - use_args: TRUE
[16:09:41.657]  - Getting '...' globals ...
[16:09:41.659]    - '...' content: [n=0] 
[16:09:41.659] List of 1
[16:09:41.659]  $ ...: list()
[16:09:41.659]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:41.659]  - attr(*, "where")=List of 1
[16:09:41.659]   ..$ ...:<environment: 0x55ef0bc017a8> 
[16:09:41.659]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:41.659]  - attr(*, "resolved")= logi TRUE
[16:09:41.659]  - attr(*, "total_size")= num NA
[16:09:41.662]  - Getting '...' globals ... DONE
[16:09:41.662] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:09:41.662] List of 2
[16:09:41.662]  $ ...future.FUN:function (y)  
[16:09:41.662]  $ ...          : list()
[16:09:41.662]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:41.662]  - attr(*, "where")=List of 2
[16:09:41.662]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:41.662]   ..$ ...          :<environment: 0x55ef0bc017a8> 
[16:09:41.662]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:41.662]  - attr(*, "resolved")= logi FALSE
[16:09:41.662]  - attr(*, "total_size")= num 280
[16:09:41.665] Packages to be attached in all futures: [n=0] 
[16:09:41.665] getGlobalsAndPackagesXApply() ... DONE
[16:09:41.665] Number of futures (= number of chunks): 2
[16:09:41.665] Launching 2 futures (chunks) ...
[16:09:41.666] Chunk #1 of 2 ...
[16:09:41.666]  - Finding globals in 'X' for chunk #1 ...
[16:09:41.666]    + additional globals found: [n=0] 
[16:09:41.666]    + additional namespaces needed: [n=0] 
[16:09:41.666]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:41.666]  - seeds: <none>
[16:09:41.685] Created future:
[16:09:41.685] MultisessionFuture:
[16:09:41.685] Label: ‘future_lapply-1’
[16:09:41.685] Expression:
[16:09:41.685] {
[16:09:41.685]     do.call(function(...) {
[16:09:41.685]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:41.685]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:41.685]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:41.685]             on.exit(options(oopts), add = TRUE)
[16:09:41.685]         }
[16:09:41.685]         {
[16:09:41.685]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:41.685]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:41.685]                 ...future.FUN(...future.X_jj, ...)
[16:09:41.685]             })
[16:09:41.685]         }
[16:09:41.685]     }, args = future.call.arguments)
[16:09:41.685] }
[16:09:41.685] Lazy evaluation: FALSE
[16:09:41.685] Asynchronous evaluation: TRUE
[16:09:41.685] Local evaluation: TRUE
[16:09:41.685] Environment: 0x55ef0bc01b98
[16:09:41.685] Capture standard output: TRUE
[16:09:41.685] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:41.685] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:41.685] Packages: <none>
[16:09:41.685] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:41.685] Resolved: FALSE
[16:09:41.685] Value: <not collected>
[16:09:41.685] Conditions captured: <none>
[16:09:41.685] Early signaling: FALSE
[16:09:41.685] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:41.685] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:41.696] Chunk #1 of 2 ... DONE
[16:09:41.696] Chunk #2 of 2 ...
[16:09:41.696]  - Finding globals in 'X' for chunk #2 ...
[16:09:41.697]    + additional globals found: [n=0] 
[16:09:41.697]    + additional namespaces needed: [n=0] 
[16:09:41.697]  - Finding globals in 'X' for chunk #2 ... DONE
[16:09:41.697]  - seeds: <none>
[16:09:41.714] Created future:
[16:09:41.715] MultisessionFuture:
[16:09:41.715] Label: ‘future_lapply-2’
[16:09:41.715] Expression:
[16:09:41.715] {
[16:09:41.715]     do.call(function(...) {
[16:09:41.715]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:41.715]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:41.715]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:41.715]             on.exit(options(oopts), add = TRUE)
[16:09:41.715]         }
[16:09:41.715]         {
[16:09:41.715]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:41.715]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:41.715]                 ...future.FUN(...future.X_jj, ...)
[16:09:41.715]             })
[16:09:41.715]         }
[16:09:41.715]     }, args = future.call.arguments)
[16:09:41.715] }
[16:09:41.715] Lazy evaluation: FALSE
[16:09:41.715] Asynchronous evaluation: TRUE
[16:09:41.715] Local evaluation: TRUE
[16:09:41.715] Environment: 0x55ef0bc01b98
[16:09:41.715] Capture standard output: TRUE
[16:09:41.715] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:41.715] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:41.715] Packages: <none>
[16:09:41.715] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:41.715] Resolved: FALSE
[16:09:41.715] Value: <not collected>
[16:09:41.715] Conditions captured: <none>
[16:09:41.715] Early signaling: FALSE
[16:09:41.715] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:41.715] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:41.726] Chunk #2 of 2 ... DONE
[16:09:41.727] Launching 2 futures (chunks) ... DONE
[16:09:41.727] Resolving 2 futures (chunks) ...
[16:09:41.761]  - Number of value chunks collected: 2
[16:09:41.761] Resolving 2 futures (chunks) ... DONE
[16:09:41.761] Reducing values from 2 chunks ...
[16:09:41.761]  - Number of values collected after concatenation: 2
[16:09:41.761]  - Number of values expected: 2
[16:09:41.762] Reducing values from 2 chunks ... DONE
[16:09:41.762] future_lapply() ... DONE
> stopifnot(identical(y, as.list(1:2)))
> 
> message("*** future_lapply() - missing arguments ... DONE")
*** future_lapply() - missing arguments ... DONE
> 
> 
> message("*** future_lapply() - false positives ...")
*** future_lapply() - false positives ...
> 
> ## Here 'abc' becomes a promise, which fails to resolve
> ## iff 'xyz' does not exist. (Issue #161)
> suppressWarnings(rm(list = "xyz"))
> foo <- function(x, abc) future_lapply(x, FUN = function(y) y)
> y <- foo(1:2, abc = (xyz >= 3.14))
[16:09:41.762] future_lapply() ...
[16:09:41.766] Number of chunks: 2
[16:09:41.767] getGlobalsAndPackagesXApply() ...
[16:09:41.767]  - future.globals: TRUE
[16:09:41.768]  - globals found/used: [n=1] ‘FUN’
[16:09:41.768]  - needed namespaces: [n=0] 
[16:09:41.769] Finding globals ... DONE
[16:09:41.769]  - use_args: TRUE
[16:09:41.769]  - Getting '...' globals ...
[16:09:41.769]    - '...' content: [n=0] 
[16:09:41.769] List of 1
[16:09:41.769]  $ ...: list()
[16:09:41.769]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:41.769]  - attr(*, "where")=List of 1
[16:09:41.769]   ..$ ...:<environment: 0x55ef086c0778> 
[16:09:41.769]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:41.769]  - attr(*, "resolved")= logi TRUE
[16:09:41.769]  - attr(*, "total_size")= num NA
[16:09:41.772]  - Getting '...' globals ... DONE
[16:09:41.772] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:09:41.772] List of 2
[16:09:41.772]  $ ...future.FUN:function (y)  
[16:09:41.772]  $ ...          : list()
[16:09:41.772]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:41.772]  - attr(*, "where")=List of 2
[16:09:41.772]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:41.772]   ..$ ...          :<environment: 0x55ef086c0778> 
[16:09:41.772]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:41.772]  - attr(*, "resolved")= logi FALSE
[16:09:41.772]  - attr(*, "total_size")= num 280
[16:09:41.775] Packages to be attached in all futures: [n=0] 
[16:09:41.775] getGlobalsAndPackagesXApply() ... DONE
[16:09:41.775] Number of futures (= number of chunks): 2
[16:09:41.775] Launching 2 futures (chunks) ...
[16:09:41.775] Chunk #1 of 2 ...
[16:09:41.775]  - Finding globals in 'X' for chunk #1 ...
[16:09:41.776]    + additional globals found: [n=0] 
[16:09:41.776]    + additional namespaces needed: [n=0] 
[16:09:41.776]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:41.776]  - seeds: <none>
[16:09:41.794] Created future:
[16:09:41.794] MultisessionFuture:
[16:09:41.794] Label: ‘future_lapply-1’
[16:09:41.794] Expression:
[16:09:41.794] {
[16:09:41.794]     do.call(function(...) {
[16:09:41.794]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:41.794]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:41.794]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:41.794]             on.exit(options(oopts), add = TRUE)
[16:09:41.794]         }
[16:09:41.794]         {
[16:09:41.794]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:41.794]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:41.794]                 ...future.FUN(...future.X_jj, ...)
[16:09:41.794]             })
[16:09:41.794]         }
[16:09:41.794]     }, args = future.call.arguments)
[16:09:41.794] }
[16:09:41.794] Lazy evaluation: FALSE
[16:09:41.794] Asynchronous evaluation: TRUE
[16:09:41.794] Local evaluation: TRUE
[16:09:41.794] Environment: 0x55ef086c0388
[16:09:41.794] Capture standard output: TRUE
[16:09:41.794] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:41.794] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:41.794] Packages: <none>
[16:09:41.794] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:41.794] Resolved: FALSE
[16:09:41.794] Value: <not collected>
[16:09:41.794] Conditions captured: <none>
[16:09:41.794] Early signaling: FALSE
[16:09:41.794] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:41.794] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:41.805] Chunk #1 of 2 ... DONE
[16:09:41.806] Chunk #2 of 2 ...
[16:09:41.806]  - Finding globals in 'X' for chunk #2 ...
[16:09:41.806]    + additional globals found: [n=0] 
[16:09:41.806]    + additional namespaces needed: [n=0] 
[16:09:41.806]  - Finding globals in 'X' for chunk #2 ... DONE
[16:09:41.806]  - seeds: <none>
[16:09:41.825] Created future:
[16:09:41.826] MultisessionFuture:
[16:09:41.826] Label: ‘future_lapply-2’
[16:09:41.826] Expression:
[16:09:41.826] {
[16:09:41.826]     do.call(function(...) {
[16:09:41.826]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:41.826]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:41.826]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:41.826]             on.exit(options(oopts), add = TRUE)
[16:09:41.826]         }
[16:09:41.826]         {
[16:09:41.826]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:41.826]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:41.826]                 ...future.FUN(...future.X_jj, ...)
[16:09:41.826]             })
[16:09:41.826]         }
[16:09:41.826]     }, args = future.call.arguments)
[16:09:41.826] }
[16:09:41.826] Lazy evaluation: FALSE
[16:09:41.826] Asynchronous evaluation: TRUE
[16:09:41.826] Local evaluation: TRUE
[16:09:41.826] Environment: 0x55ef086c0388
[16:09:41.826] Capture standard output: TRUE
[16:09:41.826] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:41.826] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:41.826] Packages: <none>
[16:09:41.826] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:41.826] Resolved: FALSE
[16:09:41.826] Value: <not collected>
[16:09:41.826] Conditions captured: <none>
[16:09:41.826] Early signaling: FALSE
[16:09:41.826] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:41.826] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:41.839] Chunk #2 of 2 ... DONE
[16:09:41.840] Launching 2 futures (chunks) ... DONE
[16:09:41.840] Resolving 2 futures (chunks) ...
[16:09:41.883]  - Number of value chunks collected: 2
[16:09:41.883] Resolving 2 futures (chunks) ... DONE
[16:09:41.884] Reducing values from 2 chunks ...
[16:09:41.884]  - Number of values collected after concatenation: 2
[16:09:41.884]  - Number of values expected: 2
[16:09:41.884] Reducing values from 2 chunks ... DONE
[16:09:41.884] future_lapply() ... DONE
> stopifnot(identical(y, as.list(1:2)))
> 
> message("*** future_lapply() - false positives ... DONE")
*** future_lapply() - false positives ... DONE
> 
> 
> message("*** future_lapply() - too large ...")
*** future_lapply() - too large ...
> 
> oMaxSize <- getOption("future.globals.maxSize")
> X <- replicate(10L, 1:100, simplify = FALSE)
> FUN <- function(x) {
+   getOption("future.globals.maxSize")
+ }
> 
> y0 <- lapply(X, FUN = FUN)
> stopifnot(all(sapply(y0, FUN = identical, oMaxSize)))
> 
> sizes <- unclass(c(FUN = object.size(FUN), X = object.size(X)))
> cat(sprintf("Baseline size of globals: %.2f KiB\n", sizes[["FUN"]] / 1024))
Baseline size of globals: 1.80 KiB
> 
> message("- true positive ...")
- true positive ...
> options(future.globals.maxSize = 1L)
> res <- tryCatch({
+   y <- future_lapply(X, FUN = FUN)
+ }, error = identity)
[16:09:41.886] future_lapply() ...
[16:09:41.891] Number of chunks: 2
[16:09:41.891] getGlobalsAndPackagesXApply() ...
[16:09:41.891]  - future.globals: TRUE
[16:09:41.892] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> res <- NULL
> options(future.globals.maxSize = oMaxSize)
> 
> maxSize <- getOption("future.globals.maxSize")
> y <- future_lapply(X, FUN = FUN)
[16:09:41.893] future_lapply() ...
[16:09:41.896] Number of chunks: 2
[16:09:41.896] getGlobalsAndPackagesXApply() ...
[16:09:41.896]  - future.globals: TRUE
[16:09:41.898]  - globals found/used: [n=1] ‘FUN’
[16:09:41.898]  - needed namespaces: [n=0] 
[16:09:41.898] Finding globals ... DONE
[16:09:41.898]  - use_args: TRUE
[16:09:41.898]  - Getting '...' globals ...
[16:09:41.899]    - '...' content: [n=0] 
[16:09:41.899] List of 1
[16:09:41.899]  $ ...: list()
[16:09:41.899]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:41.899]  - attr(*, "where")=List of 1
[16:09:41.899]   ..$ ...:<environment: 0x55ef0a37f718> 
[16:09:41.899]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:41.899]  - attr(*, "resolved")= logi TRUE
[16:09:41.899]  - attr(*, "total_size")= num NA
[16:09:41.901]  - Getting '...' globals ... DONE
[16:09:41.901] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:09:41.902] List of 2
[16:09:41.902]  $ ...future.FUN:function (x)  
[16:09:41.902]  $ ...          : list()
[16:09:41.902]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:41.902]  - attr(*, "where")=List of 2
[16:09:41.902]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:41.902]   ..$ ...          :<environment: 0x55ef0a37f718> 
[16:09:41.902]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:41.902]  - attr(*, "resolved")= logi FALSE
[16:09:41.902]  - attr(*, "total_size")= num 1840
[16:09:41.904] Packages to be attached in all futures: [n=0] 
[16:09:41.904] getGlobalsAndPackagesXApply() ... DONE
[16:09:41.905] Number of futures (= number of chunks): 2
[16:09:41.905] Launching 2 futures (chunks) ...
[16:09:41.905] Chunk #1 of 2 ...
[16:09:41.905]  - Finding globals in 'X' for chunk #1 ...
[16:09:41.905]    + additional globals found: [n=0] 
[16:09:41.905]    + additional namespaces needed: [n=0] 
[16:09:41.905]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:41.906]  - Adjusted option 'future.globals.maxSize': 524288000 -> 5 * 524288000 = 2621440000 (bytes)
[16:09:41.906]  - seeds: <none>
[16:09:41.923] Created future:
[16:09:41.924] MultisessionFuture:
[16:09:41.924] Label: ‘future_lapply-1’
[16:09:41.924] Expression:
[16:09:41.924] {
[16:09:41.924]     do.call(function(...) {
[16:09:41.924]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:41.924]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:41.924]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:41.924]             on.exit(options(oopts), add = TRUE)
[16:09:41.924]         }
[16:09:41.924]         {
[16:09:41.924]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:41.924]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:41.924]                 ...future.FUN(...future.X_jj, ...)
[16:09:41.924]             })
[16:09:41.924]         }
[16:09:41.924]     }, args = future.call.arguments)
[16:09:41.924] }
[16:09:41.924] Lazy evaluation: FALSE
[16:09:41.924] Asynchronous evaluation: TRUE
[16:09:41.924] Local evaluation: TRUE
[16:09:41.924] Environment: R_GlobalEnv
[16:09:41.924] Capture standard output: TRUE
[16:09:41.924] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:41.924] Globals: 5 objects totaling 3.98 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:41.924] Packages: <none>
[16:09:41.924] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:41.924] Resolved: FALSE
[16:09:41.924] Value: <not collected>
[16:09:41.924] Conditions captured: <none>
[16:09:41.924] Early signaling: FALSE
[16:09:41.924] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:41.924] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:41.935] Chunk #1 of 2 ... DONE
[16:09:41.935] Chunk #2 of 2 ...
[16:09:41.935]  - Finding globals in 'X' for chunk #2 ...
[16:09:41.936]    + additional globals found: [n=0] 
[16:09:41.936]    + additional namespaces needed: [n=0] 
[16:09:41.936]  - Finding globals in 'X' for chunk #2 ... DONE
[16:09:41.936]  - Adjusted option 'future.globals.maxSize': 524288000 -> 5 * 524288000 = 2621440000 (bytes)
[16:09:41.936]  - seeds: <none>
[16:09:41.954] Created future:
[16:09:41.954] MultisessionFuture:
[16:09:41.954] Label: ‘future_lapply-2’
[16:09:41.954] Expression:
[16:09:41.954] {
[16:09:41.954]     do.call(function(...) {
[16:09:41.954]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:41.954]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:41.954]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:41.954]             on.exit(options(oopts), add = TRUE)
[16:09:41.954]         }
[16:09:41.954]         {
[16:09:41.954]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:41.954]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:41.954]                 ...future.FUN(...future.X_jj, ...)
[16:09:41.954]             })
[16:09:41.954]         }
[16:09:41.954]     }, args = future.call.arguments)
[16:09:41.954] }
[16:09:41.954] Lazy evaluation: FALSE
[16:09:41.954] Asynchronous evaluation: TRUE
[16:09:41.954] Local evaluation: TRUE
[16:09:41.954] Environment: R_GlobalEnv
[16:09:41.954] Capture standard output: TRUE
[16:09:41.954] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:41.954] Globals: 5 objects totaling 3.98 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:41.954] Packages: <none>
[16:09:41.954] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:41.954] Resolved: FALSE
[16:09:41.954] Value: <not collected>
[16:09:41.954] Conditions captured: <none>
[16:09:41.954] Early signaling: FALSE
[16:09:41.954] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:41.954] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:41.966] Chunk #2 of 2 ... DONE
[16:09:41.966] Launching 2 futures (chunks) ... DONE
[16:09:41.966] Resolving 2 futures (chunks) ...
[16:09:42.001]  - Number of value chunks collected: 2
[16:09:42.001] Resolving 2 futures (chunks) ... DONE
[16:09:42.001] Reducing values from 2 chunks ...
[16:09:42.001]  - Number of values collected after concatenation: 10
[16:09:42.001]  - Number of values expected: 10
[16:09:42.001] Reducing values from 2 chunks ... DONE
[16:09:42.002] future_lapply() ... DONE
> str(y)
List of 10
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
> stopifnot(all(sapply(y, FUN = identical, oMaxSize)))
> 
> message("- approximately invariant to chunk size ...")
- approximately invariant to chunk size ...
> maxSize <- sizes[["FUN"]] + sizes[["X"]] / length(X)
> options(future.globals.maxSize = maxSize)
> 
> for (chunk.size in c(1L, 2L, 5L, 10L)) {
+   y <- future_lapply(X, FUN = FUN, future.chunk.size = chunk.size)
+   str(y)
+   stopifnot(all(unlist(y) == maxSize))
+   cat(sprintf("maxSize = %g bytes\nfuture.globals.maxSize = %g bytes\n",
+               maxSize, getOption("future.globals.maxSize")))
+   stopifnot(getOption("future.globals.maxSize") == maxSize)
+ }
[16:09:42.011] future_lapply() ...
[16:09:42.015] Number of chunks: 10
[16:09:42.015] getGlobalsAndPackagesXApply() ...
[16:09:42.015]  - future.globals: TRUE
[16:09:42.017]  - globals found/used: [n=1] ‘FUN’
[16:09:42.017]  - needed namespaces: [n=0] 
[16:09:42.017] Finding globals ... DONE
[16:09:42.017]  - use_args: TRUE
[16:09:42.017]  - Getting '...' globals ...
[16:09:42.018]    - '...' content: [n=0] 
[16:09:42.018] List of 1
[16:09:42.018]  $ ...: list()
[16:09:42.018]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:42.018]  - attr(*, "where")=List of 1
[16:09:42.018]   ..$ ...:<environment: 0x55ef0b7effa0> 
[16:09:42.018]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:42.018]  - attr(*, "resolved")= logi TRUE
[16:09:42.018]  - attr(*, "total_size")= num NA
[16:09:42.020]  - Getting '...' globals ... DONE
[16:09:42.020] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:09:42.020] List of 2
[16:09:42.020]  $ ...future.FUN:function (x)  
[16:09:42.020]  $ ...          : list()
[16:09:42.020]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:42.020]  - attr(*, "where")=List of 2
[16:09:42.020]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:42.020]   ..$ ...          :<environment: 0x55ef0b7effa0> 
[16:09:42.020]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:42.020]  - attr(*, "resolved")= logi FALSE
[16:09:42.020]  - attr(*, "total_size")= num 1840
[16:09:42.023] Packages to be attached in all futures: [n=0] 
[16:09:42.023] getGlobalsAndPackagesXApply() ... DONE
[16:09:42.023] Number of futures (= number of chunks): 10
[16:09:42.023] Launching 10 futures (chunks) ...
[16:09:42.023] Chunk #1 of 10 ...
[16:09:42.024]  - Finding globals in 'X' for chunk #1 ...
[16:09:42.024]    + additional globals found: [n=0] 
[16:09:42.024]    + additional namespaces needed: [n=0] 
[16:09:42.024]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:42.024]  - seeds: <none>
[16:09:42.041] Created future:
[16:09:42.042] MultisessionFuture:
[16:09:42.042] Label: ‘future_lapply-1’
[16:09:42.042] Expression:
[16:09:42.042] {
[16:09:42.042]     do.call(function(...) {
[16:09:42.042]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:42.042]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:42.042]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:42.042]             on.exit(options(oopts), add = TRUE)
[16:09:42.042]         }
[16:09:42.042]         {
[16:09:42.042]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:42.042]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:42.042]                 ...future.FUN(...future.X_jj, ...)
[16:09:42.042]             })
[16:09:42.042]         }
[16:09:42.042]     }, args = future.call.arguments)
[16:09:42.042] }
[16:09:42.042] Lazy evaluation: FALSE
[16:09:42.042] Asynchronous evaluation: TRUE
[16:09:42.042] Local evaluation: TRUE
[16:09:42.042] Environment: R_GlobalEnv
[16:09:42.042] Capture standard output: TRUE
[16:09:42.042] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:42.042] Globals: 5 objects totaling 2.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:42.042] Packages: <none>
[16:09:42.042] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:42.042] Resolved: FALSE
[16:09:42.042] Value: <not collected>
[16:09:42.042] Conditions captured: <none>
[16:09:42.042] Early signaling: FALSE
[16:09:42.042] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:42.042] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:42.053] Chunk #1 of 10 ... DONE
[16:09:42.053] Chunk #2 of 10 ...
[16:09:42.053]  - Finding globals in 'X' for chunk #2 ...
[16:09:42.054]    + additional globals found: [n=0] 
[16:09:42.054]    + additional namespaces needed: [n=0] 
[16:09:42.054]  - Finding globals in 'X' for chunk #2 ... DONE
[16:09:42.054]  - seeds: <none>
[16:09:42.073] Created future:
[16:09:42.073] MultisessionFuture:
[16:09:42.073] Label: ‘future_lapply-2’
[16:09:42.073] Expression:
[16:09:42.073] {
[16:09:42.073]     do.call(function(...) {
[16:09:42.073]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:42.073]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:42.073]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:42.073]             on.exit(options(oopts), add = TRUE)
[16:09:42.073]         }
[16:09:42.073]         {
[16:09:42.073]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:42.073]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:42.073]                 ...future.FUN(...future.X_jj, ...)
[16:09:42.073]             })
[16:09:42.073]         }
[16:09:42.073]     }, args = future.call.arguments)
[16:09:42.073] }
[16:09:42.073] Lazy evaluation: FALSE
[16:09:42.073] Asynchronous evaluation: TRUE
[16:09:42.073] Local evaluation: TRUE
[16:09:42.073] Environment: R_GlobalEnv
[16:09:42.073] Capture standard output: TRUE
[16:09:42.073] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:42.073] Globals: 5 objects totaling 2.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:42.073] Packages: <none>
[16:09:42.073] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:42.073] Resolved: FALSE
[16:09:42.073] Value: <not collected>
[16:09:42.073] Conditions captured: <none>
[16:09:42.073] Early signaling: FALSE
[16:09:42.073] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:42.073] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:42.085] Chunk #2 of 10 ... DONE
[16:09:42.085] Chunk #3 of 10 ...
[16:09:42.085]  - Finding globals in 'X' for chunk #3 ...
[16:09:42.085]    + additional globals found: [n=0] 
[16:09:42.085]    + additional namespaces needed: [n=0] 
[16:09:42.085]  - Finding globals in 'X' for chunk #3 ... DONE
[16:09:42.085]  - seeds: <none>
[16:09:42.114] Created future:
[16:09:42.114] MultisessionFuture:
[16:09:42.114] Label: ‘future_lapply-3’
[16:09:42.114] Expression:
[16:09:42.114] {
[16:09:42.114]     do.call(function(...) {
[16:09:42.114]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:42.114]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:42.114]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:42.114]             on.exit(options(oopts), add = TRUE)
[16:09:42.114]         }
[16:09:42.114]         {
[16:09:42.114]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:42.114]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:42.114]                 ...future.FUN(...future.X_jj, ...)
[16:09:42.114]             })
[16:09:42.114]         }
[16:09:42.114]     }, args = future.call.arguments)
[16:09:42.114] }
[16:09:42.114] Lazy evaluation: FALSE
[16:09:42.114] Asynchronous evaluation: TRUE
[16:09:42.114] Local evaluation: TRUE
[16:09:42.114] Environment: R_GlobalEnv
[16:09:42.114] Capture standard output: TRUE
[16:09:42.114] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:42.114] Globals: 5 objects totaling 2.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:42.114] Packages: <none>
[16:09:42.114] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:42.114] Resolved: FALSE
[16:09:42.114] Value: <not collected>
[16:09:42.114] Conditions captured: <none>
[16:09:42.114] Early signaling: FALSE
[16:09:42.114] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:42.114] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:42.125] Chunk #3 of 10 ... DONE
[16:09:42.125] Chunk #4 of 10 ...
[16:09:42.126]  - Finding globals in 'X' for chunk #4 ...
[16:09:42.126]    + additional globals found: [n=0] 
[16:09:42.126]    + additional namespaces needed: [n=0] 
[16:09:42.126]  - Finding globals in 'X' for chunk #4 ... DONE
[16:09:42.126]  - seeds: <none>
[16:09:42.167] Created future:
[16:09:42.167] MultisessionFuture:
[16:09:42.167] Label: ‘future_lapply-4’
[16:09:42.167] Expression:
[16:09:42.167] {
[16:09:42.167]     do.call(function(...) {
[16:09:42.167]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:42.167]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:42.167]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:42.167]             on.exit(options(oopts), add = TRUE)
[16:09:42.167]         }
[16:09:42.167]         {
[16:09:42.167]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:42.167]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:42.167]                 ...future.FUN(...future.X_jj, ...)
[16:09:42.167]             })
[16:09:42.167]         }
[16:09:42.167]     }, args = future.call.arguments)
[16:09:42.167] }
[16:09:42.167] Lazy evaluation: FALSE
[16:09:42.167] Asynchronous evaluation: TRUE
[16:09:42.167] Local evaluation: TRUE
[16:09:42.167] Environment: R_GlobalEnv
[16:09:42.167] Capture standard output: TRUE
[16:09:42.167] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:42.167] Globals: 5 objects totaling 2.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:42.167] Packages: <none>
[16:09:42.167] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:42.167] Resolved: FALSE
[16:09:42.167] Value: <not collected>
[16:09:42.167] Conditions captured: <none>
[16:09:42.167] Early signaling: FALSE
[16:09:42.167] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:42.167] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:42.179] Chunk #4 of 10 ... DONE
[16:09:42.179] Chunk #5 of 10 ...
[16:09:42.179]  - Finding globals in 'X' for chunk #5 ...
[16:09:42.179]    + additional globals found: [n=0] 
[16:09:42.179]    + additional namespaces needed: [n=0] 
[16:09:42.179]  - Finding globals in 'X' for chunk #5 ... DONE
[16:09:42.180]  - seeds: <none>
[16:09:42.208] Created future:
[16:09:42.208] MultisessionFuture:
[16:09:42.208] Label: ‘future_lapply-5’
[16:09:42.208] Expression:
[16:09:42.208] {
[16:09:42.208]     do.call(function(...) {
[16:09:42.208]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:42.208]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:42.208]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:42.208]             on.exit(options(oopts), add = TRUE)
[16:09:42.208]         }
[16:09:42.208]         {
[16:09:42.208]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:42.208]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:42.208]                 ...future.FUN(...future.X_jj, ...)
[16:09:42.208]             })
[16:09:42.208]         }
[16:09:42.208]     }, args = future.call.arguments)
[16:09:42.208] }
[16:09:42.208] Lazy evaluation: FALSE
[16:09:42.208] Asynchronous evaluation: TRUE
[16:09:42.208] Local evaluation: TRUE
[16:09:42.208] Environment: R_GlobalEnv
[16:09:42.208] Capture standard output: TRUE
[16:09:42.208] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:42.208] Globals: 5 objects totaling 2.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:42.208] Packages: <none>
[16:09:42.208] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:42.208] Resolved: FALSE
[16:09:42.208] Value: <not collected>
[16:09:42.208] Conditions captured: <none>
[16:09:42.208] Early signaling: FALSE
[16:09:42.208] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:42.208] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:42.220] Chunk #5 of 10 ... DONE
[16:09:42.220] Chunk #6 of 10 ...
[16:09:42.220]  - Finding globals in 'X' for chunk #6 ...
[16:09:42.221]    + additional globals found: [n=0] 
[16:09:42.221]    + additional namespaces needed: [n=0] 
[16:09:42.221]  - Finding globals in 'X' for chunk #6 ... DONE
[16:09:42.221]  - seeds: <none>
[16:09:42.250] Created future:
[16:09:42.251] MultisessionFuture:
[16:09:42.251] Label: ‘future_lapply-6’
[16:09:42.251] Expression:
[16:09:42.251] {
[16:09:42.251]     do.call(function(...) {
[16:09:42.251]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:42.251]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:42.251]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:42.251]             on.exit(options(oopts), add = TRUE)
[16:09:42.251]         }
[16:09:42.251]         {
[16:09:42.251]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:42.251]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:42.251]                 ...future.FUN(...future.X_jj, ...)
[16:09:42.251]             })
[16:09:42.251]         }
[16:09:42.251]     }, args = future.call.arguments)
[16:09:42.251] }
[16:09:42.251] Lazy evaluation: FALSE
[16:09:42.251] Asynchronous evaluation: TRUE
[16:09:42.251] Local evaluation: TRUE
[16:09:42.251] Environment: R_GlobalEnv
[16:09:42.251] Capture standard output: TRUE
[16:09:42.251] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:42.251] Globals: 5 objects totaling 2.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:42.251] Packages: <none>
[16:09:42.251] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:42.251] Resolved: FALSE
[16:09:42.251] Value: <not collected>
[16:09:42.251] Conditions captured: <none>
[16:09:42.251] Early signaling: FALSE
[16:09:42.251] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:42.251] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:42.263] Chunk #6 of 10 ... DONE
[16:09:42.263] Chunk #7 of 10 ...
[16:09:42.263]  - Finding globals in 'X' for chunk #7 ...
[16:09:42.263]    + additional globals found: [n=0] 
[16:09:42.263]    + additional namespaces needed: [n=0] 
[16:09:42.264]  - Finding globals in 'X' for chunk #7 ... DONE
[16:09:42.264]  - seeds: <none>
[16:09:42.293] Created future:
[16:09:42.294] MultisessionFuture:
[16:09:42.294] Label: ‘future_lapply-7’
[16:09:42.294] Expression:
[16:09:42.294] {
[16:09:42.294]     do.call(function(...) {
[16:09:42.294]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:42.294]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:42.294]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:42.294]             on.exit(options(oopts), add = TRUE)
[16:09:42.294]         }
[16:09:42.294]         {
[16:09:42.294]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:42.294]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:42.294]                 ...future.FUN(...future.X_jj, ...)
[16:09:42.294]             })
[16:09:42.294]         }
[16:09:42.294]     }, args = future.call.arguments)
[16:09:42.294] }
[16:09:42.294] Lazy evaluation: FALSE
[16:09:42.294] Asynchronous evaluation: TRUE
[16:09:42.294] Local evaluation: TRUE
[16:09:42.294] Environment: R_GlobalEnv
[16:09:42.294] Capture standard output: TRUE
[16:09:42.294] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:42.294] Globals: 5 objects totaling 2.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:42.294] Packages: <none>
[16:09:42.294] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:42.294] Resolved: FALSE
[16:09:42.294] Value: <not collected>
[16:09:42.294] Conditions captured: <none>
[16:09:42.294] Early signaling: FALSE
[16:09:42.294] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:42.294] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:42.305] Chunk #7 of 10 ... DONE
[16:09:42.305] Chunk #8 of 10 ...
[16:09:42.305]  - Finding globals in 'X' for chunk #8 ...
[16:09:42.306]    + additional globals found: [n=0] 
[16:09:42.306]    + additional namespaces needed: [n=0] 
[16:09:42.306]  - Finding globals in 'X' for chunk #8 ... DONE
[16:09:42.306]  - seeds: <none>
[16:09:42.334] Created future:
[16:09:42.334] MultisessionFuture:
[16:09:42.334] Label: ‘future_lapply-8’
[16:09:42.334] Expression:
[16:09:42.334] {
[16:09:42.334]     do.call(function(...) {
[16:09:42.334]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:42.334]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:42.334]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:42.334]             on.exit(options(oopts), add = TRUE)
[16:09:42.334]         }
[16:09:42.334]         {
[16:09:42.334]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:42.334]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:42.334]                 ...future.FUN(...future.X_jj, ...)
[16:09:42.334]             })
[16:09:42.334]         }
[16:09:42.334]     }, args = future.call.arguments)
[16:09:42.334] }
[16:09:42.334] Lazy evaluation: FALSE
[16:09:42.334] Asynchronous evaluation: TRUE
[16:09:42.334] Local evaluation: TRUE
[16:09:42.334] Environment: R_GlobalEnv
[16:09:42.334] Capture standard output: TRUE
[16:09:42.334] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:42.334] Globals: 5 objects totaling 2.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:42.334] Packages: <none>
[16:09:42.334] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:42.334] Resolved: FALSE
[16:09:42.334] Value: <not collected>
[16:09:42.334] Conditions captured: <none>
[16:09:42.334] Early signaling: FALSE
[16:09:42.334] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:42.334] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:42.346] Chunk #8 of 10 ... DONE
[16:09:42.346] Chunk #9 of 10 ...
[16:09:42.346]  - Finding globals in 'X' for chunk #9 ...
[16:09:42.346]    + additional globals found: [n=0] 
[16:09:42.347]    + additional namespaces needed: [n=0] 
[16:09:42.347]  - Finding globals in 'X' for chunk #9 ... DONE
[16:09:42.347]  - seeds: <none>
[16:09:42.376] Created future:
[16:09:42.376] MultisessionFuture:
[16:09:42.376] Label: ‘future_lapply-9’
[16:09:42.376] Expression:
[16:09:42.376] {
[16:09:42.376]     do.call(function(...) {
[16:09:42.376]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:42.376]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:42.376]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:42.376]             on.exit(options(oopts), add = TRUE)
[16:09:42.376]         }
[16:09:42.376]         {
[16:09:42.376]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:42.376]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:42.376]                 ...future.FUN(...future.X_jj, ...)
[16:09:42.376]             })
[16:09:42.376]         }
[16:09:42.376]     }, args = future.call.arguments)
[16:09:42.376] }
[16:09:42.376] Lazy evaluation: FALSE
[16:09:42.376] Asynchronous evaluation: TRUE
[16:09:42.376] Local evaluation: TRUE
[16:09:42.376] Environment: R_GlobalEnv
[16:09:42.376] Capture standard output: TRUE
[16:09:42.376] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:42.376] Globals: 5 objects totaling 2.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:42.376] Packages: <none>
[16:09:42.376] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:42.376] Resolved: FALSE
[16:09:42.376] Value: <not collected>
[16:09:42.376] Conditions captured: <none>
[16:09:42.376] Early signaling: FALSE
[16:09:42.376] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:42.376] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:42.387] Chunk #9 of 10 ... DONE
[16:09:42.387] Chunk #10 of 10 ...
[16:09:42.388]  - Finding globals in 'X' for chunk #10 ...
[16:09:42.388]    + additional globals found: [n=0] 
[16:09:42.388]    + additional namespaces needed: [n=0] 
[16:09:42.388]  - Finding globals in 'X' for chunk #10 ... DONE
[16:09:42.388]  - seeds: <none>
[16:09:42.419] Created future:
[16:09:42.419] MultisessionFuture:
[16:09:42.419] Label: ‘future_lapply-10’
[16:09:42.419] Expression:
[16:09:42.419] {
[16:09:42.419]     do.call(function(...) {
[16:09:42.419]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:42.419]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:42.419]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:42.419]             on.exit(options(oopts), add = TRUE)
[16:09:42.419]         }
[16:09:42.419]         {
[16:09:42.419]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:42.419]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:42.419]                 ...future.FUN(...future.X_jj, ...)
[16:09:42.419]             })
[16:09:42.419]         }
[16:09:42.419]     }, args = future.call.arguments)
[16:09:42.419] }
[16:09:42.419] Lazy evaluation: FALSE
[16:09:42.419] Asynchronous evaluation: TRUE
[16:09:42.419] Local evaluation: TRUE
[16:09:42.419] Environment: R_GlobalEnv
[16:09:42.419] Capture standard output: TRUE
[16:09:42.419] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:42.419] Globals: 5 objects totaling 2.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:09:42.419] Packages: <none>
[16:09:42.419] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:42.419] Resolved: FALSE
[16:09:42.419] Value: <not collected>
[16:09:42.419] Conditions captured: <none>
[16:09:42.419] Early signaling: FALSE
[16:09:42.419] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:42.419] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:42.432] Chunk #10 of 10 ... DONE
[16:09:42.432] Launching 10 futures (chunks) ... DONE
[16:09:42.432] Resolving 10 futures (chunks) ...
[16:09:42.477]  - Number of value chunks collected: 10
[16:09:42.477] Resolving 10 futures (chunks) ... DONE
[16:09:42.477] Reducing values from 10 chunks ...
[16:09:42.477]  - Number of values collected after concatenation: 10
[16:09:42.477]  - Number of values expected: 10
[16:09:42.478] Reducing values from 10 chunks ... DONE
[16:09:42.478] future_lapply() ... DONE
List of 10
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[16:09:42.480] future_lapply() ...
[16:09:42.484] Number of chunks: 5
[16:09:42.484] getGlobalsAndPackagesXApply() ...
[16:09:42.484]  - future.globals: TRUE
[16:09:42.486]  - globals found/used: [n=1] ‘FUN’
[16:09:42.486]  - needed namespaces: [n=0] 
[16:09:42.486] Finding globals ... DONE
[16:09:42.486]  - use_args: TRUE
[16:09:42.486]  - Getting '...' globals ...
[16:09:42.487]    - '...' content: [n=0] 
[16:09:42.487] List of 1
[16:09:42.487]  $ ...: list()
[16:09:42.487]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:42.487]  - attr(*, "where")=List of 1
[16:09:42.487]   ..$ ...:<environment: 0x55ef0a4646c8> 
[16:09:42.487]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:42.487]  - attr(*, "resolved")= logi TRUE
[16:09:42.487]  - attr(*, "total_size")= num NA
[16:09:42.489]  - Getting '...' globals ... DONE
[16:09:42.490] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:09:42.490] List of 2
[16:09:42.490]  $ ...future.FUN:function (x)  
[16:09:42.490]  $ ...          : list()
[16:09:42.490]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:42.490]  - attr(*, "where")=List of 2
[16:09:42.490]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:42.490]   ..$ ...          :<environment: 0x55ef0a4646c8> 
[16:09:42.490]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:42.490]  - attr(*, "resolved")= logi FALSE
[16:09:42.490]  - attr(*, "total_size")= num 1840
[16:09:42.492] Packages to be attached in all futures: [n=0] 
[16:09:42.492] getGlobalsAndPackagesXApply() ... DONE
[16:09:42.493] Number of futures (= number of chunks): 5
[16:09:42.493] Launching 5 futures (chunks) ...
[16:09:42.493] Chunk #1 of 5 ...
[16:09:42.493]  - Finding globals in 'X' for chunk #1 ...
[16:09:42.493]    + additional globals found: [n=0] 
[16:09:42.493]    + additional namespaces needed: [n=0] 
[16:09:42.493]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:42.494]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[16:09:42.494]  - seeds: <none>
[16:09:42.512] Created future:
[16:09:42.512] MultisessionFuture:
[16:09:42.512] Label: ‘future_lapply-1’
[16:09:42.512] Expression:
[16:09:42.512] {
[16:09:42.512]     do.call(function(...) {
[16:09:42.512]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:42.512]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:42.512]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:42.512]             on.exit(options(oopts), add = TRUE)
[16:09:42.512]         }
[16:09:42.512]         {
[16:09:42.512]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:42.512]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:42.512]                 ...future.FUN(...future.X_jj, ...)
[16:09:42.512]             })
[16:09:42.512]         }
[16:09:42.512]     }, args = future.call.arguments)
[16:09:42.512] }
[16:09:42.512] Lazy evaluation: FALSE
[16:09:42.512] Asynchronous evaluation: TRUE
[16:09:42.512] Local evaluation: TRUE
[16:09:42.512] Environment: R_GlobalEnv
[16:09:42.512] Capture standard output: TRUE
[16:09:42.512] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:42.512] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:09:42.512] Packages: <none>
[16:09:42.512] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:42.512] Resolved: FALSE
[16:09:42.512] Value: <not collected>
[16:09:42.512] Conditions captured: <none>
[16:09:42.512] Early signaling: FALSE
[16:09:42.512] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:42.512] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:42.524] Chunk #1 of 5 ... DONE
[16:09:42.524] Chunk #2 of 5 ...
[16:09:42.524]  - Finding globals in 'X' for chunk #2 ...
[16:09:42.524]    + additional globals found: [n=0] 
[16:09:42.524]    + additional namespaces needed: [n=0] 
[16:09:42.525]  - Finding globals in 'X' for chunk #2 ... DONE
[16:09:42.525]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[16:09:42.525]  - seeds: <none>
[16:09:42.543] Created future:
[16:09:42.543] MultisessionFuture:
[16:09:42.543] Label: ‘future_lapply-2’
[16:09:42.543] Expression:
[16:09:42.543] {
[16:09:42.543]     do.call(function(...) {
[16:09:42.543]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:42.543]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:42.543]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:42.543]             on.exit(options(oopts), add = TRUE)
[16:09:42.543]         }
[16:09:42.543]         {
[16:09:42.543]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:42.543]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:42.543]                 ...future.FUN(...future.X_jj, ...)
[16:09:42.543]             })
[16:09:42.543]         }
[16:09:42.543]     }, args = future.call.arguments)
[16:09:42.543] }
[16:09:42.543] Lazy evaluation: FALSE
[16:09:42.543] Asynchronous evaluation: TRUE
[16:09:42.543] Local evaluation: TRUE
[16:09:42.543] Environment: R_GlobalEnv
[16:09:42.543] Capture standard output: TRUE
[16:09:42.543] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:42.543] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:09:42.543] Packages: <none>
[16:09:42.543] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:42.543] Resolved: FALSE
[16:09:42.543] Value: <not collected>
[16:09:42.543] Conditions captured: <none>
[16:09:42.543] Early signaling: FALSE
[16:09:42.543] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:42.543] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:42.554] Chunk #2 of 5 ... DONE
[16:09:42.554] Chunk #3 of 5 ...
[16:09:42.554]  - Finding globals in 'X' for chunk #3 ...
[16:09:42.555]    + additional globals found: [n=0] 
[16:09:42.555]    + additional namespaces needed: [n=0] 
[16:09:42.555]  - Finding globals in 'X' for chunk #3 ... DONE
[16:09:42.555]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[16:09:42.555]  - seeds: <none>
[16:09:42.585] Created future:
[16:09:42.585] MultisessionFuture:
[16:09:42.585] Label: ‘future_lapply-3’
[16:09:42.585] Expression:
[16:09:42.585] {
[16:09:42.585]     do.call(function(...) {
[16:09:42.585]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:42.585]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:42.585]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:42.585]             on.exit(options(oopts), add = TRUE)
[16:09:42.585]         }
[16:09:42.585]         {
[16:09:42.585]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:42.585]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:42.585]                 ...future.FUN(...future.X_jj, ...)
[16:09:42.585]             })
[16:09:42.585]         }
[16:09:42.585]     }, args = future.call.arguments)
[16:09:42.585] }
[16:09:42.585] Lazy evaluation: FALSE
[16:09:42.585] Asynchronous evaluation: TRUE
[16:09:42.585] Local evaluation: TRUE
[16:09:42.585] Environment: R_GlobalEnv
[16:09:42.585] Capture standard output: TRUE
[16:09:42.585] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:42.585] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:09:42.585] Packages: <none>
[16:09:42.585] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:42.585] Resolved: FALSE
[16:09:42.585] Value: <not collected>
[16:09:42.585] Conditions captured: <none>
[16:09:42.585] Early signaling: FALSE
[16:09:42.585] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:42.585] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:42.597] Chunk #3 of 5 ... DONE
[16:09:42.597] Chunk #4 of 5 ...
[16:09:42.597]  - Finding globals in 'X' for chunk #4 ...
[16:09:42.597]    + additional globals found: [n=0] 
[16:09:42.597]    + additional namespaces needed: [n=0] 
[16:09:42.597]  - Finding globals in 'X' for chunk #4 ... DONE
[16:09:42.598]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[16:09:42.598]  - seeds: <none>
[16:09:42.629] Created future:
[16:09:42.629] MultisessionFuture:
[16:09:42.629] Label: ‘future_lapply-4’
[16:09:42.629] Expression:
[16:09:42.629] {
[16:09:42.629]     do.call(function(...) {
[16:09:42.629]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:42.629]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:42.629]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:42.629]             on.exit(options(oopts), add = TRUE)
[16:09:42.629]         }
[16:09:42.629]         {
[16:09:42.629]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:42.629]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:42.629]                 ...future.FUN(...future.X_jj, ...)
[16:09:42.629]             })
[16:09:42.629]         }
[16:09:42.629]     }, args = future.call.arguments)
[16:09:42.629] }
[16:09:42.629] Lazy evaluation: FALSE
[16:09:42.629] Asynchronous evaluation: TRUE
[16:09:42.629] Local evaluation: TRUE
[16:09:42.629] Environment: R_GlobalEnv
[16:09:42.629] Capture standard output: TRUE
[16:09:42.629] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:42.629] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:09:42.629] Packages: <none>
[16:09:42.629] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:42.629] Resolved: FALSE
[16:09:42.629] Value: <not collected>
[16:09:42.629] Conditions captured: <none>
[16:09:42.629] Early signaling: FALSE
[16:09:42.629] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:42.629] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:42.641] Chunk #4 of 5 ... DONE
[16:09:42.641] Chunk #5 of 5 ...
[16:09:42.641]  - Finding globals in 'X' for chunk #5 ...
[16:09:42.642]    + additional globals found: [n=0] 
[16:09:42.642]    + additional namespaces needed: [n=0] 
[16:09:42.642]  - Finding globals in 'X' for chunk #5 ... DONE
[16:09:42.642]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[16:09:42.642]  - seeds: <none>
[16:09:42.671] Created future:
[16:09:42.671] MultisessionFuture:
[16:09:42.671] Label: ‘future_lapply-5’
[16:09:42.671] Expression:
[16:09:42.671] {
[16:09:42.671]     do.call(function(...) {
[16:09:42.671]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:42.671]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:42.671]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:42.671]             on.exit(options(oopts), add = TRUE)
[16:09:42.671]         }
[16:09:42.671]         {
[16:09:42.671]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:42.671]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:42.671]                 ...future.FUN(...future.X_jj, ...)
[16:09:42.671]             })
[16:09:42.671]         }
[16:09:42.671]     }, args = future.call.arguments)
[16:09:42.671] }
[16:09:42.671] Lazy evaluation: FALSE
[16:09:42.671] Asynchronous evaluation: TRUE
[16:09:42.671] Local evaluation: TRUE
[16:09:42.671] Environment: R_GlobalEnv
[16:09:42.671] Capture standard output: TRUE
[16:09:42.671] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:42.671] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:09:42.671] Packages: <none>
[16:09:42.671] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:42.671] Resolved: FALSE
[16:09:42.671] Value: <not collected>
[16:09:42.671] Conditions captured: <none>
[16:09:42.671] Early signaling: FALSE
[16:09:42.671] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:42.671] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:42.683] Chunk #5 of 5 ... DONE
[16:09:42.683] Launching 5 futures (chunks) ... DONE
[16:09:42.683] Resolving 5 futures (chunks) ...
[16:09:42.727]  - Number of value chunks collected: 5
[16:09:42.727] Resolving 5 futures (chunks) ... DONE
[16:09:42.727] Reducing values from 5 chunks ...
[16:09:42.727]  - Number of values collected after concatenation: 10
[16:09:42.727]  - Number of values expected: 10
[16:09:42.727] Reducing values from 5 chunks ... DONE
[16:09:42.727] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[16:09:42.731] future_lapply() ...
[16:09:42.736] Number of chunks: 2
[16:09:42.736] getGlobalsAndPackagesXApply() ...
[16:09:42.736]  - future.globals: TRUE
[16:09:42.738]  - globals found/used: [n=1] ‘FUN’
[16:09:42.738]  - needed namespaces: [n=0] 
[16:09:42.738] Finding globals ... DONE
[16:09:42.738]  - use_args: TRUE
[16:09:42.738]  - Getting '...' globals ...
[16:09:42.739]    - '...' content: [n=0] 
[16:09:42.739] List of 1
[16:09:42.739]  $ ...: list()
[16:09:42.739]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:42.739]  - attr(*, "where")=List of 1
[16:09:42.739]   ..$ ...:<environment: 0x55ef09cd55e8> 
[16:09:42.739]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:42.739]  - attr(*, "resolved")= logi TRUE
[16:09:42.739]  - attr(*, "total_size")= num NA
[16:09:42.741]  - Getting '...' globals ... DONE
[16:09:42.742] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:09:42.742] List of 2
[16:09:42.742]  $ ...future.FUN:function (x)  
[16:09:42.742]  $ ...          : list()
[16:09:42.742]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:42.742]  - attr(*, "where")=List of 2
[16:09:42.742]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:42.742]   ..$ ...          :<environment: 0x55ef09cd55e8> 
[16:09:42.742]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:42.742]  - attr(*, "resolved")= logi FALSE
[16:09:42.742]  - attr(*, "total_size")= num 1840
[16:09:42.744] Packages to be attached in all futures: [n=0] 
[16:09:42.744] getGlobalsAndPackagesXApply() ... DONE
[16:09:42.745] Number of futures (= number of chunks): 2
[16:09:42.745] Launching 2 futures (chunks) ...
[16:09:42.745] Chunk #1 of 2 ...
[16:09:42.745]  - Finding globals in 'X' for chunk #1 ...
[16:09:42.745]    + additional globals found: [n=0] 
[16:09:42.745]    + additional namespaces needed: [n=0] 
[16:09:42.745]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:42.746]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[16:09:42.746]  - seeds: <none>
[16:09:42.763] Created future:
[16:09:42.764] MultisessionFuture:
[16:09:42.764] Label: ‘future_lapply-1’
[16:09:42.764] Expression:
[16:09:42.764] {
[16:09:42.764]     do.call(function(...) {
[16:09:42.764]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:42.764]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:42.764]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:42.764]             on.exit(options(oopts), add = TRUE)
[16:09:42.764]         }
[16:09:42.764]         {
[16:09:42.764]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:42.764]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:42.764]                 ...future.FUN(...future.X_jj, ...)
[16:09:42.764]             })
[16:09:42.764]         }
[16:09:42.764]     }, args = future.call.arguments)
[16:09:42.764] }
[16:09:42.764] Lazy evaluation: FALSE
[16:09:42.764] Asynchronous evaluation: TRUE
[16:09:42.764] Local evaluation: TRUE
[16:09:42.764] Environment: R_GlobalEnv
[16:09:42.764] Capture standard output: TRUE
[16:09:42.764] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:42.764] Globals: 5 objects totaling 4.04 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:09:42.764] Packages: <none>
[16:09:42.764] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:42.764] Resolved: FALSE
[16:09:42.764] Value: <not collected>
[16:09:42.764] Conditions captured: <none>
[16:09:42.764] Early signaling: FALSE
[16:09:42.764] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:42.764] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:42.775] Chunk #1 of 2 ... DONE
[16:09:42.775] Chunk #2 of 2 ...
[16:09:42.776]  - Finding globals in 'X' for chunk #2 ...
[16:09:42.776]    + additional globals found: [n=0] 
[16:09:42.776]    + additional namespaces needed: [n=0] 
[16:09:42.776]  - Finding globals in 'X' for chunk #2 ... DONE
[16:09:42.776]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[16:09:42.776]  - seeds: <none>
[16:09:42.795] Created future:
[16:09:42.795] MultisessionFuture:
[16:09:42.795] Label: ‘future_lapply-2’
[16:09:42.795] Expression:
[16:09:42.795] {
[16:09:42.795]     do.call(function(...) {
[16:09:42.795]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:42.795]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:42.795]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:42.795]             on.exit(options(oopts), add = TRUE)
[16:09:42.795]         }
[16:09:42.795]         {
[16:09:42.795]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:42.795]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:42.795]                 ...future.FUN(...future.X_jj, ...)
[16:09:42.795]             })
[16:09:42.795]         }
[16:09:42.795]     }, args = future.call.arguments)
[16:09:42.795] }
[16:09:42.795] Lazy evaluation: FALSE
[16:09:42.795] Asynchronous evaluation: TRUE
[16:09:42.795] Local evaluation: TRUE
[16:09:42.795] Environment: R_GlobalEnv
[16:09:42.795] Capture standard output: TRUE
[16:09:42.795] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:42.795] Globals: 5 objects totaling 4.04 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:09:42.795] Packages: <none>
[16:09:42.795] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:42.795] Resolved: FALSE
[16:09:42.795] Value: <not collected>
[16:09:42.795] Conditions captured: <none>
[16:09:42.795] Early signaling: FALSE
[16:09:42.795] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:42.795] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:42.806] Chunk #2 of 2 ... DONE
[16:09:42.806] Launching 2 futures (chunks) ... DONE
[16:09:42.807] Resolving 2 futures (chunks) ...
[16:09:42.841]  - Number of value chunks collected: 2
[16:09:42.841] Resolving 2 futures (chunks) ... DONE
[16:09:42.842] Reducing values from 2 chunks ...
[16:09:42.842]  - Number of values collected after concatenation: 10
[16:09:42.842]  - Number of values expected: 10
[16:09:42.842] Reducing values from 2 chunks ... DONE
[16:09:42.842] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[16:09:42.848] future_lapply() ...
[16:09:42.851] Number of chunks: 1
[16:09:42.851] getGlobalsAndPackagesXApply() ...
[16:09:42.852]  - future.globals: TRUE
[16:09:42.853]  - globals found/used: [n=1] ‘FUN’
[16:09:42.853]  - needed namespaces: [n=0] 
[16:09:42.853] Finding globals ... DONE
[16:09:42.854]  - use_args: TRUE
[16:09:42.854]  - Getting '...' globals ...
[16:09:42.854]    - '...' content: [n=0] 
[16:09:42.854] List of 1
[16:09:42.854]  $ ...: list()
[16:09:42.854]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:42.854]  - attr(*, "where")=List of 1
[16:09:42.854]   ..$ ...:<environment: 0x55ef0a9f6f48> 
[16:09:42.854]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:42.854]  - attr(*, "resolved")= logi TRUE
[16:09:42.854]  - attr(*, "total_size")= num NA
[16:09:42.857]  - Getting '...' globals ... DONE
[16:09:42.857] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:09:42.857] List of 2
[16:09:42.857]  $ ...future.FUN:function (x)  
[16:09:42.857]  $ ...          : list()
[16:09:42.857]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:42.857]  - attr(*, "where")=List of 2
[16:09:42.857]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:42.857]   ..$ ...          :<environment: 0x55ef0a9f6f48> 
[16:09:42.857]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:42.857]  - attr(*, "resolved")= logi FALSE
[16:09:42.857]  - attr(*, "total_size")= num 1840
[16:09:42.859] Packages to be attached in all futures: [n=0] 
[16:09:42.859] getGlobalsAndPackagesXApply() ... DONE
[16:09:42.860] Number of futures (= number of chunks): 1
[16:09:42.860] Launching 1 futures (chunks) ...
[16:09:42.860] Chunk #1 of 1 ...
[16:09:42.860]  - Finding globals in 'X' for chunk #1 ...
[16:09:42.860]    + additional globals found: [n=0] 
[16:09:42.860]    + additional namespaces needed: [n=0] 
[16:09:42.860]  - Finding globals in 'X' for chunk #1 ... DONE
[16:09:42.861]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[16:09:42.861]  - seeds: <none>
[16:09:42.880] Created future:
[16:09:42.880] MultisessionFuture:
[16:09:42.880] Label: ‘future_lapply-1’
[16:09:42.880] Expression:
[16:09:42.880] {
[16:09:42.880]     do.call(function(...) {
[16:09:42.880]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:09:42.880]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:09:42.880]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:09:42.880]             on.exit(options(oopts), add = TRUE)
[16:09:42.880]         }
[16:09:42.880]         {
[16:09:42.880]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:09:42.880]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:09:42.880]                 ...future.FUN(...future.X_jj, ...)
[16:09:42.880]             })
[16:09:42.880]         }
[16:09:42.880]     }, args = future.call.arguments)
[16:09:42.880] }
[16:09:42.880] Lazy evaluation: FALSE
[16:09:42.880] Asynchronous evaluation: TRUE
[16:09:42.880] Local evaluation: TRUE
[16:09:42.880] Environment: R_GlobalEnv
[16:09:42.880] Capture standard output: TRUE
[16:09:42.880] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:09:42.880] Globals: 5 objects totaling 6.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:09:42.880] Packages: <none>
[16:09:42.880] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:09:42.880] Resolved: FALSE
[16:09:42.880] Value: <not collected>
[16:09:42.880] Conditions captured: <none>
[16:09:42.880] Early signaling: FALSE
[16:09:42.880] Owner process: 4e3e43dd-5b08-10bc-c8b3-f6ca7c9c0d48
[16:09:42.880] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:09:42.892] Chunk #1 of 1 ... DONE
[16:09:42.892] Launching 1 futures (chunks) ... DONE
[16:09:42.892] Resolving 1 futures (chunks) ...
[16:09:42.935]  - Number of value chunks collected: 1
[16:09:42.935] Resolving 1 futures (chunks) ... DONE
[16:09:42.935] Reducing values from 1 chunks ...
[16:09:42.935]  - Number of values collected after concatenation: 10
[16:09:42.935]  - Number of values expected: 10
[16:09:42.935] Reducing values from 1 chunks ... DONE
[16:09:42.935] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
> y <- NULL
> options(future.globals.maxSize = oMaxSize)
> 
> 
> message("*** future_lapply() - too large ... DONE")
*** future_lapply() - too large ... DONE
> 
> 
> message("*** future_lapply() - globals exceptions ...")
*** future_lapply() - globals exceptions ...
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = 42)
+ }, error = identity)
[16:09:42.939] future_lapply() ...
[16:09:42.943] Number of chunks: 1
[16:09:42.943] getGlobalsAndPackagesXApply() ...
[16:09:42.943] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = list(1))
+ }, error = identity)
[16:09:42.943] future_lapply() ...
[16:09:42.947] Number of chunks: 1
[16:09:42.947] getGlobalsAndPackagesXApply() ...
[16:09:42.947]  - future.globals: <name-value list> with names ‘1’
[16:09:42.947] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = "...future.FUN")
+ }, error = identity)
[16:09:42.947] future_lapply() ...
[16:09:42.951] Number of chunks: 1
[16:09:42.951] getGlobalsAndPackagesXApply() ...
[16:09:42.951]  - future.globals: ‘...future.FUN’
[16:09:42.951]  - use_args: TRUE
[16:09:42.951] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = "...future.FUN")
+ }, error = identity)
[16:09:42.952] future_lapply() ...
[16:09:42.955] Number of chunks: 1
[16:09:42.955] getGlobalsAndPackagesXApply() ...
[16:09:42.955]  - future.globals: ‘...future.FUN’
[16:09:42.955]  - use_args: TRUE
[16:09:42.955] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> ...future.elements_ii <- 42L
> X <- list(function() 2 * ...future.elements_ii)
> res <- tryCatch({
+   y <- future_lapply(X, FUN = function(f) f())
+ }, error = identity)
[16:09:42.956] future_lapply() ...
[16:09:42.959] Number of chunks: 1
[16:09:42.959] getGlobalsAndPackagesXApply() ...
[16:09:42.959]  - future.globals: TRUE
[16:09:42.961]  - globals found/used: [n=1] ‘FUN’
[16:09:42.961]  - needed namespaces: [n=0] 
[16:09:42.961] Finding globals ... DONE
[16:09:42.961]  - use_args: TRUE
[16:09:42.961]  - Getting '...' globals ...
[16:09:42.961]    - '...' content: [n=0] 
[16:09:42.961] List of 1
[16:09:42.961]  $ ...: list()
[16:09:42.961]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:42.961]  - attr(*, "where")=List of 1
[16:09:42.961]   ..$ ...:<environment: 0x55ef0bae8f30> 
[16:09:42.961]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:42.961]  - attr(*, "resolved")= logi TRUE
[16:09:42.961]  - attr(*, "total_size")= num NA
[16:09:42.964]  - Getting '...' globals ... DONE
[16:09:42.964] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:09:42.964] List of 2
[16:09:42.964]  $ ...future.FUN:function (f)  
[16:09:42.964]  $ ...          : list()
[16:09:42.964]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:09:42.964]  - attr(*, "where")=List of 2
[16:09:42.964]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:09:42.964]   ..$ ...          :<environment: 0x55ef0bae8f30> 
[16:09:42.964]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:09:42.964]  - attr(*, "resolved")= logi FALSE
[16:09:42.964]  - attr(*, "total_size")= num 336
[16:09:42.969] Packages to be attached in all futures: [n=0] 
[16:09:42.969] getGlobalsAndPackagesXApply() ... DONE
[16:09:42.969] Number of futures (= number of chunks): 1
[16:09:42.969] Launching 1 futures (chunks) ...
[16:09:42.970] Chunk #1 of 1 ...
[16:09:42.970]  - Finding globals in 'X' for chunk #1 ...
[16:09:42.971]    + additional globals found: [n=1] ‘...future.elements_ii’
[16:09:42.971]    + additional namespaces needed: [n=0] 
> stopifnot(inherits(res, "error"))
> 
> message("*** future_lapply() - globals exceptions ... DONE")
*** future_lapply() - globals exceptions ... DONE
> 
> source("incl/end.R")
> 
