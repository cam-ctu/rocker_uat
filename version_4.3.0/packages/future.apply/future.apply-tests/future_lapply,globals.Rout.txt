
R version 4.3.0 (2023-04-21) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> source("incl/start.R")
Loading required package: future
[13:17:34.790] plan(): Setting new future strategy stack:
[13:17:34.790] List of future strategies:
[13:17:34.790] 1. sequential:
[13:17:34.790]    - args: function (..., envir = parent.frame())
[13:17:34.790]    - tweaked: FALSE
[13:17:34.790]    - call: future::plan("sequential")
[13:17:34.800] plan(): nbrOfWorkers() = 1
> library("tools") ## toTitleCase()
> 
> options(future.debug = FALSE)
> options(future.apply.debug = TRUE)
> 
> message("*** future_lapply() - globals ...")
*** future_lapply() - globals ...
> 
> plan(cluster, workers = "localhost")
> 
> a <- 1
> b <- 2
> 
> globals_set <- list(
+   A = FALSE,
+   B = TRUE,
+   C = c("a", "b"),
+   D = list(a = 2, b = 3)
+ )
> 
> x <- list(1)
> y_truth <- list(A = NULL, B = list(1), C = list(1), D = list(2))
> str(y_truth)
List of 4
 $ A: NULL
 $ B:List of 1
  ..$ : num 1
 $ C:List of 1
  ..$ : num 1
 $ D:List of 1
  ..$ : num 2
> 
> for (name in names(globals_set)) {
+   globals <- globals_set[[name]]
+   message("Globals set ", sQuote(name))
+   y <- tryCatch({
+     future_lapply(x, FUN = function(x) {
+       median(c(x, a, b))
+     }, future.globals = globals, future.packages = "utils")
+   }, error = identity)
+   print(y)
+   stopifnot((name == "A" && inherits(y, "error")) || 
+              identical(y, y_truth[[name]]))
+ }
Globals set ‘A’
[13:17:35.366] future_lapply() ...
[13:17:35.370] Number of chunks: 1
[13:17:35.371] getGlobalsAndPackagesXApply() ...
[13:17:35.371]  - future.globals: FALSE
[13:17:35.374]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[13:17:35.374]  - needed namespaces: [n=0] 
[13:17:35.374] Finding globals ... DONE
[13:17:35.374]  - use_args: TRUE
[13:17:35.374]  - Getting '...' globals ...
[13:17:35.375]    - '...' content: [n=0] 
[13:17:35.375] List of 1
[13:17:35.375]  $ ...: list()
[13:17:35.375]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:35.375]  - attr(*, "where")=List of 1
[13:17:35.375]   ..$ ...:<environment: 0x55fba6797ce0> 
[13:17:35.375]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:35.375]  - attr(*, "resolved")= logi TRUE
[13:17:35.375]  - attr(*, "total_size")= num NA
[13:17:35.378]  - Getting '...' globals ... DONE
[13:17:35.378] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[13:17:35.378] List of 3
[13:17:35.378]  $ ...future.FUN        :function (x)  
[13:17:35.378]  $ future.call.arguments: list()
[13:17:35.378]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:35.378]  $ ...                  : list()
[13:17:35.378]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:35.378]  - attr(*, "where")=List of 3
[13:17:35.378]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[13:17:35.378]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[13:17:35.378]   ..$ ...                  :<environment: 0x55fba6797ce0> 
[13:17:35.378]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:35.378]  - attr(*, "resolved")= logi FALSE
[13:17:35.378]  - attr(*, "total_size")= num 3824
[13:17:35.383] Packages to be attached in all futures: [n=1] ‘utils’
[13:17:35.383] getGlobalsAndPackagesXApply() ... DONE
[13:17:35.383] Number of futures (= number of chunks): 1
[13:17:35.383] Launching 1 futures (chunks) ...
[13:17:35.383] Chunk #1 of 1 ...
[13:17:35.384]  - seeds: <none>
[13:17:35.394] Created future:
[13:17:35.394] ClusterFuture:
[13:17:35.394] Label: ‘future_lapply-1’
[13:17:35.394] Expression:
[13:17:35.394] {
[13:17:35.394]     do.call(function(...) {
[13:17:35.394]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:35.394]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:35.394]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:35.394]             on.exit(options(oopts), add = TRUE)
[13:17:35.394]         }
[13:17:35.394]         {
[13:17:35.394]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:35.394]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:35.394]                 ...future.FUN(...future.X_jj, ...)
[13:17:35.394]             })
[13:17:35.394]         }
[13:17:35.394]     }, args = future.call.arguments)
[13:17:35.394] }
[13:17:35.394] Lazy evaluation: FALSE
[13:17:35.394] Asynchronous evaluation: TRUE
[13:17:35.394] Local evaluation: TRUE
[13:17:35.394] Environment: R_GlobalEnv
[13:17:35.394] Capture standard output: TRUE
[13:17:35.394] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:35.394] Globals: 5 objects totaling 3.79 KiB (function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:35.394] Packages: 1 packages (‘utils’)
[13:17:35.394] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:35.394] Resolved: FALSE
[13:17:35.394] Value: <not collected>
[13:17:35.394] Conditions captured: <none>
[13:17:35.394] Early signaling: FALSE
[13:17:35.394] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:35.394] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:35.407] Chunk #1 of 1 ... DONE
[13:17:35.407] Launching 1 futures (chunks) ... DONE
[13:17:35.408] Resolving 1 futures (chunks) ...
<simpleError in ...future.FUN(...future.X_jj, ...): object 'a' not found>
Globals set ‘B’
[13:17:35.440] future_lapply() ...
[13:17:35.441] Number of chunks: 1
[13:17:35.441] getGlobalsAndPackagesXApply() ...
[13:17:35.442]  - future.globals: TRUE
[13:17:35.445]  - globals found/used: [n=3] ‘FUN’, ‘a’, ‘b’
[13:17:35.445]  - needed namespaces: [n=1] ‘stats’
[13:17:35.445] Finding globals ... DONE
[13:17:35.445]  - use_args: TRUE
[13:17:35.446]  - Getting '...' globals ...
[13:17:35.446]    - '...' content: [n=0] 
[13:17:35.446] List of 1
[13:17:35.446]  $ ...: list()
[13:17:35.446]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:35.446]  - attr(*, "where")=List of 1
[13:17:35.446]   ..$ ...:<environment: 0x55fba829f360> 
[13:17:35.446]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:35.446]  - attr(*, "resolved")= logi TRUE
[13:17:35.446]  - attr(*, "total_size")= num NA
[13:17:35.449]  - Getting '...' globals ... DONE
[13:17:35.449] Globals to be used in all futures (chunks): [n=4] ‘...future.FUN’, ‘a’, ‘b’, ‘...’
[13:17:35.450] List of 4
[13:17:35.450]  $ ...future.FUN:function (x)  
[13:17:35.450]  $ a            : num 1
[13:17:35.450]  $ b            : num 2
[13:17:35.450]  $ ...          : list()
[13:17:35.450]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:35.450]  - attr(*, "where")=List of 4
[13:17:35.450]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:35.450]   ..$ a            :<environment: R_EmptyEnv> 
[13:17:35.450]   ..$ b            :<environment: R_EmptyEnv> 
[13:17:35.450]   ..$ ...          :<environment: 0x55fba829f360> 
[13:17:35.450]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:35.450]  - attr(*, "resolved")= logi FALSE
[13:17:35.450]  - attr(*, "total_size")= num 3936
[13:17:35.454] Packages to be attached in all futures: [n=2] ‘stats’, ‘utils’
[13:17:35.454] getGlobalsAndPackagesXApply() ... DONE
[13:17:35.455] Number of futures (= number of chunks): 1
[13:17:35.455] Launching 1 futures (chunks) ...
[13:17:35.455] Chunk #1 of 1 ...
[13:17:35.458]  - Finding globals in 'X' for chunk #1 ...
[13:17:35.458]    + additional globals found: [n=0] 
[13:17:35.459]    + additional namespaces needed: [n=0] 
[13:17:35.459]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:35.459]  - seeds: <none>
[13:17:35.468] Created future:
[13:17:35.468] ClusterFuture:
[13:17:35.468] Label: ‘future_lapply-1’
[13:17:35.468] Expression:
[13:17:35.468] {
[13:17:35.468]     do.call(function(...) {
[13:17:35.468]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:35.468]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:35.468]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:35.468]             on.exit(options(oopts), add = TRUE)
[13:17:35.468]         }
[13:17:35.468]         {
[13:17:35.468]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:35.468]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:35.468]                 ...future.FUN(...future.X_jj, ...)
[13:17:35.468]             })
[13:17:35.468]         }
[13:17:35.468]     }, args = future.call.arguments)
[13:17:35.468] }
[13:17:35.468] Lazy evaluation: FALSE
[13:17:35.468] Asynchronous evaluation: TRUE
[13:17:35.468] Local evaluation: TRUE
[13:17:35.468] Environment: R_GlobalEnv
[13:17:35.468] Capture standard output: TRUE
[13:17:35.468] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:35.468] Globals: 7 objects totaling 3.90 KiB (function ‘...future.FUN’ of 3.73 KiB, numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[13:17:35.468] Packages: 2 packages (‘stats’, ‘utils’)
[13:17:35.468] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:35.468] Resolved: FALSE
[13:17:35.468] Value: <not collected>
[13:17:35.468] Conditions captured: <none>
[13:17:35.468] Early signaling: FALSE
[13:17:35.468] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:35.468] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:35.480] Chunk #1 of 1 ... DONE
[13:17:35.480] Launching 1 futures (chunks) ... DONE
[13:17:35.480] Resolving 1 futures (chunks) ...
[13:17:35.512]  - Number of value chunks collected: 1
[13:17:35.512] Resolving 1 futures (chunks) ... DONE
[13:17:35.512] Reducing values from 1 chunks ...
[13:17:35.512]  - Number of values collected after concatenation: 1
[13:17:35.512]  - Number of values expected: 1
[13:17:35.512] Reducing values from 1 chunks ... DONE
[13:17:35.512] future_lapply() ... DONE
[[1]]
[1] 1

Globals set ‘C’
[13:17:35.512] future_lapply() ...
[13:17:35.513] Number of chunks: 1
[13:17:35.513] getGlobalsAndPackagesXApply() ...
[13:17:35.513]  - future.globals: ‘a’, ‘b’
[13:17:35.514]  - use_args: TRUE
[13:17:35.514] Globals to be used in all futures (chunks): [n=4] ‘a’, ‘b’, ‘...future.FUN’, ‘...’
[13:17:35.514] List of 4
[13:17:35.514]  $ a            : num 1
[13:17:35.514]  $ b            : num 2
[13:17:35.514]  $ ...future.FUN:function (x)  
[13:17:35.514]  $ ...          : list()
[13:17:35.514]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:35.514]  - attr(*, "where")=List of 4
[13:17:35.514]   ..$ a            :<environment: R_GlobalEnv> 
[13:17:35.514]   ..$ b            :<environment: R_GlobalEnv> 
[13:17:35.514]   ..$ ...future.FUN:<environment: 0x55fba72d8290> 
[13:17:35.514]   ..$ ...          :<environment: 0x55fba72d8290> 
[13:17:35.514]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:35.514]  - attr(*, "resolved")= logi FALSE
[13:17:35.514]  - attr(*, "total_size")= num NA
[13:17:35.518] Packages to be attached in all futures: [n=1] ‘utils’
[13:17:35.518] getGlobalsAndPackagesXApply() ... DONE
[13:17:35.518] Number of futures (= number of chunks): 1
[13:17:35.518] Launching 1 futures (chunks) ...
[13:17:35.518] Chunk #1 of 1 ...
[13:17:35.518]  - seeds: <none>
[13:17:35.529] Created future:
[13:17:35.529] ClusterFuture:
[13:17:35.529] Label: ‘future_lapply-1’
[13:17:35.529] Expression:
[13:17:35.529] {
[13:17:35.529]     do.call(function(...) {
[13:17:35.529]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:35.529]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:35.529]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:35.529]             on.exit(options(oopts), add = TRUE)
[13:17:35.529]         }
[13:17:35.529]         {
[13:17:35.529]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:35.529]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:35.529]                 ...future.FUN(...future.X_jj, ...)
[13:17:35.529]             })
[13:17:35.529]         }
[13:17:35.529]     }, args = future.call.arguments)
[13:17:35.529] }
[13:17:35.529] Lazy evaluation: FALSE
[13:17:35.529] Asynchronous evaluation: TRUE
[13:17:35.529] Local evaluation: TRUE
[13:17:35.529] Environment: R_GlobalEnv
[13:17:35.529] Capture standard output: TRUE
[13:17:35.529] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:35.529] Globals: 7 objects totaling 3.90 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[13:17:35.529] Packages: 1 packages (‘utils’)
[13:17:35.529] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:35.529] Resolved: FALSE
[13:17:35.529] Value: <not collected>
[13:17:35.529] Conditions captured: <none>
[13:17:35.529] Early signaling: FALSE
[13:17:35.529] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:35.529] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:35.540] Chunk #1 of 1 ... DONE
[13:17:35.540] Launching 1 futures (chunks) ... DONE
[13:17:35.541] Resolving 1 futures (chunks) ...
[13:17:35.583]  - Number of value chunks collected: 1
[13:17:35.583] Resolving 1 futures (chunks) ... DONE
[13:17:35.583] Reducing values from 1 chunks ...
[13:17:35.583]  - Number of values collected after concatenation: 1
[13:17:35.583]  - Number of values expected: 1
[13:17:35.583] Reducing values from 1 chunks ... DONE
[13:17:35.583] future_lapply() ... DONE
[[1]]
[1] 1

Globals set ‘D’
[13:17:35.584] future_lapply() ...
[13:17:35.584] Number of chunks: 1
[13:17:35.585] getGlobalsAndPackagesXApply() ...
[13:17:35.585]  - future.globals: <name-value list> with names ‘2’, ‘3’
[13:17:35.585]  - use_args: TRUE
[13:17:35.585]  - Getting '...' globals ...
[13:17:35.585]    - '...' content: [n=0] 
[13:17:35.585] List of 1
[13:17:35.585]  $ ...: list()
[13:17:35.585]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:35.585]  - attr(*, "where")=List of 1
[13:17:35.585]   ..$ ...:<environment: 0x55fba681a240> 
[13:17:35.585]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:35.585]  - attr(*, "resolved")= logi TRUE
[13:17:35.585]  - attr(*, "total_size")= num NA
[13:17:35.588]  - Getting '...' globals ... DONE
[13:17:35.588] Globals to be used in all futures (chunks): [n=4] ‘a’, ‘b’, ‘...future.FUN’, ‘...’
[13:17:35.588] List of 4
[13:17:35.588]  $ a            : num 2
[13:17:35.588]  $ b            : num 3
[13:17:35.588]  $ ...future.FUN:function (x)  
[13:17:35.588]  $ ...          : list()
[13:17:35.588]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:35.588]  - attr(*, "where")=List of 4
[13:17:35.588]   ..$ a            :<environment: R_EmptyEnv> 
[13:17:35.588]   ..$ b            :<environment: R_EmptyEnv> 
[13:17:35.588]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[13:17:35.588]   ..$ ...          :<environment: 0x55fba681a240> 
[13:17:35.588]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:35.588]  - attr(*, "resolved")= logi FALSE
[13:17:35.588]  - attr(*, "total_size")= num NA
[13:17:35.592] Packages to be attached in all futures: [n=1] ‘utils’
[13:17:35.592] getGlobalsAndPackagesXApply() ... DONE
[13:17:35.592] Number of futures (= number of chunks): 1
[13:17:35.592] Launching 1 futures (chunks) ...
[13:17:35.593] Chunk #1 of 1 ...
[13:17:35.593]  - seeds: <none>
[13:17:35.603] Created future:
[13:17:35.603] ClusterFuture:
[13:17:35.603] Label: ‘future_lapply-1’
[13:17:35.603] Expression:
[13:17:35.603] {
[13:17:35.603]     do.call(function(...) {
[13:17:35.603]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:35.603]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:35.603]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:35.603]             on.exit(options(oopts), add = TRUE)
[13:17:35.603]         }
[13:17:35.603]         {
[13:17:35.603]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:35.603]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:35.603]                 ...future.FUN(...future.X_jj, ...)
[13:17:35.603]             })
[13:17:35.603]         }
[13:17:35.603]     }, args = future.call.arguments)
[13:17:35.603] }
[13:17:35.603] Lazy evaluation: FALSE
[13:17:35.603] Asynchronous evaluation: TRUE
[13:17:35.603] Local evaluation: TRUE
[13:17:35.603] Environment: R_GlobalEnv
[13:17:35.603] Capture standard output: TRUE
[13:17:35.603] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:35.603] Globals: 7 objects totaling 3.90 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[13:17:35.603] Packages: 1 packages (‘utils’)
[13:17:35.603] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:35.603] Resolved: FALSE
[13:17:35.603] Value: <not collected>
[13:17:35.603] Conditions captured: <none>
[13:17:35.603] Early signaling: FALSE
[13:17:35.603] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:35.603] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:35.615] Chunk #1 of 1 ... DONE
[13:17:35.615] Launching 1 futures (chunks) ... DONE
[13:17:35.615] Resolving 1 futures (chunks) ...
[13:17:35.658]  - Number of value chunks collected: 1
[13:17:35.658] Resolving 1 futures (chunks) ... DONE
[13:17:35.658] Reducing values from 1 chunks ...
[13:17:35.658]  - Number of values collected after concatenation: 1
[13:17:35.658]  - Number of values expected: 1
[13:17:35.658] Reducing values from 1 chunks ... DONE
[13:17:35.658] future_lapply() ... DONE
[[1]]
[1] 2

> 
> message("*** future_lapply() - globals ... DONE")
*** future_lapply() - globals ... DONE
> 
> 
> message("*** future_lapply() - manual globals ...")
*** future_lapply() - manual globals ...
> 
> d <- 42
> y <- future_lapply(1:2, FUN = function(x) { x * d },
+                    future.globals = structure(FALSE, add = "d"))
[13:17:35.659] future_lapply() ...
[13:17:35.659] Number of chunks: 1
[13:17:35.660] getGlobalsAndPackagesXApply() ...
[13:17:35.660]  - future.globals: FALSE
[13:17:35.661]  - globals found/used: [n=3] ‘d’, ‘FUN’, ‘future.call.arguments’
[13:17:35.661]  - needed namespaces: [n=0] 
[13:17:35.661] Finding globals ... DONE
[13:17:35.661]  - use_args: TRUE
[13:17:35.661]  - Getting '...' globals ...
[13:17:35.661]    - '...' content: [n=0] 
[13:17:35.662] List of 1
[13:17:35.662]  $ ...: list()
[13:17:35.662]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:35.662]  - attr(*, "where")=List of 1
[13:17:35.662]   ..$ ...:<environment: 0x55fba825de70> 
[13:17:35.662]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:35.662]  - attr(*, "resolved")= logi TRUE
[13:17:35.662]  - attr(*, "total_size")= num NA
[13:17:35.664]  - Getting '...' globals ... DONE
[13:17:35.664] Globals to be used in all futures (chunks): [n=4] ‘d’, ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[13:17:35.664] List of 4
[13:17:35.664]  $ d                    : num 42
[13:17:35.664]  $ ...future.FUN        :function (x)  
[13:17:35.664]  $ future.call.arguments: list()
[13:17:35.664]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:35.664]  $ ...                  : list()
[13:17:35.664]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:35.664]  - attr(*, "where")=List of 4
[13:17:35.664]   ..$ d                    :<environment: R_EmptyEnv> 
[13:17:35.664]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[13:17:35.664]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[13:17:35.664]   ..$ ...                  :<environment: 0x55fba825de70> 
[13:17:35.664]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:35.664]  - attr(*, "resolved")= logi FALSE
[13:17:35.664]  - attr(*, "total_size")= num 784
[13:17:35.668] Packages to be attached in all futures: [n=0] 
[13:17:35.668] getGlobalsAndPackagesXApply() ... DONE
[13:17:35.668] Number of futures (= number of chunks): 1
[13:17:35.669] Launching 1 futures (chunks) ...
[13:17:35.669] Chunk #1 of 1 ...
[13:17:35.669]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:17:35.669]  - seeds: <none>
[13:17:35.681] Created future:
[13:17:35.681] ClusterFuture:
[13:17:35.681] Label: ‘future_lapply-1’
[13:17:35.681] Expression:
[13:17:35.681] {
[13:17:35.681]     do.call(function(...) {
[13:17:35.681]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:35.681]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:35.681]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:35.681]             on.exit(options(oopts), add = TRUE)
[13:17:35.681]         }
[13:17:35.681]         {
[13:17:35.681]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:35.681]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:35.681]                 ...future.FUN(...future.X_jj, ...)
[13:17:35.681]             })
[13:17:35.681]         }
[13:17:35.681]     }, args = future.call.arguments)
[13:17:35.681] }
[13:17:35.681] Lazy evaluation: FALSE
[13:17:35.681] Asynchronous evaluation: TRUE
[13:17:35.681] Local evaluation: TRUE
[13:17:35.681] Environment: R_GlobalEnv
[13:17:35.681] Capture standard output: TRUE
[13:17:35.681] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:35.681] Globals: 6 objects totaling 896 bytes (numeric ‘d’ of 56 bytes, function ‘...future.FUN’ of 728 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 112 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[13:17:35.681] Packages: <none>
[13:17:35.681] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:35.681] Resolved: FALSE
[13:17:35.681] Value: <not collected>
[13:17:35.681] Conditions captured: <none>
[13:17:35.681] Early signaling: FALSE
[13:17:35.681] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:35.681] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:35.692] Chunk #1 of 1 ... DONE
[13:17:35.692] Launching 1 futures (chunks) ... DONE
[13:17:35.692] Resolving 1 futures (chunks) ...
[13:17:35.724]  - Number of value chunks collected: 1
[13:17:35.724] Resolving 1 futures (chunks) ... DONE
[13:17:35.724] Reducing values from 1 chunks ...
[13:17:35.724]  - Number of values collected after concatenation: 2
[13:17:35.724]  - Number of values expected: 2
[13:17:35.725] Reducing values from 1 chunks ... DONE
[13:17:35.725] future_lapply() ... DONE
> stopifnot(identical(y, list(42, 84)))
> 
> e <- 42
> res <- tryCatch({
+   future_lapply(1:2, FUN = function(x) { 2 * e },
+                 future.globals = structure(TRUE, ignore = "e"))
+ }, error = identity)
[13:17:35.725] future_lapply() ...
[13:17:35.726] Number of chunks: 1
[13:17:35.726] getGlobalsAndPackagesXApply() ...
[13:17:35.726]  - future.globals: TRUE
[13:17:35.728]  - globals found/used: [n=1] ‘FUN’
[13:17:35.728]  - needed namespaces: [n=0] 
[13:17:35.728] Finding globals ... DONE
[13:17:35.728]  - use_args: TRUE
[13:17:35.728]  - Getting '...' globals ...
[13:17:35.728]    - '...' content: [n=0] 
[13:17:35.728] List of 1
[13:17:35.728]  $ ...: list()
[13:17:35.728]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:35.728]  - attr(*, "where")=List of 1
[13:17:35.728]   ..$ ...:<environment: 0x55fba7515458> 
[13:17:35.728]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:35.728]  - attr(*, "resolved")= logi TRUE
[13:17:35.728]  - attr(*, "total_size")= num NA
[13:17:35.731]  - Getting '...' globals ... DONE
[13:17:35.731] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:17:35.731] List of 2
[13:17:35.731]  $ ...future.FUN:function (x)  
[13:17:35.731]  $ ...          : list()
[13:17:35.731]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:35.731]  - attr(*, "where")=List of 2
[13:17:35.731]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:35.731]   ..$ ...          :<environment: 0x55fba7515458> 
[13:17:35.731]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:35.731]  - attr(*, "resolved")= logi FALSE
[13:17:35.731]  - attr(*, "total_size")= num 728
[13:17:35.734] Packages to be attached in all futures: [n=0] 
[13:17:35.734] getGlobalsAndPackagesXApply() ... DONE
[13:17:35.734] Number of futures (= number of chunks): 1
[13:17:35.734] Launching 1 futures (chunks) ...
[13:17:35.734] Chunk #1 of 1 ...
[13:17:35.735]  - Finding globals in 'X' for chunk #1 ...
[13:17:35.735]    + additional globals found: [n=0] 
[13:17:35.735]    + additional namespaces needed: [n=0] 
[13:17:35.735]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:35.735]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:17:35.735]  - seeds: <none>
[13:17:35.744] Created future:
[13:17:35.744] ClusterFuture:
[13:17:35.744] Label: ‘future_lapply-1’
[13:17:35.744] Expression:
[13:17:35.744] {
[13:17:35.744]     do.call(function(...) {
[13:17:35.744]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:35.744]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:35.744]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:35.744]             on.exit(options(oopts), add = TRUE)
[13:17:35.744]         }
[13:17:35.744]         {
[13:17:35.744]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:35.744]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:35.744]                 ...future.FUN(...future.X_jj, ...)
[13:17:35.744]             })
[13:17:35.744]         }
[13:17:35.744]     }, args = future.call.arguments)
[13:17:35.744] }
[13:17:35.744] Lazy evaluation: FALSE
[13:17:35.744] Asynchronous evaluation: TRUE
[13:17:35.744] Local evaluation: TRUE
[13:17:35.744] Environment: R_GlobalEnv
[13:17:35.744] Capture standard output: TRUE
[13:17:35.744] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:35.744] Globals: 5 objects totaling 840 bytes (function ‘...future.FUN’ of 728 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 112 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:35.744] Packages: <none>
[13:17:35.744] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:35.744] Resolved: FALSE
[13:17:35.744] Value: <not collected>
[13:17:35.744] Conditions captured: <none>
[13:17:35.744] Early signaling: FALSE
[13:17:35.744] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:35.744] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:35.756] Chunk #1 of 1 ... DONE
[13:17:35.756] Launching 1 futures (chunks) ... DONE
[13:17:35.756] Resolving 1 futures (chunks) ...
> stopifnot(inherits(res, "error"))
> 
> message("*** future_lapply() - manual globals ... DONE")
*** future_lapply() - manual globals ... DONE
> 
> 
> 
> ## Test adopted from http://stackoverflow.com/questions/42561088/nested-do-call-within-a-foreach-dopar-environment-cant-find-function-passed-w
> 
> message("*** future_lapply() - tricky globals ...")
*** future_lapply() - tricky globals ...
> 
> my_add <- function(a, b) a + b
> 
> call_my_add <- function(a, b) {
+   do.call(my_add, args = list(a = a, b = b))
+ }
> 
> call_my_add_caller <- function(a, b, FUN = call_my_add) {
+   do.call(FUN, args = list(a = a, b = b))
+ }
> 
> main <- function(x = 1:2, caller = call_my_add_caller,
+                  args = list(FUN = call_my_add)) {
+   results <- future_lapply(x, FUN = function(i) {
+     do.call(caller, args = c(list(a = i, b = i + 1L), args))
+   })
+   results
+ }
> 
> x <- list(list(1:2))
> z_length <- lapply(x, FUN = do.call, what = length)
> fun <- function(...) sum(...)
> z_fun <- lapply(x, FUN = do.call, what = fun)
> 
> y0 <- NULL
> for (strategy in supportedStrategies()) {
+   plan(strategy)
+ 
+   y <- main(1:3)
+   if (is.null(y0)) y0 <- y
+   stopifnot(identical(y, y0))
+ 
+   message("- future_lapply(x, FUN = do.call, ...) ...")
+   z <- future_lapply(x, FUN = do.call, what = length)
+   stopifnot(identical(z, z_length))
+   z <- future_lapply(x, FUN = do.call, what = fun)
+   stopifnot(identical(z, z_fun))
+ 
+   message("- future_lapply(x, ...) - passing arguments via '...' ...")
+   ## typeof() == "list"
+   obj <- data.frame(a = 1:2)
+   stopifnot(typeof(obj) == "list")
+   y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+   stopifnot(identical(y[[1]], typeof(obj)))
+ 
+   ## typeof() == "environment"
+   obj <- new.env()
+   stopifnot(typeof(obj) == "environment")
+   y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+   stopifnot(identical(y[[1]], typeof(obj)))
+ 
+   ## typeof() == "S4"
+   if (requireNamespace("methods")) {
+     obj <- methods::getClass("MethodDefinition")
+     stopifnot(typeof(obj) == "S4")
+     y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+     stopifnot(identical(y[[1]], typeof(obj)))
+   }
+ 
+   message("- future_lapply(X, ...) - 'X' containing globals ...")
+   ## From https://github.com/HenrikBengtsson/future.apply/issues/12
+   a <- 42
+   b <- 21
+   X <- list(
+     function(b) 2 * a,
+     function() b / 2,
+     function() a + b,
+     function() nchar(toTitleCase("hello world"))
+   )
+   z0 <- lapply(X, FUN = function(f) f())
+   str(z0)
+   z1 <- future_lapply(X, FUN = function(f) f())
+   str(z1)
+   stopifnot(identical(z1, z0))
+ 
+   message("- future_lapply(x, ...) - passing '...' as a global ...")
+   ## https://github.com/HenrikBengtsson/future/issues/417
+   fcn0 <- function(...) { lapply(1, FUN = function(x) list(...)) }
+   z0 <- fcn0(a = 1)
+   str(list(z0 = z0))
+   stopifnot(identical(z0, list(list(a = 1))))
+   fcn <- function(...) { future_lapply(1, FUN = function(x) list(...)) }
+   z1 <- fcn(a = 1)
+   str(list(z1 = z1))
+   stopifnot(identical(z1, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/47
+   message("- future_lapply(X, ...) - '{ a <- a + 1; a }' ...")
+   a <- 1
+   z0 <- lapply(1, function(ii) {
+     a <- a + 1
+     a
+   })
+   z1 <- future_lapply(1, function(ii) {
+     a <- a + 1
+     a
+   })
+   stopifnot(identical(z1, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/47
+   message("- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...")
+   z2 <- tryCatch(future_lapply(1, function(ii) {
+     a
+     a <- a + 1
+   }), error = identity)
+   stopifnot(identical(z2, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/85
+   message("- future_lapply(..., future.globals = <list>) ...")
+   a <- 0
+   y <- future_lapply(1, FUN = function(x) a, future.globals = list(a = 42))
+   str(y)
+   stopifnot(y[[1]] == 42)
+ } ## for (strategy ...)
[13:17:35.848] future_lapply() ...
[13:17:35.849] Number of chunks: 1
[13:17:35.849] getGlobalsAndPackagesXApply() ...
[13:17:35.849]  - future.globals: TRUE
[13:17:35.856]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[13:17:35.856]  - needed namespaces: [n=0] 
[13:17:35.856] Finding globals ... DONE
[13:17:35.856]  - use_args: TRUE
[13:17:35.856]  - Getting '...' globals ...
[13:17:35.857]    - '...' content: [n=0] 
[13:17:35.857] List of 1
[13:17:35.857]  $ ...: list()
[13:17:35.857]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:35.857]  - attr(*, "where")=List of 1
[13:17:35.857]   ..$ ...:<environment: 0x55fba82749f8> 
[13:17:35.857]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:35.857]  - attr(*, "resolved")= logi TRUE
[13:17:35.857]  - attr(*, "total_size")= num NA
[13:17:35.860]  - Getting '...' globals ... DONE
[13:17:35.860] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[13:17:35.860] List of 6
[13:17:35.860]  $ ...future.FUN:function (i)  
[13:17:35.860]  $ caller       :function (a, b, FUN = call_my_add)  
[13:17:35.860]  $ args         :List of 1
[13:17:35.860]   ..$ FUN:function (a, b)  
[13:17:35.860]  $ call_my_add  :function (a, b)  
[13:17:35.860]  $ my_add       :function (a, b)  
[13:17:35.860]  $ ...          : list()
[13:17:35.860]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:35.860]  - attr(*, "where")=List of 6
[13:17:35.860]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:35.860]   ..$ caller       :<environment: R_EmptyEnv> 
[13:17:35.860]   ..$ args         :<environment: R_EmptyEnv> 
[13:17:35.860]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[13:17:35.860]   ..$ my_add       :<environment: R_EmptyEnv> 
[13:17:35.860]   ..$ ...          :<environment: 0x55fba82749f8> 
[13:17:35.860]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:35.860]  - attr(*, "resolved")= logi FALSE
[13:17:35.860]  - attr(*, "total_size")= num 6664
[13:17:35.866] Packages to be attached in all futures: [n=0] 
[13:17:35.866] getGlobalsAndPackagesXApply() ... DONE
[13:17:35.867] Number of futures (= number of chunks): 1
[13:17:35.867] Launching 1 futures (chunks) ...
[13:17:35.867] Chunk #1 of 1 ...
[13:17:35.867]  - Finding globals in 'X' for chunk #1 ...
[13:17:35.867]    + additional globals found: [n=0] 
[13:17:35.867]    + additional namespaces needed: [n=0] 
[13:17:35.867]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:35.867]  - Adjusted option 'future.globals.maxSize': 524288000 -> 3 * 524288000 = 1572864000 (bytes)
[13:17:35.868]  - seeds: <none>
[13:17:35.873] Created future:
[13:17:35.873] SequentialFuture:
[13:17:35.873] Label: ‘future_lapply-1’
[13:17:35.873] Expression:
[13:17:35.873] {
[13:17:35.873]     do.call(function(...) {
[13:17:35.873]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:35.873]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:35.873]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:35.873]             on.exit(options(oopts), add = TRUE)
[13:17:35.873]         }
[13:17:35.873]         {
[13:17:35.873]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:35.873]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:35.873]                 ...future.FUN(...future.X_jj, ...)
[13:17:35.873]             })
[13:17:35.873]         }
[13:17:35.873]     }, args = future.call.arguments)
[13:17:35.873] }
[13:17:35.873] Lazy evaluation: FALSE
[13:17:35.873] Asynchronous evaluation: FALSE
[13:17:35.873] Local evaluation: TRUE
[13:17:35.873] Environment: 0x55fba8274e58
[13:17:35.873] Capture standard output: TRUE
[13:17:35.873] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:35.873] Globals: 9 objects totaling 16.21 KiB (function ‘...future.FUN’ of 1.70 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[13:17:35.873] Packages: <none>
[13:17:35.873] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:35.873] Resolved: TRUE
[13:17:35.873] Value: 168 bytes of class ‘list’
[13:17:35.873] Early signaling: FALSE
[13:17:35.873] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:35.873] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:17:35.874] Chunk #1 of 1 ... DONE
[13:17:35.874] Launching 1 futures (chunks) ... DONE
[13:17:35.874] Resolving 1 futures (chunks) ...
[13:17:35.875]  - Number of value chunks collected: 1
[13:17:35.875] Resolving 1 futures (chunks) ... DONE
[13:17:35.875] Reducing values from 1 chunks ...
[13:17:35.875]  - Number of values collected after concatenation: 3
[13:17:35.875]  - Number of values expected: 3
[13:17:35.875] Reducing values from 1 chunks ... DONE
[13:17:35.875] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[13:17:35.876] future_lapply() ...
[13:17:35.879] Number of chunks: 1
[13:17:35.879] getGlobalsAndPackagesXApply() ...
[13:17:35.879]  - future.globals: TRUE
[13:17:35.882]  - globals found/used: [n=1] ‘FUN’
[13:17:35.882]  - needed namespaces: [n=0] 
[13:17:35.882] Finding globals ... DONE
[13:17:35.882]  - use_args: TRUE
[13:17:35.882]  - Getting '...' globals ...
[13:17:35.882]    - '...' content: [n=1] ‘what’
[13:17:35.883] List of 1
[13:17:35.883]  $ ...:List of 1
[13:17:35.883]   ..$ what:function (x)  
[13:17:35.883]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:35.883]  - attr(*, "where")=List of 1
[13:17:35.883]   ..$ ...:<environment: 0x55fba6edd0d8> 
[13:17:35.883]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:35.883]  - attr(*, "resolved")= logi TRUE
[13:17:35.883]  - attr(*, "total_size")= num NA
[13:17:35.885]  - Getting '...' globals ... DONE
[13:17:35.886] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:17:35.886] List of 2
[13:17:35.886]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[13:17:35.886]  $ ...          :List of 1
[13:17:35.886]   ..$ what:function (x)  
[13:17:35.886]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:35.886]  - attr(*, "where")=List of 2
[13:17:35.886]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:35.886]   ..$ ...          :<environment: 0x55fba6edd0d8> 
[13:17:35.886]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:35.886]  - attr(*, "resolved")= logi FALSE
[13:17:35.886]  - attr(*, "total_size")= num 12192
[13:17:35.889] Packages to be attached in all futures: [n=0] 
[13:17:35.889] getGlobalsAndPackagesXApply() ... DONE
[13:17:35.889] Number of futures (= number of chunks): 1
[13:17:35.889] Launching 1 futures (chunks) ...
[13:17:35.889] Chunk #1 of 1 ...
[13:17:35.889]  - Finding globals in 'X' for chunk #1 ...
[13:17:35.890]    + additional globals found: [n=0] 
[13:17:35.890]    + additional namespaces needed: [n=0] 
[13:17:35.890]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:35.890]  - seeds: <none>
[13:17:35.892] Created future:
[13:17:35.892] SequentialFuture:
[13:17:35.892] Label: ‘future_lapply-1’
[13:17:35.892] Expression:
[13:17:35.892] {
[13:17:35.892]     do.call(function(...) {
[13:17:35.892]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:35.892]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:35.892]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:35.892]             on.exit(options(oopts), add = TRUE)
[13:17:35.892]         }
[13:17:35.892]         {
[13:17:35.892]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:35.892]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:35.892]                 ...future.FUN(...future.X_jj, ...)
[13:17:35.892]             })
[13:17:35.892]         }
[13:17:35.892]     }, args = future.call.arguments)
[13:17:35.892] }
[13:17:35.892] Lazy evaluation: FALSE
[13:17:35.892] Asynchronous evaluation: FALSE
[13:17:35.892] Local evaluation: TRUE
[13:17:35.892] Environment: R_GlobalEnv
[13:17:35.892] Capture standard output: TRUE
[13:17:35.892] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:35.892] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:35.892] Packages: <none>
[13:17:35.892] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:35.892] Resolved: TRUE
[13:17:35.892] Value: 56 bytes of class ‘list’
[13:17:35.892] Early signaling: FALSE
[13:17:35.892] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:35.892] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:17:35.893] Chunk #1 of 1 ... DONE
[13:17:35.893] Launching 1 futures (chunks) ... DONE
[13:17:35.893] Resolving 1 futures (chunks) ...
[13:17:35.894]  - Number of value chunks collected: 1
[13:17:35.894] Resolving 1 futures (chunks) ... DONE
[13:17:35.894] Reducing values from 1 chunks ...
[13:17:35.894]  - Number of values collected after concatenation: 1
[13:17:35.894]  - Number of values expected: 1
[13:17:35.894] Reducing values from 1 chunks ... DONE
[13:17:35.894] future_lapply() ... DONE
[13:17:35.894] future_lapply() ...
[13:17:35.896] Number of chunks: 1
[13:17:35.896] getGlobalsAndPackagesXApply() ...
[13:17:35.896]  - future.globals: TRUE
[13:17:35.898]  - globals found/used: [n=1] ‘FUN’
[13:17:35.898]  - needed namespaces: [n=0] 
[13:17:35.898] Finding globals ... DONE
[13:17:35.899]  - use_args: TRUE
[13:17:35.899]  - Getting '...' globals ...
[13:17:35.899]    - '...' content: [n=1] ‘what’
[13:17:35.899] List of 1
[13:17:35.899]  $ ...:List of 1
[13:17:35.899]   ..$ what:function (...)  
[13:17:35.899]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:35.899]  - attr(*, "where")=List of 1
[13:17:35.899]   ..$ ...:<environment: 0x55fba7fa3858> 
[13:17:35.899]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:35.899]  - attr(*, "resolved")= logi TRUE
[13:17:35.899]  - attr(*, "total_size")= num NA
[13:17:35.902]  - Getting '...' globals ... DONE
[13:17:35.902] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:17:35.902] List of 2
[13:17:35.902]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[13:17:35.902]  $ ...          :List of 1
[13:17:35.902]   ..$ what:function (...)  
[13:17:35.902]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:35.902]  - attr(*, "where")=List of 2
[13:17:35.902]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:35.902]   ..$ ...          :<environment: 0x55fba7fa3858> 
[13:17:35.902]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:35.902]  - attr(*, "resolved")= logi FALSE
[13:17:35.902]  - attr(*, "total_size")= num 12584
[13:17:35.905] Packages to be attached in all futures: [n=0] 
[13:17:35.905] getGlobalsAndPackagesXApply() ... DONE
[13:17:35.905] Number of futures (= number of chunks): 1
[13:17:35.905] Launching 1 futures (chunks) ...
[13:17:35.906] Chunk #1 of 1 ...
[13:17:35.906]  - Finding globals in 'X' for chunk #1 ...
[13:17:35.906]    + additional globals found: [n=0] 
[13:17:35.906]    + additional namespaces needed: [n=0] 
[13:17:35.906]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:35.906]  - seeds: <none>
[13:17:35.911] Created future:
[13:17:35.911] SequentialFuture:
[13:17:35.911] Label: ‘future_lapply-1’
[13:17:35.911] Expression:
[13:17:35.911] {
[13:17:35.911]     do.call(function(...) {
[13:17:35.911]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:35.911]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:35.911]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:35.911]             on.exit(options(oopts), add = TRUE)
[13:17:35.911]         }
[13:17:35.911]         {
[13:17:35.911]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:35.911]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:35.911]                 ...future.FUN(...future.X_jj, ...)
[13:17:35.911]             })
[13:17:35.911]         }
[13:17:35.911]     }, args = future.call.arguments)
[13:17:35.911] }
[13:17:35.911] Lazy evaluation: FALSE
[13:17:35.911] Asynchronous evaluation: FALSE
[13:17:35.911] Local evaluation: TRUE
[13:17:35.911] Environment: R_GlobalEnv
[13:17:35.911] Capture standard output: TRUE
[13:17:35.911] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:35.911] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:35.911] Packages: <none>
[13:17:35.911] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:35.911] Resolved: TRUE
[13:17:35.911] Value: 56 bytes of class ‘list’
[13:17:35.911] Early signaling: FALSE
[13:17:35.911] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:35.911] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:17:35.912] Chunk #1 of 1 ... DONE
[13:17:35.912] Launching 1 futures (chunks) ... DONE
[13:17:35.912] Resolving 1 futures (chunks) ...
[13:17:35.912]  - Number of value chunks collected: 1
[13:17:35.913] Resolving 1 futures (chunks) ... DONE
[13:17:35.913] Reducing values from 1 chunks ...
[13:17:35.913]  - Number of values collected after concatenation: 1
[13:17:35.913]  - Number of values expected: 1
[13:17:35.913] Reducing values from 1 chunks ... DONE
[13:17:35.913] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[13:17:35.913] future_lapply() ...
[13:17:35.914] Number of chunks: 1
[13:17:35.914] getGlobalsAndPackagesXApply() ...
[13:17:35.914]  - future.globals: TRUE
[13:17:35.915]  - globals found/used: [n=1] ‘FUN’
[13:17:35.916]  - needed namespaces: [n=0] 
[13:17:35.916] Finding globals ... DONE
[13:17:35.916]  - use_args: TRUE
[13:17:35.916]  - Getting '...' globals ...
[13:17:35.916]    - '...' content: [n=1] ‘b’
[13:17:35.916] List of 1
[13:17:35.916]  $ ...:List of 1
[13:17:35.916]   ..$ b:'data.frame':	2 obs. of  1 variable:
[13:17:35.916]   .. ..$ a: int [1:2] 1 2
[13:17:35.916]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:35.916]  - attr(*, "where")=List of 1
[13:17:35.916]   ..$ ...:<environment: 0x55fba75f5ab8> 
[13:17:35.916]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:35.916]  - attr(*, "resolved")= logi TRUE
[13:17:35.916]  - attr(*, "total_size")= num NA
[13:17:35.919]  - Getting '...' globals ... DONE
[13:17:35.920] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:17:35.920] List of 2
[13:17:35.920]  $ ...future.FUN:function (a, b)  
[13:17:35.920]  $ ...          :List of 1
[13:17:35.920]   ..$ b:'data.frame':	2 obs. of  1 variable:
[13:17:35.920]   .. ..$ a: int [1:2] 1 2
[13:17:35.920]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:35.920]  - attr(*, "where")=List of 2
[13:17:35.920]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:35.920]   ..$ ...          :<environment: 0x55fba75f5ab8> 
[13:17:35.920]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:35.920]  - attr(*, "resolved")= logi FALSE
[13:17:35.920]  - attr(*, "total_size")= num 1440
[13:17:35.923] Packages to be attached in all futures: [n=0] 
[13:17:35.923] getGlobalsAndPackagesXApply() ... DONE
[13:17:35.923] Number of futures (= number of chunks): 1
[13:17:35.923] Launching 1 futures (chunks) ...
[13:17:35.923] Chunk #1 of 1 ...
[13:17:35.924]  - Finding globals in 'X' for chunk #1 ...
[13:17:35.924]    + additional globals found: [n=0] 
[13:17:35.924]    + additional namespaces needed: [n=0] 
[13:17:35.924]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:35.924]  - seeds: <none>
[13:17:35.926] Created future:
[13:17:35.926] SequentialFuture:
[13:17:35.926] Label: ‘future_lapply-1’
[13:17:35.926] Expression:
[13:17:35.926] {
[13:17:35.926]     do.call(function(...) {
[13:17:35.926]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:35.926]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:35.926]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:35.926]             on.exit(options(oopts), add = TRUE)
[13:17:35.926]         }
[13:17:35.926]         {
[13:17:35.926]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:35.926]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:35.926]                 ...future.FUN(...future.X_jj, ...)
[13:17:35.926]             })
[13:17:35.926]         }
[13:17:35.926]     }, args = future.call.arguments)
[13:17:35.926] }
[13:17:35.926] Lazy evaluation: FALSE
[13:17:35.926] Asynchronous evaluation: FALSE
[13:17:35.926] Local evaluation: TRUE
[13:17:35.926] Environment: R_GlobalEnv
[13:17:35.926] Capture standard output: TRUE
[13:17:35.926] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:35.926] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:35.926] Packages: <none>
[13:17:35.926] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:35.926] Resolved: TRUE
[13:17:35.926] Value: 112 bytes of class ‘list’
[13:17:35.926] Early signaling: FALSE
[13:17:35.926] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:35.926] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:17:35.927] Chunk #1 of 1 ... DONE
[13:17:35.927] Launching 1 futures (chunks) ... DONE
[13:17:35.928] Resolving 1 futures (chunks) ...
[13:17:35.928]  - Number of value chunks collected: 1
[13:17:35.928] Resolving 1 futures (chunks) ... DONE
[13:17:35.928] Reducing values from 1 chunks ...
[13:17:35.928]  - Number of values collected after concatenation: 1
[13:17:35.928]  - Number of values expected: 1
[13:17:35.928] Reducing values from 1 chunks ... DONE
[13:17:35.929] future_lapply() ... DONE
[13:17:35.929] future_lapply() ...
[13:17:35.929] Number of chunks: 1
[13:17:35.929] getGlobalsAndPackagesXApply() ...
[13:17:35.929]  - future.globals: TRUE
[13:17:35.931]  - globals found/used: [n=1] ‘FUN’
[13:17:35.931]  - needed namespaces: [n=0] 
[13:17:35.932] Finding globals ... DONE
[13:17:35.932]  - use_args: TRUE
[13:17:35.932]  - Getting '...' globals ...
[13:17:35.932]    - '...' content: [n=1] ‘b’
[13:17:35.932] List of 1
[13:17:35.932]  $ ...:List of 1
[13:17:35.932]   ..$ b:<environment: 0x55fba680fa98> 
[13:17:35.932]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:35.932]  - attr(*, "where")=List of 1
[13:17:35.932]   ..$ ...:<environment: 0x55fba6810748> 
[13:17:35.932]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:35.932]  - attr(*, "resolved")= logi TRUE
[13:17:35.932]  - attr(*, "total_size")= num NA
[13:17:35.935]  - Getting '...' globals ... DONE
[13:17:35.935] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:17:35.935] List of 2
[13:17:35.935]  $ ...future.FUN:function (a, b)  
[13:17:35.935]  $ ...          :List of 1
[13:17:35.935]   ..$ b:<environment: 0x55fba680fa98> 
[13:17:35.935]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:35.935]  - attr(*, "where")=List of 2
[13:17:35.935]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:35.935]   ..$ ...          :<environment: 0x55fba6810748> 
[13:17:35.935]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:35.935]  - attr(*, "resolved")= logi FALSE
[13:17:35.935]  - attr(*, "total_size")= num 1440
[13:17:35.938] Packages to be attached in all futures: [n=0] 
[13:17:35.938] getGlobalsAndPackagesXApply() ... DONE
[13:17:35.938] Number of futures (= number of chunks): 1
[13:17:35.939] Launching 1 futures (chunks) ...
[13:17:35.939] Chunk #1 of 1 ...
[13:17:35.939]  - Finding globals in 'X' for chunk #1 ...
[13:17:35.939]    + additional globals found: [n=0] 
[13:17:35.939]    + additional namespaces needed: [n=0] 
[13:17:35.939]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:35.939]  - seeds: <none>
[13:17:35.941] Created future:
[13:17:35.942] SequentialFuture:
[13:17:35.942] Label: ‘future_lapply-1’
[13:17:35.942] Expression:
[13:17:35.942] {
[13:17:35.942]     do.call(function(...) {
[13:17:35.942]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:35.942]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:35.942]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:35.942]             on.exit(options(oopts), add = TRUE)
[13:17:35.942]         }
[13:17:35.942]         {
[13:17:35.942]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:35.942]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:35.942]                 ...future.FUN(...future.X_jj, ...)
[13:17:35.942]             })
[13:17:35.942]         }
[13:17:35.942]     }, args = future.call.arguments)
[13:17:35.942] }
[13:17:35.942] Lazy evaluation: FALSE
[13:17:35.942] Asynchronous evaluation: FALSE
[13:17:35.942] Local evaluation: TRUE
[13:17:35.942] Environment: R_GlobalEnv
[13:17:35.942] Capture standard output: TRUE
[13:17:35.942] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:35.942] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:35.942] Packages: <none>
[13:17:35.942] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:35.942] Resolved: TRUE
[13:17:35.942] Value: 120 bytes of class ‘list’
[13:17:35.942] Early signaling: FALSE
[13:17:35.942] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:35.942] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:17:35.942] Chunk #1 of 1 ... DONE
[13:17:35.943] Launching 1 futures (chunks) ... DONE
[13:17:35.943] Resolving 1 futures (chunks) ...
[13:17:35.943]  - Number of value chunks collected: 1
[13:17:35.943] Resolving 1 futures (chunks) ... DONE
[13:17:35.943] Reducing values from 1 chunks ...
[13:17:35.943]  - Number of values collected after concatenation: 1
[13:17:35.943]  - Number of values expected: 1
[13:17:35.943] Reducing values from 1 chunks ... DONE
[13:17:35.944] future_lapply() ... DONE
[13:17:35.944] future_lapply() ...
[13:17:35.944] Number of chunks: 1
[13:17:35.944] getGlobalsAndPackagesXApply() ...
[13:17:35.944]  - future.globals: TRUE
[13:17:35.946]  - globals found/used: [n=1] ‘FUN’
[13:17:35.946]  - needed namespaces: [n=0] 
[13:17:35.947] Finding globals ... DONE
[13:17:35.947]  - use_args: TRUE
[13:17:35.947]  - Getting '...' globals ...
[13:17:35.947]    - '...' content: [n=1] ‘b’
[13:17:35.947] List of 1
[13:17:35.947]  $ ...:List of 1
[13:17:35.947]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[13:17:35.947]   .. .. ..@ slots     :List of 4
[13:17:35.947]   .. .. .. ..$ .Data  : chr "function"
[13:17:35.947]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.947]   .. .. .. ..$ target : chr "signature"
[13:17:35.947]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.947]   .. .. .. ..$ defined: chr "signature"
[13:17:35.947]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.947]   .. .. .. ..$ generic: chr "character"
[13:17:35.947]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.947]   .. .. ..@ contains  :List of 3
[13:17:35.947]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:35.947]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:17:35.947]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ superClass: chr "function"
[13:17:35.947]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:35.947]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:35.947]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:35.947]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:35.947]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:35.947]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[13:17:35.947]   .. .. .. .. .. ..@ distance  : num 1
[13:17:35.947]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:35.947]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:17:35.947]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[13:17:35.947]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:35.947]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:35.947]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:35.947]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:35.947]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:35.947]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:35.947]   .. .. .. .. .. ..@ distance  : num 1
[13:17:35.947]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:35.947]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:17:35.947]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[13:17:35.947]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:35.947]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:35.947]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:35.947]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:35.947]   .. .. .. .. .. ..@ by        : chr "function"
[13:17:35.947]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:35.947]   .. .. .. .. .. ..@ distance  : num 2
[13:17:35.947]   .. .. ..@ virtual   : logi FALSE
[13:17:35.947]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[13:17:35.947]  list()
[13:17:35.947]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[13:17:35.947]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:17:35.947]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:17:35.947]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:17:35.947]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[13:17:35.947]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:17:35.947]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:17:35.947]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:17:35.947]   .. .. .. .. ..$ generic: chr(0) 
[13:17:35.947]   .. .. ..@ validity  : NULL
[13:17:35.947]   .. .. ..@ access    : list()
[13:17:35.947]   .. .. ..@ className : chr "MethodDefinition"
[13:17:35.947]   .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.947]   .. .. ..@ package   : chr "methods"
[13:17:35.947]   .. .. ..@ subclasses:List of 7
[13:17:35.947]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:35.947]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[13:17:35.947]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:35.947]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:35.947]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:35.947]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:35.947]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:35.947]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:35.947]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:35.947]   .. .. .. .. .. ..@ distance  : num 1
[13:17:35.947]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:35.947]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[13:17:35.947]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:35.947]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:35.947]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:35.947]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:35.947]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:35.947]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:35.947]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:35.947]   .. .. .. .. .. ..@ distance  : num 1
[13:17:35.947]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:35.947]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[13:17:35.947]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:35.947]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:35.947]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:35.947]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:35.947]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:35.947]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:35.947]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:35.947]   .. .. .. .. .. ..@ distance  : num 1
[13:17:35.947]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:35.947]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[13:17:35.947]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:35.947]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:35.947]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:35.947]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:35.947]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:35.947]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:35.947]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:35.947]   .. .. .. .. .. ..@ distance  : num 1
[13:17:35.947]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:35.947]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[13:17:35.947]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:35.947]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:35.947]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:35.947]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:35.947]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:35.947]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:17:35.947]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:35.947]   .. .. .. .. .. ..@ distance  : num 2
[13:17:35.947]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:35.947]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[13:17:35.947]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:35.947]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:35.947]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:35.947]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:35.947]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:35.947]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[13:17:35.947]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:35.947]   .. .. .. .. .. ..@ distance  : num 2
[13:17:35.947]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:35.947]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[13:17:35.947]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:35.947]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:35.947]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:35.947]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:35.947]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:35.947]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:17:35.947]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.947]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:35.947]   .. .. .. .. .. ..@ distance  : num 2
[13:17:35.947]   .. .. ..@ versionKey:<externalptr> 
[13:17:35.947]   .. .. ..@ sealed    : logi TRUE
[13:17:35.947]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:35.947]  - attr(*, "where")=List of 1
[13:17:35.947]   ..$ ...:<environment: 0x55fba81cd050> 
[13:17:35.947]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:35.947]  - attr(*, "resolved")= logi TRUE
[13:17:35.947]  - attr(*, "total_size")= num NA
[13:17:35.994]  - Getting '...' globals ... DONE
[13:17:35.994] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:17:35.996] List of 2
[13:17:35.996]  $ ...future.FUN:function (a, b)  
[13:17:35.996]  $ ...          :List of 1
[13:17:35.996]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[13:17:35.996]   .. .. ..@ slots     :List of 4
[13:17:35.996]   .. .. .. ..$ .Data  : chr "function"
[13:17:35.996]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.996]   .. .. .. ..$ target : chr "signature"
[13:17:35.996]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.996]   .. .. .. ..$ defined: chr "signature"
[13:17:35.996]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.996]   .. .. .. ..$ generic: chr "character"
[13:17:35.996]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.996]   .. .. ..@ contains  :List of 3
[13:17:35.996]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:35.996]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:17:35.996]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ superClass: chr "function"
[13:17:35.996]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:35.996]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:35.996]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:35.996]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:35.996]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:35.996]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[13:17:35.996]   .. .. .. .. .. ..@ distance  : num 1
[13:17:35.996]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:35.996]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:17:35.996]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[13:17:35.996]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:35.996]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:35.996]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:35.996]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:35.996]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:35.996]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:35.996]   .. .. .. .. .. ..@ distance  : num 1
[13:17:35.996]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:35.996]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:17:35.996]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[13:17:35.996]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:35.996]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:35.996]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:35.996]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:35.996]   .. .. .. .. .. ..@ by        : chr "function"
[13:17:35.996]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:35.996]   .. .. .. .. .. ..@ distance  : num 2
[13:17:35.996]   .. .. ..@ virtual   : logi FALSE
[13:17:35.996]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[13:17:35.996]  list()
[13:17:35.996]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[13:17:35.996]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:17:35.996]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:17:35.996]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:17:35.996]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[13:17:35.996]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:17:35.996]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:17:35.996]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:17:35.996]   .. .. .. .. ..$ generic: chr(0) 
[13:17:35.996]   .. .. ..@ validity  : NULL
[13:17:35.996]   .. .. ..@ access    : list()
[13:17:35.996]   .. .. ..@ className : chr "MethodDefinition"
[13:17:35.996]   .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.996]   .. .. ..@ package   : chr "methods"
[13:17:35.996]   .. .. ..@ subclasses:List of 7
[13:17:35.996]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:35.996]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[13:17:35.996]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:35.996]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:35.996]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:35.996]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:35.996]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:35.996]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:35.996]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:35.996]   .. .. .. .. .. ..@ distance  : num 1
[13:17:35.996]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:35.996]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[13:17:35.996]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:35.996]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:35.996]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:35.996]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:35.996]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:35.996]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:35.996]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:35.996]   .. .. .. .. .. ..@ distance  : num 1
[13:17:35.996]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:35.996]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[13:17:35.996]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:35.996]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:35.996]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:35.996]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:35.996]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:35.996]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:35.996]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:35.996]   .. .. .. .. .. ..@ distance  : num 1
[13:17:35.996]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:35.996]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[13:17:35.996]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:35.996]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:35.996]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:35.996]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:35.996]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:35.996]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:35.996]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:35.996]   .. .. .. .. .. ..@ distance  : num 1
[13:17:35.996]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:35.996]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[13:17:35.996]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:35.996]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:35.996]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:35.996]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:35.996]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:35.996]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:17:35.996]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:35.996]   .. .. .. .. .. ..@ distance  : num 2
[13:17:35.996]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:35.996]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[13:17:35.996]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:35.996]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:35.996]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:35.996]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:35.996]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:35.996]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[13:17:35.996]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:35.996]   .. .. .. .. .. ..@ distance  : num 2
[13:17:35.996]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:35.996]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[13:17:35.996]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:35.996]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:35.996]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:35.996]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:35.996]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:35.996]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:17:35.996]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:35.996]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:35.996]   .. .. .. .. .. ..@ distance  : num 2
[13:17:35.996]   .. .. ..@ versionKey:<externalptr> 
[13:17:35.996]   .. .. ..@ sealed    : logi TRUE
[13:17:35.996]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:35.996]  - attr(*, "where")=List of 2
[13:17:35.996]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:35.996]   ..$ ...          :<environment: 0x55fba81cd050> 
[13:17:35.996]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:35.996]  - attr(*, "resolved")= logi FALSE
[13:17:35.996]  - attr(*, "total_size")= num 312512
[13:17:36.042] Packages to be attached in all futures: [n=0] 
[13:17:36.042] getGlobalsAndPackagesXApply() ... DONE
[13:17:36.042] Number of futures (= number of chunks): 1
[13:17:36.043] Launching 1 futures (chunks) ...
[13:17:36.043] Chunk #1 of 1 ...
[13:17:36.043]  - Finding globals in 'X' for chunk #1 ...
[13:17:36.043]    + additional globals found: [n=0] 
[13:17:36.043]    + additional namespaces needed: [n=0] 
[13:17:36.043]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:36.043]  - seeds: <none>
[13:17:36.046] Created future:
[13:17:36.046] SequentialFuture:
[13:17:36.046] Label: ‘future_lapply-1’
[13:17:36.046] Expression:
[13:17:36.046] {
[13:17:36.046]     do.call(function(...) {
[13:17:36.046]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:36.046]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:36.046]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:36.046]             on.exit(options(oopts), add = TRUE)
[13:17:36.046]         }
[13:17:36.046]         {
[13:17:36.046]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:36.046]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:36.046]                 ...future.FUN(...future.X_jj, ...)
[13:17:36.046]             })
[13:17:36.046]         }
[13:17:36.046]     }, args = future.call.arguments)
[13:17:36.046] }
[13:17:36.046] Lazy evaluation: FALSE
[13:17:36.046] Asynchronous evaluation: FALSE
[13:17:36.046] Local evaluation: TRUE
[13:17:36.046] Environment: R_GlobalEnv
[13:17:36.046] Capture standard output: TRUE
[13:17:36.046] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:36.046] Globals: 5 objects totaling 305.24 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 303.78 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:36.046] Packages: <none>
[13:17:36.046] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:36.046] Resolved: TRUE
[13:17:36.046] Value: 112 bytes of class ‘list’
[13:17:36.046] Early signaling: FALSE
[13:17:36.046] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:36.046] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:17:36.047] Chunk #1 of 1 ... DONE
[13:17:36.047] Launching 1 futures (chunks) ... DONE
[13:17:36.047] Resolving 1 futures (chunks) ...
[13:17:36.048]  - Number of value chunks collected: 1
[13:17:36.048] Resolving 1 futures (chunks) ... DONE
[13:17:36.048] Reducing values from 1 chunks ...
[13:17:36.048]  - Number of values collected after concatenation: 1
[13:17:36.048]  - Number of values expected: 1
[13:17:36.048] Reducing values from 1 chunks ... DONE
[13:17:36.048] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[13:17:36.050] future_lapply() ...
[13:17:36.050] Number of chunks: 1
[13:17:36.051] getGlobalsAndPackagesXApply() ...
[13:17:36.051]  - future.globals: TRUE
[13:17:36.053]  - globals found/used: [n=1] ‘FUN’
[13:17:36.053]  - needed namespaces: [n=0] 
[13:17:36.053] Finding globals ... DONE
[13:17:36.053]  - use_args: TRUE
[13:17:36.053]  - Getting '...' globals ...
[13:17:36.054]    - '...' content: [n=0] 
[13:17:36.054] List of 1
[13:17:36.054]  $ ...: list()
[13:17:36.054]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.054]  - attr(*, "where")=List of 1
[13:17:36.054]   ..$ ...:<environment: 0x55fba6ad8670> 
[13:17:36.054]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.054]  - attr(*, "resolved")= logi TRUE
[13:17:36.054]  - attr(*, "total_size")= num NA
[13:17:36.058]  - Getting '...' globals ... DONE
[13:17:36.058] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:17:36.058] List of 2
[13:17:36.058]  $ ...future.FUN:function (f)  
[13:17:36.058]  $ ...          : list()
[13:17:36.058]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.058]  - attr(*, "where")=List of 2
[13:17:36.058]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:36.058]   ..$ ...          :<environment: 0x55fba6ad8670> 
[13:17:36.058]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.058]  - attr(*, "resolved")= logi FALSE
[13:17:36.058]  - attr(*, "total_size")= num 1008
[13:17:36.062] Packages to be attached in all futures: [n=0] 
[13:17:36.062] getGlobalsAndPackagesXApply() ... DONE
[13:17:36.062] Number of futures (= number of chunks): 1
[13:17:36.062] Launching 1 futures (chunks) ...
[13:17:36.063] Chunk #1 of 1 ...
[13:17:36.063]  - Finding globals in 'X' for chunk #1 ...
[13:17:36.066]    + additional globals found: [n=2] ‘a’, ‘b’
[13:17:36.066]    + additional namespaces needed: [n=1] ‘tools’
[13:17:36.067]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:36.067]  - Adjusted option 'future.globals.maxSize': 524288000 -> 4 * 524288000 = 2097152000 (bytes)
[13:17:36.067]  - seeds: <none>
[13:17:36.071] Created future:
[13:17:36.071] SequentialFuture:
[13:17:36.071] Label: ‘future_lapply-1’
[13:17:36.071] Expression:
[13:17:36.071] {
[13:17:36.071]     do.call(function(...) {
[13:17:36.071]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:36.071]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:36.071]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:36.071]             on.exit(options(oopts), add = TRUE)
[13:17:36.071]         }
[13:17:36.071]         {
[13:17:36.071]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:36.071]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:36.071]                 ...future.FUN(...future.X_jj, ...)
[13:17:36.071]             })
[13:17:36.071]         }
[13:17:36.071]     }, args = future.call.arguments)
[13:17:36.071] }
[13:17:36.071] Lazy evaluation: FALSE
[13:17:36.071] Asynchronous evaluation: FALSE
[13:17:36.071] Local evaluation: TRUE
[13:17:36.071] Environment: R_GlobalEnv
[13:17:36.071] Capture standard output: TRUE
[13:17:36.071] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:36.071] Globals: 7 objects totaling 7.49 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 6.40 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[13:17:36.071] Packages: 1 packages (‘tools’)
[13:17:36.071] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:36.071] Resolved: TRUE
[13:17:36.071] Value: 224 bytes of class ‘list’
[13:17:36.071] Early signaling: FALSE
[13:17:36.071] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:36.071] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:17:36.072] Chunk #1 of 1 ... DONE
[13:17:36.073] Launching 1 futures (chunks) ... DONE
[13:17:36.073] Resolving 1 futures (chunks) ...
[13:17:36.073]  - Number of value chunks collected: 1
[13:17:36.073] Resolving 1 futures (chunks) ... DONE
[13:17:36.074] Reducing values from 1 chunks ...
[13:17:36.074]  - Number of values collected after concatenation: 4
[13:17:36.074]  - Number of values expected: 4
[13:17:36.074] Reducing values from 1 chunks ... DONE
[13:17:36.074] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[13:17:36.078] future_lapply() ...
[13:17:36.079] Number of chunks: 1
[13:17:36.079] getGlobalsAndPackagesXApply() ...
[13:17:36.079]  - future.globals: TRUE
[13:17:36.082]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[13:17:36.082]  - needed namespaces: [n=0] 
[13:17:36.083] Finding globals ... DONE
[13:17:36.083]  - use_args: TRUE
[13:17:36.083]  - Getting '...' globals ...
[13:17:36.083]    - '...' content: [n=0] 
[13:17:36.083] List of 1
[13:17:36.083]  $ ...: list()
[13:17:36.083]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.083]  - attr(*, "where")=List of 1
[13:17:36.083]   ..$ ...:<environment: 0x55fba82a1ec0> 
[13:17:36.083]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.083]  - attr(*, "resolved")= logi TRUE
[13:17:36.083]  - attr(*, "total_size")= num NA
[13:17:36.087]  - Getting '...' globals ... DONE
[13:17:36.087] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[13:17:36.087] List of 3
[13:17:36.087]  $ ...future.FUN        :function (x)  
[13:17:36.087]  $ future.call.arguments:List of 1
[13:17:36.087]   ..$ a: num 1
[13:17:36.087]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.087]  $ ...                  : list()
[13:17:36.087]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.087]  - attr(*, "where")=List of 3
[13:17:36.087]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[13:17:36.087]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[13:17:36.087]   ..$ ...                  :<environment: 0x55fba82a1ec0> 
[13:17:36.087]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.087]  - attr(*, "resolved")= logi FALSE
[13:17:36.087]  - attr(*, "total_size")= num 1272
[13:17:36.093] Packages to be attached in all futures: [n=0] 
[13:17:36.093] getGlobalsAndPackagesXApply() ... DONE
[13:17:36.093] Number of futures (= number of chunks): 1
[13:17:36.093] Launching 1 futures (chunks) ...
[13:17:36.093] Chunk #1 of 1 ...
[13:17:36.093]  - Finding globals in 'X' for chunk #1 ...
[13:17:36.094]    + additional globals found: [n=0] 
[13:17:36.094]    + additional namespaces needed: [n=0] 
[13:17:36.094]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:36.094]  - seeds: <none>
[13:17:36.096] Created future:
[13:17:36.096] SequentialFuture:
[13:17:36.096] Label: ‘future_lapply-1’
[13:17:36.096] Expression:
[13:17:36.096] {
[13:17:36.096]     do.call(function(...) {
[13:17:36.096]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:36.096]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:36.096]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:36.096]             on.exit(options(oopts), add = TRUE)
[13:17:36.096]         }
[13:17:36.096]         {
[13:17:36.096]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:36.096]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:36.096]                 ...future.FUN(...future.X_jj)
[13:17:36.096]             })
[13:17:36.096]         }
[13:17:36.096]     }, args = future.call.arguments)
[13:17:36.096] }
[13:17:36.096] Lazy evaluation: FALSE
[13:17:36.096] Asynchronous evaluation: FALSE
[13:17:36.096] Local evaluation: TRUE
[13:17:36.096] Environment: 0x55fba82a2278
[13:17:36.096] Capture standard output: TRUE
[13:17:36.096] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:36.096] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:36.096] Packages: <none>
[13:17:36.096] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:36.096] Resolved: TRUE
[13:17:36.096] Value: 56 bytes of class ‘list’
[13:17:36.096] Early signaling: FALSE
[13:17:36.096] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:36.096] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:17:36.097] Chunk #1 of 1 ... DONE
[13:17:36.097] Launching 1 futures (chunks) ... DONE
[13:17:36.098] Resolving 1 futures (chunks) ...
[13:17:36.098]  - Number of value chunks collected: 1
[13:17:36.098] Resolving 1 futures (chunks) ... DONE
[13:17:36.098] Reducing values from 1 chunks ...
[13:17:36.098]  - Number of values collected after concatenation: 1
[13:17:36.098]  - Number of values expected: 1
[13:17:36.098] Reducing values from 1 chunks ... DONE
[13:17:36.099] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[13:17:36.100] future_lapply() ...
[13:17:36.100] Number of chunks: 1
[13:17:36.101] getGlobalsAndPackagesXApply() ...
[13:17:36.101]  - future.globals: TRUE
[13:17:36.103]  - globals found/used: [n=2] ‘FUN’, ‘a’
[13:17:36.103]  - needed namespaces: [n=0] 
[13:17:36.103] Finding globals ... DONE
[13:17:36.103]  - use_args: TRUE
[13:17:36.103]  - Getting '...' globals ...
[13:17:36.103]    - '...' content: [n=0] 
[13:17:36.103] List of 1
[13:17:36.103]  $ ...: list()
[13:17:36.103]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.103]  - attr(*, "where")=List of 1
[13:17:36.103]   ..$ ...:<environment: 0x55fba72483c0> 
[13:17:36.103]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.103]  - attr(*, "resolved")= logi TRUE
[13:17:36.103]  - attr(*, "total_size")= num NA
[13:17:36.106]  - Getting '...' globals ... DONE
[13:17:36.106] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[13:17:36.106] List of 3
[13:17:36.106]  $ ...future.FUN:function (ii)  
[13:17:36.106]  $ a            : num 1
[13:17:36.106]  $ ...          : list()
[13:17:36.106]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.106]  - attr(*, "where")=List of 3
[13:17:36.106]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:36.106]   ..$ a            :<environment: R_EmptyEnv> 
[13:17:36.106]   ..$ ...          :<environment: 0x55fba72483c0> 
[13:17:36.106]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.106]  - attr(*, "resolved")= logi FALSE
[13:17:36.106]  - attr(*, "total_size")= num 2984
[13:17:36.109] Packages to be attached in all futures: [n=0] 
[13:17:36.109] getGlobalsAndPackagesXApply() ... DONE
[13:17:36.110] Number of futures (= number of chunks): 1
[13:17:36.110] Launching 1 futures (chunks) ...
[13:17:36.110] Chunk #1 of 1 ...
[13:17:36.110]  - Finding globals in 'X' for chunk #1 ...
[13:17:36.110]    + additional globals found: [n=0] 
[13:17:36.110]    + additional namespaces needed: [n=0] 
[13:17:36.110]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:36.110]  - seeds: <none>
[13:17:36.113] Created future:
[13:17:36.113] SequentialFuture:
[13:17:36.113] Label: ‘future_lapply-1’
[13:17:36.113] Expression:
[13:17:36.113] {
[13:17:36.113]     do.call(function(...) {
[13:17:36.113]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:36.113]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:36.113]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:36.113]             on.exit(options(oopts), add = TRUE)
[13:17:36.113]         }
[13:17:36.113]         {
[13:17:36.113]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:36.113]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:36.113]                 ...future.FUN(...future.X_jj, ...)
[13:17:36.113]             })
[13:17:36.113]         }
[13:17:36.113]     }, args = future.call.arguments)
[13:17:36.113] }
[13:17:36.113] Lazy evaluation: FALSE
[13:17:36.113] Asynchronous evaluation: FALSE
[13:17:36.113] Local evaluation: TRUE
[13:17:36.113] Environment: R_GlobalEnv
[13:17:36.113] Capture standard output: TRUE
[13:17:36.113] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:36.113] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[13:17:36.113] Packages: <none>
[13:17:36.113] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:36.113] Resolved: TRUE
[13:17:36.113] Value: 56 bytes of class ‘list’
[13:17:36.113] Early signaling: FALSE
[13:17:36.113] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:36.113] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:17:36.114] Chunk #1 of 1 ... DONE
[13:17:36.114] Launching 1 futures (chunks) ... DONE
[13:17:36.114] Resolving 1 futures (chunks) ...
[13:17:36.114]  - Number of value chunks collected: 1
[13:17:36.115] Resolving 1 futures (chunks) ... DONE
[13:17:36.115] Reducing values from 1 chunks ...
[13:17:36.115]  - Number of values collected after concatenation: 1
[13:17:36.115]  - Number of values expected: 1
[13:17:36.115] Reducing values from 1 chunks ... DONE
[13:17:36.115] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[13:17:36.115] future_lapply() ...
[13:17:36.116] Number of chunks: 1
[13:17:36.116] getGlobalsAndPackagesXApply() ...
[13:17:36.116]  - future.globals: TRUE
[13:17:36.118]  - globals found/used: [n=2] ‘FUN’, ‘a’
[13:17:36.118]  - needed namespaces: [n=0] 
[13:17:36.118] Finding globals ... DONE
[13:17:36.118]  - use_args: TRUE
[13:17:36.119]  - Getting '...' globals ...
[13:17:36.119]    - '...' content: [n=0] 
[13:17:36.119] List of 1
[13:17:36.119]  $ ...: list()
[13:17:36.119]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.119]  - attr(*, "where")=List of 1
[13:17:36.119]   ..$ ...:<environment: 0x55fba55ebf78> 
[13:17:36.119]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.119]  - attr(*, "resolved")= logi TRUE
[13:17:36.119]  - attr(*, "total_size")= num NA
[13:17:36.121]  - Getting '...' globals ... DONE
[13:17:36.122] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[13:17:36.122] List of 3
[13:17:36.122]  $ ...future.FUN:function (ii)  
[13:17:36.122]  $ a            : num 1
[13:17:36.122]  $ ...          : list()
[13:17:36.122]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.122]  - attr(*, "where")=List of 3
[13:17:36.122]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:36.122]   ..$ a            :<environment: R_EmptyEnv> 
[13:17:36.122]   ..$ ...          :<environment: 0x55fba55ebf78> 
[13:17:36.122]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.122]  - attr(*, "resolved")= logi FALSE
[13:17:36.122]  - attr(*, "total_size")= num 2984
[13:17:36.125] Packages to be attached in all futures: [n=0] 
[13:17:36.125] getGlobalsAndPackagesXApply() ... DONE
[13:17:36.125] Number of futures (= number of chunks): 1
[13:17:36.125] Launching 1 futures (chunks) ...
[13:17:36.125] Chunk #1 of 1 ...
[13:17:36.125]  - Finding globals in 'X' for chunk #1 ...
[13:17:36.126]    + additional globals found: [n=0] 
[13:17:36.126]    + additional namespaces needed: [n=0] 
[13:17:36.126]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:36.126]  - seeds: <none>
[13:17:36.128] Created future:
[13:17:36.128] SequentialFuture:
[13:17:36.128] Label: ‘future_lapply-1’
[13:17:36.128] Expression:
[13:17:36.128] {
[13:17:36.128]     do.call(function(...) {
[13:17:36.128]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:36.128]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:36.128]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:36.128]             on.exit(options(oopts), add = TRUE)
[13:17:36.128]         }
[13:17:36.128]         {
[13:17:36.128]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:36.128]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:36.128]                 ...future.FUN(...future.X_jj, ...)
[13:17:36.128]             })
[13:17:36.128]         }
[13:17:36.128]     }, args = future.call.arguments)
[13:17:36.128] }
[13:17:36.128] Lazy evaluation: FALSE
[13:17:36.128] Asynchronous evaluation: FALSE
[13:17:36.128] Local evaluation: TRUE
[13:17:36.128] Environment: R_GlobalEnv
[13:17:36.128] Capture standard output: TRUE
[13:17:36.128] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:36.128] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[13:17:36.128] Packages: <none>
[13:17:36.128] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:36.128] Resolved: TRUE
[13:17:36.128] Value: 56 bytes of class ‘list’
[13:17:36.128] Early signaling: FALSE
[13:17:36.128] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:36.128] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:17:36.129] Chunk #1 of 1 ... DONE
[13:17:36.129] Launching 1 futures (chunks) ... DONE
[13:17:36.129] Resolving 1 futures (chunks) ...
[13:17:36.130]  - Number of value chunks collected: 1
[13:17:36.130] Resolving 1 futures (chunks) ... DONE
[13:17:36.130] Reducing values from 1 chunks ...
[13:17:36.130]  - Number of values collected after concatenation: 1
[13:17:36.130]  - Number of values expected: 1
[13:17:36.130] Reducing values from 1 chunks ... DONE
[13:17:36.130] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[13:17:36.131] future_lapply() ...
[13:17:36.131] Number of chunks: 1
[13:17:36.131] getGlobalsAndPackagesXApply() ...
[13:17:36.131]  - future.globals: <name-value list> with names ‘42’
[13:17:36.131]  - use_args: TRUE
[13:17:36.132]  - Getting '...' globals ...
[13:17:36.132]    - '...' content: [n=0] 
[13:17:36.132] List of 1
[13:17:36.132]  $ ...: list()
[13:17:36.132]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.132]  - attr(*, "where")=List of 1
[13:17:36.132]   ..$ ...:<environment: 0x55fba8526e40> 
[13:17:36.132]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.132]  - attr(*, "resolved")= logi TRUE
[13:17:36.132]  - attr(*, "total_size")= num NA
[13:17:36.134]  - Getting '...' globals ... DONE
[13:17:36.134] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[13:17:36.135] List of 3
[13:17:36.135]  $ a            : num 42
[13:17:36.135]  $ ...future.FUN:function (x)  
[13:17:36.135]  $ ...          : list()
[13:17:36.135]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.135]  - attr(*, "where")=List of 3
[13:17:36.135]   ..$ a            :<environment: R_EmptyEnv> 
[13:17:36.135]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[13:17:36.135]   ..$ ...          :<environment: 0x55fba8526e40> 
[13:17:36.135]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.135]  - attr(*, "resolved")= logi FALSE
[13:17:36.135]  - attr(*, "total_size")= num NA
[13:17:36.140] Packages to be attached in all futures: [n=0] 
[13:17:36.140] getGlobalsAndPackagesXApply() ... DONE
[13:17:36.140] Number of futures (= number of chunks): 1
[13:17:36.140] Launching 1 futures (chunks) ...
[13:17:36.140] Chunk #1 of 1 ...
[13:17:36.140]  - seeds: <none>
[13:17:36.143] Created future:
[13:17:36.143] SequentialFuture:
[13:17:36.143] Label: ‘future_lapply-1’
[13:17:36.143] Expression:
[13:17:36.143] {
[13:17:36.143]     do.call(function(...) {
[13:17:36.143]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:36.143]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:36.143]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:36.143]             on.exit(options(oopts), add = TRUE)
[13:17:36.143]         }
[13:17:36.143]         {
[13:17:36.143]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:36.143]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:36.143]                 ...future.FUN(...future.X_jj, ...)
[13:17:36.143]             })
[13:17:36.143]         }
[13:17:36.143]     }, args = future.call.arguments)
[13:17:36.143] }
[13:17:36.143] Lazy evaluation: FALSE
[13:17:36.143] Asynchronous evaluation: FALSE
[13:17:36.143] Local evaluation: TRUE
[13:17:36.143] Environment: R_GlobalEnv
[13:17:36.143] Capture standard output: TRUE
[13:17:36.143] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:36.143] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[13:17:36.143] Packages: <none>
[13:17:36.143] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:36.143] Resolved: TRUE
[13:17:36.143] Value: 56 bytes of class ‘list’
[13:17:36.143] Early signaling: FALSE
[13:17:36.143] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:36.143] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:17:36.144] Chunk #1 of 1 ... DONE
[13:17:36.144] Launching 1 futures (chunks) ... DONE
[13:17:36.144] Resolving 1 futures (chunks) ...
[13:17:36.144]  - Number of value chunks collected: 1
[13:17:36.145] Resolving 1 futures (chunks) ... DONE
[13:17:36.145] Reducing values from 1 chunks ...
[13:17:36.145]  - Number of values collected after concatenation: 1
[13:17:36.145]  - Number of values expected: 1
[13:17:36.145] Reducing values from 1 chunks ... DONE
[13:17:36.145] future_lapply() ... DONE
List of 1
 $ : num 42
[13:17:36.152] future_lapply() ...
[13:17:36.158] Number of chunks: 2
[13:17:36.158] getGlobalsAndPackagesXApply() ...
[13:17:36.158]  - future.globals: TRUE
[13:17:36.162]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[13:17:36.163]  - needed namespaces: [n=0] 
[13:17:36.163] Finding globals ... DONE
[13:17:36.163]  - use_args: TRUE
[13:17:36.163]  - Getting '...' globals ...
[13:17:36.163]    - '...' content: [n=0] 
[13:17:36.163] List of 1
[13:17:36.163]  $ ...: list()
[13:17:36.163]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.163]  - attr(*, "where")=List of 1
[13:17:36.163]   ..$ ...:<environment: 0x55fba6df6410> 
[13:17:36.163]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.163]  - attr(*, "resolved")= logi TRUE
[13:17:36.163]  - attr(*, "total_size")= num NA
[13:17:36.166]  - Getting '...' globals ... DONE
[13:17:36.166] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[13:17:36.166] List of 6
[13:17:36.166]  $ ...future.FUN:function (i)  
[13:17:36.166]  $ caller       :function (a, b, FUN = call_my_add)  
[13:17:36.166]  $ args         :List of 1
[13:17:36.166]   ..$ FUN:function (a, b)  
[13:17:36.166]  $ call_my_add  :function (a, b)  
[13:17:36.166]  $ my_add       :function (a, b)  
[13:17:36.166]  $ ...          : list()
[13:17:36.166]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.166]  - attr(*, "where")=List of 6
[13:17:36.166]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:36.166]   ..$ caller       :<environment: R_EmptyEnv> 
[13:17:36.166]   ..$ args         :<environment: R_EmptyEnv> 
[13:17:36.166]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[13:17:36.166]   ..$ my_add       :<environment: R_EmptyEnv> 
[13:17:36.166]   ..$ ...          :<environment: 0x55fba6df6410> 
[13:17:36.166]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.166]  - attr(*, "resolved")= logi FALSE
[13:17:36.166]  - attr(*, "total_size")= num 24120
[13:17:36.171] Packages to be attached in all futures: [n=0] 
[13:17:36.171] getGlobalsAndPackagesXApply() ... DONE
[13:17:36.171] Number of futures (= number of chunks): 2
[13:17:36.171] Launching 2 futures (chunks) ...
[13:17:36.171] Chunk #1 of 2 ...
[13:17:36.171]  - Finding globals in 'X' for chunk #1 ...
[13:17:36.171]    + additional globals found: [n=0] 
[13:17:36.172]    + additional namespaces needed: [n=0] 
[13:17:36.172]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:36.172]  - seeds: <none>
[13:17:36.180] Created future:
[13:17:36.181] MulticoreFuture:
[13:17:36.181] Label: ‘future_lapply-1’
[13:17:36.181] Expression:
[13:17:36.181] {
[13:17:36.181]     do.call(function(...) {
[13:17:36.181]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:36.181]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:36.181]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:36.181]             on.exit(options(oopts), add = TRUE)
[13:17:36.181]         }
[13:17:36.181]         {
[13:17:36.181]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:36.181]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:36.181]                 ...future.FUN(...future.X_jj, ...)
[13:17:36.181]             })
[13:17:36.181]         }
[13:17:36.181]     }, args = future.call.arguments)
[13:17:36.181] }
[13:17:36.181] Lazy evaluation: FALSE
[13:17:36.181] Asynchronous evaluation: TRUE
[13:17:36.181] Local evaluation: TRUE
[13:17:36.181] Environment: 0x55fba70613e8
[13:17:36.181] Capture standard output: TRUE
[13:17:36.181] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:36.181] Globals: 9 objects totaling 23.61 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[13:17:36.181] Packages: <none>
[13:17:36.181] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:36.181] Resolved: TRUE
[13:17:36.181] Value: <not collected>
[13:17:36.181] Conditions captured: <none>
[13:17:36.181] Early signaling: FALSE
[13:17:36.181] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:36.181] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:36.189] Chunk #1 of 2 ... DONE
[13:17:36.189] Chunk #2 of 2 ...
[13:17:36.189]  - Finding globals in 'X' for chunk #2 ...
[13:17:36.189]    + additional globals found: [n=0] 
[13:17:36.190]    + additional namespaces needed: [n=0] 
[13:17:36.190]  - Finding globals in 'X' for chunk #2 ... DONE
[13:17:36.190]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:17:36.190]  - seeds: <none>
[13:17:36.199] Created future:
[13:17:36.200] MulticoreFuture:
[13:17:36.200] Label: ‘future_lapply-2’
[13:17:36.200] Expression:
[13:17:36.200] {
[13:17:36.200]     do.call(function(...) {
[13:17:36.200]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:36.200]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:36.200]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:36.200]             on.exit(options(oopts), add = TRUE)
[13:17:36.200]         }
[13:17:36.200]         {
[13:17:36.200]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:36.200]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:36.200]                 ...future.FUN(...future.X_jj, ...)
[13:17:36.200]             })
[13:17:36.200]         }
[13:17:36.200]     }, args = future.call.arguments)
[13:17:36.200] }
[13:17:36.200] Lazy evaluation: FALSE
[13:17:36.200] Asynchronous evaluation: TRUE
[13:17:36.200] Local evaluation: TRUE
[13:17:36.200] Environment: 0x55fba70613e8
[13:17:36.200] Capture standard output: TRUE
[13:17:36.200] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:36.200] Globals: 9 objects totaling 23.66 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[13:17:36.200] Packages: <none>
[13:17:36.200] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:36.200] Resolved: TRUE
[13:17:36.200] Value: <not collected>
[13:17:36.200] Conditions captured: <none>
[13:17:36.200] Early signaling: FALSE
[13:17:36.200] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:36.200] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:36.208] Chunk #2 of 2 ... DONE
[13:17:36.208] Launching 2 futures (chunks) ... DONE
[13:17:36.208] Resolving 2 futures (chunks) ...
[13:17:36.212]  - Number of value chunks collected: 2
[13:17:36.212] Resolving 2 futures (chunks) ... DONE
[13:17:36.212] Reducing values from 2 chunks ...
[13:17:36.212]  - Number of values collected after concatenation: 3
[13:17:36.212]  - Number of values expected: 3
[13:17:36.213] Reducing values from 2 chunks ... DONE
[13:17:36.213] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[13:17:36.213] future_lapply() ...
[13:17:36.221] Number of chunks: 1
[13:17:36.221] getGlobalsAndPackagesXApply() ...
[13:17:36.221]  - future.globals: TRUE
[13:17:36.225]  - globals found/used: [n=1] ‘FUN’
[13:17:36.225]  - needed namespaces: [n=0] 
[13:17:36.225] Finding globals ... DONE
[13:17:36.225]  - use_args: TRUE
[13:17:36.225]  - Getting '...' globals ...
[13:17:36.226]    - '...' content: [n=1] ‘what’
[13:17:36.226] List of 1
[13:17:36.226]  $ ...:List of 1
[13:17:36.226]   ..$ what:function (x)  
[13:17:36.226]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.226]  - attr(*, "where")=List of 1
[13:17:36.226]   ..$ ...:<environment: 0x55fba86d4430> 
[13:17:36.226]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.226]  - attr(*, "resolved")= logi TRUE
[13:17:36.226]  - attr(*, "total_size")= num NA
[13:17:36.229]  - Getting '...' globals ... DONE
[13:17:36.229] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:17:36.230] List of 2
[13:17:36.230]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[13:17:36.230]  $ ...          :List of 1
[13:17:36.230]   ..$ what:function (x)  
[13:17:36.230]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.230]  - attr(*, "where")=List of 2
[13:17:36.230]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:36.230]   ..$ ...          :<environment: 0x55fba86d4430> 
[13:17:36.230]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.230]  - attr(*, "resolved")= logi FALSE
[13:17:36.230]  - attr(*, "total_size")= num 12192
[13:17:36.233] Packages to be attached in all futures: [n=0] 
[13:17:36.233] getGlobalsAndPackagesXApply() ... DONE
[13:17:36.233] Number of futures (= number of chunks): 1
[13:17:36.233] Launching 1 futures (chunks) ...
[13:17:36.234] Chunk #1 of 1 ...
[13:17:36.234]  - Finding globals in 'X' for chunk #1 ...
[13:17:36.234]    + additional globals found: [n=0] 
[13:17:36.234]    + additional namespaces needed: [n=0] 
[13:17:36.234]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:36.234]  - seeds: <none>
[13:17:36.242] Created future:
[13:17:36.242] MulticoreFuture:
[13:17:36.242] Label: ‘future_lapply-1’
[13:17:36.242] Expression:
[13:17:36.242] {
[13:17:36.242]     do.call(function(...) {
[13:17:36.242]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:36.242]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:36.242]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:36.242]             on.exit(options(oopts), add = TRUE)
[13:17:36.242]         }
[13:17:36.242]         {
[13:17:36.242]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:36.242]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:36.242]                 ...future.FUN(...future.X_jj, ...)
[13:17:36.242]             })
[13:17:36.242]         }
[13:17:36.242]     }, args = future.call.arguments)
[13:17:36.242] }
[13:17:36.242] Lazy evaluation: FALSE
[13:17:36.242] Asynchronous evaluation: TRUE
[13:17:36.242] Local evaluation: TRUE
[13:17:36.242] Environment: R_GlobalEnv
[13:17:36.242] Capture standard output: TRUE
[13:17:36.242] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:36.242] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:36.242] Packages: <none>
[13:17:36.242] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:36.242] Resolved: TRUE
[13:17:36.242] Value: <not collected>
[13:17:36.242] Conditions captured: <none>
[13:17:36.242] Early signaling: FALSE
[13:17:36.242] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:36.242] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:36.250] Chunk #1 of 1 ... DONE
[13:17:36.250] Launching 1 futures (chunks) ... DONE
[13:17:36.250] Resolving 1 futures (chunks) ...
[13:17:36.252]  - Number of value chunks collected: 1
[13:17:36.252] Resolving 1 futures (chunks) ... DONE
[13:17:36.252] Reducing values from 1 chunks ...
[13:17:36.252]  - Number of values collected after concatenation: 1
[13:17:36.252]  - Number of values expected: 1
[13:17:36.253] Reducing values from 1 chunks ... DONE
[13:17:36.253] future_lapply() ... DONE
[13:17:36.253] future_lapply() ...
[13:17:36.258] Number of chunks: 1
[13:17:36.259] getGlobalsAndPackagesXApply() ...
[13:17:36.259]  - future.globals: TRUE
[13:17:36.262]  - globals found/used: [n=1] ‘FUN’
[13:17:36.262]  - needed namespaces: [n=0] 
[13:17:36.262] Finding globals ... DONE
[13:17:36.263]  - use_args: TRUE
[13:17:36.263]  - Getting '...' globals ...
[13:17:36.263]    - '...' content: [n=1] ‘what’
[13:17:36.263] List of 1
[13:17:36.263]  $ ...:List of 1
[13:17:36.263]   ..$ what:function (...)  
[13:17:36.263]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.263]  - attr(*, "where")=List of 1
[13:17:36.263]   ..$ ...:<environment: 0x55fba68d2838> 
[13:17:36.263]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.263]  - attr(*, "resolved")= logi TRUE
[13:17:36.263]  - attr(*, "total_size")= num NA
[13:17:36.267]  - Getting '...' globals ... DONE
[13:17:36.267] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:17:36.267] List of 2
[13:17:36.267]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[13:17:36.267]  $ ...          :List of 1
[13:17:36.267]   ..$ what:function (...)  
[13:17:36.267]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.267]  - attr(*, "where")=List of 2
[13:17:36.267]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:36.267]   ..$ ...          :<environment: 0x55fba68d2838> 
[13:17:36.267]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.267]  - attr(*, "resolved")= logi FALSE
[13:17:36.267]  - attr(*, "total_size")= num 13352
[13:17:36.271] Packages to be attached in all futures: [n=0] 
[13:17:36.271] getGlobalsAndPackagesXApply() ... DONE
[13:17:36.271] Number of futures (= number of chunks): 1
[13:17:36.271] Launching 1 futures (chunks) ...
[13:17:36.271] Chunk #1 of 1 ...
[13:17:36.271]  - Finding globals in 'X' for chunk #1 ...
[13:17:36.272]    + additional globals found: [n=0] 
[13:17:36.272]    + additional namespaces needed: [n=0] 
[13:17:36.272]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:36.272]  - seeds: <none>
[13:17:36.279] Created future:
[13:17:36.280] MulticoreFuture:
[13:17:36.280] Label: ‘future_lapply-1’
[13:17:36.280] Expression:
[13:17:36.280] {
[13:17:36.280]     do.call(function(...) {
[13:17:36.280]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:36.280]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:36.280]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:36.280]             on.exit(options(oopts), add = TRUE)
[13:17:36.280]         }
[13:17:36.280]         {
[13:17:36.280]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:36.280]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:36.280]                 ...future.FUN(...future.X_jj, ...)
[13:17:36.280]             })
[13:17:36.280]         }
[13:17:36.280]     }, args = future.call.arguments)
[13:17:36.280] }
[13:17:36.280] Lazy evaluation: FALSE
[13:17:36.280] Asynchronous evaluation: TRUE
[13:17:36.280] Local evaluation: TRUE
[13:17:36.280] Environment: R_GlobalEnv
[13:17:36.280] Capture standard output: TRUE
[13:17:36.280] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:36.280] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:36.280] Packages: <none>
[13:17:36.280] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:36.280] Resolved: TRUE
[13:17:36.280] Value: <not collected>
[13:17:36.280] Conditions captured: <none>
[13:17:36.280] Early signaling: FALSE
[13:17:36.280] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:36.280] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:36.287] Chunk #1 of 1 ... DONE
[13:17:36.288] Launching 1 futures (chunks) ... DONE
[13:17:36.288] Resolving 1 futures (chunks) ...
[13:17:36.289]  - Number of value chunks collected: 1
[13:17:36.290] Resolving 1 futures (chunks) ... DONE
[13:17:36.290] Reducing values from 1 chunks ...
[13:17:36.290]  - Number of values collected after concatenation: 1
[13:17:36.290]  - Number of values expected: 1
[13:17:36.290] Reducing values from 1 chunks ... DONE
[13:17:36.290] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[13:17:36.291] future_lapply() ...
[13:17:36.295] Number of chunks: 1
[13:17:36.295] getGlobalsAndPackagesXApply() ...
[13:17:36.295]  - future.globals: TRUE
[13:17:36.297]  - globals found/used: [n=1] ‘FUN’
[13:17:36.298]  - needed namespaces: [n=0] 
[13:17:36.298] Finding globals ... DONE
[13:17:36.298]  - use_args: TRUE
[13:17:36.298]  - Getting '...' globals ...
[13:17:36.298]    - '...' content: [n=1] ‘b’
[13:17:36.298] List of 1
[13:17:36.298]  $ ...:List of 1
[13:17:36.298]   ..$ b:'data.frame':	2 obs. of  1 variable:
[13:17:36.298]   .. ..$ a: int [1:2] 1 2
[13:17:36.298]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.298]  - attr(*, "where")=List of 1
[13:17:36.298]   ..$ ...:<environment: 0x55fba842bf00> 
[13:17:36.298]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.298]  - attr(*, "resolved")= logi TRUE
[13:17:36.298]  - attr(*, "total_size")= num NA
[13:17:36.304]  - Getting '...' globals ... DONE
[13:17:36.305] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:17:36.305] List of 2
[13:17:36.305]  $ ...future.FUN:function (a, b)  
[13:17:36.305]  $ ...          :List of 1
[13:17:36.305]   ..$ b:'data.frame':	2 obs. of  1 variable:
[13:17:36.305]   .. ..$ a: int [1:2] 1 2
[13:17:36.305]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.305]  - attr(*, "where")=List of 2
[13:17:36.305]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:36.305]   ..$ ...          :<environment: 0x55fba842bf00> 
[13:17:36.305]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.305]  - attr(*, "resolved")= logi FALSE
[13:17:36.305]  - attr(*, "total_size")= num 1440
[13:17:36.309] Packages to be attached in all futures: [n=0] 
[13:17:36.309] getGlobalsAndPackagesXApply() ... DONE
[13:17:36.309] Number of futures (= number of chunks): 1
[13:17:36.309] Launching 1 futures (chunks) ...
[13:17:36.310] Chunk #1 of 1 ...
[13:17:36.310]  - Finding globals in 'X' for chunk #1 ...
[13:17:36.310]    + additional globals found: [n=0] 
[13:17:36.310]    + additional namespaces needed: [n=0] 
[13:17:36.310]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:36.310]  - seeds: <none>
[13:17:36.318] Created future:
[13:17:36.318] MulticoreFuture:
[13:17:36.318] Label: ‘future_lapply-1’
[13:17:36.318] Expression:
[13:17:36.318] {
[13:17:36.318]     do.call(function(...) {
[13:17:36.318]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:36.318]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:36.318]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:36.318]             on.exit(options(oopts), add = TRUE)
[13:17:36.318]         }
[13:17:36.318]         {
[13:17:36.318]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:36.318]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:36.318]                 ...future.FUN(...future.X_jj, ...)
[13:17:36.318]             })
[13:17:36.318]         }
[13:17:36.318]     }, args = future.call.arguments)
[13:17:36.318] }
[13:17:36.318] Lazy evaluation: FALSE
[13:17:36.318] Asynchronous evaluation: TRUE
[13:17:36.318] Local evaluation: TRUE
[13:17:36.318] Environment: R_GlobalEnv
[13:17:36.318] Capture standard output: TRUE
[13:17:36.318] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:36.318] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:36.318] Packages: <none>
[13:17:36.318] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:36.318] Resolved: TRUE
[13:17:36.318] Value: <not collected>
[13:17:36.318] Conditions captured: <none>
[13:17:36.318] Early signaling: FALSE
[13:17:36.318] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:36.318] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:36.326] Chunk #1 of 1 ... DONE
[13:17:36.326] Launching 1 futures (chunks) ... DONE
[13:17:36.326] Resolving 1 futures (chunks) ...
[13:17:36.328]  - Number of value chunks collected: 1
[13:17:36.328] Resolving 1 futures (chunks) ... DONE
[13:17:36.328] Reducing values from 1 chunks ...
[13:17:36.328]  - Number of values collected after concatenation: 1
[13:17:36.329]  - Number of values expected: 1
[13:17:36.329] Reducing values from 1 chunks ... DONE
[13:17:36.329] future_lapply() ... DONE
[13:17:36.329] future_lapply() ...
[13:17:36.334] Number of chunks: 1
[13:17:36.334] getGlobalsAndPackagesXApply() ...
[13:17:36.334]  - future.globals: TRUE
[13:17:36.336]  - globals found/used: [n=1] ‘FUN’
[13:17:36.336]  - needed namespaces: [n=0] 
[13:17:36.336] Finding globals ... DONE
[13:17:36.337]  - use_args: TRUE
[13:17:36.337]  - Getting '...' globals ...
[13:17:36.337]    - '...' content: [n=1] ‘b’
[13:17:36.337] List of 1
[13:17:36.337]  $ ...:List of 1
[13:17:36.337]   ..$ b:<environment: 0x55fba6f89128> 
[13:17:36.337]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.337]  - attr(*, "where")=List of 1
[13:17:36.337]   ..$ ...:<environment: 0x55fba6f89be0> 
[13:17:36.337]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.337]  - attr(*, "resolved")= logi TRUE
[13:17:36.337]  - attr(*, "total_size")= num NA
[13:17:36.341]  - Getting '...' globals ... DONE
[13:17:36.341] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:17:36.341] List of 2
[13:17:36.341]  $ ...future.FUN:function (a, b)  
[13:17:36.341]  $ ...          :List of 1
[13:17:36.341]   ..$ b:<environment: 0x55fba6f89128> 
[13:17:36.341]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.341]  - attr(*, "where")=List of 2
[13:17:36.341]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:36.341]   ..$ ...          :<environment: 0x55fba6f89be0> 
[13:17:36.341]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.341]  - attr(*, "resolved")= logi FALSE
[13:17:36.341]  - attr(*, "total_size")= num 1440
[13:17:36.345] Packages to be attached in all futures: [n=0] 
[13:17:36.345] getGlobalsAndPackagesXApply() ... DONE
[13:17:36.345] Number of futures (= number of chunks): 1
[13:17:36.346] Launching 1 futures (chunks) ...
[13:17:36.346] Chunk #1 of 1 ...
[13:17:36.346]  - Finding globals in 'X' for chunk #1 ...
[13:17:36.346]    + additional globals found: [n=0] 
[13:17:36.346]    + additional namespaces needed: [n=0] 
[13:17:36.346]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:36.347]  - seeds: <none>
[13:17:36.354] Created future:
[13:17:36.354] MulticoreFuture:
[13:17:36.354] Label: ‘future_lapply-1’
[13:17:36.354] Expression:
[13:17:36.354] {
[13:17:36.354]     do.call(function(...) {
[13:17:36.354]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:36.354]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:36.354]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:36.354]             on.exit(options(oopts), add = TRUE)
[13:17:36.354]         }
[13:17:36.354]         {
[13:17:36.354]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:36.354]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:36.354]                 ...future.FUN(...future.X_jj, ...)
[13:17:36.354]             })
[13:17:36.354]         }
[13:17:36.354]     }, args = future.call.arguments)
[13:17:36.354] }
[13:17:36.354] Lazy evaluation: FALSE
[13:17:36.354] Asynchronous evaluation: TRUE
[13:17:36.354] Local evaluation: TRUE
[13:17:36.354] Environment: R_GlobalEnv
[13:17:36.354] Capture standard output: TRUE
[13:17:36.354] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:36.354] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:36.354] Packages: <none>
[13:17:36.354] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:36.354] Resolved: TRUE
[13:17:36.354] Value: <not collected>
[13:17:36.354] Conditions captured: <none>
[13:17:36.354] Early signaling: FALSE
[13:17:36.354] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:36.354] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:36.362] Chunk #1 of 1 ... DONE
[13:17:36.362] Launching 1 futures (chunks) ... DONE
[13:17:36.362] Resolving 1 futures (chunks) ...
[13:17:36.364]  - Number of value chunks collected: 1
[13:17:36.364] Resolving 1 futures (chunks) ... DONE
[13:17:36.364] Reducing values from 1 chunks ...
[13:17:36.364]  - Number of values collected after concatenation: 1
[13:17:36.364]  - Number of values expected: 1
[13:17:36.365] Reducing values from 1 chunks ... DONE
[13:17:36.365] future_lapply() ... DONE
[13:17:36.365] future_lapply() ...
[13:17:36.369] Number of chunks: 1
[13:17:36.369] getGlobalsAndPackagesXApply() ...
[13:17:36.370]  - future.globals: TRUE
[13:17:36.372]  - globals found/used: [n=1] ‘FUN’
[13:17:36.372]  - needed namespaces: [n=0] 
[13:17:36.372] Finding globals ... DONE
[13:17:36.372]  - use_args: TRUE
[13:17:36.373]  - Getting '...' globals ...
[13:17:36.373]    - '...' content: [n=1] ‘b’
[13:17:36.373] List of 1
[13:17:36.373]  $ ...:List of 1
[13:17:36.373]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[13:17:36.373]   .. .. ..@ slots     :List of 4
[13:17:36.373]   .. .. .. ..$ .Data  : chr "function"
[13:17:36.373]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.373]   .. .. .. ..$ target : chr "signature"
[13:17:36.373]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.373]   .. .. .. ..$ defined: chr "signature"
[13:17:36.373]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.373]   .. .. .. ..$ generic: chr "character"
[13:17:36.373]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.373]   .. .. ..@ contains  :List of 3
[13:17:36.373]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:36.373]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:17:36.373]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ superClass: chr "function"
[13:17:36.373]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:36.373]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:36.373]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:36.373]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:36.373]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:36.373]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[13:17:36.373]   .. .. .. .. .. ..@ distance  : num 1
[13:17:36.373]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:36.373]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:17:36.373]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[13:17:36.373]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:36.373]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:36.373]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:36.373]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:36.373]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:36.373]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:36.373]   .. .. .. .. .. ..@ distance  : num 1
[13:17:36.373]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:36.373]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:17:36.373]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[13:17:36.373]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:36.373]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:36.373]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:36.373]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:36.373]   .. .. .. .. .. ..@ by        : chr "function"
[13:17:36.373]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:36.373]   .. .. .. .. .. ..@ distance  : num 2
[13:17:36.373]   .. .. ..@ virtual   : logi FALSE
[13:17:36.373]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[13:17:36.373]  list()
[13:17:36.373]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[13:17:36.373]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:17:36.373]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:17:36.373]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:17:36.373]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[13:17:36.373]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:17:36.373]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:17:36.373]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:17:36.373]   .. .. .. .. ..$ generic: chr(0) 
[13:17:36.373]   .. .. ..@ validity  : NULL
[13:17:36.373]   .. .. ..@ access    : list()
[13:17:36.373]   .. .. ..@ className : chr "MethodDefinition"
[13:17:36.373]   .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.373]   .. .. ..@ package   : chr "methods"
[13:17:36.373]   .. .. ..@ subclasses:List of 7
[13:17:36.373]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:36.373]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[13:17:36.373]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:36.373]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:36.373]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:36.373]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:36.373]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:36.373]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:36.373]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:36.373]   .. .. .. .. .. ..@ distance  : num 1
[13:17:36.373]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:36.373]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[13:17:36.373]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:36.373]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:36.373]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:36.373]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:36.373]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:36.373]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:36.373]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:36.373]   .. .. .. .. .. ..@ distance  : num 1
[13:17:36.373]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:36.373]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[13:17:36.373]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:36.373]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:36.373]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:36.373]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:36.373]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:36.373]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:36.373]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:36.373]   .. .. .. .. .. ..@ distance  : num 1
[13:17:36.373]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:36.373]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[13:17:36.373]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:36.373]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:36.373]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:36.373]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:36.373]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:36.373]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:36.373]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:36.373]   .. .. .. .. .. ..@ distance  : num 1
[13:17:36.373]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:36.373]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[13:17:36.373]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:36.373]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:36.373]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:36.373]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:36.373]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:36.373]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:17:36.373]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:36.373]   .. .. .. .. .. ..@ distance  : num 2
[13:17:36.373]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:36.373]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[13:17:36.373]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:36.373]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:36.373]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:36.373]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:36.373]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:36.373]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[13:17:36.373]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:36.373]   .. .. .. .. .. ..@ distance  : num 2
[13:17:36.373]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:36.373]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[13:17:36.373]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:36.373]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:36.373]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:36.373]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:36.373]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:36.373]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:17:36.373]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.373]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:36.373]   .. .. .. .. .. ..@ distance  : num 2
[13:17:36.373]   .. .. ..@ versionKey:<externalptr> 
[13:17:36.373]   .. .. ..@ sealed    : logi TRUE
[13:17:36.373]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.373]  - attr(*, "where")=List of 1
[13:17:36.373]   ..$ ...:<environment: 0x55fba7e0e248> 
[13:17:36.373]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.373]  - attr(*, "resolved")= logi TRUE
[13:17:36.373]  - attr(*, "total_size")= num NA
[13:17:36.428]  - Getting '...' globals ... DONE
[13:17:36.429] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:17:36.429] List of 2
[13:17:36.429]  $ ...future.FUN:function (a, b)  
[13:17:36.429]  $ ...          :List of 1
[13:17:36.429]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[13:17:36.429]   .. .. ..@ slots     :List of 4
[13:17:36.429]   .. .. .. ..$ .Data  : chr "function"
[13:17:36.429]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.429]   .. .. .. ..$ target : chr "signature"
[13:17:36.429]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.429]   .. .. .. ..$ defined: chr "signature"
[13:17:36.429]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.429]   .. .. .. ..$ generic: chr "character"
[13:17:36.429]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.429]   .. .. ..@ contains  :List of 3
[13:17:36.429]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:36.429]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:17:36.429]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ superClass: chr "function"
[13:17:36.429]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:36.429]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:36.429]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:36.429]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:36.429]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:36.429]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[13:17:36.429]   .. .. .. .. .. ..@ distance  : num 1
[13:17:36.429]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:36.429]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:17:36.429]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[13:17:36.429]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:36.429]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:36.429]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:36.429]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:36.429]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:36.429]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:36.429]   .. .. .. .. .. ..@ distance  : num 1
[13:17:36.429]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:36.429]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:17:36.429]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[13:17:36.429]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:36.429]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:36.429]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:36.429]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:36.429]   .. .. .. .. .. ..@ by        : chr "function"
[13:17:36.429]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:36.429]   .. .. .. .. .. ..@ distance  : num 2
[13:17:36.429]   .. .. ..@ virtual   : logi FALSE
[13:17:36.429]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[13:17:36.429]  list()
[13:17:36.429]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[13:17:36.429]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:17:36.429]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:17:36.429]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:17:36.429]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[13:17:36.429]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:17:36.429]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:17:36.429]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:17:36.429]   .. .. .. .. ..$ generic: chr(0) 
[13:17:36.429]   .. .. ..@ validity  : NULL
[13:17:36.429]   .. .. ..@ access    : list()
[13:17:36.429]   .. .. ..@ className : chr "MethodDefinition"
[13:17:36.429]   .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.429]   .. .. ..@ package   : chr "methods"
[13:17:36.429]   .. .. ..@ subclasses:List of 7
[13:17:36.429]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:36.429]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[13:17:36.429]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:36.429]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:36.429]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:36.429]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:36.429]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:36.429]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:36.429]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:36.429]   .. .. .. .. .. ..@ distance  : num 1
[13:17:36.429]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:36.429]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[13:17:36.429]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:36.429]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:36.429]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:36.429]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:36.429]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:36.429]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:36.429]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:36.429]   .. .. .. .. .. ..@ distance  : num 1
[13:17:36.429]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:36.429]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[13:17:36.429]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:36.429]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:36.429]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:36.429]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:36.429]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:36.429]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:36.429]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:36.429]   .. .. .. .. .. ..@ distance  : num 1
[13:17:36.429]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:36.429]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[13:17:36.429]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:36.429]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:36.429]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:36.429]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:36.429]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:36.429]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:36.429]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:36.429]   .. .. .. .. .. ..@ distance  : num 1
[13:17:36.429]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:36.429]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[13:17:36.429]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:36.429]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:36.429]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:36.429]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:36.429]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:36.429]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:17:36.429]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:36.429]   .. .. .. .. .. ..@ distance  : num 2
[13:17:36.429]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:36.429]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[13:17:36.429]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:36.429]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:36.429]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:36.429]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:36.429]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:36.429]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[13:17:36.429]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:36.429]   .. .. .. .. .. ..@ distance  : num 2
[13:17:36.429]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:36.429]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[13:17:36.429]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:36.429]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:36.429]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:36.429]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:36.429]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:36.429]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:17:36.429]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:36.429]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:36.429]   .. .. .. .. .. ..@ distance  : num 2
[13:17:36.429]   .. .. ..@ versionKey:<externalptr> 
[13:17:36.429]   .. .. ..@ sealed    : logi TRUE
[13:17:36.429]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.429]  - attr(*, "where")=List of 2
[13:17:36.429]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:36.429]   ..$ ...          :<environment: 0x55fba7e0e248> 
[13:17:36.429]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.429]  - attr(*, "resolved")= logi FALSE
[13:17:36.429]  - attr(*, "total_size")= num 312512
[13:17:36.478] Packages to be attached in all futures: [n=0] 
[13:17:36.478] getGlobalsAndPackagesXApply() ... DONE
[13:17:36.478] Number of futures (= number of chunks): 1
[13:17:36.479] Launching 1 futures (chunks) ...
[13:17:36.479] Chunk #1 of 1 ...
[13:17:36.479]  - Finding globals in 'X' for chunk #1 ...
[13:17:36.479]    + additional globals found: [n=0] 
[13:17:36.479]    + additional namespaces needed: [n=0] 
[13:17:36.479]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:36.479]  - seeds: <none>
[13:17:36.487] Created future:
[13:17:36.487] MulticoreFuture:
[13:17:36.487] Label: ‘future_lapply-1’
[13:17:36.487] Expression:
[13:17:36.487] {
[13:17:36.487]     do.call(function(...) {
[13:17:36.487]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:36.487]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:36.487]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:36.487]             on.exit(options(oopts), add = TRUE)
[13:17:36.487]         }
[13:17:36.487]         {
[13:17:36.487]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:36.487]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:36.487]                 ...future.FUN(...future.X_jj, ...)
[13:17:36.487]             })
[13:17:36.487]         }
[13:17:36.487]     }, args = future.call.arguments)
[13:17:36.487] }
[13:17:36.487] Lazy evaluation: FALSE
[13:17:36.487] Asynchronous evaluation: TRUE
[13:17:36.487] Local evaluation: TRUE
[13:17:36.487] Environment: R_GlobalEnv
[13:17:36.487] Capture standard output: TRUE
[13:17:36.487] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:36.487] Globals: 5 objects totaling 305.24 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 303.78 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:36.487] Packages: <none>
[13:17:36.487] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:36.487] Resolved: TRUE
[13:17:36.487] Value: <not collected>
[13:17:36.487] Conditions captured: <none>
[13:17:36.487] Early signaling: FALSE
[13:17:36.487] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:36.487] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:36.495] Chunk #1 of 1 ... DONE
[13:17:36.496] Launching 1 futures (chunks) ... DONE
[13:17:36.496] Resolving 1 futures (chunks) ...
[13:17:36.497]  - Number of value chunks collected: 1
[13:17:36.498] Resolving 1 futures (chunks) ... DONE
[13:17:36.498] Reducing values from 1 chunks ...
[13:17:36.498]  - Number of values collected after concatenation: 1
[13:17:36.498]  - Number of values expected: 1
[13:17:36.498] Reducing values from 1 chunks ... DONE
[13:17:36.498] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[13:17:36.501] future_lapply() ...
[13:17:36.506] Number of chunks: 2
[13:17:36.506] getGlobalsAndPackagesXApply() ...
[13:17:36.506]  - future.globals: TRUE
[13:17:36.508]  - globals found/used: [n=1] ‘FUN’
[13:17:36.508]  - needed namespaces: [n=0] 
[13:17:36.508] Finding globals ... DONE
[13:17:36.508]  - use_args: TRUE
[13:17:36.508]  - Getting '...' globals ...
[13:17:36.509]    - '...' content: [n=0] 
[13:17:36.509] List of 1
[13:17:36.509]  $ ...: list()
[13:17:36.509]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.509]  - attr(*, "where")=List of 1
[13:17:36.509]   ..$ ...:<environment: 0x55fba6793378> 
[13:17:36.509]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.509]  - attr(*, "resolved")= logi TRUE
[13:17:36.509]  - attr(*, "total_size")= num NA
[13:17:36.512]  - Getting '...' globals ... DONE
[13:17:36.512] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:17:36.513] List of 2
[13:17:36.513]  $ ...future.FUN:function (f)  
[13:17:36.513]  $ ...          : list()
[13:17:36.513]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.513]  - attr(*, "where")=List of 2
[13:17:36.513]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:36.513]   ..$ ...          :<environment: 0x55fba6793378> 
[13:17:36.513]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.513]  - attr(*, "resolved")= logi FALSE
[13:17:36.513]  - attr(*, "total_size")= num 1008
[13:17:36.516] Packages to be attached in all futures: [n=0] 
[13:17:36.516] getGlobalsAndPackagesXApply() ... DONE
[13:17:36.516] Number of futures (= number of chunks): 2
[13:17:36.516] Launching 2 futures (chunks) ...
[13:17:36.516] Chunk #1 of 2 ...
[13:17:36.516]  - Finding globals in 'X' for chunk #1 ...
[13:17:36.518]    + additional globals found: [n=2] ‘a’, ‘b’
[13:17:36.518]    + additional namespaces needed: [n=0] 
[13:17:36.519]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:36.519]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:17:36.519]  - seeds: <none>
[13:17:36.527] Created future:
[13:17:36.527] MulticoreFuture:
[13:17:36.527] Label: ‘future_lapply-1’
[13:17:36.527] Expression:
[13:17:36.527] {
[13:17:36.527]     do.call(function(...) {
[13:17:36.527]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:36.527]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:36.527]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:36.527]             on.exit(options(oopts), add = TRUE)
[13:17:36.527]         }
[13:17:36.527]         {
[13:17:36.527]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:36.527]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:36.527]                 ...future.FUN(...future.X_jj, ...)
[13:17:36.527]             })
[13:17:36.527]         }
[13:17:36.527]     }, args = future.call.arguments)
[13:17:36.527] }
[13:17:36.527] Lazy evaluation: FALSE
[13:17:36.527] Asynchronous evaluation: TRUE
[13:17:36.527] Local evaluation: TRUE
[13:17:36.527] Environment: R_GlobalEnv
[13:17:36.527] Capture standard output: TRUE
[13:17:36.527] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:36.527] Globals: 7 objects totaling 3.48 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[13:17:36.527] Packages: <none>
[13:17:36.527] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:36.527] Resolved: TRUE
[13:17:36.527] Value: <not collected>
[13:17:36.527] Conditions captured: <none>
[13:17:36.527] Early signaling: FALSE
[13:17:36.527] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:36.527] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:36.536] Chunk #1 of 2 ... DONE
[13:17:36.536] Chunk #2 of 2 ...
[13:17:36.536]  - Finding globals in 'X' for chunk #2 ...
[13:17:36.540]    + additional globals found: [n=2] ‘a’, ‘b’
[13:17:36.540]    + additional namespaces needed: [n=1] ‘tools’
[13:17:36.540]  - Finding globals in 'X' for chunk #2 ... DONE
[13:17:36.540]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:17:36.540]  - seeds: <none>
[13:17:36.550] Created future:
[13:17:36.550] MulticoreFuture:
[13:17:36.550] Label: ‘future_lapply-2’
[13:17:36.550] Expression:
[13:17:36.550] {
[13:17:36.550]     do.call(function(...) {
[13:17:36.550]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:36.550]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:36.550]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:36.550]             on.exit(options(oopts), add = TRUE)
[13:17:36.550]         }
[13:17:36.550]         {
[13:17:36.550]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:36.550]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:36.550]                 ...future.FUN(...future.X_jj, ...)
[13:17:36.550]             })
[13:17:36.550]         }
[13:17:36.550]     }, args = future.call.arguments)
[13:17:36.550] }
[13:17:36.550] Lazy evaluation: FALSE
[13:17:36.550] Asynchronous evaluation: TRUE
[13:17:36.550] Local evaluation: TRUE
[13:17:36.550] Environment: R_GlobalEnv
[13:17:36.550] Capture standard output: TRUE
[13:17:36.550] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:36.550] Globals: 7 objects totaling 5.11 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.02 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[13:17:36.550] Packages: 1 packages (‘tools’)
[13:17:36.550] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:36.550] Resolved: TRUE
[13:17:36.550] Value: <not collected>
[13:17:36.550] Conditions captured: <none>
[13:17:36.550] Early signaling: FALSE
[13:17:36.550] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:36.550] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:36.559] Chunk #2 of 2 ... DONE
[13:17:36.559] Launching 2 futures (chunks) ... DONE
[13:17:36.560] Resolving 2 futures (chunks) ...
[13:17:36.563]  - Number of value chunks collected: 2
[13:17:36.563] Resolving 2 futures (chunks) ... DONE
[13:17:36.566] Reducing values from 2 chunks ...
[13:17:36.566]  - Number of values collected after concatenation: 4
[13:17:36.566]  - Number of values expected: 4
[13:17:36.566] Reducing values from 2 chunks ... DONE
[13:17:36.566] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[13:17:36.570] future_lapply() ...
[13:17:36.574] Number of chunks: 1
[13:17:36.574] getGlobalsAndPackagesXApply() ...
[13:17:36.575]  - future.globals: TRUE
[13:17:36.577]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[13:17:36.577]  - needed namespaces: [n=0] 
[13:17:36.577] Finding globals ... DONE
[13:17:36.578]  - use_args: TRUE
[13:17:36.578]  - Getting '...' globals ...
[13:17:36.578]    - '...' content: [n=0] 
[13:17:36.578] List of 1
[13:17:36.578]  $ ...: list()
[13:17:36.578]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.578]  - attr(*, "where")=List of 1
[13:17:36.578]   ..$ ...:<environment: 0x55fba75e2118> 
[13:17:36.578]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.578]  - attr(*, "resolved")= logi TRUE
[13:17:36.578]  - attr(*, "total_size")= num NA
[13:17:36.581]  - Getting '...' globals ... DONE
[13:17:36.581] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[13:17:36.581] List of 3
[13:17:36.581]  $ ...future.FUN        :function (x)  
[13:17:36.581]  $ future.call.arguments:List of 1
[13:17:36.581]   ..$ a: num 1
[13:17:36.581]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.581]  $ ...                  : list()
[13:17:36.581]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.581]  - attr(*, "where")=List of 3
[13:17:36.581]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[13:17:36.581]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[13:17:36.581]   ..$ ...                  :<environment: 0x55fba75e2118> 
[13:17:36.581]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.581]  - attr(*, "resolved")= logi FALSE
[13:17:36.581]  - attr(*, "total_size")= num 1272
[13:17:36.586] Packages to be attached in all futures: [n=0] 
[13:17:36.586] getGlobalsAndPackagesXApply() ... DONE
[13:17:36.586] Number of futures (= number of chunks): 1
[13:17:36.586] Launching 1 futures (chunks) ...
[13:17:36.586] Chunk #1 of 1 ...
[13:17:36.587]  - Finding globals in 'X' for chunk #1 ...
[13:17:36.587]    + additional globals found: [n=0] 
[13:17:36.587]    + additional namespaces needed: [n=0] 
[13:17:36.587]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:36.587]  - seeds: <none>
[13:17:36.595] Created future:
[13:17:36.595] MulticoreFuture:
[13:17:36.595] Label: ‘future_lapply-1’
[13:17:36.595] Expression:
[13:17:36.595] {
[13:17:36.595]     do.call(function(...) {
[13:17:36.595]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:36.595]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:36.595]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:36.595]             on.exit(options(oopts), add = TRUE)
[13:17:36.595]         }
[13:17:36.595]         {
[13:17:36.595]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:36.595]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:36.595]                 ...future.FUN(...future.X_jj)
[13:17:36.595]             })
[13:17:36.595]         }
[13:17:36.595]     }, args = future.call.arguments)
[13:17:36.595] }
[13:17:36.595] Lazy evaluation: FALSE
[13:17:36.595] Asynchronous evaluation: TRUE
[13:17:36.595] Local evaluation: TRUE
[13:17:36.595] Environment: 0x55fba75e5bc8
[13:17:36.595] Capture standard output: TRUE
[13:17:36.595] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:36.595] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:36.595] Packages: <none>
[13:17:36.595] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:36.595] Resolved: TRUE
[13:17:36.595] Value: <not collected>
[13:17:36.595] Conditions captured: <none>
[13:17:36.595] Early signaling: FALSE
[13:17:36.595] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:36.595] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:36.603] Chunk #1 of 1 ... DONE
[13:17:36.603] Launching 1 futures (chunks) ... DONE
[13:17:36.603] Resolving 1 futures (chunks) ...
[13:17:36.605]  - Number of value chunks collected: 1
[13:17:36.605] Resolving 1 futures (chunks) ... DONE
[13:17:36.605] Reducing values from 1 chunks ...
[13:17:36.605]  - Number of values collected after concatenation: 1
[13:17:36.605]  - Number of values expected: 1
[13:17:36.606] Reducing values from 1 chunks ... DONE
[13:17:36.606] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[13:17:36.607] future_lapply() ...
[13:17:36.612] Number of chunks: 1
[13:17:36.612] getGlobalsAndPackagesXApply() ...
[13:17:36.613]  - future.globals: TRUE
[13:17:36.615]  - globals found/used: [n=2] ‘FUN’, ‘a’
[13:17:36.615]  - needed namespaces: [n=0] 
[13:17:36.616] Finding globals ... DONE
[13:17:36.616]  - use_args: TRUE
[13:17:36.616]  - Getting '...' globals ...
[13:17:36.616]    - '...' content: [n=0] 
[13:17:36.616] List of 1
[13:17:36.616]  $ ...: list()
[13:17:36.616]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.616]  - attr(*, "where")=List of 1
[13:17:36.616]   ..$ ...:<environment: 0x55fba570e7d8> 
[13:17:36.616]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.616]  - attr(*, "resolved")= logi TRUE
[13:17:36.616]  - attr(*, "total_size")= num NA
[13:17:36.619]  - Getting '...' globals ... DONE
[13:17:36.619] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[13:17:36.620] List of 3
[13:17:36.620]  $ ...future.FUN:function (ii)  
[13:17:36.620]  $ a            : num 1
[13:17:36.620]  $ ...          : list()
[13:17:36.620]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.620]  - attr(*, "where")=List of 3
[13:17:36.620]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:36.620]   ..$ a            :<environment: R_EmptyEnv> 
[13:17:36.620]   ..$ ...          :<environment: 0x55fba570e7d8> 
[13:17:36.620]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.620]  - attr(*, "resolved")= logi FALSE
[13:17:36.620]  - attr(*, "total_size")= num 2984
[13:17:36.623] Packages to be attached in all futures: [n=0] 
[13:17:36.623] getGlobalsAndPackagesXApply() ... DONE
[13:17:36.624] Number of futures (= number of chunks): 1
[13:17:36.624] Launching 1 futures (chunks) ...
[13:17:36.624] Chunk #1 of 1 ...
[13:17:36.624]  - Finding globals in 'X' for chunk #1 ...
[13:17:36.624]    + additional globals found: [n=0] 
[13:17:36.625]    + additional namespaces needed: [n=0] 
[13:17:36.625]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:36.625]  - seeds: <none>
[13:17:36.632] Created future:
[13:17:36.633] MulticoreFuture:
[13:17:36.633] Label: ‘future_lapply-1’
[13:17:36.633] Expression:
[13:17:36.633] {
[13:17:36.633]     do.call(function(...) {
[13:17:36.633]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:36.633]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:36.633]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:36.633]             on.exit(options(oopts), add = TRUE)
[13:17:36.633]         }
[13:17:36.633]         {
[13:17:36.633]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:36.633]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:36.633]                 ...future.FUN(...future.X_jj, ...)
[13:17:36.633]             })
[13:17:36.633]         }
[13:17:36.633]     }, args = future.call.arguments)
[13:17:36.633] }
[13:17:36.633] Lazy evaluation: FALSE
[13:17:36.633] Asynchronous evaluation: TRUE
[13:17:36.633] Local evaluation: TRUE
[13:17:36.633] Environment: R_GlobalEnv
[13:17:36.633] Capture standard output: TRUE
[13:17:36.633] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:36.633] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[13:17:36.633] Packages: <none>
[13:17:36.633] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:36.633] Resolved: TRUE
[13:17:36.633] Value: <not collected>
[13:17:36.633] Conditions captured: <none>
[13:17:36.633] Early signaling: FALSE
[13:17:36.633] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:36.633] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:36.641] Chunk #1 of 1 ... DONE
[13:17:36.641] Launching 1 futures (chunks) ... DONE
[13:17:36.641] Resolving 1 futures (chunks) ...
[13:17:36.643]  - Number of value chunks collected: 1
[13:17:36.643] Resolving 1 futures (chunks) ... DONE
[13:17:36.643] Reducing values from 1 chunks ...
[13:17:36.643]  - Number of values collected after concatenation: 1
[13:17:36.643]  - Number of values expected: 1
[13:17:36.643] Reducing values from 1 chunks ... DONE
[13:17:36.643] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[13:17:36.644] future_lapply() ...
[13:17:36.648] Number of chunks: 1
[13:17:36.649] getGlobalsAndPackagesXApply() ...
[13:17:36.649]  - future.globals: TRUE
[13:17:36.656]  - globals found/used: [n=2] ‘FUN’, ‘a’
[13:17:36.656]  - needed namespaces: [n=0] 
[13:17:36.656] Finding globals ... DONE
[13:17:36.656]  - use_args: TRUE
[13:17:36.656]  - Getting '...' globals ...
[13:17:36.657]    - '...' content: [n=0] 
[13:17:36.657] List of 1
[13:17:36.657]  $ ...: list()
[13:17:36.657]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.657]  - attr(*, "where")=List of 1
[13:17:36.657]   ..$ ...:<environment: 0x55fba8612b48> 
[13:17:36.657]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.657]  - attr(*, "resolved")= logi TRUE
[13:17:36.657]  - attr(*, "total_size")= num NA
[13:17:36.661]  - Getting '...' globals ... DONE
[13:17:36.662] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[13:17:36.662] List of 3
[13:17:36.662]  $ ...future.FUN:function (ii)  
[13:17:36.662]  $ a            : num 1
[13:17:36.662]  $ ...          : list()
[13:17:36.662]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.662]  - attr(*, "where")=List of 3
[13:17:36.662]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:36.662]   ..$ a            :<environment: R_EmptyEnv> 
[13:17:36.662]   ..$ ...          :<environment: 0x55fba8612b48> 
[13:17:36.662]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.662]  - attr(*, "resolved")= logi FALSE
[13:17:36.662]  - attr(*, "total_size")= num 2984
[13:17:36.667] Packages to be attached in all futures: [n=0] 
[13:17:36.667] getGlobalsAndPackagesXApply() ... DONE
[13:17:36.667] Number of futures (= number of chunks): 1
[13:17:36.668] Launching 1 futures (chunks) ...
[13:17:36.668] Chunk #1 of 1 ...
[13:17:36.668]  - Finding globals in 'X' for chunk #1 ...
[13:17:36.668]    + additional globals found: [n=0] 
[13:17:36.669]    + additional namespaces needed: [n=0] 
[13:17:36.669]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:36.669]  - seeds: <none>
[13:17:36.678] Created future:
[13:17:36.679] MulticoreFuture:
[13:17:36.679] Label: ‘future_lapply-1’
[13:17:36.679] Expression:
[13:17:36.679] {
[13:17:36.679]     do.call(function(...) {
[13:17:36.679]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:36.679]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:36.679]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:36.679]             on.exit(options(oopts), add = TRUE)
[13:17:36.679]         }
[13:17:36.679]         {
[13:17:36.679]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:36.679]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:36.679]                 ...future.FUN(...future.X_jj, ...)
[13:17:36.679]             })
[13:17:36.679]         }
[13:17:36.679]     }, args = future.call.arguments)
[13:17:36.679] }
[13:17:36.679] Lazy evaluation: FALSE
[13:17:36.679] Asynchronous evaluation: TRUE
[13:17:36.679] Local evaluation: TRUE
[13:17:36.679] Environment: R_GlobalEnv
[13:17:36.679] Capture standard output: TRUE
[13:17:36.679] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:36.679] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[13:17:36.679] Packages: <none>
[13:17:36.679] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:36.679] Resolved: TRUE
[13:17:36.679] Value: <not collected>
[13:17:36.679] Conditions captured: <none>
[13:17:36.679] Early signaling: FALSE
[13:17:36.679] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:36.679] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:36.687] Chunk #1 of 1 ... DONE
[13:17:36.687] Launching 1 futures (chunks) ... DONE
[13:17:36.687] Resolving 1 futures (chunks) ...
[13:17:36.689]  - Number of value chunks collected: 1
[13:17:36.690] Resolving 1 futures (chunks) ... DONE
[13:17:36.690] Reducing values from 1 chunks ...
[13:17:36.690]  - Number of values collected after concatenation: 1
[13:17:36.690]  - Number of values expected: 1
[13:17:36.690] Reducing values from 1 chunks ... DONE
[13:17:36.691] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[13:17:36.691] future_lapply() ...
[13:17:36.696] Number of chunks: 1
[13:17:36.696] getGlobalsAndPackagesXApply() ...
[13:17:36.696]  - future.globals: <name-value list> with names ‘42’
[13:17:36.697]  - use_args: TRUE
[13:17:36.697]  - Getting '...' globals ...
[13:17:36.698]    - '...' content: [n=0] 
[13:17:36.698] List of 1
[13:17:36.698]  $ ...: list()
[13:17:36.698]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.698]  - attr(*, "where")=List of 1
[13:17:36.698]   ..$ ...:<environment: 0x55fba6acd060> 
[13:17:36.698]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.698]  - attr(*, "resolved")= logi TRUE
[13:17:36.698]  - attr(*, "total_size")= num NA
[13:17:36.702]  - Getting '...' globals ... DONE
[13:17:36.703] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[13:17:36.703] List of 3
[13:17:36.703]  $ a            : num 42
[13:17:36.703]  $ ...future.FUN:function (x)  
[13:17:36.703]  $ ...          : list()
[13:17:36.703]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:36.703]  - attr(*, "where")=List of 3
[13:17:36.703]   ..$ a            :<environment: R_EmptyEnv> 
[13:17:36.703]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[13:17:36.703]   ..$ ...          :<environment: 0x55fba6acd060> 
[13:17:36.703]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:36.703]  - attr(*, "resolved")= logi FALSE
[13:17:36.703]  - attr(*, "total_size")= num NA
[13:17:36.708] Packages to be attached in all futures: [n=0] 
[13:17:36.708] getGlobalsAndPackagesXApply() ... DONE
[13:17:36.708] Number of futures (= number of chunks): 1
[13:17:36.708] Launching 1 futures (chunks) ...
[13:17:36.708] Chunk #1 of 1 ...
[13:17:36.708]  - seeds: <none>
[13:17:36.717] Created future:
[13:17:36.717] MulticoreFuture:
[13:17:36.717] Label: ‘future_lapply-1’
[13:17:36.717] Expression:
[13:17:36.717] {
[13:17:36.717]     do.call(function(...) {
[13:17:36.717]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:36.717]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:36.717]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:36.717]             on.exit(options(oopts), add = TRUE)
[13:17:36.717]         }
[13:17:36.717]         {
[13:17:36.717]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:36.717]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:36.717]                 ...future.FUN(...future.X_jj, ...)
[13:17:36.717]             })
[13:17:36.717]         }
[13:17:36.717]     }, args = future.call.arguments)
[13:17:36.717] }
[13:17:36.717] Lazy evaluation: FALSE
[13:17:36.717] Asynchronous evaluation: TRUE
[13:17:36.717] Local evaluation: TRUE
[13:17:36.717] Environment: R_GlobalEnv
[13:17:36.717] Capture standard output: TRUE
[13:17:36.717] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:36.717] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[13:17:36.717] Packages: <none>
[13:17:36.717] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:36.717] Resolved: TRUE
[13:17:36.717] Value: <not collected>
[13:17:36.717] Conditions captured: <none>
[13:17:36.717] Early signaling: FALSE
[13:17:36.717] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:36.717] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:36.726] Chunk #1 of 1 ... DONE
[13:17:36.726] Launching 1 futures (chunks) ... DONE
[13:17:36.726] Resolving 1 futures (chunks) ...
[13:17:36.728]  - Number of value chunks collected: 1
[13:17:36.728] Resolving 1 futures (chunks) ... DONE
[13:17:36.728] Reducing values from 1 chunks ...
[13:17:36.728]  - Number of values collected after concatenation: 1
[13:17:36.728]  - Number of values expected: 1
[13:17:36.728] Reducing values from 1 chunks ... DONE
[13:17:36.728] future_lapply() ... DONE
List of 1
 $ : num 42
[13:17:37.114] future_lapply() ...
[13:17:37.118] Number of chunks: 2
[13:17:37.119] getGlobalsAndPackagesXApply() ...
[13:17:37.119]  - future.globals: TRUE
[13:17:37.136]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[13:17:37.136]  - needed namespaces: [n=0] 
[13:17:37.136] Finding globals ... DONE
[13:17:37.136]  - use_args: TRUE
[13:17:37.136]  - Getting '...' globals ...
[13:17:37.137]    - '...' content: [n=0] 
[13:17:37.137] List of 1
[13:17:37.137]  $ ...: list()
[13:17:37.137]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:37.137]  - attr(*, "where")=List of 1
[13:17:37.137]   ..$ ...:<environment: 0x55fba84b2350> 
[13:17:37.137]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:37.137]  - attr(*, "resolved")= logi TRUE
[13:17:37.137]  - attr(*, "total_size")= num NA
[13:17:37.140]  - Getting '...' globals ... DONE
[13:17:37.140] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[13:17:37.140] List of 6
[13:17:37.140]  $ ...future.FUN:function (i)  
[13:17:37.140]  $ caller       :function (a, b, FUN = call_my_add)  
[13:17:37.140]  $ args         :List of 1
[13:17:37.140]   ..$ FUN:function (a, b)  
[13:17:37.140]  $ call_my_add  :function (a, b)  
[13:17:37.140]  $ my_add       :function (a, b)  
[13:17:37.140]  $ ...          : list()
[13:17:37.140]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:37.140]  - attr(*, "where")=List of 6
[13:17:37.140]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:37.140]   ..$ caller       :<environment: R_EmptyEnv> 
[13:17:37.140]   ..$ args         :<environment: R_EmptyEnv> 
[13:17:37.140]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[13:17:37.140]   ..$ my_add       :<environment: R_EmptyEnv> 
[13:17:37.140]   ..$ ...          :<environment: 0x55fba84b2350> 
[13:17:37.140]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:37.140]  - attr(*, "resolved")= logi FALSE
[13:17:37.140]  - attr(*, "total_size")= num 24120
[13:17:37.145] Packages to be attached in all futures: [n=0] 
[13:17:37.145] getGlobalsAndPackagesXApply() ... DONE
[13:17:37.145] Number of futures (= number of chunks): 2
[13:17:37.145] Launching 2 futures (chunks) ...
[13:17:37.145] Chunk #1 of 2 ...
[13:17:37.145]  - Finding globals in 'X' for chunk #1 ...
[13:17:37.146]    + additional globals found: [n=0] 
[13:17:37.146]    + additional namespaces needed: [n=0] 
[13:17:37.146]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:37.146]  - seeds: <none>
[13:17:37.208] Created future:
[13:17:37.208] MultisessionFuture:
[13:17:37.208] Label: ‘future_lapply-1’
[13:17:37.208] Expression:
[13:17:37.208] {
[13:17:37.208]     do.call(function(...) {
[13:17:37.208]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:37.208]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:37.208]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:37.208]             on.exit(options(oopts), add = TRUE)
[13:17:37.208]         }
[13:17:37.208]         {
[13:17:37.208]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:37.208]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:37.208]                 ...future.FUN(...future.X_jj, ...)
[13:17:37.208]             })
[13:17:37.208]         }
[13:17:37.208]     }, args = future.call.arguments)
[13:17:37.208] }
[13:17:37.208] Lazy evaluation: FALSE
[13:17:37.208] Asynchronous evaluation: TRUE
[13:17:37.208] Local evaluation: TRUE
[13:17:37.208] Environment: 0x55fba84b2778
[13:17:37.208] Capture standard output: TRUE
[13:17:37.208] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:37.208] Globals: 9 objects totaling 23.61 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[13:17:37.208] Packages: <none>
[13:17:37.208] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:37.208] Resolved: FALSE
[13:17:37.208] Value: <not collected>
[13:17:37.208] Conditions captured: <none>
[13:17:37.208] Early signaling: FALSE
[13:17:37.208] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:37.208] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:37.220] Chunk #1 of 2 ... DONE
[13:17:37.220] Chunk #2 of 2 ...
[13:17:37.220]  - Finding globals in 'X' for chunk #2 ...
[13:17:37.221]    + additional globals found: [n=0] 
[13:17:37.221]    + additional namespaces needed: [n=0] 
[13:17:37.221]  - Finding globals in 'X' for chunk #2 ... DONE
[13:17:37.221]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:17:37.221]  - seeds: <none>
[13:17:37.311] Created future:
[13:17:37.311] MultisessionFuture:
[13:17:37.311] Label: ‘future_lapply-2’
[13:17:37.311] Expression:
[13:17:37.311] {
[13:17:37.311]     do.call(function(...) {
[13:17:37.311]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:37.311]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:37.311]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:37.311]             on.exit(options(oopts), add = TRUE)
[13:17:37.311]         }
[13:17:37.311]         {
[13:17:37.311]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:37.311]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:37.311]                 ...future.FUN(...future.X_jj, ...)
[13:17:37.311]             })
[13:17:37.311]         }
[13:17:37.311]     }, args = future.call.arguments)
[13:17:37.311] }
[13:17:37.311] Lazy evaluation: FALSE
[13:17:37.311] Asynchronous evaluation: TRUE
[13:17:37.311] Local evaluation: TRUE
[13:17:37.311] Environment: 0x55fba84b2778
[13:17:37.311] Capture standard output: TRUE
[13:17:37.311] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:37.311] Globals: 9 objects totaling 23.66 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[13:17:37.311] Packages: <none>
[13:17:37.311] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:37.311] Resolved: FALSE
[13:17:37.311] Value: <not collected>
[13:17:37.311] Conditions captured: <none>
[13:17:37.311] Early signaling: FALSE
[13:17:37.311] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:37.311] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:37.323] Chunk #2 of 2 ... DONE
[13:17:37.323] Launching 2 futures (chunks) ... DONE
[13:17:37.323] Resolving 2 futures (chunks) ...
[13:17:37.388]  - Number of value chunks collected: 2
[13:17:37.388] Resolving 2 futures (chunks) ... DONE
[13:17:37.388] Reducing values from 2 chunks ...
[13:17:37.388]  - Number of values collected after concatenation: 3
[13:17:37.389]  - Number of values expected: 3
[13:17:37.389] Reducing values from 2 chunks ... DONE
[13:17:37.389] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[13:17:37.389] future_lapply() ...
[13:17:37.394] Number of chunks: 1
[13:17:37.394] getGlobalsAndPackagesXApply() ...
[13:17:37.394]  - future.globals: TRUE
[13:17:37.397]  - globals found/used: [n=1] ‘FUN’
[13:17:37.397]  - needed namespaces: [n=0] 
[13:17:37.397] Finding globals ... DONE
[13:17:37.397]  - use_args: TRUE
[13:17:37.397]  - Getting '...' globals ...
[13:17:37.398]    - '...' content: [n=1] ‘what’
[13:17:37.398] List of 1
[13:17:37.398]  $ ...:List of 1
[13:17:37.398]   ..$ what:function (x)  
[13:17:37.398]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:37.398]  - attr(*, "where")=List of 1
[13:17:37.398]   ..$ ...:<environment: 0x55fba82dfc58> 
[13:17:37.398]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:37.398]  - attr(*, "resolved")= logi TRUE
[13:17:37.398]  - attr(*, "total_size")= num NA
[13:17:37.401]  - Getting '...' globals ... DONE
[13:17:37.401] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:17:37.401] List of 2
[13:17:37.401]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[13:17:37.401]  $ ...          :List of 1
[13:17:37.401]   ..$ what:function (x)  
[13:17:37.401]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:37.401]  - attr(*, "where")=List of 2
[13:17:37.401]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:37.401]   ..$ ...          :<environment: 0x55fba82dfc58> 
[13:17:37.401]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:37.401]  - attr(*, "resolved")= logi FALSE
[13:17:37.401]  - attr(*, "total_size")= num 12192
[13:17:37.404] Packages to be attached in all futures: [n=0] 
[13:17:37.404] getGlobalsAndPackagesXApply() ... DONE
[13:17:37.404] Number of futures (= number of chunks): 1
[13:17:37.404] Launching 1 futures (chunks) ...
[13:17:37.404] Chunk #1 of 1 ...
[13:17:37.405]  - Finding globals in 'X' for chunk #1 ...
[13:17:37.405]    + additional globals found: [n=0] 
[13:17:37.405]    + additional namespaces needed: [n=0] 
[13:17:37.405]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:37.405]  - seeds: <none>
[13:17:37.430] Created future:
[13:17:37.430] MultisessionFuture:
[13:17:37.430] Label: ‘future_lapply-1’
[13:17:37.430] Expression:
[13:17:37.430] {
[13:17:37.430]     do.call(function(...) {
[13:17:37.430]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:37.430]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:37.430]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:37.430]             on.exit(options(oopts), add = TRUE)
[13:17:37.430]         }
[13:17:37.430]         {
[13:17:37.430]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:37.430]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:37.430]                 ...future.FUN(...future.X_jj, ...)
[13:17:37.430]             })
[13:17:37.430]         }
[13:17:37.430]     }, args = future.call.arguments)
[13:17:37.430] }
[13:17:37.430] Lazy evaluation: FALSE
[13:17:37.430] Asynchronous evaluation: TRUE
[13:17:37.430] Local evaluation: TRUE
[13:17:37.430] Environment: R_GlobalEnv
[13:17:37.430] Capture standard output: TRUE
[13:17:37.430] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:37.430] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:37.430] Packages: <none>
[13:17:37.430] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:37.430] Resolved: FALSE
[13:17:37.430] Value: <not collected>
[13:17:37.430] Conditions captured: <none>
[13:17:37.430] Early signaling: FALSE
[13:17:37.430] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:37.430] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:37.442] Chunk #1 of 1 ... DONE
[13:17:37.442] Launching 1 futures (chunks) ... DONE
[13:17:37.442] Resolving 1 futures (chunks) ...
[13:17:37.484]  - Number of value chunks collected: 1
[13:17:37.484] Resolving 1 futures (chunks) ... DONE
[13:17:37.485] Reducing values from 1 chunks ...
[13:17:37.485]  - Number of values collected after concatenation: 1
[13:17:37.485]  - Number of values expected: 1
[13:17:37.485] Reducing values from 1 chunks ... DONE
[13:17:37.485] future_lapply() ... DONE
[13:17:37.485] future_lapply() ...
[13:17:37.490] Number of chunks: 1
[13:17:37.490] getGlobalsAndPackagesXApply() ...
[13:17:37.490]  - future.globals: TRUE
[13:17:37.492]  - globals found/used: [n=1] ‘FUN’
[13:17:37.493]  - needed namespaces: [n=0] 
[13:17:37.493] Finding globals ... DONE
[13:17:37.493]  - use_args: TRUE
[13:17:37.493]  - Getting '...' globals ...
[13:17:37.493]    - '...' content: [n=1] ‘what’
[13:17:37.493] List of 1
[13:17:37.493]  $ ...:List of 1
[13:17:37.493]   ..$ what:function (...)  
[13:17:37.493]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:37.493]  - attr(*, "where")=List of 1
[13:17:37.493]   ..$ ...:<environment: 0x55fba72c8090> 
[13:17:37.493]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:37.493]  - attr(*, "resolved")= logi TRUE
[13:17:37.493]  - attr(*, "total_size")= num NA
[13:17:37.496]  - Getting '...' globals ... DONE
[13:17:37.496] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:17:37.496] List of 2
[13:17:37.496]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[13:17:37.496]  $ ...          :List of 1
[13:17:37.496]   ..$ what:function (...)  
[13:17:37.496]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:37.496]  - attr(*, "where")=List of 2
[13:17:37.496]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:37.496]   ..$ ...          :<environment: 0x55fba72c8090> 
[13:17:37.496]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:37.496]  - attr(*, "resolved")= logi FALSE
[13:17:37.496]  - attr(*, "total_size")= num 13352
[13:17:37.499] Packages to be attached in all futures: [n=0] 
[13:17:37.499] getGlobalsAndPackagesXApply() ... DONE
[13:17:37.500] Number of futures (= number of chunks): 1
[13:17:37.500] Launching 1 futures (chunks) ...
[13:17:37.500] Chunk #1 of 1 ...
[13:17:37.500]  - Finding globals in 'X' for chunk #1 ...
[13:17:37.500]    + additional globals found: [n=0] 
[13:17:37.500]    + additional namespaces needed: [n=0] 
[13:17:37.500]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:37.501]  - seeds: <none>
[13:17:37.519] Created future:
[13:17:37.520] MultisessionFuture:
[13:17:37.520] Label: ‘future_lapply-1’
[13:17:37.520] Expression:
[13:17:37.520] {
[13:17:37.520]     do.call(function(...) {
[13:17:37.520]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:37.520]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:37.520]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:37.520]             on.exit(options(oopts), add = TRUE)
[13:17:37.520]         }
[13:17:37.520]         {
[13:17:37.520]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:37.520]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:37.520]                 ...future.FUN(...future.X_jj, ...)
[13:17:37.520]             })
[13:17:37.520]         }
[13:17:37.520]     }, args = future.call.arguments)
[13:17:37.520] }
[13:17:37.520] Lazy evaluation: FALSE
[13:17:37.520] Asynchronous evaluation: TRUE
[13:17:37.520] Local evaluation: TRUE
[13:17:37.520] Environment: R_GlobalEnv
[13:17:37.520] Capture standard output: TRUE
[13:17:37.520] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:37.520] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:37.520] Packages: <none>
[13:17:37.520] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:37.520] Resolved: FALSE
[13:17:37.520] Value: <not collected>
[13:17:37.520] Conditions captured: <none>
[13:17:37.520] Early signaling: FALSE
[13:17:37.520] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:37.520] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:37.531] Chunk #1 of 1 ... DONE
[13:17:37.531] Launching 1 futures (chunks) ... DONE
[13:17:37.531] Resolving 1 futures (chunks) ...
[13:17:37.574]  - Number of value chunks collected: 1
[13:17:37.574] Resolving 1 futures (chunks) ... DONE
[13:17:37.574] Reducing values from 1 chunks ...
[13:17:37.574]  - Number of values collected after concatenation: 1
[13:17:37.574]  - Number of values expected: 1
[13:17:37.574] Reducing values from 1 chunks ... DONE
[13:17:37.574] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[13:17:37.575] future_lapply() ...
[13:17:37.579] Number of chunks: 1
[13:17:37.579] getGlobalsAndPackagesXApply() ...
[13:17:37.579]  - future.globals: TRUE
[13:17:37.580]  - globals found/used: [n=1] ‘FUN’
[13:17:37.581]  - needed namespaces: [n=0] 
[13:17:37.581] Finding globals ... DONE
[13:17:37.581]  - use_args: TRUE
[13:17:37.581]  - Getting '...' globals ...
[13:17:37.581]    - '...' content: [n=1] ‘b’
[13:17:37.581] List of 1
[13:17:37.581]  $ ...:List of 1
[13:17:37.581]   ..$ b:'data.frame':	2 obs. of  1 variable:
[13:17:37.581]   .. ..$ a: int [1:2] 1 2
[13:17:37.581]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:37.581]  - attr(*, "where")=List of 1
[13:17:37.581]   ..$ ...:<environment: 0x55fba7103190> 
[13:17:37.581]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:37.581]  - attr(*, "resolved")= logi TRUE
[13:17:37.581]  - attr(*, "total_size")= num NA
[13:17:37.585]  - Getting '...' globals ... DONE
[13:17:37.585] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:17:37.585] List of 2
[13:17:37.585]  $ ...future.FUN:function (a, b)  
[13:17:37.585]  $ ...          :List of 1
[13:17:37.585]   ..$ b:'data.frame':	2 obs. of  1 variable:
[13:17:37.585]   .. ..$ a: int [1:2] 1 2
[13:17:37.585]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:37.585]  - attr(*, "where")=List of 2
[13:17:37.585]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:37.585]   ..$ ...          :<environment: 0x55fba7103190> 
[13:17:37.585]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:37.585]  - attr(*, "resolved")= logi FALSE
[13:17:37.585]  - attr(*, "total_size")= num 1440
[13:17:37.588] Packages to be attached in all futures: [n=0] 
[13:17:37.588] getGlobalsAndPackagesXApply() ... DONE
[13:17:37.589] Number of futures (= number of chunks): 1
[13:17:37.589] Launching 1 futures (chunks) ...
[13:17:37.589] Chunk #1 of 1 ...
[13:17:37.589]  - Finding globals in 'X' for chunk #1 ...
[13:17:37.589]    + additional globals found: [n=0] 
[13:17:37.589]    + additional namespaces needed: [n=0] 
[13:17:37.590]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:37.590]  - seeds: <none>
[13:17:37.607] Created future:
[13:17:37.607] MultisessionFuture:
[13:17:37.607] Label: ‘future_lapply-1’
[13:17:37.607] Expression:
[13:17:37.607] {
[13:17:37.607]     do.call(function(...) {
[13:17:37.607]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:37.607]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:37.607]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:37.607]             on.exit(options(oopts), add = TRUE)
[13:17:37.607]         }
[13:17:37.607]         {
[13:17:37.607]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:37.607]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:37.607]                 ...future.FUN(...future.X_jj, ...)
[13:17:37.607]             })
[13:17:37.607]         }
[13:17:37.607]     }, args = future.call.arguments)
[13:17:37.607] }
[13:17:37.607] Lazy evaluation: FALSE
[13:17:37.607] Asynchronous evaluation: TRUE
[13:17:37.607] Local evaluation: TRUE
[13:17:37.607] Environment: R_GlobalEnv
[13:17:37.607] Capture standard output: TRUE
[13:17:37.607] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:37.607] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:37.607] Packages: <none>
[13:17:37.607] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:37.607] Resolved: FALSE
[13:17:37.607] Value: <not collected>
[13:17:37.607] Conditions captured: <none>
[13:17:37.607] Early signaling: FALSE
[13:17:37.607] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:37.607] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:37.621] Chunk #1 of 1 ... DONE
[13:17:37.621] Launching 1 futures (chunks) ... DONE
[13:17:37.621] Resolving 1 futures (chunks) ...
[13:17:37.664]  - Number of value chunks collected: 1
[13:17:37.664] Resolving 1 futures (chunks) ... DONE
[13:17:37.664] Reducing values from 1 chunks ...
[13:17:37.664]  - Number of values collected after concatenation: 1
[13:17:37.664]  - Number of values expected: 1
[13:17:37.664] Reducing values from 1 chunks ... DONE
[13:17:37.664] future_lapply() ... DONE
[13:17:37.664] future_lapply() ...
[13:17:37.668] Number of chunks: 1
[13:17:37.668] getGlobalsAndPackagesXApply() ...
[13:17:37.668]  - future.globals: TRUE
[13:17:37.670]  - globals found/used: [n=1] ‘FUN’
[13:17:37.670]  - needed namespaces: [n=0] 
[13:17:37.670] Finding globals ... DONE
[13:17:37.670]  - use_args: TRUE
[13:17:37.670]  - Getting '...' globals ...
[13:17:37.671]    - '...' content: [n=1] ‘b’
[13:17:37.671] List of 1
[13:17:37.671]  $ ...:List of 1
[13:17:37.671]   ..$ b:<environment: 0x55fba75de578> 
[13:17:37.671]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:37.671]  - attr(*, "where")=List of 1
[13:17:37.671]   ..$ ...:<environment: 0x55fba75dc508> 
[13:17:37.671]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:37.671]  - attr(*, "resolved")= logi TRUE
[13:17:37.671]  - attr(*, "total_size")= num NA
[13:17:37.674]  - Getting '...' globals ... DONE
[13:17:37.674] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:17:37.674] List of 2
[13:17:37.674]  $ ...future.FUN:function (a, b)  
[13:17:37.674]  $ ...          :List of 1
[13:17:37.674]   ..$ b:<environment: 0x55fba75de578> 
[13:17:37.674]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:37.674]  - attr(*, "where")=List of 2
[13:17:37.674]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:37.674]   ..$ ...          :<environment: 0x55fba75dc508> 
[13:17:37.674]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:37.674]  - attr(*, "resolved")= logi FALSE
[13:17:37.674]  - attr(*, "total_size")= num 1440
[13:17:37.677] Packages to be attached in all futures: [n=0] 
[13:17:37.677] getGlobalsAndPackagesXApply() ... DONE
[13:17:37.677] Number of futures (= number of chunks): 1
[13:17:37.677] Launching 1 futures (chunks) ...
[13:17:37.677] Chunk #1 of 1 ...
[13:17:37.677]  - Finding globals in 'X' for chunk #1 ...
[13:17:37.678]    + additional globals found: [n=0] 
[13:17:37.678]    + additional namespaces needed: [n=0] 
[13:17:37.678]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:37.678]  - seeds: <none>
[13:17:37.696] Created future:
[13:17:37.696] MultisessionFuture:
[13:17:37.696] Label: ‘future_lapply-1’
[13:17:37.696] Expression:
[13:17:37.696] {
[13:17:37.696]     do.call(function(...) {
[13:17:37.696]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:37.696]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:37.696]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:37.696]             on.exit(options(oopts), add = TRUE)
[13:17:37.696]         }
[13:17:37.696]         {
[13:17:37.696]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:37.696]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:37.696]                 ...future.FUN(...future.X_jj, ...)
[13:17:37.696]             })
[13:17:37.696]         }
[13:17:37.696]     }, args = future.call.arguments)
[13:17:37.696] }
[13:17:37.696] Lazy evaluation: FALSE
[13:17:37.696] Asynchronous evaluation: TRUE
[13:17:37.696] Local evaluation: TRUE
[13:17:37.696] Environment: R_GlobalEnv
[13:17:37.696] Capture standard output: TRUE
[13:17:37.696] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:37.696] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:37.696] Packages: <none>
[13:17:37.696] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:37.696] Resolved: FALSE
[13:17:37.696] Value: <not collected>
[13:17:37.696] Conditions captured: <none>
[13:17:37.696] Early signaling: FALSE
[13:17:37.696] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:37.696] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:37.708] Chunk #1 of 1 ... DONE
[13:17:37.708] Launching 1 futures (chunks) ... DONE
[13:17:37.708] Resolving 1 futures (chunks) ...
[13:17:37.751]  - Number of value chunks collected: 1
[13:17:37.751] Resolving 1 futures (chunks) ... DONE
[13:17:37.751] Reducing values from 1 chunks ...
[13:17:37.751]  - Number of values collected after concatenation: 1
[13:17:37.751]  - Number of values expected: 1
[13:17:37.751] Reducing values from 1 chunks ... DONE
[13:17:37.751] future_lapply() ... DONE
[13:17:37.751] future_lapply() ...
[13:17:37.755] Number of chunks: 1
[13:17:37.755] getGlobalsAndPackagesXApply() ...
[13:17:37.755]  - future.globals: TRUE
[13:17:37.757]  - globals found/used: [n=1] ‘FUN’
[13:17:37.758]  - needed namespaces: [n=0] 
[13:17:37.758] Finding globals ... DONE
[13:17:37.758]  - use_args: TRUE
[13:17:37.758]  - Getting '...' globals ...
[13:17:37.758]    - '...' content: [n=1] ‘b’
[13:17:37.758] List of 1
[13:17:37.758]  $ ...:List of 1
[13:17:37.758]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[13:17:37.758]   .. .. ..@ slots     :List of 4
[13:17:37.758]   .. .. .. ..$ .Data  : chr "function"
[13:17:37.758]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.758]   .. .. .. ..$ target : chr "signature"
[13:17:37.758]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.758]   .. .. .. ..$ defined: chr "signature"
[13:17:37.758]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.758]   .. .. .. ..$ generic: chr "character"
[13:17:37.758]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.758]   .. .. ..@ contains  :List of 3
[13:17:37.758]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:37.758]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:17:37.758]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ superClass: chr "function"
[13:17:37.758]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:37.758]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:37.758]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:37.758]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:37.758]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:37.758]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[13:17:37.758]   .. .. .. .. .. ..@ distance  : num 1
[13:17:37.758]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:37.758]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:17:37.758]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[13:17:37.758]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:37.758]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:37.758]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:37.758]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:37.758]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:37.758]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:37.758]   .. .. .. .. .. ..@ distance  : num 1
[13:17:37.758]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:37.758]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:17:37.758]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[13:17:37.758]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:37.758]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:37.758]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:37.758]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:37.758]   .. .. .. .. .. ..@ by        : chr "function"
[13:17:37.758]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:37.758]   .. .. .. .. .. ..@ distance  : num 2
[13:17:37.758]   .. .. ..@ virtual   : logi FALSE
[13:17:37.758]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[13:17:37.758]  list()
[13:17:37.758]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[13:17:37.758]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:17:37.758]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:17:37.758]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:17:37.758]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[13:17:37.758]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:17:37.758]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:17:37.758]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:17:37.758]   .. .. .. .. ..$ generic: chr(0) 
[13:17:37.758]   .. .. ..@ validity  : NULL
[13:17:37.758]   .. .. ..@ access    : list()
[13:17:37.758]   .. .. ..@ className : chr "MethodDefinition"
[13:17:37.758]   .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.758]   .. .. ..@ package   : chr "methods"
[13:17:37.758]   .. .. ..@ subclasses:List of 7
[13:17:37.758]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:37.758]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[13:17:37.758]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:37.758]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:37.758]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:37.758]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:37.758]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:37.758]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:37.758]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:37.758]   .. .. .. .. .. ..@ distance  : num 1
[13:17:37.758]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:37.758]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[13:17:37.758]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:37.758]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:37.758]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:37.758]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:37.758]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:37.758]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:37.758]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:37.758]   .. .. .. .. .. ..@ distance  : num 1
[13:17:37.758]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:37.758]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[13:17:37.758]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:37.758]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:37.758]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:37.758]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:37.758]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:37.758]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:37.758]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:37.758]   .. .. .. .. .. ..@ distance  : num 1
[13:17:37.758]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:37.758]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[13:17:37.758]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:37.758]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:37.758]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:37.758]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:37.758]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:37.758]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:37.758]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:37.758]   .. .. .. .. .. ..@ distance  : num 1
[13:17:37.758]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:37.758]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[13:17:37.758]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:37.758]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:37.758]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:37.758]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:37.758]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:37.758]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:17:37.758]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:37.758]   .. .. .. .. .. ..@ distance  : num 2
[13:17:37.758]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:37.758]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[13:17:37.758]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:37.758]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:37.758]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:37.758]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:37.758]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:37.758]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[13:17:37.758]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:37.758]   .. .. .. .. .. ..@ distance  : num 2
[13:17:37.758]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:37.758]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[13:17:37.758]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:37.758]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:37.758]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:37.758]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:37.758]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:37.758]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:17:37.758]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.758]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:37.758]   .. .. .. .. .. ..@ distance  : num 2
[13:17:37.758]   .. .. ..@ versionKey:<externalptr> 
[13:17:37.758]   .. .. ..@ sealed    : logi TRUE
[13:17:37.758]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:37.758]  - attr(*, "where")=List of 1
[13:17:37.758]   ..$ ...:<environment: 0x55fba4dadf00> 
[13:17:37.758]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:37.758]  - attr(*, "resolved")= logi TRUE
[13:17:37.758]  - attr(*, "total_size")= num NA
[13:17:37.811]  - Getting '...' globals ... DONE
[13:17:37.811] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:17:37.811] List of 2
[13:17:37.811]  $ ...future.FUN:function (a, b)  
[13:17:37.811]  $ ...          :List of 1
[13:17:37.811]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[13:17:37.811]   .. .. ..@ slots     :List of 4
[13:17:37.811]   .. .. .. ..$ .Data  : chr "function"
[13:17:37.811]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.811]   .. .. .. ..$ target : chr "signature"
[13:17:37.811]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.811]   .. .. .. ..$ defined: chr "signature"
[13:17:37.811]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.811]   .. .. .. ..$ generic: chr "character"
[13:17:37.811]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.811]   .. .. ..@ contains  :List of 3
[13:17:37.811]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:37.811]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:17:37.811]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ superClass: chr "function"
[13:17:37.811]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:37.811]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:37.811]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:37.811]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:37.811]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:37.811]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[13:17:37.811]   .. .. .. .. .. ..@ distance  : num 1
[13:17:37.811]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:37.811]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:17:37.811]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[13:17:37.811]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:37.811]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:37.811]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:37.811]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:37.811]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:37.811]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:37.811]   .. .. .. .. .. ..@ distance  : num 1
[13:17:37.811]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:37.811]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:17:37.811]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[13:17:37.811]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:37.811]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:37.811]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:37.811]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:37.811]   .. .. .. .. .. ..@ by        : chr "function"
[13:17:37.811]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:37.811]   .. .. .. .. .. ..@ distance  : num 2
[13:17:37.811]   .. .. ..@ virtual   : logi FALSE
[13:17:37.811]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[13:17:37.811]  list()
[13:17:37.811]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[13:17:37.811]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:17:37.811]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:17:37.811]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:17:37.811]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[13:17:37.811]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:17:37.811]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:17:37.811]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:17:37.811]   .. .. .. .. ..$ generic: chr(0) 
[13:17:37.811]   .. .. ..@ validity  : NULL
[13:17:37.811]   .. .. ..@ access    : list()
[13:17:37.811]   .. .. ..@ className : chr "MethodDefinition"
[13:17:37.811]   .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.811]   .. .. ..@ package   : chr "methods"
[13:17:37.811]   .. .. ..@ subclasses:List of 7
[13:17:37.811]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:37.811]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[13:17:37.811]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:37.811]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:37.811]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:37.811]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:37.811]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:37.811]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:37.811]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:37.811]   .. .. .. .. .. ..@ distance  : num 1
[13:17:37.811]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:37.811]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[13:17:37.811]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:37.811]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:37.811]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:37.811]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:37.811]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:37.811]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:37.811]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:37.811]   .. .. .. .. .. ..@ distance  : num 1
[13:17:37.811]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:37.811]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[13:17:37.811]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:37.811]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:37.811]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:37.811]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:37.811]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:37.811]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:37.811]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:37.811]   .. .. .. .. .. ..@ distance  : num 1
[13:17:37.811]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:37.811]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[13:17:37.811]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:37.811]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:37.811]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:37.811]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:37.811]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:37.811]   .. .. .. .. .. ..@ by        : chr(0) 
[13:17:37.811]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:37.811]   .. .. .. .. .. ..@ distance  : num 1
[13:17:37.811]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:37.811]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[13:17:37.811]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:37.811]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:37.811]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:37.811]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:37.811]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:37.811]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:17:37.811]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:37.811]   .. .. .. .. .. ..@ distance  : num 2
[13:17:37.811]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:37.811]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[13:17:37.811]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:37.811]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:37.811]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:37.811]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:37.811]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:37.811]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[13:17:37.811]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:37.811]   .. .. .. .. .. ..@ distance  : num 2
[13:17:37.811]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:17:37.811]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[13:17:37.811]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:17:37.811]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ package   : chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:17:37.811]   .. .. .. .. .. ..@ test      :function (object)  
[13:17:37.811]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:17:37.811]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:17:37.811]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:17:37.811]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:17:37.811]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:17:37.811]   .. .. .. .. .. ..@ distance  : num 2
[13:17:37.811]   .. .. ..@ versionKey:<externalptr> 
[13:17:37.811]   .. .. ..@ sealed    : logi TRUE
[13:17:37.811]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:37.811]  - attr(*, "where")=List of 2
[13:17:37.811]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:37.811]   ..$ ...          :<environment: 0x55fba4dadf00> 
[13:17:37.811]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:37.811]  - attr(*, "resolved")= logi FALSE
[13:17:37.811]  - attr(*, "total_size")= num 312512
[13:17:37.861] Packages to be attached in all futures: [n=0] 
[13:17:37.861] getGlobalsAndPackagesXApply() ... DONE
[13:17:37.861] Number of futures (= number of chunks): 1
[13:17:37.861] Launching 1 futures (chunks) ...
[13:17:37.861] Chunk #1 of 1 ...
[13:17:37.861]  - Finding globals in 'X' for chunk #1 ...
[13:17:37.862]    + additional globals found: [n=0] 
[13:17:37.862]    + additional namespaces needed: [n=0] 
[13:17:37.862]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:37.862]  - seeds: <none>
[13:17:37.880] Created future:
[13:17:37.880] MultisessionFuture:
[13:17:37.880] Label: ‘future_lapply-1’
[13:17:37.880] Expression:
[13:17:37.880] {
[13:17:37.880]     do.call(function(...) {
[13:17:37.880]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:37.880]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:37.880]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:37.880]             on.exit(options(oopts), add = TRUE)
[13:17:37.880]         }
[13:17:37.880]         {
[13:17:37.880]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:37.880]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:37.880]                 ...future.FUN(...future.X_jj, ...)
[13:17:37.880]             })
[13:17:37.880]         }
[13:17:37.880]     }, args = future.call.arguments)
[13:17:37.880] }
[13:17:37.880] Lazy evaluation: FALSE
[13:17:37.880] Asynchronous evaluation: TRUE
[13:17:37.880] Local evaluation: TRUE
[13:17:37.880] Environment: R_GlobalEnv
[13:17:37.880] Capture standard output: TRUE
[13:17:37.880] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:37.880] Globals: 5 objects totaling 305.24 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 303.78 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:37.880] Packages: <none>
[13:17:37.880] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:37.880] Resolved: FALSE
[13:17:37.880] Value: <not collected>
[13:17:37.880] Conditions captured: <none>
[13:17:37.880] Early signaling: FALSE
[13:17:37.880] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:37.880] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:37.892] Chunk #1 of 1 ... DONE
[13:17:37.892] Launching 1 futures (chunks) ... DONE
[13:17:37.892] Resolving 1 futures (chunks) ...
[13:17:37.935]  - Number of value chunks collected: 1
[13:17:37.935] Resolving 1 futures (chunks) ... DONE
[13:17:37.935] Reducing values from 1 chunks ...
[13:17:37.935]  - Number of values collected after concatenation: 1
[13:17:37.935]  - Number of values expected: 1
[13:17:37.935] Reducing values from 1 chunks ... DONE
[13:17:37.935] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[13:17:37.937] future_lapply() ...
[13:17:37.941] Number of chunks: 2
[13:17:37.941] getGlobalsAndPackagesXApply() ...
[13:17:37.941]  - future.globals: TRUE
[13:17:37.942]  - globals found/used: [n=1] ‘FUN’
[13:17:37.943]  - needed namespaces: [n=0] 
[13:17:37.943] Finding globals ... DONE
[13:17:37.943]  - use_args: TRUE
[13:17:37.943]  - Getting '...' globals ...
[13:17:37.943]    - '...' content: [n=0] 
[13:17:37.943] List of 1
[13:17:37.943]  $ ...: list()
[13:17:37.943]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:37.943]  - attr(*, "where")=List of 1
[13:17:37.943]   ..$ ...:<environment: 0x55fba6a90120> 
[13:17:37.943]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:37.943]  - attr(*, "resolved")= logi TRUE
[13:17:37.943]  - attr(*, "total_size")= num NA
[13:17:37.946]  - Getting '...' globals ... DONE
[13:17:37.946] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:17:37.946] List of 2
[13:17:37.946]  $ ...future.FUN:function (f)  
[13:17:37.946]  $ ...          : list()
[13:17:37.946]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:37.946]  - attr(*, "where")=List of 2
[13:17:37.946]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:37.946]   ..$ ...          :<environment: 0x55fba6a90120> 
[13:17:37.946]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:37.946]  - attr(*, "resolved")= logi FALSE
[13:17:37.946]  - attr(*, "total_size")= num 1008
[13:17:37.949] Packages to be attached in all futures: [n=0] 
[13:17:37.949] getGlobalsAndPackagesXApply() ... DONE
[13:17:37.949] Number of futures (= number of chunks): 2
[13:17:37.949] Launching 2 futures (chunks) ...
[13:17:37.949] Chunk #1 of 2 ...
[13:17:37.949]  - Finding globals in 'X' for chunk #1 ...
[13:17:37.951]    + additional globals found: [n=2] ‘a’, ‘b’
[13:17:37.951]    + additional namespaces needed: [n=0] 
[13:17:37.951]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:37.951]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:17:37.952]  - seeds: <none>
[13:17:37.970] Created future:
[13:17:37.970] MultisessionFuture:
[13:17:37.970] Label: ‘future_lapply-1’
[13:17:37.970] Expression:
[13:17:37.970] {
[13:17:37.970]     do.call(function(...) {
[13:17:37.970]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:37.970]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:37.970]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:37.970]             on.exit(options(oopts), add = TRUE)
[13:17:37.970]         }
[13:17:37.970]         {
[13:17:37.970]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:37.970]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:37.970]                 ...future.FUN(...future.X_jj, ...)
[13:17:37.970]             })
[13:17:37.970]         }
[13:17:37.970]     }, args = future.call.arguments)
[13:17:37.970] }
[13:17:37.970] Lazy evaluation: FALSE
[13:17:37.970] Asynchronous evaluation: TRUE
[13:17:37.970] Local evaluation: TRUE
[13:17:37.970] Environment: R_GlobalEnv
[13:17:37.970] Capture standard output: TRUE
[13:17:37.970] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:37.970] Globals: 7 objects totaling 3.48 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[13:17:37.970] Packages: <none>
[13:17:37.970] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:37.970] Resolved: FALSE
[13:17:37.970] Value: <not collected>
[13:17:37.970] Conditions captured: <none>
[13:17:37.970] Early signaling: FALSE
[13:17:37.970] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:37.970] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:37.982] Chunk #1 of 2 ... DONE
[13:17:37.982] Chunk #2 of 2 ...
[13:17:37.982]  - Finding globals in 'X' for chunk #2 ...
[13:17:37.984]    + additional globals found: [n=2] ‘a’, ‘b’
[13:17:37.984]    + additional namespaces needed: [n=1] ‘tools’
[13:17:37.984]  - Finding globals in 'X' for chunk #2 ... DONE
[13:17:37.984]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:17:37.984]  - seeds: <none>
[13:17:38.002] Created future:
[13:17:38.002] MultisessionFuture:
[13:17:38.002] Label: ‘future_lapply-2’
[13:17:38.002] Expression:
[13:17:38.002] {
[13:17:38.002]     do.call(function(...) {
[13:17:38.002]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:38.002]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:38.002]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:38.002]             on.exit(options(oopts), add = TRUE)
[13:17:38.002]         }
[13:17:38.002]         {
[13:17:38.002]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:38.002]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:38.002]                 ...future.FUN(...future.X_jj, ...)
[13:17:38.002]             })
[13:17:38.002]         }
[13:17:38.002]     }, args = future.call.arguments)
[13:17:38.002] }
[13:17:38.002] Lazy evaluation: FALSE
[13:17:38.002] Asynchronous evaluation: TRUE
[13:17:38.002] Local evaluation: TRUE
[13:17:38.002] Environment: R_GlobalEnv
[13:17:38.002] Capture standard output: TRUE
[13:17:38.002] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:38.002] Globals: 7 objects totaling 5.11 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.02 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[13:17:38.002] Packages: 1 packages (‘tools’)
[13:17:38.002] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:38.002] Resolved: FALSE
[13:17:38.002] Value: <not collected>
[13:17:38.002] Conditions captured: <none>
[13:17:38.002] Early signaling: FALSE
[13:17:38.002] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:38.002] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:38.014] Chunk #2 of 2 ... DONE
[13:17:38.014] Launching 2 futures (chunks) ... DONE
[13:17:38.014] Resolving 2 futures (chunks) ...
[13:17:38.061]  - Number of value chunks collected: 2
[13:17:38.061] Resolving 2 futures (chunks) ... DONE
[13:17:38.061] Reducing values from 2 chunks ...
[13:17:38.061]  - Number of values collected after concatenation: 4
[13:17:38.061]  - Number of values expected: 4
[13:17:38.061] Reducing values from 2 chunks ... DONE
[13:17:38.061] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[13:17:38.066] future_lapply() ...
[13:17:38.070] Number of chunks: 1
[13:17:38.070] getGlobalsAndPackagesXApply() ...
[13:17:38.070]  - future.globals: TRUE
[13:17:38.073]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[13:17:38.073]  - needed namespaces: [n=0] 
[13:17:38.073] Finding globals ... DONE
[13:17:38.073]  - use_args: TRUE
[13:17:38.073]  - Getting '...' globals ...
[13:17:38.073]    - '...' content: [n=0] 
[13:17:38.074] List of 1
[13:17:38.074]  $ ...: list()
[13:17:38.074]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:38.074]  - attr(*, "where")=List of 1
[13:17:38.074]   ..$ ...:<environment: 0x55fba7815270> 
[13:17:38.074]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:38.074]  - attr(*, "resolved")= logi TRUE
[13:17:38.074]  - attr(*, "total_size")= num NA
[13:17:38.076]  - Getting '...' globals ... DONE
[13:17:38.076] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[13:17:38.076] List of 3
[13:17:38.076]  $ ...future.FUN        :function (x)  
[13:17:38.076]  $ future.call.arguments:List of 1
[13:17:38.076]   ..$ a: num 1
[13:17:38.076]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:38.076]  $ ...                  : list()
[13:17:38.076]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:38.076]  - attr(*, "where")=List of 3
[13:17:38.076]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[13:17:38.076]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[13:17:38.076]   ..$ ...                  :<environment: 0x55fba7815270> 
[13:17:38.076]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:38.076]  - attr(*, "resolved")= logi FALSE
[13:17:38.076]  - attr(*, "total_size")= num 1272
[13:17:38.080] Packages to be attached in all futures: [n=0] 
[13:17:38.080] getGlobalsAndPackagesXApply() ... DONE
[13:17:38.080] Number of futures (= number of chunks): 1
[13:17:38.080] Launching 1 futures (chunks) ...
[13:17:38.080] Chunk #1 of 1 ...
[13:17:38.080]  - Finding globals in 'X' for chunk #1 ...
[13:17:38.081]    + additional globals found: [n=0] 
[13:17:38.081]    + additional namespaces needed: [n=0] 
[13:17:38.081]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:38.081]  - seeds: <none>
[13:17:38.100] Created future:
[13:17:38.100] MultisessionFuture:
[13:17:38.100] Label: ‘future_lapply-1’
[13:17:38.100] Expression:
[13:17:38.100] {
[13:17:38.100]     do.call(function(...) {
[13:17:38.100]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:38.100]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:38.100]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:38.100]             on.exit(options(oopts), add = TRUE)
[13:17:38.100]         }
[13:17:38.100]         {
[13:17:38.100]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:38.100]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:38.100]                 ...future.FUN(...future.X_jj)
[13:17:38.100]             })
[13:17:38.100]         }
[13:17:38.100]     }, args = future.call.arguments)
[13:17:38.100] }
[13:17:38.100] Lazy evaluation: FALSE
[13:17:38.100] Asynchronous evaluation: TRUE
[13:17:38.100] Local evaluation: TRUE
[13:17:38.100] Environment: 0x55fba780b548
[13:17:38.100] Capture standard output: TRUE
[13:17:38.100] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:38.100] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:38.100] Packages: <none>
[13:17:38.100] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:38.100] Resolved: FALSE
[13:17:38.100] Value: <not collected>
[13:17:38.100] Conditions captured: <none>
[13:17:38.100] Early signaling: FALSE
[13:17:38.100] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:38.100] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:38.112] Chunk #1 of 1 ... DONE
[13:17:38.112] Launching 1 futures (chunks) ... DONE
[13:17:38.112] Resolving 1 futures (chunks) ...
[13:17:38.155]  - Number of value chunks collected: 1
[13:17:38.155] Resolving 1 futures (chunks) ... DONE
[13:17:38.155] Reducing values from 1 chunks ...
[13:17:38.155]  - Number of values collected after concatenation: 1
[13:17:38.155]  - Number of values expected: 1
[13:17:38.155] Reducing values from 1 chunks ... DONE
[13:17:38.155] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[13:17:38.157] future_lapply() ...
[13:17:38.161] Number of chunks: 1
[13:17:38.161] getGlobalsAndPackagesXApply() ...
[13:17:38.161]  - future.globals: TRUE
[13:17:38.163]  - globals found/used: [n=2] ‘FUN’, ‘a’
[13:17:38.163]  - needed namespaces: [n=0] 
[13:17:38.163] Finding globals ... DONE
[13:17:38.163]  - use_args: TRUE
[13:17:38.164]  - Getting '...' globals ...
[13:17:38.164]    - '...' content: [n=0] 
[13:17:38.164] List of 1
[13:17:38.164]  $ ...: list()
[13:17:38.164]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:38.164]  - attr(*, "where")=List of 1
[13:17:38.164]   ..$ ...:<environment: 0x55fba4d49500> 
[13:17:38.164]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:38.164]  - attr(*, "resolved")= logi TRUE
[13:17:38.164]  - attr(*, "total_size")= num NA
[13:17:38.166]  - Getting '...' globals ... DONE
[13:17:38.167] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[13:17:38.167] List of 3
[13:17:38.167]  $ ...future.FUN:function (ii)  
[13:17:38.167]  $ a            : num 1
[13:17:38.167]  $ ...          : list()
[13:17:38.167]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:38.167]  - attr(*, "where")=List of 3
[13:17:38.167]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:38.167]   ..$ a            :<environment: R_EmptyEnv> 
[13:17:38.167]   ..$ ...          :<environment: 0x55fba4d49500> 
[13:17:38.167]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:38.167]  - attr(*, "resolved")= logi FALSE
[13:17:38.167]  - attr(*, "total_size")= num 2984
[13:17:38.170] Packages to be attached in all futures: [n=0] 
[13:17:38.170] getGlobalsAndPackagesXApply() ... DONE
[13:17:38.170] Number of futures (= number of chunks): 1
[13:17:38.170] Launching 1 futures (chunks) ...
[13:17:38.170] Chunk #1 of 1 ...
[13:17:38.171]  - Finding globals in 'X' for chunk #1 ...
[13:17:38.171]    + additional globals found: [n=0] 
[13:17:38.171]    + additional namespaces needed: [n=0] 
[13:17:38.171]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:38.171]  - seeds: <none>
[13:17:38.189] Created future:
[13:17:38.189] MultisessionFuture:
[13:17:38.189] Label: ‘future_lapply-1’
[13:17:38.189] Expression:
[13:17:38.189] {
[13:17:38.189]     do.call(function(...) {
[13:17:38.189]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:38.189]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:38.189]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:38.189]             on.exit(options(oopts), add = TRUE)
[13:17:38.189]         }
[13:17:38.189]         {
[13:17:38.189]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:38.189]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:38.189]                 ...future.FUN(...future.X_jj, ...)
[13:17:38.189]             })
[13:17:38.189]         }
[13:17:38.189]     }, args = future.call.arguments)
[13:17:38.189] }
[13:17:38.189] Lazy evaluation: FALSE
[13:17:38.189] Asynchronous evaluation: TRUE
[13:17:38.189] Local evaluation: TRUE
[13:17:38.189] Environment: R_GlobalEnv
[13:17:38.189] Capture standard output: TRUE
[13:17:38.189] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:38.189] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[13:17:38.189] Packages: <none>
[13:17:38.189] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:38.189] Resolved: FALSE
[13:17:38.189] Value: <not collected>
[13:17:38.189] Conditions captured: <none>
[13:17:38.189] Early signaling: FALSE
[13:17:38.189] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:38.189] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:38.201] Chunk #1 of 1 ... DONE
[13:17:38.201] Launching 1 futures (chunks) ... DONE
[13:17:38.201] Resolving 1 futures (chunks) ...
[13:17:38.243]  - Number of value chunks collected: 1
[13:17:38.243] Resolving 1 futures (chunks) ... DONE
[13:17:38.243] Reducing values from 1 chunks ...
[13:17:38.243]  - Number of values collected after concatenation: 1
[13:17:38.243]  - Number of values expected: 1
[13:17:38.244] Reducing values from 1 chunks ... DONE
[13:17:38.244] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[13:17:38.244] future_lapply() ...
[13:17:38.250] Number of chunks: 1
[13:17:38.250] getGlobalsAndPackagesXApply() ...
[13:17:38.250]  - future.globals: TRUE
[13:17:38.252]  - globals found/used: [n=2] ‘FUN’, ‘a’
[13:17:38.252]  - needed namespaces: [n=0] 
[13:17:38.252] Finding globals ... DONE
[13:17:38.253]  - use_args: TRUE
[13:17:38.253]  - Getting '...' globals ...
[13:17:38.253]    - '...' content: [n=0] 
[13:17:38.253] List of 1
[13:17:38.253]  $ ...: list()
[13:17:38.253]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:38.253]  - attr(*, "where")=List of 1
[13:17:38.253]   ..$ ...:<environment: 0x55fba80022b8> 
[13:17:38.253]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:38.253]  - attr(*, "resolved")= logi TRUE
[13:17:38.253]  - attr(*, "total_size")= num NA
[13:17:38.256]  - Getting '...' globals ... DONE
[13:17:38.256] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[13:17:38.256] List of 3
[13:17:38.256]  $ ...future.FUN:function (ii)  
[13:17:38.256]  $ a            : num 1
[13:17:38.256]  $ ...          : list()
[13:17:38.256]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:38.256]  - attr(*, "where")=List of 3
[13:17:38.256]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:38.256]   ..$ a            :<environment: R_EmptyEnv> 
[13:17:38.256]   ..$ ...          :<environment: 0x55fba80022b8> 
[13:17:38.256]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:38.256]  - attr(*, "resolved")= logi FALSE
[13:17:38.256]  - attr(*, "total_size")= num 2984
[13:17:38.259] Packages to be attached in all futures: [n=0] 
[13:17:38.259] getGlobalsAndPackagesXApply() ... DONE
[13:17:38.259] Number of futures (= number of chunks): 1
[13:17:38.259] Launching 1 futures (chunks) ...
[13:17:38.259] Chunk #1 of 1 ...
[13:17:38.260]  - Finding globals in 'X' for chunk #1 ...
[13:17:38.260]    + additional globals found: [n=0] 
[13:17:38.260]    + additional namespaces needed: [n=0] 
[13:17:38.260]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:38.260]  - seeds: <none>
[13:17:38.278] Created future:
[13:17:38.278] MultisessionFuture:
[13:17:38.278] Label: ‘future_lapply-1’
[13:17:38.278] Expression:
[13:17:38.278] {
[13:17:38.278]     do.call(function(...) {
[13:17:38.278]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:38.278]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:38.278]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:38.278]             on.exit(options(oopts), add = TRUE)
[13:17:38.278]         }
[13:17:38.278]         {
[13:17:38.278]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:38.278]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:38.278]                 ...future.FUN(...future.X_jj, ...)
[13:17:38.278]             })
[13:17:38.278]         }
[13:17:38.278]     }, args = future.call.arguments)
[13:17:38.278] }
[13:17:38.278] Lazy evaluation: FALSE
[13:17:38.278] Asynchronous evaluation: TRUE
[13:17:38.278] Local evaluation: TRUE
[13:17:38.278] Environment: R_GlobalEnv
[13:17:38.278] Capture standard output: TRUE
[13:17:38.278] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:38.278] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[13:17:38.278] Packages: <none>
[13:17:38.278] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:38.278] Resolved: FALSE
[13:17:38.278] Value: <not collected>
[13:17:38.278] Conditions captured: <none>
[13:17:38.278] Early signaling: FALSE
[13:17:38.278] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:38.278] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:38.289] Chunk #1 of 1 ... DONE
[13:17:38.289] Launching 1 futures (chunks) ... DONE
[13:17:38.290] Resolving 1 futures (chunks) ...
[13:17:38.332]  - Number of value chunks collected: 1
[13:17:38.332] Resolving 1 futures (chunks) ... DONE
[13:17:38.332] Reducing values from 1 chunks ...
[13:17:38.332]  - Number of values collected after concatenation: 1
[13:17:38.332]  - Number of values expected: 1
[13:17:38.333] Reducing values from 1 chunks ... DONE
[13:17:38.333] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[13:17:38.333] future_lapply() ...
[13:17:38.336] Number of chunks: 1
[13:17:38.337] getGlobalsAndPackagesXApply() ...
[13:17:38.337]  - future.globals: <name-value list> with names ‘42’
[13:17:38.337]  - use_args: TRUE
[13:17:38.337]  - Getting '...' globals ...
[13:17:38.337]    - '...' content: [n=0] 
[13:17:38.338] List of 1
[13:17:38.338]  $ ...: list()
[13:17:38.338]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:38.338]  - attr(*, "where")=List of 1
[13:17:38.338]   ..$ ...:<environment: 0x55fba57f4930> 
[13:17:38.338]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:38.338]  - attr(*, "resolved")= logi TRUE
[13:17:38.338]  - attr(*, "total_size")= num NA
[13:17:38.340]  - Getting '...' globals ... DONE
[13:17:38.340] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[13:17:38.340] List of 3
[13:17:38.340]  $ a            : num 42
[13:17:38.340]  $ ...future.FUN:function (x)  
[13:17:38.340]  $ ...          : list()
[13:17:38.340]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:38.340]  - attr(*, "where")=List of 3
[13:17:38.340]   ..$ a            :<environment: R_EmptyEnv> 
[13:17:38.340]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[13:17:38.340]   ..$ ...          :<environment: 0x55fba57f4930> 
[13:17:38.340]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:38.340]  - attr(*, "resolved")= logi FALSE
[13:17:38.340]  - attr(*, "total_size")= num NA
[13:17:38.344] Packages to be attached in all futures: [n=0] 
[13:17:38.344] getGlobalsAndPackagesXApply() ... DONE
[13:17:38.344] Number of futures (= number of chunks): 1
[13:17:38.344] Launching 1 futures (chunks) ...
[13:17:38.344] Chunk #1 of 1 ...
[13:17:38.344]  - seeds: <none>
[13:17:38.363] Created future:
[13:17:38.363] MultisessionFuture:
[13:17:38.363] Label: ‘future_lapply-1’
[13:17:38.363] Expression:
[13:17:38.363] {
[13:17:38.363]     do.call(function(...) {
[13:17:38.363]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:38.363]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:38.363]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:38.363]             on.exit(options(oopts), add = TRUE)
[13:17:38.363]         }
[13:17:38.363]         {
[13:17:38.363]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:38.363]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:38.363]                 ...future.FUN(...future.X_jj, ...)
[13:17:38.363]             })
[13:17:38.363]         }
[13:17:38.363]     }, args = future.call.arguments)
[13:17:38.363] }
[13:17:38.363] Lazy evaluation: FALSE
[13:17:38.363] Asynchronous evaluation: TRUE
[13:17:38.363] Local evaluation: TRUE
[13:17:38.363] Environment: R_GlobalEnv
[13:17:38.363] Capture standard output: TRUE
[13:17:38.363] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:38.363] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[13:17:38.363] Packages: <none>
[13:17:38.363] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:38.363] Resolved: FALSE
[13:17:38.363] Value: <not collected>
[13:17:38.363] Conditions captured: <none>
[13:17:38.363] Early signaling: FALSE
[13:17:38.363] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:38.363] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:38.374] Chunk #1 of 1 ... DONE
[13:17:38.374] Launching 1 futures (chunks) ... DONE
[13:17:38.374] Resolving 1 futures (chunks) ...
[13:17:38.417]  - Number of value chunks collected: 1
[13:17:38.417] Resolving 1 futures (chunks) ... DONE
[13:17:38.417] Reducing values from 1 chunks ...
[13:17:38.418]  - Number of values collected after concatenation: 1
[13:17:38.418]  - Number of values expected: 1
[13:17:38.418] Reducing values from 1 chunks ... DONE
[13:17:38.418] future_lapply() ... DONE
List of 1
 $ : num 42
> 
> message("*** future_lapply() - tricky globals ... DONE")
*** future_lapply() - tricky globals ... DONE
> 
> 
> message("*** future_lapply() - missing arguments ...")
*** future_lapply() - missing arguments ...
> 
> ## Here 'abc' becomes missing, i.e. missing(abc) is TRUE
> foo <- function(x, abc) future_lapply(x, FUN = function(y) y)
> y <- foo(1:2)
[13:17:38.419] future_lapply() ...
[13:17:38.423] Number of chunks: 2
[13:17:38.423] getGlobalsAndPackagesXApply() ...
[13:17:38.423]  - future.globals: TRUE
[13:17:38.424]  - globals found/used: [n=1] ‘FUN’
[13:17:38.425]  - needed namespaces: [n=0] 
[13:17:38.425] Finding globals ... DONE
[13:17:38.425]  - use_args: TRUE
[13:17:38.425]  - Getting '...' globals ...
[13:17:38.425]    - '...' content: [n=0] 
[13:17:38.425] List of 1
[13:17:38.425]  $ ...: list()
[13:17:38.425]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:38.425]  - attr(*, "where")=List of 1
[13:17:38.425]   ..$ ...:<environment: 0x55fba84c97f8> 
[13:17:38.425]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:38.425]  - attr(*, "resolved")= logi TRUE
[13:17:38.425]  - attr(*, "total_size")= num NA
[13:17:38.428]  - Getting '...' globals ... DONE
[13:17:38.430] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:17:38.430] List of 2
[13:17:38.430]  $ ...future.FUN:function (y)  
[13:17:38.430]  $ ...          : list()
[13:17:38.430]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:38.430]  - attr(*, "where")=List of 2
[13:17:38.430]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:38.430]   ..$ ...          :<environment: 0x55fba84c97f8> 
[13:17:38.430]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:38.430]  - attr(*, "resolved")= logi FALSE
[13:17:38.430]  - attr(*, "total_size")= num 280
[13:17:38.433] Packages to be attached in all futures: [n=0] 
[13:17:38.433] getGlobalsAndPackagesXApply() ... DONE
[13:17:38.433] Number of futures (= number of chunks): 2
[13:17:38.433] Launching 2 futures (chunks) ...
[13:17:38.433] Chunk #1 of 2 ...
[13:17:38.434]  - Finding globals in 'X' for chunk #1 ...
[13:17:38.434]    + additional globals found: [n=0] 
[13:17:38.434]    + additional namespaces needed: [n=0] 
[13:17:38.434]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:38.434]  - seeds: <none>
[13:17:38.452] Created future:
[13:17:38.452] MultisessionFuture:
[13:17:38.452] Label: ‘future_lapply-1’
[13:17:38.452] Expression:
[13:17:38.452] {
[13:17:38.452]     do.call(function(...) {
[13:17:38.452]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:38.452]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:38.452]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:38.452]             on.exit(options(oopts), add = TRUE)
[13:17:38.452]         }
[13:17:38.452]         {
[13:17:38.452]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:38.452]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:38.452]                 ...future.FUN(...future.X_jj, ...)
[13:17:38.452]             })
[13:17:38.452]         }
[13:17:38.452]     }, args = future.call.arguments)
[13:17:38.452] }
[13:17:38.452] Lazy evaluation: FALSE
[13:17:38.452] Asynchronous evaluation: TRUE
[13:17:38.452] Local evaluation: TRUE
[13:17:38.452] Environment: 0x55fba84c9be8
[13:17:38.452] Capture standard output: TRUE
[13:17:38.452] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:38.452] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:38.452] Packages: <none>
[13:17:38.452] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:38.452] Resolved: FALSE
[13:17:38.452] Value: <not collected>
[13:17:38.452] Conditions captured: <none>
[13:17:38.452] Early signaling: FALSE
[13:17:38.452] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:38.452] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:38.464] Chunk #1 of 2 ... DONE
[13:17:38.464] Chunk #2 of 2 ...
[13:17:38.464]  - Finding globals in 'X' for chunk #2 ...
[13:17:38.464]    + additional globals found: [n=0] 
[13:17:38.464]    + additional namespaces needed: [n=0] 
[13:17:38.464]  - Finding globals in 'X' for chunk #2 ... DONE
[13:17:38.465]  - seeds: <none>
[13:17:38.482] Created future:
[13:17:38.482] MultisessionFuture:
[13:17:38.482] Label: ‘future_lapply-2’
[13:17:38.482] Expression:
[13:17:38.482] {
[13:17:38.482]     do.call(function(...) {
[13:17:38.482]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:38.482]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:38.482]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:38.482]             on.exit(options(oopts), add = TRUE)
[13:17:38.482]         }
[13:17:38.482]         {
[13:17:38.482]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:38.482]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:38.482]                 ...future.FUN(...future.X_jj, ...)
[13:17:38.482]             })
[13:17:38.482]         }
[13:17:38.482]     }, args = future.call.arguments)
[13:17:38.482] }
[13:17:38.482] Lazy evaluation: FALSE
[13:17:38.482] Asynchronous evaluation: TRUE
[13:17:38.482] Local evaluation: TRUE
[13:17:38.482] Environment: 0x55fba84c9be8
[13:17:38.482] Capture standard output: TRUE
[13:17:38.482] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:38.482] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:38.482] Packages: <none>
[13:17:38.482] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:38.482] Resolved: FALSE
[13:17:38.482] Value: <not collected>
[13:17:38.482] Conditions captured: <none>
[13:17:38.482] Early signaling: FALSE
[13:17:38.482] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:38.482] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:38.494] Chunk #2 of 2 ... DONE
[13:17:38.494] Launching 2 futures (chunks) ... DONE
[13:17:38.494] Resolving 2 futures (chunks) ...
[13:17:38.540]  - Number of value chunks collected: 2
[13:17:38.541] Resolving 2 futures (chunks) ... DONE
[13:17:38.541] Reducing values from 2 chunks ...
[13:17:38.541]  - Number of values collected after concatenation: 2
[13:17:38.541]  - Number of values expected: 2
[13:17:38.541] Reducing values from 2 chunks ... DONE
[13:17:38.541] future_lapply() ... DONE
> stopifnot(identical(y, as.list(1:2)))
> 
> message("*** future_lapply() - missing arguments ... DONE")
*** future_lapply() - missing arguments ... DONE
> 
> 
> message("*** future_lapply() - false positives ...")
*** future_lapply() - false positives ...
> 
> ## Here 'abc' becomes a promise, which fails to resolve
> ## iff 'xyz' does not exist. (Issue #161)
> suppressWarnings(rm(list = "xyz"))
> foo <- function(x, abc) future_lapply(x, FUN = function(y) y)
> y <- foo(1:2, abc = (xyz >= 3.14))
[13:17:38.542] future_lapply() ...
[13:17:38.546] Number of chunks: 2
[13:17:38.546] getGlobalsAndPackagesXApply() ...
[13:17:38.546]  - future.globals: TRUE
[13:17:38.547]  - globals found/used: [n=1] ‘FUN’
[13:17:38.547]  - needed namespaces: [n=0] 
[13:17:38.547] Finding globals ... DONE
[13:17:38.547]  - use_args: TRUE
[13:17:38.548]  - Getting '...' globals ...
[13:17:38.548]    - '...' content: [n=0] 
[13:17:38.548] List of 1
[13:17:38.548]  $ ...: list()
[13:17:38.548]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:38.548]  - attr(*, "where")=List of 1
[13:17:38.548]   ..$ ...:<environment: 0x55fba59786c0> 
[13:17:38.548]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:38.548]  - attr(*, "resolved")= logi TRUE
[13:17:38.548]  - attr(*, "total_size")= num NA
[13:17:38.551]  - Getting '...' globals ... DONE
[13:17:38.551] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:17:38.551] List of 2
[13:17:38.551]  $ ...future.FUN:function (y)  
[13:17:38.551]  $ ...          : list()
[13:17:38.551]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:38.551]  - attr(*, "where")=List of 2
[13:17:38.551]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:38.551]   ..$ ...          :<environment: 0x55fba59786c0> 
[13:17:38.551]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:38.551]  - attr(*, "resolved")= logi FALSE
[13:17:38.551]  - attr(*, "total_size")= num 280
[13:17:38.554] Packages to be attached in all futures: [n=0] 
[13:17:38.554] getGlobalsAndPackagesXApply() ... DONE
[13:17:38.554] Number of futures (= number of chunks): 2
[13:17:38.554] Launching 2 futures (chunks) ...
[13:17:38.554] Chunk #1 of 2 ...
[13:17:38.554]  - Finding globals in 'X' for chunk #1 ...
[13:17:38.554]    + additional globals found: [n=0] 
[13:17:38.555]    + additional namespaces needed: [n=0] 
[13:17:38.555]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:38.555]  - seeds: <none>
[13:17:38.573] Created future:
[13:17:38.573] MultisessionFuture:
[13:17:38.573] Label: ‘future_lapply-1’
[13:17:38.573] Expression:
[13:17:38.573] {
[13:17:38.573]     do.call(function(...) {
[13:17:38.573]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:38.573]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:38.573]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:38.573]             on.exit(options(oopts), add = TRUE)
[13:17:38.573]         }
[13:17:38.573]         {
[13:17:38.573]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:38.573]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:38.573]                 ...future.FUN(...future.X_jj, ...)
[13:17:38.573]             })
[13:17:38.573]         }
[13:17:38.573]     }, args = future.call.arguments)
[13:17:38.573] }
[13:17:38.573] Lazy evaluation: FALSE
[13:17:38.573] Asynchronous evaluation: TRUE
[13:17:38.573] Local evaluation: TRUE
[13:17:38.573] Environment: 0x55fba5977ee0
[13:17:38.573] Capture standard output: TRUE
[13:17:38.573] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:38.573] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:38.573] Packages: <none>
[13:17:38.573] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:38.573] Resolved: FALSE
[13:17:38.573] Value: <not collected>
[13:17:38.573] Conditions captured: <none>
[13:17:38.573] Early signaling: FALSE
[13:17:38.573] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:38.573] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:38.584] Chunk #1 of 2 ... DONE
[13:17:38.585] Chunk #2 of 2 ...
[13:17:38.585]  - Finding globals in 'X' for chunk #2 ...
[13:17:38.585]    + additional globals found: [n=0] 
[13:17:38.585]    + additional namespaces needed: [n=0] 
[13:17:38.585]  - Finding globals in 'X' for chunk #2 ... DONE
[13:17:38.585]  - seeds: <none>
[13:17:38.604] Created future:
[13:17:38.604] MultisessionFuture:
[13:17:38.604] Label: ‘future_lapply-2’
[13:17:38.604] Expression:
[13:17:38.604] {
[13:17:38.604]     do.call(function(...) {
[13:17:38.604]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:38.604]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:38.604]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:38.604]             on.exit(options(oopts), add = TRUE)
[13:17:38.604]         }
[13:17:38.604]         {
[13:17:38.604]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:38.604]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:38.604]                 ...future.FUN(...future.X_jj, ...)
[13:17:38.604]             })
[13:17:38.604]         }
[13:17:38.604]     }, args = future.call.arguments)
[13:17:38.604] }
[13:17:38.604] Lazy evaluation: FALSE
[13:17:38.604] Asynchronous evaluation: TRUE
[13:17:38.604] Local evaluation: TRUE
[13:17:38.604] Environment: 0x55fba5977ee0
[13:17:38.604] Capture standard output: TRUE
[13:17:38.604] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:38.604] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:38.604] Packages: <none>
[13:17:38.604] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:38.604] Resolved: FALSE
[13:17:38.604] Value: <not collected>
[13:17:38.604] Conditions captured: <none>
[13:17:38.604] Early signaling: FALSE
[13:17:38.604] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:38.604] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:38.616] Chunk #2 of 2 ... DONE
[13:17:38.616] Launching 2 futures (chunks) ... DONE
[13:17:38.616] Resolving 2 futures (chunks) ...
[13:17:38.662]  - Number of value chunks collected: 2
[13:17:38.662] Resolving 2 futures (chunks) ... DONE
[13:17:38.662] Reducing values from 2 chunks ...
[13:17:38.662]  - Number of values collected after concatenation: 2
[13:17:38.662]  - Number of values expected: 2
[13:17:38.662] Reducing values from 2 chunks ... DONE
[13:17:38.662] future_lapply() ... DONE
> stopifnot(identical(y, as.list(1:2)))
> 
> message("*** future_lapply() - false positives ... DONE")
*** future_lapply() - false positives ... DONE
> 
> 
> message("*** future_lapply() - too large ...")
*** future_lapply() - too large ...
> 
> oMaxSize <- getOption("future.globals.maxSize")
> X <- replicate(10L, 1:100, simplify = FALSE)
> FUN <- function(x) {
+   getOption("future.globals.maxSize")
+ }
> 
> y0 <- lapply(X, FUN = FUN)
> stopifnot(all(sapply(y0, FUN = identical, oMaxSize)))
> 
> sizes <- unclass(c(FUN = object.size(FUN), X = object.size(X)))
> cat(sprintf("Baseline size of globals: %.2f KiB\n", sizes[["FUN"]] / 1024))
Baseline size of globals: 1.80 KiB
> 
> message("- true positive ...")
- true positive ...
> options(future.globals.maxSize = 1L)
> res <- tryCatch({
+   y <- future_lapply(X, FUN = FUN)
+ }, error = identity)
[13:17:38.665] future_lapply() ...
[13:17:38.669] Number of chunks: 2
[13:17:38.669] getGlobalsAndPackagesXApply() ...
[13:17:38.669]  - future.globals: TRUE
[13:17:38.671] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> res <- NULL
> options(future.globals.maxSize = oMaxSize)
> 
> maxSize <- getOption("future.globals.maxSize")
> y <- future_lapply(X, FUN = FUN)
[13:17:38.671] future_lapply() ...
[13:17:38.675] Number of chunks: 2
[13:17:38.675] getGlobalsAndPackagesXApply() ...
[13:17:38.675]  - future.globals: TRUE
[13:17:38.677]  - globals found/used: [n=1] ‘FUN’
[13:17:38.677]  - needed namespaces: [n=0] 
[13:17:38.677] Finding globals ... DONE
[13:17:38.677]  - use_args: TRUE
[13:17:38.677]  - Getting '...' globals ...
[13:17:38.677]    - '...' content: [n=0] 
[13:17:38.677] List of 1
[13:17:38.677]  $ ...: list()
[13:17:38.677]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:38.677]  - attr(*, "where")=List of 1
[13:17:38.677]   ..$ ...:<environment: 0x55fba70d8018> 
[13:17:38.677]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:38.677]  - attr(*, "resolved")= logi TRUE
[13:17:38.677]  - attr(*, "total_size")= num NA
[13:17:38.680]  - Getting '...' globals ... DONE
[13:17:38.680] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:17:38.680] List of 2
[13:17:38.680]  $ ...future.FUN:function (x)  
[13:17:38.680]  $ ...          : list()
[13:17:38.680]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:38.680]  - attr(*, "where")=List of 2
[13:17:38.680]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:38.680]   ..$ ...          :<environment: 0x55fba70d8018> 
[13:17:38.680]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:38.680]  - attr(*, "resolved")= logi FALSE
[13:17:38.680]  - attr(*, "total_size")= num 1840
[13:17:38.683] Packages to be attached in all futures: [n=0] 
[13:17:38.683] getGlobalsAndPackagesXApply() ... DONE
[13:17:38.683] Number of futures (= number of chunks): 2
[13:17:38.683] Launching 2 futures (chunks) ...
[13:17:38.683] Chunk #1 of 2 ...
[13:17:38.684]  - Finding globals in 'X' for chunk #1 ...
[13:17:38.684]    + additional globals found: [n=0] 
[13:17:38.684]    + additional namespaces needed: [n=0] 
[13:17:38.684]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:38.684]  - Adjusted option 'future.globals.maxSize': 524288000 -> 5 * 524288000 = 2621440000 (bytes)
[13:17:38.684]  - seeds: <none>
[13:17:38.705] Created future:
[13:17:38.705] MultisessionFuture:
[13:17:38.705] Label: ‘future_lapply-1’
[13:17:38.705] Expression:
[13:17:38.705] {
[13:17:38.705]     do.call(function(...) {
[13:17:38.705]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:38.705]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:38.705]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:38.705]             on.exit(options(oopts), add = TRUE)
[13:17:38.705]         }
[13:17:38.705]         {
[13:17:38.705]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:38.705]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:38.705]                 ...future.FUN(...future.X_jj, ...)
[13:17:38.705]             })
[13:17:38.705]         }
[13:17:38.705]     }, args = future.call.arguments)
[13:17:38.705] }
[13:17:38.705] Lazy evaluation: FALSE
[13:17:38.705] Asynchronous evaluation: TRUE
[13:17:38.705] Local evaluation: TRUE
[13:17:38.705] Environment: R_GlobalEnv
[13:17:38.705] Capture standard output: TRUE
[13:17:38.705] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:38.705] Globals: 5 objects totaling 3.98 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:38.705] Packages: <none>
[13:17:38.705] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:38.705] Resolved: FALSE
[13:17:38.705] Value: <not collected>
[13:17:38.705] Conditions captured: <none>
[13:17:38.705] Early signaling: FALSE
[13:17:38.705] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:38.705] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:38.717] Chunk #1 of 2 ... DONE
[13:17:38.717] Chunk #2 of 2 ...
[13:17:38.717]  - Finding globals in 'X' for chunk #2 ...
[13:17:38.717]    + additional globals found: [n=0] 
[13:17:38.718]    + additional namespaces needed: [n=0] 
[13:17:38.718]  - Finding globals in 'X' for chunk #2 ... DONE
[13:17:38.718]  - Adjusted option 'future.globals.maxSize': 524288000 -> 5 * 524288000 = 2621440000 (bytes)
[13:17:38.718]  - seeds: <none>
[13:17:38.736] Created future:
[13:17:38.736] MultisessionFuture:
[13:17:38.736] Label: ‘future_lapply-2’
[13:17:38.736] Expression:
[13:17:38.736] {
[13:17:38.736]     do.call(function(...) {
[13:17:38.736]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:38.736]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:38.736]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:38.736]             on.exit(options(oopts), add = TRUE)
[13:17:38.736]         }
[13:17:38.736]         {
[13:17:38.736]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:38.736]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:38.736]                 ...future.FUN(...future.X_jj, ...)
[13:17:38.736]             })
[13:17:38.736]         }
[13:17:38.736]     }, args = future.call.arguments)
[13:17:38.736] }
[13:17:38.736] Lazy evaluation: FALSE
[13:17:38.736] Asynchronous evaluation: TRUE
[13:17:38.736] Local evaluation: TRUE
[13:17:38.736] Environment: R_GlobalEnv
[13:17:38.736] Capture standard output: TRUE
[13:17:38.736] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:38.736] Globals: 5 objects totaling 3.98 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:38.736] Packages: <none>
[13:17:38.736] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:38.736] Resolved: FALSE
[13:17:38.736] Value: <not collected>
[13:17:38.736] Conditions captured: <none>
[13:17:38.736] Early signaling: FALSE
[13:17:38.736] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:38.736] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:38.748] Chunk #2 of 2 ... DONE
[13:17:38.748] Launching 2 futures (chunks) ... DONE
[13:17:38.748] Resolving 2 futures (chunks) ...
[13:17:38.793]  - Number of value chunks collected: 2
[13:17:38.793] Resolving 2 futures (chunks) ... DONE
[13:17:38.793] Reducing values from 2 chunks ...
[13:17:38.793]  - Number of values collected after concatenation: 10
[13:17:38.793]  - Number of values expected: 10
[13:17:38.793] Reducing values from 2 chunks ... DONE
[13:17:38.793] future_lapply() ... DONE
> str(y)
List of 10
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
> stopifnot(all(sapply(y, FUN = identical, oMaxSize)))
> 
> message("- approximately invariant to chunk size ...")
- approximately invariant to chunk size ...
> maxSize <- sizes[["FUN"]] + sizes[["X"]] / length(X)
> options(future.globals.maxSize = maxSize)
> 
> for (chunk.size in c(1L, 2L, 5L, 10L)) {
+   y <- future_lapply(X, FUN = FUN, future.chunk.size = chunk.size)
+   str(y)
+   stopifnot(all(unlist(y) == maxSize))
+   cat(sprintf("maxSize = %g bytes\nfuture.globals.maxSize = %g bytes\n",
+               maxSize, getOption("future.globals.maxSize")))
+   stopifnot(getOption("future.globals.maxSize") == maxSize)
+ }
[13:17:38.801] future_lapply() ...
[13:17:38.805] Number of chunks: 10
[13:17:38.807] getGlobalsAndPackagesXApply() ...
[13:17:38.807]  - future.globals: TRUE
[13:17:38.810]  - globals found/used: [n=1] ‘FUN’
[13:17:38.810]  - needed namespaces: [n=0] 
[13:17:38.810] Finding globals ... DONE
[13:17:38.810]  - use_args: TRUE
[13:17:38.810]  - Getting '...' globals ...
[13:17:38.810]    - '...' content: [n=0] 
[13:17:38.810] List of 1
[13:17:38.810]  $ ...: list()
[13:17:38.810]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:38.810]  - attr(*, "where")=List of 1
[13:17:38.810]   ..$ ...:<environment: 0x55fba82ba448> 
[13:17:38.810]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:38.810]  - attr(*, "resolved")= logi TRUE
[13:17:38.810]  - attr(*, "total_size")= num NA
[13:17:38.813]  - Getting '...' globals ... DONE
[13:17:38.813] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:17:38.813] List of 2
[13:17:38.813]  $ ...future.FUN:function (x)  
[13:17:38.813]  $ ...          : list()
[13:17:38.813]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:38.813]  - attr(*, "where")=List of 2
[13:17:38.813]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:38.813]   ..$ ...          :<environment: 0x55fba82ba448> 
[13:17:38.813]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:38.813]  - attr(*, "resolved")= logi FALSE
[13:17:38.813]  - attr(*, "total_size")= num 1840
[13:17:38.816] Packages to be attached in all futures: [n=0] 
[13:17:38.816] getGlobalsAndPackagesXApply() ... DONE
[13:17:38.816] Number of futures (= number of chunks): 10
[13:17:38.816] Launching 10 futures (chunks) ...
[13:17:38.816] Chunk #1 of 10 ...
[13:17:38.817]  - Finding globals in 'X' for chunk #1 ...
[13:17:38.817]    + additional globals found: [n=0] 
[13:17:38.817]    + additional namespaces needed: [n=0] 
[13:17:38.817]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:38.817]  - seeds: <none>
[13:17:38.835] Created future:
[13:17:38.835] MultisessionFuture:
[13:17:38.835] Label: ‘future_lapply-1’
[13:17:38.835] Expression:
[13:17:38.835] {
[13:17:38.835]     do.call(function(...) {
[13:17:38.835]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:38.835]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:38.835]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:38.835]             on.exit(options(oopts), add = TRUE)
[13:17:38.835]         }
[13:17:38.835]         {
[13:17:38.835]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:38.835]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:38.835]                 ...future.FUN(...future.X_jj, ...)
[13:17:38.835]             })
[13:17:38.835]         }
[13:17:38.835]     }, args = future.call.arguments)
[13:17:38.835] }
[13:17:38.835] Lazy evaluation: FALSE
[13:17:38.835] Asynchronous evaluation: TRUE
[13:17:38.835] Local evaluation: TRUE
[13:17:38.835] Environment: R_GlobalEnv
[13:17:38.835] Capture standard output: TRUE
[13:17:38.835] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:38.835] Globals: 5 objects totaling 2.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:38.835] Packages: <none>
[13:17:38.835] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:38.835] Resolved: FALSE
[13:17:38.835] Value: <not collected>
[13:17:38.835] Conditions captured: <none>
[13:17:38.835] Early signaling: FALSE
[13:17:38.835] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:38.835] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:38.847] Chunk #1 of 10 ... DONE
[13:17:38.847] Chunk #2 of 10 ...
[13:17:38.847]  - Finding globals in 'X' for chunk #2 ...
[13:17:38.848]    + additional globals found: [n=0] 
[13:17:38.848]    + additional namespaces needed: [n=0] 
[13:17:38.848]  - Finding globals in 'X' for chunk #2 ... DONE
[13:17:38.848]  - seeds: <none>
[13:17:38.867] Created future:
[13:17:38.867] MultisessionFuture:
[13:17:38.867] Label: ‘future_lapply-2’
[13:17:38.867] Expression:
[13:17:38.867] {
[13:17:38.867]     do.call(function(...) {
[13:17:38.867]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:38.867]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:38.867]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:38.867]             on.exit(options(oopts), add = TRUE)
[13:17:38.867]         }
[13:17:38.867]         {
[13:17:38.867]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:38.867]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:38.867]                 ...future.FUN(...future.X_jj, ...)
[13:17:38.867]             })
[13:17:38.867]         }
[13:17:38.867]     }, args = future.call.arguments)
[13:17:38.867] }
[13:17:38.867] Lazy evaluation: FALSE
[13:17:38.867] Asynchronous evaluation: TRUE
[13:17:38.867] Local evaluation: TRUE
[13:17:38.867] Environment: R_GlobalEnv
[13:17:38.867] Capture standard output: TRUE
[13:17:38.867] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:38.867] Globals: 5 objects totaling 2.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:38.867] Packages: <none>
[13:17:38.867] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:38.867] Resolved: FALSE
[13:17:38.867] Value: <not collected>
[13:17:38.867] Conditions captured: <none>
[13:17:38.867] Early signaling: FALSE
[13:17:38.867] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:38.867] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:38.879] Chunk #2 of 10 ... DONE
[13:17:38.879] Chunk #3 of 10 ...
[13:17:38.879]  - Finding globals in 'X' for chunk #3 ...
[13:17:38.880]    + additional globals found: [n=0] 
[13:17:38.880]    + additional namespaces needed: [n=0] 
[13:17:38.880]  - Finding globals in 'X' for chunk #3 ... DONE
[13:17:38.880]  - seeds: <none>
[13:17:38.909] Created future:
[13:17:38.909] MultisessionFuture:
[13:17:38.909] Label: ‘future_lapply-3’
[13:17:38.909] Expression:
[13:17:38.909] {
[13:17:38.909]     do.call(function(...) {
[13:17:38.909]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:38.909]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:38.909]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:38.909]             on.exit(options(oopts), add = TRUE)
[13:17:38.909]         }
[13:17:38.909]         {
[13:17:38.909]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:38.909]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:38.909]                 ...future.FUN(...future.X_jj, ...)
[13:17:38.909]             })
[13:17:38.909]         }
[13:17:38.909]     }, args = future.call.arguments)
[13:17:38.909] }
[13:17:38.909] Lazy evaluation: FALSE
[13:17:38.909] Asynchronous evaluation: TRUE
[13:17:38.909] Local evaluation: TRUE
[13:17:38.909] Environment: R_GlobalEnv
[13:17:38.909] Capture standard output: TRUE
[13:17:38.909] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:38.909] Globals: 5 objects totaling 2.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:38.909] Packages: <none>
[13:17:38.909] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:38.909] Resolved: FALSE
[13:17:38.909] Value: <not collected>
[13:17:38.909] Conditions captured: <none>
[13:17:38.909] Early signaling: FALSE
[13:17:38.909] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:38.909] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:38.921] Chunk #3 of 10 ... DONE
[13:17:38.921] Chunk #4 of 10 ...
[13:17:38.921]  - Finding globals in 'X' for chunk #4 ...
[13:17:38.921]    + additional globals found: [n=0] 
[13:17:38.921]    + additional namespaces needed: [n=0] 
[13:17:38.922]  - Finding globals in 'X' for chunk #4 ... DONE
[13:17:38.922]  - seeds: <none>
[13:17:38.960] Created future:
[13:17:38.960] MultisessionFuture:
[13:17:38.960] Label: ‘future_lapply-4’
[13:17:38.960] Expression:
[13:17:38.960] {
[13:17:38.960]     do.call(function(...) {
[13:17:38.960]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:38.960]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:38.960]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:38.960]             on.exit(options(oopts), add = TRUE)
[13:17:38.960]         }
[13:17:38.960]         {
[13:17:38.960]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:38.960]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:38.960]                 ...future.FUN(...future.X_jj, ...)
[13:17:38.960]             })
[13:17:38.960]         }
[13:17:38.960]     }, args = future.call.arguments)
[13:17:38.960] }
[13:17:38.960] Lazy evaluation: FALSE
[13:17:38.960] Asynchronous evaluation: TRUE
[13:17:38.960] Local evaluation: TRUE
[13:17:38.960] Environment: R_GlobalEnv
[13:17:38.960] Capture standard output: TRUE
[13:17:38.960] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:38.960] Globals: 5 objects totaling 2.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:38.960] Packages: <none>
[13:17:38.960] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:38.960] Resolved: FALSE
[13:17:38.960] Value: <not collected>
[13:17:38.960] Conditions captured: <none>
[13:17:38.960] Early signaling: FALSE
[13:17:38.960] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:38.960] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:38.973] Chunk #4 of 10 ... DONE
[13:17:38.973] Chunk #5 of 10 ...
[13:17:38.973]  - Finding globals in 'X' for chunk #5 ...
[13:17:38.973]    + additional globals found: [n=0] 
[13:17:38.973]    + additional namespaces needed: [n=0] 
[13:17:38.974]  - Finding globals in 'X' for chunk #5 ... DONE
[13:17:38.974]  - seeds: <none>
[13:17:39.002] Created future:
[13:17:39.002] MultisessionFuture:
[13:17:39.002] Label: ‘future_lapply-5’
[13:17:39.002] Expression:
[13:17:39.002] {
[13:17:39.002]     do.call(function(...) {
[13:17:39.002]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:39.002]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:39.002]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:39.002]             on.exit(options(oopts), add = TRUE)
[13:17:39.002]         }
[13:17:39.002]         {
[13:17:39.002]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:39.002]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:39.002]                 ...future.FUN(...future.X_jj, ...)
[13:17:39.002]             })
[13:17:39.002]         }
[13:17:39.002]     }, args = future.call.arguments)
[13:17:39.002] }
[13:17:39.002] Lazy evaluation: FALSE
[13:17:39.002] Asynchronous evaluation: TRUE
[13:17:39.002] Local evaluation: TRUE
[13:17:39.002] Environment: R_GlobalEnv
[13:17:39.002] Capture standard output: TRUE
[13:17:39.002] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:39.002] Globals: 5 objects totaling 2.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:39.002] Packages: <none>
[13:17:39.002] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:39.002] Resolved: FALSE
[13:17:39.002] Value: <not collected>
[13:17:39.002] Conditions captured: <none>
[13:17:39.002] Early signaling: FALSE
[13:17:39.002] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:39.002] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:39.014] Chunk #5 of 10 ... DONE
[13:17:39.014] Chunk #6 of 10 ...
[13:17:39.014]  - Finding globals in 'X' for chunk #6 ...
[13:17:39.014]    + additional globals found: [n=0] 
[13:17:39.014]    + additional namespaces needed: [n=0] 
[13:17:39.014]  - Finding globals in 'X' for chunk #6 ... DONE
[13:17:39.015]  - seeds: <none>
[13:17:39.043] Created future:
[13:17:39.043] MultisessionFuture:
[13:17:39.043] Label: ‘future_lapply-6’
[13:17:39.043] Expression:
[13:17:39.043] {
[13:17:39.043]     do.call(function(...) {
[13:17:39.043]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:39.043]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:39.043]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:39.043]             on.exit(options(oopts), add = TRUE)
[13:17:39.043]         }
[13:17:39.043]         {
[13:17:39.043]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:39.043]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:39.043]                 ...future.FUN(...future.X_jj, ...)
[13:17:39.043]             })
[13:17:39.043]         }
[13:17:39.043]     }, args = future.call.arguments)
[13:17:39.043] }
[13:17:39.043] Lazy evaluation: FALSE
[13:17:39.043] Asynchronous evaluation: TRUE
[13:17:39.043] Local evaluation: TRUE
[13:17:39.043] Environment: R_GlobalEnv
[13:17:39.043] Capture standard output: TRUE
[13:17:39.043] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:39.043] Globals: 5 objects totaling 2.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:39.043] Packages: <none>
[13:17:39.043] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:39.043] Resolved: FALSE
[13:17:39.043] Value: <not collected>
[13:17:39.043] Conditions captured: <none>
[13:17:39.043] Early signaling: FALSE
[13:17:39.043] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:39.043] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:39.055] Chunk #6 of 10 ... DONE
[13:17:39.055] Chunk #7 of 10 ...
[13:17:39.055]  - Finding globals in 'X' for chunk #7 ...
[13:17:39.055]    + additional globals found: [n=0] 
[13:17:39.055]    + additional namespaces needed: [n=0] 
[13:17:39.055]  - Finding globals in 'X' for chunk #7 ... DONE
[13:17:39.055]  - seeds: <none>
[13:17:39.086] Created future:
[13:17:39.086] MultisessionFuture:
[13:17:39.086] Label: ‘future_lapply-7’
[13:17:39.086] Expression:
[13:17:39.086] {
[13:17:39.086]     do.call(function(...) {
[13:17:39.086]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:39.086]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:39.086]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:39.086]             on.exit(options(oopts), add = TRUE)
[13:17:39.086]         }
[13:17:39.086]         {
[13:17:39.086]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:39.086]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:39.086]                 ...future.FUN(...future.X_jj, ...)
[13:17:39.086]             })
[13:17:39.086]         }
[13:17:39.086]     }, args = future.call.arguments)
[13:17:39.086] }
[13:17:39.086] Lazy evaluation: FALSE
[13:17:39.086] Asynchronous evaluation: TRUE
[13:17:39.086] Local evaluation: TRUE
[13:17:39.086] Environment: R_GlobalEnv
[13:17:39.086] Capture standard output: TRUE
[13:17:39.086] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:39.086] Globals: 5 objects totaling 2.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:39.086] Packages: <none>
[13:17:39.086] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:39.086] Resolved: FALSE
[13:17:39.086] Value: <not collected>
[13:17:39.086] Conditions captured: <none>
[13:17:39.086] Early signaling: FALSE
[13:17:39.086] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:39.086] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:39.098] Chunk #7 of 10 ... DONE
[13:17:39.098] Chunk #8 of 10 ...
[13:17:39.098]  - Finding globals in 'X' for chunk #8 ...
[13:17:39.098]    + additional globals found: [n=0] 
[13:17:39.098]    + additional namespaces needed: [n=0] 
[13:17:39.098]  - Finding globals in 'X' for chunk #8 ... DONE
[13:17:39.099]  - seeds: <none>
[13:17:39.128] Created future:
[13:17:39.128] MultisessionFuture:
[13:17:39.128] Label: ‘future_lapply-8’
[13:17:39.128] Expression:
[13:17:39.128] {
[13:17:39.128]     do.call(function(...) {
[13:17:39.128]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:39.128]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:39.128]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:39.128]             on.exit(options(oopts), add = TRUE)
[13:17:39.128]         }
[13:17:39.128]         {
[13:17:39.128]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:39.128]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:39.128]                 ...future.FUN(...future.X_jj, ...)
[13:17:39.128]             })
[13:17:39.128]         }
[13:17:39.128]     }, args = future.call.arguments)
[13:17:39.128] }
[13:17:39.128] Lazy evaluation: FALSE
[13:17:39.128] Asynchronous evaluation: TRUE
[13:17:39.128] Local evaluation: TRUE
[13:17:39.128] Environment: R_GlobalEnv
[13:17:39.128] Capture standard output: TRUE
[13:17:39.128] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:39.128] Globals: 5 objects totaling 2.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:39.128] Packages: <none>
[13:17:39.128] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:39.128] Resolved: FALSE
[13:17:39.128] Value: <not collected>
[13:17:39.128] Conditions captured: <none>
[13:17:39.128] Early signaling: FALSE
[13:17:39.128] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:39.128] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:39.140] Chunk #8 of 10 ... DONE
[13:17:39.140] Chunk #9 of 10 ...
[13:17:39.141]  - Finding globals in 'X' for chunk #9 ...
[13:17:39.141]    + additional globals found: [n=0] 
[13:17:39.141]    + additional namespaces needed: [n=0] 
[13:17:39.141]  - Finding globals in 'X' for chunk #9 ... DONE
[13:17:39.141]  - seeds: <none>
[13:17:39.171] Created future:
[13:17:39.171] MultisessionFuture:
[13:17:39.171] Label: ‘future_lapply-9’
[13:17:39.171] Expression:
[13:17:39.171] {
[13:17:39.171]     do.call(function(...) {
[13:17:39.171]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:39.171]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:39.171]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:39.171]             on.exit(options(oopts), add = TRUE)
[13:17:39.171]         }
[13:17:39.171]         {
[13:17:39.171]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:39.171]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:39.171]                 ...future.FUN(...future.X_jj, ...)
[13:17:39.171]             })
[13:17:39.171]         }
[13:17:39.171]     }, args = future.call.arguments)
[13:17:39.171] }
[13:17:39.171] Lazy evaluation: FALSE
[13:17:39.171] Asynchronous evaluation: TRUE
[13:17:39.171] Local evaluation: TRUE
[13:17:39.171] Environment: R_GlobalEnv
[13:17:39.171] Capture standard output: TRUE
[13:17:39.171] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:39.171] Globals: 5 objects totaling 2.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:39.171] Packages: <none>
[13:17:39.171] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:39.171] Resolved: FALSE
[13:17:39.171] Value: <not collected>
[13:17:39.171] Conditions captured: <none>
[13:17:39.171] Early signaling: FALSE
[13:17:39.171] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:39.171] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:39.183] Chunk #9 of 10 ... DONE
[13:17:39.183] Chunk #10 of 10 ...
[13:17:39.184]  - Finding globals in 'X' for chunk #10 ...
[13:17:39.184]    + additional globals found: [n=0] 
[13:17:39.184]    + additional namespaces needed: [n=0] 
[13:17:39.184]  - Finding globals in 'X' for chunk #10 ... DONE
[13:17:39.184]  - seeds: <none>
[13:17:39.214] Created future:
[13:17:39.215] MultisessionFuture:
[13:17:39.215] Label: ‘future_lapply-10’
[13:17:39.215] Expression:
[13:17:39.215] {
[13:17:39.215]     do.call(function(...) {
[13:17:39.215]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:39.215]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:39.215]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:39.215]             on.exit(options(oopts), add = TRUE)
[13:17:39.215]         }
[13:17:39.215]         {
[13:17:39.215]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:39.215]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:39.215]                 ...future.FUN(...future.X_jj, ...)
[13:17:39.215]             })
[13:17:39.215]         }
[13:17:39.215]     }, args = future.call.arguments)
[13:17:39.215] }
[13:17:39.215] Lazy evaluation: FALSE
[13:17:39.215] Asynchronous evaluation: TRUE
[13:17:39.215] Local evaluation: TRUE
[13:17:39.215] Environment: R_GlobalEnv
[13:17:39.215] Capture standard output: TRUE
[13:17:39.215] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:39.215] Globals: 5 objects totaling 2.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:17:39.215] Packages: <none>
[13:17:39.215] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:39.215] Resolved: FALSE
[13:17:39.215] Value: <not collected>
[13:17:39.215] Conditions captured: <none>
[13:17:39.215] Early signaling: FALSE
[13:17:39.215] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:39.215] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:39.227] Chunk #10 of 10 ... DONE
[13:17:39.227] Launching 10 futures (chunks) ... DONE
[13:17:39.227] Resolving 10 futures (chunks) ...
[13:17:39.264]  - Number of value chunks collected: 10
[13:17:39.265] Resolving 10 futures (chunks) ... DONE
[13:17:39.265] Reducing values from 10 chunks ...
[13:17:39.265]  - Number of values collected after concatenation: 10
[13:17:39.265]  - Number of values expected: 10
[13:17:39.265] Reducing values from 10 chunks ... DONE
[13:17:39.265] future_lapply() ... DONE
List of 10
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[13:17:39.267] future_lapply() ...
[13:17:39.271] Number of chunks: 5
[13:17:39.272] getGlobalsAndPackagesXApply() ...
[13:17:39.272]  - future.globals: TRUE
[13:17:39.273]  - globals found/used: [n=1] ‘FUN’
[13:17:39.274]  - needed namespaces: [n=0] 
[13:17:39.274] Finding globals ... DONE
[13:17:39.274]  - use_args: TRUE
[13:17:39.274]  - Getting '...' globals ...
[13:17:39.274]    - '...' content: [n=0] 
[13:17:39.274] List of 1
[13:17:39.274]  $ ...: list()
[13:17:39.274]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:39.274]  - attr(*, "where")=List of 1
[13:17:39.274]   ..$ ...:<environment: 0x55fba7250a60> 
[13:17:39.274]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:39.274]  - attr(*, "resolved")= logi TRUE
[13:17:39.274]  - attr(*, "total_size")= num NA
[13:17:39.277]  - Getting '...' globals ... DONE
[13:17:39.277] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:17:39.277] List of 2
[13:17:39.277]  $ ...future.FUN:function (x)  
[13:17:39.277]  $ ...          : list()
[13:17:39.277]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:39.277]  - attr(*, "where")=List of 2
[13:17:39.277]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:39.277]   ..$ ...          :<environment: 0x55fba7250a60> 
[13:17:39.277]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:39.277]  - attr(*, "resolved")= logi FALSE
[13:17:39.277]  - attr(*, "total_size")= num 1840
[13:17:39.280] Packages to be attached in all futures: [n=0] 
[13:17:39.280] getGlobalsAndPackagesXApply() ... DONE
[13:17:39.280] Number of futures (= number of chunks): 5
[13:17:39.280] Launching 5 futures (chunks) ...
[13:17:39.280] Chunk #1 of 5 ...
[13:17:39.280]  - Finding globals in 'X' for chunk #1 ...
[13:17:39.281]    + additional globals found: [n=0] 
[13:17:39.281]    + additional namespaces needed: [n=0] 
[13:17:39.281]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:39.281]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[13:17:39.281]  - seeds: <none>
[13:17:39.301] Created future:
[13:17:39.301] MultisessionFuture:
[13:17:39.301] Label: ‘future_lapply-1’
[13:17:39.301] Expression:
[13:17:39.301] {
[13:17:39.301]     do.call(function(...) {
[13:17:39.301]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:39.301]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:39.301]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:39.301]             on.exit(options(oopts), add = TRUE)
[13:17:39.301]         }
[13:17:39.301]         {
[13:17:39.301]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:39.301]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:39.301]                 ...future.FUN(...future.X_jj, ...)
[13:17:39.301]             })
[13:17:39.301]         }
[13:17:39.301]     }, args = future.call.arguments)
[13:17:39.301] }
[13:17:39.301] Lazy evaluation: FALSE
[13:17:39.301] Asynchronous evaluation: TRUE
[13:17:39.301] Local evaluation: TRUE
[13:17:39.301] Environment: R_GlobalEnv
[13:17:39.301] Capture standard output: TRUE
[13:17:39.301] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:39.301] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:17:39.301] Packages: <none>
[13:17:39.301] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:39.301] Resolved: FALSE
[13:17:39.301] Value: <not collected>
[13:17:39.301] Conditions captured: <none>
[13:17:39.301] Early signaling: FALSE
[13:17:39.301] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:39.301] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:39.313] Chunk #1 of 5 ... DONE
[13:17:39.313] Chunk #2 of 5 ...
[13:17:39.313]  - Finding globals in 'X' for chunk #2 ...
[13:17:39.314]    + additional globals found: [n=0] 
[13:17:39.314]    + additional namespaces needed: [n=0] 
[13:17:39.314]  - Finding globals in 'X' for chunk #2 ... DONE
[13:17:39.314]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[13:17:39.314]  - seeds: <none>
[13:17:39.332] Created future:
[13:17:39.333] MultisessionFuture:
[13:17:39.333] Label: ‘future_lapply-2’
[13:17:39.333] Expression:
[13:17:39.333] {
[13:17:39.333]     do.call(function(...) {
[13:17:39.333]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:39.333]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:39.333]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:39.333]             on.exit(options(oopts), add = TRUE)
[13:17:39.333]         }
[13:17:39.333]         {
[13:17:39.333]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:39.333]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:39.333]                 ...future.FUN(...future.X_jj, ...)
[13:17:39.333]             })
[13:17:39.333]         }
[13:17:39.333]     }, args = future.call.arguments)
[13:17:39.333] }
[13:17:39.333] Lazy evaluation: FALSE
[13:17:39.333] Asynchronous evaluation: TRUE
[13:17:39.333] Local evaluation: TRUE
[13:17:39.333] Environment: R_GlobalEnv
[13:17:39.333] Capture standard output: TRUE
[13:17:39.333] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:39.333] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:17:39.333] Packages: <none>
[13:17:39.333] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:39.333] Resolved: FALSE
[13:17:39.333] Value: <not collected>
[13:17:39.333] Conditions captured: <none>
[13:17:39.333] Early signaling: FALSE
[13:17:39.333] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:39.333] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:39.344] Chunk #2 of 5 ... DONE
[13:17:39.344] Chunk #3 of 5 ...
[13:17:39.345]  - Finding globals in 'X' for chunk #3 ...
[13:17:39.345]    + additional globals found: [n=0] 
[13:17:39.345]    + additional namespaces needed: [n=0] 
[13:17:39.345]  - Finding globals in 'X' for chunk #3 ... DONE
[13:17:39.346]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[13:17:39.346]  - seeds: <none>
[13:17:39.375] Created future:
[13:17:39.375] MultisessionFuture:
[13:17:39.375] Label: ‘future_lapply-3’
[13:17:39.375] Expression:
[13:17:39.375] {
[13:17:39.375]     do.call(function(...) {
[13:17:39.375]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:39.375]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:39.375]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:39.375]             on.exit(options(oopts), add = TRUE)
[13:17:39.375]         }
[13:17:39.375]         {
[13:17:39.375]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:39.375]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:39.375]                 ...future.FUN(...future.X_jj, ...)
[13:17:39.375]             })
[13:17:39.375]         }
[13:17:39.375]     }, args = future.call.arguments)
[13:17:39.375] }
[13:17:39.375] Lazy evaluation: FALSE
[13:17:39.375] Asynchronous evaluation: TRUE
[13:17:39.375] Local evaluation: TRUE
[13:17:39.375] Environment: R_GlobalEnv
[13:17:39.375] Capture standard output: TRUE
[13:17:39.375] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:39.375] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:17:39.375] Packages: <none>
[13:17:39.375] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:39.375] Resolved: FALSE
[13:17:39.375] Value: <not collected>
[13:17:39.375] Conditions captured: <none>
[13:17:39.375] Early signaling: FALSE
[13:17:39.375] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:39.375] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:39.387] Chunk #3 of 5 ... DONE
[13:17:39.387] Chunk #4 of 5 ...
[13:17:39.387]  - Finding globals in 'X' for chunk #4 ...
[13:17:39.388]    + additional globals found: [n=0] 
[13:17:39.388]    + additional namespaces needed: [n=0] 
[13:17:39.388]  - Finding globals in 'X' for chunk #4 ... DONE
[13:17:39.388]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[13:17:39.388]  - seeds: <none>
[13:17:39.417] Created future:
[13:17:39.417] MultisessionFuture:
[13:17:39.417] Label: ‘future_lapply-4’
[13:17:39.417] Expression:
[13:17:39.417] {
[13:17:39.417]     do.call(function(...) {
[13:17:39.417]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:39.417]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:39.417]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:39.417]             on.exit(options(oopts), add = TRUE)
[13:17:39.417]         }
[13:17:39.417]         {
[13:17:39.417]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:39.417]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:39.417]                 ...future.FUN(...future.X_jj, ...)
[13:17:39.417]             })
[13:17:39.417]         }
[13:17:39.417]     }, args = future.call.arguments)
[13:17:39.417] }
[13:17:39.417] Lazy evaluation: FALSE
[13:17:39.417] Asynchronous evaluation: TRUE
[13:17:39.417] Local evaluation: TRUE
[13:17:39.417] Environment: R_GlobalEnv
[13:17:39.417] Capture standard output: TRUE
[13:17:39.417] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:39.417] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:17:39.417] Packages: <none>
[13:17:39.417] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:39.417] Resolved: FALSE
[13:17:39.417] Value: <not collected>
[13:17:39.417] Conditions captured: <none>
[13:17:39.417] Early signaling: FALSE
[13:17:39.417] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:39.417] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:39.428] Chunk #4 of 5 ... DONE
[13:17:39.428] Chunk #5 of 5 ...
[13:17:39.429]  - Finding globals in 'X' for chunk #5 ...
[13:17:39.431]    + additional globals found: [n=0] 
[13:17:39.431]    + additional namespaces needed: [n=0] 
[13:17:39.432]  - Finding globals in 'X' for chunk #5 ... DONE
[13:17:39.432]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[13:17:39.432]  - seeds: <none>
[13:17:39.463] Created future:
[13:17:39.463] MultisessionFuture:
[13:17:39.463] Label: ‘future_lapply-5’
[13:17:39.463] Expression:
[13:17:39.463] {
[13:17:39.463]     do.call(function(...) {
[13:17:39.463]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:39.463]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:39.463]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:39.463]             on.exit(options(oopts), add = TRUE)
[13:17:39.463]         }
[13:17:39.463]         {
[13:17:39.463]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:39.463]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:39.463]                 ...future.FUN(...future.X_jj, ...)
[13:17:39.463]             })
[13:17:39.463]         }
[13:17:39.463]     }, args = future.call.arguments)
[13:17:39.463] }
[13:17:39.463] Lazy evaluation: FALSE
[13:17:39.463] Asynchronous evaluation: TRUE
[13:17:39.463] Local evaluation: TRUE
[13:17:39.463] Environment: R_GlobalEnv
[13:17:39.463] Capture standard output: TRUE
[13:17:39.463] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:39.463] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:17:39.463] Packages: <none>
[13:17:39.463] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:39.463] Resolved: FALSE
[13:17:39.463] Value: <not collected>
[13:17:39.463] Conditions captured: <none>
[13:17:39.463] Early signaling: FALSE
[13:17:39.463] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:39.463] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:39.475] Chunk #5 of 5 ... DONE
[13:17:39.475] Launching 5 futures (chunks) ... DONE
[13:17:39.475] Resolving 5 futures (chunks) ...
[13:17:39.519]  - Number of value chunks collected: 5
[13:17:39.520] Resolving 5 futures (chunks) ... DONE
[13:17:39.520] Reducing values from 5 chunks ...
[13:17:39.520]  - Number of values collected after concatenation: 10
[13:17:39.520]  - Number of values expected: 10
[13:17:39.520] Reducing values from 5 chunks ... DONE
[13:17:39.520] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[13:17:39.524] future_lapply() ...
[13:17:39.528] Number of chunks: 2
[13:17:39.528] getGlobalsAndPackagesXApply() ...
[13:17:39.528]  - future.globals: TRUE
[13:17:39.530]  - globals found/used: [n=1] ‘FUN’
[13:17:39.530]  - needed namespaces: [n=0] 
[13:17:39.531] Finding globals ... DONE
[13:17:39.531]  - use_args: TRUE
[13:17:39.531]  - Getting '...' globals ...
[13:17:39.531]    - '...' content: [n=0] 
[13:17:39.531] List of 1
[13:17:39.531]  $ ...: list()
[13:17:39.531]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:39.531]  - attr(*, "where")=List of 1
[13:17:39.531]   ..$ ...:<environment: 0x55fba694e3e8> 
[13:17:39.531]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:39.531]  - attr(*, "resolved")= logi TRUE
[13:17:39.531]  - attr(*, "total_size")= num NA
[13:17:39.534]  - Getting '...' globals ... DONE
[13:17:39.534] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:17:39.534] List of 2
[13:17:39.534]  $ ...future.FUN:function (x)  
[13:17:39.534]  $ ...          : list()
[13:17:39.534]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:39.534]  - attr(*, "where")=List of 2
[13:17:39.534]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:39.534]   ..$ ...          :<environment: 0x55fba694e3e8> 
[13:17:39.534]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:39.534]  - attr(*, "resolved")= logi FALSE
[13:17:39.534]  - attr(*, "total_size")= num 1840
[13:17:39.537] Packages to be attached in all futures: [n=0] 
[13:17:39.537] getGlobalsAndPackagesXApply() ... DONE
[13:17:39.537] Number of futures (= number of chunks): 2
[13:17:39.537] Launching 2 futures (chunks) ...
[13:17:39.537] Chunk #1 of 2 ...
[13:17:39.538]  - Finding globals in 'X' for chunk #1 ...
[13:17:39.538]    + additional globals found: [n=0] 
[13:17:39.538]    + additional namespaces needed: [n=0] 
[13:17:39.538]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:39.538]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[13:17:39.538]  - seeds: <none>
[13:17:39.557] Created future:
[13:17:39.557] MultisessionFuture:
[13:17:39.557] Label: ‘future_lapply-1’
[13:17:39.557] Expression:
[13:17:39.557] {
[13:17:39.557]     do.call(function(...) {
[13:17:39.557]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:39.557]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:39.557]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:39.557]             on.exit(options(oopts), add = TRUE)
[13:17:39.557]         }
[13:17:39.557]         {
[13:17:39.557]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:39.557]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:39.557]                 ...future.FUN(...future.X_jj, ...)
[13:17:39.557]             })
[13:17:39.557]         }
[13:17:39.557]     }, args = future.call.arguments)
[13:17:39.557] }
[13:17:39.557] Lazy evaluation: FALSE
[13:17:39.557] Asynchronous evaluation: TRUE
[13:17:39.557] Local evaluation: TRUE
[13:17:39.557] Environment: R_GlobalEnv
[13:17:39.557] Capture standard output: TRUE
[13:17:39.557] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:39.557] Globals: 5 objects totaling 4.04 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:17:39.557] Packages: <none>
[13:17:39.557] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:39.557] Resolved: FALSE
[13:17:39.557] Value: <not collected>
[13:17:39.557] Conditions captured: <none>
[13:17:39.557] Early signaling: FALSE
[13:17:39.557] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:39.557] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:39.569] Chunk #1 of 2 ... DONE
[13:17:39.569] Chunk #2 of 2 ...
[13:17:39.569]  - Finding globals in 'X' for chunk #2 ...
[13:17:39.569]    + additional globals found: [n=0] 
[13:17:39.569]    + additional namespaces needed: [n=0] 
[13:17:39.570]  - Finding globals in 'X' for chunk #2 ... DONE
[13:17:39.570]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[13:17:39.570]  - seeds: <none>
[13:17:39.589] Created future:
[13:17:39.589] MultisessionFuture:
[13:17:39.589] Label: ‘future_lapply-2’
[13:17:39.589] Expression:
[13:17:39.589] {
[13:17:39.589]     do.call(function(...) {
[13:17:39.589]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:39.589]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:39.589]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:39.589]             on.exit(options(oopts), add = TRUE)
[13:17:39.589]         }
[13:17:39.589]         {
[13:17:39.589]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:39.589]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:39.589]                 ...future.FUN(...future.X_jj, ...)
[13:17:39.589]             })
[13:17:39.589]         }
[13:17:39.589]     }, args = future.call.arguments)
[13:17:39.589] }
[13:17:39.589] Lazy evaluation: FALSE
[13:17:39.589] Asynchronous evaluation: TRUE
[13:17:39.589] Local evaluation: TRUE
[13:17:39.589] Environment: R_GlobalEnv
[13:17:39.589] Capture standard output: TRUE
[13:17:39.589] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:39.589] Globals: 5 objects totaling 4.04 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:17:39.589] Packages: <none>
[13:17:39.589] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:39.589] Resolved: FALSE
[13:17:39.589] Value: <not collected>
[13:17:39.589] Conditions captured: <none>
[13:17:39.589] Early signaling: FALSE
[13:17:39.589] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:39.589] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:39.601] Chunk #2 of 2 ... DONE
[13:17:39.601] Launching 2 futures (chunks) ... DONE
[13:17:39.601] Resolving 2 futures (chunks) ...
[13:17:39.639]  - Number of value chunks collected: 2
[13:17:39.639] Resolving 2 futures (chunks) ... DONE
[13:17:39.639] Reducing values from 2 chunks ...
[13:17:39.639]  - Number of values collected after concatenation: 10
[13:17:39.639]  - Number of values expected: 10
[13:17:39.639] Reducing values from 2 chunks ... DONE
[13:17:39.639] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[13:17:39.646] future_lapply() ...
[13:17:39.650] Number of chunks: 1
[13:17:39.650] getGlobalsAndPackagesXApply() ...
[13:17:39.650]  - future.globals: TRUE
[13:17:39.652]  - globals found/used: [n=1] ‘FUN’
[13:17:39.652]  - needed namespaces: [n=0] 
[13:17:39.652] Finding globals ... DONE
[13:17:39.652]  - use_args: TRUE
[13:17:39.652]  - Getting '...' globals ...
[13:17:39.652]    - '...' content: [n=0] 
[13:17:39.653] List of 1
[13:17:39.653]  $ ...: list()
[13:17:39.653]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:39.653]  - attr(*, "where")=List of 1
[13:17:39.653]   ..$ ...:<environment: 0x55fba7fb0460> 
[13:17:39.653]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:39.653]  - attr(*, "resolved")= logi TRUE
[13:17:39.653]  - attr(*, "total_size")= num NA
[13:17:39.655]  - Getting '...' globals ... DONE
[13:17:39.655] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:17:39.655] List of 2
[13:17:39.655]  $ ...future.FUN:function (x)  
[13:17:39.655]  $ ...          : list()
[13:17:39.655]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:39.655]  - attr(*, "where")=List of 2
[13:17:39.655]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:39.655]   ..$ ...          :<environment: 0x55fba7fb0460> 
[13:17:39.655]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:39.655]  - attr(*, "resolved")= logi FALSE
[13:17:39.655]  - attr(*, "total_size")= num 1840
[13:17:39.658] Packages to be attached in all futures: [n=0] 
[13:17:39.658] getGlobalsAndPackagesXApply() ... DONE
[13:17:39.658] Number of futures (= number of chunks): 1
[13:17:39.658] Launching 1 futures (chunks) ...
[13:17:39.659] Chunk #1 of 1 ...
[13:17:39.659]  - Finding globals in 'X' for chunk #1 ...
[13:17:39.659]    + additional globals found: [n=0] 
[13:17:39.659]    + additional namespaces needed: [n=0] 
[13:17:39.659]  - Finding globals in 'X' for chunk #1 ... DONE
[13:17:39.659]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[13:17:39.659]  - seeds: <none>
[13:17:39.677] Created future:
[13:17:39.677] MultisessionFuture:
[13:17:39.677] Label: ‘future_lapply-1’
[13:17:39.677] Expression:
[13:17:39.677] {
[13:17:39.677]     do.call(function(...) {
[13:17:39.677]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:17:39.677]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:17:39.677]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:17:39.677]             on.exit(options(oopts), add = TRUE)
[13:17:39.677]         }
[13:17:39.677]         {
[13:17:39.677]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:17:39.677]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:17:39.677]                 ...future.FUN(...future.X_jj, ...)
[13:17:39.677]             })
[13:17:39.677]         }
[13:17:39.677]     }, args = future.call.arguments)
[13:17:39.677] }
[13:17:39.677] Lazy evaluation: FALSE
[13:17:39.677] Asynchronous evaluation: TRUE
[13:17:39.677] Local evaluation: TRUE
[13:17:39.677] Environment: R_GlobalEnv
[13:17:39.677] Capture standard output: TRUE
[13:17:39.677] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:17:39.677] Globals: 5 objects totaling 6.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:17:39.677] Packages: <none>
[13:17:39.677] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:17:39.677] Resolved: FALSE
[13:17:39.677] Value: <not collected>
[13:17:39.677] Conditions captured: <none>
[13:17:39.677] Early signaling: FALSE
[13:17:39.677] Owner process: f301735d-ba4b-2f8e-662f-dd054c1ce640
[13:17:39.677] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:17:39.689] Chunk #1 of 1 ... DONE
[13:17:39.689] Launching 1 futures (chunks) ... DONE
[13:17:39.689] Resolving 1 futures (chunks) ...
[13:17:39.732]  - Number of value chunks collected: 1
[13:17:39.732] Resolving 1 futures (chunks) ... DONE
[13:17:39.732] Reducing values from 1 chunks ...
[13:17:39.732]  - Number of values collected after concatenation: 10
[13:17:39.732]  - Number of values expected: 10
[13:17:39.732] Reducing values from 1 chunks ... DONE
[13:17:39.732] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
> y <- NULL
> options(future.globals.maxSize = oMaxSize)
> 
> 
> message("*** future_lapply() - too large ... DONE")
*** future_lapply() - too large ... DONE
> 
> 
> message("*** future_lapply() - globals exceptions ...")
*** future_lapply() - globals exceptions ...
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = 42)
+ }, error = identity)
[13:17:39.736] future_lapply() ...
[13:17:39.740] Number of chunks: 1
[13:17:39.740] getGlobalsAndPackagesXApply() ...
[13:17:39.740] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = list(1))
+ }, error = identity)
[13:17:39.740] future_lapply() ...
[13:17:39.744] Number of chunks: 1
[13:17:39.744] getGlobalsAndPackagesXApply() ...
[13:17:39.744]  - future.globals: <name-value list> with names ‘1’
[13:17:39.744] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = "...future.FUN")
+ }, error = identity)
[13:17:39.744] future_lapply() ...
[13:17:39.748] Number of chunks: 1
[13:17:39.748] getGlobalsAndPackagesXApply() ...
[13:17:39.748]  - future.globals: ‘...future.FUN’
[13:17:39.748]  - use_args: TRUE
[13:17:39.748] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = "...future.FUN")
+ }, error = identity)
[13:17:39.749] future_lapply() ...
[13:17:39.752] Number of chunks: 1
[13:17:39.752] getGlobalsAndPackagesXApply() ...
[13:17:39.752]  - future.globals: ‘...future.FUN’
[13:17:39.752]  - use_args: TRUE
[13:17:39.752] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> ...future.elements_ii <- 42L
> X <- list(function() 2 * ...future.elements_ii)
> res <- tryCatch({
+   y <- future_lapply(X, FUN = function(f) f())
+ }, error = identity)
[13:17:39.753] future_lapply() ...
[13:17:39.756] Number of chunks: 1
[13:17:39.756] getGlobalsAndPackagesXApply() ...
[13:17:39.756]  - future.globals: TRUE
[13:17:39.758]  - globals found/used: [n=1] ‘FUN’
[13:17:39.758]  - needed namespaces: [n=0] 
[13:17:39.758] Finding globals ... DONE
[13:17:39.758]  - use_args: TRUE
[13:17:39.758]  - Getting '...' globals ...
[13:17:39.758]    - '...' content: [n=0] 
[13:17:39.758] List of 1
[13:17:39.758]  $ ...: list()
[13:17:39.758]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:39.758]  - attr(*, "where")=List of 1
[13:17:39.758]   ..$ ...:<environment: 0x55fba8652d78> 
[13:17:39.758]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:39.758]  - attr(*, "resolved")= logi TRUE
[13:17:39.758]  - attr(*, "total_size")= num NA
[13:17:39.761]  - Getting '...' globals ... DONE
[13:17:39.761] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:17:39.761] List of 2
[13:17:39.761]  $ ...future.FUN:function (f)  
[13:17:39.761]  $ ...          : list()
[13:17:39.761]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:17:39.761]  - attr(*, "where")=List of 2
[13:17:39.761]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:17:39.761]   ..$ ...          :<environment: 0x55fba8652d78> 
[13:17:39.761]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:17:39.761]  - attr(*, "resolved")= logi FALSE
[13:17:39.761]  - attr(*, "total_size")= num 336
[13:17:39.764] Packages to be attached in all futures: [n=0] 
[13:17:39.764] getGlobalsAndPackagesXApply() ... DONE
[13:17:39.764] Number of futures (= number of chunks): 1
[13:17:39.764] Launching 1 futures (chunks) ...
[13:17:39.764] Chunk #1 of 1 ...
[13:17:39.764]  - Finding globals in 'X' for chunk #1 ...
[13:17:39.766]    + additional globals found: [n=1] ‘...future.elements_ii’
[13:17:39.766]    + additional namespaces needed: [n=0] 
> stopifnot(inherits(res, "error"))
> 
> message("*** future_lapply() - globals exceptions ... DONE")
*** future_lapply() - globals exceptions ... DONE
> 
> source("incl/end.R")
> 
