
R version 4.3.0 (2023-04-21) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(testthat)
> library(igraph)

Attaching package: ‘igraph’

The following object is masked from ‘package:testthat’:

    compare

The following objects are masked from ‘package:stats’:

    decompose, spectrum

The following object is masked from ‘package:base’:

    union

> 
> test_check("igraph")
Starting 2 test processes
[ FAIL 91 | WARN 0 | SKIP 19 | PASS 3203 ]

══ Skipped tests ═══════════════════════════════════════════════════════════════
• getRversion() >= 4.3 is TRUE (1)
• nested igraph call handling not implemented yet (1)
• No graph package (2)
• On CRAN (14)
• TRUE is TRUE (1)

══ Failed tests ════════════════════════════════════════════════════════════════
── Error ('test-vs-es.R:3:3'): we can create vertex/edge seqs ──────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─V(g) %&&% expect_true(TRUE) at test-vs-es.R:3:3
  2. │ └─base::eval(rhs, envir = parent.frame())
  3. ├─testthat::expect_true(TRUE)
  4. │ └─testthat:::expect_waldo_constant(act, TRUE, info = info)
  5. │   └─testthat:::waldo_compare(...)
  6. └─base::loadNamespace(x)
  7.   ├─base::namespaceImportFrom(...)
  8.   │ └─base::asNamespace(ns)
  9.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 10.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 11.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 12.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 13.           └─base::get(genname, envir = envir)
── Error ('test-vs-es.R:20:3'): vs/es keeps names ──────────────────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(vs$name, names(vs)) at test-vs-es.R:20:3
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-vs-es.R:39:3'): vs/es refers to the graph ──────────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_identical(get_vs_graph(vs), g) at test-vs-es.R:39:3
  2. │ └─testthat:::expect_waldo_equal("identical", act, exp, info, ...)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-vs-es.R:50:3'): vs/es refers to the original graph ─────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_identical(get_vs_graph(vs), g2) at test-vs-es.R:50:3
  2. │ └─testthat:::expect_waldo_equal("identical", act, exp, info, ...)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-vs-es.R:62:3'): vs/es references are weak ──────────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_null(get_vs_graph(vs)) at test-vs-es.R:62:3
  2. │ └─testthat:::expect_waldo_constant(act, NULL, info = info)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-vs-es.R:79:3'): save/load breaks references ────────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_null(get_vs_graph(vs)) at test-vs-es.R:79:3
  2. │ └─testthat:::expect_waldo_constant(act, NULL, info = info)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-vs-es.R:94:3'): vs/es keeps names after graph is deleted ───────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(names(vs), letters[1:10]) at test-vs-es.R:94:3
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-vs-es.R:111:3'): both edge and vertex names ────────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(as.vector(es), 1:10) at test-vs-es.R:111:3
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-vs-es.R:213:3'): unconnected vs/es can be reused with the same graph ──
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(degree(g, v = vs), rep(2, 10)) at test-vs-es.R:213:3
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-vs-es.R:224:3'): indexing without arguments ────────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(ignore_attr = TRUE, V(g), x) at test-vs-es.R:224:3
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-vs-operators.R:6:3'): c on attached vs ─────────────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(ignore_attr = TRUE, c(vg, vg2), V(g)) at test-vs-operators.R:6:3
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-vs-operators.R:33:3'): c on detached vs ────────────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(ignore_attr = TRUE, c(vg, vg2), vg3) at test-vs-operators.R:33:3
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-vs-operators.R:45:3'): c on attached vs, names ─────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(ignore_attr = TRUE, c(vg, vg2), V(g)) at test-vs-operators.R:45:3
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-vs-operators.R:75:3'): c on detached vs, names ─────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(ignore_attr = TRUE, c(vg, vg2), vg3) at test-vs-operators.R:75:3
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-vs-operators.R:93:3'): union on attached vs ────────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(ignore_attr = TRUE, vu, V(g)) at test-vs-operators.R:93:3
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-vs-operators.R:117:3'): union on detached vs ───────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(ignore_attr = TRUE, vu, vg) at test-vs-operators.R:117:3
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-vs-operators.R:135:3'): union on attached vs, names ────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(ignore_attr = TRUE, vu, V(g)) at test-vs-operators.R:135:3
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-vs-operators.R:171:3'): union on detached vs, names ────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(ignore_attr = TRUE, vu, vg) at test-vs-operators.R:171:3
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-vs-operators.R:210:3'): intersection on attached vs ────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(ignore_attr = TRUE, vi1, v12) at test-vs-operators.R:210:3
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-vs-operators.R:246:3'): intersection on detached vs ────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(ignore_attr = TRUE, vi1, v12) at test-vs-operators.R:246:3
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-vs-operators.R:280:3'): intersection on attached vs, names ─────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(ignore_attr = TRUE, vi1, v12) at test-vs-operators.R:280:3
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-vs-operators.R:323:3'): intersection on detached vs, names ─────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(ignore_attr = TRUE, vi1, v12) at test-vs-operators.R:323:3
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-vs-operators.R:372:3'): difference on attached vs ──────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(ignore_attr = TRUE, vd1, vr1) at test-vs-operators.R:372:3
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-vs-operators.R:406:3'): difference on detached vs ──────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(ignore_attr = TRUE, vd1, vr1) at test-vs-operators.R:406:3
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-vs-operators.R:438:3'): difference on attached vs, names ───────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(ignore_attr = TRUE, vd1, vr1) at test-vs-operators.R:438:3
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-vs-operators.R:484:3'): difference on detached vs, names ───────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(ignore_attr = TRUE, vd1, vr1) at test-vs-operators.R:484:3
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-vs-operators.R:512:5'): rev on attached vs ─────────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(ignore_attr = TRUE, vg2, vgr) at test-vs-operators.R:512:5
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-vs-operators.R:525:5'): rev on detached vs ─────────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(ignore_attr = TRUE, vg2, vgr) at test-vs-operators.R:525:5
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-vs-operators.R:537:5'): rev on attached vs, names ──────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(ignore_attr = TRUE, vg2, vgr) at test-vs-operators.R:537:5
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-vs-operators.R:552:5'): rev on detached vs, names ──────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(ignore_attr = TRUE, vg2, vgr) at test-vs-operators.R:552:5
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-vs-operators.R:568:3'): unique on attached vs ──────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─base::sapply(...) at test-vs-operators.R:568:3
  2. │ └─base::lapply(X = X, FUN = FUN, ...)
  3. │   └─igraph (local) FUN(X[[i]], ...)
  4. │     └─testthat::expect_equal(ignore_attr = TRUE, vg, vr) at test-vs-operators.R:572:5
  5. │       └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  6. │         └─testthat:::waldo_compare(...)
  7. └─base::loadNamespace(x)
  8.   ├─base::namespaceImportFrom(...)
  9.   │ └─base::asNamespace(ns)
 10.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 11.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 12.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 13.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 14.           └─base::get(genname, envir = envir)
── Error ('test-vs-operators.R:577:3'): unique on detached vs ──────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─base::sapply(...) at test-vs-operators.R:577:3
  2. │ └─base::lapply(X = X, FUN = FUN, ...)
  3. │   └─igraph (local) FUN(X[[i]], ...)
  4. │     └─testthat::expect_equal(ignore_attr = TRUE, vg, vr) at test-vs-operators.R:584:5
  5. │       └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  6. │         └─testthat:::waldo_compare(...)
  7. └─base::loadNamespace(x)
  8.   ├─base::namespaceImportFrom(...)
  9.   │ └─base::asNamespace(ns)
 10.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 11.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 12.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 13.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 14.           └─base::get(genname, envir = envir)
── Error ('test-vs-operators.R:589:3'): unique on attached vs, names ───────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─base::sapply(...) at test-vs-operators.R:589:3
  2. │ └─base::lapply(X = X, FUN = FUN, ...)
  3. │   └─igraph (local) FUN(X[[i]], ...)
  4. │     └─testthat::expect_equal(ignore_attr = TRUE, vg, vr) at test-vs-operators.R:594:5
  5. │       └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  6. │         └─testthat:::waldo_compare(...)
  7. └─base::loadNamespace(x)
  8.   ├─base::namespaceImportFrom(...)
  9.   │ └─base::asNamespace(ns)
 10.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 11.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 12.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 13.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 14.           └─base::get(genname, envir = envir)
── Error ('test-vs-operators.R:599:3'): unique on detached vs, names ───────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─base::sapply(...) at test-vs-operators.R:599:3
  2. │ └─base::lapply(X = X, FUN = FUN, ...)
  3. │   └─igraph (local) FUN(X[[i]], ...)
  4. │     └─testthat::expect_equal(ignore_attr = TRUE, vg, vr) at test-vs-operators.R:607:5
  5. │       └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  6. │         └─testthat:::waldo_compare(...)
  7. └─base::loadNamespace(x)
  8.   ├─base::namespaceImportFrom(...)
  9.   │ └─base::asNamespace(ns)
 10.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 11.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 12.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 13.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 14.           └─base::get(genname, envir = envir)
── Error ('test-weakref.R:7:3'): we can create weak references ─────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_identical(typeof(vs), "weakref") at test-weakref.R:7:3
  2. │ └─testthat:::expect_waldo_equal("identical", act, exp, info, ...)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-weakref.R:20:3'): weak references are weak ─────────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_null(weak_ref_key(vs)) at test-weakref.R:20:3
  2. │ └─testthat:::expect_waldo_constant(act, NULL, info = info)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-weakref.R:35:3'): weak reference finalizer is called ───────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(hello, "world") at test-weakref.R:35:3
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-weakref.R:46:3'): weak reference on an embedded env ────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_null(weak_ref_key(vs)) at test-weakref.R:46:3
  2. │ └─testthat:::expect_waldo_constant(act, NULL, info = info)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-weakref.R:60:3'): embed myself, and weak ref ───────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_null(weak_ref_key(vs)) at test-weakref.R:60:3
  2. │ └─testthat:::expect_waldo_constant(act, NULL, info = info)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-weakref.R:79:3'): embed myself, and weak ref as attribute ──────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_null(weak_ref_key(attr(z, "env"))) at test-weakref.R:79:3
  2. │ └─testthat:::expect_waldo_constant(act, NULL, info = info)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-weakref.R:87:3'): weak refs work for vs ────────────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_true(!is.null(get_vs_ref(g))) at test-weakref.R:87:3
  2. │ └─testthat:::expect_waldo_constant(act, TRUE, info = info)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-watts.strogatz.game.R:7:5'): sample_smallworld works ───────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_false(any(which_loop(g))) at test-watts.strogatz.game.R:7:5
  2. │ └─testthat:::expect_waldo_constant(act, FALSE, info = info)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-add.edges.R:7:3'): add_edges keeps edge id order ───────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(ec, ec2) at test-add.edges.R:7:3
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-add.edges.R:16:3'): add_edges adds attributes ──────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(ecount(g3), equals(length(edges)/2)) at test-add.edges.R:16:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-add.edges.R:25:3'): add_edges unknown attributes to NA ─────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_true(all(is.na(E(g4)$weight[seq_len(length(edges)/2)]))) at test-add.edges.R:25:3
  2. │ └─testthat:::expect_waldo_constant(act, TRUE, info = info)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-add.edges.R:36:3'): add_edges appends attributes properly ──────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(E(g5)$weight, equals(c(weights1, weights2))) at test-add.edges.R:36:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-scan.R:12:3'): General scan-stat works, US, scan-0, unweighted ──
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(digest::digest(s1), equals("659ffaaf303742f0806a79b8ff3d88b3")) at test-scan.R:12:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-scan.R:17:3'): General scan-stat works, US, scan-0, weighted ───
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(digest::digest(s1), equals("0f8d7ac831389cea04e0bfc5e2510c73")) at test-scan.R:17:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-scan.R:23:3'): General scan-stat works, US, scan-1, unweighted ──
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(digest::digest(s1), equals("df0fd77489f70cc47f682dc31d9f52f5")) at test-scan.R:23:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-scan.R:28:3'): General scan-stat works, US, scan-1, weighted ───
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(digest::digest(s1), equals("af720916ae4b49881745d2dcdd614401")) at test-scan.R:28:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-scan.R:33:3'): General scan-stat works, US, scan-2, unweighted ──
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(digest::digest(s1), equals("6f47f47abde25d00d615dd56826cca5a")) at test-scan.R:33:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-scan.R:38:3'): General scan-stat works, US, scan-2, weighted ───
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(digest::digest(s1), equals("e02e9d58168ee5d53850497f6d4c76b0")) at test-scan.R:38:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-scan.R:43:3'): General scan-stat works, THEM, scan-0, unweighted ──
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(digest::digest(s1), equals("f584f7d287f8f89f5f7882165ca41b8c")) at test-scan.R:43:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-scan.R:48:3'): General scan-stat works, THEM, scan-0, weighted ──
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(digest::digest(s1), equals("213db8e7517d1e6406da3dbd55281ed1")) at test-scan.R:48:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-scan.R:53:3'): General scan-stat works, THEM, scan-1, unweighted ──
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(digest::digest(s1), equals("e9ca740ebba2fd1db4abe939954b2638")) at test-scan.R:53:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-scan.R:58:3'): General scan-stat works, THEM, scan-1, weighted ──
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(digest::digest(s1), equals("a98e9a03eda7feaae8524dc9348ad74b")) at test-scan.R:58:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-scan.R:63:3'): General scan-stat works, THEM, scan-2, unweighted ──
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(digest::digest(s1), equals("a3237a9a55e9d86ab471c81a291eb03b")) at test-scan.R:63:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-scan.R:68:3'): General scan-stat works, THEM, scan-2, weighted ──
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(digest::digest(s1), equals("995d0b6a952834ff6e534efc2cfb917b")) at test-scan.R:68:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-scan.R:74:3'): Neighborhoods work for us ───────────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(digest::digest(s1), equals("df0fd77489f70cc47f682dc31d9f52f5")) at test-scan.R:74:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-scan.R:88:3'): Neighborhoods work for them ─────────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(digest::digest(s1), equals("e9ca740ebba2fd1db4abe939954b2638")) at test-scan.R:88:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-scan.R:112:3'): General scan-stat works, US, scan-1, unweighted, directed ──
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(digest::digest(s1o), equals("ac463c21b2b6bc91abf82f0141a4a7d4")) at test-scan.R:112:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-scan.R:120:3'): General scan-stat works, US, scan-1, weighted, directed ──
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(digest::digest(s1o), equals("da8e14f2ba63efc74b5fd7b9d8f79bbc")) at test-scan.R:120:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-scan.R:131:3'): Issue 18 is resolved ───────────────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(...) at test-scan.R:131:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-scan.R:149:3'): Issue 18 is really resolved ────────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(sc1, equals(sc2)) at test-scan.R:149:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-scan.R:163:3'): Issue 20 is resolved ───────────────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(ls, equals(correct)) at test-scan.R:163:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-scan.R:169:3'): FUN argument works, #32 ────────────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(r1, equals(rep(2, 10))) at test-scan.R:169:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-all.st.cuts.R:6:3'): all.st.cuts works ─────────────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(unvs(cc$cuts), equals(list(1, 2, 3, 4))) at test-all.st.cuts.R:6:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-alpha.centrality.R:4:3'): dense alpha_centrality works ─────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(ac1, equals(c(1, 1, 3, 4, 5))) at test-alpha.centrality.R:4:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-alpha.centrality.R:18:3'): sparse alpha_centrality works ───────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(ac1, equals(c(1, 1, 3, 4, 5))) at test-alpha.centrality.R:18:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-alpha.centrality.R:37:3'): weighted dense alpha_centrality works ──
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(...) at test-alpha.centrality.R:37:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-alpha.centrality.R:51:3'): weighted sparse alpha_centrality works ──
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(...) at test-alpha.centrality.R:51:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-alpha.centrality.R:65:3'): undirected, alpha centrality works, #653 ──
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(ac1, equals(ac2)) at test-alpha.centrality.R:65:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-are.connected.R:3:3'): are_adjacent works ──────────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_true(are_adjacent(g, "A", "B")) at test-are.connected.R:3:3
  2. │ └─testthat:::expect_waldo_constant(act, TRUE, info = info)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-arpack.R:4:3'): arpack works for identity matrix ───────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(res$values, equals(c(1, 1))) at test-arpack.R:4:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-arpack.R:27:3'): arpack works on the Laplacian of a star ───────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(r1$values, equals(r2$values[1])) at test-arpack.R:27:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-arpack.R:50:3'): arpack works for non-symmetric matrices ───────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(...) at test-arpack.R:50:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-articulation.points.R:8:3'): articulation_points works ─────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(sort(which(deg == max(deg))), equals(sort(ap))) at test-articulation.points.R:8:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-as.directed.R:8:3'): as.directed works ─────────────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(degree(g), equals(degree(g2)/2)) at test-as.directed.R:8:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-as.directed.R:24:3'): as.directed keeps attributes ─────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(g2$name, equals(g$name)) at test-as.directed.R:24:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-as.undirected.R:13:3'): as.undirected keeps attributes ─────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(g2$name, equals(g$name)) at test-as.undirected.R:13:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-assortativity.R:20:3'): assortativity works ────────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(asd, equals(as)) at test-assortativity.R:20:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-assortativity.R:51:3'): nominal assortativity works ────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(an, equals(an2)) at test-assortativity.R:51:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-attributes.R:7:3'): assigning and querying attributes work ─────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(V(ring)$name, equals(LETTERS[seq_len(vcount(ring))])) at test-attributes.R:7:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-attributes.R:27:3'): brackering works ──────────────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(vertex_attr(g, name = "weight"), equals(1:4)) at test-attributes.R:27:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-attributes.R:59:3'): brackering works with a function ──────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(vertex_attr(g, name = "weight"), equals(1:4)) at test-attributes.R:59:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-attributes.R:83:3'): brackering works with shortcuts ───────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─igraph:::expect_that(vertex_attr(g, name = "weight"), equals(1:4)) at test-attributes.R:83:3
  2. │ ├─base::suppressWarnings(condition(object)) at igraph-tests/testthat/helper.R:24:3
  3. │ │ └─base::withCallingHandlers(...)
  4. │ └─testthat (local) condition(object)
  5. │   └─testthat::expect_equal(x, expected, ..., expected.label = label)
  6. │     └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  7. │       └─testthat:::waldo_compare(...)
  8. └─base::loadNamespace(x)
  9.   ├─base::namespaceImportFrom(...)
 10.   │ └─base::asNamespace(ns)
 11.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 13.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 14.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 15.           └─base::get(genname, envir = envir)
── Error ('test-attributes.R:99:3'): we can query all attributes at once ───────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(graph_attr(g), structure(list(), .Names = character(0))) at test-attributes.R:99:3
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-attributes.R:125:3'): we can query single attributes with the generic functions ──
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(graph_attr(g, "name"), "toy") at test-attributes.R:125:3
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-attributes.R:141:3'): we can query a subset of vertices ────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(...) at test-attributes.R:141:3
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-attributes.R:163:3'): we can set all attributes at once ────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(graph_attr(g2), graph_attr(g)) at test-attributes.R:163:3
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-attributes.R:183:3'): we can set all attributes some vertices/edges ──
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_equal(...) at test-attributes.R:183:3
  2. │ └─testthat:::expect_waldo_equal("equal", act, exp, info, ..., tolerance = tolerance)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)

[ FAIL 91 | WARN 0 | SKIP 19 | PASS 3203 ]
Error: Test failures
Execution halted
