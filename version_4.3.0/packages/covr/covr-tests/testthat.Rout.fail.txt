
R version 4.3.0 (2023-04-21) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ops <- options("crayon.enabled" = FALSE, warn = 1)
> library(testthat)
> library("covr")
> 
> # Skip tests on Solaris as gcc is not in the PATH and I do not have an easy way
> # to mimic the CRAN build environment
> if (!tolower(Sys.info()[["sysname"]]) == "sunos") {
+   Sys.setenv("R_TESTS" = "")
+   test_check("covr")
+ }
[ FAIL 3 | WARN 0 | SKIP 9 | PASS 296 ]

══ Skipped tests ═══════════════════════════════════════════════════════════════
• getRversion() >= "4.0.0" is TRUE (1)
• On CRAN (8)

══ Failed tests ════════════════════════════════════════════════════════════════
── Error ('test-gcov.R:3:3'): parse_gcov parses files properly ─────────────────
<packageNotFoundError/error/condition>
Error in `loadNamespace(x)`: there is no package called ‘mockery’
Backtrace:
    ▆
 1. └─base::loadNamespace(x) at test-gcov.R:3:2
 2.   └─base::withRestarts(stop(cond), retry_loadNamespace = function() NULL)
 3.     └─base (local) withOneRestart(expr, restarts[[1L]])
 4.       └─base (local) doWithOneRestart(return(expr), restart)
── Failure ('test-gitlab.R:8:3'): gitlab ───────────────────────────────────────
`gitlab(coverage = cov)` threw an error.
Message: The `DT` and `htmltools` packages must be installed to use `covr::report()`
Class:   simpleError/error/condition
Backtrace:
    ▆
 1. ├─testthat::expect_error(gitlab(coverage = cov), NA) at test-gitlab.R:8:2
 2. │ └─testthat:::quasi_capture(...)
 3. │   ├─testthat (local) .capture(...)
 4. │   │ └─base::withCallingHandlers(...)
 5. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
 6. └─covr::gitlab(coverage = cov)
 7.   └─covr::report(coverage, file = out_file, browse = FALSE)
── Failure ('test-gitlab.R:10:3'): gitlab ──────────────────────────────────────
file.exists("TestS4/public/coverage.html") is not TRUE

`actual`:   FALSE
`expected`: TRUE 

[ FAIL 3 | WARN 0 | SKIP 9 | PASS 296 ]
Error: Test failures
Execution halted
