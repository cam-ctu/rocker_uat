
R version 4.3.0 (2023-04-21) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "callr"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('callr')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("default_repos")
> ### * default_repos
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: default_repos
> ### Title: Default value for the 'repos' option in callr subprocesses
> ### Aliases: default_repos
> 
> ### ** Examples
> 
> default_repos()
                         CRAN 
"https://cloud.r-project.org" 
> 
> 
> 
> cleanEx()
> nameEx("r")
> ### * r
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: r
> ### Title: Evaluate an expression in another R session
> ### Aliases: r r_safe
> 
> ### ** Examples
> 
> ## Don't show: 
> if (FALSE) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ # Workspace is empty
+ r(function() ls())
+ 
+ # library path is the same by default
+ r(function() .libPaths())
+ .libPaths()
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("r_bg")
> ### * r_bg
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: r_bg
> ### Title: Evaluate an expression in another R session, in the background
> ### Aliases: r_bg
> 
> ### ** Examples
> 
> ## Don't show: 
> if (FALSE) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ rx <- r_bg(function() 1 + 2)
+ 
+ # wait until it is done
+ rx$wait()
+ rx$is_alive()
+ rx$get_result()
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("r_process")
> ### * r_process
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: r_process
> ### Title: External R Process
> ### Aliases: r_process
> 
> ### ** Examples
> 
> ## Don't show: 
> if (FALSE) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ ## List all options and their default values:
+ r_process_options()
+ 
+ ## Start an R process in the background, wait for it, get result
+ opts <- r_process_options(func = function() 1 + 1)
+ rp <- r_process$new(opts)
+ rp$wait()
+ rp$get_result()
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("r_process_options")
> ### * r_process_options
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: r_process_options
> ### Title: Create options for an r_process object
> ### Aliases: r_process_options
> 
> ### ** Examples
> 
> ## List all options and their default values:
> r_process_options()
$func
NULL

$args
list()

$libpath
[1] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"     

$repos
                         CRAN 
"https://cloud.r-project.org" 

$stdout
[1] "|"

$stderr
[1] "|"

$poll_connection
[1] TRUE

$error
[1] "error"

$cmdargs
[1] "--slave"      "--no-save"    "--no-restore"

$system_profile
[1] FALSE

$user_profile
[1] "project"

$env
character(0)

$supervise
[1] FALSE

$load_hook
 [1] "{\n"                                                                                  
 [2] "    while (\"tools:callr\" %in% search()) detach(\"tools:callr\")\n"                  
 [3] "    env <- readRDS(\"/tmp/RtmpP4pGVK/callr-env-88316c2d7c27\")\n"                     
 [4] "    do.call(\"attach\", list(env, pos = length(search()), name = \"tools:callr\"))\n" 
 [5] "    data <- env$`__callr_data__`\n"                                                   
 [6] "    data$pxlib <- data$load_client_lib(data$sofile[[paste0(\"arch-\", \n"             
 [7] "        .Platform$r_arch)]], data$pxdir)\n"                                           
 [8] "    options(error = function() invokeRestart(\"abort\"))\n"                           
 [9] "    rm(list = c(\"data\", \"env\"))\n"                                                
[10] "    lapply(c(\"R_ENVIRON\", \"R_ENVIRON_USER\", \"R_PROFILE\", \"R_PROFILE_USER\", \n"
[11] "        \"R_LIBS\", \"R_LIBS_USER\", \"R_LIBS_SITE\"), function(var) {\n"             
[12] "        bakvar <- paste0(\"CALLR_\", var, \"_BAK\")\n"                                
[13] "        val <- Sys.getenv(bakvar, NA_character_)\n"                                   
[14] "        if (!is.na(val)) {\n"                                                         
[15] "            do.call(\"Sys.setenv\", structure(list(val), names = var))\n"             
[16] "        }\n"                                                                          
[17] "        else {\n"                                                                     
[18] "            Sys.unsetenv(var)\n"                                                      
[19] "        }\n"                                                                          
[20] "        Sys.unsetenv(bakvar)\n"                                                       
[21] "    })\n"                                                                             
[22] "    Sys.unsetenv(\"CALLR_CHILD_R_LIBS\")\n"                                           
[23] "    Sys.unsetenv(\"CALLR_CHILD_R_LIBS_SITE\")\n"                                      
[24] "    Sys.unsetenv(\"CALLR_CHILD_R_LIBS_USER\")\n"                                      
[25] "}\n"                                                                                  

$extra
list()

$package
[1] FALSE

$arch
[1] "same"

> 
> 
> 
> cleanEx()
> nameEx("r_session")
> ### * r_session
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: r_session
> ### Title: External R Session
> ### Aliases: r_session
> 
> ### ** Examples
> 
> ## Don't show: 
> if (FALSE) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ rs <- r_ression$new()
+ 
+ rs$run(function() 1 + 2)
+ 
+ rs$call(function() Sys.sleep(1))
+ rs$get_state()
+ 
+ rs$poll_process(-1)
+ rs$get_state()
+ rs$read()
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("r_session_options")
> ### * r_session_options
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: r_session_options
> ### Title: Create options for an r_session object
> ### Aliases: r_session_options
> 
> ### ** Examples
> 
> r_session_options()
$func
NULL

$args
NULL

$libpath
[1] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"     

$repos
                         CRAN 
"https://cloud.r-project.org" 

$stdout
NULL

$stderr
NULL

$error
[1] "error"

$cmdargs
[1] "--no-readline" "--slave"       "--no-save"     "--no-restore" 

$system_profile
[1] FALSE

$user_profile
[1] "project"

$env
  TERM 
"dumb" 

$supervise
[1] FALSE

$load_hook
NULL

$extra
list()

$arch
[1] "same"

> 
> 
> 
> cleanEx()
> nameEx("r_vanilla")
> ### * r_vanilla
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: r_vanilla
> ### Title: Run an R child process, with no configuration
> ### Aliases: r_vanilla
> 
> ### ** Examples
> 
> ## Don't show: 
> if (FALSE) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ # Compare to r()
+ r(function() .libPaths())
+ r_vanilla(function() .libPaths())
+ 
+ r(function() getOption("repos"))
+ r_vanilla(function() getOption("repos"))
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("rcmd")
> ### * rcmd
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: rcmd
> ### Title: Run an R CMD command
> ### Aliases: rcmd rcmd_safe
> 
> ### ** Examples
> 
> ## Don't show: 
> if (FALSE) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ rcmd("config", "CC")
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("rcmd_process")
> ### * rcmd_process
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: rcmd_process
> ### Title: External R CMD Process
> ### Aliases: rcmd_process
> 
> ### ** Examples
> 
> ## Don't show: 
> if (FALSE) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ options <- rcmd_process_options(cmd = "config", cmdargs = "CC")
+ rp <- rcmd_process$new(options)
+ rp$wait()
+ rp$read_output_lines()
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("rcmd_process_options")
> ### * rcmd_process_options
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: rcmd_process_options
> ### Title: Create options for an rcmd_process object
> ### Aliases: rcmd_process_options
> 
> ### ** Examples
> 
> ## List all options and their default values:
> rcmd_process_options()
$cmd
NULL

$cmdargs
character(0)

$libpath
[1] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"     

$stdout
[1] "|"

$stderr
[1] "|"

$poll_connection
[1] TRUE

$repos
                         CRAN 
"https://cloud.r-project.org" 

$system_profile
[1] FALSE

$user_profile
[1] "project"

$env
            CYGWIN            R_TESTS          R_BROWSER        R_PDFVIEWER 
"nodosfilewarning"                 ""            "false"            "false" 

$wd
[1] "."

$supervise
[1] FALSE

$extra
list()

$arch
[1] "same"

> 
> 
> 
> cleanEx()
> nameEx("rscript_process")
> ### * rscript_process
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: rscript_process
> ### Title: External 'Rscript' process
> ### Aliases: rscript_process
> 
> ### ** Examples
> 
> ## Don't show: 
> if (FALSE) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ options <- rscript_process_options(script = "script.R")
+ rp <- rscript_process$new(options)
+ rp$wait()
+ rp$read_output_lines()
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("rscript_process_options")
> ### * rscript_process_options
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: rscript_process_options
> ### Title: Create options for an rscript_process object
> ### Aliases: rscript_process_options
> 
> ### ** Examples
> 
> ## List all options and their default values:
> rscript_process_options()
$script
NULL

$cmdargs
character(0)

$libpath
[1] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"     

$stdout
[1] "|"

$stderr
[1] "|"

$poll_connection
[1] TRUE

$repos
                         CRAN 
"https://cloud.r-project.org" 

$system_profile
[1] FALSE

$user_profile
[1] "project"

$env
            CYGWIN            R_TESTS          R_BROWSER        R_PDFVIEWER 
"nodosfilewarning"                 ""            "false"            "false" 

$wd
[1] "."

$color
[1] FALSE

$extra
list()

$arch
[1] "same"

> 
> 
> 
> cleanEx()
> nameEx("supported_archs")
> ### * supported_archs
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: supported_archs
> ### Title: Find supported sub-architectures for the current R installation
> ### Aliases: supported_archs
> 
> ### ** Examples
> 
> supported_archs()
[1] ""
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.08 0.015 0.095 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
