
R version 4.3.0 (2023-04-21) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(testthat)
> library(gitcreds)
> 
> test_check("gitcreds", reporter = "progress")
✔ | F W S  OK | Context

⠏ |         0 | cache                                                           
⠏ |         0 | format                                                          
⠙ | 2       0 | format                                                          
✖ | 2       0 | format [0.1s]
────────────────────────────────────────────────────────────────────────────────
Error ('test-format.R:12:3'): format.gitcreds
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
  1. testthat::expect_true(any(grepl("arbitrary", fmt, fixed = TRUE)))
       at test-format.R:12:3
  4. base::loadNamespace(x)
  7. base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8. base::registerS3methods(nsInfo$S3methods, package, env)
  9. base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10. base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11. base::get(genname, envir = envir)

Error ('test-format.R:28:3'): print.gitcreds
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
  1. testthat::expect_equal(ret, cred)
       at test-format.R:28:3
  4. base::loadNamespace(x)
  7. base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8. base::registerS3methods(nsInfo$S3methods, package, env)
  9. base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10. base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11. base::get(genname, envir = envir)
────────────────────────────────────────────────────────────────────────────────

⠏ |         0 | gitcreds-delete                                                 
⠏ |         0 | gitcreds-get                                                    
⠏ |         0 | gitcreds-list                                                   
⠏ |         0 | gitcreds-set                                                    
⠏ |         0 | list-helpers                                                    
⠏ |         0 | standalone                                                      
✖ | 1       0 | standalone
────────────────────────────────────────────────────────────────────────────────
Error ('test-standalone.R:7:3'): gitcreds is standalone
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
  1. testthat::expect_identical(environmentName(topenv(f)), "base")
       at test-standalone.R:7:3
  4. base::loadNamespace(x)
  7. base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8. base::registerS3methods(nsInfo$S3methods, package, env)
  9. base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10. base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11. base::get(genname, envir = envir)
────────────────────────────────────────────────────────────────────────────────

⠏ |         0 | username                                                        
⠏ |         0 | utils                                                           
-> Your current credentials for 'https://github.com':

  protocol : https
  host     : github.com
  username : user
  password : <-- hidden -->
  arbitrary: xxxxxxxxx


⠙ | 7       5 | utils                                                           
✖ | 9       5 | utils [0.1s]
────────────────────────────────────────────────────────────────────────────────
Error ('test-utils.R:6:3'): set_env() round trip works with just 1 env var
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
  1. testthat::expect_equal(Sys.getenv("FOO"), "abc")
       at test-utils.R:6:3
  4. base::loadNamespace(x)
  7. base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8. base::registerS3methods(nsInfo$S3methods, package, env)
  9. base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10. base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11. base::get(genname, envir = envir)

Error ('test-utils.R:18:3'): set_env() NA unsets
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
  1. testthat::expect_equal(Sys.getenv("FOO", ""), "")
       at test-utils.R:18:3
  4. base::loadNamespace(x)
  7. base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8. base::registerS3methods(nsInfo$S3methods, package, env)
  9. base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10. base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11. base::get(genname, envir = envir)

Error ('test-utils.R:30:3'): env var set to empty string is same as unset
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
  1. testthat::expect_null(x)
       at test-utils.R:30:3
  4. base::loadNamespace(x)
  7. base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8. base::registerS3methods(nsInfo$S3methods, package, env)
  9. base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10. base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11. base::get(genname, envir = envir)

Error ('test-utils.R:43:3'): ack
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
  1. testthat::expect_false(gitcreds$ack("https://github.com", cred))
       at test-utils.R:43:3
  4. base::loadNamespace(x)
  7. base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8. base::registerS3methods(nsInfo$S3methods, package, env)
  9. base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10. base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11. base::get(genname, envir = envir)

Error ('test-utils.R:82:3'): get_url_username
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
  1. testthat::expect_equal(...)
       at test-utils.R:82:3
  4. base::loadNamespace(x)
  7. base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8. base::registerS3methods(nsInfo$S3methods, package, env)
  9. base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10. base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11. base::get(genname, envir = envir)

Error ('test-utils.R:108:3'): null_file
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
  1. testthat::expect_equal(readLines(gitcreds$null_file()), character())
       at test-utils.R:108:3
  4. base::loadNamespace(x)
  7. base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8. base::registerS3methods(nsInfo$S3methods, package, env)
  9. base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10. base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11. base::get(genname, envir = envir)

Error ('test-utils.R:123:3'): msg
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
  1. testthat::expect_equal(out, "foobar")
       at test-utils.R:123:3
  4. base::loadNamespace(x)
  7. base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8. base::registerS3methods(nsInfo$S3methods, package, env)
  9. base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10. base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11. base::get(genname, envir = envir)

Error ('test-utils.R:136:3'): default_output
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
  1. testthat::expect_equal(gitcreds$default_output(), stdout())
       at test-utils.R:136:3
  4. base::loadNamespace(x)
  7. base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8. base::registerS3methods(nsInfo$S3methods, package, env)
  9. base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10. base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11. base::get(genname, envir = envir)

Error ('test-utils.R:159:3'): is_interactive
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
  1. withr::with_options(...)
       at test-utils.R:159:3
  6. base::loadNamespace(x)
  9. base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 10. base::registerS3methods(nsInfo$S3methods, package, env)
 11. base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 12. base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 13. base::get(genname, envir = envir)
────────────────────────────────────────────────────────────────────────────────
Maximum number of failures exceeded; quitting at end of file.
ℹ Increase this number with (e.g.) `testthat::set_max_fails(Inf)` 

══ Results ═════════════════════════════════════════════════════════════════════
Duration: 0.5 s

[ FAIL 12 | WARN 0 | SKIP 0 | PASS 5 ]
══ Terminated early ════════════════════════════════════════════════════════════
Error: Test failures
No deferred expressions to run
Execution halted
