
R version 4.3.0 (2023-04-21) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> if (base::require("testthat", quietly = TRUE)) {
+     pkg   <- "lme4"
+     require(pkg, character.only=TRUE, quietly=TRUE)
+     if(getRversion() < "3.5.0") { withAutoprint <- identity ; prt <- print } else { prt <- identity }
+     if(Sys.getenv("USER") %in% c("maechler", "bbolker")) withAutoprint({
+         ## for developers' sake:
+         lP <- .libPaths() # ---- .libPaths() : ----
+         prt(lP)
+         ## ---- Entries in .libPaths()[1] : ----
+         prt(list.files(lP[1], include.dirs=TRUE))
+         prt(sessionInfo())
+         prt(packageDescription("Matrix"))
+         ## 'lme4' from packageDescription "file" :
+         prt(attr(packageDescription("lme4"), "file"))
+     })
+     test_check(pkg)
+     ##======== ^^^
+     print(warnings()) # TODO? catch most of these by expect_warning(..)
+ } else {
+     cat( "package 'testthat' not available, cannot run unit tests\n" )
+ }
[1] 0.05
~recipe
<environment: 0x5640f8ce5a30>
[1] 0.05
NULL
[ FAIL 2 | WARN 2 | SKIP 1 | PASS 616 ]

══ Skipped tests ═══════════════════════════════════════════════════════════════
• On CRAN (1)

══ Failed tests ════════════════════════════════════════════════════════════════
── Error ('test-factors.R:45:5'): savvy factor level ordering ──────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_true(check_f(), "'savvy' factor levels match brute-force version") at test-factors.R:45:5
  2. │ └─testthat:::expect_waldo_constant(act, TRUE, info = info)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-glmer.R:361:5'): glmer with etastart ───────────────────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_true(!identical(fixef(m1), fixef(m1E))) at test-glmer.R:361:5
  2. │ └─testthat:::expect_waldo_constant(act, TRUE, info = info)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)

[ FAIL 2 | WARN 2 | SKIP 1 | PASS 616 ]
Error: Test failures
No deferred expressions to run
Execution halted
