
R version 4.3.0 (2023-04-21) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> require(optimx)
Loading required package: optimx
> 
> # Note that solving 1 dimensional problems with multi-dimensional
> # minimizers can be unpredictable!
> 
>   f1<-function(xx){ # function of one parameter
+     ((3*xx+2)*xx-5)*xx+4  ## 3*xx^3 + 2*xx^2 -5*xx + 4
+   }
> 
>   g1 <- function(xx){
+      gg <- 9*xx*xx+4*xx -5
+   }
>   x0 <- .1234
>   lb <- -1
>   ub <- 10
> 
> 
>   cat("R has optimize function for [1D] functions\n")
R has optimize function for [1D] functions
>   aoptimize <- optimize(f1, c(-1, 10))
>   print(aoptimize)
$minimum
[1] 0.5555439

$objective
[1] 2.353909

> 
>   cat("or we can use optim() with method='Brent' \n")
or we can use optim() with method='Brent' 
>   abrent <- optim(x0, f1, lower=lb, upper=ub, method="Brent", control=list(trace=0))
>   print(abrent)
$par
[1] 0.5555556

$value
[1] 2.353909

$counts
function gradient 
      NA       NA 

$convergence
[1] 0

$message
NULL

> 
>   ansone<-opm(x0, f1, g1, method = c("Rvmmin", "Rcgmin"), control=list(trace=0))
>   ansone.sum<-summary(ansone, order=value)
>   print(ansone.sum)
              p1    value fevals gevals convergence kkt1 kkt2 xtime
Rvmmin 0.5555556 2.353909     16      8           0 TRUE TRUE 0.005
Rcgmin 0.5555556 2.353909      8      6           0 TRUE TRUE 0.001
> 
> # test 2
>   x0 = 1
>   cat("Start with x0=1. Use optim() with method='Brent' \n")
Start with x0=1. Use optim() with method='Brent' 
>   abrent1 <- optim(x0, f1, lower=lb, upper=ub, method="Brent", control=list(trace=0))
>   print(abrent1)
$par
[1] 0.5555556

$value
[1] 2.353909

$counts
function gradient 
      NA       NA 

$convergence
[1] 0

$message
NULL

> 
>   ansone1<-opm(x0, f1, g1,  lower=lb, upper=ub, method = c("Rvmmin", "Rcgmin"),  control=list(trace=0))
trace= 0 
>   ansone1.sum<-summary(ansone1, order=value)
>   print(ansone1.sum)
              p1    value fevals gevals convergence kkt1 kkt2 xtime
Rvmmin 0.5555556 2.353909     14      6           0 TRUE TRUE 0.001
Rcgmin 0.5555556 2.353909      8      6           0 TRUE TRUE 0.001
> 
> 
