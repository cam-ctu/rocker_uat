
R version 4.3.0 (2023-04-21) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(optimx)
> # Simple Test Function 1:
> tryfun.f = function(x) { 
+      fun <- sum(x^2 )
+ ## if (trace) ... to be fixed
+ 	print(c(x = x, fun = fun))
+      fun
+ }
> tryfun.g = function(x) { 
+      grad<-2.0*x
+      grad
+ }
> tryfun.h = function(x) { 
+      n<-length(x)
+      t<-rep(2.0,n)
+      hess<-diag(t)
+ }
> 
> strt <- c(1,2,3)
> ansfgh <- optimr(strt, tryfun.f, tryfun.g, tryfun.h, method="nlm", 
+      hessian=TRUE, control=list(trace=2))
Parameter scaling:[1] 1 1 1
 x1  x2  x3 fun 
  1   2   3  14 
 x1  x2  x3 fun 
  1   2   3  14 
       x1        x2        x3       fun 
 1.000001  2.000000  3.000000 14.000002 
       x1        x2        x3       fun 
 1.000000  2.000002  3.000000 14.000008 
       x1        x2        x3       fun 
 1.000000  2.000000  3.000003 14.000018 
iteration = 0
Step:
[1] 0 0 0
Parameter:
[1] 1 2 3
Function Value
[1] 14
Gradient:
[1] 2 4 6

          x1           x2           x3          fun 
1.110223e-16 2.220446e-16 4.440892e-16 2.588450e-31 
iteration = 1
Parameter:
[1] 1.110223e-16 2.220446e-16 4.440892e-16
Function Value
[1] 2.58845e-31
Gradient:
[1] 2.220446e-16 4.440892e-16 8.881784e-16

Relative gradient close to zero.
Current iterate is probably solution.

> ansfgh
$convergence
[1] 0

$value
[1] 2.58845e-31

$par
[1] 1.110223e-16 2.220446e-16 4.440892e-16

$counts
[1] NA  1

$message
[1] "nlm: Convergence indicator (code) =  1"

$hessian
     [,1] [,2] [,3]
[1,]    2    0    0
[2,]    0    2    0
[3,]    0    0    2

> 
> 
> 
> 
