
R version 4.3.0 (2023-04-21) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("listenv")
> 
> message("*** aperm() and t() ...")
*** aperm() and t() ...
> 
> for (ndim in 0:5) {
+   message("- Number of dimensions: ", ndim)
+ 
+   if (ndim == 0) {
+     n <- 3L
+     X_truth <- as.list(seq_len(n))
+     names(X_truth) <- letters[seq_len(n)]
+   } else {
+     dim <- seq_len(ndim) + 2L
+     dimnames <- lapply(dim, FUN = function(n) letters[seq_len(n)])
+     X_truth <- as.list(seq_len(prod(dim)))
+     dim(X_truth) <- dim
+     dimnames(X_truth) <- dimnames
+   }
+   
+   X <- as.listenv(X_truth)
+   stopifnot(identical(as.list(X), X_truth))
+   if (ndim <= 1L) {
+     stopifnot(!is.null(names(X)) && !is.null(names(X_truth)))
+     stopifnot(identical(names(X), names(X_truth)))
+   } else {
+     stopifnot(is.null(names(X)) && is.null(names(X_truth)))
+   }
+ 
+   if (ndim > 0) {
+     message("- aperm()")
+     for (kk in 1:10) {
+       perm <- sample(seq_len(ndim), replace = FALSE)
+       X_truth <- aperm(X_truth, perm = perm)
+       X <- aperm(X, perm = perm)
+       stopifnot(identical(as.list(X), X_truth))
+     }
+   }
+ 
+   if (ndim <= 2) {
+     message("- t()")
+     X_truth <- t(X_truth)
+     X <- t(X)
+     ## For comparision: t(<listenv>) preserves element names
+     names(X) <- NULL
+     stopifnot(identical(as.list(X), X_truth))
+   }
+ } ## for (ndim ...)
- Number of dimensions: 0
- t()
- Number of dimensions: 1
- aperm()
- t()
- Number of dimensions: 2
- aperm()
- t()
- Number of dimensions: 3
- aperm()
- Number of dimensions: 4
- aperm()
- Number of dimensions: 5
- aperm()
> 
> message("*** aperm() and t() ... DONE")
*** aperm() and t() ... DONE
> 
> 
