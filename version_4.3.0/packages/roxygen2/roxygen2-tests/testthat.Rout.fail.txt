
R version 4.3.0 (2023-04-21) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(testthat)
> library(roxygen2)
> 
> test_check("roxygen2")
Starting 2 test processes
[ FAIL 43 | WARN 0 | SKIP 78 | PASS 738 ]

══ Skipped tests ═══════════════════════════════════════════════════════════════
• On CRAN (78)

══ Failed tests ════════════════════════════════════════════════════════════════
── Failure ('test-block.R:240:3'): errors are propagated ───────────────────────
`roc_proc_text(rd_roclet(), "\n      foo <- function() stop('Uhoh')\n      #' Title\n      #' @name foo\n      #' @eval foo()\n      NULL")` did not generate warning
Backtrace:
    ▆
 1. └─testthat::expect_snapshot_warning(...) at test-block.R:240:3
 2.   └─testthat:::expect_snapshot_condition(...)
── Failure ('test-block.R:252:3'): must return non-NA string ───────────────────
`roc_proc_text(rd_roclet(), "\n      foo <- function() NA\n      #' @eval foo()\n      NULL")` did not generate warning
Backtrace:
    ▆
 1. └─testthat::expect_snapshot_warning(...) at test-block.R:252:3
 2.   └─testthat:::expect_snapshot_condition(...)
── Failure ('test-block.R:285:3'): warns about duplicate tags ──────────────────
`{ ... }` did not generate warning
Backtrace:
    ▆
 1. └─testthat::expect_snapshot_warning(...) at test-block.R:285:3
 2.   └─testthat:::expect_snapshot_condition(...)
── Failure ('test-markdown-state.R:97:3'): warning for both @md and @noMd ──────
`out1 <- roc_proc_text(rd_roclet(), block)` did not generate warning
Backtrace:
    ▆
 1. └─testthat::expect_snapshot_warning(...) at test-markdown-state.R:97:3
 2.   └─testthat:::expect_snapshot_condition(...)
── Failure ('test-markdown.R:466:3'): unhandled markdown generates warning ─────
`roc_proc_text(rd_roclet(), text)` did not generate warning
Backtrace:
    ▆
 1. └─testthat::expect_snapshot_warning(...) at test-markdown.R:466:3
 2.   └─testthat:::expect_snapshot_condition(...)
── Failure ('test-markdown.R:481:3'): level 1 heading in markdown generates warning in some tags ──
`roc_proc_text(rd_roclet(), text)` did not generate warning
Backtrace:
    ▆
 1. └─testthat::expect_snapshot_warning(...) at test-markdown.R:481:3
 2.   └─testthat:::expect_snapshot_condition(...)
── Failure ('test-namespace.R:95:3'): @exportS3method generates fully automatically ──
`roc_proc_text(namespace_roclet(), "\n      #' @exportS3Method\n      f <- function(x) 'foo'\n    ")` did not generate warning
Backtrace:
    ▆
 1. └─testthat::expect_snapshot_warning(...) at test-namespace.R:95:3
 2.   └─testthat:::expect_snapshot_condition(...)
── Failure ('test-namespace.R:122:3'): @exportS3method can extract class from generic ──
`roc_proc_text(namespace_roclet(), block)` did not generate warning
Backtrace:
    ▆
 1. └─testthat::expect_snapshot_warning(...) at test-namespace.R:122:3
 2.   └─testthat:::expect_snapshot_condition(...)
── Failure ('test-namespace.R:207:3'): poorly formed importFrom throws error ───
`roc_proc_text(namespace_roclet(), "\n    #' @importFrom test\n    NULL\n  ")` did not generate warning
Backtrace:
    ▆
 1. └─testthat::expect_snapshot_warning(...) at test-namespace.R:207:3
 2.   └─testthat:::expect_snapshot_condition(...)
── Failure ('test-namespace.R:259:3'): rawNamespace must be valid code ─────────
`roc_proc_text(namespace_roclet(), "\n      #' @rawNamespace a +\n      NULL")` did not generate warning
Backtrace:
    ▆
 1. └─testthat::expect_snapshot_warning(...) at test-namespace.R:259:3
 2.   └─testthat:::expect_snapshot_condition(...)
── Failure ('test-namespace.R:280:3'): evalNamespace warns for bad code ────────
`roc_proc_text(namespace_roclet(), "\n      #' @evalNamespace a +\n      #' @name a\n      #' @title a\n      NULL")` did not generate warning
Backtrace:
    ▆
 1. └─testthat::expect_snapshot_warning(...) at test-namespace.R:280:3
 2.   └─testthat:::expect_snapshot_condition(...)
── Failure ('test-namespace.R:362:3'): can extract non-imports from namespace preserving source ──
namespace_exports(path) (`actual`) not equal to lines[c(1:3, 5)] (`expected`).

`lines(actual[[1]])`:   "if (TRUE) {" "  import(x, y, z)" "}"
`lines(expected[[1]])`: "if (TRUE) {"                        

`lines(actual[[2]])`:   "export(b)"        
`lines(expected[[2]])`: "  import(x, y, z)"

`lines(actual[[3]])` is absent
`lines(expected[[3]])` is a character vector ('}')

`lines(actual[[4]])` is absent
`lines(expected[[4]])` is a character vector ('export(b)')
── Failure ('test-object-from-call.R:12:3'): finds package description ─────────
obj$alias (`actual`) not equal to "_PACKAGE" (`expected`).

`actual` is NULL
`expected` is a character vector ('_PACKAGE')
── Failure ('test-object-s3.R:19:3'): non-functions are not generics ───────────
is_s3_generic("c") is not FALSE

`actual`:   TRUE 
`expected`: FALSE
── Failure ('test-rd-examples.R:52:3'): @example gives warning if used instead of @examples ──
`out <- roc_proc_text(rd_roclet(), "\n      #' @name a\n      #' @title a\n      #' @example\n      #' a <- 1\n      #' a + b\n      NULL")[[1]]` did not generate warning
Backtrace:
    ▆
 1. └─testthat::expect_snapshot_warning(...) at test-rd-examples.R:52:3
 2.   └─testthat:::expect_snapshot_condition(...)
── Failure ('test-rd-examples.R:65:3'): warns if path doesn't exist ────────────
`roc_proc_text(rd_roclet(), "\n      #' @name a\n      #' @title a\n      #' @example this-path-doesnt-exist.R\n      NULL\n    ")` did not generate warning
Backtrace:
    ▆
 1. └─testthat::expect_snapshot_warning(...) at test-rd-examples.R:65:3
 2.   └─testthat:::expect_snapshot_condition(...)
── Failure ('test-rd-examples.R:89:3'): @examplesIf warns about unparseable condition ──
`roc_proc_text(rd_roclet(), "\n    #' @name a\n    #' @title a\n    #' @examplesIf 1 +\n    #' maybe-run-this-code\n    NULL")` did not generate warning
Backtrace:
    ▆
 1. └─testthat::expect_snapshot_warning(...) at test-rd-examples.R:89:3
 2.   └─testthat:::expect_snapshot_condition(...)
── Failure ('test-rd-describe-in.R:225:3'): complains about bad usage ──────────
`roc_proc_text(rd_roclet(), "\n      #' bar\n      bar <- 100\n\n      #' @name bar\n      #' @describeIn foo shortcut for foo\n      NULL\n      ")` did not generate warning
Backtrace:
    ▆
 1. └─testthat::expect_snapshot_warning(...) at test-rd-describe-in.R:225:3
 2.   └─testthat:::expect_snapshot_condition(...)
── Failure ('test-rd-include-rmd.R:267:3'): useful warnings ────────────────────
`roc_proc_text(rd_roclet(), text)` did not generate warning
Backtrace:
    ▆
 1. └─testthat::expect_snapshot_warning(...) at test-rd-include-rmd.R:267:3
 2.   └─testthat:::expect_snapshot_condition(...)
── Failure ('test-rd-markdown.R:75:3'): @title warns about multiple paragraphs ──
`roc_proc_text(rd_roclet(), block)` did not generate warning
Backtrace:
    ▆
 1. └─testthat::expect_snapshot_warning(...) at test-rd-markdown.R:75:3
 2.   └─testthat:::expect_snapshot_condition(...)
── Failure ('test-rd-params.R:22:3'): empty @param generates warning ───────────
`roc_proc_text(rd_roclet(), "\n    #' A\n    #' @param\n    #'\n    a <- function() {}")` did not throw the expected warning.
── Failure ('test-rd-inherit.R:63:3'): warns on unknown inherit type ───────────
`parse_text("\n      #' @inherit fun blah\n      NULL\n    ")` did not generate warning
Backtrace:
    ▆
 1. └─testthat::expect_snapshot_warning(parse_text("\n      #' @inherit fun blah\n      NULL\n    ")) at test-rd-inherit.R:63:3
 2.   └─testthat:::expect_snapshot_condition(...)
── Failure ('test-rd-inherit.R:77:3'): no options gives default values ─────────
block_get_tag_value(block, "inherit")$fields (`actual`) not equal to c(...) (`expected`).

`actual[10:13]`:   "author" "source" "note" "format"
`expected[10:12]`: "author" "source" "note"         
── Failure ('test-rd-inherit.R:279:3'): warns if can't find section ────────────
`roc_proc_text(rd_roclet(), code)` did not generate warning
Backtrace:
    ▆
 1. └─testthat::expect_snapshot_warning(...) at test-rd-inherit.R:279:3
 2.   └─testthat:::expect_snapshot_condition(...)
── Failure ('test-rd-inherit.R:479:3'): warned if no params need documentation ──
`roc_proc_text(rd_roclet(), code)` did not generate warning
Backtrace:
    ▆
 1. └─testthat::expect_snapshot_warning(...) at test-rd-inherit.R:479:3
 2.   └─testthat:::expect_snapshot_condition(...)
── Error ('test-rd-raw.R:24:3'): error-ful evalRd generates warning ────────────
`{ ... }` threw an unexpected error.
Message: `expect_null(code)` did not throw the expected warning.
Class:   expectation_failure/expectation/error/condition
── Failure ('test-rd-section.R:2:3'): warn if forgotton colom ──────────────────
`roc_proc_text(rd_roclet(), "\n      #' Foo\n      #'\n      #' @section Haz dox\n      #' Here.\n      #' There\n      foo <- function(x = '%') x\n    ")` did not generate warning
Backtrace:
    ▆
 1. └─testthat::expect_snapshot_warning(...) at test-rd-section.R:2:3
 2.   └─testthat:::expect_snapshot_condition(...)
── Failure ('test-rd-usage.R:255:3'): non-syntactic S4 class names are escaped in usage ──
call_to_usage(...) (`actual`) not equal to "\\S4method{rhs}{`<-`}(x)" (`expected`).

`actual`:   "\\S4method{rhs}{<-}(x)"  
`expected`: "\\S4method{rhs}{`<-`}(x)"
── Failure ('test-rd.R:40:3'): documenting unknown function requires name ──────
`roc_proc_text(rd_roclet(), "\n      #' Virtual Class To Enforce Max Slot Length\n      setClass('A')\n\n      #' Validity function.\n      setValidity('A', function(object) TRUE)")` did not generate warning
Backtrace:
    ▆
 1. └─testthat::expect_snapshot_warning(...) at test-rd.R:40:3
 2.   └─testthat:::expect_snapshot_condition(...)
── Failure ('test-rd.R:52:3'): can't set description and re-export ─────────────
`out <- roc_proc_text(rd_roclet(), "\n      #' @description NOPE\n      #' @export\n      magrittr::`%>%`\n      ")` did not generate warning
Backtrace:
    ▆
 1. └─testthat::expect_snapshot_warning(...) at test-rd.R:52:3
 2.   └─testthat:::expect_snapshot_condition(...)
── Failure ('test-rd.R:65:3'): documenting NA gives useful error message (#194) ──
`roc_proc_text(rd_roclet(), "\n      #' Missing value\n      NA")` did not generate warning
Backtrace:
    ▆
 1. └─testthat::expect_snapshot_warning(...) at test-rd.R:65:3
 2.   └─testthat:::expect_snapshot_condition(...)
── Failure ('test-tag.R:6:3'): warn about unknown tags ─────────────────────────
`roc_proc_text(rd_roclet(), block)` did not generate warning
Backtrace:
    ▆
 1. └─testthat::expect_snapshot_warning(...) at test-tag.R:6:3
 2.   └─testthat:::expect_snapshot_condition(...)
── Failure ('test-tag.R:74:3'): incomplete rd in tag raises error ──────────────
`roc_proc_text(rd_roclet(), "\n    #' Title\n    #' @aliases title{\n    x <- 1")` did not throw the expected warning.
── Failure ('test-tag.R:81:3'): incomplete rd in prequel raises error ──────────
`roc_proc_text(rd_roclet(), "\n      #' Title {\n      x <- 1")` did not throw the expected warning.
── Error ('test-tag-parser.R:2:3'): tags containing only whitespace generate warning ──
`{ ... }` threw an unexpected error.
Message: `expect_null(code)` did not throw the expected warning.
Class:   expectation_failure/expectation/error/condition
── Error ('test-tag-parser.R:17:3'): tags check for mismatched parents gives useful warnings ──
`{ ... }` threw an unexpected error.
Message: `tag_markdown_with_sections(tag)` did not throw the expected warning.
Class:   expectation_failure/expectation/error/condition
── Error ('test-tag-parser.R:33:3'): tags check for mismatched parents gives useful warnings ──
`{ ... }` threw an unexpected error.
Message: `tag_markdown_with_sections(tag)` did not throw the expected warning.
Class:   expectation_failure/expectation/error/condition
── Error ('test-tag-parser.R:48:3'): tag_name() checks for valid names ─────────
`{ ... }` threw an unexpected error.
Message: `expect_null(code)` did not throw the expected warning.
Class:   expectation_failure/expectation/error/condition
── Error ('test-tag-parser.R:56:3'): tag_two_part() gives useful warnings ──────
`{ ... }` threw an unexpected error.
Message: `expect_null(code)` did not throw the expected warning.
Class:   expectation_failure/expectation/error/condition
── Error ('test-tag-parser.R:63:3'): tag_words() gives useful warnings ─────────
`{ ... }` threw an unexpected error.
Message: `expect_null(code)` did not throw the expected warning.
Class:   expectation_failure/expectation/error/condition
── Error ('test-tag-parser.R:71:3'): tag_words_line() gives useful warnings ────
`{ ... }` threw an unexpected error.
Message: `expect_null(code)` did not throw the expected warning.
Class:   expectation_failure/expectation/error/condition
── Error ('test-tag-parser.R:81:3'): tag_toggle() gives useful warnings ────────
`{ ... }` threw an unexpected error.
Message: `expect_null(code)` did not throw the expected warning.
Class:   expectation_failure/expectation/error/condition
── Error ('test-tag-parser.R:88:3'): tag_code() gives useful warnings ──────────
`{ ... }` threw an unexpected error.
Message: `expect_null(code)` did not throw the expected warning.
Class:   expectation_failure/expectation/error/condition

[ FAIL 43 | WARN 0 | SKIP 78 | PASS 738 ]
Error: Test failures
Execution halted
