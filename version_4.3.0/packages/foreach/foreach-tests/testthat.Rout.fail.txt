
R version 4.3.0 (2023-04-21) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(testthat)
> library(foreach)
> 
> 
> Sys.setenv(FOREACH_BACKEND="SEQ")
> test_check("foreach")
 Sequential backend[ FAIL 0 | WARN 0 | SKIP 0 | PASS 570 ]
> 
> Sys.setenv(FOREACH_BACKEND="PAR")
> test_check("foreach")
Error in `source_file()`:
! In path: "/__w/rocker_uat/rocker_uat/packages/foreach/foreach-tests/testthat/setup_cluster.R"
Caused by error in `loadNamespace()`:
! there is no package called ‘doParallel’
Backtrace:
     ▆
  1. ├─testthat::test_check("foreach")
  2. │ └─testthat::test_dir(...)
  3. │   └─testthat:::test_files(...)
  4. │     └─testthat:::test_files_serial(...)
  5. │       └─testthat:::test_files_setup_state(...)
  6. │         └─testthat::source_test_setup(".", env)
  7. │           └─testthat::source_dir(path, "^setup.*\\.[rR]$", env = env, wrap = FALSE)
  8. │             └─base::lapply(...)
  9. │               └─testthat (local) FUN(X[[i]], ...)
 10. │                 └─testthat::source_file(path, env = env, chdir = chdir, wrap = wrap)
 11. │                   ├─base::withCallingHandlers(...)
 12. │                   └─base::eval(exprs, env)
 13. │                     └─base::eval(exprs, env)
 14. ├─base::loadNamespace(x) at foreach-tests/testthat/setup_cluster.R:8:2
 15. │ ├─base::withRestarts(stop(cond), retry_loadNamespace = function() NULL)
 16. │ │ └─base (local) withOneRestart(expr, restarts[[1L]])
 17. │ │   └─base (local) doWithOneRestart(return(expr), restart)
 18. │ └─base::stop(cond)
 19. └─testthat (local) `<fn>`(`<pckgNtFE>`)
 20.   └─rlang::abort(...)
Execution halted
