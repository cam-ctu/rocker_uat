
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script incl/testme/test-uuid.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future:::testme("uuid")
Test ‘uuid’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future/testme/test-uuid.R’

> library(future)
[10:54:53.736] Option 'future.startup.script': TRUE
[10:54:53.736] Future startup scripts considered: ‘.future.R’, ‘~/.future.R’
[10:54:53.736] Future startup scripts found: <none>

> session_uuid <- future:::session_uuid

> message("*** session_uuid() ...")
*** session_uuid() ...

> id0 <- session_uuid()

> print(id0)
[1] "927954df222dcae269f0fb8b6abaa69d"
attr(,"source")
attr(,"source")$host
      HOSTNAME 
"5995ac22cdae" 

attr(,"source")$info
                                              sysname 
                                              "Linux" 
                                              release 
                                  "6.11.0-1012-azure" 
                                              version 
"#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" 
                                             nodename 
                                       "5995ac22cdae" 
                                              machine 
                                             "x86_64" 
                                                login 
                                            "unknown" 
                                                 user 
                                               "root" 
                                       effective_user 
                                               "root" 

attr(,"source")$pid
[1] 76983

attr(,"source")$time
[1] "2025-05-06 10:54:53 UTC"

attr(,"source")$random
[1] 2147483647


> environment(session_uuid)$uuids <- list()

> id <- session_uuid()

> print(id)
[1] "2fc940ac04b5c184f14c5af775de767d"
attr(,"source")
attr(,"source")$host
      HOSTNAME 
"5995ac22cdae" 

attr(,"source")$info
                                              sysname 
                                              "Linux" 
                                              release 
                                  "6.11.0-1012-azure" 
                                              version 
"#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" 
                                             nodename 
                                       "5995ac22cdae" 
                                              machine 
                                             "x86_64" 
                                                login 
                                            "unknown" 
                                                 user 
                                               "root" 
                                       effective_user 
                                               "root" 

attr(,"source")$pid
[1] 76983

attr(,"source")$time
[1] "2025-05-06 10:54:53 UTC"

attr(,"source")$random
[1] 2147483647


> stopifnot(id != id0)

> if (supportsMulticore()) {
+     plan(multicore, workers = 2)
+     fs <- lapply(1:2, FUN = function(i) {
+         future({
+             Sys.sleep .... [TRUNCATED] 
[10:54:53.739] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:53.739] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:54:53.740] |  :  all.equal() for FutureStrategyList ...
[10:54:53.740] |  :  .  New stack:
[10:54:53.740] |  :  .  List of 1
[10:54:53.740] |  :  .   $ :function (..., workers = 2L, envir = parent.frame())  
[10:54:53.740] |  :  .    ..- attr(*, "class")= chr [1:5] "tweaked" "multicore" "multiprocess" "future" ...
[10:54:53.740] |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:53.740] |  :  .      ...)  
[10:54:53.740] |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:53.740] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:53.740] |  :  .    ..- attr(*, "tweaks")=List of 1
[10:54:53.740] |  :  .    .. ..$ workers: int 2
[10:54:53.740] |  :  .    ..- attr(*, "call")= language plan(multicore, workers = 2L)
[10:54:53.740] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:53.745] |  :  .  Old stack:
[10:54:53.745] |  :  .  List of 1
[10:54:53.745] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:53.745] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:53.745] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:53.745] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:53.745] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:53.745] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:54:53.745] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:53.747] |  :  .  Not identical
[10:54:53.747] |  :  .  all.equal() for future ...
[10:54:53.747] |  :  .  |  List of 2
[10:54:53.747] |  :  .  |   $ target :function (..., workers = 2L, envir = parent.frame())  
[10:54:53.747] |  :  .  |    ..- attr(*, "class")= chr [1:5] "tweaked" "multicore" "multiprocess" "future" ...
[10:54:53.747] |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:53.747] |  :  .  |      ...)  
[10:54:53.747] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:53.747] |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:53.747] |  :  .  |    ..- attr(*, "tweaks")=List of 1
[10:54:53.747] |  :  .  |    .. ..$ workers: int 2
[10:54:53.747] |  :  .  |    ..- attr(*, "call")= language plan(multicore, workers = 2L)
[10:54:53.747] |  :  .  |   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:53.747] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:53.747] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:53.747] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:53.747] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:53.747] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:54:53.754] |  :  .  |  Formals differ
[10:54:53.754] |  :  .  all.equal() for future ... done
[10:54:53.754] |  :  .  Future strategies differ at level 1
[10:54:53.754] |  :  all.equal() for FutureStrategyList ... done
[10:54:53.754] |  :  plan(): Setting new future strategy stack:
[10:54:53.754] |  :  List of future strategies:
[10:54:53.754] |  :  1. multicore:
[10:54:53.754] |  :     - args: function (..., workers = 2L, envir = parent.frame())
[10:54:53.754] |  :     - tweaked: TRUE
[10:54:53.754] |  :     - call: plan(multicore, workers = 2L)
[10:54:53.755] |  :  List of 1
[10:54:53.755] |  :   $ :function (..., workers = 2L, envir = parent.frame())  
[10:54:53.755] |  :    ..- attr(*, "class")= chr [1:5] "tweaked" "multicore" "multiprocess" "future" ...
[10:54:53.755] |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:53.755] |  :      ...)  
[10:54:53.755] |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:53.755] |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:53.755] |  :    ..- attr(*, "tweaks")=List of 1
[10:54:53.755] |  :    .. ..$ workers: int 2
[10:54:53.755] |  :    ..- attr(*, "call")= language plan(multicore, workers = 2L)
[10:54:53.755] |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:53.757] |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:54:53.758] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:53.758] |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:54:53.758] |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:53.758] |  :  .  Legacy shutdown of cluster workers ...
[10:54:53.758] |  :  .  |  Stopping existing cluster ...
[10:54:53.758] |  :  .  |  :  No pre-existing cluster. Skipping
[10:54:53.758] |  :  .  |  Stopping existing cluster ... done
[10:54:53.758] |  :  .  Legacy shutdown of cluster workers ... done
[10:54:53.759] |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:54:53.759] |  :  plan(): plan_init() of ‘tweaked’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ...
[10:54:53.759] |  :  .  function (..., workers = 2L, envir = parent.frame())  
[10:54:53.759] |  :  .   - attr(*, "class")= chr [1:5] "tweaked" "multicore" "multiprocess" "future" ...
[10:54:53.759] |  :  .   - attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:53.759] |  :  .      ...)  
[10:54:53.759] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:53.759] |  :  .   - attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:53.759] |  :  .   - attr(*, "tweaks")=List of 1
[10:54:53.759] |  :  .    ..$ workers: int 2
[10:54:53.759] |  :  .   - attr(*, "call")= language plan(multicore, workers = 2L)
[10:54:53.761] |  :  .  init: NULL
[10:54:53.761] |  :  plan(): plan_init() of ‘tweaked’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ... done
[10:54:53.761] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:53.762] |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘tweaked’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:54:53.762] |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:53.762] |  :  Backend function: <‘NULL’>
[10:54:53.762] |  :  Backend: <‘MulticoreFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:54:53.762] |  :  plan(): nbrOfWorkers() = 2
[10:54:53.763] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:54:53.763] plan(<tweaked>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:53.763] getGlobalsAndPackages() ...
[10:54:53.763] |  Searching for globals ...
[10:54:53.779] |  :  globals found: [27] ‘{’, ‘Sys.sleep’, ‘session_uuid’, ‘Sys.getpid’, ‘<-’, ‘as.character’, ‘[[’, ‘uuids’, ‘if’, ‘!’, ‘is.null’, ‘attr’, ‘attr<-’, ‘return’, ‘Sys.info’, ‘Sys.getenv’, ‘c’, ‘[’, ‘nzchar’, ‘==’, ‘length’, ‘list’, ‘Sys.time’, ‘stealth_sample’, ‘.Machine’, ‘<<-’, ‘[[<-’
[10:54:53.780] |  Searching for globals ... DONE
[10:54:53.780] |  Resolving globals: FALSE
[10:54:53.780] |  Search for packages associated with the globals ...
[10:54:53.780] |  :  Packages associated with globals: [2] ‘base’, ‘future’
[10:54:53.781] |  :  Packages: [2] ‘base’, ‘future’
[10:54:53.781] |  Search for packages associated with the globals ... DONE
[10:54:53.781] |  Packages after dropping 'base': [1] ‘future’
[10:54:53.782] |  Packages after dropping non-attached packages: [1] ‘future’
[10:54:53.782] |  globals: [3] ‘session_uuid’, ‘uuids’, ‘stealth_sample’
[10:54:53.782] |  packages: [1] ‘future’
[10:54:53.782] getGlobalsAndPackages() ... done
[10:54:53.782] run() for Future (‘Future’) ...
[10:54:53.783] |  state: ‘created’
[10:54:53.783] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:53.783] |  :  makeFutureBackend(<tweaked>) ...
[10:54:53.783] |  :  .  Backend function: <‘NULL’>
[10:54:53.793] |  :  .  Backend: <‘MulticoreFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:54:53.793] |  :  makeFutureBackend(<tweaked>) ... done
[10:54:53.793] |  plan(<tweaked>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:53.793] |  Using MulticoreFutureBackend ...
[10:54:53.793] |  :  Launching futures ...
[10:54:53.794] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:54:53.794] |  :  .  |  getFutureData() ...
[10:54:53.794] |  :  .  |  :  getFutureCore() ...
[10:54:53.794] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘future’
[10:54:53.794] |  :  .  |  :  getFutureCore() ... done
[10:54:53.794] |  :  .  |  :  getFutureCapture() ...
[10:54:53.794] |  :  .  |  :  getFutureCapture() ... done
[10:54:53.795] |  :  .  |  :  getFutureContext() ...
[10:54:53.795] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:53.795] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:54:53.795] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:53.795] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:54:53.795] |  :  .  |  :  getFutureContext() ... done
[10:54:53.796] |  :  .  |  getFutureData() ... done
[10:54:53.796] |  :  .  |  requestCore(..., workers = 2) ...
[10:54:53.796] |  :  .  |  requestCore(..., workers = 2) ...
[10:54:53.799] |  :  .  |  MulticoreFuture started
[10:54:53.800] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:54:53.800] |  :  Launching futures ... done
[10:54:53.800] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:54:53.800] |  Using MulticoreFutureBackend ... done
[10:54:53.801] run() for Future (‘MulticoreFuture’) ... done
[10:54:53.802] |  :  .  |  attachPackages() ...
[10:54:53.802] |  :  .  |  :  packages: [n=1] ‘future’
[10:54:53.803] |  :  .  |  attachPackages() ... DONE
[10:54:53.803] |  :  .  |  attachPackages() ...
[10:54:53.803] |  :  .  |  :  packages: [n=1] ‘future’
[10:54:53.803] |  :  .  |  attachPackages() ... DONE
[10:54:53.804] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:53.804] |  :  .  |  :  Getting full stack: [n=1] ‘tweaked’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:54:53.804] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:53.805] getGlobalsAndPackages() ...
[10:54:53.805] |  Searching for globals ...
[10:54:53.805] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:53.805] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:53.806] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:54:53.806] |  :  .  |  :  .  |  New stack:
[10:54:53.806] |  :  .  |  :  .  |  List of 1
[10:54:53.806] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:53.806] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:53.806] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:53.806] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:53.806] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:53.806] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:53.806] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:53.809] |  :  .  |  :  .  |  Old stack:
[10:54:53.809] |  :  .  |  :  .  |  List of 1
[10:54:53.809] |  :  .  |  :  .  |   $ :function (..., workers = 2L, envir = parent.frame())  
[10:54:53.809] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:5] "tweaked" "multicore" "multiprocess" "future" ...
[10:54:53.809] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:53.809] |  :  .  |  :  .  |      ...)  
[10:54:53.809] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:53.809] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:53.809] |  :  .  |  :  .  |    ..- attr(*, "tweaks")=List of 1
[10:54:53.809] |  :  .  |  :  .  |    .. ..$ workers: int 2
[10:54:53.809] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(multicore, workers = 2L)
[10:54:53.809] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55d8c4b21a20> 
[10:54:53.809] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:53.809] |  :  .  |  :  .  |      ...)  
[10:54:53.809] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:53.809] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:53.820] |  :  .  |  :  .  |  Not identical
[10:54:53.820] |  :  .  |  :  .  |  all.equal() for future ...
[10:54:53.824] |  :  globals found: [27] ‘{’, ‘Sys.sleep’, ‘session_uuid’, ‘Sys.getpid’, ‘<-’, ‘as.character’, ‘[[’, ‘uuids’, ‘if’, ‘!’, ‘is.null’, ‘attr’, ‘attr<-’, ‘return’, ‘Sys.info’, ‘Sys.getenv’, ‘c’, ‘[’, ‘nzchar’, ‘==’, ‘length’, ‘list’, ‘Sys.time’, ‘stealth_sample’, ‘.Machine’, ‘<<-’, ‘[[<-’
[10:54:53.824] |  Searching for globals ... DONE
[10:54:53.825] |  Resolving globals: FALSE
[10:54:53.825] |  Search for packages associated with the globals ...
[10:54:53.825] |  :  Packages associated with globals: [2] ‘base’, ‘future’
[10:54:53.826] |  :  Packages: [2] ‘base’, ‘future’
[10:54:53.826] |  Search for packages associated with the globals ... DONE
[10:54:53.826] |  Packages after dropping 'base': [1] ‘future’
[10:54:53.820] |  :  .  |  :  .  |  :  List of 2
[10:54:53.820] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:53.820] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:53.820] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:53.820] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:53.820] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:53.820] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:53.820] |  :  .  |  :  .  |  :   $ current:function (..., workers = 2L, envir = parent.frame())  
[10:54:53.820] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:5] "tweaked" "multicore" "multiprocess" "future" ...
[10:54:53.820] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:53.820] |  :  .  |  :  .  |  :      ...)  
[10:54:53.820] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:53.820] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:53.820] |  :  .  |  :  .  |  :    ..- attr(*, "tweaks")=List of 1
[10:54:53.820] |  :  .  |  :  .  |  :    .. ..$ workers: int 2
[10:54:53.820] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(multicore, workers = 2L)
[10:54:53.820] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55d8c4b21a20> 
[10:54:53.820] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:53.820] |  :  .  |  :  .  |  :      ...)  
[10:54:53.820] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:53.827] |  Packages after dropping non-attached packages: [1] ‘future’
[10:54:53.827] |  globals: [3] ‘session_uuid’, ‘uuids’, ‘stealth_sample’
[10:54:53.827] |  packages: [1] ‘future’
[10:54:53.827] getGlobalsAndPackages() ... done
[10:54:53.827] |  :  .  |  :  .  |  :  Formals differ
[10:54:53.827] |  :  .  |  :  .  |  all.equal() for future ... done
[10:54:53.827] run() for Future (‘Future’) ...
[10:54:53.827] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:54:53.827] |  state: ‘created’
[10:54:53.828] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:54:53.828] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:53.828] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:54:53.828] |  plan(<tweaked>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:53.828] |  Using MulticoreFutureBackend ...
[10:54:53.828] |  :  Launching futures ...
[10:54:53.828] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:54:53.828] |  :  .  |  getFutureData() ...
[10:54:53.828] |  :  .  |  :  .  List of future strategies:
[10:54:53.828] |  :  .  |  :  .  1. sequential:
[10:54:53.828] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:54:53.828] |  :  .  |  :  .     - tweaked: FALSE
[10:54:53.828] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:53.829] |  :  .  |  :  getFutureCore() ...
[10:54:53.829] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘future’
[10:54:53.829] |  :  .  |  :  getFutureCore() ... done
[10:54:53.829] |  :  .  |  :  getFutureCapture() ...
[10:54:53.829] |  :  .  |  :  getFutureCapture() ... done
[10:54:53.829] |  :  .  |  :  getFutureContext() ...
[10:54:53.829] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:53.830] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:54:53.830] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:53.830] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:54:53.830] |  :  .  |  :  getFutureContext() ... done
[10:54:53.830] |  :  .  |  getFutureData() ... done
[10:54:53.830] |  :  .  |  requestCore(..., workers = 2) ...
[10:54:53.831] |  :  .  |  requestCore(..., workers = 2) ...
[10:54:53.829] |  :  .  |  :  .  List of 1
[10:54:53.829] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:53.829] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:53.829] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:53.829] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:53.829] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:53.829] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:53.829] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:53.832] |  :  .  |  :  .  plan(): plan_cleanup(‘tweaked’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:54:53.832] |  :  .  |  :  .  plan(): plan_cleanup(‘tweaked’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:54:53.832] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:53.832] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:54:53.833] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:53.833] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:54:53.833] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:54:53.833] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:54:53.833] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:53.833] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:53.834] |  :  .  |  assign_globals() ...
[10:54:53.837] |  :  .  |  MulticoreFuture started
[10:54:53.838] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:54:53.838] |  :  Launching futures ... done
[10:54:53.838] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:54:53.839] |  Using MulticoreFutureBackend ... done
[10:54:53.839] run() for Future (‘MulticoreFuture’) ... done
[10:54:53.834] |  :  .  |  List of 3
[10:54:53.834] |  :  .  |   $ session_uuid  :function (pid = Sys.getpid(), attributes = TRUE)  
[10:54:53.834] |  :  .  |   $ uuids         :List of 1
[10:54:53.834] |  :  .  |    ..$ 76983: chr "2fc940ac04b5c184f14c5af775de767d"
[10:54:53.834] |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:54:53.834] |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:54:53.834] |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:54:53.834] |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:54:53.834] |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:54:53.834] |  :  .  |    .. .. ..$ pid   : int 76983
[10:54:53.834] |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:54:53"
[10:54:53.834] |  :  .  |    .. .. ..$ random: int 2147483647
[10:54:53.834] |  :  .  |   $ stealth_sample:function (x, size = length(x), replace = FALSE, ...)  
[10:54:53.834] |  :  .  |   - attr(*, "where")=List of 3
[10:54:53.834] |  :  .  |    ..$ session_uuid  :<environment: R_EmptyEnv> 
[10:54:53.834] |  :  .  |    ..$ uuids         :<environment: R_EmptyEnv> 
[10:54:53.834] |  :  .  |    ..$ stealth_sample:<environment: R_EmptyEnv> 
[10:54:53.834] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:54:53.834] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:54:53.834] |  :  .  |   - attr(*, "total_size")= num NA
[10:54:53.834] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:54:53.841] |  :  .  |  attachPackages() ...
[10:54:53.842] |  :  .  |  - copied ‘session_uuid’ to environment
[10:54:53.842] |  :  .  |  :  packages: [n=1] ‘future’
[10:54:53.842] |  :  .  |  - copied ‘uuids’ to environment
[10:54:53.842] value() on list ...
[10:54:53.842] |  :  .  |  - copied ‘stealth_sample’ to environment
[10:54:53.842] |  :  .  |  assign_globals() ... done
[10:54:53.842] |  recursive: 0
[10:54:53.842] |  :  .  |  attachPackages() ... DONE
[10:54:53.843] |  :  .  |  attachPackages() ...
[10:54:53.843] |  :  .  |  :  packages: [n=1] ‘future’
[10:54:53.843] |  length: 2
[10:54:53.843] |  :  .  |  attachPackages() ... DONE
[10:54:53.843] |  
[10:54:53.844] |  Number of remaining objects: 2
[10:54:53.844] |  checking value #1 ...
[10:54:53.844] |  :  'obj' is MulticoreFuture
[10:54:53.844] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:53.844] |  :  .  |  :  Getting full stack: [n=1] ‘tweaked’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:54:53.845] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:53.846] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:53.846] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:53.846] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:54:53.847] |  :  .  |  :  .  |  New stack:
[10:54:53.847] |  :  .  |  :  .  |  List of 1
[10:54:53.847] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:53.847] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:53.847] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:53.847] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:53.847] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:53.847] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:53.847] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:53.851] |  :  .  |  :  .  |  Old stack:
[10:54:53.856] |  :  readImmediateCondition() ...
[10:54:53.851] |  :  .  |  :  .  |  List of 1
[10:54:53.851] |  :  .  |  :  .  |   $ :function (..., workers = 2L, envir = parent.frame())  
[10:54:53.851] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:5] "tweaked" "multicore" "multiprocess" "future" ...
[10:54:53.851] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:53.851] |  :  .  |  :  .  |      ...)  
[10:54:53.851] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:53.851] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:53.851] |  :  .  |  :  .  |    ..- attr(*, "tweaks")=List of 1
[10:54:53.851] |  :  .  |  :  .  |    .. ..$ workers: int 2
[10:54:53.851] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(multicore, workers = 2L)
[10:54:53.851] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55d8c4b21a20> 
[10:54:53.851] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:53.851] |  :  .  |  :  .  |      ...)  
[10:54:53.851] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:53.851] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:53.856] |  :    - path: ‘/tmp/RtmpRhHuml/.future/immediateConditions’
[10:54:53.857] |  :  .  |  :  .  |  Not identical
[10:54:53.857] |  :   - Number of RDS files: 0
[10:54:53.857] |  :  .  |  :  .  |  all.equal() for future ...
[10:54:53.857] |  :  readImmediateCondition() ... DONE
[10:54:53.857] |  checking value #1 ... done
[10:54:53.857] |  checking value #2 ...
[10:54:53.858] |  :  'obj' is MulticoreFuture
[10:54:53.868] |  :  readImmediateCondition() ...
[10:54:53.868] |  :    - path: ‘/tmp/RtmpRhHuml/.future/immediateConditions’
[10:54:53.869] |  :   - Number of RDS files: 0
[10:54:53.869] |  :  readImmediateCondition() ... DONE
[10:54:53.869] |  checking value #2 ... done
[10:54:53.857] |  :  .  |  :  .  |  :  List of 2
[10:54:53.857] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:53.857] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:53.857] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:53.857] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:53.857] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:53.857] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:53.857] |  :  .  |  :  .  |  :   $ current:function (..., workers = 2L, envir = parent.frame())  
[10:54:53.857] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:5] "tweaked" "multicore" "multiprocess" "future" ...
[10:54:53.857] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:53.857] |  :  .  |  :  .  |  :      ...)  
[10:54:53.857] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:53.857] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:53.857] |  :  .  |  :  .  |  :    ..- attr(*, "tweaks")=List of 1
[10:54:53.857] |  :  .  |  :  .  |  :    .. ..$ workers: int 2
[10:54:53.857] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(multicore, workers = 2L)
[10:54:53.857] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55d8c4b21a20> 
[10:54:53.857] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:53.857] |  :  .  |  :  .  |  :      ...)  
[10:54:53.857] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:53.870] |  :  .  |  :  .  |  :  Formals differ
[10:54:53.870] |  :  .  |  :  .  |  all.equal() for future ... done
[10:54:53.870] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:54:53.870] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:54:53.870] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:54:53.871] |  :  .  |  :  .  List of future strategies:
[10:54:53.871] |  :  .  |  :  .  1. sequential:
[10:54:53.871] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:54:53.871] |  :  .  |  :  .     - tweaked: FALSE
[10:54:53.871] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:53.871] |  :  .  |  :  .  List of 1
[10:54:53.871] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:53.871] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:53.871] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:53.871] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:53.871] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:53.871] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:53.871] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:53.875] |  :  .  |  :  .  plan(): plan_cleanup(‘tweaked’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:54:53.875] |  :  .  |  :  .  plan(): plan_cleanup(‘tweaked’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:54:53.875] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:53.875] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:54:53.875] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:53.876] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:54:53.876] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:54:53.876] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:54:53.876] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:53.876] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:53.877] |  :  .  |  assign_globals() ...
[10:54:53.879] |  Number of remaining objects: 2
[10:54:53.880] |  checking value #1 ...
[10:54:53.880] |  :  'obj' is MulticoreFuture
[10:54:53.877] |  :  .  |  List of 3
[10:54:53.877] |  :  .  |   $ session_uuid  :function (pid = Sys.getpid(), attributes = TRUE)  
[10:54:53.877] |  :  .  |   $ uuids         :List of 1
[10:54:53.877] |  :  .  |    ..$ 76983: chr "2fc940ac04b5c184f14c5af775de767d"
[10:54:53.877] |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:54:53.877] |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:54:53.877] |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:54:53.877] |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:54:53.877] |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:54:53.877] |  :  .  |    .. .. ..$ pid   : int 76983
[10:54:53.877] |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:54:53"
[10:54:53.877] |  :  .  |    .. .. ..$ random: int 2147483647
[10:54:53.877] |  :  .  |   $ stealth_sample:function (x, size = length(x), replace = FALSE, ...)  
[10:54:53.877] |  :  .  |   - attr(*, "where")=List of 3
[10:54:53.877] |  :  .  |    ..$ session_uuid  :<environment: R_EmptyEnv> 
[10:54:53.877] |  :  .  |    ..$ uuids         :<environment: R_EmptyEnv> 
[10:54:53.877] |  :  .  |    ..$ stealth_sample:<environment: R_EmptyEnv> 
[10:54:53.877] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:54:53.877] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:54:53.877] |  :  .  |   - attr(*, "total_size")= num NA
[10:54:53.877] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:54:53.885] |  :  .  |  - copied ‘session_uuid’ to environment
[10:54:53.886] |  :  .  |  - copied ‘uuids’ to environment
[10:54:53.886] |  :  .  |  - copied ‘stealth_sample’ to environment
[10:54:53.886] |  :  .  |  assign_globals() ... done
[10:54:53.890] |  :  readImmediateCondition() ...
[10:54:53.890] |  :    - path: ‘/tmp/RtmpRhHuml/.future/immediateConditions’
[10:54:53.891] |  :   - Number of RDS files: 0
[10:54:53.891] |  :  readImmediateCondition() ... DONE
[10:54:53.891] |  checking value #1 ... done
[10:54:53.891] |  checking value #2 ...
[10:54:53.891] |  :  'obj' is MulticoreFuture
[10:54:53.901] |  :  readImmediateCondition() ...
[10:54:53.902] |  :    - path: ‘/tmp/RtmpRhHuml/.future/immediateConditions’
[10:54:53.902] |  :   - Number of RDS files: 0
[10:54:53.902] |  :  readImmediateCondition() ... DONE
[10:54:53.902] |  checking value #2 ... done
[10:54:53.912] |  Number of remaining objects: 2
[10:54:53.912] |  checking value #1 ...
[10:54:53.913] |  :  'obj' is MulticoreFuture
[10:54:53.923] |  :  readImmediateCondition() ...
[10:54:53.923] |  :    - path: ‘/tmp/RtmpRhHuml/.future/immediateConditions’
[10:54:53.923] |  :   - Number of RDS files: 0
[10:54:53.923] |  :  readImmediateCondition() ... DONE
[10:54:53.924] |  checking value #1 ... done
[10:54:53.924] |  checking value #2 ...
[10:54:53.924] |  :  'obj' is MulticoreFuture
[10:54:53.934] |  :  readImmediateCondition() ...
[10:54:53.934] |  :    - path: ‘/tmp/RtmpRhHuml/.future/immediateConditions’
[10:54:53.934] |  :   - Number of RDS files: 0
[10:54:53.935] |  :  readImmediateCondition() ... DONE
[10:54:53.935] |  checking value #2 ... done
[10:54:53.945] |  Number of remaining objects: 2
[10:54:53.945] |  checking value #1 ...
[10:54:53.945] |  :  'obj' is MulticoreFuture
[10:54:53.956] |  :  readImmediateCondition() ...
[10:54:53.956] |  :    - path: ‘/tmp/RtmpRhHuml/.future/immediateConditions’
[10:54:53.956] |  :   - Number of RDS files: 0
[10:54:53.956] |  :  readImmediateCondition() ... DONE
[10:54:53.956] |  checking value #1 ... done
[10:54:53.956] |  checking value #2 ...
[10:54:53.956] |  :  'obj' is MulticoreFuture
[10:54:53.967] |  :  readImmediateCondition() ...
[10:54:53.967] |  :    - path: ‘/tmp/RtmpRhHuml/.future/immediateConditions’
[10:54:53.967] |  :   - Number of RDS files: 0
[10:54:53.967] |  :  readImmediateCondition() ... DONE
[10:54:53.967] |  checking value #2 ... done
[10:54:53.978] |  Number of remaining objects: 2
[10:54:53.978] |  checking value #1 ...
[10:54:53.978] |  :  'obj' is MulticoreFuture
[10:54:53.988] |  :  readImmediateCondition() ...
[10:54:53.988] |  :    - path: ‘/tmp/RtmpRhHuml/.future/immediateConditions’
[10:54:53.989] |  :   - Number of RDS files: 0
[10:54:53.989] |  :  readImmediateCondition() ... DONE
[10:54:53.989] |  checking value #1 ... done
[10:54:53.989] |  checking value #2 ...
[10:54:53.989] |  :  'obj' is MulticoreFuture
[10:54:53.999] |  :  readImmediateCondition() ...
[10:54:54.000] |  :    - path: ‘/tmp/RtmpRhHuml/.future/immediateConditions’
[10:54:54.000] |  :   - Number of RDS files: 0
[10:54:54.000] |  :  readImmediateCondition() ... DONE
[10:54:54.000] |  checking value #2 ... done
[10:54:54.010] |  Number of remaining objects: 2
[10:54:54.010] |  checking value #1 ...
[10:54:54.011] |  :  'obj' is MulticoreFuture
[10:54:54.023] |  :  readImmediateCondition() ...
[10:54:54.023] |  :    - path: ‘/tmp/RtmpRhHuml/.future/immediateConditions’
[10:54:54.023] |  :   - Number of RDS files: 0
[10:54:54.024] |  :  readImmediateCondition() ... DONE
[10:54:54.024] |  checking value #1 ... done
[10:54:54.024] |  checking value #2 ...
[10:54:54.024] |  :  'obj' is MulticoreFuture
[10:54:54.035] |  :  readImmediateCondition() ...
[10:54:54.035] |  :    - path: ‘/tmp/RtmpRhHuml/.future/immediateConditions’
[10:54:54.035] |  :   - Number of RDS files: 0
[10:54:54.035] |  :  readImmediateCondition() ... DONE
[10:54:54.035] |  checking value #2 ... done
[10:54:54.045] |  Number of remaining objects: 2
[10:54:54.046] |  checking value #1 ...
[10:54:54.046] |  :  'obj' is MulticoreFuture
[10:54:54.048] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:54.048] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:54.048] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:54.048] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:54:54.048] |  :  .  |  :  .  |  :  New stack:
[10:54:54.049] |  :  .  |  :  .  |  :  List of 1
[10:54:54.049] |  :  .  |  :  .  |  :   $ :function (..., workers = 2L, envir = parent.frame())  
[10:54:54.049] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:5] "tweaked" "multicore" "multiprocess" "future" ...
[10:54:54.049] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:54.049] |  :  .  |  :  .  |  :      ...)  
[10:54:54.049] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:54.049] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:54.049] |  :  .  |  :  .  |  :    ..- attr(*, "tweaks")=List of 1
[10:54:54.049] |  :  .  |  :  .  |  :    .. ..$ workers: int 2
[10:54:54.049] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(multicore, workers = 2L)
[10:54:54.049] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55d8c4b21a20> 
[10:54:54.049] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:54.049] |  :  .  |  :  .  |  :      ...)  
[10:54:54.049] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:54.049] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:54.052] |  :  .  |  :  .  |  :  Old stack:
[10:54:54.052] |  :  .  |  :  .  |  :  List of 1
[10:54:54.052] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:54.052] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:54.052] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:54.052] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:54.052] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:54.052] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:54.052] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:54.055] |  :  .  |  :  .  |  :  Not identical
[10:54:54.055] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:54:54.056] |  :  readImmediateCondition() ...
[10:54:54.056] |  :    - path: ‘/tmp/RtmpRhHuml/.future/immediateConditions’
[10:54:54.057] |  :   - Number of RDS files: 0
[10:54:54.057] |  :  readImmediateCondition() ... DONE
[10:54:54.057] |  checking value #1 ... done
[10:54:54.057] |  checking value #2 ...
[10:54:54.057] |  :  'obj' is MulticoreFuture
[10:54:54.055] |  :  .  |  :  .  |  :  .  List of 2
[10:54:54.055] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = 2L, envir = parent.frame())  
[10:54:54.055] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:5] "tweaked" "multicore" "multiprocess" "future" ...
[10:54:54.055] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:54.055] |  :  .  |  :  .  |  :  .      ...)  
[10:54:54.055] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:54.055] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:54.055] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweaks")=List of 1
[10:54:54.055] |  :  .  |  :  .  |  :  .    .. ..$ workers: int 2
[10:54:54.055] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(multicore, workers = 2L)
[10:54:54.055] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55d8c4b21a20> 
[10:54:54.055] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:54.055] |  :  .  |  :  .  |  :  .      ...)  
[10:54:54.055] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:54.055] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:54.055] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:54.055] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:54.055] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:54.055] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:54.055] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:54.060] |  :  .  |  :  .  |  :  .  Formals differ
[10:54:54.060] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:54:54.060] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:54:54.060] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:54:54.061] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:54:54.061] |  :  .  |  :  .  |  List of future strategies:
[10:54:54.061] |  :  .  |  :  .  |  1. multicore:
[10:54:54.061] |  :  .  |  :  .  |     - args: function (..., workers = 2L, envir = parent.frame())
[10:54:54.061] |  :  .  |  :  .  |     - tweaked: TRUE
[10:54:54.061] |  :  .  |  :  .  |     - call: plan(multicore, workers = 2L)
[10:54:54.061] |  :  .  |  :  .  |  List of 1
[10:54:54.061] |  :  .  |  :  .  |   $ :function (..., workers = 2L, envir = parent.frame())  
[10:54:54.061] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:5] "tweaked" "multicore" "multiprocess" "future" ...
[10:54:54.061] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:54.061] |  :  .  |  :  .  |      ...)  
[10:54:54.061] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:54.061] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:54.061] |  :  .  |  :  .  |    ..- attr(*, "tweaks")=List of 1
[10:54:54.061] |  :  .  |  :  .  |    .. ..$ workers: int 2
[10:54:54.061] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(multicore, workers = 2L)
[10:54:54.061] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55d8c4b21a20> 
[10:54:54.061] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:54.061] |  :  .  |  :  .  |      ...)  
[10:54:54.061] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:54.061] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:54.065] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:54:54.065] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:54:54.065] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:54.065] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘tweaked’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:54:54.065] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:54.065] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:54:54.065] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:54.066] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:54.066] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:54.067] |  :  readImmediateCondition() ...
[10:54:54.068] |  :    - path: ‘/tmp/RtmpRhHuml/.future/immediateConditions’
[10:54:54.068] |  :   - Number of RDS files: 0
[10:54:54.068] |  :  readImmediateCondition() ... DONE
[10:54:54.068] |  checking value #2 ... done
[10:54:54.079] |  Number of remaining objects: 2
[10:54:54.079] |  checking value #1 ...
[10:54:54.079] |  :  'obj' is MulticoreFuture
[10:54:54.079] |  :  readImmediateCondition() ...
[10:54:54.079] |  :    - path: ‘/tmp/RtmpRhHuml/.future/immediateConditions’
[10:54:54.080] |  :   - Number of RDS files: 0
[10:54:54.080] |  :  readImmediateCondition() ... DONE
[10:54:54.080] |  :  MulticoreFuture #1
[10:54:54.080] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:54:54.080] |  :  .  nx: 2
[10:54:54.080] |  :  .  relay: TRUE
[10:54:54.080] |  :  .  stdout: TRUE
[10:54:54.081] |  :  .  signal: TRUE
[10:54:54.081] |  :  .  resignal: FALSE
[10:54:54.081] |  :  .  force: TRUE
[10:54:54.081] |  :  .  relayed: [n=2] FALSE, FALSE
[10:54:54.081] |  :  .  queued futures: [n=2] FALSE, FALSE
[10:54:54.081] |  :  .  until=1
[10:54:54.081] |  :  .  relaying element #1
[10:54:54.083] |  :  .  result() for MulticoreFuture ...
[10:54:54.084] |  :  .  |  readImmediateCondition() ...
[10:54:54.084] |  :  .  |    - path: ‘/tmp/RtmpRhHuml/.future/immediateConditions’
[10:54:54.084] |  :  .  |   - Number of RDS files: 0
[10:54:54.084] |  :  .  |  readImmediateCondition() ... DONE
[10:54:54.085] |  :  .  |  result() for MulticoreFuture ...
[10:54:54.085] |  :  .  |  result() for MulticoreFuture ... done
[10:54:54.085] |  :  .  result() for MulticoreFuture ... done
[10:54:54.085] |  :  .  result() for MulticoreFuture ...
[10:54:54.085] |  :  .  result() for MulticoreFuture ... done
[10:54:54.086] |  :  .  result() for MulticoreFuture ...
[10:54:54.086] |  :  .  result() for MulticoreFuture ... done
[10:54:54.086] |  :  .  result() for MulticoreFuture ...
[10:54:54.086] |  :  .  result() for MulticoreFuture ... done
[10:54:54.086] |  :  .  relayed: [n=2] TRUE, FALSE
[10:54:54.086] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:54:54.086] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ... done
[10:54:54.087] |  :  value(<MulticoreFuture>, ...) ...
[10:54:54.087] |  :  .  result() for MulticoreFuture ...
[10:54:54.087] |  :  .  result() for MulticoreFuture ... done
[10:54:54.087] |  :  .  result() for MulticoreFuture ...
[10:54:54.087] |  :  .  result() for MulticoreFuture ... done
[10:54:54.088] |  :  .  value: <character>
[10:54:54.088] |  :  value(<MulticoreFuture>, ...) ... done
[10:54:54.088] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:54:54.088] |  :  .  nx: 2
[10:54:54.088] |  :  .  relay: TRUE
[10:54:54.089] |  :  .  stdout: TRUE
[10:54:54.089] |  :  .  signal: TRUE
[10:54:54.089] |  :  .  resignal: FALSE
[10:54:54.089] |  :  .  force: TRUE
[10:54:54.089] |  :  .  relayed: [n=2] TRUE, FALSE
[10:54:54.089] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:54:54.090] |  :  .  until=2
[10:54:54.090] |  :  .  relaying element #2
[10:54:54.090] |  :  .  relayed: [n=2] TRUE, FALSE
[10:54:54.090] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:54:54.090] |  :  signalConditionsASAP(NULL, pos=1) ... done
[10:54:54.091] |  :  length: 1 (resolved future 1)
[10:54:54.091] |  checking value #1 ... done
[10:54:54.091] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:54.091] |  checking value #2 ...
[10:54:54.091] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:54.091] |  :  'obj' is MulticoreFuture
[10:54:54.092] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:54.092] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:54:54.092] |  :  .  |  :  .  |  :  New stack:
[10:54:54.092] |  :  .  |  :  .  |  :  List of 1
[10:54:54.092] |  :  .  |  :  .  |  :   $ :function (..., workers = 2L, envir = parent.frame())  
[10:54:54.092] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:5] "tweaked" "multicore" "multiprocess" "future" ...
[10:54:54.092] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:54.092] |  :  .  |  :  .  |  :      ...)  
[10:54:54.092] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:54.092] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:54.092] |  :  .  |  :  .  |  :    ..- attr(*, "tweaks")=List of 1
[10:54:54.092] |  :  .  |  :  .  |  :    .. ..$ workers: int 2
[10:54:54.092] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(multicore, workers = 2L)
[10:54:54.092] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55d8c4b21a20> 
[10:54:54.092] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:54.092] |  :  .  |  :  .  |  :      ...)  
[10:54:54.092] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:54.092] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:54.098] |  :  .  |  :  .  |  :  Old stack:
[10:54:54.098] |  :  .  |  :  .  |  :  List of 1
[10:54:54.098] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:54.098] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:54.098] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:54.098] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:54.098] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:54.098] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:54.098] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:54.100] |  :  .  |  :  .  |  :  Not identical
[10:54:54.100] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:54:54.102] |  :  readImmediateCondition() ...
[10:54:54.102] |  :    - path: ‘/tmp/RtmpRhHuml/.future/immediateConditions’
[10:54:54.102] |  :   - Number of RDS files: 0
[10:54:54.103] |  :  readImmediateCondition() ... DONE
[10:54:54.103] |  checking value #2 ... done
[10:54:54.101] |  :  .  |  :  .  |  :  .  List of 2
[10:54:54.101] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = 2L, envir = parent.frame())  
[10:54:54.101] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:5] "tweaked" "multicore" "multiprocess" "future" ...
[10:54:54.101] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:54.101] |  :  .  |  :  .  |  :  .      ...)  
[10:54:54.101] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:54.101] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:54.101] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweaks")=List of 1
[10:54:54.101] |  :  .  |  :  .  |  :  .    .. ..$ workers: int 2
[10:54:54.101] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(multicore, workers = 2L)
[10:54:54.101] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55d8c4b21a20> 
[10:54:54.101] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:54.101] |  :  .  |  :  .  |  :  .      ...)  
[10:54:54.101] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:54.101] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:54.101] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:54.101] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:54.101] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:54.101] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:54.101] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:54.107] |  :  .  |  :  .  |  :  .  Formals differ
[10:54:54.107] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:54:54.107] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:54:54.107] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:54:54.107] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:54:54.107] |  :  .  |  :  .  |  List of future strategies:
[10:54:54.107] |  :  .  |  :  .  |  1. multicore:
[10:54:54.107] |  :  .  |  :  .  |     - args: function (..., workers = 2L, envir = parent.frame())
[10:54:54.107] |  :  .  |  :  .  |     - tweaked: TRUE
[10:54:54.107] |  :  .  |  :  .  |     - call: plan(multicore, workers = 2L)
[10:54:54.108] |  :  .  |  :  .  |  List of 1
[10:54:54.108] |  :  .  |  :  .  |   $ :function (..., workers = 2L, envir = parent.frame())  
[10:54:54.108] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:5] "tweaked" "multicore" "multiprocess" "future" ...
[10:54:54.108] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:54.108] |  :  .  |  :  .  |      ...)  
[10:54:54.108] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:54.108] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:54.108] |  :  .  |  :  .  |    ..- attr(*, "tweaks")=List of 1
[10:54:54.108] |  :  .  |  :  .  |    .. ..$ workers: int 2
[10:54:54.108] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(multicore, workers = 2L)
[10:54:54.108] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55d8c4b21a20> 
[10:54:54.108] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:54.108] |  :  .  |  :  .  |      ...)  
[10:54:54.108] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:54.108] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:54.111] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:54:54.111] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:54:54.112] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:54.112] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘tweaked’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:54:54.112] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:54.112] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:54:54.112] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:54.112] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:54.112] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:54.113] |  Number of remaining objects: 1
[10:54:54.113] |  checking value #2 ...
[10:54:54.113] |  :  'obj' is MulticoreFuture
[10:54:54.114] |  :  readImmediateCondition() ...
[10:54:54.114] |  :    - path: ‘/tmp/RtmpRhHuml/.future/immediateConditions’
[10:54:54.114] |  :   - Number of RDS files: 0
[10:54:54.114] |  :  readImmediateCondition() ... DONE
[10:54:54.114] |  :  MulticoreFuture #2
[10:54:54.114] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:54:54.115] |  :  .  nx: 2
[10:54:54.115] |  :  .  relay: TRUE
[10:54:54.115] |  :  .  stdout: TRUE
[10:54:54.115] |  :  .  signal: TRUE
[10:54:54.115] |  :  .  resignal: FALSE
[10:54:54.115] |  :  .  force: TRUE
[10:54:54.115] |  :  .  relayed: [n=2] TRUE, FALSE
[10:54:54.115] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:54:54.115] |  :  .  until=2
[10:54:54.115] |  :  .  relaying element #2
[10:54:54.116] |  :  .  result() for MulticoreFuture ...
[10:54:54.116] |  :  .  |  readImmediateCondition() ...
[10:54:54.116] |  :  .  |    - path: ‘/tmp/RtmpRhHuml/.future/immediateConditions’
[10:54:54.117] |  :  .  |   - Number of RDS files: 0
[10:54:54.117] |  :  .  |  readImmediateCondition() ... DONE
[10:54:54.117] |  :  .  |  result() for MulticoreFuture ...
[10:54:54.117] |  :  .  |  result() for MulticoreFuture ... done
[10:54:54.117] |  :  .  result() for MulticoreFuture ... done
[10:54:54.117] |  :  .  result() for MulticoreFuture ...
[10:54:54.118] |  :  .  result() for MulticoreFuture ... done
[10:54:54.118] |  :  .  result() for MulticoreFuture ...
[10:54:54.118] |  :  .  result() for MulticoreFuture ... done
[10:54:54.118] |  :  .  result() for MulticoreFuture ...
[10:54:54.118] |  :  .  result() for MulticoreFuture ... done
[10:54:54.119] |  :  .  relayed: [n=2] TRUE, TRUE
[10:54:54.119] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:54:54.119] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:54:54.119] |  :  value(<MulticoreFuture>, ...) ...
[10:54:54.119] |  :  .  result() for MulticoreFuture ...
[10:54:54.119] |  :  .  result() for MulticoreFuture ... done
[10:54:54.119] |  :  .  result() for MulticoreFuture ...
[10:54:54.120] |  :  .  result() for MulticoreFuture ... done
[10:54:54.120] |  :  .  value: <character>
[10:54:54.120] |  :  value(<MulticoreFuture>, ...) ... done
[10:54:54.120] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:54:54.120] |  :  .  nx: 2
[10:54:54.120] |  :  .  relay: TRUE
[10:54:54.120] |  :  .  stdout: TRUE
[10:54:54.121] |  :  .  signal: TRUE
[10:54:54.121] |  :  .  resignal: FALSE
[10:54:54.121] |  :  .  force: TRUE
[10:54:54.121] |  :  .  relayed: [n=2] TRUE, TRUE
[10:54:54.121] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:54:54.121] |  :  .  until=2
[10:54:54.121] |  :  .  relayed: [n=2] TRUE, TRUE
[10:54:54.121] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:54:54.122] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:54:54.122] |  :  length: 0 (resolved future 2)
[10:54:54.122] |  checking value #2 ... done
[10:54:54.122] |  Relaying remaining futures ...
[10:54:54.122] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:54:54.122] |  :  .  nx: 2
[10:54:54.122] |  :  .  relay: TRUE
[10:54:54.122] |  :  .  stdout: TRUE
[10:54:54.123] |  :  .  signal: TRUE
[10:54:54.123] |  :  .  resignal: FALSE
[10:54:54.123] |  :  .  force: TRUE
[10:54:54.123] |  :  .  relayed: [n=2] TRUE, TRUE
[10:54:54.123] |  :  .  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:54:54.123] |  :  .  relayed: [n=2] TRUE, TRUE
[10:54:54.123] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:54:54.123] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:54:54.123] |  Relaying remaining futures ... done
[10:54:54.123] value() on list ... done
[1] "08f90b87742cdd8bea358f42a9823521" "888e2cb52415758d953572d69f9fb03b"

> message("*** session_uuid() ... DONE")
*** session_uuid() ... DONE
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=0.2s, sys.self=0.03s, elapsed=0.5s, user.child=0.1s, sys.child=0.04s
Test ‘uuid’ ... success
> 
