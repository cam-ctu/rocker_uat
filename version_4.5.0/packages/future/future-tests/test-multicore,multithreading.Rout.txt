
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script incl/testme/test-multicore,multithreading.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future:::testme("multicore,multithreading")
Test ‘multicore,multithreading’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future/testme/test-multicore,multithreading.R’

> library(future)
[10:53:49.694] Option 'future.startup.script': TRUE
[10:53:49.694] Future startup scripts considered: ‘.future.R’, ‘~/.future.R’
[10:53:49.695] Future startup scripts found: <none>

> plan(multicore)
[10:53:49.695] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:49.696] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:53:49.696] |  :  all.equal() for FutureStrategyList ...
[10:53:49.696] |  :  .  New stack:
[10:53:49.696] |  :  .  List of 1
[10:53:49.696] |  :  .   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:49.696] |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:49.696] |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:49.696] |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.696] |  :  .      ...)  
[10:53:49.696] |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.696] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.696] |  :  .    ..- attr(*, "call")= language plan(multicore)
[10:53:49.696] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:49.700] |  :  .  Old stack:
[10:53:49.700] |  :  .  List of 1
[10:53:49.700] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:49.700] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:49.700] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:49.700] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.700] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.700] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:53:49.700] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:49.702] |  :  .  Not identical
[10:53:49.702] |  :  .  all.equal() for future ...
[10:53:49.702] |  :  .  |  List of 2
[10:53:49.702] |  :  .  |   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:49.702] |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:49.702] |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:49.702] |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.702] |  :  .  |      ...)  
[10:53:49.702] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.702] |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.702] |  :  .  |    ..- attr(*, "call")= language plan(multicore)
[10:53:49.702] |  :  .  |   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:49.702] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:49.702] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:49.702] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.702] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.702] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:49.707] |  :  .  |  Formals differ
[10:53:49.708] |  :  .  all.equal() for future ... done
[10:53:49.708] |  :  .  Future strategies differ at level 1
[10:53:49.708] |  :  all.equal() for FutureStrategyList ... done
[10:53:49.708] |  :  plan(): Setting new future strategy stack:
[10:53:49.708] |  :  List of future strategies:
[10:53:49.708] |  :  1. multicore:
[10:53:49.708] |  :     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:49.708] |  :     - tweaked: FALSE
[10:53:49.708] |  :     - call: plan(multicore)
[10:53:49.708] |  :  List of 1
[10:53:49.708] |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:49.708] |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:49.708] |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:49.708] |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.708] |  :      ...)  
[10:53:49.708] |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.708] |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.708] |  :    ..- attr(*, "call")= language plan(multicore)
[10:53:49.708] |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:49.711] |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:53:49.711] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:49.711] |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:49.711] |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:49.711] |  :  .  Legacy shutdown of cluster workers ...
[10:53:49.712] |  :  .  |  Stopping existing cluster ...
[10:53:49.712] |  :  .  |  :  No pre-existing cluster. Skipping
[10:53:49.712] |  :  .  |  Stopping existing cluster ... done
[10:53:49.712] |  :  .  Legacy shutdown of cluster workers ... done
[10:53:49.712] |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:53:49.712] |  :  plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ...
[10:53:49.712] |  :  .  function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:49.712] |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:49.712] |  :  .   - attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:49.712] |  :  .   - attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.712] |  :  .      ...)  
[10:53:49.712] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.712] |  :  .   - attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.712] |  :  .   - attr(*, "call")= language plan(multicore)
[10:53:49.714] |  :  .  init: NULL
[10:53:49.714] |  :  plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ... done
[10:53:49.714] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:49.714] |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:49.715] |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:49.715] |  :  Backend function: <‘NULL’>
[10:53:49.716] |  :  Backend: <‘MulticoreFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:49.717] |  :  plan(): nbrOfWorkers() = 2
[10:53:49.717] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:53:49.717] plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done

> message("*** multicore() and multi-threading ...")
*** multicore() and multi-threading ...

> message("supportsMulticore(): ", sQuote(supportsMulticore()))
supportsMulticore(): ‘TRUE’

> message("availableCores('multicore'): ", sQuote(availableCores("multicore")))
availableCores('multicore'): ‘2’

> message("supports_omp_threads(): ", sQuote(supports_omp_threads()))
[10:53:49.722] supports_omp_threads() = TRUE
supports_omp_threads(): ‘TRUE’

> if (requireNamespace("RhpcBLASctl", quietly = TRUE)) {
+     message("Checking RhpcBLASctl capabilities ...")
+     nthreads_0 <- RhpcBLASctl::omp_g .... [TRUNCATED] 
Checking RhpcBLASctl capabilities ...
List of 1
 $ nthreads_0: int 4
- Number of OpenMP threads: ‘4’
- Trying to set number of OpenMP threads to one
List of 1
 $ nthreads_1: int 1
  - Number of OpenMP threads: ‘1’
[10:53:49.725] getGlobalsAndPackages() ...
[10:53:49.725] |  Searching for globals ...
[10:53:49.731] |  :  globals found: [1] ‘::’
[10:53:49.731] |  Searching for globals ... DONE
[10:53:49.731] |  Resolving globals: FALSE
[10:53:49.731] |  Search for packages associated with the globals ...
[10:53:49.732] |  :  Packages associated with globals: [1] ‘base’
[10:53:49.732] |  :  Packages: [1] ‘base’
[10:53:49.732] |  Search for packages associated with the globals ... DONE
[10:53:49.732] |  Packages after dropping 'base': [0] 
[10:53:49.732] |  globals: [0] 
[10:53:49.732] |  packages: [0] 
[10:53:49.732] getGlobalsAndPackages() ... done
[10:53:49.733] run() for Future (‘Future’) ...
[10:53:49.733] |  state: ‘created’
[10:53:49.733] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:49.733] |  :  makeFutureBackend(<multicore>) ...
[10:53:49.733] |  :  .  Backend function: <‘NULL’>
[10:53:49.746] |  :  .  Backend: <‘MulticoreFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:49.746] |  :  makeFutureBackend(<multicore>) ... done
[10:53:49.746] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:49.746] |  Using MulticoreFutureBackend ...
[10:53:49.747] |  :  Launching futures ...
[10:53:49.747] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:49.747] |  :  .  |  getFutureData() ...
[10:53:49.747] |  :  .  |  :  getFutureCore() ...
[10:53:49.747] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:49.747] |  :  .  |  :  getFutureCore() ... done
[10:53:49.747] |  :  .  |  :  getFutureCapture() ...
[10:53:49.748] |  :  .  |  :  getFutureCapture() ... done
[10:53:49.748] |  :  .  |  :  getFutureContext() ...
[10:53:49.748] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:49.748] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:49.748] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:49.748] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:49.748] |  :  .  |  :  getFutureContext() ... done
[10:53:49.749] |  :  .  |  getFutureData() ... done
[10:53:49.749] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:49.749] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:49.752] |  :  .  |  MulticoreFuture started
[10:53:49.753] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:49.753] |  :  Launching futures ... done
[10:53:49.753] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:49.754] |  Using MulticoreFutureBackend ... done
[10:53:49.754] run() for Future (‘MulticoreFuture’) ... done
[10:53:49.755] |  :  .  |  attachPackages() ...
[10:53:49.755] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:49.756] |  :  .  |  attachPackages() ... DONE
[10:53:49.756] |  :  .  |  attachPackages() ...
[10:53:49.756] |  :  .  |  :  packages: [n=0] 
[10:53:49.756] |  :  .  |  attachPackages() ... DONE
[10:53:49.757] result() for MulticoreFuture ...
[10:53:49.757] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:49.757] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:49.758] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:49.758] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:49.759] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:49.759] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:49.759] |  :  .  |  :  .  |  New stack:
[10:53:49.759] |  :  .  |  :  .  |  List of 1
[10:53:49.759] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:49.759] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:49.759] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:49.759] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.759] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.759] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:49.759] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:49.763] |  :  .  |  :  .  |  Old stack:
[10:53:49.763] |  :  .  |  :  .  |  List of 1
[10:53:49.763] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:49.763] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:49.763] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:49.763] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.763] |  :  .  |  :  .  |      ...)  
[10:53:49.763] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.763] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.763] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(multicore)
[10:53:49.763] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5574f438a5f0> 
[10:53:49.763] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.763] |  :  .  |  :  .  |      ...)  
[10:53:49.763] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.763] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:49.768] |  :  .  |  :  .  |  Not identical
[10:53:49.768] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:49.768] |  :  .  |  :  .  |  :  List of 2
[10:53:49.768] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:49.768] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:49.768] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:49.768] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.768] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.768] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:49.768] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:49.768] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:49.768] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:49.768] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.768] |  :  .  |  :  .  |  :      ...)  
[10:53:49.768] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.768] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.768] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(multicore)
[10:53:49.768] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5574f438a5f0> 
[10:53:49.768] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.768] |  :  .  |  :  .  |  :      ...)  
[10:53:49.768] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.775] |  :  .  |  :  .  |  :  Formals differ
[10:53:49.775] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:49.776] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:49.776] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:49.776] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:49.776] |  :  .  |  :  .  List of future strategies:
[10:53:49.776] |  :  .  |  :  .  1. sequential:
[10:53:49.776] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:49.776] |  :  .  |  :  .     - tweaked: FALSE
[10:53:49.776] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:49.777] |  :  .  |  :  .  List of 1
[10:53:49.777] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:49.777] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:49.777] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:49.777] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.777] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.777] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:49.777] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:49.784] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:49.784] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:49.785] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:49.785] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:49.785] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:49.785] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:49.785] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:49.786] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:49.786] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:49.786] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:49.790] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:49.790] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:49.791] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:49.791] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:49.791] |  :  .  |  :  .  |  :  New stack:
[10:53:49.791] |  :  .  |  :  .  |  :  List of 1
[10:53:49.791] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:49.791] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:49.791] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:49.791] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.791] |  :  .  |  :  .  |  :      ...)  
[10:53:49.791] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.791] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.791] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(multicore)
[10:53:49.791] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5574f438a5f0> 
[10:53:49.791] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.791] |  :  .  |  :  .  |  :      ...)  
[10:53:49.791] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.791] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:49.795] |  :  .  |  :  .  |  :  Old stack:
[10:53:49.795] |  :  .  |  :  .  |  :  List of 1
[10:53:49.795] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:49.795] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:49.795] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:49.795] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.795] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.795] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:49.795] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:49.797] |  :  .  |  :  .  |  :  Not identical
[10:53:49.798] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:49.798] |  :  .  |  :  .  |  :  .  List of 2
[10:53:49.798] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:49.798] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:49.798] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:49.798] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.798] |  :  .  |  :  .  |  :  .      ...)  
[10:53:49.798] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.798] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.798] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(multicore)
[10:53:49.798] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5574f438a5f0> 
[10:53:49.798] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.798] |  :  .  |  :  .  |  :  .      ...)  
[10:53:49.798] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.798] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:49.798] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:49.798] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:49.798] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.798] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.798] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:49.802] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:49.802] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:49.802] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:49.802] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:49.802] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:49.803] |  :  .  |  :  .  |  List of future strategies:
[10:53:49.803] |  :  .  |  :  .  |  1. multicore:
[10:53:49.803] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:49.803] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:49.803] |  :  .  |  :  .  |     - call: plan(multicore)
[10:53:49.803] |  :  .  |  :  .  |  List of 1
[10:53:49.803] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:49.803] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:49.803] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:49.803] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.803] |  :  .  |  :  .  |      ...)  
[10:53:49.803] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.803] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.803] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(multicore)
[10:53:49.803] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5574f438a5f0> 
[10:53:49.803] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.803] |  :  .  |  :  .  |      ...)  
[10:53:49.803] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.803] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:49.806] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:49.806] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:49.806] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:49.806] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:49.806] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:49.807] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:49.807] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:49.807] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:49.807] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:49.808] |  readImmediateCondition() ...
[10:53:49.808] |    - path: ‘/tmp/RtmpyZ52AP/.future/immediateConditions’
[10:53:49.808] |   - Number of RDS files: 0
[10:53:49.808] |  readImmediateCondition() ... DONE
[10:53:49.813] |  result() for MulticoreFuture ...
[10:53:49.813] |  result() for MulticoreFuture ... done
[10:53:49.813] result() for MulticoreFuture ... done
[10:53:49.813] result() for MulticoreFuture ...
[10:53:49.813] result() for MulticoreFuture ... done
List of 1
 $ nthreads_child: int 4
  - Number of OpenMP threads in ‘MulticoreFuture’ future: ‘4’
List of 1
 $ nthreads_children:List of 2
  ..$ : int 4
  ..$ : int 4
  - Number of OpenMP threads in mclapply(): ‘4’
- Trying to reset number of OpenMP threads
List of 1
 $ nthreads_2: int 4
  - Number of OpenMP threads: ‘4’
Checking RhpcBLASctl capabilities ... done

> if (supportsMulticore() && availableCores("multicore") >= 
+     2 && supports_omp_threads()) {
+     nthreads_0 <- RhpcBLASctl::omp_get_max_threads .... [TRUNCATED] 
[10:53:49.824] supports_omp_threads() = TRUE
'future.fork.multithreading.enable' = TRUE ...
[10:53:49.838] getGlobalsAndPackages() ...
[10:53:49.838] |  Searching for globals ...
[10:53:49.839] |  :  globals found: [2] ‘list’, ‘::’
[10:53:49.839] |  Searching for globals ... DONE
[10:53:49.839] |  Resolving globals: FALSE
[10:53:49.839] |  Search for packages associated with the globals ...
[10:53:49.840] |  :  Packages associated with globals: [1] ‘base’
[10:53:49.840] |  :  Packages: [1] ‘base’
[10:53:49.840] |  Search for packages associated with the globals ... DONE
[10:53:49.840] |  Packages after dropping 'base': [0] 
[10:53:49.840] |  globals: [0] 
[10:53:49.841] |  packages: [0] 
[10:53:49.841] getGlobalsAndPackages() ... done
[10:53:49.841] run() for Future (‘Future’) ...
[10:53:49.841] |  state: ‘created’
[10:53:49.841] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:49.841] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:49.841] |  Using MulticoreFutureBackend ...
[10:53:49.842] |  :  Launching futures ...
[10:53:49.842] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:49.842] |  :  .  |  getFutureData() ...
[10:53:49.842] |  :  .  |  :  getFutureCore() ...
[10:53:49.842] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:49.842] |  :  .  |  :  getFutureCore() ... done
[10:53:49.842] |  :  .  |  :  getFutureCapture() ...
[10:53:49.842] |  :  .  |  :  getFutureCapture() ... done
[10:53:49.843] |  :  .  |  :  getFutureContext() ...
[10:53:49.843] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:49.843] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:49.843] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:49.843] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:49.843] |  :  .  |  :  getFutureContext() ... done
[10:53:49.843] |  :  .  |  getFutureData() ... done
[10:53:49.844] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:49.844] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:49.845] |  :  .  |  MulticoreFuture started
[10:53:49.846] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:49.846] |  :  Launching futures ... done
[10:53:49.846] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:49.846] |  Using MulticoreFutureBackend ... done
[10:53:49.847] run() for Future (‘MulticoreFuture’) ... done
[10:53:49.847] result() for MulticoreFuture ...
[10:53:49.849] |  :  .  |  attachPackages() ...
[10:53:49.849] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:49.849] |  :  .  |  attachPackages() ... DONE
[10:53:49.849] |  :  .  |  attachPackages() ...
[10:53:49.850] |  :  .  |  :  packages: [n=0] 
[10:53:49.850] |  :  .  |  attachPackages() ... DONE
[10:53:49.851] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:49.851] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:49.851] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:49.852] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:49.852] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:49.852] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:49.853] |  :  .  |  :  .  |  New stack:
[10:53:49.853] |  :  .  |  :  .  |  List of 1
[10:53:49.853] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:49.853] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:49.853] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:49.853] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.853] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.853] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:49.853] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:49.857] |  :  .  |  :  .  |  Old stack:
[10:53:49.857] |  :  .  |  :  .  |  List of 1
[10:53:49.857] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:49.857] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:49.857] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:49.857] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.857] |  :  .  |  :  .  |      ...)  
[10:53:49.857] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.857] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.857] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(multicore)
[10:53:49.857] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5574f438a5f0> 
[10:53:49.857] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.857] |  :  .  |  :  .  |      ...)  
[10:53:49.857] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.857] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:49.861] |  :  .  |  :  .  |  Not identical
[10:53:49.861] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:49.862] |  :  .  |  :  .  |  :  List of 2
[10:53:49.862] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:49.862] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:49.862] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:49.862] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.862] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.862] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:49.862] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:49.862] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:49.862] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:49.862] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.862] |  :  .  |  :  .  |  :      ...)  
[10:53:49.862] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.862] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.862] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(multicore)
[10:53:49.862] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5574f438a5f0> 
[10:53:49.862] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.862] |  :  .  |  :  .  |  :      ...)  
[10:53:49.862] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.870] |  :  .  |  :  .  |  :  Formals differ
[10:53:49.870] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:49.871] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:49.871] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:49.871] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:49.871] |  :  .  |  :  .  List of future strategies:
[10:53:49.871] |  :  .  |  :  .  1. sequential:
[10:53:49.871] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:49.871] |  :  .  |  :  .     - tweaked: FALSE
[10:53:49.871] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:49.873] |  :  .  |  :  .  List of 1
[10:53:49.873] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:49.873] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:49.873] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:49.873] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.873] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.873] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:49.873] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:49.876] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:49.876] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:49.877] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:49.877] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:49.877] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:49.877] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:49.878] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:49.878] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:49.878] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:49.878] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:49.882] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:49.882] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:49.882] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:49.883] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:49.883] |  :  .  |  :  .  |  :  New stack:
[10:53:49.883] |  :  .  |  :  .  |  :  List of 1
[10:53:49.883] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:49.883] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:49.883] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:49.883] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.883] |  :  .  |  :  .  |  :      ...)  
[10:53:49.883] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.883] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.883] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(multicore)
[10:53:49.883] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5574f438a5f0> 
[10:53:49.883] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.883] |  :  .  |  :  .  |  :      ...)  
[10:53:49.883] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.883] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:49.886] |  :  .  |  :  .  |  :  Old stack:
[10:53:49.887] |  :  .  |  :  .  |  :  List of 1
[10:53:49.887] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:49.887] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:49.887] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:49.887] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.887] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.887] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:49.887] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:49.889] |  :  .  |  :  .  |  :  Not identical
[10:53:49.889] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:49.889] |  :  .  |  :  .  |  :  .  List of 2
[10:53:49.889] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:49.889] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:49.889] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:49.889] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.889] |  :  .  |  :  .  |  :  .      ...)  
[10:53:49.889] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.889] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.889] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(multicore)
[10:53:49.889] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5574f438a5f0> 
[10:53:49.889] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.889] |  :  .  |  :  .  |  :  .      ...)  
[10:53:49.889] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.889] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:49.889] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:49.889] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:49.889] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.889] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.889] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:49.893] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:49.893] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:49.893] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:49.894] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:49.894] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:49.894] |  :  .  |  :  .  |  List of future strategies:
[10:53:49.894] |  :  .  |  :  .  |  1. multicore:
[10:53:49.894] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:49.894] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:49.894] |  :  .  |  :  .  |     - call: plan(multicore)
[10:53:49.894] |  :  .  |  :  .  |  List of 1
[10:53:49.894] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:49.894] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:49.894] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:49.894] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.894] |  :  .  |  :  .  |      ...)  
[10:53:49.894] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.894] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.894] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(multicore)
[10:53:49.894] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5574f438a5f0> 
[10:53:49.894] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.894] |  :  .  |  :  .  |      ...)  
[10:53:49.894] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.894] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:49.898] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:49.899] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:49.899] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:49.899] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:49.899] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:49.899] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:49.899] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:49.899] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:49.899] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:49.900] |  readImmediateCondition() ...
[10:53:49.900] |    - path: ‘/tmp/RtmpyZ52AP/.future/immediateConditions’
[10:53:49.900] |   - Number of RDS files: 0
[10:53:49.901] |  readImmediateCondition() ... DONE
[10:53:49.901] |  result() for MulticoreFuture ...
[10:53:49.901] |  result() for MulticoreFuture ... done
[10:53:49.901] result() for MulticoreFuture ... done
[10:53:49.901] result() for MulticoreFuture ...
[10:53:49.901] result() for MulticoreFuture ... done
Number of OpenMP threads in ‘MulticoreFuture’ future: 4
'future.fork.multithreading.enable' = TRUE ... DONE
'future.fork.multithreading.enable' = FALSE ...
[10:53:49.902] getGlobalsAndPackages() ...
[10:53:49.902] |  Searching for globals ...
[10:53:49.903] |  :  globals found: [2] ‘list’, ‘::’
[10:53:49.903] |  Searching for globals ... DONE
[10:53:49.904] |  Resolving globals: FALSE
[10:53:49.904] |  Search for packages associated with the globals ...
[10:53:49.904] |  :  Packages associated with globals: [1] ‘base’
[10:53:49.904] |  :  Packages: [1] ‘base’
[10:53:49.904] |  Search for packages associated with the globals ... DONE
[10:53:49.905] |  Packages after dropping 'base': [0] 
[10:53:49.905] |  globals: [0] 
[10:53:49.905] |  packages: [0] 
[10:53:49.905] getGlobalsAndPackages() ... done
[10:53:49.905] run() for Future (‘Future’) ...
[10:53:49.905] |  state: ‘created’
[10:53:49.906] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:49.906] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:49.906] |  Using MulticoreFutureBackend ...
[10:53:49.906] |  :  Launching futures ...
[10:53:49.906] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:49.906] |  :  .  |  getFutureData() ...
[10:53:49.906] |  :  .  |  :  getFutureCore() ...
[10:53:49.907] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:49.907] |  :  .  |  :  getFutureCore() ... done
[10:53:49.907] |  :  .  |  :  getFutureCapture() ...
[10:53:49.907] |  :  .  |  :  getFutureCapture() ... done
[10:53:49.907] |  :  .  |  :  getFutureContext() ...
[10:53:49.907] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:49.907] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:49.907] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:49.908] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:49.908] |  :  .  |  :  getFutureContext() ... done
[10:53:49.908] |  :  .  |  :  supports_omp_threads() = TRUE
[10:53:49.908] |  :  .  |  :  Force single-threaded (OpenMP and RcppParallel) processing in MulticoreFuture
[10:53:49.908] |  :  .  |  getFutureData() ... done
[10:53:49.908] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:49.909] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:49.910] |  :  .  |  MulticoreFuture started
[10:53:49.911] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:49.911] |  :  Launching futures ... done
[10:53:49.911] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:49.911] |  Using MulticoreFutureBackend ... done
[10:53:49.911] run() for Future (‘MulticoreFuture’) ... done
[10:53:49.912] result() for MulticoreFuture ...
[10:53:49.913] |  :  .  |  canForceSingleThreading() ...
[10:53:49.914] |  :  .  |  :  results: TRUE
[10:53:49.914] |  :  .  |  canForceSingleThreading() ... DONE
[10:53:49.914] |  :  .  |  attachPackages() ...
[10:53:49.915] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:49.915] |  :  .  |  attachPackages() ... DONE
[10:53:49.915] |  :  .  |  attachPackages() ...
[10:53:49.915] |  :  .  |  :  packages: [n=0] 
[10:53:49.915] |  :  .  |  attachPackages() ... DONE
[10:53:49.916] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:49.916] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:49.917] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:49.918] |  :  .  |  setNumberOfThreads() ...
[10:53:49.918] |  :  .  |  :  arguments: openmp=1, rcpp=1
[10:53:49.918] |  :  .  |  :  canForceSingleThreading() ...
[10:53:49.918] |  :  .  |  :  .  results: TRUE (memoized)
[10:53:49.918] |  :  .  |  :  canForceSingleThreading() ... DONE
[10:53:49.918] |  :  .  |  :  previous settings: openmp=4, rcpp=
[10:53:49.919] |  :  .  |  :  new settings: openmp=1, rcpp=1
[10:53:49.919] |  :  .  |  setNumberOfThreads() ... DONE
[10:53:49.919] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:49.919] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:49.919] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:49.920] |  :  .  |  :  .  |  New stack:
[10:53:49.920] |  :  .  |  :  .  |  List of 1
[10:53:49.920] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:49.920] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:49.920] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:49.920] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.920] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.920] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:49.920] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:49.923] |  :  .  |  :  .  |  Old stack:
[10:53:49.924] |  :  .  |  :  .  |  List of 1
[10:53:49.924] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:49.924] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:49.924] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:49.924] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.924] |  :  .  |  :  .  |      ...)  
[10:53:49.924] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.924] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.924] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(multicore)
[10:53:49.924] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5574f438a5f0> 
[10:53:49.924] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.924] |  :  .  |  :  .  |      ...)  
[10:53:49.924] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.924] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:49.932] |  :  .  |  :  .  |  Not identical
[10:53:49.932] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:49.933] |  :  .  |  :  .  |  :  List of 2
[10:53:49.933] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:49.933] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:49.933] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:49.933] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.933] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.933] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:49.933] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:49.933] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:49.933] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:49.933] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.933] |  :  .  |  :  .  |  :      ...)  
[10:53:49.933] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.933] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.933] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(multicore)
[10:53:49.933] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5574f438a5f0> 
[10:53:49.933] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.933] |  :  .  |  :  .  |  :      ...)  
[10:53:49.933] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.940] |  :  .  |  :  .  |  :  Formals differ
[10:53:49.940] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:49.940] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:49.940] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:49.940] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:49.940] |  :  .  |  :  .  List of future strategies:
[10:53:49.940] |  :  .  |  :  .  1. sequential:
[10:53:49.940] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:49.940] |  :  .  |  :  .     - tweaked: FALSE
[10:53:49.940] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:49.941] |  :  .  |  :  .  List of 1
[10:53:49.941] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:49.941] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:49.941] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:49.941] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.941] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.941] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:49.941] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:49.945] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:49.945] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:49.945] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:49.945] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:49.945] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:49.946] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:49.946] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:49.946] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:49.946] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:49.946] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:49.950] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:49.950] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:49.951] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:49.951] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:49.951] |  :  .  |  :  .  |  :  New stack:
[10:53:49.951] |  :  .  |  :  .  |  :  List of 1
[10:53:49.951] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:49.951] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:49.951] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:49.951] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.951] |  :  .  |  :  .  |  :      ...)  
[10:53:49.951] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.951] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.951] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(multicore)
[10:53:49.951] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5574f438a5f0> 
[10:53:49.951] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.951] |  :  .  |  :  .  |  :      ...)  
[10:53:49.951] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.951] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:49.954] |  :  .  |  :  .  |  :  Old stack:
[10:53:49.954] |  :  .  |  :  .  |  :  List of 1
[10:53:49.954] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:49.954] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:49.954] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:49.954] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.954] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.954] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:49.954] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:49.957] |  :  .  |  :  .  |  :  Not identical
[10:53:49.957] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:49.957] |  :  .  |  :  .  |  :  .  List of 2
[10:53:49.957] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:49.957] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:49.957] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:49.957] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.957] |  :  .  |  :  .  |  :  .      ...)  
[10:53:49.957] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.957] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.957] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(multicore)
[10:53:49.957] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5574f438a5f0> 
[10:53:49.957] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.957] |  :  .  |  :  .  |  :  .      ...)  
[10:53:49.957] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.957] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:49.957] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:49.957] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:49.957] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.957] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:49.957] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:49.963] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:49.963] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:49.963] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:49.963] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:49.964] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:49.964] |  :  .  |  :  .  |  List of future strategies:
[10:53:49.964] |  :  .  |  :  .  |  1. multicore:
[10:53:49.964] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:49.964] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:49.964] |  :  .  |  :  .  |     - call: plan(multicore)
[10:53:49.964] |  :  .  |  :  .  |  List of 1
[10:53:49.964] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:49.964] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:49.964] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:49.964] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.964] |  :  .  |  :  .  |      ...)  
[10:53:49.964] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.964] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.964] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(multicore)
[10:53:49.964] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5574f438a5f0> 
[10:53:49.964] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:49.964] |  :  .  |  :  .  |      ...)  
[10:53:49.964] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:49.964] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:49.967] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:49.967] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:49.967] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:49.967] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:49.967] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:49.968] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:49.968] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:49.968] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:49.968] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:49.968] |  :  .  |  setNumberOfThreads() ...
[10:53:49.968] |  :  .  |  :  arguments: openmp=4, rcpp=
[10:53:49.968] |  :  .  |  :  canForceSingleThreading() ...
[10:53:49.968] |  :  .  |  :  .  results: TRUE (memoized)
[10:53:49.969] |  :  .  |  :  canForceSingleThreading() ... DONE
[10:53:49.969] |  :  .  |  :  previous settings: openmp=1, rcpp=1
[10:53:49.969] |  :  .  |  :  new settings: openmp=4, rcpp=
[10:53:49.969] |  :  .  |  setNumberOfThreads() ... DONE
[10:53:49.969] |  readImmediateCondition() ...
[10:53:49.969] |    - path: ‘/tmp/RtmpyZ52AP/.future/immediateConditions’
[10:53:49.970] |   - Number of RDS files: 0
[10:53:49.970] |  readImmediateCondition() ... DONE
[10:53:49.970] |  result() for MulticoreFuture ...
[10:53:49.970] |  result() for MulticoreFuture ... done
[10:53:49.970] result() for MulticoreFuture ... done
[10:53:49.971] result() for MulticoreFuture ...
[10:53:49.971] result() for MulticoreFuture ... done
Number of OpenMP threads in ‘MulticoreFuture’ future: 1
'future.fork.multithreading.enable' = FALSE ... DONE

> message("*** multicore() and multi-threading ... DONE")
*** multicore() and multi-threading ... DONE
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=0.2s, sys.self=0.02s, elapsed=0.4s, user.child=0.1s, sys.child=0.06s
Test ‘multicore,multithreading’ ... success
> 
