
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script incl/testme/test-futureAssign_OP.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future:::testme("futureAssign_OP")
Test ‘futureAssign_OP’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future/testme/test-futureAssign_OP.R’

> library(future)
[10:52:42.751] Option 'future.startup.script': TRUE
[10:52:42.752] Future startup scripts considered: ‘.future.R’, ‘~/.future.R’
[10:52:42.752] Future startup scripts found: <none>

> message("*** %<-% ...")
*** %<-% ...

> for (cores in 1:availCores) {
+     message(sprintf("Testing with %d cores ...", cores))
+     options(mc.cores = cores)
+     for (strategy in supp .... [TRUNCATED] 
Testing with 1 cores ...
*** %<-% with ‘sequential’ futures ...
[10:52:42.793] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:42.793] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:52:42.793] |  :  all.equal() for FutureStrategyList ...
[10:52:42.793] |  :  .  New stack:
[10:52:42.794] |  :  .  List of 1
[10:52:42.794] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.794] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.794] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.794] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.794] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.794] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:42.794] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:42.797] |  :  .  Old stack:
[10:52:42.797] |  :  .  List of 1
[10:52:42.797] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.797] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.797] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.797] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.797] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.797] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:52:42.797] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:42.799] |  :  .  Not identical
[10:52:42.799] |  :  .  all.equal() for future ...
[10:52:42.800] |  :  .  |  List of 2
[10:52:42.800] |  :  .  |   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.800] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.800] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.800] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.800] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.800] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:42.800] |  :  .  |   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.800] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.800] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.800] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.800] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.800] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:42.803] |  :  .  all.equal() for future ... done
[10:52:42.804] |  :  all.equal() for FutureStrategyList ... done
[10:52:42.804] |  :  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:42.804] |  :  List of future strategies:
[10:52:42.804] |  :  1. sequential:
[10:52:42.804] |  :     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:42.804] |  :     - tweaked: FALSE
[10:52:42.804] |  :     - call: plan(sequential)
[10:52:42.804] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:52:42.804] plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
** Future evaluation without globals
[10:52:42.806] getGlobalsAndPackages() ...
[10:52:42.806] |  Searching for globals ...
[10:52:42.814] |  :  globals found: [2] ‘{’, ‘<-’
[10:52:42.814] |  Searching for globals ... DONE
[10:52:42.815] |  Resolving globals: FALSE
[10:52:42.815] |  Search for packages associated with the globals ...
[10:52:42.815] |  :  Packages associated with globals: [1] ‘base’
[10:52:42.815] |  :  Packages: [1] ‘base’
[10:52:42.815] |  Search for packages associated with the globals ... DONE
[10:52:42.815] |  Packages after dropping 'base': [0] 
[10:52:42.816] |  globals: [0] 
[10:52:42.816] |  packages: [0] 
[10:52:42.816] getGlobalsAndPackages() ... done
[10:52:42.816] run() for Future (‘Future’) ...
[10:52:42.816] |  state: ‘created’
[10:52:42.817] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:42.817] |  :  makeFutureBackend(<sequential>) ...
[10:52:42.817] |  :  .  Backend function: <‘NULL’>
[10:52:42.817] |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:42.817] |  :  makeFutureBackend(<sequential>) ... done
[10:52:42.817] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:42.817] |  Using SequentialFutureBackend ...
[10:52:42.818] |  :  Launching futures ...
[10:52:42.818] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:42.818] |  :  .  |  getFutureData() ...
[10:52:42.818] |  :  .  |  :  getFutureCore() ...
[10:52:42.818] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:42.818] |  :  .  |  :  getFutureCore() ... done
[10:52:42.818] |  :  .  |  :  getFutureCapture() ...
[10:52:42.819] |  :  .  |  :  getFutureCapture() ... done
[10:52:42.819] |  :  .  |  :  getFutureContext() ...
[10:52:42.819] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:42.819] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:42.819] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:42.819] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:42.819] |  :  .  |  :  getFutureContext() ... done
[10:52:42.819] |  :  .  |  getFutureData() ... done
[10:52:42.820] |  :  .  |  attachPackages() ...
[10:52:42.821] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:42.821] |  :  .  |  attachPackages() ... DONE
[10:52:42.821] |  :  .  |  attachPackages() ...
[10:52:42.821] |  :  .  |  :  packages: [n=0] 
[10:52:42.821] |  :  .  |  attachPackages() ... DONE
[10:52:42.821] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:42.821] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:42.822] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:42.822] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:42.822] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:42.822] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:42.822] |  :  .  |  :  .  |  New stack:
[10:52:42.823] |  :  .  |  :  .  |  List of 1
[10:52:42.823] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.823] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.823] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.823] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.823] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.823] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:42.823] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:42.825] |  :  .  |  :  .  |  Old stack:
[10:52:42.825] |  :  .  |  :  .  |  List of 1
[10:52:42.825] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.825] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.825] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.825] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.825] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.825] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:42.825] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:42.825] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.825] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.825] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:42.828] |  :  .  |  :  .  |  Not identical
[10:52:42.828] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:42.828] |  :  .  |  :  .  |  :  List of 2
[10:52:42.828] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.828] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.828] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.828] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.828] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.828] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:42.828] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.828] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.828] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.828] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.828] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.828] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:42.828] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:42.828] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.828] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.833] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:42.833] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:42.833] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:42.833] |  :  .  |  :  .  List of future strategies:
[10:52:42.833] |  :  .  |  :  .  1. sequential:
[10:52:42.833] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:42.833] |  :  .  |  :  .     - tweaked: FALSE
[10:52:42.833] |  :  .  |  :  .     - call: plan(sequential)
[10:52:42.833] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:42.834] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:42.836] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:42.836] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:42.836] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:42.836] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:42.836] |  :  .  |  :  .  |  :  New stack:
[10:52:42.836] |  :  .  |  :  .  |  :  List of 1
[10:52:42.836] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.836] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.836] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.836] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.836] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.836] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:42.836] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:42.836] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.836] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.836] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:42.841] |  :  .  |  :  .  |  :  Old stack:
[10:52:42.841] |  :  .  |  :  .  |  :  List of 1
[10:52:42.841] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.841] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.841] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.841] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.841] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.841] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:42.841] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:42.841] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.841] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.841] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:42.844] |  :  .  |  :  .  |  :  Identical
[10:52:42.844] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:42.844] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:42.844] |  :  .  |  :  .  |  List of future strategies:
[10:52:42.844] |  :  .  |  :  .  |  1. sequential:
[10:52:42.844] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:42.844] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:42.844] |  :  .  |  :  .  |     - call: plan(sequential)
[10:52:42.844] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:42.845] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:42.845] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:42.845] |  :  .  |  SequentialFuture started (and completed)
[10:52:42.845] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:42.845] |  :  Launching futures ... done
[10:52:42.846] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:42.846] |  Using SequentialFutureBackend ... done
[10:52:42.846] run() for Future (‘SequentialFuture’) ... done
** Future evaluation with globals
[10:52:42.846] getGlobalsAndPackages() ...
[10:52:42.847] |  Searching for globals ...
[10:52:42.848] |  :  globals found: [3] ‘{’, ‘<-’, ‘a’
[10:52:42.848] |  Searching for globals ... DONE
[10:52:42.848] |  Resolving globals: FALSE
[10:52:42.848] |  Search for packages associated with the globals ...
[10:52:42.848] |  :  Packages associated with globals: [1] ‘base’
[10:52:42.848] |  :  Packages: [1] ‘base’
[10:52:42.848] |  Search for packages associated with the globals ... DONE
[10:52:42.849] |  Packages after dropping 'base': [0] 
[10:52:42.849] |  globals: [1] ‘a’
[10:52:42.849] |  packages: [0] 
[10:52:42.849] getGlobalsAndPackages() ... done
[10:52:42.849] run() for Future (‘Future’) ...
[10:52:42.849] |  state: ‘created’
[10:52:42.849] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:42.849] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:42.849] |  Using SequentialFutureBackend ...
[10:52:42.850] |  :  Launching futures ...
[10:52:42.850] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:42.850] |  :  .  |  getFutureData() ...
[10:52:42.850] |  :  .  |  :  getFutureCore() ...
[10:52:42.850] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:42.850] |  :  .  |  :  getFutureCore() ... done
[10:52:42.850] |  :  .  |  :  getFutureCapture() ...
[10:52:42.850] |  :  .  |  :  getFutureCapture() ... done
[10:52:42.850] |  :  .  |  :  getFutureContext() ...
[10:52:42.850] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:42.851] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:42.851] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:42.851] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:42.851] |  :  .  |  :  getFutureContext() ... done
[10:52:42.851] |  :  .  |  getFutureData() ... done
[10:52:42.851] |  :  .  |  attachPackages() ...
[10:52:42.851] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:42.851] |  :  .  |  attachPackages() ... DONE
[10:52:42.851] |  :  .  |  attachPackages() ...
[10:52:42.851] |  :  .  |  :  packages: [n=0] 
[10:52:42.852] |  :  .  |  attachPackages() ... DONE
[10:52:42.852] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:42.852] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:42.852] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:42.852] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:42.852] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:42.853] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:42.853] |  :  .  |  :  .  |  New stack:
[10:52:42.853] |  :  .  |  :  .  |  List of 1
[10:52:42.853] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.853] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.853] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.853] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.853] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.853] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:42.853] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:42.855] |  :  .  |  :  .  |  Old stack:
[10:52:42.855] |  :  .  |  :  .  |  List of 1
[10:52:42.855] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.855] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.855] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.855] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.855] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.855] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:42.855] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:42.855] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.855] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.855] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:42.858] |  :  .  |  :  .  |  Not identical
[10:52:42.858] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:42.858] |  :  .  |  :  .  |  :  List of 2
[10:52:42.858] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.858] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.858] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.858] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.858] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.858] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:42.858] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.858] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.858] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.858] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.858] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.858] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:42.858] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:42.858] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.858] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.863] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:42.864] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:42.864] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:42.864] |  :  .  |  :  .  List of future strategies:
[10:52:42.864] |  :  .  |  :  .  1. sequential:
[10:52:42.864] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:42.864] |  :  .  |  :  .     - tweaked: FALSE
[10:52:42.864] |  :  .  |  :  .     - call: plan(sequential)
[10:52:42.864] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:42.864] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:42.864] |  :  .  |  assign_globals() ...
[10:52:42.865] |  :  .  |  List of 1
[10:52:42.865] |  :  .  |   $ a: num 2
[10:52:42.865] |  :  .  |   - attr(*, "where")=List of 1
[10:52:42.865] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:52:42.865] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:42.865] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:52:42.865] |  :  .  |   - attr(*, "total_size")= num NA
[10:52:42.865] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:52:42.867] |  :  .  |  - copied ‘a’ to environment
[10:52:42.867] |  :  .  |  assign_globals() ... done
[10:52:42.869] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:42.869] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:42.869] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:42.869] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:42.869] |  :  .  |  :  .  |  :  New stack:
[10:52:42.869] |  :  .  |  :  .  |  :  List of 1
[10:52:42.869] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.869] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.869] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.869] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.869] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.869] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:42.869] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:42.869] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.869] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.869] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:42.872] |  :  .  |  :  .  |  :  Old stack:
[10:52:42.872] |  :  .  |  :  .  |  :  List of 1
[10:52:42.872] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.872] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.872] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.872] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.872] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.872] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:42.872] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:42.872] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.872] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.872] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:42.875] |  :  .  |  :  .  |  :  Identical
[10:52:42.875] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:42.875] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:42.875] |  :  .  |  :  .  |  List of future strategies:
[10:52:42.875] |  :  .  |  :  .  |  1. sequential:
[10:52:42.875] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:42.875] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:42.875] |  :  .  |  :  .  |     - call: plan(sequential)
[10:52:42.875] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:42.876] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:42.876] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:42.876] |  :  .  |  SequentialFuture started (and completed)
[10:52:42.876] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:42.876] |  :  Launching futures ... done
[10:52:42.876] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:42.876] |  Using SequentialFutureBackend ... done
[10:52:42.876] run() for Future (‘SequentialFuture’) ... done
** Future evaluation with errors
[10:52:42.877] getGlobalsAndPackages() ...
[10:52:42.877] |  Searching for globals ...
[10:52:42.878] |  :  globals found: [3] ‘{’, ‘<-’, ‘stop’
[10:52:42.878] |  Searching for globals ... DONE
[10:52:42.878] |  Resolving globals: FALSE
[10:52:42.878] |  Search for packages associated with the globals ...
[10:52:42.879] |  :  Packages associated with globals: [1] ‘base’
[10:52:42.879] |  :  Packages: [1] ‘base’
[10:52:42.879] |  Search for packages associated with the globals ... DONE
[10:52:42.879] |  Packages after dropping 'base': [0] 
[10:52:42.879] |  globals: [0] 
[10:52:42.879] |  packages: [0] 
[10:52:42.879] getGlobalsAndPackages() ... done
[10:52:42.880] run() for Future (‘Future’) ...
[10:52:42.880] |  state: ‘created’
[10:52:42.880] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:42.880] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:42.880] |  Using SequentialFutureBackend ...
[10:52:42.880] |  :  Launching futures ...
[10:52:42.880] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:42.880] |  :  .  |  getFutureData() ...
[10:52:42.880] |  :  .  |  :  getFutureCore() ...
[10:52:42.880] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:42.881] |  :  .  |  :  getFutureCore() ... done
[10:52:42.881] |  :  .  |  :  getFutureCapture() ...
[10:52:42.882] |  :  .  |  :  getFutureCapture() ... done
[10:52:42.882] |  :  .  |  :  getFutureContext() ...
[10:52:42.882] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:42.882] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:42.882] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:42.882] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:42.882] |  :  .  |  :  getFutureContext() ... done
[10:52:42.882] |  :  .  |  getFutureData() ... done
[10:52:42.882] |  :  .  |  attachPackages() ...
[10:52:42.882] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:42.883] |  :  .  |  attachPackages() ... DONE
[10:52:42.883] |  :  .  |  attachPackages() ...
[10:52:42.883] |  :  .  |  :  packages: [n=0] 
[10:52:42.883] |  :  .  |  attachPackages() ... DONE
[10:52:42.883] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:42.883] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:42.883] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:42.884] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:42.884] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:42.884] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:42.884] |  :  .  |  :  .  |  New stack:
[10:52:42.884] |  :  .  |  :  .  |  List of 1
[10:52:42.884] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.884] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.884] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.884] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.884] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.884] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:42.884] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:42.886] |  :  .  |  :  .  |  Old stack:
[10:52:42.886] |  :  .  |  :  .  |  List of 1
[10:52:42.886] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.886] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.886] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.886] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.886] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.886] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:42.886] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:42.886] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.886] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.886] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:42.889] |  :  .  |  :  .  |  Not identical
[10:52:42.889] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:42.889] |  :  .  |  :  .  |  :  List of 2
[10:52:42.889] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.889] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.889] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.889] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.889] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.889] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:42.889] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.889] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.889] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.889] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.889] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.889] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:42.889] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:42.889] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.889] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.894] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:42.894] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:42.894] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:42.894] |  :  .  |  :  .  List of future strategies:
[10:52:42.894] |  :  .  |  :  .  1. sequential:
[10:52:42.894] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:42.894] |  :  .  |  :  .     - tweaked: FALSE
[10:52:42.894] |  :  .  |  :  .     - call: plan(sequential)
[10:52:42.894] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:42.894] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:42.896] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:42.896] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:42.896] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:42.896] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:42.896] |  :  .  |  :  .  |  :  New stack:
[10:52:42.896] |  :  .  |  :  .  |  :  List of 1
[10:52:42.896] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.896] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.896] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.896] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.896] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.896] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:42.896] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:42.896] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.896] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.896] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:42.899] |  :  .  |  :  .  |  :  Old stack:
[10:52:42.899] |  :  .  |  :  .  |  :  List of 1
[10:52:42.899] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.899] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.899] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.899] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.899] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.899] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:42.899] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:42.899] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.899] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.899] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:42.903] |  :  .  |  :  .  |  :  Identical
[10:52:42.903] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:42.903] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:42.903] |  :  .  |  :  .  |  List of future strategies:
[10:52:42.903] |  :  .  |  :  .  |  1. sequential:
[10:52:42.903] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:42.903] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:42.903] |  :  .  |  :  .  |     - call: plan(sequential)
[10:52:42.904] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:42.904] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:42.904] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:42.904] |  :  .  |  SequentialFuture started (and completed)
[10:52:42.904] |  :  .  |  signalConditions() ...
[10:52:42.904] |  :  .  |  :  include = ‘immediateCondition’
[10:52:42.904] |  :  .  |  :  exclude = 
[10:52:42.905] |  :  .  |  :  resignal = FALSE
[10:52:42.905] |  :  .  |  :  Number of conditions: 1
[10:52:42.905] |  :  .  |  signalConditions() ... done
[10:52:42.905] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:42.905] |  :  Launching futures ... done
[10:52:42.905] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:42.905] |  Using SequentialFutureBackend ... done
[10:52:42.905] run() for Future (‘SequentialFuture’) ... done
[10:52:42.905] signalConditions() ...
[10:52:42.905] |  include = ‘immediateCondition’
[10:52:42.906] |  exclude = 
[10:52:42.906] |  resignal = FALSE
[10:52:42.906] |  Number of conditions: 1
[10:52:42.906] signalConditions() ... done
[10:52:42.906] Future state: ‘finished’
[10:52:42.906] signalConditions() ...
[10:52:42.906] |  include = ‘condition’
[10:52:42.906] |  exclude = ‘immediateCondition’
[10:52:42.906] |  resignal = TRUE
[10:52:42.906] |  Number of conditions: 1
[10:52:42.906] |  Condition #1: ‘simpleError’, ‘error’, ‘condition’
[10:52:42.907] signalConditions() ... done
[10:52:42.907] getGlobalsAndPackages() ...
[10:52:42.907] |  Searching for globals ...
[10:52:42.909] |  :  globals found: [6] ‘{’, ‘if’, ‘==’, ‘%%’, ‘ii’, ‘stop’
[10:52:42.909] |  Searching for globals ... DONE
[10:52:42.909] |  Resolving globals: FALSE
[10:52:42.909] |  Search for packages associated with the globals ...
[10:52:42.910] |  :  Packages associated with globals: [1] ‘base’
[10:52:42.910] |  :  Packages: [1] ‘base’
[10:52:42.910] |  Search for packages associated with the globals ... DONE
[10:52:42.910] |  Packages after dropping 'base': [0] 
[10:52:42.910] |  globals: [1] ‘ii’
[10:52:42.910] |  packages: [0] 
[10:52:42.910] getGlobalsAndPackages() ... done
[10:52:42.911] run() for Future (‘Future’) ...
[10:52:42.911] |  state: ‘created’
[10:52:42.911] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:42.911] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:42.911] |  Using SequentialFutureBackend ...
[10:52:42.911] |  :  Launching futures ...
[10:52:42.911] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:42.911] |  :  .  |  getFutureData() ...
[10:52:42.911] |  :  .  |  :  getFutureCore() ...
[10:52:42.911] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:42.912] |  :  .  |  :  getFutureCore() ... done
[10:52:42.912] |  :  .  |  :  getFutureCapture() ...
[10:52:42.912] |  :  .  |  :  getFutureCapture() ... done
[10:52:42.912] |  :  .  |  :  getFutureContext() ...
[10:52:42.912] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:42.912] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:42.912] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:42.912] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:42.912] |  :  .  |  :  getFutureContext() ... done
[10:52:42.912] |  :  .  |  getFutureData() ... done
[10:52:42.913] |  :  .  |  attachPackages() ...
[10:52:42.913] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:42.913] |  :  .  |  attachPackages() ... DONE
[10:52:42.913] |  :  .  |  attachPackages() ...
[10:52:42.913] |  :  .  |  :  packages: [n=0] 
[10:52:42.913] |  :  .  |  attachPackages() ... DONE
[10:52:42.913] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:42.913] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:42.914] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:42.914] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:42.914] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:42.914] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:42.914] |  :  .  |  :  .  |  New stack:
[10:52:42.914] |  :  .  |  :  .  |  List of 1
[10:52:42.914] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.914] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.914] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.914] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.914] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.914] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:42.914] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:42.916] |  :  .  |  :  .  |  Old stack:
[10:52:42.916] |  :  .  |  :  .  |  List of 1
[10:52:42.916] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.916] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.916] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.916] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.916] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.916] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:42.916] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:42.916] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.916] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.916] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:42.919] |  :  .  |  :  .  |  Not identical
[10:52:42.919] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:42.919] |  :  .  |  :  .  |  :  List of 2
[10:52:42.919] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.919] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.919] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.919] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.919] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.919] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:42.919] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.919] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.919] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.919] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.919] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.919] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:42.919] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:42.919] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.919] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.925] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:42.925] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:42.925] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:42.925] |  :  .  |  :  .  List of future strategies:
[10:52:42.925] |  :  .  |  :  .  1. sequential:
[10:52:42.925] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:42.925] |  :  .  |  :  .     - tweaked: FALSE
[10:52:42.925] |  :  .  |  :  .     - call: plan(sequential)
[10:52:42.925] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:42.925] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:42.925] |  :  .  |  assign_globals() ...
[10:52:42.926] |  :  .  |  List of 1
[10:52:42.926] |  :  .  |   $ ii: int 1
[10:52:42.926] |  :  .  |   - attr(*, "where")=List of 1
[10:52:42.926] |  :  .  |    ..$ ii:<environment: R_EmptyEnv> 
[10:52:42.926] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:42.926] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:52:42.926] |  :  .  |   - attr(*, "total_size")= num NA
[10:52:42.926] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:52:42.928] |  :  .  |  - copied ‘ii’ to environment
[10:52:42.928] |  :  .  |  assign_globals() ... done
[10:52:42.929] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:42.930] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:42.930] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:42.930] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:42.930] |  :  .  |  :  .  |  :  New stack:
[10:52:42.930] |  :  .  |  :  .  |  :  List of 1
[10:52:42.930] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.930] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.930] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.930] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.930] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.930] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:42.930] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:42.930] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.930] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.930] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:42.933] |  :  .  |  :  .  |  :  Old stack:
[10:52:42.933] |  :  .  |  :  .  |  :  List of 1
[10:52:42.933] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.933] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.933] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.933] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.933] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.933] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:42.933] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:42.933] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.933] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.933] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:42.935] |  :  .  |  :  .  |  :  Identical
[10:52:42.936] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:42.936] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:42.936] |  :  .  |  :  .  |  List of future strategies:
[10:52:42.936] |  :  .  |  :  .  |  1. sequential:
[10:52:42.936] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:42.936] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:42.936] |  :  .  |  :  .  |     - call: plan(sequential)
[10:52:42.936] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:42.936] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:42.936] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:42.937] |  :  .  |  SequentialFuture started (and completed)
[10:52:42.937] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:42.937] |  :  Launching futures ... done
[10:52:42.937] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:42.937] |  Using SequentialFutureBackend ... done
[10:52:42.937] run() for Future (‘SequentialFuture’) ... done
[10:52:42.937] getGlobalsAndPackages() ...
[10:52:42.938] |  Searching for globals ...
[10:52:42.939] |  :  globals found: [6] ‘{’, ‘if’, ‘==’, ‘%%’, ‘ii’, ‘stop’
[10:52:42.939] |  Searching for globals ... DONE
[10:52:42.939] |  Resolving globals: FALSE
[10:52:42.939] |  Search for packages associated with the globals ...
[10:52:42.940] |  :  Packages associated with globals: [1] ‘base’
[10:52:42.941] |  :  Packages: [1] ‘base’
[10:52:42.941] |  Search for packages associated with the globals ... DONE
[10:52:42.941] |  Packages after dropping 'base': [0] 
[10:52:42.941] |  globals: [1] ‘ii’
[10:52:42.941] |  packages: [0] 
[10:52:42.941] getGlobalsAndPackages() ... done
[10:52:42.941] run() for Future (‘Future’) ...
[10:52:42.942] |  state: ‘created’
[10:52:42.942] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:42.942] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:42.942] |  Using SequentialFutureBackend ...
[10:52:42.942] |  :  Launching futures ...
[10:52:42.942] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:42.942] |  :  .  |  getFutureData() ...
[10:52:42.942] |  :  .  |  :  getFutureCore() ...
[10:52:42.942] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:42.942] |  :  .  |  :  getFutureCore() ... done
[10:52:42.942] |  :  .  |  :  getFutureCapture() ...
[10:52:42.943] |  :  .  |  :  getFutureCapture() ... done
[10:52:42.943] |  :  .  |  :  getFutureContext() ...
[10:52:42.943] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:42.943] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:42.943] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:42.943] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:42.943] |  :  .  |  :  getFutureContext() ... done
[10:52:42.943] |  :  .  |  getFutureData() ... done
[10:52:42.943] |  :  .  |  attachPackages() ...
[10:52:42.943] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:42.944] |  :  .  |  attachPackages() ... DONE
[10:52:42.944] |  :  .  |  attachPackages() ...
[10:52:42.944] |  :  .  |  :  packages: [n=0] 
[10:52:42.944] |  :  .  |  attachPackages() ... DONE
[10:52:42.944] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:42.944] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:42.944] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:42.945] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:42.945] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:42.945] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:42.945] |  :  .  |  :  .  |  New stack:
[10:52:42.945] |  :  .  |  :  .  |  List of 1
[10:52:42.945] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.945] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.945] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.945] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.945] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.945] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:42.945] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:42.947] |  :  .  |  :  .  |  Old stack:
[10:52:42.947] |  :  .  |  :  .  |  List of 1
[10:52:42.947] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.947] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.947] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.947] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.947] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.947] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:42.947] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:42.947] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.947] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.947] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:42.950] |  :  .  |  :  .  |  Not identical
[10:52:42.950] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:42.950] |  :  .  |  :  .  |  :  List of 2
[10:52:42.950] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.950] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.950] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.950] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.950] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.950] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:42.950] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.950] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.950] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.950] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.950] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.950] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:42.950] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:42.950] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.950] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.954] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:42.955] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:42.955] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:42.955] |  :  .  |  :  .  List of future strategies:
[10:52:42.955] |  :  .  |  :  .  1. sequential:
[10:52:42.955] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:42.955] |  :  .  |  :  .     - tweaked: FALSE
[10:52:42.955] |  :  .  |  :  .     - call: plan(sequential)
[10:52:42.955] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:42.955] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:42.955] |  :  .  |  assign_globals() ...
[10:52:42.955] |  :  .  |  List of 1
[10:52:42.955] |  :  .  |   $ ii: int 2
[10:52:42.955] |  :  .  |   - attr(*, "where")=List of 1
[10:52:42.955] |  :  .  |    ..$ ii:<environment: R_EmptyEnv> 
[10:52:42.955] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:42.955] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:52:42.955] |  :  .  |   - attr(*, "total_size")= num NA
[10:52:42.955] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:52:42.958] |  :  .  |  - copied ‘ii’ to environment
[10:52:42.958] |  :  .  |  assign_globals() ... done
[10:52:42.960] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:42.961] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:42.961] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:42.961] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:42.961] |  :  .  |  :  .  |  :  New stack:
[10:52:42.961] |  :  .  |  :  .  |  :  List of 1
[10:52:42.961] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.961] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.961] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.961] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.961] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.961] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:42.961] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:42.961] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.961] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.961] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:42.964] |  :  .  |  :  .  |  :  Old stack:
[10:52:42.964] |  :  .  |  :  .  |  :  List of 1
[10:52:42.964] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.964] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.964] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.964] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.964] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.964] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:42.964] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:42.964] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.964] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.964] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:42.967] |  :  .  |  :  .  |  :  Identical
[10:52:42.967] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:42.967] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:42.967] |  :  .  |  :  .  |  List of future strategies:
[10:52:42.967] |  :  .  |  :  .  |  1. sequential:
[10:52:42.967] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:42.967] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:42.967] |  :  .  |  :  .  |     - call: plan(sequential)
[10:52:42.967] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:42.967] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:42.967] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:42.968] |  :  .  |  SequentialFuture started (and completed)
[10:52:42.968] |  :  .  |  signalConditions() ...
[10:52:42.968] |  :  .  |  :  include = ‘immediateCondition’
[10:52:42.968] |  :  .  |  :  exclude = 
[10:52:42.968] |  :  .  |  :  resignal = FALSE
[10:52:42.968] |  :  .  |  :  Number of conditions: 1
[10:52:42.968] |  :  .  |  signalConditions() ... done
[10:52:42.968] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:42.968] |  :  Launching futures ... done
[10:52:42.968] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:42.969] |  Using SequentialFutureBackend ... done
[10:52:42.969] run() for Future (‘SequentialFuture’) ... done
[10:52:42.969] getGlobalsAndPackages() ...
[10:52:42.969] |  Searching for globals ...
[10:52:42.971] |  :  globals found: [6] ‘{’, ‘if’, ‘==’, ‘%%’, ‘ii’, ‘stop’
[10:52:42.971] |  Searching for globals ... DONE
[10:52:42.971] |  Resolving globals: FALSE
[10:52:42.971] |  Search for packages associated with the globals ...
[10:52:42.971] |  :  Packages associated with globals: [1] ‘base’
[10:52:42.971] |  :  Packages: [1] ‘base’
[10:52:42.972] |  Search for packages associated with the globals ... DONE
[10:52:42.972] |  Packages after dropping 'base': [0] 
[10:52:42.972] |  globals: [1] ‘ii’
[10:52:42.972] |  packages: [0] 
[10:52:42.972] getGlobalsAndPackages() ... done
[10:52:42.972] run() for Future (‘Future’) ...
[10:52:42.972] |  state: ‘created’
[10:52:42.972] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:42.973] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:42.973] |  Using SequentialFutureBackend ...
[10:52:42.973] |  :  Launching futures ...
[10:52:42.973] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:42.973] |  :  .  |  getFutureData() ...
[10:52:42.973] |  :  .  |  :  getFutureCore() ...
[10:52:42.973] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:42.973] |  :  .  |  :  getFutureCore() ... done
[10:52:42.973] |  :  .  |  :  getFutureCapture() ...
[10:52:42.973] |  :  .  |  :  getFutureCapture() ... done
[10:52:42.973] |  :  .  |  :  getFutureContext() ...
[10:52:42.974] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:42.974] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:42.974] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:42.974] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:42.974] |  :  .  |  :  getFutureContext() ... done
[10:52:42.974] |  :  .  |  getFutureData() ... done
[10:52:42.974] |  :  .  |  attachPackages() ...
[10:52:42.974] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:42.974] |  :  .  |  attachPackages() ... DONE
[10:52:42.975] |  :  .  |  attachPackages() ...
[10:52:42.975] |  :  .  |  :  packages: [n=0] 
[10:52:42.975] |  :  .  |  attachPackages() ... DONE
[10:52:42.975] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:42.975] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:42.975] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:42.975] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:42.976] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:42.976] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:42.976] |  :  .  |  :  .  |  New stack:
[10:52:42.976] |  :  .  |  :  .  |  List of 1
[10:52:42.976] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.976] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.976] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.976] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.976] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.976] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:42.976] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:42.978] |  :  .  |  :  .  |  Old stack:
[10:52:42.978] |  :  .  |  :  .  |  List of 1
[10:52:42.978] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.978] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.978] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.978] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.978] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.978] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:42.978] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:42.978] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.978] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.978] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:42.982] |  :  .  |  :  .  |  Not identical
[10:52:42.982] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:42.982] |  :  .  |  :  .  |  :  List of 2
[10:52:42.982] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.982] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.982] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.982] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.982] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.982] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:42.982] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.982] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.982] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.982] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.982] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.982] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:42.982] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:42.982] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.982] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.986] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:42.986] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:42.986] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:42.987] |  :  .  |  :  .  List of future strategies:
[10:52:42.987] |  :  .  |  :  .  1. sequential:
[10:52:42.987] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:42.987] |  :  .  |  :  .     - tweaked: FALSE
[10:52:42.987] |  :  .  |  :  .     - call: plan(sequential)
[10:52:42.987] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:42.987] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:42.987] |  :  .  |  assign_globals() ...
[10:52:42.987] |  :  .  |  List of 1
[10:52:42.987] |  :  .  |   $ ii: int 3
[10:52:42.987] |  :  .  |   - attr(*, "where")=List of 1
[10:52:42.987] |  :  .  |    ..$ ii:<environment: R_EmptyEnv> 
[10:52:42.987] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:42.987] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:52:42.987] |  :  .  |   - attr(*, "total_size")= num NA
[10:52:42.987] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:52:42.990] |  :  .  |  - copied ‘ii’ to environment
[10:52:42.990] |  :  .  |  assign_globals() ... done
[10:52:42.991] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:42.991] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:42.991] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:42.992] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:42.992] |  :  .  |  :  .  |  :  New stack:
[10:52:42.992] |  :  .  |  :  .  |  :  List of 1
[10:52:42.992] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.992] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.992] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.992] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.992] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.992] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:42.992] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:42.992] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.992] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.992] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:42.995] |  :  .  |  :  .  |  :  Old stack:
[10:52:42.995] |  :  .  |  :  .  |  :  List of 1
[10:52:42.995] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:42.995] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:42.995] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.995] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.995] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.995] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:42.995] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:42.995] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:42.995] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:42.995] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:42.998] |  :  .  |  :  .  |  :  Identical
[10:52:42.998] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:42.999] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:42.999] |  :  .  |  :  .  |  List of future strategies:
[10:52:42.999] |  :  .  |  :  .  |  1. sequential:
[10:52:42.999] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:42.999] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:42.999] |  :  .  |  :  .  |     - call: plan(sequential)
[10:52:42.999] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:42.999] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:42.999] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:42.999] |  :  .  |  SequentialFuture started (and completed)
[10:52:43.000] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:43.000] |  :  Launching futures ... done
[10:52:43.000] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:43.000] |  Using SequentialFutureBackend ... done
[10:52:43.000] run() for Future (‘SequentialFuture’) ... done
[10:52:43.000] signalConditions() ...
[10:52:43.000] |  include = ‘immediateCondition’
[10:52:43.001] |  exclude = 
[10:52:43.001] |  resignal = FALSE
[10:52:43.001] |  Number of conditions: 1
[10:52:43.001] signalConditions() ... done
[10:52:43.001] Future state: ‘finished’
[10:52:43.001] signalConditions() ...
[10:52:43.001] |  include = ‘condition’
[10:52:43.001] |  exclude = ‘immediateCondition’
[10:52:43.001] |  resignal = TRUE
[10:52:43.001] |  Number of conditions: 1
[10:52:43.001] |  Condition #1: ‘simpleError’, ‘error’, ‘condition’
[10:52:43.002] signalConditions() ... done
Warning in get(var, envir = x, inherits = FALSE) :
  restarting interrupted promise evaluation
[10:52:43.002] signalConditions() ...
[10:52:43.003] |  include = ‘immediateCondition’
[10:52:43.003] |  exclude = 
[10:52:43.003] |  resignal = FALSE
[10:52:43.003] |  Number of conditions: 1
[10:52:43.003] signalConditions() ... done
[10:52:43.003] Future state: ‘finished’
[10:52:43.003] signalConditions() ...
[10:52:43.003] |  include = ‘condition’
[10:52:43.003] |  exclude = ‘immediateCondition’
[10:52:43.003] |  resignal = TRUE
[10:52:43.003] |  Number of conditions: 1
[10:52:43.004] |  Condition #1: ‘simpleError’, ‘error’, ‘condition’
[10:52:43.004] signalConditions() ... done
Warning in get(var, envir = x, inherits = FALSE) :
  restarting interrupted promise evaluation
[10:52:43.004] signalConditions() ...
[10:52:43.004] |  include = ‘immediateCondition’
[10:52:43.004] |  exclude = 
[10:52:43.004] |  resignal = FALSE
[10:52:43.004] |  Number of conditions: 1
[10:52:43.004] signalConditions() ... done
[10:52:43.005] Future state: ‘finished’
[10:52:43.005] signalConditions() ...
[10:52:43.005] |  include = ‘condition’
[10:52:43.005] |  exclude = ‘immediateCondition’
[10:52:43.005] |  resignal = TRUE
[10:52:43.005] |  Number of conditions: 1
[10:52:43.005] |  Condition #1: ‘simpleError’, ‘error’, ‘condition’
[10:52:43.005] signalConditions() ... done
** Future evaluation with a poor-man's "progress bar"
[10:52:43.005] getGlobalsAndPackages() ...
[10:52:43.006] |  Searching for globals ...
[10:52:43.008] |  :  globals found: [4] ‘{’, ‘cat’, ‘for’, ‘:’
[10:52:43.008] |  Searching for globals ... DONE
[10:52:43.008] |  Resolving globals: FALSE
[10:52:43.008] |  Search for packages associated with the globals ...
[10:52:43.008] |  :  Packages associated with globals: [1] ‘base’
[10:52:43.008] |  :  Packages: [1] ‘base’
[10:52:43.008] |  Search for packages associated with the globals ... DONE
[10:52:43.009] |  Packages after dropping 'base': [0] 
[10:52:43.009] |  globals: [0] 
[10:52:43.009] |  packages: [0] 
[10:52:43.009] getGlobalsAndPackages() ... done
[10:52:43.009] run() for Future (‘Future’) ...
[10:52:43.009] |  state: ‘created’
[10:52:43.009] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.009] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.009] |  Using SequentialFutureBackend ...
[10:52:43.010] |  :  Launching futures ...
[10:52:43.010] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:43.010] |  :  .  |  getFutureData() ...
[10:52:43.010] |  :  .  |  :  getFutureCore() ...
[10:52:43.010] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:43.010] |  :  .  |  :  getFutureCore() ... done
[10:52:43.010] |  :  .  |  :  getFutureCapture() ...
[10:52:43.010] |  :  .  |  :  getFutureCapture() ... done
[10:52:43.010] |  :  .  |  :  getFutureContext() ...
[10:52:43.010] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.011] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:43.011] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.011] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:43.011] |  :  .  |  :  getFutureContext() ... done
[10:52:43.011] |  :  .  |  getFutureData() ... done
[10:52:43.011] |  :  .  |  attachPackages() ...
[10:52:43.011] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:43.011] |  :  .  |  attachPackages() ... DONE
[10:52:43.011] |  :  .  |  attachPackages() ...
[10:52:43.011] |  :  .  |  :  packages: [n=0] 
[10:52:43.012] |  :  .  |  attachPackages() ... DONE
[10:52:43.012] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.012] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:43.012] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.012] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.013] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.013] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:43.013] |  :  .  |  :  .  |  New stack:
[10:52:43.013] |  :  .  |  :  .  |  List of 1
[10:52:43.013] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.013] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.013] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.013] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.013] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.013] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.013] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.015] |  :  .  |  :  .  |  Old stack:
[10:52:43.015] |  :  .  |  :  .  |  List of 1
[10:52:43.015] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.015] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.015] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.015] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.015] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.015] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:43.015] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:43.015] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.015] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.015] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.019] |  :  .  |  :  .  |  Not identical
[10:52:43.019] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:43.019] |  :  .  |  :  .  |  :  List of 2
[10:52:43.019] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.019] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.019] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.019] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.019] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.019] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.019] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.019] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.019] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.019] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.019] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.019] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:43.019] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:43.019] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.019] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.023] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:43.023] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:43.023] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:43.024] |  :  .  |  :  .  List of future strategies:
[10:52:43.024] |  :  .  |  :  .  1. sequential:
[10:52:43.024] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:43.024] |  :  .  |  :  .     - tweaked: FALSE
[10:52:43.024] |  :  .  |  :  .     - call: plan(sequential)
[10:52:43.024] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.024] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.025] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.026] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.026] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.026] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:43.026] |  :  .  |  :  .  |  :  New stack:
[10:52:43.026] |  :  .  |  :  .  |  :  List of 1
[10:52:43.026] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.026] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.026] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.026] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.026] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.026] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:43.026] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:43.026] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.026] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.026] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.029] |  :  .  |  :  .  |  :  Old stack:
[10:52:43.029] |  :  .  |  :  .  |  :  List of 1
[10:52:43.029] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.029] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.029] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.029] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.029] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.029] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:43.029] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:43.029] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.029] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.029] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.032] |  :  .  |  :  .  |  :  Identical
[10:52:43.032] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:43.032] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:43.032] |  :  .  |  :  .  |  List of future strategies:
[10:52:43.032] |  :  .  |  :  .  |  1. sequential:
[10:52:43.032] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:43.032] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:43.032] |  :  .  |  :  .  |     - call: plan(sequential)
[10:52:43.032] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.032] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.032] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.033] |  :  .  |  SequentialFuture started (and completed)
[10:52:43.033] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:43.033] |  :  Launching futures ... done
[10:52:43.033] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:43.033] |  Using SequentialFutureBackend ... done
[10:52:43.033] run() for Future (‘SequentialFuture’) ... done
** Collecting results
v1 = 1
v2 = 2
Warning in sprintf(...) : restarting interrupted promise evaluation
[10:52:43.033] signalConditions() ...
[10:52:43.034] |  include = ‘immediateCondition’
[10:52:43.034] |  exclude = 
[10:52:43.034] |  resignal = FALSE
[10:52:43.034] |  Number of conditions: 1
[10:52:43.034] signalConditions() ... done
[10:52:43.034] Future state: ‘finished’
[10:52:43.034] signalConditions() ...
[10:52:43.034] |  include = ‘condition’
[10:52:43.034] |  exclude = ‘immediateCondition’
[10:52:43.034] |  resignal = TRUE
[10:52:43.034] |  Number of conditions: 1
[10:52:43.035] |  Condition #1: ‘simpleError’, ‘error’, ‘condition’
[10:52:43.035] signalConditions() ... done
v3: <simpleError> (as expect)
Processing: .......... [100%]
v4 = 4
** Left-to-right and right-to-left future assignments
[10:52:43.035] getGlobalsAndPackages() ...
[10:52:43.035] |  Searching for globals ...
[10:52:43.035] |  :  globals found: [0] 
[10:52:43.036] |  Searching for globals ... DONE
[10:52:43.036] |  globals: [0] <none>
[10:52:43.036] |  packages: [0] <none>
[10:52:43.037] getGlobalsAndPackages() ... done
[10:52:43.037] run() for Future (‘Future’) ...
[10:52:43.037] |  state: ‘created’
[10:52:43.037] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.037] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.037] |  Using SequentialFutureBackend ...
[10:52:43.037] |  :  Launching futures ...
[10:52:43.037] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:43.037] |  :  .  |  getFutureData() ...
[10:52:43.038] |  :  .  |  :  getFutureCore() ...
[10:52:43.038] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:43.038] |  :  .  |  :  getFutureCore() ... done
[10:52:43.038] |  :  .  |  :  getFutureCapture() ...
[10:52:43.038] |  :  .  |  :  getFutureCapture() ... done
[10:52:43.038] |  :  .  |  :  getFutureContext() ...
[10:52:43.038] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.038] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:43.038] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.038] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:43.038] |  :  .  |  :  getFutureContext() ... done
[10:52:43.039] |  :  .  |  getFutureData() ... done
[10:52:43.039] |  :  .  |  attachPackages() ...
[10:52:43.039] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:43.039] |  :  .  |  attachPackages() ... DONE
[10:52:43.039] |  :  .  |  attachPackages() ...
[10:52:43.039] |  :  .  |  :  packages: [n=0] 
[10:52:43.039] |  :  .  |  attachPackages() ... DONE
[10:52:43.040] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.040] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:43.040] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.040] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.040] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.040] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:43.040] |  :  .  |  :  .  |  New stack:
[10:52:43.040] |  :  .  |  :  .  |  List of 1
[10:52:43.040] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.040] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.040] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.040] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.040] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.040] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.040] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.042] |  :  .  |  :  .  |  Old stack:
[10:52:43.043] |  :  .  |  :  .  |  List of 1
[10:52:43.043] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.043] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.043] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.043] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.043] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.043] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:43.043] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:43.043] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.043] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.043] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.045] |  :  .  |  :  .  |  Not identical
[10:52:43.045] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:43.045] |  :  .  |  :  .  |  :  List of 2
[10:52:43.045] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.045] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.045] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.045] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.045] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.045] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.045] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.045] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.045] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.045] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.045] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.045] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:43.045] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:43.045] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.045] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.050] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:43.050] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:43.050] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:43.050] |  :  .  |  :  .  List of future strategies:
[10:52:43.050] |  :  .  |  :  .  1. sequential:
[10:52:43.050] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:43.050] |  :  .  |  :  .     - tweaked: FALSE
[10:52:43.050] |  :  .  |  :  .     - call: plan(sequential)
[10:52:43.051] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.051] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.052] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.052] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.052] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.052] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:43.053] |  :  .  |  :  .  |  :  New stack:
[10:52:43.053] |  :  .  |  :  .  |  :  List of 1
[10:52:43.053] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.053] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.053] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.053] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.053] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.053] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:43.053] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:43.053] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.053] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.053] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.056] |  :  .  |  :  .  |  :  Old stack:
[10:52:43.056] |  :  .  |  :  .  |  :  List of 1
[10:52:43.056] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.056] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.056] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.056] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.056] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.056] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:43.056] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:43.056] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.056] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.056] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.059] |  :  .  |  :  .  |  :  Identical
[10:52:43.059] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:43.060] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:43.060] |  :  .  |  :  .  |  List of future strategies:
[10:52:43.060] |  :  .  |  :  .  |  1. sequential:
[10:52:43.060] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:43.060] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:43.060] |  :  .  |  :  .  |     - call: plan(sequential)
[10:52:43.060] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.060] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.060] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.060] |  :  .  |  SequentialFuture started (and completed)
[10:52:43.060] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:43.061] |  :  Launching futures ... done
[10:52:43.061] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:43.061] |  Using SequentialFutureBackend ... done
[10:52:43.061] run() for Future (‘SequentialFuture’) ... done
c = 1
[10:52:43.061] getGlobalsAndPackages() ...
[10:52:43.061] |  Searching for globals ...
[10:52:43.062] |  :  globals found: [0] 
[10:52:43.062] |  Searching for globals ... DONE
[10:52:43.062] |  globals: [0] <none>
[10:52:43.062] |  packages: [0] <none>
[10:52:43.062] getGlobalsAndPackages() ... done
[10:52:43.062] run() for Future (‘Future’) ...
[10:52:43.062] |  state: ‘created’
[10:52:43.062] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.063] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.063] |  Using SequentialFutureBackend ...
[10:52:43.063] |  :  Launching futures ...
[10:52:43.063] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:43.063] |  :  .  |  getFutureData() ...
[10:52:43.063] |  :  .  |  :  getFutureCore() ...
[10:52:43.063] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:43.063] |  :  .  |  :  getFutureCore() ... done
[10:52:43.063] |  :  .  |  :  getFutureCapture() ...
[10:52:43.063] |  :  .  |  :  getFutureCapture() ... done
[10:52:43.063] |  :  .  |  :  getFutureContext() ...
[10:52:43.064] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.064] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:43.064] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.064] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:43.064] |  :  .  |  :  getFutureContext() ... done
[10:52:43.064] |  :  .  |  getFutureData() ... done
[10:52:43.064] |  :  .  |  attachPackages() ...
[10:52:43.064] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:43.064] |  :  .  |  attachPackages() ... DONE
[10:52:43.065] |  :  .  |  attachPackages() ...
[10:52:43.065] |  :  .  |  :  packages: [n=0] 
[10:52:43.065] |  :  .  |  attachPackages() ... DONE
[10:52:43.065] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.065] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:43.065] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.065] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.066] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.066] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:43.066] |  :  .  |  :  .  |  New stack:
[10:52:43.066] |  :  .  |  :  .  |  List of 1
[10:52:43.066] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.066] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.066] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.066] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.066] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.066] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.066] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.068] |  :  .  |  :  .  |  Old stack:
[10:52:43.068] |  :  .  |  :  .  |  List of 1
[10:52:43.068] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.068] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.068] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.068] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.068] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.068] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:43.068] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:43.068] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.068] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.068] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.071] |  :  .  |  :  .  |  Not identical
[10:52:43.071] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:43.071] |  :  .  |  :  .  |  :  List of 2
[10:52:43.071] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.071] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.071] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.071] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.071] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.071] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.071] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.071] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.071] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.071] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.071] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.071] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:43.071] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:43.071] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.071] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.076] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:43.077] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:43.077] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:43.077] |  :  .  |  :  .  List of future strategies:
[10:52:43.077] |  :  .  |  :  .  1. sequential:
[10:52:43.077] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:43.077] |  :  .  |  :  .     - tweaked: FALSE
[10:52:43.077] |  :  .  |  :  .     - call: plan(sequential)
[10:52:43.077] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.077] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.079] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.079] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.079] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.079] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:43.079] |  :  .  |  :  .  |  :  New stack:
[10:52:43.079] |  :  .  |  :  .  |  :  List of 1
[10:52:43.079] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.079] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.079] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.079] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.079] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.079] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:43.079] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:43.079] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.079] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.079] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.082] |  :  .  |  :  .  |  :  Old stack:
[10:52:43.082] |  :  .  |  :  .  |  :  List of 1
[10:52:43.082] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.082] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.082] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.082] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.082] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.082] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:43.082] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:43.082] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.082] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.082] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.085] |  :  .  |  :  .  |  :  Identical
[10:52:43.085] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:43.085] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:43.085] |  :  .  |  :  .  |  List of future strategies:
[10:52:43.085] |  :  .  |  :  .  |  1. sequential:
[10:52:43.085] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:43.085] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:43.085] |  :  .  |  :  .  |     - call: plan(sequential)
[10:52:43.085] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.086] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.086] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.086] |  :  .  |  SequentialFuture started (and completed)
[10:52:43.086] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:43.086] |  :  Launching futures ... done
[10:52:43.086] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:43.086] |  Using SequentialFutureBackend ... done
[10:52:43.086] run() for Future (‘SequentialFuture’) ... done
d = 1
** Nested future assignments
[10:52:43.087] getGlobalsAndPackages() ...
[10:52:43.087] |  Searching for globals ...
[10:52:43.092] |  :  globals found: [5] ‘{’, ‘<-’, ‘%<-%’, ‘%->%’, ‘+’
[10:52:43.092] |  Searching for globals ... DONE
[10:52:43.092] |  Resolving globals: FALSE
[10:52:43.092] |  Search for packages associated with the globals ...
[10:52:43.092] |  :  Packages associated with globals: [2] ‘base’, ‘future’
[10:52:43.092] |  :  Packages: [2] ‘base’, ‘future’
[10:52:43.093] |  Search for packages associated with the globals ... DONE
[10:52:43.093] |  Packages after dropping 'base': [1] ‘future’
[10:52:43.093] |  Packages after dropping non-attached packages: [1] ‘future’
[10:52:43.093] |  globals: [0] 
[10:52:43.093] |  packages: [1] ‘future’
[10:52:43.093] getGlobalsAndPackages() ... done
[10:52:43.093] run() for Future (‘Future’) ...
[10:52:43.094] |  state: ‘created’
[10:52:43.094] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.094] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.094] |  Using SequentialFutureBackend ...
[10:52:43.094] |  :  Launching futures ...
[10:52:43.094] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:43.094] |  :  .  |  getFutureData() ...
[10:52:43.094] |  :  .  |  :  getFutureCore() ...
[10:52:43.094] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘future’
[10:52:43.094] |  :  .  |  :  getFutureCore() ... done
[10:52:43.095] |  :  .  |  :  getFutureCapture() ...
[10:52:43.095] |  :  .  |  :  getFutureCapture() ... done
[10:52:43.095] |  :  .  |  :  getFutureContext() ...
[10:52:43.095] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.095] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:43.095] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.095] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:43.095] |  :  .  |  :  getFutureContext() ... done
[10:52:43.095] |  :  .  |  getFutureData() ... done
[10:52:43.095] |  :  .  |  attachPackages() ...
[10:52:43.096] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:43.096] |  :  .  |  attachPackages() ... DONE
[10:52:43.096] |  :  .  |  attachPackages() ...
[10:52:43.096] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:43.096] |  :  .  |  attachPackages() ... DONE
[10:52:43.096] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.096] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:43.097] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.097] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.097] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.097] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:43.097] |  :  .  |  :  .  |  New stack:
[10:52:43.097] |  :  .  |  :  .  |  List of 1
[10:52:43.097] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.097] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.097] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.097] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.097] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.097] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.097] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.099] |  :  .  |  :  .  |  Old stack:
[10:52:43.099] |  :  .  |  :  .  |  List of 1
[10:52:43.099] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.099] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.099] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.099] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.099] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.099] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:43.099] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:43.099] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.099] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.099] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.102] |  :  .  |  :  .  |  Not identical
[10:52:43.102] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:43.102] |  :  .  |  :  .  |  :  List of 2
[10:52:43.102] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.102] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.102] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.102] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.102] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.102] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.102] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.102] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.102] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.102] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.102] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.102] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:43.102] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:43.102] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.102] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.107] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:43.107] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:43.107] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:43.107] |  :  .  |  :  .  List of future strategies:
[10:52:43.107] |  :  .  |  :  .  1. sequential:
[10:52:43.107] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:43.107] |  :  .  |  :  .     - tweaked: FALSE
[10:52:43.107] |  :  .  |  :  .     - call: plan(sequential)
[10:52:43.107] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.108] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.189] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.189] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.189] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.189] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:43.189] |  :  .  |  :  .  |  :  New stack:
[10:52:43.189] |  :  .  |  :  .  |  :  List of 1
[10:52:43.189] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.189] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.189] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.189] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.189] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.189] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:43.189] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:43.189] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.189] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.189] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.192] |  :  .  |  :  .  |  :  Old stack:
[10:52:43.192] |  :  .  |  :  .  |  :  List of 1
[10:52:43.192] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.192] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.192] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.192] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.192] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.192] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:43.192] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:43.192] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.192] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.192] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.196] |  :  .  |  :  .  |  :  Identical
[10:52:43.196] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:43.196] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:43.196] |  :  .  |  :  .  |  List of future strategies:
[10:52:43.196] |  :  .  |  :  .  |  1. sequential:
[10:52:43.196] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:43.196] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:43.196] |  :  .  |  :  .  |     - call: plan(sequential)
[10:52:43.197] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.197] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.197] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.197] |  :  .  |  SequentialFuture started (and completed)
[10:52:43.197] |  :  .  |  signalConditions() ...
[10:52:43.197] |  :  .  |  :  include = ‘immediateCondition’
[10:52:43.197] |  :  .  |  :  exclude = 
[10:52:43.197] |  :  .  |  :  resignal = FALSE
[10:52:43.198] |  :  .  |  :  Number of conditions: 146
[10:52:43.198] |  :  .  |  signalConditions() ... done
[10:52:43.198] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:43.198] |  :  Launching futures ... done
[10:52:43.198] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:43.198] |  Using SequentialFutureBackend ... done
[10:52:43.198] run() for Future (‘SequentialFuture’) ... done
[10:52:43.198] signalConditions() ...
[10:52:43.198] |  include = ‘immediateCondition’
[10:52:43.199] |  exclude = 
[10:52:43.199] |  resignal = FALSE
[10:52:43.199] |  Number of conditions: 146
[10:52:43.199] signalConditions() ... done
[10:52:43.199] Future state: ‘finished’
[10:52:43.199] signalConditions() ...
[10:52:43.199] |  include = ‘condition’
[10:52:43.199] |  exclude = ‘immediateCondition’
[10:52:43.199] |  resignal = TRUE
[10:52:43.199] |  Number of conditions: 146
[10:52:43.200] |  Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.108] |  :  .  |  getGlobalsAndPackages() ...
[10:52:43.200] |  Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.108] |  :  .  |  :  Searching for globals ...
[10:52:43.200] |  Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.109] |  :  .  |  :  .  globals found: [0] 
[10:52:43.200] |  Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.109] |  :  .  |  :  Searching for globals ... DONE
[10:52:43.200] |  Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.109] |  :  .  |  :  globals: [0] <none>
[10:52:43.200] |  Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.109] |  :  .  |  :  packages: [0] <none>
[10:52:43.200] |  Condition #7: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.109] |  :  .  |  getGlobalsAndPackages() ... done
[10:52:43.200] |  Condition #8: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.110] |  :  .  |  run() for Future (‘Future’) ...
[10:52:43.201] |  Condition #9: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.110] |  :  .  |  :  state: ‘created’
[10:52:43.201] |  Condition #10: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.110] |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.201] |  Condition #11: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.111] |  :  .  |  :  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.201] |  Condition #12: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.111] |  :  .  |  :  Using SequentialFutureBackend ...
[10:52:43.201] |  Condition #13: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.111] |  :  .  |  :  .  Launching futures ...
[10:52:43.201] |  Condition #14: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.111] |  :  .  |  :  .  |  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:43.201] |  Condition #15: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.111] |  :  .  |  :  .  |  :  getFutureData() ...
[10:52:43.201] |  Condition #16: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.111] |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:52:43.202] |  Condition #17: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.111] |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:52:43.202] |  Condition #18: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.111] |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:52:43.202] |  Condition #19: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.111] |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:52:43.202] |  Condition #20: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.112] |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:52:43.202] |  Condition #21: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.112] |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:52:43.202] |  Condition #22: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.112] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.202] |  Condition #23: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.112] |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:52:43.202] |  Condition #24: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.112] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.203] |  Condition #25: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.112] |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:52:43.203] |  Condition #26: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.112] |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:52:43.203] |  Condition #27: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.112] |  :  .  |  :  .  |  :  getFutureData() ... done
[10:52:43.203] |  Condition #28: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.113] |  :  .  |  :  .  |  :  attachPackages() ...
[10:52:43.203] |  Condition #29: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.113] |  :  .  |  :  .  |  :  .  packages: [n=1] ‘future’
[10:52:43.203] |  Condition #30: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.113] |  :  .  |  :  .  |  :  attachPackages() ... DONE
[10:52:43.203] |  Condition #31: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.113] |  :  .  |  :  .  |  :  attachPackages() ...
[10:52:43.203] |  Condition #32: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.113] |  :  .  |  :  .  |  :  .  packages: [n=0] 
[10:52:43.204] |  Condition #33: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.113] |  :  .  |  :  .  |  :  attachPackages() ... DONE
[10:52:43.204] |  Condition #34: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.113] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.204] |  Condition #35: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.114] |  :  .  |  :  .  |  :  .  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:43.204] |  Condition #36: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.114] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.204] |  Condition #37: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.114] |  :  .  |  :  .  |  :  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.204] |  Condition #38: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.114] |  :  .  |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.204] |  Condition #39: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.114] |  :  .  |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:43.204] |  Condition #40: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.114] |  :  .  |  :  .  |  :  .  |  :  New stack:
[10:52:43.204] |  Condition #41: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.114] |  :  .  |  :  .  |  :  .  |  :  List of 1
[10:52:43.114] |  :  .  |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.114] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.114] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.114] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.114] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.114] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.114] |  :  .  |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.205] |  Condition #42: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.117] |  :  .  |  :  .  |  :  .  |  :  Old stack:
[10:52:43.205] |  Condition #43: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.117] |  :  .  |  :  .  |  :  .  |  :  List of 1
[10:52:43.117] |  :  .  |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.117] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.117] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.117] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.117] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.117] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:43.117] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:43.117] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.117] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.117] |  :  .  |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.205] |  Condition #44: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.120] |  :  .  |  :  .  |  :  .  |  :  Not identical
[10:52:43.205] |  Condition #45: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.120] |  :  .  |  :  .  |  :  .  |  :  all.equal() for future ...
[10:52:43.205] |  Condition #46: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.120] |  :  .  |  :  .  |  :  .  |  :  .  List of 2
[10:52:43.120] |  :  .  |  :  .  |  :  .  |  :  .   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.120] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.120] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.120] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.120] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.120] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.120] |  :  .  |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.120] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.120] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.120] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.120] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.120] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:52:43.120] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:43.120] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.120] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.205] |  Condition #47: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.124] |  :  .  |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:52:43.205] |  Condition #48: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.124] |  :  .  |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:43.205] |  Condition #49: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.124] |  :  .  |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:43.206] |  Condition #50: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.124] |  :  .  |  :  .  |  :  .  |  List of future strategies:
[10:52:43.124] |  :  .  |  :  .  |  :  .  |  1. sequential:
[10:52:43.124] |  :  .  |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:43.124] |  :  .  |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:43.124] |  :  .  |  :  .  |  :  .  |     - call: plan(sequential)
[10:52:43.206] |  Condition #51: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.125] |  :  .  |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.206] |  Condition #52: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.125] |  :  .  |  :  .  |  :  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.206] |  Condition #53: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.126] |  :  .  |  :  .  |  :  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.206] |  Condition #54: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.127] |  :  .  |  :  .  |  :  .  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.206] |  Condition #55: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.127] |  :  .  |  :  .  |  :  .  |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.206] |  Condition #56: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.127] |  :  .  |  :  .  |  :  .  |  :  all.equal() for FutureStrategyList ...
[10:52:43.206] |  Condition #57: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.127] |  :  .  |  :  .  |  :  .  |  :  .  New stack:
[10:52:43.207] |  Condition #58: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.127] |  :  .  |  :  .  |  :  .  |  :  .  List of 1
[10:52:43.127] |  :  .  |  :  .  |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.127] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.127] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.127] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.127] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.127] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:52:43.127] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:43.127] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.127] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.127] |  :  .  |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.207] |  Condition #59: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.154] |  :  .  |  :  .  |  :  .  |  :  .  Old stack:
[10:52:43.207] |  Condition #60: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.154] |  :  .  |  :  .  |  :  .  |  :  .  List of 1
[10:52:43.154] |  :  .  |  :  .  |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.154] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.154] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.154] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.154] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.154] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:52:43.154] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:43.154] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.154] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.154] |  :  .  |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.207] |  Condition #61: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.157] |  :  .  |  :  .  |  :  .  |  :  .  Identical
[10:52:43.207] |  Condition #62: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.158] |  :  .  |  :  .  |  :  .  |  :  all.equal() for FutureStrategyList ... done
[10:52:43.207] |  Condition #63: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.158] |  :  .  |  :  .  |  :  .  |  :  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:43.207] |  Condition #64: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.158] |  :  .  |  :  .  |  :  .  |  :  List of future strategies:
[10:52:43.158] |  :  .  |  :  .  |  :  .  |  :  1. sequential:
[10:52:43.158] |  :  .  |  :  .  |  :  .  |  :     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:43.158] |  :  .  |  :  .  |  :  .  |  :     - tweaked: FALSE
[10:52:43.158] |  :  .  |  :  .  |  :  .  |  :     - call: plan(sequential)
[10:52:43.207] |  Condition #65: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.158] |  :  .  |  :  .  |  :  .  |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.208] |  Condition #66: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.158] |  :  .  |  :  .  |  :  .  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.208] |  Condition #67: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.158] |  :  .  |  :  .  |  :  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.208] |  Condition #68: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.159] |  :  .  |  :  .  |  :  SequentialFuture started (and completed)
[10:52:43.208] |  Condition #69: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.159] |  :  .  |  :  .  |  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:43.208] |  Condition #70: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.159] |  :  .  |  :  .  Launching futures ... done
[10:52:43.208] |  Condition #71: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.159] |  :  .  |  :  .  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:43.208] |  Condition #72: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.159] |  :  .  |  :  Using SequentialFutureBackend ... done
[10:52:43.208] |  Condition #73: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.159] |  :  .  |  run() for Future (‘SequentialFuture’) ... done
[10:52:43.209] |  Condition #74: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.160] |  :  .  |  getGlobalsAndPackages() ...
[10:52:43.209] |  Condition #75: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.160] |  :  .  |  :  Searching for globals ...
[10:52:43.209] |  Condition #76: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.160] |  :  .  |  :  .  globals found: [0] 
[10:52:43.209] |  Condition #77: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.160] |  :  .  |  :  Searching for globals ... DONE
[10:52:43.209] |  Condition #78: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.160] |  :  .  |  :  globals: [0] <none>
[10:52:43.209] |  Condition #79: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.160] |  :  .  |  :  packages: [0] <none>
[10:52:43.209] |  Condition #80: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.161] |  :  .  |  getGlobalsAndPackages() ... done
[10:52:43.209] |  Condition #81: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.161] |  :  .  |  run() for Future (‘Future’) ...
[10:52:43.210] |  Condition #82: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.161] |  :  .  |  :  state: ‘created’
[10:52:43.210] |  Condition #83: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.161] |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.210] |  Condition #84: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.161] |  :  .  |  :  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.210] |  Condition #85: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.161] |  :  .  |  :  Using SequentialFutureBackend ...
[10:52:43.210] |  Condition #86: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.161] |  :  .  |  :  .  Launching futures ...
[10:52:43.210] |  Condition #87: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.162] |  :  .  |  :  .  |  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:43.210] |  Condition #88: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.162] |  :  .  |  :  .  |  :  getFutureData() ...
[10:52:43.210] |  Condition #89: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.162] |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:52:43.210] |  Condition #90: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.162] |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:52:43.211] |  Condition #91: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.162] |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:52:43.211] |  Condition #92: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.162] |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:52:43.211] |  Condition #93: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.162] |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:52:43.211] |  Condition #94: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.162] |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:52:43.211] |  Condition #95: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.162] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.211] |  Condition #96: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.163] |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:52:43.211] |  Condition #97: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.163] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.211] |  Condition #98: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.163] |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:52:43.212] |  Condition #99: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.163] |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:52:43.212] |  Condition #100: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.163] |  :  .  |  :  .  |  :  getFutureData() ... done
[10:52:43.212] |  Condition #101: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.163] |  :  .  |  :  .  |  :  attachPackages() ...
[10:52:43.213] |  Condition #102: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.163] |  :  .  |  :  .  |  :  .  packages: [n=1] ‘future’
[10:52:43.213] |  Condition #103: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.164] |  :  .  |  :  .  |  :  attachPackages() ... DONE
[10:52:43.213] |  Condition #104: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.164] |  :  .  |  :  .  |  :  attachPackages() ...
[10:52:43.213] |  Condition #105: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.164] |  :  .  |  :  .  |  :  .  packages: [n=0] 
[10:52:43.213] |  Condition #106: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.164] |  :  .  |  :  .  |  :  attachPackages() ... DONE
[10:52:43.213] |  Condition #107: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.164] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.214] |  Condition #108: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.164] |  :  .  |  :  .  |  :  .  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:43.214] |  Condition #109: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.165] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.214] |  Condition #110: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.165] |  :  .  |  :  .  |  :  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.214] |  Condition #111: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.165] |  :  .  |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.214] |  Condition #112: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.165] |  :  .  |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:43.214] |  Condition #113: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.165] |  :  .  |  :  .  |  :  .  |  :  New stack:
[10:52:43.214] |  Condition #114: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.165] |  :  .  |  :  .  |  :  .  |  :  List of 1
[10:52:43.165] |  :  .  |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.165] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.165] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.165] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.165] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.165] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.165] |  :  .  |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.214] |  Condition #115: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.167] |  :  .  |  :  .  |  :  .  |  :  Old stack:
[10:52:43.215] |  Condition #116: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.168] |  :  .  |  :  .  |  :  .  |  :  List of 1
[10:52:43.168] |  :  .  |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.168] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.168] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.168] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.168] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.168] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:43.168] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:43.168] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.168] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.168] |  :  .  |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.215] |  Condition #117: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.170] |  :  .  |  :  .  |  :  .  |  :  Not identical
[10:52:43.215] |  Condition #118: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.171] |  :  .  |  :  .  |  :  .  |  :  all.equal() for future ...
[10:52:43.215] |  Condition #119: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.171] |  :  .  |  :  .  |  :  .  |  :  .  List of 2
[10:52:43.171] |  :  .  |  :  .  |  :  .  |  :  .   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.171] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.171] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.171] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.171] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.171] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.171] |  :  .  |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.171] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.171] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.171] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.171] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.171] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:52:43.171] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:43.171] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.171] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.215] |  Condition #120: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.176] |  :  .  |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:52:43.215] |  Condition #121: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.177] |  :  .  |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:43.215] |  Condition #122: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.177] |  :  .  |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:43.215] |  Condition #123: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.177] |  :  .  |  :  .  |  :  .  |  List of future strategies:
[10:52:43.177] |  :  .  |  :  .  |  :  .  |  1. sequential:
[10:52:43.177] |  :  .  |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:43.177] |  :  .  |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:43.177] |  :  .  |  :  .  |  :  .  |     - call: plan(sequential)
[10:52:43.216] |  Condition #124: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.177] |  :  .  |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.216] |  Condition #125: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.177] |  :  .  |  :  .  |  :  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.216] |  Condition #126: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.179] |  :  .  |  :  .  |  :  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.216] |  Condition #127: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.179] |  :  .  |  :  .  |  :  .  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.216] |  Condition #128: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.179] |  :  .  |  :  .  |  :  .  |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.216] |  Condition #129: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.179] |  :  .  |  :  .  |  :  .  |  :  all.equal() for FutureStrategyList ...
[10:52:43.216] |  Condition #130: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.179] |  :  .  |  :  .  |  :  .  |  :  .  New stack:
[10:52:43.216] |  Condition #131: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.179] |  :  .  |  :  .  |  :  .  |  :  .  List of 1
[10:52:43.179] |  :  .  |  :  .  |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.179] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.179] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.179] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.179] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.179] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:52:43.179] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:43.179] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.179] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.179] |  :  .  |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.217] |  Condition #132: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.182] |  :  .  |  :  .  |  :  .  |  :  .  Old stack:
[10:52:43.217] |  Condition #133: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.182] |  :  .  |  :  .  |  :  .  |  :  .  List of 1
[10:52:43.182] |  :  .  |  :  .  |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.182] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.182] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.182] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.182] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.182] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:52:43.182] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:43.182] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.182] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.182] |  :  .  |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.217] |  Condition #134: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.185] |  :  .  |  :  .  |  :  .  |  :  .  Identical
[10:52:43.217] |  Condition #135: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.185] |  :  .  |  :  .  |  :  .  |  :  all.equal() for FutureStrategyList ... done
[10:52:43.217] |  Condition #136: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.186] |  :  .  |  :  .  |  :  .  |  :  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:43.217] |  Condition #137: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.186] |  :  .  |  :  .  |  :  .  |  :  List of future strategies:
[10:52:43.186] |  :  .  |  :  .  |  :  .  |  :  1. sequential:
[10:52:43.186] |  :  .  |  :  .  |  :  .  |  :     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:43.186] |  :  .  |  :  .  |  :  .  |  :     - tweaked: FALSE
[10:52:43.186] |  :  .  |  :  .  |  :  .  |  :     - call: plan(sequential)
[10:52:43.217] |  Condition #138: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.186] |  :  .  |  :  .  |  :  .  |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.217] |  Condition #139: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.186] |  :  .  |  :  .  |  :  .  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.217] |  Condition #140: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.186] |  :  .  |  :  .  |  :  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.218] |  Condition #141: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.187] |  :  .  |  :  .  |  :  SequentialFuture started (and completed)
[10:52:43.218] |  Condition #142: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.187] |  :  .  |  :  .  |  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:43.218] |  Condition #143: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.187] |  :  .  |  :  .  Launching futures ... done
[10:52:43.218] |  Condition #144: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.187] |  :  .  |  :  .  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:43.218] |  Condition #145: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.187] |  :  .  |  :  Using SequentialFutureBackend ... done
[10:52:43.218] |  Condition #146: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.187] |  :  .  |  run() for Future (‘SequentialFuture’) ... done
[10:52:43.218] signalConditions() ... done
a = 10
[10:52:43.219] getGlobalsAndPackages() ...
[10:52:43.219] |  Searching for globals ...
[10:52:43.220] |  :  globals found: [3] ‘{’, ‘+’, ‘a’
[10:52:43.220] |  Searching for globals ... DONE
[10:52:43.220] |  Resolving globals: FALSE
[10:52:43.220] |  Search for packages associated with the globals ...
[10:52:43.220] |  :  Packages associated with globals: [1] ‘base’
[10:52:43.220] |  :  Packages: [1] ‘base’
[10:52:43.220] |  Search for packages associated with the globals ... DONE
[10:52:43.221] |  Packages after dropping 'base': [0] 
[10:52:43.221] |  globals: [1] ‘a’
[10:52:43.221] |  packages: [0] 
[10:52:43.221] getGlobalsAndPackages() ... done
[10:52:43.221] run() for Future (‘Future’) ...
[10:52:43.221] |  state: ‘created’
[10:52:43.221] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.221] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.221] |  Using SequentialFutureBackend ...
[10:52:43.222] |  :  Launching futures ...
[10:52:43.222] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:43.222] |  :  .  |  getFutureData() ...
[10:52:43.222] |  :  .  |  :  getFutureCore() ...
[10:52:43.222] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:43.222] |  :  .  |  :  getFutureCore() ... done
[10:52:43.222] |  :  .  |  :  getFutureCapture() ...
[10:52:43.222] |  :  .  |  :  getFutureCapture() ... done
[10:52:43.222] |  :  .  |  :  getFutureContext() ...
[10:52:43.222] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.223] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:43.223] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.223] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:43.223] |  :  .  |  :  getFutureContext() ... done
[10:52:43.223] |  :  .  |  getFutureData() ... done
[10:52:43.223] |  :  .  |  attachPackages() ...
[10:52:43.223] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:43.223] |  :  .  |  attachPackages() ... DONE
[10:52:43.223] |  :  .  |  attachPackages() ...
[10:52:43.223] |  :  .  |  :  packages: [n=0] 
[10:52:43.224] |  :  .  |  attachPackages() ... DONE
[10:52:43.224] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.224] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:43.224] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.224] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.224] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.225] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:43.225] |  :  .  |  :  .  |  New stack:
[10:52:43.225] |  :  .  |  :  .  |  List of 1
[10:52:43.225] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.225] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.225] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.225] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.225] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.225] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.225] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.227] |  :  .  |  :  .  |  Old stack:
[10:52:43.227] |  :  .  |  :  .  |  List of 1
[10:52:43.227] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.227] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.227] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.227] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.227] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.227] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:43.227] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:43.227] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.227] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.227] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.230] |  :  .  |  :  .  |  Not identical
[10:52:43.230] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:43.230] |  :  .  |  :  .  |  :  List of 2
[10:52:43.230] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.230] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.230] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.230] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.230] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.230] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.230] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.230] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.230] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.230] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.230] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.230] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:43.230] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:43.230] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.230] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.235] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:43.235] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:43.235] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:43.236] |  :  .  |  :  .  List of future strategies:
[10:52:43.236] |  :  .  |  :  .  1. sequential:
[10:52:43.236] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:43.236] |  :  .  |  :  .     - tweaked: FALSE
[10:52:43.236] |  :  .  |  :  .     - call: plan(sequential)
[10:52:43.236] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.236] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.236] |  :  .  |  assign_globals() ...
[10:52:43.236] |  :  .  |  List of 1
[10:52:43.236] |  :  .  |   $ a: num 10
[10:52:43.236] |  :  .  |   - attr(*, "where")=List of 1
[10:52:43.236] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:52:43.236] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:43.236] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:52:43.236] |  :  .  |   - attr(*, "total_size")= num NA
[10:52:43.236] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:52:43.239] |  :  .  |  - copied ‘a’ to environment
[10:52:43.239] |  :  .  |  assign_globals() ... done
[10:52:43.240] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.240] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.240] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.241] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:43.241] |  :  .  |  :  .  |  :  New stack:
[10:52:43.241] |  :  .  |  :  .  |  :  List of 1
[10:52:43.241] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.241] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.241] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.241] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.241] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.241] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:43.241] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:43.241] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.241] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.241] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.244] |  :  .  |  :  .  |  :  Old stack:
[10:52:43.244] |  :  .  |  :  .  |  :  List of 1
[10:52:43.244] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.244] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.244] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.244] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.244] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.244] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:43.244] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:43.244] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.244] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.244] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.246] |  :  .  |  :  .  |  :  Identical
[10:52:43.246] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:43.247] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:43.247] |  :  .  |  :  .  |  List of future strategies:
[10:52:43.247] |  :  .  |  :  .  |  1. sequential:
[10:52:43.247] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:43.247] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:43.247] |  :  .  |  :  .  |     - call: plan(sequential)
[10:52:43.247] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.247] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.247] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.248] |  :  .  |  SequentialFuture started (and completed)
[10:52:43.248] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:43.248] |  :  Launching futures ... done
[10:52:43.248] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:43.248] |  Using SequentialFutureBackend ... done
[10:52:43.248] run() for Future (‘SequentialFuture’) ... done
b = 11
*** %<-% with ‘sequential’ futures ... DONE
Testing with 1 cores ... DONE
Testing with 2 cores ...
*** %<-% with ‘multicore’ futures ...
[10:52:43.249] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.249] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:52:43.249] |  :  all.equal() for FutureStrategyList ...
[10:52:43.249] |  :  .  New stack:
[10:52:43.249] |  :  .  List of 1
[10:52:43.249] |  :  .   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.249] |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.249] |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.249] |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.249] |  :  .      ...)  
[10:52:43.249] |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.249] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.249] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:43.249] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.251] |  :  .  Old stack:
[10:52:43.251] |  :  .  List of 1
[10:52:43.251] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.251] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.251] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.251] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.251] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.251] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:52:43.251] |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:43.251] |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.251] |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.251] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.255] |  :  .  Not identical
[10:52:43.255] |  :  .  all.equal() for future ...
[10:52:43.255] |  :  .  |  List of 2
[10:52:43.255] |  :  .  |   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.255] |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.255] |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.255] |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.255] |  :  .  |      ...)  
[10:52:43.255] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.255] |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.255] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:43.255] |  :  .  |   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.255] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.255] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.255] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.255] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.255] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:43.255] |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f87ecb8> 
[10:52:43.255] |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.255] |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.259] |  :  .  |  Formals differ
[10:52:43.260] |  :  .  all.equal() for future ... done
[10:52:43.260] |  :  .  Future strategies differ at level 1
[10:52:43.260] |  :  all.equal() for FutureStrategyList ... done
[10:52:43.260] |  :  plan(): Setting new future strategy stack:
[10:52:43.260] |  :  List of future strategies:
[10:52:43.260] |  :  1. multicore:
[10:52:43.260] |  :     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:43.260] |  :     - tweaked: FALSE
[10:52:43.260] |  :     - call: plan(strategy)
[10:52:43.260] |  :  List of 1
[10:52:43.260] |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.260] |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.260] |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.260] |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.260] |  :      ...)  
[10:52:43.260] |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.260] |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.260] |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:43.260] |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.262] |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:52:43.263] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.263] |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:43.263] |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.263] |  :  .  Legacy shutdown of cluster workers ...
[10:52:43.263] |  :  .  |  Stopping existing cluster ...
[10:52:43.263] |  :  .  |  :  No pre-existing cluster. Skipping
[10:52:43.263] |  :  .  |  Stopping existing cluster ... done
[10:52:43.263] |  :  .  Legacy shutdown of cluster workers ... done
[10:52:43.263] |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:52:43.264] |  :  plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ...
[10:52:43.264] |  :  .  function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.264] |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.264] |  :  .   - attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.264] |  :  .   - attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.264] |  :  .      ...)  
[10:52:43.264] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.264] |  :  .   - attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.264] |  :  .   - attr(*, "call")= language plan(strategy)
[10:52:43.265] |  :  .  init: NULL
[10:52:43.265] |  :  plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ... done
[10:52:43.266] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.266] |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:43.266] |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.266] |  :  Backend function: <‘NULL’>
[10:52:43.267] |  :  Backend: <‘MulticoreFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:43.268] |  :  plan(): nbrOfWorkers() = 2
[10:52:43.268] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:52:43.268] plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
** Future evaluation without globals
[10:52:43.268] getGlobalsAndPackages() ...
[10:52:43.268] |  Searching for globals ...
[10:52:43.269] |  :  globals found: [2] ‘{’, ‘<-’
[10:52:43.269] |  Searching for globals ... DONE
[10:52:43.269] |  Resolving globals: FALSE
[10:52:43.270] |  Search for packages associated with the globals ...
[10:52:43.270] |  :  Packages associated with globals: [1] ‘base’
[10:52:43.270] |  :  Packages: [1] ‘base’
[10:52:43.270] |  Search for packages associated with the globals ... DONE
[10:52:43.270] |  Packages after dropping 'base': [0] 
[10:52:43.270] |  globals: [0] 
[10:52:43.270] |  packages: [0] 
[10:52:43.270] getGlobalsAndPackages() ... done
[10:52:43.271] run() for Future (‘Future’) ...
[10:52:43.271] |  state: ‘created’
[10:52:43.271] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.271] |  :  makeFutureBackend(<multicore>) ...
[10:52:43.271] |  :  .  Backend function: <‘NULL’>
[10:52:43.282] |  :  .  Backend: <‘MulticoreFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:43.282] |  :  makeFutureBackend(<multicore>) ... done
[10:52:43.282] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.282] |  Using MulticoreFutureBackend ...
[10:52:43.282] |  :  Launching futures ...
[10:52:43.283] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:43.283] |  :  .  |  getFutureData() ...
[10:52:43.283] |  :  .  |  :  getFutureCore() ...
[10:52:43.283] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:43.283] |  :  .  |  :  getFutureCore() ... done
[10:52:43.283] |  :  .  |  :  getFutureCapture() ...
[10:52:43.283] |  :  .  |  :  getFutureCapture() ... done
[10:52:43.283] |  :  .  |  :  getFutureContext() ...
[10:52:43.283] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.283] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:43.284] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.284] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:43.284] |  :  .  |  :  getFutureContext() ... done
[10:52:43.284] |  :  .  |  getFutureData() ... done
[10:52:43.284] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:43.285] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:43.287] |  :  .  |  MulticoreFuture started
[10:52:43.288] |  :  .  |  attachPackages() ...
[10:52:43.288] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:43.288] |  :  Launching futures ... done
[10:52:43.288] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:43.288] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:43.289] |  :  .  |  attachPackages() ... DONE
[10:52:43.289] |  Using MulticoreFutureBackend ... done
[10:52:43.289] |  :  .  |  attachPackages() ...
[10:52:43.289] run() for Future (‘MulticoreFuture’) ... done
[10:52:43.289] |  :  .  |  :  packages: [n=0] 
[10:52:43.289] |  :  .  |  attachPackages() ... DONE
[10:52:43.290] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.290] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:43.291] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.291] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.291] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.291] result() for MulticoreFuture ...
[10:52:43.292] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:43.292] |  :  .  |  :  .  |  New stack:
[10:52:43.292] |  :  .  |  :  .  |  List of 1
[10:52:43.292] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.292] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.292] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.292] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.292] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.292] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.292] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.296] |  :  .  |  :  .  |  Old stack:
[10:52:43.296] |  :  .  |  :  .  |  List of 1
[10:52:43.296] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.296] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.296] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.296] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.296] |  :  .  |  :  .  |      ...)  
[10:52:43.296] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.296] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.296] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:43.296] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.296] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.296] |  :  .  |  :  .  |      ...)  
[10:52:43.296] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.296] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.305] |  :  .  |  :  .  |  Not identical
[10:52:43.305] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:43.306] |  :  .  |  :  .  |  :  List of 2
[10:52:43.306] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.306] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.306] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.306] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.306] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.306] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.306] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.306] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.306] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.306] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.306] |  :  .  |  :  .  |  :      ...)  
[10:52:43.306] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.306] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.306] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:43.306] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.306] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.306] |  :  .  |  :  .  |  :      ...)  
[10:52:43.306] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.314] |  :  .  |  :  .  |  :  Formals differ
[10:52:43.314] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:43.314] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:52:43.314] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:43.314] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:52:43.315] |  :  .  |  :  .  List of future strategies:
[10:52:43.315] |  :  .  |  :  .  1. sequential:
[10:52:43.315] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:43.315] |  :  .  |  :  .     - tweaked: FALSE
[10:52:43.315] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.315] |  :  .  |  :  .  List of 1
[10:52:43.315] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.315] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.315] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.315] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.315] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.315] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.315] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.318] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:43.318] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:43.319] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.319] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:43.319] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.319] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:52:43.319] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:43.320] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:52:43.320] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.320] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.322] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.323] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.323] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.323] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:43.323] |  :  .  |  :  .  |  :  New stack:
[10:52:43.323] |  :  .  |  :  .  |  :  List of 1
[10:52:43.323] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.323] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.323] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.323] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.323] |  :  .  |  :  .  |  :      ...)  
[10:52:43.323] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.323] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.323] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:43.323] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.323] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.323] |  :  .  |  :  .  |  :      ...)  
[10:52:43.323] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.323] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.326] |  :  .  |  :  .  |  :  Old stack:
[10:52:43.327] |  :  .  |  :  .  |  :  List of 1
[10:52:43.327] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.327] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.327] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.327] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.327] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.327] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.327] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.329] |  :  .  |  :  .  |  :  Not identical
[10:52:43.329] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:52:43.329] |  :  .  |  :  .  |  :  .  List of 2
[10:52:43.329] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.329] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.329] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.329] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.329] |  :  .  |  :  .  |  :  .      ...)  
[10:52:43.329] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.329] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.329] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:43.329] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.329] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.329] |  :  .  |  :  .  |  :  .      ...)  
[10:52:43.329] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.329] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.329] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.329] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.329] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.329] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.329] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.335] |  :  .  |  :  .  |  :  .  Formals differ
[10:52:43.335] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:52:43.335] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:52:43.335] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:43.335] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:52:43.335] |  :  .  |  :  .  |  List of future strategies:
[10:52:43.335] |  :  .  |  :  .  |  1. multicore:
[10:52:43.335] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:43.335] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:43.335] |  :  .  |  :  .  |     - call: plan(strategy)
[10:52:43.336] |  :  .  |  :  .  |  List of 1
[10:52:43.336] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.336] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.336] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.336] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.336] |  :  .  |  :  .  |      ...)  
[10:52:43.336] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.336] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.336] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:43.336] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.336] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.336] |  :  .  |  :  .  |      ...)  
[10:52:43.336] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.336] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.338] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:43.339] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:43.339] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.339] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:43.339] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.339] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:52:43.339] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.339] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.339] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.341] |  readImmediateCondition() ...
[10:52:43.341] |    - path: ‘/tmp/Rtmp5jFl1h/.future/immediateConditions’
[10:52:43.341] |   - Number of RDS files: 0
[10:52:43.341] |  readImmediateCondition() ... DONE
[10:52:43.345] |  result() for MulticoreFuture ...
[10:52:43.345] |  result() for MulticoreFuture ... done
[10:52:43.345] result() for MulticoreFuture ... done
[10:52:43.345] result() for MulticoreFuture ...
[10:52:43.345] result() for MulticoreFuture ... done
** Future evaluation with globals
[10:52:43.346] getGlobalsAndPackages() ...
[10:52:43.346] |  Searching for globals ...
[10:52:43.348] |  :  globals found: [3] ‘{’, ‘<-’, ‘a’
[10:52:43.348] |  Searching for globals ... DONE
[10:52:43.348] |  Resolving globals: FALSE
[10:52:43.350] |  Search for packages associated with the globals ...
[10:52:43.350] |  :  Packages associated with globals: [1] ‘base’
[10:52:43.351] |  :  Packages: [1] ‘base’
[10:52:43.351] |  Search for packages associated with the globals ... DONE
[10:52:43.351] |  Packages after dropping 'base': [0] 
[10:52:43.351] |  globals: [1] ‘a’
[10:52:43.352] |  packages: [0] 
[10:52:43.352] getGlobalsAndPackages() ... done
[10:52:43.352] run() for Future (‘Future’) ...
[10:52:43.352] |  state: ‘created’
[10:52:43.353] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.353] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.353] |  Using MulticoreFutureBackend ...
[10:52:43.353] |  :  Launching futures ...
[10:52:43.353] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:43.353] |  :  .  |  getFutureData() ...
[10:52:43.354] |  :  .  |  :  getFutureCore() ...
[10:52:43.354] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:43.354] |  :  .  |  :  getFutureCore() ... done
[10:52:43.354] |  :  .  |  :  getFutureCapture() ...
[10:52:43.354] |  :  .  |  :  getFutureCapture() ... done
[10:52:43.354] |  :  .  |  :  getFutureContext() ...
[10:52:43.354] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.354] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:43.355] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.355] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:43.355] |  :  .  |  :  getFutureContext() ... done
[10:52:43.355] |  :  .  |  getFutureData() ... done
[10:52:43.355] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:43.356] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:43.357] |  :  .  |  MulticoreFuture started
[10:52:43.358] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:43.358] |  :  .  |  attachPackages() ...
[10:52:43.358] |  :  Launching futures ... done
[10:52:43.358] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:43.359] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:43.359] |  :  .  |  attachPackages() ... DONE
[10:52:43.359] |  Using MulticoreFutureBackend ... done
[10:52:43.359] |  :  .  |  attachPackages() ...
[10:52:43.359] run() for Future (‘MulticoreFuture’) ... done
[10:52:43.359] |  :  .  |  :  packages: [n=0] 
[10:52:43.359] |  :  .  |  attachPackages() ... DONE
[10:52:43.360] result() for MulticoreFuture ...
[10:52:43.360] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.361] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:43.361] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.362] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.362] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.362] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:43.362] |  :  .  |  :  .  |  New stack:
[10:52:43.363] |  :  .  |  :  .  |  List of 1
[10:52:43.363] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.363] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.363] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.363] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.363] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.363] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.363] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.368] |  :  .  |  :  .  |  Old stack:
[10:52:43.368] |  :  .  |  :  .  |  List of 1
[10:52:43.368] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.368] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.368] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.368] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.368] |  :  .  |  :  .  |      ...)  
[10:52:43.368] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.368] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.368] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:43.368] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.368] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.368] |  :  .  |  :  .  |      ...)  
[10:52:43.368] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.368] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.373] |  :  .  |  :  .  |  Not identical
[10:52:43.373] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:43.373] |  :  .  |  :  .  |  :  List of 2
[10:52:43.373] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.373] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.373] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.373] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.373] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.373] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.373] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.373] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.373] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.373] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.373] |  :  .  |  :  .  |  :      ...)  
[10:52:43.373] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.373] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.373] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:43.373] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.373] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.373] |  :  .  |  :  .  |  :      ...)  
[10:52:43.373] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.381] |  :  .  |  :  .  |  :  Formals differ
[10:52:43.381] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:43.381] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:52:43.381] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:43.381] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:52:43.381] |  :  .  |  :  .  List of future strategies:
[10:52:43.381] |  :  .  |  :  .  1. sequential:
[10:52:43.381] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:43.381] |  :  .  |  :  .     - tweaked: FALSE
[10:52:43.381] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.382] |  :  .  |  :  .  List of 1
[10:52:43.382] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.382] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.382] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.382] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.382] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.382] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.382] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.386] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:43.386] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:43.388] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.388] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:43.388] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.389] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:52:43.389] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:43.390] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:52:43.390] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.390] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.390] |  :  .  |  assign_globals() ...
[10:52:43.390] |  :  .  |  List of 1
[10:52:43.390] |  :  .  |   $ a: num 2
[10:52:43.390] |  :  .  |   - attr(*, "where")=List of 1
[10:52:43.390] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:52:43.390] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:43.390] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:52:43.390] |  :  .  |   - attr(*, "total_size")= num NA
[10:52:43.390] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:52:43.394] |  :  .  |  - copied ‘a’ to environment
[10:52:43.394] |  :  .  |  assign_globals() ... done
[10:52:43.396] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.397] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.397] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.397] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:43.397] |  :  .  |  :  .  |  :  New stack:
[10:52:43.397] |  :  .  |  :  .  |  :  List of 1
[10:52:43.397] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.397] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.397] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.397] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.397] |  :  .  |  :  .  |  :      ...)  
[10:52:43.397] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.397] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.397] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:43.397] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.397] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.397] |  :  .  |  :  .  |  :      ...)  
[10:52:43.397] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.397] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.400] |  :  .  |  :  .  |  :  Old stack:
[10:52:43.400] |  :  .  |  :  .  |  :  List of 1
[10:52:43.400] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.400] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.400] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.400] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.400] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.400] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.400] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.402] |  :  .  |  :  .  |  :  Not identical
[10:52:43.402] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:52:43.402] |  :  .  |  :  .  |  :  .  List of 2
[10:52:43.402] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.402] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.402] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.402] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.402] |  :  .  |  :  .  |  :  .      ...)  
[10:52:43.402] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.402] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.402] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:43.402] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.402] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.402] |  :  .  |  :  .  |  :  .      ...)  
[10:52:43.402] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.402] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.402] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.402] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.402] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.402] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.402] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.407] |  :  .  |  :  .  |  :  .  Formals differ
[10:52:43.407] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:52:43.407] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:52:43.407] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:43.407] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:52:43.407] |  :  .  |  :  .  |  List of future strategies:
[10:52:43.407] |  :  .  |  :  .  |  1. multicore:
[10:52:43.407] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:43.407] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:43.407] |  :  .  |  :  .  |     - call: plan(strategy)
[10:52:43.408] |  :  .  |  :  .  |  List of 1
[10:52:43.408] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.408] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.408] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.408] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.408] |  :  .  |  :  .  |      ...)  
[10:52:43.408] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.408] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.408] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:43.408] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.408] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.408] |  :  .  |  :  .  |      ...)  
[10:52:43.408] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.408] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.412] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:43.412] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:43.412] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.412] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:43.412] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.412] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:52:43.412] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.412] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.413] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.413] |  readImmediateCondition() ...
[10:52:43.413] |    - path: ‘/tmp/Rtmp5jFl1h/.future/immediateConditions’
[10:52:43.414] |   - Number of RDS files: 0
[10:52:43.414] |  readImmediateCondition() ... DONE
[10:52:43.414] |  result() for MulticoreFuture ...
[10:52:43.414] |  result() for MulticoreFuture ... done
[10:52:43.414] result() for MulticoreFuture ... done
[10:52:43.414] result() for MulticoreFuture ...
[10:52:43.415] result() for MulticoreFuture ... done
** Future evaluation with errors
[10:52:43.415] getGlobalsAndPackages() ...
[10:52:43.415] |  Searching for globals ...
[10:52:43.418] |  :  globals found: [3] ‘{’, ‘<-’, ‘stop’
[10:52:43.418] |  Searching for globals ... DONE
[10:52:43.418] |  Resolving globals: FALSE
[10:52:43.418] |  Search for packages associated with the globals ...
[10:52:43.419] |  :  Packages associated with globals: [1] ‘base’
[10:52:43.419] |  :  Packages: [1] ‘base’
[10:52:43.419] |  Search for packages associated with the globals ... DONE
[10:52:43.419] |  Packages after dropping 'base': [0] 
[10:52:43.419] |  globals: [0] 
[10:52:43.419] |  packages: [0] 
[10:52:43.420] getGlobalsAndPackages() ... done
[10:52:43.420] run() for Future (‘Future’) ...
[10:52:43.420] |  state: ‘created’
[10:52:43.420] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.420] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.421] |  Using MulticoreFutureBackend ...
[10:52:43.421] |  :  Launching futures ...
[10:52:43.421] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:43.421] |  :  .  |  getFutureData() ...
[10:52:43.421] |  :  .  |  :  getFutureCore() ...
[10:52:43.421] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:43.421] |  :  .  |  :  getFutureCore() ... done
[10:52:43.421] |  :  .  |  :  getFutureCapture() ...
[10:52:43.422] |  :  .  |  :  getFutureCapture() ... done
[10:52:43.422] |  :  .  |  :  getFutureContext() ...
[10:52:43.422] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.422] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:43.422] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.422] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:43.422] |  :  .  |  :  getFutureContext() ... done
[10:52:43.423] |  :  .  |  getFutureData() ... done
[10:52:43.423] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:43.423] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:43.425] |  :  .  |  MulticoreFuture started
[10:52:43.425] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:43.425] |  :  Launching futures ... done
[10:52:43.425] |  :  .  |  attachPackages() ...
[10:52:43.426] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:43.426] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:43.426] |  Using MulticoreFutureBackend ... done
[10:52:43.426] run() for Future (‘MulticoreFuture’) ... done
[10:52:43.426] |  :  .  |  attachPackages() ... DONE
[10:52:43.426] |  :  .  |  attachPackages() ...
[10:52:43.427] |  :  .  |  :  packages: [n=0] 
[10:52:43.427] |  :  .  |  attachPackages() ... DONE
[10:52:43.427] result() for MulticoreFuture ...
[10:52:43.428] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.428] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:43.428] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.429] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.429] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.429] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:43.430] |  :  .  |  :  .  |  New stack:
[10:52:43.430] |  :  .  |  :  .  |  List of 1
[10:52:43.430] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.430] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.430] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.430] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.430] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.430] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.430] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.434] |  :  .  |  :  .  |  Old stack:
[10:52:43.434] |  :  .  |  :  .  |  List of 1
[10:52:43.434] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.434] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.434] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.434] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.434] |  :  .  |  :  .  |      ...)  
[10:52:43.434] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.434] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.434] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:43.434] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.434] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.434] |  :  .  |  :  .  |      ...)  
[10:52:43.434] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.434] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.439] |  :  .  |  :  .  |  Not identical
[10:52:43.439] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:43.439] |  :  .  |  :  .  |  :  List of 2
[10:52:43.439] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.439] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.439] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.439] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.439] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.439] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.439] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.439] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.439] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.439] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.439] |  :  .  |  :  .  |  :      ...)  
[10:52:43.439] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.439] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.439] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:43.439] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.439] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.439] |  :  .  |  :  .  |  :      ...)  
[10:52:43.439] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.451] |  :  .  |  :  .  |  :  Formals differ
[10:52:43.451] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:43.451] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:52:43.452] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:43.452] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:52:43.452] |  :  .  |  :  .  List of future strategies:
[10:52:43.452] |  :  .  |  :  .  1. sequential:
[10:52:43.452] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:43.452] |  :  .  |  :  .     - tweaked: FALSE
[10:52:43.452] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.453] |  :  .  |  :  .  List of 1
[10:52:43.453] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.453] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.453] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.453] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.453] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.453] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.453] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.456] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:43.456] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:43.456] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.456] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:43.456] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.457] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:52:43.457] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:43.457] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:52:43.457] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.457] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.460] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.460] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.461] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.461] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:43.461] |  :  .  |  :  .  |  :  New stack:
[10:52:43.461] |  :  .  |  :  .  |  :  List of 1
[10:52:43.461] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.461] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.461] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.461] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.461] |  :  .  |  :  .  |  :      ...)  
[10:52:43.461] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.461] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.461] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:43.461] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.461] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.461] |  :  .  |  :  .  |  :      ...)  
[10:52:43.461] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.461] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.464] |  :  .  |  :  .  |  :  Old stack:
[10:52:43.464] |  :  .  |  :  .  |  :  List of 1
[10:52:43.464] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.464] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.464] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.464] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.464] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.464] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.464] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.467] |  :  .  |  :  .  |  :  Not identical
[10:52:43.467] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:52:43.467] |  :  .  |  :  .  |  :  .  List of 2
[10:52:43.467] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.467] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.467] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.467] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.467] |  :  .  |  :  .  |  :  .      ...)  
[10:52:43.467] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.467] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.467] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:43.467] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.467] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.467] |  :  .  |  :  .  |  :  .      ...)  
[10:52:43.467] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.467] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.467] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.467] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.467] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.467] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.467] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.473] |  :  .  |  :  .  |  :  .  Formals differ
[10:52:43.473] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:52:43.473] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:52:43.473] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:43.474] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:52:43.474] |  :  .  |  :  .  |  List of future strategies:
[10:52:43.474] |  :  .  |  :  .  |  1. multicore:
[10:52:43.474] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:43.474] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:43.474] |  :  .  |  :  .  |     - call: plan(strategy)
[10:52:43.474] |  :  .  |  :  .  |  List of 1
[10:52:43.474] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.474] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.474] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.474] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.474] |  :  .  |  :  .  |      ...)  
[10:52:43.474] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.474] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.474] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:43.474] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.474] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.474] |  :  .  |  :  .  |      ...)  
[10:52:43.474] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.474] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.477] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:43.477] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:43.477] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.477] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:43.478] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.478] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:52:43.478] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.478] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.478] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.479] |  readImmediateCondition() ...
[10:52:43.479] |    - path: ‘/tmp/Rtmp5jFl1h/.future/immediateConditions’
[10:52:43.479] |   - Number of RDS files: 0
[10:52:43.479] |  readImmediateCondition() ... DONE
[10:52:43.480] |  result() for MulticoreFuture ...
[10:52:43.480] |  result() for MulticoreFuture ... done
[10:52:43.480] |  signalConditions() ...
[10:52:43.480] |  :  include = ‘immediateCondition’
[10:52:43.480] |  :  exclude = 
[10:52:43.480] |  :  resignal = FALSE
[10:52:43.480] |  :  Number of conditions: 1
[10:52:43.481] |  signalConditions() ... done
[10:52:43.481] result() for MulticoreFuture ... done
[10:52:43.481] result() for MulticoreFuture ...
[10:52:43.481] result() for MulticoreFuture ... done
[10:52:43.481] signalConditions() ...
[10:52:43.481] |  include = ‘immediateCondition’
[10:52:43.481] |  exclude = 
[10:52:43.482] |  resignal = FALSE
[10:52:43.482] |  Number of conditions: 1
[10:52:43.482] signalConditions() ... done
[10:52:43.482] Future state: ‘finished’
[10:52:43.482] result() for MulticoreFuture ...
[10:52:43.482] result() for MulticoreFuture ... done
[10:52:43.482] signalConditions() ...
[10:52:43.482] |  include = ‘condition’
[10:52:43.483] |  exclude = ‘immediateCondition’
[10:52:43.483] |  resignal = TRUE
[10:52:43.483] |  Number of conditions: 1
[10:52:43.483] |  Condition #1: ‘simpleError’, ‘error’, ‘condition’
[10:52:43.483] signalConditions() ... done
[10:52:43.484] getGlobalsAndPackages() ...
[10:52:43.484] |  Searching for globals ...
[10:52:43.486] |  :  globals found: [6] ‘{’, ‘if’, ‘==’, ‘%%’, ‘ii’, ‘stop’
[10:52:43.487] |  Searching for globals ... DONE
[10:52:43.487] |  Resolving globals: FALSE
[10:52:43.487] |  Search for packages associated with the globals ...
[10:52:43.487] |  :  Packages associated with globals: [1] ‘base’
[10:52:43.488] |  :  Packages: [1] ‘base’
[10:52:43.488] |  Search for packages associated with the globals ... DONE
[10:52:43.488] |  Packages after dropping 'base': [0] 
[10:52:43.488] |  globals: [1] ‘ii’
[10:52:43.488] |  packages: [0] 
[10:52:43.488] getGlobalsAndPackages() ... done
[10:52:43.489] run() for Future (‘Future’) ...
[10:52:43.489] |  state: ‘created’
[10:52:43.489] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.491] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.491] |  Using MulticoreFutureBackend ...
[10:52:43.491] |  :  Launching futures ...
[10:52:43.492] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:43.492] |  :  .  |  getFutureData() ...
[10:52:43.492] |  :  .  |  :  getFutureCore() ...
[10:52:43.492] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:43.492] |  :  .  |  :  getFutureCore() ... done
[10:52:43.492] |  :  .  |  :  getFutureCapture() ...
[10:52:43.493] |  :  .  |  :  getFutureCapture() ... done
[10:52:43.493] |  :  .  |  :  getFutureContext() ...
[10:52:43.493] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.493] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:43.493] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.494] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:43.494] |  :  .  |  :  getFutureContext() ... done
[10:52:43.494] |  :  .  |  getFutureData() ... done
[10:52:43.494] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:43.495] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:43.496] |  :  .  |  MulticoreFuture started
[10:52:43.497] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:43.497] |  :  .  |  attachPackages() ...
[10:52:43.497] |  :  Launching futures ... done
[10:52:43.497] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:43.498] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:43.498] |  Using MulticoreFutureBackend ... done
[10:52:43.498] |  :  .  |  attachPackages() ... DONE
[10:52:43.498] |  :  .  |  attachPackages() ...
[10:52:43.498] run() for Future (‘MulticoreFuture’) ... done
[10:52:43.498] |  :  .  |  :  packages: [n=0] 
[10:52:43.499] |  :  .  |  attachPackages() ... DONE
[10:52:43.499] getGlobalsAndPackages() ...
[10:52:43.500] |  Searching for globals ...
[10:52:43.500] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.500] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:43.500] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.501] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.501] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.501] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:43.502] |  :  .  |  :  .  |  New stack:
[10:52:43.504] |  :  globals found: [6] ‘{’, ‘if’, ‘==’, ‘%%’, ‘ii’, ‘stop’
[10:52:43.504] |  Searching for globals ... DONE
[10:52:43.504] |  Resolving globals: FALSE
[10:52:43.504] |  Search for packages associated with the globals ...
[10:52:43.505] |  :  Packages associated with globals: [1] ‘base’
[10:52:43.505] |  :  Packages: [1] ‘base’
[10:52:43.505] |  Search for packages associated with the globals ... DONE
[10:52:43.502] |  :  .  |  :  .  |  List of 1
[10:52:43.502] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.502] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.502] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.502] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.502] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.502] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.502] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.506] |  Packages after dropping 'base': [0] 
[10:52:43.506] |  :  .  |  :  .  |  Old stack:
[10:52:43.506] |  globals: [1] ‘ii’
[10:52:43.506] |  packages: [0] 
[10:52:43.506] getGlobalsAndPackages() ... done
[10:52:43.507] run() for Future (‘Future’) ...
[10:52:43.507] |  state: ‘created’
[10:52:43.507] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.507] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.507] |  Using MulticoreFutureBackend ...
[10:52:43.507] |  :  Launching futures ...
[10:52:43.508] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:43.508] |  :  .  |  getFutureData() ...
[10:52:43.508] |  :  .  |  :  getFutureCore() ...
[10:52:43.508] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:43.508] |  :  .  |  :  getFutureCore() ... done
[10:52:43.508] |  :  .  |  :  getFutureCapture() ...
[10:52:43.508] |  :  .  |  :  getFutureCapture() ... done
[10:52:43.508] |  :  .  |  :  getFutureContext() ...
[10:52:43.509] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.509] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:43.509] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.509] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:43.509] |  :  .  |  :  getFutureContext() ... done
[10:52:43.509] |  :  .  |  getFutureData() ... done
[10:52:43.510] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:43.510] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:43.506] |  :  .  |  :  .  |  List of 1
[10:52:43.506] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.506] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.506] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.506] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.506] |  :  .  |  :  .  |      ...)  
[10:52:43.506] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.506] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.506] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:43.506] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.506] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.506] |  :  .  |  :  .  |      ...)  
[10:52:43.506] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.506] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.511] |  :  .  |  :  .  |  Not identical
[10:52:43.511] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:43.512] |  :  .  |  MulticoreFuture started
[10:52:43.513] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:43.513] |  :  Launching futures ... done
[10:52:43.513] |  :  .  |  attachPackages() ...
[10:52:43.513] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:43.513] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:43.514] |  Using MulticoreFutureBackend ... done
[10:52:43.514] run() for Future (‘MulticoreFuture’) ... done
[10:52:43.514] |  :  .  |  attachPackages() ... DONE
[10:52:43.514] |  :  .  |  attachPackages() ...
[10:52:43.514] |  :  .  |  :  packages: [n=0] 
[10:52:43.515] |  :  .  |  attachPackages() ... DONE
[10:52:43.515] getGlobalsAndPackages() ...
[10:52:43.516] |  Searching for globals ...
[10:52:43.516] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.516] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:43.517] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.517] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.511] |  :  .  |  :  .  |  :  List of 2
[10:52:43.511] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.511] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.511] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.511] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.511] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.511] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.511] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.511] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.511] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.511] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.511] |  :  .  |  :  .  |  :      ...)  
[10:52:43.511] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.511] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.511] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:43.511] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.511] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.511] |  :  .  |  :  .  |  :      ...)  
[10:52:43.511] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.518] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.518] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:43.518] |  :  .  |  :  .  |  New stack:
[10:52:43.518] |  :  .  |  :  .  |  :  Formals differ
[10:52:43.519] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:43.519] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:52:43.519] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:43.519] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:52:43.519] |  :  .  |  :  .  List of future strategies:
[10:52:43.519] |  :  .  |  :  .  1. sequential:
[10:52:43.519] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:43.519] |  :  .  |  :  .     - tweaked: FALSE
[10:52:43.519] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.521] |  :  globals found: [6] ‘{’, ‘if’, ‘==’, ‘%%’, ‘ii’, ‘stop’
[10:52:43.521] |  Searching for globals ... DONE
[10:52:43.522] |  Resolving globals: FALSE
[10:52:43.522] |  Search for packages associated with the globals ...
[10:52:43.522] |  :  Packages associated with globals: [1] ‘base’
[10:52:43.520] |  :  .  |  :  .  List of 1
[10:52:43.520] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.520] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.520] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.520] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.520] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.520] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.520] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.523] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:43.523] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:43.523] |  :  Packages: [1] ‘base’
[10:52:43.524] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.524] |  Search for packages associated with the globals ... DONE
[10:52:43.524] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:43.519] |  :  .  |  :  .  |  List of 1
[10:52:43.519] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.519] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.519] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.519] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.519] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.519] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.519] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.524] |  Packages after dropping 'base': [0] 
[10:52:43.524] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.524] |  :  .  |  :  .  |  Old stack:
[10:52:43.524] |  globals: [1] ‘ii’
[10:52:43.524] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:52:43.524] |  packages: [0] 
[10:52:43.525] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:43.525] getGlobalsAndPackages() ... done
[10:52:43.525] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:52:43.525] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.525] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.525] run() for Future (‘Future’) ...
[10:52:43.525] |  :  .  |  assign_globals() ...
[10:52:43.525] |  state: ‘created’
[10:52:43.526] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.526] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.526] |  Using MulticoreFutureBackend ...
[10:52:43.526] |  :  Launching futures ...
[10:52:43.527] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:43.527] |  :  .  |  getFutureData() ...
[10:52:43.527] |  :  .  |  :  getFutureCore() ...
[10:52:43.527] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:43.527] |  :  .  |  :  getFutureCore() ... done
[10:52:43.528] |  :  .  |  :  getFutureCapture() ...
[10:52:43.528] |  :  .  |  :  getFutureCapture() ... done
[10:52:43.528] |  :  .  |  :  getFutureContext() ...
[10:52:43.528] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.529] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:43.529] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.529] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:43.529] |  :  .  |  :  getFutureContext() ... done
[10:52:43.530] |  :  .  |  getFutureData() ... done
[10:52:43.530] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:43.530] |  :  .  |  :  Poll #1 (0): usedCores() = 2, workers = 2
[10:52:43.524] |  :  .  |  :  .  |  List of 1
[10:52:43.524] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.524] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.524] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.524] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.524] |  :  .  |  :  .  |      ...)  
[10:52:43.524] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.524] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.524] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:43.524] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.524] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.524] |  :  .  |  :  .  |      ...)  
[10:52:43.524] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.524] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.531] |  :  .  |  :  .  |  Not identical
[10:52:43.532] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:43.526] |  :  .  |  List of 1
[10:52:43.526] |  :  .  |   $ ii: int 1
[10:52:43.526] |  :  .  |   - attr(*, "where")=List of 1
[10:52:43.526] |  :  .  |    ..$ ii:<environment: R_EmptyEnv> 
[10:52:43.526] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:43.526] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:52:43.526] |  :  .  |   - attr(*, "total_size")= num NA
[10:52:43.526] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:52:43.532] |  :  .  |  - copied ‘ii’ to environment
[10:52:43.532] |  :  .  |  assign_globals() ... done
[10:52:43.534] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.534] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.534] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.535] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:43.535] |  :  .  |  :  .  |  :  New stack:
[10:52:43.535] |  :  .  |  :  .  |  :  List of 1
[10:52:43.535] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.535] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.535] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.535] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.535] |  :  .  |  :  .  |  :      ...)  
[10:52:43.535] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.535] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.535] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:43.535] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.535] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.535] |  :  .  |  :  .  |  :      ...)  
[10:52:43.535] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.535] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.538] |  :  .  |  :  .  |  :  Old stack:
[10:52:43.538] |  :  .  |  :  .  |  :  List of 1
[10:52:43.538] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.538] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.538] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.538] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.538] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.538] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.538] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.540] |  :  .  |  :  .  |  :  Not identical
[10:52:43.540] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:52:43.532] |  :  .  |  :  .  |  :  List of 2
[10:52:43.532] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.532] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.532] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.532] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.532] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.532] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.532] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.532] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.532] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.532] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.532] |  :  .  |  :  .  |  :      ...)  
[10:52:43.532] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.532] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.532] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:43.532] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.532] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.532] |  :  .  |  :  .  |  :      ...)  
[10:52:43.532] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.543] |  :  .  |  :  .  |  :  Formals differ
[10:52:43.543] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:43.544] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:52:43.544] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:43.544] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:52:43.544] |  :  .  |  :  .  List of future strategies:
[10:52:43.544] |  :  .  |  :  .  1. sequential:
[10:52:43.544] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:43.544] |  :  .  |  :  .     - tweaked: FALSE
[10:52:43.544] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.541] |  :  .  |  :  .  |  :  .  List of 2
[10:52:43.541] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.541] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.541] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.541] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.541] |  :  .  |  :  .  |  :  .      ...)  
[10:52:43.541] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.541] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.541] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:43.541] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.541] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.541] |  :  .  |  :  .  |  :  .      ...)  
[10:52:43.541] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.541] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.541] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.541] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.541] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.541] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.541] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.545] |  :  .  |  :  .  |  :  .  Formals differ
[10:52:43.545] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:52:43.545] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:52:43.546] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:43.546] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:52:43.546] |  :  .  |  :  .  |  List of future strategies:
[10:52:43.546] |  :  .  |  :  .  |  1. multicore:
[10:52:43.546] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:43.546] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:43.546] |  :  .  |  :  .  |     - call: plan(strategy)
[10:52:43.545] |  :  .  |  :  .  List of 1
[10:52:43.545] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.545] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.545] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.545] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.545] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.545] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.545] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.548] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:43.548] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:43.549] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.549] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:43.549] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.549] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:52:43.549] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:43.550] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:52:43.550] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.550] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.550] |  :  .  |  assign_globals() ...
[10:52:43.546] |  :  .  |  :  .  |  List of 1
[10:52:43.546] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.546] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.546] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.546] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.546] |  :  .  |  :  .  |      ...)  
[10:52:43.546] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.546] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.546] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:43.546] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.546] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.546] |  :  .  |  :  .  |      ...)  
[10:52:43.546] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.546] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.551] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:43.551] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:43.551] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.551] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:43.551] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.551] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:52:43.552] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.552] |  :  .  |  :  readImmediateCondition() ...
[10:52:43.552] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.552] |  :  .  |  :    - path: ‘/tmp/Rtmp5jFl1h/.future/immediateConditions’
[10:52:43.552] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.552] |  :  .  |  :   - Number of RDS files: 0
[10:52:43.552] |  :  .  |  :  readImmediateCondition() ... DONE
[10:52:43.550] |  :  .  |  List of 1
[10:52:43.550] |  :  .  |   $ ii: int 2
[10:52:43.550] |  :  .  |   - attr(*, "where")=List of 1
[10:52:43.550] |  :  .  |    ..$ ii:<environment: R_EmptyEnv> 
[10:52:43.550] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:43.550] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:52:43.550] |  :  .  |   - attr(*, "total_size")= num NA
[10:52:43.550] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:52:43.554] |  :  .  |  - copied ‘ii’ to environment
[10:52:43.554] |  :  .  |  assign_globals() ... done
[10:52:43.557] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.557] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.557] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.557] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:43.557] |  :  .  |  :  .  |  :  New stack:
[10:52:43.557] |  :  .  |  :  .  |  :  List of 1
[10:52:43.557] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.557] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.557] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.557] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.557] |  :  .  |  :  .  |  :      ...)  
[10:52:43.557] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.557] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.557] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:43.557] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.557] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.557] |  :  .  |  :  .  |  :      ...)  
[10:52:43.557] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.557] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.560] |  :  .  |  :  .  |  :  Old stack:
[10:52:43.560] |  :  .  |  :  .  |  :  List of 1
[10:52:43.560] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.560] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.560] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.560] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.560] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.560] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.560] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.563] |  :  .  |  :  .  |  :  Not identical
[10:52:43.563] |  :  .  |  :  readImmediateCondition() ...
[10:52:43.563] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:52:43.563] |  :  .  |  :    - path: ‘/tmp/Rtmp5jFl1h/.future/immediateConditions’
[10:52:43.563] |  :  .  |  :   - Number of RDS files: 0
[10:52:43.563] |  :  .  |  :  readImmediateCondition() ... DONE
[10:52:43.565] |  :  .  |  :  Poll #2 (0.03 secs): usedCores() = 2, workers = 2
[10:52:43.563] |  :  .  |  :  .  |  :  .  List of 2
[10:52:43.563] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.563] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.563] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.563] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.563] |  :  .  |  :  .  |  :  .      ...)  
[10:52:43.563] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.563] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.563] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:43.563] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.563] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.563] |  :  .  |  :  .  |  :  .      ...)  
[10:52:43.563] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.563] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.563] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.563] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.563] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.563] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.563] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.570] |  :  .  |  :  .  |  :  .  Formals differ
[10:52:43.570] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:52:43.571] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:52:43.571] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:43.571] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:52:43.571] |  :  .  |  :  .  |  List of future strategies:
[10:52:43.571] |  :  .  |  :  .  |  1. multicore:
[10:52:43.571] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:43.571] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:43.571] |  :  .  |  :  .  |     - call: plan(strategy)
[10:52:43.571] |  :  .  |  :  .  |  List of 1
[10:52:43.571] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.571] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.571] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.571] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.571] |  :  .  |  :  .  |      ...)  
[10:52:43.571] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.571] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.571] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:43.571] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.571] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.571] |  :  .  |  :  .  |      ...)  
[10:52:43.571] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.571] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.574] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:43.575] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:43.575] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.575] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:43.575] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.575] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:52:43.575] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.575] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.575] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.599] |  :  .  |  :  readImmediateCondition() ...
[10:52:43.599] |  :  .  |  :    - path: ‘/tmp/Rtmp5jFl1h/.future/immediateConditions’
[10:52:43.600] |  :  .  |  :   - Number of RDS files: 0
[10:52:43.600] |  :  .  |  :  readImmediateCondition() ... DONE
[10:52:43.601] |  :  .  |  :  result() for MulticoreFuture ...
[10:52:43.601] |  :  .  |  :  .  readImmediateCondition() ...
[10:52:43.601] |  :  .  |  :  .    - path: ‘/tmp/Rtmp5jFl1h/.future/immediateConditions’
[10:52:43.602] |  :  .  |  :  .   - Number of RDS files: 0
[10:52:43.602] |  :  .  |  :  .  readImmediateCondition() ... DONE
[10:52:43.602] |  :  .  |  :  .  result() for MulticoreFuture ...
[10:52:43.602] |  :  .  |  :  .  result() for MulticoreFuture ... done
[10:52:43.602] |  :  .  |  :  result() for MulticoreFuture ... done
[10:52:43.602] |  :  .  |  :  result() for MulticoreFuture ...
[10:52:43.602] |  :  .  |  :  result() for MulticoreFuture ... done
[10:52:43.603] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:43.605] |  :  .  |  MulticoreFuture started
[10:52:43.606] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:43.606] |  :  .  |  attachPackages() ...
[10:52:43.606] |  :  Launching futures ... done
[10:52:43.607] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:43.607] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:43.608] |  :  .  |  attachPackages() ... DONE
[10:52:43.608] |  Using MulticoreFutureBackend ... done
[10:52:43.608] |  :  .  |  attachPackages() ...
[10:52:43.608] run() for Future (‘MulticoreFuture’) ... done
[10:52:43.608] |  :  .  |  :  packages: [n=0] 
[10:52:43.609] |  :  .  |  attachPackages() ... DONE
[10:52:43.609] result() for MulticoreFuture ...
[10:52:43.609] result() for MulticoreFuture ... done
[10:52:43.609] result() for MulticoreFuture ...
[10:52:43.610] result() for MulticoreFuture ... done
[10:52:43.610] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.610] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:43.610] result() for MulticoreFuture ...
[10:52:43.611] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.611] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.612] |  readImmediateCondition() ...
[10:52:43.612] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.612] |    - path: ‘/tmp/Rtmp5jFl1h/.future/immediateConditions’
[10:52:43.612] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:43.612] |   - Number of RDS files: 0
[10:52:43.613] |  :  .  |  :  .  |  New stack:
[10:52:43.613] |  readImmediateCondition() ... DONE
[10:52:43.613] |  result() for MulticoreFuture ...
[10:52:43.613] |  result() for MulticoreFuture ... done
[10:52:43.614] |  signalConditions() ...
[10:52:43.614] |  :  include = ‘immediateCondition’
[10:52:43.614] |  :  exclude = 
[10:52:43.615] |  :  resignal = FALSE
[10:52:43.615] |  :  Number of conditions: 1
[10:52:43.615] |  signalConditions() ... done
[10:52:43.615] result() for MulticoreFuture ... done
[10:52:43.616] result() for MulticoreFuture ...
[10:52:43.616] result() for MulticoreFuture ... done
[10:52:43.616] signalConditions() ...
[10:52:43.616] |  include = ‘immediateCondition’
[10:52:43.616] |  exclude = 
[10:52:43.617] |  resignal = FALSE
[10:52:43.617] |  Number of conditions: 1
[10:52:43.617] signalConditions() ... done
[10:52:43.617] Future state: ‘finished’
[10:52:43.618] result() for MulticoreFuture ...
[10:52:43.618] result() for MulticoreFuture ... done
[10:52:43.618] signalConditions() ...
[10:52:43.618] |  include = ‘condition’
[10:52:43.618] |  exclude = ‘immediateCondition’
[10:52:43.619] |  resignal = TRUE
[10:52:43.613] |  :  .  |  :  .  |  List of 1
[10:52:43.613] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.613] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.613] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.613] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.613] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.613] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.613] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.619] |  Number of conditions: 1
[10:52:43.619] |  :  .  |  :  .  |  Old stack:
[10:52:43.619] |  Condition #1: ‘simpleError’, ‘error’, ‘condition’
[10:52:43.619] signalConditions() ... done
[10:52:43.620] result() for MulticoreFuture ...
[10:52:43.619] |  :  .  |  :  .  |  List of 1
[10:52:43.619] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.619] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.619] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.619] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.619] |  :  .  |  :  .  |      ...)  
[10:52:43.619] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.619] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.619] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:43.619] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.619] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.619] |  :  .  |  :  .  |      ...)  
[10:52:43.619] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.619] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.625] |  :  .  |  :  .  |  Not identical
[10:52:43.625] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:43.625] |  :  .  |  :  .  |  :  List of 2
[10:52:43.625] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.625] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.625] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.625] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.625] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.625] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.625] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.625] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.625] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.625] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.625] |  :  .  |  :  .  |  :      ...)  
[10:52:43.625] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.625] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.625] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:43.625] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.625] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.625] |  :  .  |  :  .  |  :      ...)  
[10:52:43.625] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.632] |  :  .  |  :  .  |  :  Formals differ
[10:52:43.632] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:43.632] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:52:43.632] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:43.633] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:52:43.633] |  :  .  |  :  .  List of future strategies:
[10:52:43.633] |  :  .  |  :  .  1. sequential:
[10:52:43.633] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:43.633] |  :  .  |  :  .     - tweaked: FALSE
[10:52:43.633] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.633] |  :  .  |  :  .  List of 1
[10:52:43.633] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.633] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.633] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.633] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.633] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.633] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.633] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.637] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:43.637] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:43.637] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.637] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:43.637] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.637] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:52:43.638] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:43.638] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:52:43.638] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.638] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.639] |  :  .  |  assign_globals() ...
[10:52:43.639] |  :  .  |  List of 1
[10:52:43.639] |  :  .  |   $ ii: int 3
[10:52:43.639] |  :  .  |   - attr(*, "where")=List of 1
[10:52:43.639] |  :  .  |    ..$ ii:<environment: R_EmptyEnv> 
[10:52:43.639] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:43.639] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:52:43.639] |  :  .  |   - attr(*, "total_size")= num NA
[10:52:43.639] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:52:43.644] |  :  .  |  - copied ‘ii’ to environment
[10:52:43.644] |  :  .  |  assign_globals() ... done
[10:52:43.647] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.647] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.647] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.647] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:43.647] |  :  .  |  :  .  |  :  New stack:
[10:52:43.647] |  :  .  |  :  .  |  :  List of 1
[10:52:43.647] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.647] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.647] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.647] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.647] |  :  .  |  :  .  |  :      ...)  
[10:52:43.647] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.647] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.647] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:43.647] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.647] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.647] |  :  .  |  :  .  |  :      ...)  
[10:52:43.647] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.647] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.650] |  :  .  |  :  .  |  :  Old stack:
[10:52:43.650] |  :  .  |  :  .  |  :  List of 1
[10:52:43.650] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.650] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.650] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.650] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.650] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.650] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.650] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.652] |  :  .  |  :  .  |  :  Not identical
[10:52:43.653] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:52:43.653] |  :  .  |  :  .  |  :  .  List of 2
[10:52:43.653] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.653] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.653] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.653] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.653] |  :  .  |  :  .  |  :  .      ...)  
[10:52:43.653] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.653] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.653] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:43.653] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.653] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.653] |  :  .  |  :  .  |  :  .      ...)  
[10:52:43.653] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.653] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.653] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.653] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.653] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.653] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.653] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.657] |  :  .  |  :  .  |  :  .  Formals differ
[10:52:43.657] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:52:43.657] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:52:43.658] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:43.658] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:52:43.658] |  :  .  |  :  .  |  List of future strategies:
[10:52:43.658] |  :  .  |  :  .  |  1. multicore:
[10:52:43.658] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:43.658] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:43.658] |  :  .  |  :  .  |     - call: plan(strategy)
[10:52:43.658] |  :  .  |  :  .  |  List of 1
[10:52:43.658] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.658] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.658] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.658] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.658] |  :  .  |  :  .  |      ...)  
[10:52:43.658] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.658] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.658] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:43.658] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.658] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.658] |  :  .  |  :  .  |      ...)  
[10:52:43.658] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.658] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.662] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:43.662] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:43.662] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.663] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:43.663] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.663] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:52:43.663] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.663] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.663] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.664] |  readImmediateCondition() ...
[10:52:43.664] |    - path: ‘/tmp/Rtmp5jFl1h/.future/immediateConditions’
[10:52:43.664] |   - Number of RDS files: 0
[10:52:43.664] |  readImmediateCondition() ... DONE
[10:52:43.665] |  result() for MulticoreFuture ...
[10:52:43.665] |  result() for MulticoreFuture ... done
[10:52:43.665] result() for MulticoreFuture ... done
[10:52:43.665] result() for MulticoreFuture ...
[10:52:43.665] result() for MulticoreFuture ... done
Warning in get(var, envir = x, inherits = FALSE) :
  restarting interrupted promise evaluation
[10:52:43.666] result() for MulticoreFuture ...
[10:52:43.666] result() for MulticoreFuture ... done
[10:52:43.666] result() for MulticoreFuture ...
[10:52:43.667] result() for MulticoreFuture ... done
[10:52:43.667] signalConditions() ...
[10:52:43.667] |  include = ‘immediateCondition’
[10:52:43.667] |  exclude = 
[10:52:43.667] |  resignal = FALSE
[10:52:43.667] |  Number of conditions: 1
[10:52:43.667] signalConditions() ... done
[10:52:43.668] Future state: ‘finished’
[10:52:43.668] result() for MulticoreFuture ...
[10:52:43.668] result() for MulticoreFuture ... done
[10:52:43.668] signalConditions() ...
[10:52:43.668] |  include = ‘condition’
[10:52:43.669] |  exclude = ‘immediateCondition’
[10:52:43.669] |  resignal = TRUE
[10:52:43.669] |  Number of conditions: 1
[10:52:43.669] |  Condition #1: ‘simpleError’, ‘error’, ‘condition’
[10:52:43.669] signalConditions() ... done
Warning in get(var, envir = x, inherits = FALSE) :
  restarting interrupted promise evaluation
[10:52:43.669] result() for MulticoreFuture ...
[10:52:43.670] result() for MulticoreFuture ... done
[10:52:43.670] result() for MulticoreFuture ...
[10:52:43.670] result() for MulticoreFuture ... done
[10:52:43.670] signalConditions() ...
[10:52:43.670] |  include = ‘immediateCondition’
[10:52:43.670] |  exclude = 
[10:52:43.670] |  resignal = FALSE
[10:52:43.670] |  Number of conditions: 1
[10:52:43.671] signalConditions() ... done
[10:52:43.671] Future state: ‘finished’
[10:52:43.671] result() for MulticoreFuture ...
[10:52:43.671] result() for MulticoreFuture ... done
[10:52:43.671] signalConditions() ...
[10:52:43.671] |  include = ‘condition’
[10:52:43.671] |  exclude = ‘immediateCondition’
[10:52:43.671] |  resignal = TRUE
[10:52:43.671] |  Number of conditions: 1
[10:52:43.672] |  Condition #1: ‘simpleError’, ‘error’, ‘condition’
[10:52:43.672] signalConditions() ... done
** Future evaluation with a poor-man's "progress bar"
[10:52:43.672] getGlobalsAndPackages() ...
[10:52:43.672] |  Searching for globals ...
[10:52:43.675] |  :  globals found: [4] ‘{’, ‘cat’, ‘for’, ‘:’
[10:52:43.675] |  Searching for globals ... DONE
[10:52:43.675] |  Resolving globals: FALSE
[10:52:43.676] |  Search for packages associated with the globals ...
[10:52:43.676] |  :  Packages associated with globals: [1] ‘base’
[10:52:43.676] |  :  Packages: [1] ‘base’
[10:52:43.676] |  Search for packages associated with the globals ... DONE
[10:52:43.677] |  Packages after dropping 'base': [0] 
[10:52:43.677] |  globals: [0] 
[10:52:43.677] |  packages: [0] 
[10:52:43.677] getGlobalsAndPackages() ... done
[10:52:43.677] run() for Future (‘Future’) ...
[10:52:43.677] |  state: ‘created’
[10:52:43.677] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.678] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.678] |  Using MulticoreFutureBackend ...
[10:52:43.678] |  :  Launching futures ...
[10:52:43.678] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:43.678] |  :  .  |  getFutureData() ...
[10:52:43.678] |  :  .  |  :  getFutureCore() ...
[10:52:43.678] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:43.678] |  :  .  |  :  getFutureCore() ... done
[10:52:43.679] |  :  .  |  :  getFutureCapture() ...
[10:52:43.679] |  :  .  |  :  getFutureCapture() ... done
[10:52:43.679] |  :  .  |  :  getFutureContext() ...
[10:52:43.679] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.679] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:43.679] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.679] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:43.679] |  :  .  |  :  getFutureContext() ... done
[10:52:43.680] |  :  .  |  getFutureData() ... done
[10:52:43.680] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:43.680] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:43.682] |  :  .  |  MulticoreFuture started
[10:52:43.682] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:43.683] |  :  .  |  attachPackages() ...
[10:52:43.682] |  :  Launching futures ... done
[10:52:43.685] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:43.685] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:43.686] |  :  .  |  attachPackages() ... DONE
[10:52:43.686] |  Using MulticoreFutureBackend ... done
[10:52:43.686] |  :  .  |  attachPackages() ...
[10:52:43.686] run() for Future (‘MulticoreFuture’) ... done
[10:52:43.686] |  :  .  |  :  packages: [n=0] 
** Collecting results
v1 = 1
v2 = 2
Warning in sprintf(...) : restarting interrupted promise evaluation
[10:52:43.687] |  :  .  |  attachPackages() ... DONE
[10:52:43.687] result() for MulticoreFuture ...
[10:52:43.688] result() for MulticoreFuture ... done
[10:52:43.688] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.688] result() for MulticoreFuture ...
[10:52:43.688] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:43.688] result() for MulticoreFuture ... done
[10:52:43.689] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.689] signalConditions() ...
[10:52:43.689] |  include = ‘immediateCondition’
[10:52:43.689] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.689] |  exclude = 
[10:52:43.690] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.690] |  resignal = FALSE
[10:52:43.690] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:43.690] |  Number of conditions: 1
[10:52:43.690] |  :  .  |  :  .  |  New stack:
[10:52:43.690] signalConditions() ... done
[10:52:43.691] Future state: ‘finished’
[10:52:43.691] result() for MulticoreFuture ...
[10:52:43.691] result() for MulticoreFuture ... done
[10:52:43.691] signalConditions() ...
[10:52:43.692] |  include = ‘condition’
[10:52:43.692] |  exclude = ‘immediateCondition’
[10:52:43.692] |  resignal = TRUE
[10:52:43.692] |  Number of conditions: 1
[10:52:43.692] |  Condition #1: ‘simpleError’, ‘error’, ‘condition’
[10:52:43.693] signalConditions() ... done
v3: <simpleError> (as expect)
[10:52:43.693] result() for MulticoreFuture ...
[10:52:43.691] |  :  .  |  :  .  |  List of 1
[10:52:43.691] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.691] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.691] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.691] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.691] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.691] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.691] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.695] |  :  .  |  :  .  |  Old stack:
[10:52:43.695] |  :  .  |  :  .  |  List of 1
[10:52:43.695] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.695] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.695] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.695] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.695] |  :  .  |  :  .  |      ...)  
[10:52:43.695] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.695] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.695] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:43.695] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.695] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.695] |  :  .  |  :  .  |      ...)  
[10:52:43.695] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.695] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.700] |  :  .  |  :  .  |  Not identical
[10:52:43.700] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:43.700] |  :  .  |  :  .  |  :  List of 2
[10:52:43.700] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.700] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.700] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.700] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.700] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.700] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.700] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.700] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.700] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.700] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.700] |  :  .  |  :  .  |  :      ...)  
[10:52:43.700] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.700] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.700] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:43.700] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.700] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.700] |  :  .  |  :  .  |  :      ...)  
[10:52:43.700] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.706] |  :  .  |  :  .  |  :  Formals differ
[10:52:43.707] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:43.707] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:52:43.707] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:43.707] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:52:43.707] |  :  .  |  :  .  List of future strategies:
[10:52:43.707] |  :  .  |  :  .  1. sequential:
[10:52:43.707] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:43.707] |  :  .  |  :  .     - tweaked: FALSE
[10:52:43.707] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.708] |  :  .  |  :  .  List of 1
[10:52:43.708] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.708] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.708] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.708] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.708] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.708] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.708] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.711] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:43.711] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:43.711] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.711] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:43.711] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.712] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:52:43.712] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:43.712] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:52:43.712] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.712] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.715] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.715] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.715] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.715] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:43.717] |  :  .  |  :  .  |  :  New stack:
[10:52:43.717] |  :  .  |  :  .  |  :  List of 1
[10:52:43.717] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.717] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.717] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.717] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.717] |  :  .  |  :  .  |  :      ...)  
[10:52:43.717] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.717] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.717] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:43.717] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.717] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.717] |  :  .  |  :  .  |  :      ...)  
[10:52:43.717] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.717] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.720] |  :  .  |  :  .  |  :  Old stack:
[10:52:43.720] |  :  .  |  :  .  |  :  List of 1
[10:52:43.720] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.720] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.720] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.720] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.720] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.720] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.720] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.722] |  :  .  |  :  .  |  :  Not identical
[10:52:43.722] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:52:43.722] |  :  .  |  :  .  |  :  .  List of 2
[10:52:43.722] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.722] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.722] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.722] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.722] |  :  .  |  :  .  |  :  .      ...)  
[10:52:43.722] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.722] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.722] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:43.722] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.722] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.722] |  :  .  |  :  .  |  :  .      ...)  
[10:52:43.722] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.722] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.722] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.722] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.722] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.722] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.722] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.727] |  :  .  |  :  .  |  :  .  Formals differ
[10:52:43.727] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:52:43.727] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:52:43.727] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:43.727] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:52:43.727] |  :  .  |  :  .  |  List of future strategies:
[10:52:43.727] |  :  .  |  :  .  |  1. multicore:
[10:52:43.727] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:43.727] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:43.727] |  :  .  |  :  .  |     - call: plan(strategy)
[10:52:43.728] |  :  .  |  :  .  |  List of 1
[10:52:43.728] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.728] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.728] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.728] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.728] |  :  .  |  :  .  |      ...)  
[10:52:43.728] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.728] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.728] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:43.728] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.728] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.728] |  :  .  |  :  .  |      ...)  
[10:52:43.728] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.728] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.730] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:43.731] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:43.731] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.731] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:43.731] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.731] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:52:43.731] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.731] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.731] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.732] |  readImmediateCondition() ...
[10:52:43.732] |    - path: ‘/tmp/Rtmp5jFl1h/.future/immediateConditions’
[10:52:43.732] |   - Number of RDS files: 0
[10:52:43.733] |  readImmediateCondition() ... DONE
[10:52:43.733] |  result() for MulticoreFuture ...
[10:52:43.733] |  result() for MulticoreFuture ... done
[10:52:43.733] result() for MulticoreFuture ... done
[10:52:43.733] result() for MulticoreFuture ...
[10:52:43.733] result() for MulticoreFuture ... done
Processing: .......... [100%]
v4 = 4
** Left-to-right and right-to-left future assignments
[10:52:43.734] getGlobalsAndPackages() ...
[10:52:43.734] |  Searching for globals ...
[10:52:43.735] |  :  globals found: [0] 
[10:52:43.735] |  Searching for globals ... DONE
[10:52:43.735] |  globals: [0] <none>
[10:52:43.735] |  packages: [0] <none>
[10:52:43.735] getGlobalsAndPackages() ... done
[10:52:43.735] run() for Future (‘Future’) ...
[10:52:43.735] |  state: ‘created’
[10:52:43.736] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.736] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.736] |  Using MulticoreFutureBackend ...
[10:52:43.736] |  :  Launching futures ...
[10:52:43.736] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:43.736] |  :  .  |  getFutureData() ...
[10:52:43.736] |  :  .  |  :  getFutureCore() ...
[10:52:43.737] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:43.737] |  :  .  |  :  getFutureCore() ... done
[10:52:43.737] |  :  .  |  :  getFutureCapture() ...
[10:52:43.737] |  :  .  |  :  getFutureCapture() ... done
[10:52:43.737] |  :  .  |  :  getFutureContext() ...
[10:52:43.737] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.737] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:43.737] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.738] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:43.738] |  :  .  |  :  getFutureContext() ... done
[10:52:43.738] |  :  .  |  getFutureData() ... done
[10:52:43.738] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:43.738] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:43.740] |  :  .  |  MulticoreFuture started
[10:52:43.740] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:43.741] |  :  Launching futures ... done
[10:52:43.741] |  :  .  |  attachPackages() ...
[10:52:43.741] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:43.741] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:43.741] |  Using MulticoreFutureBackend ... done
[10:52:43.741] run() for Future (‘MulticoreFuture’) ... done
[10:52:43.741] |  :  .  |  attachPackages() ... DONE
[10:52:43.742] |  :  .  |  attachPackages() ...
[10:52:43.742] result() for MulticoreFuture ...
[10:52:43.742] |  :  .  |  :  packages: [n=0] 
[10:52:43.742] |  :  .  |  attachPackages() ... DONE
[10:52:43.743] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.743] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:43.743] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.744] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.744] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.745] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:43.745] |  :  .  |  :  .  |  New stack:
[10:52:43.745] |  :  .  |  :  .  |  List of 1
[10:52:43.745] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.745] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.745] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.745] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.745] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.745] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.745] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.749] |  :  .  |  :  .  |  Old stack:
[10:52:43.749] |  :  .  |  :  .  |  List of 1
[10:52:43.749] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.749] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.749] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.749] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.749] |  :  .  |  :  .  |      ...)  
[10:52:43.749] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.749] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.749] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:43.749] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.749] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.749] |  :  .  |  :  .  |      ...)  
[10:52:43.749] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.749] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.754] |  :  .  |  :  .  |  Not identical
[10:52:43.755] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:43.755] |  :  .  |  :  .  |  :  List of 2
[10:52:43.755] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.755] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.755] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.755] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.755] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.755] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.755] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.755] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.755] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.755] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.755] |  :  .  |  :  .  |  :      ...)  
[10:52:43.755] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.755] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.755] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:43.755] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.755] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.755] |  :  .  |  :  .  |  :      ...)  
[10:52:43.755] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.766] |  :  .  |  :  .  |  :  Formals differ
[10:52:43.766] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:43.766] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:52:43.766] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:43.766] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:52:43.767] |  :  .  |  :  .  List of future strategies:
[10:52:43.767] |  :  .  |  :  .  1. sequential:
[10:52:43.767] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:43.767] |  :  .  |  :  .     - tweaked: FALSE
[10:52:43.767] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.767] |  :  .  |  :  .  List of 1
[10:52:43.767] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.767] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.767] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.767] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.767] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.767] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.767] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.771] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:43.771] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:43.771] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.771] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:43.772] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.772] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:52:43.772] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:43.772] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:52:43.773] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.773] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.775] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.775] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.776] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.776] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:43.776] |  :  .  |  :  .  |  :  New stack:
[10:52:43.776] |  :  .  |  :  .  |  :  List of 1
[10:52:43.776] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.776] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.776] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.776] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.776] |  :  .  |  :  .  |  :      ...)  
[10:52:43.776] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.776] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.776] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:43.776] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.776] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.776] |  :  .  |  :  .  |  :      ...)  
[10:52:43.776] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.776] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.779] |  :  .  |  :  .  |  :  Old stack:
[10:52:43.779] |  :  .  |  :  .  |  :  List of 1
[10:52:43.779] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.779] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.779] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.779] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.779] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.779] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.779] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.781] |  :  .  |  :  .  |  :  Not identical
[10:52:43.782] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:52:43.782] |  :  .  |  :  .  |  :  .  List of 2
[10:52:43.782] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.782] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.782] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.782] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.782] |  :  .  |  :  .  |  :  .      ...)  
[10:52:43.782] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.782] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.782] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:43.782] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.782] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.782] |  :  .  |  :  .  |  :  .      ...)  
[10:52:43.782] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.782] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.782] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.782] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.782] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.782] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.782] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.786] |  :  .  |  :  .  |  :  .  Formals differ
[10:52:43.786] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:52:43.788] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:52:43.788] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:43.788] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:52:43.788] |  :  .  |  :  .  |  List of future strategies:
[10:52:43.788] |  :  .  |  :  .  |  1. multicore:
[10:52:43.788] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:43.788] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:43.788] |  :  .  |  :  .  |     - call: plan(strategy)
[10:52:43.789] |  :  .  |  :  .  |  List of 1
[10:52:43.789] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.789] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.789] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.789] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.789] |  :  .  |  :  .  |      ...)  
[10:52:43.789] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.789] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.789] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:43.789] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.789] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.789] |  :  .  |  :  .  |      ...)  
[10:52:43.789] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.789] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.792] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:43.792] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:43.792] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.792] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:43.792] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.793] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:52:43.793] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.793] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.793] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.793] |  readImmediateCondition() ...
[10:52:43.794] |    - path: ‘/tmp/Rtmp5jFl1h/.future/immediateConditions’
[10:52:43.794] |   - Number of RDS files: 0
[10:52:43.794] |  readImmediateCondition() ... DONE
[10:52:43.794] |  result() for MulticoreFuture ...
[10:52:43.795] |  result() for MulticoreFuture ... done
[10:52:43.795] result() for MulticoreFuture ... done
[10:52:43.795] result() for MulticoreFuture ...
[10:52:43.795] result() for MulticoreFuture ... done
c = 1
[10:52:43.796] getGlobalsAndPackages() ...
[10:52:43.796] |  Searching for globals ...
[10:52:43.796] |  :  globals found: [0] 
[10:52:43.797] |  Searching for globals ... DONE
[10:52:43.797] |  globals: [0] <none>
[10:52:43.797] |  packages: [0] <none>
[10:52:43.797] getGlobalsAndPackages() ... done
[10:52:43.797] run() for Future (‘Future’) ...
[10:52:43.797] |  state: ‘created’
[10:52:43.798] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.798] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.798] |  Using MulticoreFutureBackend ...
[10:52:43.798] |  :  Launching futures ...
[10:52:43.798] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:43.798] |  :  .  |  getFutureData() ...
[10:52:43.799] |  :  .  |  :  getFutureCore() ...
[10:52:43.799] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:43.799] |  :  .  |  :  getFutureCore() ... done
[10:52:43.799] |  :  .  |  :  getFutureCapture() ...
[10:52:43.799] |  :  .  |  :  getFutureCapture() ... done
[10:52:43.799] |  :  .  |  :  getFutureContext() ...
[10:52:43.799] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.799] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:43.800] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.800] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:43.800] |  :  .  |  :  getFutureContext() ... done
[10:52:43.800] |  :  .  |  getFutureData() ... done
[10:52:43.800] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:43.801] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:43.802] |  :  .  |  MulticoreFuture started
[10:52:43.803] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:43.803] |  :  Launching futures ... done
[10:52:43.803] |  :  .  |  attachPackages() ...
[10:52:43.803] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:43.803] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:43.803] |  Using MulticoreFutureBackend ... done
[10:52:43.803] run() for Future (‘MulticoreFuture’) ... done
[10:52:43.804] |  :  .  |  attachPackages() ... DONE
[10:52:43.804] |  :  .  |  attachPackages() ...
[10:52:43.804] result() for MulticoreFuture ...
[10:52:43.804] |  :  .  |  :  packages: [n=0] 
[10:52:43.804] |  :  .  |  attachPackages() ... DONE
[10:52:43.805] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.805] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:43.806] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.806] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.807] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.807] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:43.807] |  :  .  |  :  .  |  New stack:
[10:52:43.807] |  :  .  |  :  .  |  List of 1
[10:52:43.807] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.807] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.807] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.807] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.807] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.807] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.807] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.811] |  :  .  |  :  .  |  Old stack:
[10:52:43.811] |  :  .  |  :  .  |  List of 1
[10:52:43.811] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.811] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.811] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.811] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.811] |  :  .  |  :  .  |      ...)  
[10:52:43.811] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.811] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.811] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:43.811] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.811] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.811] |  :  .  |  :  .  |      ...)  
[10:52:43.811] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.811] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.821] |  :  .  |  :  .  |  Not identical
[10:52:43.821] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:43.821] |  :  .  |  :  .  |  :  List of 2
[10:52:43.821] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.821] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.821] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.821] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.821] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.821] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.821] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.821] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.821] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.821] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.821] |  :  .  |  :  .  |  :      ...)  
[10:52:43.821] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.821] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.821] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:43.821] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.821] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.821] |  :  .  |  :  .  |  :      ...)  
[10:52:43.821] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.829] |  :  .  |  :  .  |  :  Formals differ
[10:52:43.829] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:43.829] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:52:43.829] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:43.830] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:52:43.830] |  :  .  |  :  .  List of future strategies:
[10:52:43.830] |  :  .  |  :  .  1. sequential:
[10:52:43.830] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:43.830] |  :  .  |  :  .     - tweaked: FALSE
[10:52:43.830] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.830] |  :  .  |  :  .  List of 1
[10:52:43.830] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.830] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.830] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.830] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.830] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.830] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.830] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.833] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:43.833] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:43.834] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.834] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:43.834] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.834] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:52:43.834] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:43.835] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:52:43.835] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.835] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.837] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.838] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.838] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.838] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:43.838] |  :  .  |  :  .  |  :  New stack:
[10:52:43.838] |  :  .  |  :  .  |  :  List of 1
[10:52:43.838] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.838] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.838] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.838] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.838] |  :  .  |  :  .  |  :      ...)  
[10:52:43.838] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.838] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.838] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:43.838] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.838] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.838] |  :  .  |  :  .  |  :      ...)  
[10:52:43.838] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.838] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.841] |  :  .  |  :  .  |  :  Old stack:
[10:52:43.841] |  :  .  |  :  .  |  :  List of 1
[10:52:43.841] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.841] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.841] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.841] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.841] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.841] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.841] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.845] |  :  .  |  :  .  |  :  Not identical
[10:52:43.845] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:52:43.845] |  :  .  |  :  .  |  :  .  List of 2
[10:52:43.845] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.845] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.845] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.845] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.845] |  :  .  |  :  .  |  :  .      ...)  
[10:52:43.845] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.845] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.845] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:43.845] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.845] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.845] |  :  .  |  :  .  |  :  .      ...)  
[10:52:43.845] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.845] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.845] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.845] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.845] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.845] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.845] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.850] |  :  .  |  :  .  |  :  .  Formals differ
[10:52:43.850] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:52:43.850] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:52:43.850] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:43.850] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:52:43.850] |  :  .  |  :  .  |  List of future strategies:
[10:52:43.850] |  :  .  |  :  .  |  1. multicore:
[10:52:43.850] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:43.850] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:43.850] |  :  .  |  :  .  |     - call: plan(strategy)
[10:52:43.850] |  :  .  |  :  .  |  List of 1
[10:52:43.850] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.850] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.850] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.850] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.850] |  :  .  |  :  .  |      ...)  
[10:52:43.850] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.850] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.850] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:43.850] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.850] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.850] |  :  .  |  :  .  |      ...)  
[10:52:43.850] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.850] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.853] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:43.853] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:43.854] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.854] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:43.854] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.854] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:52:43.854] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.854] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.854] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.855] |  readImmediateCondition() ...
[10:52:43.855] |    - path: ‘/tmp/Rtmp5jFl1h/.future/immediateConditions’
[10:52:43.855] |   - Number of RDS files: 0
[10:52:43.855] |  readImmediateCondition() ... DONE
[10:52:43.856] |  result() for MulticoreFuture ...
[10:52:43.856] |  result() for MulticoreFuture ... done
[10:52:43.856] result() for MulticoreFuture ... done
[10:52:43.856] result() for MulticoreFuture ...
[10:52:43.856] result() for MulticoreFuture ... done
d = 1
** Nested future assignments
[10:52:43.857] getGlobalsAndPackages() ...
[10:52:43.857] |  Searching for globals ...
[10:52:43.865] |  :  globals found: [5] ‘{’, ‘<-’, ‘%<-%’, ‘%->%’, ‘+’
[10:52:43.865] |  Searching for globals ... DONE
[10:52:43.866] |  Resolving globals: FALSE
[10:52:43.866] |  Search for packages associated with the globals ...
[10:52:43.866] |  :  Packages associated with globals: [2] ‘base’, ‘future’
[10:52:43.867] |  :  Packages: [2] ‘base’, ‘future’
[10:52:43.867] |  Search for packages associated with the globals ... DONE
[10:52:43.867] |  Packages after dropping 'base': [1] ‘future’
[10:52:43.867] |  Packages after dropping non-attached packages: [1] ‘future’
[10:52:43.867] |  globals: [0] 
[10:52:43.867] |  packages: [1] ‘future’
[10:52:43.868] getGlobalsAndPackages() ... done
[10:52:43.868] run() for Future (‘Future’) ...
[10:52:43.868] |  state: ‘created’
[10:52:43.868] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.868] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.869] |  Using MulticoreFutureBackend ...
[10:52:43.869] |  :  Launching futures ...
[10:52:43.869] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:43.869] |  :  .  |  getFutureData() ...
[10:52:43.869] |  :  .  |  :  getFutureCore() ...
[10:52:43.869] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘future’
[10:52:43.869] |  :  .  |  :  getFutureCore() ... done
[10:52:43.870] |  :  .  |  :  getFutureCapture() ...
[10:52:43.870] |  :  .  |  :  getFutureCapture() ... done
[10:52:43.870] |  :  .  |  :  getFutureContext() ...
[10:52:43.870] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.870] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:43.870] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.870] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:43.870] |  :  .  |  :  getFutureContext() ... done
[10:52:43.871] |  :  .  |  getFutureData() ... done
[10:52:43.871] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:43.871] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:43.873] |  :  .  |  MulticoreFuture started
[10:52:43.873] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:43.873] |  :  Launching futures ... done
[10:52:43.874] |  :  .  |  attachPackages() ...
[10:52:43.874] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:43.874] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:43.874] |  Using MulticoreFutureBackend ... done
[10:52:43.874] run() for Future (‘MulticoreFuture’) ... done
[10:52:43.874] |  :  .  |  attachPackages() ... DONE
[10:52:43.874] |  :  .  |  attachPackages() ...
[10:52:43.875] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:43.875] result() for MulticoreFuture ...
[10:52:43.875] |  :  .  |  attachPackages() ... DONE
[10:52:43.876] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.876] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:43.876] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.877] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.877] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.877] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:43.878] |  :  .  |  :  .  |  New stack:
[10:52:43.878] |  :  .  |  :  .  |  List of 1
[10:52:43.878] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.878] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.878] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.878] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.878] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.878] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.878] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.882] |  :  .  |  :  .  |  Old stack:
[10:52:43.882] |  :  .  |  :  .  |  List of 1
[10:52:43.882] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.882] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.882] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.882] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.882] |  :  .  |  :  .  |      ...)  
[10:52:43.882] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.882] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.882] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:43.882] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.882] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.882] |  :  .  |  :  .  |      ...)  
[10:52:43.882] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.882] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.887] |  :  .  |  :  .  |  Not identical
[10:52:43.887] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:43.887] |  :  .  |  :  .  |  :  List of 2
[10:52:43.887] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.887] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.887] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.887] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.887] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.887] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.887] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.887] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.887] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.887] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.887] |  :  .  |  :  .  |  :      ...)  
[10:52:43.887] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.887] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.887] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:43.887] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.887] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.887] |  :  .  |  :  .  |  :      ...)  
[10:52:43.887] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.895] |  :  .  |  :  .  |  :  Formals differ
[10:52:43.895] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:43.895] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:52:43.895] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:43.895] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:52:43.895] |  :  .  |  :  .  List of future strategies:
[10:52:43.895] |  :  .  |  :  .  1. sequential:
[10:52:43.895] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:43.895] |  :  .  |  :  .     - tweaked: FALSE
[10:52:43.895] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.899] |  :  .  |  :  .  List of 1
[10:52:43.899] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.899] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.899] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.899] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.899] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.899] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.899] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.903] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:43.903] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:43.903] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.904] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:43.904] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.904] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:52:43.905] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:43.905] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:52:43.905] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.905] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.969] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.969] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.969] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:43.969] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:43.969] |  :  .  |  :  .  |  :  New stack:
[10:52:43.969] |  :  .  |  :  .  |  :  List of 1
[10:52:43.969] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.969] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.969] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.969] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.969] |  :  .  |  :  .  |  :      ...)  
[10:52:43.969] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.969] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.969] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:43.969] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.969] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.969] |  :  .  |  :  .  |  :      ...)  
[10:52:43.969] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.969] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.972] |  :  .  |  :  .  |  :  Old stack:
[10:52:43.972] |  :  .  |  :  .  |  :  List of 1
[10:52:43.972] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.972] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.972] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.972] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.972] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.972] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.972] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f35a6a0> 
[10:52:43.972] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.972] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.972] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.975] |  :  .  |  :  .  |  :  Not identical
[10:52:43.975] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:52:43.975] |  :  .  |  :  .  |  :  .  List of 2
[10:52:43.975] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.975] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.975] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.975] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.975] |  :  .  |  :  .  |  :  .      ...)  
[10:52:43.975] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.975] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.975] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:43.975] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.975] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.975] |  :  .  |  :  .  |  :  .      ...)  
[10:52:43.975] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.975] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.975] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.975] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.975] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.975] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.975] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.975] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f35a6a0> 
[10:52:43.975] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.975] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.982] |  :  .  |  :  .  |  :  .  Formals differ
[10:52:43.982] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:52:43.982] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:52:43.982] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:43.982] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:52:43.982] |  :  .  |  :  .  |  List of future strategies:
[10:52:43.982] |  :  .  |  :  .  |  1. multicore:
[10:52:43.982] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:43.982] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:43.982] |  :  .  |  :  .  |     - call: plan(strategy)
[10:52:43.983] |  :  .  |  :  .  |  List of 1
[10:52:43.983] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:43.983] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:43.983] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:43.983] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.983] |  :  .  |  :  .  |      ...)  
[10:52:43.983] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.983] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.983] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:43.983] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:43.983] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:43.983] |  :  .  |  :  .  |      ...)  
[10:52:43.983] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:43.983] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:43.985] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:43.986] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:43.986] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.986] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:43.986] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.986] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:52:43.986] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:43.986] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.986] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:43.988] |  readImmediateCondition() ...
[10:52:43.988] |    - path: ‘/tmp/Rtmp5jFl1h/.future/immediateConditions’
[10:52:43.988] |   - Number of RDS files: 0
[10:52:43.988] |  readImmediateCondition() ... DONE
[10:52:43.989] |  result() for MulticoreFuture ...
[10:52:43.989] |  result() for MulticoreFuture ... done
[10:52:43.989] |  signalConditions() ...
[10:52:43.989] |  :  include = ‘immediateCondition’
[10:52:43.989] |  :  exclude = 
[10:52:43.989] |  :  resignal = FALSE
[10:52:43.990] |  :  Number of conditions: 150
[10:52:43.990] |  signalConditions() ... done
[10:52:43.990] result() for MulticoreFuture ... done
[10:52:43.990] result() for MulticoreFuture ...
[10:52:43.990] result() for MulticoreFuture ... done
[10:52:43.990] signalConditions() ...
[10:52:43.991] |  include = ‘immediateCondition’
[10:52:43.991] |  exclude = 
[10:52:43.991] |  resignal = FALSE
[10:52:43.991] |  Number of conditions: 150
[10:52:43.991] signalConditions() ... done
[10:52:43.991] Future state: ‘finished’
[10:52:43.992] result() for MulticoreFuture ...
[10:52:43.992] result() for MulticoreFuture ... done
[10:52:43.992] signalConditions() ...
[10:52:43.992] |  include = ‘condition’
[10:52:43.992] |  exclude = ‘immediateCondition’
[10:52:43.992] |  resignal = TRUE
[10:52:43.992] |  Number of conditions: 150
[10:52:43.992] |  Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.906] |  :  .  |  getGlobalsAndPackages() ...
[10:52:43.993] |  Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.906] |  :  .  |  :  Searching for globals ...
[10:52:43.993] |  Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.907] |  :  .  |  :  .  globals found: [0] 
[10:52:43.993] |  Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.907] |  :  .  |  :  Searching for globals ... DONE
[10:52:43.993] |  Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.907] |  :  .  |  :  globals: [0] <none>
[10:52:43.993] |  Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.907] |  :  .  |  :  packages: [0] <none>
[10:52:43.993] |  Condition #7: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.907] |  :  .  |  getGlobalsAndPackages() ... done
[10:52:43.994] |  Condition #8: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.908] |  :  .  |  run() for Future (‘Future’) ...
[10:52:43.994] |  Condition #9: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.908] |  :  .  |  :  state: ‘created’
[10:52:43.994] |  Condition #10: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.908] |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.994] |  Condition #11: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.909] |  :  .  |  :  .  makeFutureBackend(<sequential>) ...
[10:52:43.994] |  Condition #12: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.909] |  :  .  |  :  .  |  Backend function: <‘NULL’>
[10:52:43.995] |  Condition #13: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.909] |  :  .  |  :  .  |  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:43.995] |  Condition #14: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.909] |  :  .  |  :  .  makeFutureBackend(<sequential>) ... done
[10:52:43.995] |  Condition #15: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.909] |  :  .  |  :  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.995] |  Condition #16: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.909] |  :  .  |  :  Using SequentialFutureBackend ...
[10:52:43.995] |  Condition #17: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.909] |  :  .  |  :  .  Launching futures ...
[10:52:43.995] |  Condition #18: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.910] |  :  .  |  :  .  |  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:43.996] |  Condition #19: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.910] |  :  .  |  :  .  |  :  getFutureData() ...
[10:52:43.996] |  Condition #20: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.910] |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:52:43.996] |  Condition #21: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.910] |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:52:43.996] |  Condition #22: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.910] |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:52:43.996] |  Condition #23: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.910] |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:52:43.996] |  Condition #24: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.910] |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:52:43.997] |  Condition #25: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.910] |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:52:43.997] |  Condition #26: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.911] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.997] |  Condition #27: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.911] |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:52:43.997] |  Condition #28: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.911] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.997] |  Condition #29: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.911] |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:52:43.997] |  Condition #30: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.911] |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:52:43.998] |  Condition #31: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.911] |  :  .  |  :  .  |  :  getFutureData() ... done
[10:52:43.998] |  Condition #32: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.911] |  :  .  |  :  .  |  :  attachPackages() ...
[10:52:43.998] |  Condition #33: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.912] |  :  .  |  :  .  |  :  .  packages: [n=1] ‘future’
[10:52:43.998] |  Condition #34: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.912] |  :  .  |  :  .  |  :  attachPackages() ... DONE
[10:52:43.998] |  Condition #35: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.912] |  :  .  |  :  .  |  :  attachPackages() ...
[10:52:43.998] |  Condition #36: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.912] |  :  .  |  :  .  |  :  .  packages: [n=0] 
[10:52:43.999] |  Condition #37: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.912] |  :  .  |  :  .  |  :  attachPackages() ... DONE
[10:52:43.999] |  Condition #38: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.912] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:43.999] |  Condition #39: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.913] |  :  .  |  :  .  |  :  .  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:43.999] |  Condition #40: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.913] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:43.999] |  Condition #41: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.913] |  :  .  |  :  .  |  :  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:43.999] |  Condition #42: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.913] |  :  .  |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:44.000] |  Condition #43: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.913] |  :  .  |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:44.000] |  Condition #44: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.914] |  :  .  |  :  .  |  :  .  |  :  New stack:
[10:52:44.000] |  Condition #45: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.914] |  :  .  |  :  .  |  :  .  |  :  List of 1
[10:52:43.914] |  :  .  |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.914] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.914] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.914] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.914] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.914] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.914] |  :  .  |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:44.000] |  Condition #46: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.916] |  :  .  |  :  .  |  :  .  |  :  Old stack:
[10:52:44.000] |  Condition #47: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.916] |  :  .  |  :  .  |  :  .  |  :  List of 1
[10:52:43.916] |  :  .  |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.916] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.916] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.916] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.916] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.916] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.916] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f35a6a0> 
[10:52:43.916] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.916] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.916] |  :  .  |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:44.000] |  Condition #48: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.919] |  :  .  |  :  .  |  :  .  |  :  Not identical
[10:52:44.001] |  Condition #49: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.919] |  :  .  |  :  .  |  :  .  |  :  all.equal() for future ...
[10:52:44.001] |  Condition #50: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.919] |  :  .  |  :  .  |  :  .  |  :  .  List of 2
[10:52:43.919] |  :  .  |  :  .  |  :  .  |  :  .   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.919] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.919] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.919] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.919] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.919] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.919] |  :  .  |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.919] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.919] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.919] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.919] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.919] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.919] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f35a6a0> 
[10:52:43.919] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.919] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:44.001] |  Condition #51: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.926] |  :  .  |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:52:44.001] |  Condition #52: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.926] |  :  .  |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:44.001] |  Condition #53: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.926] |  :  .  |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:44.001] |  Condition #54: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.926] |  :  .  |  :  .  |  :  .  |  List of future strategies:
[10:52:43.926] |  :  .  |  :  .  |  :  .  |  1. sequential:
[10:52:43.926] |  :  .  |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:43.926] |  :  .  |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:43.926] |  :  .  |  :  .  |  :  .  |     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:44.002] |  Condition #55: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.926] |  :  .  |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:44.002] |  Condition #56: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.927] |  :  .  |  :  .  |  :  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:44.002] |  Condition #57: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.928] |  :  .  |  :  .  |  :  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:44.002] |  Condition #58: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.929] |  :  .  |  :  .  |  :  .  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:44.002] |  Condition #59: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.929] |  :  .  |  :  .  |  :  .  |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:44.002] |  Condition #60: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.929] |  :  .  |  :  .  |  :  .  |  :  all.equal() for FutureStrategyList ...
[10:52:44.004] |  Condition #61: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.929] |  :  .  |  :  .  |  :  .  |  :  .  New stack:
[10:52:44.005] |  Condition #62: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.929] |  :  .  |  :  .  |  :  .  |  :  .  List of 1
[10:52:43.929] |  :  .  |  :  .  |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.929] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.929] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.929] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.929] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.929] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.929] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f35a6a0> 
[10:52:43.929] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.929] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.929] |  :  .  |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:44.005] |  Condition #63: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.932] |  :  .  |  :  .  |  :  .  |  :  .  Old stack:
[10:52:44.005] |  Condition #64: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.932] |  :  .  |  :  .  |  :  .  |  :  .  List of 1
[10:52:43.932] |  :  .  |  :  .  |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.932] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.932] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.932] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.932] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.932] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.932] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f35a6a0> 
[10:52:43.932] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.932] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.932] |  :  .  |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:44.005] |  Condition #65: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.935] |  :  .  |  :  .  |  :  .  |  :  .  Identical
[10:52:44.006] |  Condition #66: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.935] |  :  .  |  :  .  |  :  .  |  :  all.equal() for FutureStrategyList ... done
[10:52:44.006] |  Condition #67: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.935] |  :  .  |  :  .  |  :  .  |  :  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:44.006] |  Condition #68: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.935] |  :  .  |  :  .  |  :  .  |  :  List of future strategies:
[10:52:43.935] |  :  .  |  :  .  |  :  .  |  :  1. sequential:
[10:52:43.935] |  :  .  |  :  .  |  :  .  |  :     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:43.935] |  :  .  |  :  .  |  :  .  |  :     - tweaked: FALSE
[10:52:43.935] |  :  .  |  :  .  |  :  .  |  :     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:44.006] |  Condition #69: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.936] |  :  .  |  :  .  |  :  .  |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:44.007] |  Condition #70: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.936] |  :  .  |  :  .  |  :  .  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:44.007] |  Condition #71: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.936] |  :  .  |  :  .  |  :  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:44.007] |  Condition #72: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.936] |  :  .  |  :  .  |  :  SequentialFuture started (and completed)
[10:52:44.007] |  Condition #73: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.936] |  :  .  |  :  .  |  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:44.007] |  Condition #74: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.937] |  :  .  |  :  .  Launching futures ... done
[10:52:44.007] |  Condition #75: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.937] |  :  .  |  :  .  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:44.008] |  Condition #76: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.937] |  :  .  |  :  Using SequentialFutureBackend ... done
[10:52:44.008] |  Condition #77: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.937] |  :  .  |  run() for Future (‘SequentialFuture’) ... done
[10:52:44.008] |  Condition #78: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.937] |  :  .  |  getGlobalsAndPackages() ...
[10:52:44.008] |  Condition #79: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.937] |  :  .  |  :  Searching for globals ...
[10:52:44.008] |  Condition #80: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.938] |  :  .  |  :  .  globals found: [0] 
[10:52:44.009] |  Condition #81: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.938] |  :  .  |  :  Searching for globals ... DONE
[10:52:44.009] |  Condition #82: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.938] |  :  .  |  :  globals: [0] <none>
[10:52:44.009] |  Condition #83: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.938] |  :  .  |  :  packages: [0] <none>
[10:52:44.009] |  Condition #84: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.938] |  :  .  |  getGlobalsAndPackages() ... done
[10:52:44.009] |  Condition #85: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.938] |  :  .  |  run() for Future (‘Future’) ...
[10:52:44.009] |  Condition #86: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.939] |  :  .  |  :  state: ‘created’
[10:52:44.010] |  Condition #87: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.939] |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:44.010] |  Condition #88: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.939] |  :  .  |  :  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:44.010] |  Condition #89: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.939] |  :  .  |  :  Using SequentialFutureBackend ...
[10:52:44.010] |  Condition #90: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.939] |  :  .  |  :  .  Launching futures ...
[10:52:44.010] |  Condition #91: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.939] |  :  .  |  :  .  |  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:44.010] |  Condition #92: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.939] |  :  .  |  :  .  |  :  getFutureData() ...
[10:52:44.010] |  Condition #93: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.940] |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:52:44.011] |  Condition #94: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.940] |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:52:44.011] |  Condition #95: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.940] |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:52:44.011] |  Condition #96: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.940] |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:52:44.011] |  Condition #97: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.940] |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:52:44.011] |  Condition #98: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.940] |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:52:44.011] |  Condition #99: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.940] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:44.011] |  Condition #100: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.940] |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:52:44.012] |  Condition #101: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.940] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:44.012] |  Condition #102: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.941] |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:52:44.012] |  Condition #103: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.941] |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:52:44.012] |  Condition #104: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.941] |  :  .  |  :  .  |  :  getFutureData() ... done
[10:52:44.012] |  Condition #105: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.941] |  :  .  |  :  .  |  :  attachPackages() ...
[10:52:44.012] |  Condition #106: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.941] |  :  .  |  :  .  |  :  .  packages: [n=1] ‘future’
[10:52:44.012] |  Condition #107: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.943] |  :  .  |  :  .  |  :  attachPackages() ... DONE
[10:52:44.013] |  Condition #108: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.943] |  :  .  |  :  .  |  :  attachPackages() ...
[10:52:44.013] |  Condition #109: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.943] |  :  .  |  :  .  |  :  .  packages: [n=0] 
[10:52:44.013] |  Condition #110: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.943] |  :  .  |  :  .  |  :  attachPackages() ... DONE
[10:52:44.013] |  Condition #111: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.944] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:44.013] |  Condition #112: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.944] |  :  .  |  :  .  |  :  .  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:44.013] |  Condition #113: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.944] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:44.013] |  Condition #114: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.944] |  :  .  |  :  .  |  :  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:44.013] |  Condition #115: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.944] |  :  .  |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:44.014] |  Condition #116: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.945] |  :  .  |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:44.014] |  Condition #117: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.945] |  :  .  |  :  .  |  :  .  |  :  New stack:
[10:52:44.014] |  Condition #118: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.945] |  :  .  |  :  .  |  :  .  |  :  List of 1
[10:52:43.945] |  :  .  |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.945] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.945] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.945] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.945] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.945] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.945] |  :  .  |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:44.014] |  Condition #119: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.947] |  :  .  |  :  .  |  :  .  |  :  Old stack:
[10:52:44.014] |  Condition #120: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.947] |  :  .  |  :  .  |  :  .  |  :  List of 1
[10:52:43.947] |  :  .  |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.947] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.947] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.947] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.947] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.947] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.947] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f35a6a0> 
[10:52:43.947] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.947] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.947] |  :  .  |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:44.014] |  Condition #121: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.950] |  :  .  |  :  .  |  :  .  |  :  Not identical
[10:52:44.014] |  Condition #122: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.950] |  :  .  |  :  .  |  :  .  |  :  all.equal() for future ...
[10:52:44.014] |  Condition #123: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.950] |  :  .  |  :  .  |  :  .  |  :  .  List of 2
[10:52:43.950] |  :  .  |  :  .  |  :  .  |  :  .   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.950] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.950] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.950] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.950] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.950] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.950] |  :  .  |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.950] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.950] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.950] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.950] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.950] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.950] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f35a6a0> 
[10:52:43.950] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.950] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:44.015] |  Condition #124: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.955] |  :  .  |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:52:44.015] |  Condition #125: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.955] |  :  .  |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:44.015] |  Condition #126: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.955] |  :  .  |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:44.015] |  Condition #127: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.955] |  :  .  |  :  .  |  :  .  |  List of future strategies:
[10:52:43.955] |  :  .  |  :  .  |  :  .  |  1. sequential:
[10:52:43.955] |  :  .  |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:43.955] |  :  .  |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:43.955] |  :  .  |  :  .  |  :  .  |     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:44.015] |  Condition #128: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.956] |  :  .  |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:44.015] |  Condition #129: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.956] |  :  .  |  :  .  |  :  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:44.015] |  Condition #130: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.957] |  :  .  |  :  .  |  :  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:44.015] |  Condition #131: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.957] |  :  .  |  :  .  |  :  .  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:44.016] |  Condition #132: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.958] |  :  .  |  :  .  |  :  .  |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:44.016] |  Condition #133: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.958] |  :  .  |  :  .  |  :  .  |  :  all.equal() for FutureStrategyList ...
[10:52:44.016] |  Condition #134: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.958] |  :  .  |  :  .  |  :  .  |  :  .  New stack:
[10:52:44.016] |  Condition #135: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.958] |  :  .  |  :  .  |  :  .  |  :  .  List of 1
[10:52:43.958] |  :  .  |  :  .  |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.958] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.958] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.958] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.958] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.958] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.958] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f35a6a0> 
[10:52:43.958] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.958] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.958] |  :  .  |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:44.016] |  Condition #136: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.962] |  :  .  |  :  .  |  :  .  |  :  .  Old stack:
[10:52:44.016] |  Condition #137: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.962] |  :  .  |  :  .  |  :  .  |  :  .  List of 1
[10:52:43.962] |  :  .  |  :  .  |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:43.962] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:43.962] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.962] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.962] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.962] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:43.962] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f0f35a6a0> 
[10:52:43.962] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:43.962] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:43.962] |  :  .  |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:44.016] |  Condition #138: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.965] |  :  .  |  :  .  |  :  .  |  :  .  Identical
[10:52:44.016] |  Condition #139: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.965] |  :  .  |  :  .  |  :  .  |  :  all.equal() for FutureStrategyList ... done
[10:52:44.017] |  Condition #140: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.966] |  :  .  |  :  .  |  :  .  |  :  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:44.017] |  Condition #141: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.966] |  :  .  |  :  .  |  :  .  |  :  List of future strategies:
[10:52:43.966] |  :  .  |  :  .  |  :  .  |  :  1. sequential:
[10:52:43.966] |  :  .  |  :  .  |  :  .  |  :     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:43.966] |  :  .  |  :  .  |  :  .  |  :     - tweaked: FALSE
[10:52:43.966] |  :  .  |  :  .  |  :  .  |  :     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:44.017] |  Condition #142: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.966] |  :  .  |  :  .  |  :  .  |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:44.017] |  Condition #143: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.966] |  :  .  |  :  .  |  :  .  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:44.017] |  Condition #144: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.966] |  :  .  |  :  .  |  :  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:44.017] |  Condition #145: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.967] |  :  .  |  :  .  |  :  SequentialFuture started (and completed)
[10:52:44.017] |  Condition #146: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.967] |  :  .  |  :  .  |  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:44.017] |  Condition #147: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.967] |  :  .  |  :  .  Launching futures ... done
[10:52:44.018] |  Condition #148: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.967] |  :  .  |  :  .  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:44.018] |  Condition #149: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.967] |  :  .  |  :  Using SequentialFutureBackend ... done
[10:52:44.018] |  Condition #150: ‘simpleMessage’, ‘message’, ‘condition’
[10:52:43.967] |  :  .  |  run() for Future (‘SequentialFuture’) ... done
[10:52:44.018] signalConditions() ... done
a = 10
[10:52:44.018] getGlobalsAndPackages() ...
[10:52:44.019] |  Searching for globals ...
[10:52:44.020] |  :  globals found: [3] ‘{’, ‘+’, ‘a’
[10:52:44.020] |  Searching for globals ... DONE
[10:52:44.020] |  Resolving globals: FALSE
[10:52:44.020] |  Search for packages associated with the globals ...
[10:52:44.020] |  :  Packages associated with globals: [1] ‘base’
[10:52:44.020] |  :  Packages: [1] ‘base’
[10:52:44.021] |  Search for packages associated with the globals ... DONE
[10:52:44.021] |  Packages after dropping 'base': [0] 
[10:52:44.021] |  globals: [1] ‘a’
[10:52:44.021] |  packages: [0] 
[10:52:44.021] getGlobalsAndPackages() ... done
[10:52:44.021] run() for Future (‘Future’) ...
[10:52:44.021] |  state: ‘created’
[10:52:44.021] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:44.022] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:44.022] |  Using MulticoreFutureBackend ...
[10:52:44.022] |  :  Launching futures ...
[10:52:44.022] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:44.022] |  :  .  |  getFutureData() ...
[10:52:44.022] |  :  .  |  :  getFutureCore() ...
[10:52:44.022] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:44.022] |  :  .  |  :  getFutureCore() ... done
[10:52:44.022] |  :  .  |  :  getFutureCapture() ...
[10:52:44.022] |  :  .  |  :  getFutureCapture() ... done
[10:52:44.023] |  :  .  |  :  getFutureContext() ...
[10:52:44.023] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:44.023] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:44.023] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:44.023] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:44.023] |  :  .  |  :  getFutureContext() ... done
[10:52:44.023] |  :  .  |  getFutureData() ... done
[10:52:44.023] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:44.024] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:44.026] |  :  .  |  MulticoreFuture started
[10:52:44.027] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:44.027] |  :  .  |  attachPackages() ...
[10:52:44.028] |  :  Launching futures ... done
[10:52:44.028] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:44.028] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:44.028] |  :  .  |  attachPackages() ... DONE
[10:52:44.029] |  Using MulticoreFutureBackend ... done
[10:52:44.029] |  :  .  |  attachPackages() ...
[10:52:44.029] run() for Future (‘MulticoreFuture’) ... done
[10:52:44.029] |  :  .  |  :  packages: [n=0] 
[10:52:44.029] result() for MulticoreFuture ...
[10:52:44.029] |  :  .  |  attachPackages() ... DONE
[10:52:44.031] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:44.031] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:44.032] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:44.033] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:44.033] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:44.034] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:44.034] |  :  .  |  :  .  |  New stack:
[10:52:44.034] |  :  .  |  :  .  |  List of 1
[10:52:44.034] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:44.034] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:44.034] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:44.034] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:44.034] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:44.034] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:44.034] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:44.039] |  :  .  |  :  .  |  Old stack:
[10:52:44.039] |  :  .  |  :  .  |  List of 1
[10:52:44.039] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:44.039] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:44.039] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:44.039] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:44.039] |  :  .  |  :  .  |      ...)  
[10:52:44.039] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:44.039] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:44.039] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:44.039] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:44.039] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:44.039] |  :  .  |  :  .  |      ...)  
[10:52:44.039] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:44.039] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:44.044] |  :  .  |  :  .  |  Not identical
[10:52:44.044] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:44.044] |  :  .  |  :  .  |  :  List of 2
[10:52:44.044] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:44.044] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:44.044] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:44.044] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:44.044] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:44.044] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:44.044] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:44.044] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:44.044] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:44.044] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:44.044] |  :  .  |  :  .  |  :      ...)  
[10:52:44.044] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:44.044] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:44.044] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:44.044] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:44.044] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:44.044] |  :  .  |  :  .  |  :      ...)  
[10:52:44.044] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:44.050] |  :  .  |  :  .  |  :  Formals differ
[10:52:44.051] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:44.051] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:52:44.051] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:44.051] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:52:44.051] |  :  .  |  :  .  List of future strategies:
[10:52:44.051] |  :  .  |  :  .  1. sequential:
[10:52:44.051] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:44.051] |  :  .  |  :  .     - tweaked: FALSE
[10:52:44.051] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:44.052] |  :  .  |  :  .  List of 1
[10:52:44.052] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:44.052] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:44.052] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:44.052] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:44.052] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:44.052] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:44.052] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:44.055] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:44.055] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:44.055] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:44.055] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:44.055] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:44.056] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:52:44.056] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:44.056] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:52:44.056] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:44.056] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:44.056] |  :  .  |  assign_globals() ...
[10:52:44.057] |  :  .  |  List of 1
[10:52:44.057] |  :  .  |   $ a: num 10
[10:52:44.057] |  :  .  |   - attr(*, "where")=List of 1
[10:52:44.057] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:52:44.057] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:44.057] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:52:44.057] |  :  .  |   - attr(*, "total_size")= num NA
[10:52:44.057] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:52:44.061] |  :  .  |  - copied ‘a’ to environment
[10:52:44.062] |  :  .  |  assign_globals() ... done
[10:52:44.064] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:44.064] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:44.064] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:44.064] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:44.064] |  :  .  |  :  .  |  :  New stack:
[10:52:44.064] |  :  .  |  :  .  |  :  List of 1
[10:52:44.064] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:44.064] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:44.064] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:44.064] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:44.064] |  :  .  |  :  .  |  :      ...)  
[10:52:44.064] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:44.064] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:44.064] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:44.064] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:44.064] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:44.064] |  :  .  |  :  .  |  :      ...)  
[10:52:44.064] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:44.064] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:44.067] |  :  .  |  :  .  |  :  Old stack:
[10:52:44.067] |  :  .  |  :  .  |  :  List of 1
[10:52:44.067] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:44.067] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:44.067] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:44.067] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:44.067] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:44.067] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:44.067] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:44.069] |  :  .  |  :  .  |  :  Not identical
[10:52:44.070] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:52:44.070] |  :  .  |  :  .  |  :  .  List of 2
[10:52:44.070] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:44.070] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:44.070] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:44.070] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:44.070] |  :  .  |  :  .  |  :  .      ...)  
[10:52:44.070] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:44.070] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:44.070] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:44.070] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:44.070] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:44.070] |  :  .  |  :  .  |  :  .      ...)  
[10:52:44.070] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:44.070] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:44.070] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:44.070] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:44.070] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:44.070] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:44.070] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:44.074] |  :  .  |  :  .  |  :  .  Formals differ
[10:52:44.074] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:52:44.074] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:52:44.074] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:44.074] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:52:44.074] |  :  .  |  :  .  |  List of future strategies:
[10:52:44.074] |  :  .  |  :  .  |  1. multicore:
[10:52:44.074] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:44.074] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:44.074] |  :  .  |  :  .  |     - call: plan(strategy)
[10:52:44.075] |  :  .  |  :  .  |  List of 1
[10:52:44.075] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:44.075] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:44.075] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:44.075] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:44.075] |  :  .  |  :  .  |      ...)  
[10:52:44.075] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:44.075] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:44.075] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:44.075] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:44.075] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:44.075] |  :  .  |  :  .  |      ...)  
[10:52:44.075] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:44.075] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:44.079] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:44.079] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:44.079] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:44.079] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:44.080] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:44.080] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:52:44.080] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:44.080] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:44.080] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:44.081] |  readImmediateCondition() ...
[10:52:44.081] |    - path: ‘/tmp/Rtmp5jFl1h/.future/immediateConditions’
[10:52:44.081] |   - Number of RDS files: 0
[10:52:44.082] |  readImmediateCondition() ... DONE
[10:52:44.082] |  result() for MulticoreFuture ...
[10:52:44.082] |  result() for MulticoreFuture ... done
[10:52:44.082] result() for MulticoreFuture ... done
[10:52:44.083] result() for MulticoreFuture ...
[10:52:44.083] result() for MulticoreFuture ... done
b = 11
*** %<-% with ‘multicore’ futures ... DONE
*** %<-% with ‘multisession’ futures ...
[10:52:44.083] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:44.084] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:52:44.084] |  :  all.equal() for FutureStrategyList ...
[10:52:44.084] |  :  .  New stack:
[10:52:44.084] |  :  .  List of 1
[10:52:44.084] |  :  .   $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:52:44.084] |  :  .      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:44.084] |  :  .    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:52:44.084] |  :  .    ..- attr(*, "init")= logi TRUE
[10:52:44.084] |  :  .    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:52:44.084] |  :  .    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:44.084] |  :  .    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:44.084] |  :  .    ..- attr(*, "untweakable")= chr "persistent"
[10:52:44.084] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:44.084] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:44.089] |  :  .  Old stack:
[10:52:44.089] |  :  .  List of 1
[10:52:44.089] |  :  .   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:44.089] |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:44.089] |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:44.089] |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:44.089] |  :  .      ...)  
[10:52:44.089] |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:44.089] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:44.089] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:44.089] |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:44.089] |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:44.089] |  :  .      ...)  
[10:52:44.089] |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:44.089] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:44.092] |  :  .  Not identical
[10:52:44.093] |  :  .  all.equal() for future ...
[10:52:44.093] |  :  .  |  List of 2
[10:52:44.093] |  :  .  |   $ target :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:52:44.093] |  :  .  |      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:44.093] |  :  .  |    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:52:44.093] |  :  .  |    ..- attr(*, "init")= logi TRUE
[10:52:44.093] |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:52:44.093] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:44.093] |  :  .  |    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:44.093] |  :  .  |    ..- attr(*, "untweakable")= chr "persistent"
[10:52:44.093] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:44.093] |  :  .  |   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:44.093] |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:44.093] |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:44.093] |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:44.093] |  :  .  |      ...)  
[10:52:44.093] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:44.093] |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:44.093] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:44.093] |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f11154168> 
[10:52:44.093] |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:44.093] |  :  .  |      ...)  
[10:52:44.093] |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:44.099] |  :  .  |  Formals differ
[10:52:44.099] |  :  .  all.equal() for future ... done
[10:52:44.099] |  :  .  Future strategies differ at level 1
[10:52:44.099] |  :  all.equal() for FutureStrategyList ... done
[10:52:44.099] |  :  plan(): Setting new future strategy stack:
[10:52:44.100] |  :  List of future strategies:
[10:52:44.100] |  :  1. multisession:
[10:52:44.100] |  :     - args: function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:44.100] |  :     - tweaked: FALSE
[10:52:44.100] |  :     - call: plan(strategy)
[10:52:44.100] |  :  List of 1
[10:52:44.100] |  :   $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:52:44.100] |  :      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:44.100] |  :    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:52:44.100] |  :    ..- attr(*, "init")= logi TRUE
[10:52:44.100] |  :    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:52:44.100] |  :    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:44.100] |  :    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:44.100] |  :    ..- attr(*, "untweakable")= chr "persistent"
[10:52:44.100] |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:44.100] |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:44.105] |  :  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:52:44.105] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:44.105] |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:44.105] |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:44.106] |  :  .  Legacy shutdown of cluster workers ...
[10:52:44.107] |  :  .  |  Stopping existing cluster ...
[10:52:44.107] |  :  .  |  :  No pre-existing cluster. Skipping
[10:52:44.107] |  :  .  |  Stopping existing cluster ... done
[10:52:44.107] |  :  .  Legacy shutdown of cluster workers ... done
[10:52:44.107] |  :  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:52:44.107] |  :  plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ...
[10:52:44.107] |  :  .  function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:52:44.107] |  :  .      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:44.107] |  :  .   - attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:52:44.107] |  :  .   - attr(*, "init")= logi TRUE
[10:52:44.107] |  :  .   - attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:52:44.107] |  :  .    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:44.107] |  :  .   - attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:44.107] |  :  .   - attr(*, "untweakable")= chr "persistent"
[10:52:44.107] |  :  .   - attr(*, "call")= language plan(strategy)
[10:52:44.110] |  :  .  init: TRUE
[10:52:44.110] |  :  .  makeFutureBackend(<multisession>) ...
[10:52:44.110] |  :  .  |  Backend function: <‘NULL’>
[10:52:44.112] |  :  .  |  ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ...
[10:52:44.112] |  :  .  |  :  workers: 2
[10:52:44.112] |  :  .  |  :  getCluster() ...
[10:52:44.112] |  :  .  |  :  getCluster() ... done
[10:52:44.112] |  :  .  |  :  Stopping existing cluster ...
[10:52:44.112] |  :  .  |  :  .  No pre-existing cluster. Skipping
[10:52:44.112] |  :  .  |  :  Stopping existing cluster ... done
[10:52:44.112] |  :  .  |  :  Starting new cluster ...
[10:52:44.113] |  :  .  |  :  .  makeCluster(workers, ...) ...
[10:52:44.113] |  :  .  |  :  .  |  Arguments:
[10:52:44.113] |  :  .  |  :  .  |  List of 2
[10:52:44.113] |  :  .  |  :  .  |   $             : int 2
[10:52:44.113] |  :  .  |  :  .  |   $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[10:52:44.599] |  :  .  |  :  .  |  Generated cluster UUID
[10:52:44.599] |  :  .  |  :  .  |  Cluster UUID: ‘f8b4ed0bd54220608f2f0cb6472feaaa’
[10:52:44.599] |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:44.602] |  :  .  |  :  .  makeCluster(workers, ...) ... done
[10:52:44.602] |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:44.603] |  :  .  |  :  Starting new cluster ... done
[10:52:44.603] |  :  .  |  :  Number of workers: 2
[10:52:44.604] |  :  .  |  :  Workers UUID: ‘f8b4ed0bd54220608f2f0cb6472feaaa’
[10:52:44.604] |  :  .  |  ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ... done
[10:52:44.604] |  :  .  |  Backend: <‘MultisessionFutureBackend’, ‘ClusterFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:44.604] |  :  .  makeFutureBackend(<multisession>) ... done
[10:52:44.604] |  :  plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ... done
[10:52:44.604] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:44.604] |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:52:44.604] |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:44.605] |  :  plan(): nbrOfWorkers() = 2
[10:52:44.605] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:52:44.605] plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
** Future evaluation without globals
[10:52:44.605] getGlobalsAndPackages() ...
[10:52:44.605] |  Searching for globals ...
[10:52:44.606] |  :  globals found: [2] ‘{’, ‘<-’
[10:52:44.606] |  Searching for globals ... DONE
[10:52:44.607] |  Resolving globals: FALSE
[10:52:44.607] |  Search for packages associated with the globals ...
[10:52:44.607] |  :  Packages associated with globals: [1] ‘base’
[10:52:44.607] |  :  Packages: [1] ‘base’
[10:52:44.607] |  Search for packages associated with the globals ... DONE
[10:52:44.607] |  Packages after dropping 'base': [0] 
[10:52:44.607] |  globals: [0] 
[10:52:44.608] |  packages: [0] 
[10:52:44.608] getGlobalsAndPackages() ... done
[10:52:44.608] run() for Future (‘Future’) ...
[10:52:44.608] |  state: ‘created’
[10:52:44.608] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:44.608] |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:44.608] |  Using MultisessionFutureBackend ...
[10:52:44.608] |  :  Launching futures ...
[10:52:44.609] |  :  .  launchFuture() for ClusterFutureBackend ...
[10:52:44.609] |  :  .  |  Workers: [n=2]
[10:52:44.609] |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:44.611] |  :  .  |  FutureRegistry: ‘workers-f8b4ed0bd54220608f2f0cb6472feaaa’
[10:52:44.611] |  :  .  |  requestWorker() ...
[10:52:44.611] |  :  .  |  :  requestNode() ...
[10:52:44.611] |  :  .  |  :  .  Number of workers: 2
[10:52:44.611] |  :  .  |  :  .  Polling for a free worker ...
[10:52:44.611] |  :  .  |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ...
[10:52:44.611] |  :  .  |  :  .  |  :  Created empty registry ‘workers-f8b4ed0bd54220608f2f0cb6472feaaa’
[10:52:44.611] |  :  .  |  :  .  |  :  Listing all futures
[10:52:44.611] |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:52:44.612] |  :  .  |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ... done
[10:52:44.612] |  :  .  |  :  .  |  Total time: 0
[10:52:44.612] |  :  .  |  :  .  Polling for a free worker ... done
[10:52:44.612] |  :  .  |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ...
[10:52:44.612] |  :  .  |  :  .  |  Listing all futures
[10:52:44.612] |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:44.612] |  :  .  |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ... done
[10:52:44.612] |  :  .  |  :  .  Index of first available worker: 1
[10:52:44.612] |  :  .  |  :  .  Validate that the worker is functional ...
[10:52:44.673] |  :  .  |  :  .  |  Worker is functional
[10:52:44.674] |  :  .  |  :  .  requestNode() ... done
[10:52:44.674] |  :  .  |  :  .  cluster node index: 1
[10:52:44.674] |  :  .  |  :  requestWorker() ... done
[10:52:44.674] |  :  .  |  :  eraseGlobalEnvironment() ...
[10:52:44.675] |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:52:44.675] |  :  .  |  :  launchFuture() ...
[10:52:44.675] |  :  .  |  :  .  cluster node index: 1
[10:52:44.675] |  :  .  |  :  .  getFutureData() ...
[10:52:44.675] |  :  .  |  :  .  |  getFutureCore() ...
[10:52:44.675] |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:52:44.675] |  :  .  |  :  .  |  getFutureCore() ... done
[10:52:44.675] |  :  .  |  :  .  |  getFutureCapture() ...
[10:52:44.676] |  :  .  |  :  .  |  getFutureCapture() ... done
[10:52:44.676] |  :  .  |  :  .  |  getFutureContext() ...
[10:52:44.676] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:44.676] |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:52:44.676] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:44.676] |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:52:44.676] |  :  .  |  :  .  |  getFutureContext() ... done
[10:52:44.676] |  :  .  |  :  .  getFutureData() ... done
[10:52:44.677] |  :  .  |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'add', earlySignal = 0) ...
[10:52:44.677] |  :  .  |  :  .  |  Appended future to position #1
[10:52:44.677] |  :  .  |  :  .  |  Number of registered futures: 1
[10:52:44.677] |  :  .  |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'add', earlySignal = 0) ... done
[10:52:44.677] |  :  .  |  :  launchFuture() ... done
[10:52:44.678] |  :  .  |  :  MultisessionFuture started
[10:52:44.678] |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:52:44.678] |  :  .  Launching futures ... done
[10:52:44.678] |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:44.678] |  :  Using MultisessionFutureBackend ... done
[10:52:44.678] |  run() for Future (‘MultisessionFuture’) ... done
[10:52:44.678] |  result() for ClusterFuture ...
[10:52:44.679] |  :  assertValidConnection() ...
[10:52:44.679] |  :  .  cluster node index: 1
[10:52:44.679] |  :  assertValidConnection() ... done
[10:52:44.680] |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:52:44.680] |  :  .  cluster node index: 1
[10:52:44.765] |  :  .  [1] TRUE
[10:52:44.765] |  :  .  received data:
[10:52:44.765] |  :  .  List of 5
[10:52:44.765] |  :  .   $ type   : chr "VALUE"
[10:52:44.765] |  :  .   $ value  :List of 13
[10:52:44.765] |  :  .    ..$ value            : num 1
[10:52:44.765] |  :  .    ..$ visible          : logi FALSE
[10:52:44.765] |  :  .    ..$ stdout           : chr ""
[10:52:44.765] |  :  .    ..$ conditions       : list()
[10:52:44.765] |  :  .    ..$ rng              : logi FALSE
[10:52:44.765] |  :  .    ..$ misuseGlobalEnv  : NULL
[10:52:44.765] |  :  .    ..$ misuseConnections:List of 3
[10:52:44.765] |  :  .    .. ..$ added   : NULL
[10:52:44.765] |  :  .    .. ..$ removed : NULL
[10:52:44.765] |  :  .    .. ..$ replaced: NULL
[10:52:44.765] |  :  .    ..$ misuseDevices    : NULL
[10:52:44.765] |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:44"
[10:52:44.765] |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:44"
[10:52:44.765] |  :  .    ..$ session_uuid     : chr "85991406d0f0e3f089fc90593b6cf225"
[10:52:44.765] |  :  .    .. ..- attr(*, "source")=List of 5
[10:52:44.765] |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:44.765] |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:44.765] |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:44.765] |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:44.765] |  :  .    .. .. ..$ pid   : int 69323
[10:52:44.765] |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:44"
[10:52:44.765] |  :  .    .. .. ..$ random: int 2147483647
[10:52:44.765] |  :  .    ..$ r_info           :List of 4
[10:52:44.765] |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:44.765] |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:52:44.765] |  :  .    .. ..$ os           : chr "unix"
[10:52:44.765] |  :  .    .. ..$ os_name      : chr "Linux"
[10:52:44.765] |  :  .    .. ..$ captures_utf8: logi TRUE
[10:52:44.765] |  :  .    ..$ version          : chr "1.8"
[10:52:44.765] |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:52:44.765] |  :  .   $ success: logi TRUE
[10:52:44.765] |  :  .   $ time   : 'proc_time' Named num [1:5] 0.046 0.001 0.047 0 0
[10:52:44.765] |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:44.765] |  :  .   $ tag    : NULL
[10:52:44.779] |  :  .  Received FutureResult
[10:52:44.779] |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'remove', earlySignal = 0) ...
[10:52:44.779] |  :  .  |  Removed future from position #1
[10:52:44.779] |  :  .  |  Number of registered futures: 0
[10:52:44.779] |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'remove', earlySignal = 0) ... done
[10:52:44.780] |  :  .  Erased future from future backend
[10:52:44.780] |  :  .  result() for ClusterFuture ...
[10:52:44.780] |  :  .  |  result already collected: FutureResult
[10:52:44.780] |  :  .  result() for ClusterFuture ... done
[10:52:44.780] |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:44.780] |  result() for ClusterFuture ... done
[10:52:44.780] |  result() for ClusterFuture ...
[10:52:44.780] |  :  result already collected: FutureResult
[10:52:44.781] |  result() for ClusterFuture ... done
** Future evaluation with globals
[10:52:44.781] |  getGlobalsAndPackages() ...
[10:52:44.781] |  :  Searching for globals ...
[10:52:44.782] |  :  .  globals found: [3] ‘{’, ‘<-’, ‘a’
[10:52:44.783] |  :  Searching for globals ... DONE
[10:52:44.783] |  :  Resolving globals: FALSE
[10:52:44.783] |  :  Search for packages associated with the globals ...
[10:52:44.783] |  :  .  Packages associated with globals: [1] ‘base’
[10:52:44.783] |  :  .  Packages: [1] ‘base’
[10:52:44.784] |  :  Search for packages associated with the globals ... DONE
[10:52:44.784] |  :  Packages after dropping 'base': [0] 
[10:52:44.784] |  :  globals: [1] ‘a’
[10:52:44.784] |  :  packages: [0] 
[10:52:44.784] |  getGlobalsAndPackages() ... done
[10:52:44.784] |  run() for Future (‘Future’) ...
[10:52:44.785] |  :  state: ‘created’
[10:52:44.785] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:44.785] |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:44.785] |  :  Using MultisessionFutureBackend ...
[10:52:44.785] |  :  .  Launching futures ...
[10:52:44.785] |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:52:44.785] |  :  .  |  :  Workers: [n=2]
[10:52:44.786] |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:44.788] |  :  .  |  :  FutureRegistry: ‘workers-f8b4ed0bd54220608f2f0cb6472feaaa’
[10:52:44.788] |  :  .  |  :  requestWorker() ...
[10:52:44.788] |  :  .  |  :  .  requestNode() ...
[10:52:44.788] |  :  .  |  :  .  |  Number of workers: 2
[10:52:44.788] |  :  .  |  :  .  |  Polling for a free worker ...
[10:52:44.788] |  :  .  |  :  .  |  :  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ...
[10:52:44.788] |  :  .  |  :  .  |  :  .  Listing all futures
[10:52:44.788] |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:52:44.789] |  :  .  |  :  .  |  :  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ... done
[10:52:44.789] |  :  .  |  :  .  |  :  Total time: 0
[10:52:44.789] |  :  .  |  :  .  |  Polling for a free worker ... done
[10:52:44.789] |  :  .  |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ...
[10:52:44.789] |  :  .  |  :  .  |  :  Listing all futures
[10:52:44.789] |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:52:44.789] |  :  .  |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ... done
[10:52:44.789] |  :  .  |  :  .  |  Index of first available worker: 1
[10:52:44.790] |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:52:44.829] |  :  .  |  :  .  |  :  Worker is functional
[10:52:44.829] |  :  .  |  :  .  |  requestNode() ... done
[10:52:44.829] |  :  .  |  :  .  |  cluster node index: 1
[10:52:44.829] |  :  .  |  :  .  requestWorker() ... done
[10:52:44.829] |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:52:44.830] |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:52:44.830] |  :  .  |  :  .  launchFuture() ...
[10:52:44.830] |  :  .  |  :  .  |  cluster node index: 1
[10:52:44.830] |  :  .  |  :  .  |  getFutureData() ...
[10:52:44.830] |  :  .  |  :  .  |  :  getFutureCore() ...
[10:52:44.830] |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:44.831] |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:52:44.831] |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:52:44.831] |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:52:44.831] |  :  .  |  :  .  |  :  getFutureContext() ...
[10:52:44.831] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:44.831] |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:44.831] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:44.831] |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:44.832] |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:52:44.832] |  :  .  |  :  .  |  getFutureData() ... done
[10:52:44.832] |  :  .  |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'add', earlySignal = 0) ...
[10:52:44.832] |  :  .  |  :  .  |  :  Appended future to position #1
[10:52:44.832] |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:52:44.833] |  :  .  |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'add', earlySignal = 0) ... done
[10:52:44.833] |  :  .  |  :  .  launchFuture() ... done
[10:52:44.833] |  :  .  |  :  .  MultisessionFuture started
[10:52:44.833] |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:52:44.833] |  :  .  |  Launching futures ... done
[10:52:44.833] |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:44.833] |  :  .  Using MultisessionFutureBackend ... done
[10:52:44.833] |  :  run() for Future (‘MultisessionFuture’) ... done
[10:52:44.834] |  :  result() for ClusterFuture ...
[10:52:44.834] |  :  .  assertValidConnection() ...
[10:52:44.834] |  :  .  |  cluster node index: 1
[10:52:44.834] |  :  .  assertValidConnection() ... done
[10:52:44.834] |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:52:44.835] |  :  .  |  cluster node index: 1
[10:52:44.876] |  :  .  |  [1] TRUE
[10:52:44.877] |  :  .  |  received data:
[10:52:44.877] |  :  .  |  List of 5
[10:52:44.877] |  :  .  |   $ type   : chr "VALUE"
[10:52:44.877] |  :  .  |   $ value  :List of 13
[10:52:44.877] |  :  .  |    ..$ value            : num 2
[10:52:44.877] |  :  .  |    ..$ visible          : logi FALSE
[10:52:44.877] |  :  .  |    ..$ stdout           : chr ""
[10:52:44.877] |  :  .  |    ..$ conditions       : list()
[10:52:44.877] |  :  .  |    ..$ rng              : logi FALSE
[10:52:44.877] |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:52:44.877] |  :  .  |    ..$ misuseConnections:List of 3
[10:52:44.877] |  :  .  |    .. ..$ added   : NULL
[10:52:44.877] |  :  .  |    .. ..$ removed : NULL
[10:52:44.877] |  :  .  |    .. ..$ replaced: NULL
[10:52:44.877] |  :  .  |    ..$ misuseDevices    : NULL
[10:52:44.877] |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:44"
[10:52:44.877] |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:44"
[10:52:44.877] |  :  .  |    ..$ session_uuid     : chr "85991406d0f0e3f089fc90593b6cf225"
[10:52:44.877] |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:52:44.877] |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:44.877] |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:44.877] |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:44.877] |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:44.877] |  :  .  |    .. .. ..$ pid   : int 69323
[10:52:44.877] |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:44"
[10:52:44.877] |  :  .  |    .. .. ..$ random: int 2147483647
[10:52:44.877] |  :  .  |    ..$ r_info           :List of 4
[10:52:44.877] |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:44.877] |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:52:44.877] |  :  .  |    .. ..$ os           : chr "unix"
[10:52:44.877] |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:52:44.877] |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:52:44.877] |  :  .  |    ..$ version          : chr "1.8"
[10:52:44.877] |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:52:44.877] |  :  .  |   $ success: logi TRUE
[10:52:44.877] |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:52:44.877] |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:44.877] |  :  .  |   $ tag    : NULL
[10:52:44.890] |  :  .  |  Received FutureResult
[10:52:44.890] |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'remove', earlySignal = 0) ...
[10:52:44.890] |  :  .  |  :  Removed future from position #1
[10:52:44.890] |  :  .  |  :  Number of registered futures: 0
[10:52:44.890] |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'remove', earlySignal = 0) ... done
[10:52:44.890] |  :  .  |  Erased future from future backend
[10:52:44.891] |  :  .  |  result() for ClusterFuture ...
[10:52:44.891] |  :  .  |  :  result already collected: FutureResult
[10:52:44.891] |  :  .  |  result() for ClusterFuture ... done
[10:52:44.891] |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:44.891] |  :  result() for ClusterFuture ... done
[10:52:44.891] |  :  result() for ClusterFuture ...
[10:52:44.891] |  :  .  result already collected: FutureResult
[10:52:44.891] |  :  result() for ClusterFuture ... done
** Future evaluation with errors
[10:52:44.892] |  :  getGlobalsAndPackages() ...
[10:52:44.892] |  :  .  Searching for globals ...
[10:52:44.894] |  :  .  |  globals found: [3] ‘{’, ‘<-’, ‘stop’
[10:52:44.894] |  :  .  Searching for globals ... DONE
[10:52:44.894] |  :  .  Resolving globals: FALSE
[10:52:44.894] |  :  .  Search for packages associated with the globals ...
[10:52:44.895] |  :  .  |  Packages associated with globals: [1] ‘base’
[10:52:44.895] |  :  .  |  Packages: [1] ‘base’
[10:52:44.895] |  :  .  Search for packages associated with the globals ... DONE
[10:52:44.895] |  :  .  Packages after dropping 'base': [0] 
[10:52:44.895] |  :  .  globals: [0] 
[10:52:44.896] |  :  .  packages: [0] 
[10:52:44.896] |  :  getGlobalsAndPackages() ... done
[10:52:44.896] |  :  run() for Future (‘Future’) ...
[10:52:44.896] |  :  .  state: ‘created’
[10:52:44.896] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:44.896] |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:44.897] |  :  .  Using MultisessionFutureBackend ...
[10:52:44.897] |  :  .  |  Launching futures ...
[10:52:44.897] |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:52:44.897] |  :  .  |  :  .  Workers: [n=2]
[10:52:44.897] |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:44.899] |  :  .  |  :  .  FutureRegistry: ‘workers-f8b4ed0bd54220608f2f0cb6472feaaa’
[10:52:44.899] |  :  .  |  :  .  requestWorker() ...
[10:52:44.899] |  :  .  |  :  .  |  requestNode() ...
[10:52:44.901] |  :  .  |  :  .  |  :  Number of workers: 2
[10:52:44.902] |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:52:44.902] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ...
[10:52:44.902] |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:52:44.902] |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:44.902] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ... done
[10:52:44.902] |  :  .  |  :  .  |  :  .  Total time: 0
[10:52:44.902] |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:52:44.902] |  :  .  |  :  .  |  :  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ...
[10:52:44.902] |  :  .  |  :  .  |  :  .  Listing all futures
[10:52:44.903] |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:52:44.903] |  :  .  |  :  .  |  :  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ... done
[10:52:44.903] |  :  .  |  :  .  |  :  Index of first available worker: 1
[10:52:44.903] |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:52:44.981] |  :  .  |  :  .  |  :  .  Worker is functional
[10:52:44.982] |  :  .  |  :  .  |  :  requestNode() ... done
[10:52:44.982] |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:44.982] |  :  .  |  :  .  |  requestWorker() ... done
[10:52:44.982] |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:52:44.982] |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:52:44.983] |  :  .  |  :  .  |  launchFuture() ...
[10:52:44.983] |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:44.983] |  :  .  |  :  .  |  :  getFutureData() ...
[10:52:44.983] |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:52:44.983] |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:52:44.983] |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:52:44.983] |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:52:44.983] |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:52:44.983] |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:52:44.983] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:44.984] |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:52:44.984] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:44.984] |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:52:44.984] |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:52:44.984] |  :  .  |  :  .  |  :  getFutureData() ... done
[10:52:44.984] |  :  .  |  :  .  |  :  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'add', earlySignal = 0) ...
[10:52:44.984] |  :  .  |  :  .  |  :  .  Appended future to position #1
[10:52:44.984] |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:52:44.985] |  :  .  |  :  .  |  :  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'add', earlySignal = 0) ... done
[10:52:44.985] |  :  .  |  :  .  |  launchFuture() ... done
[10:52:44.985] |  :  .  |  :  .  |  MultisessionFuture started
[10:52:44.985] |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:52:44.985] |  :  .  |  :  Launching futures ... done
[10:52:44.985] |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:44.985] |  :  .  |  Using MultisessionFutureBackend ... done
[10:52:44.985] |  :  .  run() for Future (‘MultisessionFuture’) ... done
[10:52:44.985] |  :  .  result() for ClusterFuture ...
[10:52:44.986] |  :  .  |  assertValidConnection() ...
[10:52:44.986] |  :  .  |  :  cluster node index: 1
[10:52:44.986] |  :  .  |  assertValidConnection() ... done
[10:52:44.986] |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:52:44.986] |  :  .  |  :  cluster node index: 1
[10:52:45.029] |  :  .  |  :  [1] TRUE
[10:52:45.029] |  :  .  |  :  received data:
[10:52:45.029] |  :  .  |  :  List of 5
[10:52:45.029] |  :  .  |  :   $ type   : chr "VALUE"
[10:52:45.029] |  :  .  |  :   $ value  :List of 13
[10:52:45.029] |  :  .  |  :    ..$ value            : NULL
[10:52:45.029] |  :  .  |  :    ..$ visible          : logi TRUE
[10:52:45.029] |  :  .  |  :    ..$ stdout           : chr ""
[10:52:45.029] |  :  .  |  :    ..$ conditions       :List of 1
[10:52:45.029] |  :  .  |  :    .. ..$ :List of 5
[10:52:45.029] |  :  .  |  :    .. .. ..$ condition:List of 2
[10:52:45.029] |  :  .  |  :    .. .. .. ..$ message: chr "Woops!"
[10:52:45.029] |  :  .  |  :    .. .. .. ..$ call   : language eval(quote({     { ...
[10:52:45.029] |  :  .  |  :    .. .. .. ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
[10:52:45.029] |  :  .  |  :    .. .. ..$ calls    :List of 10
[10:52:45.029] |  :  .  |  :    .. .. .. ..$ : language eval(expr, envir = globalenv())
[10:52:45.029] |  :  .  |  :    .. .. .. ..$ : language eval(expr, envir = globalenv())
[10:52:45.029] |  :  .  |  :    .. .. .. ..$ : language local({     { ...
[10:52:45.029] |  :  .  |  :    .. .. .. ..$ : language eval.parent(substitute(eval(quote(expr), envir)))
[10:52:45.029] |  :  .  |  :    .. .. .. ..$ : language eval(expr, p)
[10:52:45.029] |  :  .  |  :    .. .. .. ..$ : language eval(expr, p)
[10:52:45.029] |  :  .  |  :    .. .. .. ..$ : language eval(quote({     { ...
[10:52:45.029] |  :  .  |  :    .. .. .. ..$ : language eval(quote({     { ...
[10:52:45.029] |  :  .  |  :    .. .. .. ..$ : language stop("Woops!")
[10:52:45.029] |  :  .  |  :    .. .. .. ..$ : language eval(quote({     { ...
[10:52:45.029] |  :  .  |  :    .. .. ..$ session  :List of 6
[10:52:45.029] |  :  .  |  :    .. .. .. ..$ r         :List of 14
[10:52:45.029] |  :  .  |  :    .. .. .. .. ..$ platform      : chr "x86_64-pc-linux-gnu"
[10:52:45.029] |  :  .  |  :    .. .. .. .. ..$ arch          : chr "x86_64"
[10:52:45.029] |  :  .  |  :    .. .. .. .. ..$ os            : chr "linux-gnu"
[10:52:45.029] |  :  .  |  :    .. .. .. .. ..$ system        : chr "x86_64, linux-gnu"
[10:52:45.029] |  :  .  |  :    .. .. .. .. ..$ status        : chr ""
[10:52:45.029] |  :  .  |  :    .. .. .. .. ..$ major         : chr "4"
[10:52:45.029] |  :  .  |  :    .. .. .. .. ..$ minor         : chr "5.0"
[10:52:45.029] |  :  .  |  :    .. .. .. .. ..$ year          : chr "2025"
[10:52:45.029] |  :  .  |  :    .. .. .. .. ..$ month         : chr "04"
[10:52:45.029] |  :  .  |  :    .. .. .. .. ..$ day           : chr "11"
[10:52:45.029] |  :  .  |  :    .. .. .. .. ..$ svn rev       : chr "88135"
[10:52:45.029] |  :  .  |  :    .. .. .. .. ..$ language      : chr "R"
[10:52:45.029] |  :  .  |  :    .. .. .. .. ..$ version.string: chr "R version 4.5.0 (2025-04-11)"
[10:52:45.029] |  :  .  |  :    .. .. .. .. ..$ nickname      : chr "How About a Twenty-Six"
[10:52:45.029] |  :  .  |  :    .. .. .. ..$ locale    : chr "LC_CTYPE=en_US.UTF-8;LC_NUMERIC=C;LC_TIME=en_US.UTF-8;LC_COLLATE=en_US.UTF-8;LC_MONETARY=en_US.UTF-8;LC_MESSAGE"| __truncated__
[10:52:45.029] |  :  .  |  :    .. .. .. ..$ rngkind   : chr [1:3] "Mersenne-Twister" "Inversion" "Rejection"
[10:52:45.029] |  :  .  |  :    .. .. .. ..$ namespaces: chr [1:16] "compiler" "parallelly" "graphics" "tools" ...
[10:52:45.029] |  :  .  |  :    .. .. .. ..$ search    : chr [1:10] ".GlobalEnv" "package:future" "package:stats" "package:graphics" ...
[10:52:45.029] |  :  .  |  :    .. .. .. ..$ system    : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:45.029] |  :  .  |  :    .. .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:45.029] |  :  .  |  :    .. .. ..$ timestamp: POSIXct[1:1], format: "2025-05-06 10:52:45"
[10:52:45.029] |  :  .  |  :    .. .. ..$ signaled : int 0
[10:52:45.029] |  :  .  |  :    ..$ rng              : logi FALSE
[10:52:45.029] |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:52:45.029] |  :  .  |  :    ..$ misuseConnections:List of 3
[10:52:45.029] |  :  .  |  :    .. ..$ added   : NULL
[10:52:45.029] |  :  .  |  :    .. ..$ removed : NULL
[10:52:45.029] |  :  .  |  :    .. ..$ replaced: NULL
[10:52:45.029] |  :  .  |  :    ..$ misuseDevices    : NULL
[10:52:45.029] |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:45"
[10:52:45.029] |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:45"
[10:52:45.029] |  :  .  |  :    ..$ session_uuid     : chr "85991406d0f0e3f089fc90593b6cf225"
[10:52:45.029] |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:52:45.029] |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:45.029] |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:45.029] |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:45.029] |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:45.029] |  :  .  |  :    .. .. ..$ pid   : int 69323
[10:52:45.029] |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:44"
[10:52:45.029] |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:52:45.029] |  :  .  |  :    ..$ r_info           :List of 4
[10:52:45.029] |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:45.029] |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:52:45.029] |  :  .  |  :    .. ..$ os           : chr "unix"
[10:52:45.029] |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:52:45.029] |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:52:45.029] |  :  .  |  :    ..$ version          : chr "1.8"
[10:52:45.029] |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:52:45.029] |  :  .  |  :   $ success: logi TRUE
[10:52:45.029] |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.004 0 0.003 0 0
[10:52:45.029] |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:45.029] |  :  .  |  :   $ tag    : NULL
[10:52:45.050] |  :  .  |  :  Received FutureResult
[10:52:45.050] |  :  .  |  :  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'remove', earlySignal = 0) ...
[10:52:45.050] |  :  .  |  :  .  Removed future from position #1
[10:52:45.050] |  :  .  |  :  .  Number of registered futures: 0
[10:52:45.050] |  :  .  |  :  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'remove', earlySignal = 0) ... done
[10:52:45.050] |  :  .  |  :  Erased future from future backend
[10:52:45.050] |  :  .  |  :  result() for ClusterFuture ...
[10:52:45.050] |  :  .  |  :  .  result already collected: FutureResult
[10:52:45.050] |  :  .  |  :  result() for ClusterFuture ... done
[10:52:45.050] |  :  .  |  :  signalConditions() ...
[10:52:45.051] |  :  .  |  :  .  include = ‘immediateCondition’
[10:52:45.051] |  :  .  |  :  .  exclude = 
[10:52:45.051] |  :  .  |  :  .  resignal = FALSE
[10:52:45.051] |  :  .  |  :  .  Number of conditions: 1
[10:52:45.051] |  :  .  |  :  signalConditions() ... done
[10:52:45.051] |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:45.051] |  :  .  result() for ClusterFuture ... done
[10:52:45.051] |  :  .  result() for ClusterFuture ...
[10:52:45.051] |  :  .  |  result already collected: FutureResult
[10:52:45.051] |  :  .  result() for ClusterFuture ... done
[10:52:45.052] |  :  .  signalConditions() ...
[10:52:45.052] |  :  .  |  include = ‘immediateCondition’
[10:52:45.052] |  :  .  |  exclude = 
[10:52:45.052] |  :  .  |  resignal = FALSE
[10:52:45.052] |  :  .  |  Number of conditions: 1
[10:52:45.052] |  :  .  signalConditions() ... done
[10:52:45.052] |  :  .  Future state: ‘finished’
[10:52:45.052] |  :  .  result() for ClusterFuture ...
[10:52:45.052] |  :  .  |  result already collected: FutureResult
[10:52:45.052] |  :  .  result() for ClusterFuture ... done
[10:52:45.053] |  :  .  signalConditions() ...
[10:52:45.053] |  :  .  |  include = ‘condition’
[10:52:45.053] |  :  .  |  exclude = ‘immediateCondition’
[10:52:45.053] |  :  .  |  resignal = TRUE
[10:52:45.053] |  :  .  |  Number of conditions: 1
[10:52:45.053] |  :  .  |  Condition #1: ‘simpleError’, ‘error’, ‘condition’
[10:52:45.053] |  :  .  signalConditions() ... done
[10:52:45.053] |  :  .  getGlobalsAndPackages() ...
[10:52:45.054] |  :  .  |  Searching for globals ...
[10:52:45.055] |  :  .  |  :  globals found: [6] ‘{’, ‘if’, ‘==’, ‘%%’, ‘ii’, ‘stop’
[10:52:45.055] |  :  .  |  Searching for globals ... DONE
[10:52:45.056] |  :  .  |  Resolving globals: FALSE
[10:52:45.056] |  :  .  |  Search for packages associated with the globals ...
[10:52:45.056] |  :  .  |  :  Packages associated with globals: [1] ‘base’
[10:52:45.056] |  :  .  |  :  Packages: [1] ‘base’
[10:52:45.056] |  :  .  |  Search for packages associated with the globals ... DONE
[10:52:45.056] |  :  .  |  Packages after dropping 'base': [0] 
[10:52:45.056] |  :  .  |  globals: [1] ‘ii’
[10:52:45.057] |  :  .  |  packages: [0] 
[10:52:45.057] |  :  .  getGlobalsAndPackages() ... done
[10:52:45.057] |  :  .  run() for Future (‘Future’) ...
[10:52:45.057] |  :  .  |  state: ‘created’
[10:52:45.057] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:45.057] |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:45.057] |  :  .  |  Using MultisessionFutureBackend ...
[10:52:45.057] |  :  .  |  :  Launching futures ...
[10:52:45.058] |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:52:45.058] |  :  .  |  :  .  |  Workers: [n=2]
[10:52:45.058] |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:45.059] |  :  .  |  :  .  |  FutureRegistry: ‘workers-f8b4ed0bd54220608f2f0cb6472feaaa’
[10:52:45.059] |  :  .  |  :  .  |  requestWorker() ...
[10:52:45.059] |  :  .  |  :  .  |  :  requestNode() ...
[10:52:45.060] |  :  .  |  :  .  |  :  .  Number of workers: 2
[10:52:45.060] |  :  .  |  :  .  |  :  .  Polling for a free worker ...
[10:52:45.060] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ...
[10:52:45.060] |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:52:45.060] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:52:45.060] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ... done
[10:52:45.060] |  :  .  |  :  .  |  :  .  |  Total time: 0
[10:52:45.060] |  :  .  |  :  .  |  :  .  Polling for a free worker ... done
[10:52:45.060] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ...
[10:52:45.060] |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:52:45.061] |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:45.061] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ... done
[10:52:45.061] |  :  .  |  :  .  |  :  .  Index of first available worker: 1
[10:52:45.061] |  :  .  |  :  .  |  :  .  Validate that the worker is functional ...
[10:52:45.138] |  :  .  |  :  .  |  :  .  |  Worker is functional
[10:52:45.138] |  :  .  |  :  .  |  :  .  requestNode() ... done
[10:52:45.139] |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:45.139] |  :  .  |  :  .  |  :  requestWorker() ... done
[10:52:45.139] |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ...
[10:52:45.139] |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:52:45.139] |  :  .  |  :  .  |  :  launchFuture() ...
[10:52:45.139] |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:45.139] |  :  .  |  :  .  |  :  .  getFutureData() ...
[10:52:45.140] |  :  .  |  :  .  |  :  .  |  getFutureCore() ...
[10:52:45.140] |  :  .  |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:52:45.140] |  :  .  |  :  .  |  :  .  |  getFutureCore() ... done
[10:52:45.140] |  :  .  |  :  .  |  :  .  |  getFutureCapture() ...
[10:52:45.140] |  :  .  |  :  .  |  :  .  |  getFutureCapture() ... done
[10:52:45.140] |  :  .  |  :  .  |  :  .  |  getFutureContext() ...
[10:52:45.140] |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:45.140] |  :  .  |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:52:45.140] |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:45.140] |  :  .  |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:52:45.141] |  :  .  |  :  .  |  :  .  |  getFutureContext() ... done
[10:52:45.141] |  :  .  |  :  .  |  :  .  getFutureData() ... done
[10:52:45.141] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'add', earlySignal = 0) ...
[10:52:45.141] |  :  .  |  :  .  |  :  .  |  Appended future to position #1
[10:52:45.141] |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:52:45.141] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'add', earlySignal = 0) ... done
[10:52:45.141] |  :  .  |  :  .  |  :  launchFuture() ... done
[10:52:45.141] |  :  .  |  :  .  |  :  MultisessionFuture started
[10:52:45.142] |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:52:45.142] |  :  .  |  :  .  Launching futures ... done
[10:52:45.142] |  :  .  |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:45.142] |  :  .  |  :  Using MultisessionFutureBackend ... done
[10:52:45.142] |  :  .  |  run() for Future (‘MultisessionFuture’) ... done
[10:52:45.142] |  :  .  |  getGlobalsAndPackages() ...
[10:52:45.142] |  :  .  |  :  Searching for globals ...
[10:52:45.144] |  :  .  |  :  .  globals found: [6] ‘{’, ‘if’, ‘==’, ‘%%’, ‘ii’, ‘stop’
[10:52:45.144] |  :  .  |  :  Searching for globals ... DONE
[10:52:45.144] |  :  .  |  :  Resolving globals: FALSE
[10:52:45.144] |  :  .  |  :  Search for packages associated with the globals ...
[10:52:45.145] |  :  .  |  :  .  Packages associated with globals: [1] ‘base’
[10:52:45.145] |  :  .  |  :  .  Packages: [1] ‘base’
[10:52:45.145] |  :  .  |  :  Search for packages associated with the globals ... DONE
[10:52:45.145] |  :  .  |  :  Packages after dropping 'base': [0] 
[10:52:45.145] |  :  .  |  :  globals: [1] ‘ii’
[10:52:45.145] |  :  .  |  :  packages: [0] 
[10:52:45.145] |  :  .  |  getGlobalsAndPackages() ... done
[10:52:45.146] |  :  .  |  run() for Future (‘Future’) ...
[10:52:45.146] |  :  .  |  :  state: ‘created’
[10:52:45.146] |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:45.146] |  :  .  |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:45.146] |  :  .  |  :  Using MultisessionFutureBackend ...
[10:52:45.146] |  :  .  |  :  .  Launching futures ...
[10:52:45.146] |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:52:45.146] |  :  .  |  :  .  |  :  Workers: [n=2]
[10:52:45.147] |  :  .  |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:45.148] |  :  .  |  :  .  |  :  FutureRegistry: ‘workers-f8b4ed0bd54220608f2f0cb6472feaaa’
[10:52:45.148] |  :  .  |  :  .  |  :  requestWorker() ...
[10:52:45.148] |  :  .  |  :  .  |  :  .  requestNode() ...
[10:52:45.148] |  :  .  |  :  .  |  :  .  |  Number of workers: 2
[10:52:45.148] |  :  .  |  :  .  |  :  .  |  Polling for a free worker ...
[10:52:45.149] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ...
[10:52:45.149] |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:52:45.149] |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:52:45.149] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ... done
[10:52:45.149] |  :  .  |  :  .  |  :  .  |  :  Total time: 0
[10:52:45.149] |  :  .  |  :  .  |  :  .  |  Polling for a free worker ... done
[10:52:45.149] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ...
[10:52:45.149] |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:52:45.149] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:52:45.149] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ... done
[10:52:45.150] |  :  .  |  :  .  |  :  .  |  Index of first available worker: 2
[10:52:45.150] |  :  .  |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:52:45.211] |  :  .  |  :  .  |  :  .  |  :  Worker is functional
[10:52:45.211] |  :  .  |  :  .  |  :  .  |  requestNode() ... done
[10:52:45.211] |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:52:45.211] |  :  .  |  :  .  |  :  .  requestWorker() ... done
[10:52:45.211] |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:52:45.213] |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:52:45.213] |  :  .  |  :  .  |  :  .  launchFuture() ...
[10:52:45.213] |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:52:45.213] |  :  .  |  :  .  |  :  .  |  getFutureData() ...
[10:52:45.213] |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ...
[10:52:45.213] |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:45.213] |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:52:45.213] |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:52:45.213] |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:52:45.213] |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ...
[10:52:45.214] |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:45.214] |  :  .  |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:45.214] |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:45.214] |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:45.214] |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:52:45.214] |  :  .  |  :  .  |  :  .  |  getFutureData() ... done
[10:52:45.214] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'add', earlySignal = 0) ...
[10:52:45.215] |  :  .  |  :  .  |  :  .  |  :  Appended future to position #2
[10:52:45.215] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 2
[10:52:45.215] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'add', earlySignal = 0) ... done
[10:52:45.215] |  :  .  |  :  .  |  :  .  launchFuture() ... done
[10:52:45.215] |  :  .  |  :  .  |  :  .  MultisessionFuture started
[10:52:45.215] |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:52:45.215] |  :  .  |  :  .  |  Launching futures ... done
[10:52:45.215] |  :  .  |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:45.215] |  :  .  |  :  .  Using MultisessionFutureBackend ... done
[10:52:45.216] |  :  .  |  :  run() for Future (‘MultisessionFuture’) ... done
[10:52:45.216] |  :  .  |  :  getGlobalsAndPackages() ...
[10:52:45.216] |  :  .  |  :  .  Searching for globals ...
[10:52:45.218] |  :  .  |  :  .  |  globals found: [6] ‘{’, ‘if’, ‘==’, ‘%%’, ‘ii’, ‘stop’
[10:52:45.218] |  :  .  |  :  .  Searching for globals ... DONE
[10:52:45.218] |  :  .  |  :  .  Resolving globals: FALSE
[10:52:45.218] |  :  .  |  :  .  Search for packages associated with the globals ...
[10:52:45.218] |  :  .  |  :  .  |  Packages associated with globals: [1] ‘base’
[10:52:45.219] |  :  .  |  :  .  |  Packages: [1] ‘base’
[10:52:45.219] |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:52:45.219] |  :  .  |  :  .  Packages after dropping 'base': [0] 
[10:52:45.219] |  :  .  |  :  .  globals: [1] ‘ii’
[10:52:45.219] |  :  .  |  :  .  packages: [0] 
[10:52:45.219] |  :  .  |  :  getGlobalsAndPackages() ... done
[10:52:45.219] |  :  .  |  :  run() for Future (‘Future’) ...
[10:52:45.220] |  :  .  |  :  .  state: ‘created’
[10:52:45.220] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:45.220] |  :  .  |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:45.220] |  :  .  |  :  .  Using MultisessionFutureBackend ...
[10:52:45.220] |  :  .  |  :  .  |  Launching futures ...
[10:52:45.220] |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:52:45.220] |  :  .  |  :  .  |  :  .  Workers: [n=2]
[10:52:45.220] |  :  .  |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:45.223] |  :  .  |  :  .  |  :  .  FutureRegistry: ‘workers-f8b4ed0bd54220608f2f0cb6472feaaa’
[10:52:45.224] |  :  .  |  :  .  |  :  .  requestWorker() ...
[10:52:45.224] |  :  .  |  :  .  |  :  .  |  requestNode() ...
[10:52:45.224] |  :  .  |  :  .  |  :  .  |  :  Number of workers: 2
[10:52:45.224] |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:52:45.224] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ...
[10:52:45.224] |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:52:45.224] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 2
[10:52:45.224] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ... done
[10:52:45.224] |  :  .  |  :  .  |  :  .  |  :  .  Poll #1 (0): usedNodes() = 2, workers = 2
[10:52:45.235] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'collect-first', earlySignal = 1) ...
[10:52:45.235] |  :  .  |  :  .  |  :  .  |  :  .  |  collectValues('workers-f8b4ed0bd54220608f2f0cb6472feaaa', firstOnly = TRUE) ...
[10:52:45.235] |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:52:45.236] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:52:45.236] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:52:45.236] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:52:45.236] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:52:45.236] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:52:45.236] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  [1] TRUE
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  received data:
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  List of 5
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ type   : chr "VALUE"
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ value  :List of 13
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ value            : int 1
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ visible          : logi TRUE
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ stdout           : chr ""
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ conditions       : list()
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ rng              : logi FALSE
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseConnections:List of 3
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ added   : NULL
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ removed : NULL
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ replaced: NULL
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseDevices    : NULL
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:45"
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:45"
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ session_uuid     : chr "85991406d0f0e3f089fc90593b6cf225"
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ pid   : int 69323
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:44"
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ random: int 2147483647
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ r_info           :List of 4
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os           : chr "unix"
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ version          : chr "1.8"
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ success: logi TRUE
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.005 0 0.005 0 0
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:45.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ tag    : NULL
[10:52:45.247] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Received FutureResult
[10:52:45.247] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'remove', earlySignal = 0) ...
[10:52:45.247] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Removed future from position #1
[10:52:45.247] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:52:45.247] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'remove', earlySignal = 0) ... done
[10:52:45.247] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Erased future from future backend
[10:52:45.248] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:45.248] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:52:45.248] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:52:45.248] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:45.248] |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:52:45.248] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Future at position #1 is resolved ...
[10:52:45.248] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:45.248] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:45.248] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:45.248] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:45.248] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:45.249] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:45.249] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Future at position #1 is resolved ... done
[10:52:45.249] |  :  .  |  :  .  |  :  .  |  :  .  |  collectValues('workers-f8b4ed0bd54220608f2f0cb6472feaaa', firstOnly = TRUE) ... done
[10:52:45.249] |  :  .  |  :  .  |  :  .  |  :  .  |  Early signaling of 2 future candidates ...
[10:52:45.249] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of futures with early signaling requested: 0
[10:52:45.249] |  :  .  |  :  .  |  :  .  |  :  .  |  Early signaling of 2 future candidates ... done
[10:52:45.249] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 2
[10:52:45.249] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'collect-first', earlySignal = 1) ... done
[10:52:45.249] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ...
[10:52:45.250] |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:52:45.250] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:52:45.250] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ... done
[10:52:45.250] |  :  .  |  :  .  |  :  .  |  :  .  Total time: 0.0253582000732422
[10:52:45.250] |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:52:45.250] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ...
[10:52:45.250] |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:52:45.250] |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:52:45.250] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ... done
[10:52:45.250] |  :  .  |  :  .  |  :  .  |  :  Index of first available worker: 1
[10:52:45.250] |  :  .  |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:52:45.333] |  :  .  |  :  .  |  :  .  |  :  .  Worker is functional
[10:52:45.334] |  :  .  |  :  .  |  :  .  |  :  requestNode() ... done
[10:52:45.334] |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:45.334] |  :  .  |  :  .  |  :  .  |  requestWorker() ... done
[10:52:45.335] |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:52:45.335] |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:52:45.335] |  :  .  |  :  .  |  :  .  |  launchFuture() ...
[10:52:45.336] |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:45.336] |  :  .  |  :  .  |  :  .  |  :  getFutureData() ...
[10:52:45.336] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:52:45.336] |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:52:45.336] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:52:45.336] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:52:45.337] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:52:45.337] |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:52:45.337] |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:45.337] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:52:45.338] |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:45.338] |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:52:45.338] |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:52:45.338] |  :  .  |  :  .  |  :  .  |  :  getFutureData() ... done
[10:52:45.339] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'add', earlySignal = 0) ...
[10:52:45.339] |  :  .  |  :  .  |  :  .  |  :  .  Appended future to position #2
[10:52:45.339] |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 2
[10:52:45.339] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'add', earlySignal = 0) ... done
[10:52:45.339] |  :  .  |  :  .  |  :  .  |  launchFuture() ... done
[10:52:45.340] |  :  .  |  :  .  |  :  .  |  MultisessionFuture started
[10:52:45.340] |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:52:45.340] |  :  .  |  :  .  |  :  Launching futures ... done
[10:52:45.340] |  :  .  |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:45.340] |  :  .  |  :  .  |  Using MultisessionFutureBackend ... done
[10:52:45.341] |  :  .  |  :  .  run() for Future (‘MultisessionFuture’) ... done
[10:52:45.341] |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:45.341] |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:45.341] |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:45.342] |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:45.342] |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:45.342] |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:45.342] |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:45.343] |  :  .  |  :  .  |  assertValidConnection() ...
[10:52:45.343] |  :  .  |  :  .  |  :  cluster node index: 2
[10:52:45.343] |  :  .  |  :  .  |  assertValidConnection() ... done
[10:52:45.343] |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:52:45.344] |  :  .  |  :  .  |  :  cluster node index: 2
[10:52:45.344] |  :  .  |  :  .  |  :  [1] TRUE
[10:52:45.344] |  :  .  |  :  .  |  :  received data:
[10:52:45.345] |  :  .  |  :  .  |  :  List of 5
[10:52:45.345] |  :  .  |  :  .  |  :   $ type   : chr "VALUE"
[10:52:45.345] |  :  .  |  :  .  |  :   $ value  :List of 13
[10:52:45.345] |  :  .  |  :  .  |  :    ..$ value            : NULL
[10:52:45.345] |  :  .  |  :  .  |  :    ..$ visible          : logi TRUE
[10:52:45.345] |  :  .  |  :  .  |  :    ..$ stdout           : chr ""
[10:52:45.345] |  :  .  |  :  .  |  :    ..$ conditions       :List of 1
[10:52:45.345] |  :  .  |  :  .  |  :    .. ..$ :List of 5
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. ..$ condition:List of 2
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. ..$ message: chr "Woops!"
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. ..$ call   : language eval(quote({     { ...
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. ..$ calls    :List of 10
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval(expr, envir = globalenv())
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval(expr, envir = globalenv())
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. ..$ : language local({     { ...
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval.parent(substitute(eval(quote(expr), envir)))
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval(expr, p)
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval(expr, p)
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval(quote({     { ...
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval(quote({     { ...
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. ..$ : language stop("Woops!")
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval(quote({     { ...
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. ..$ session  :List of 6
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. ..$ r         :List of 14
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. .. ..$ platform      : chr "x86_64-pc-linux-gnu"
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. .. ..$ arch          : chr "x86_64"
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. .. ..$ os            : chr "linux-gnu"
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. .. ..$ system        : chr "x86_64, linux-gnu"
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. .. ..$ status        : chr ""
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. .. ..$ major         : chr "4"
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. .. ..$ minor         : chr "5.0"
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. .. ..$ year          : chr "2025"
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. .. ..$ month         : chr "04"
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. .. ..$ day           : chr "11"
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. .. ..$ svn rev       : chr "88135"
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. .. ..$ language      : chr "R"
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. .. ..$ version.string: chr "R version 4.5.0 (2025-04-11)"
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. .. ..$ nickname      : chr "How About a Twenty-Six"
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. ..$ locale    : chr "LC_CTYPE=en_US.UTF-8;LC_NUMERIC=C;LC_TIME=en_US.UTF-8;LC_COLLATE=en_US.UTF-8;LC_MONETARY=en_US.UTF-8;LC_MESSAGE"| __truncated__
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. ..$ rngkind   : chr [1:3] "Mersenne-Twister" "Inversion" "Rejection"
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. ..$ namespaces: chr [1:16] "compiler" "parallelly" "graphics" "tools" ...
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. ..$ search    : chr [1:10] ".GlobalEnv" "package:future" "package:stats" "package:graphics" ...
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. ..$ system    : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. ..$ timestamp: POSIXct[1:1], format: "2025-05-06 10:52:45"
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. ..$ signaled : int 0
[10:52:45.345] |  :  .  |  :  .  |  :    ..$ rng              : logi FALSE
[10:52:45.345] |  :  .  |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:52:45.345] |  :  .  |  :  .  |  :    ..$ misuseConnections:List of 3
[10:52:45.345] |  :  .  |  :  .  |  :    .. ..$ added   : NULL
[10:52:45.345] |  :  .  |  :  .  |  :    .. ..$ removed : NULL
[10:52:45.345] |  :  .  |  :  .  |  :    .. ..$ replaced: NULL
[10:52:45.345] |  :  .  |  :  .  |  :    ..$ misuseDevices    : NULL
[10:52:45.345] |  :  .  |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:45"
[10:52:45.345] |  :  .  |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:45"
[10:52:45.345] |  :  .  |  :  .  |  :    ..$ session_uuid     : chr "51184d42ba13fc91ce10f5da9c7986d6"
[10:52:45.345] |  :  .  |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. ..$ pid   : int 69322
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:45"
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:52:45.345] |  :  .  |  :  .  |  :    ..$ r_info           :List of 4
[10:52:45.345] |  :  .  |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:45.345] |  :  .  |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:52:45.345] |  :  .  |  :  .  |  :    .. ..$ os           : chr "unix"
[10:52:45.345] |  :  .  |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:52:45.345] |  :  .  |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:52:45.345] |  :  .  |  :  .  |  :    ..$ version          : chr "1.8"
[10:52:45.345] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:52:45.345] |  :  .  |  :  .  |  :   $ success: logi TRUE
[10:52:45.345] |  :  .  |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.057 0.002 0.059 0 0
[10:52:45.345] |  :  .  |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:45.345] |  :  .  |  :  .  |  :   $ tag    : NULL
[10:52:45.369] |  :  .  |  :  .  |  :  Received FutureResult
[10:52:45.369] |  :  .  |  :  .  |  :  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'remove', earlySignal = 0) ...
[10:52:45.369] |  :  .  |  :  .  |  :  .  Removed future from position #1
[10:52:45.369] |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:52:45.369] |  :  .  |  :  .  |  :  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'remove', earlySignal = 0) ... done
[10:52:45.369] |  :  .  |  :  .  |  :  Erased future from future backend
[10:52:45.370] |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:52:45.370] |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:52:45.370] |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:52:45.370] |  :  .  |  :  .  |  :  signalConditions() ...
[10:52:45.370] |  :  .  |  :  .  |  :  .  include = ‘immediateCondition’
[10:52:45.370] |  :  .  |  :  .  |  :  .  exclude = 
[10:52:45.370] |  :  .  |  :  .  |  :  .  resignal = FALSE
[10:52:45.370] |  :  .  |  :  .  |  :  .  Number of conditions: 1
[10:52:45.371] |  :  .  |  :  .  |  :  signalConditions() ... done
[10:52:45.371] |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:45.371] |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:45.371] |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:45.371] |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:45.371] |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:45.371] |  :  .  |  :  .  signalConditions() ...
[10:52:45.371] |  :  .  |  :  .  |  include = ‘immediateCondition’
[10:52:45.372] |  :  .  |  :  .  |  exclude = 
[10:52:45.372] |  :  .  |  :  .  |  resignal = FALSE
[10:52:45.372] |  :  .  |  :  .  |  Number of conditions: 1
[10:52:45.372] |  :  .  |  :  .  signalConditions() ... done
[10:52:45.372] |  :  .  |  :  .  Future state: ‘finished’
[10:52:45.372] |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:45.372] |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:45.372] |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:45.372] |  :  .  |  :  .  signalConditions() ...
[10:52:45.372] |  :  .  |  :  .  |  include = ‘condition’
[10:52:45.373] |  :  .  |  :  .  |  exclude = ‘immediateCondition’
[10:52:45.373] |  :  .  |  :  .  |  resignal = TRUE
[10:52:45.373] |  :  .  |  :  .  |  Number of conditions: 1
[10:52:45.373] |  :  .  |  :  .  |  Condition #1: ‘simpleError’, ‘error’, ‘condition’
[10:52:45.373] |  :  .  |  :  .  signalConditions() ... done
[10:52:45.373] |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:45.373] |  :  .  |  :  .  |  assertValidConnection() ...
[10:52:45.374] |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:45.374] |  :  .  |  :  .  |  assertValidConnection() ... done
[10:52:45.374] |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:52:45.374] |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:45.384] |  :  .  |  :  .  |  :  [1] TRUE
[10:52:45.384] |  :  .  |  :  .  |  :  received data:
[10:52:45.384] |  :  .  |  :  .  |  :  List of 5
[10:52:45.384] |  :  .  |  :  .  |  :   $ type   : chr "VALUE"
[10:52:45.384] |  :  .  |  :  .  |  :   $ value  :List of 13
[10:52:45.384] |  :  .  |  :  .  |  :    ..$ value            : int 3
[10:52:45.384] |  :  .  |  :  .  |  :    ..$ visible          : logi TRUE
[10:52:45.384] |  :  .  |  :  .  |  :    ..$ stdout           : chr ""
[10:52:45.384] |  :  .  |  :  .  |  :    ..$ conditions       : list()
[10:52:45.384] |  :  .  |  :  .  |  :    ..$ rng              : logi FALSE
[10:52:45.384] |  :  .  |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:52:45.384] |  :  .  |  :  .  |  :    ..$ misuseConnections:List of 3
[10:52:45.384] |  :  .  |  :  .  |  :    .. ..$ added   : NULL
[10:52:45.384] |  :  .  |  :  .  |  :    .. ..$ removed : NULL
[10:52:45.384] |  :  .  |  :  .  |  :    .. ..$ replaced: NULL
[10:52:45.384] |  :  .  |  :  .  |  :    ..$ misuseDevices    : NULL
[10:52:45.384] |  :  .  |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:45"
[10:52:45.384] |  :  .  |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:45"
[10:52:45.384] |  :  .  |  :  .  |  :    ..$ session_uuid     : chr "85991406d0f0e3f089fc90593b6cf225"
[10:52:45.384] |  :  .  |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:52:45.384] |  :  .  |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:45.384] |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:45.384] |  :  .  |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:45.384] |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:45.384] |  :  .  |  :  .  |  :    .. .. ..$ pid   : int 69323
[10:52:45.384] |  :  .  |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:44"
[10:52:45.384] |  :  .  |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:52:45.384] |  :  .  |  :  .  |  :    ..$ r_info           :List of 4
[10:52:45.384] |  :  .  |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:45.384] |  :  .  |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:52:45.384] |  :  .  |  :  .  |  :    .. ..$ os           : chr "unix"
[10:52:45.384] |  :  .  |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:52:45.384] |  :  .  |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:52:45.384] |  :  .  |  :  .  |  :    ..$ version          : chr "1.8"
[10:52:45.384] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:52:45.384] |  :  .  |  :  .  |  :   $ success: logi TRUE
[10:52:45.384] |  :  .  |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[10:52:45.384] |  :  .  |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:45.384] |  :  .  |  :  .  |  :   $ tag    : NULL
[10:52:45.399] |  :  .  |  :  .  |  :  Received FutureResult
[10:52:45.399] |  :  .  |  :  .  |  :  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'remove', earlySignal = 0) ...
[10:52:45.399] |  :  .  |  :  .  |  :  .  Removed future from position #1
[10:52:45.399] |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:52:45.399] |  :  .  |  :  .  |  :  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'remove', earlySignal = 0) ... done
[10:52:45.400] |  :  .  |  :  .  |  :  Erased future from future backend
[10:52:45.400] |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:52:45.400] |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:52:45.400] |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:52:45.400] |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:45.400] |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:45.400] |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:45.400] |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:45.400] |  :  .  |  :  .  result() for ClusterFuture ... done
Warning in get(var, envir = x, inherits = FALSE) :
  restarting interrupted promise evaluation
[10:52:45.401] |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:45.401] |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:45.401] |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:45.401] |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:45.401] |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:45.401] |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:45.401] |  :  .  |  :  .  signalConditions() ...
[10:52:45.401] |  :  .  |  :  .  |  include = ‘immediateCondition’
[10:52:45.402] |  :  .  |  :  .  |  exclude = 
[10:52:45.402] |  :  .  |  :  .  |  resignal = FALSE
[10:52:45.402] |  :  .  |  :  .  |  Number of conditions: 1
[10:52:45.402] |  :  .  |  :  .  signalConditions() ... done
[10:52:45.402] |  :  .  |  :  .  Future state: ‘finished’
[10:52:45.402] |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:45.402] |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:45.402] |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:45.402] |  :  .  |  :  .  signalConditions() ...
[10:52:45.402] |  :  .  |  :  .  |  include = ‘condition’
[10:52:45.403] |  :  .  |  :  .  |  exclude = ‘immediateCondition’
[10:52:45.403] |  :  .  |  :  .  |  resignal = TRUE
[10:52:45.403] |  :  .  |  :  .  |  Number of conditions: 1
[10:52:45.403] |  :  .  |  :  .  |  Condition #1: ‘simpleError’, ‘error’, ‘condition’
[10:52:45.403] |  :  .  |  :  .  signalConditions() ... done
Warning in get(var, envir = x, inherits = FALSE) :
  restarting interrupted promise evaluation
[10:52:45.403] |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:45.403] |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:45.403] |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:45.404] |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:45.404] |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:45.404] |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:45.404] |  :  .  |  :  .  signalConditions() ...
[10:52:45.404] |  :  .  |  :  .  |  include = ‘immediateCondition’
[10:52:45.404] |  :  .  |  :  .  |  exclude = 
[10:52:45.404] |  :  .  |  :  .  |  resignal = FALSE
[10:52:45.404] |  :  .  |  :  .  |  Number of conditions: 1
[10:52:45.404] |  :  .  |  :  .  signalConditions() ... done
[10:52:45.404] |  :  .  |  :  .  Future state: ‘finished’
[10:52:45.405] |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:45.405] |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:45.405] |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:45.405] |  :  .  |  :  .  signalConditions() ...
[10:52:45.405] |  :  .  |  :  .  |  include = ‘condition’
[10:52:45.407] |  :  .  |  :  .  |  exclude = ‘immediateCondition’
[10:52:45.407] |  :  .  |  :  .  |  resignal = TRUE
[10:52:45.407] |  :  .  |  :  .  |  Number of conditions: 1
[10:52:45.407] |  :  .  |  :  .  |  Condition #1: ‘simpleError’, ‘error’, ‘condition’
[10:52:45.407] |  :  .  |  :  .  signalConditions() ... done
** Future evaluation with a poor-man's "progress bar"
[10:52:45.407] |  :  .  |  :  .  getGlobalsAndPackages() ...
[10:52:45.407] |  :  .  |  :  .  |  Searching for globals ...
[10:52:45.409] |  :  .  |  :  .  |  :  globals found: [4] ‘{’, ‘cat’, ‘for’, ‘:’
[10:52:45.410] |  :  .  |  :  .  |  Searching for globals ... DONE
[10:52:45.410] |  :  .  |  :  .  |  Resolving globals: FALSE
[10:52:45.410] |  :  .  |  :  .  |  Search for packages associated with the globals ...
[10:52:45.410] |  :  .  |  :  .  |  :  Packages associated with globals: [1] ‘base’
[10:52:45.410] |  :  .  |  :  .  |  :  Packages: [1] ‘base’
[10:52:45.410] |  :  .  |  :  .  |  Search for packages associated with the globals ... DONE
[10:52:45.411] |  :  .  |  :  .  |  Packages after dropping 'base': [0] 
[10:52:45.411] |  :  .  |  :  .  |  globals: [0] 
[10:52:45.411] |  :  .  |  :  .  |  packages: [0] 
[10:52:45.411] |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:52:45.411] |  :  .  |  :  .  run() for Future (‘Future’) ...
[10:52:45.411] |  :  .  |  :  .  |  state: ‘created’
[10:52:45.411] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:45.411] |  :  .  |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:45.411] |  :  .  |  :  .  |  Using MultisessionFutureBackend ...
[10:52:45.412] |  :  .  |  :  .  |  :  Launching futures ...
[10:52:45.412] |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:52:45.412] |  :  .  |  :  .  |  :  .  |  Workers: [n=2]
[10:52:45.412] |  :  .  |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:45.413] |  :  .  |  :  .  |  :  .  |  FutureRegistry: ‘workers-f8b4ed0bd54220608f2f0cb6472feaaa’
[10:52:45.414] |  :  .  |  :  .  |  :  .  |  requestWorker() ...
[10:52:45.414] |  :  .  |  :  .  |  :  .  |  :  requestNode() ...
[10:52:45.414] |  :  .  |  :  .  |  :  .  |  :  .  Number of workers: 2
[10:52:45.414] |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ...
[10:52:45.414] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ...
[10:52:45.414] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:52:45.414] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:52:45.414] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ... done
[10:52:45.414] |  :  .  |  :  .  |  :  .  |  :  .  |  Total time: 0
[10:52:45.414] |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ... done
[10:52:45.415] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ...
[10:52:45.415] |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:52:45.415] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:45.415] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ... done
[10:52:45.415] |  :  .  |  :  .  |  :  .  |  :  .  Index of first available worker: 1
[10:52:45.415] |  :  .  |  :  .  |  :  .  |  :  .  Validate that the worker is functional ...
[10:52:45.495] |  :  .  |  :  .  |  :  .  |  :  .  |  Worker is functional
[10:52:45.496] |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ... done
[10:52:45.496] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:45.496] |  :  .  |  :  .  |  :  .  |  :  requestWorker() ... done
[10:52:45.496] |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ...
[10:52:45.496] |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:52:45.497] |  :  .  |  :  .  |  :  .  |  :  launchFuture() ...
[10:52:45.497] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:45.497] |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ...
[10:52:45.497] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ...
[10:52:45.497] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:52:45.497] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ... done
[10:52:45.497] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ...
[10:52:45.497] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ... done
[10:52:45.497] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ...
[10:52:45.498] |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:45.498] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:52:45.498] |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:45.498] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:52:45.498] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ... done
[10:52:45.498] |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ... done
[10:52:45.498] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'add', earlySignal = 0) ...
[10:52:45.499] |  :  .  |  :  .  |  :  .  |  :  .  |  Appended future to position #1
[10:52:45.499] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:52:45.499] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'add', earlySignal = 0) ... done
[10:52:45.499] |  :  .  |  :  .  |  :  .  |  :  launchFuture() ... done
[10:52:45.499] |  :  .  |  :  .  |  :  .  |  :  MultisessionFuture started
[10:52:45.499] |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:52:45.499] |  :  .  |  :  .  |  :  .  Launching futures ... done
[10:52:45.499] |  :  .  |  :  .  |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:45.499] |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ... done
[10:52:45.499] |  :  .  |  :  .  |  run() for Future (‘MultisessionFuture’) ... done
** Collecting results
v1 = 1
v2 = 2
Warning in sprintf(...) : restarting interrupted promise evaluation
[10:52:45.500] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:45.500] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:52:45.500] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:52:45.500] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:45.500] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:52:45.500] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:52:45.500] |  :  .  |  :  .  |  signalConditions() ...
[10:52:45.500] |  :  .  |  :  .  |  :  include = ‘immediateCondition’
[10:52:45.501] |  :  .  |  :  .  |  :  exclude = 
[10:52:45.501] |  :  .  |  :  .  |  :  resignal = FALSE
[10:52:45.501] |  :  .  |  :  .  |  :  Number of conditions: 1
[10:52:45.501] |  :  .  |  :  .  |  signalConditions() ... done
[10:52:45.501] |  :  .  |  :  .  |  Future state: ‘finished’
[10:52:45.501] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:45.501] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:52:45.501] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:52:45.501] |  :  .  |  :  .  |  signalConditions() ...
[10:52:45.501] |  :  .  |  :  .  |  :  include = ‘condition’
[10:52:45.502] |  :  .  |  :  .  |  :  exclude = ‘immediateCondition’
[10:52:45.502] |  :  .  |  :  .  |  :  resignal = TRUE
[10:52:45.502] |  :  .  |  :  .  |  :  Number of conditions: 1
[10:52:45.502] |  :  .  |  :  .  |  :  Condition #1: ‘simpleError’, ‘error’, ‘condition’
[10:52:45.502] |  :  .  |  :  .  |  signalConditions() ... done
v3: <simpleError> (as expect)
[10:52:45.502] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:45.502] |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:52:45.502] |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:45.503] |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:52:45.503] |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:52:45.503] |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:45.542] |  :  .  |  :  .  |  :  .  [1] TRUE
[10:52:45.543] |  :  .  |  :  .  |  :  .  received data:
[10:52:45.543] |  :  .  |  :  .  |  :  .  List of 5
[10:52:45.543] |  :  .  |  :  .  |  :  .   $ type   : chr "VALUE"
[10:52:45.543] |  :  .  |  :  .  |  :  .   $ value  :List of 13
[10:52:45.543] |  :  .  |  :  .  |  :  .    ..$ value            : num 4
[10:52:45.543] |  :  .  |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:52:45.543] |  :  .  |  :  .  |  :  .    ..$ stdout           : chr "Processing: .......... [100%]\n"
[10:52:45.543] |  :  .  |  :  .  |  :  .    ..$ conditions       : list()
[10:52:45.543] |  :  .  |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:52:45.543] |  :  .  |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:52:45.543] |  :  .  |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:52:45.543] |  :  .  |  :  .  |  :  .    .. ..$ added   : NULL
[10:52:45.543] |  :  .  |  :  .  |  :  .    .. ..$ removed : NULL
[10:52:45.543] |  :  .  |  :  .  |  :  .    .. ..$ replaced: NULL
[10:52:45.543] |  :  .  |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:52:45.543] |  :  .  |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:45"
[10:52:45.543] |  :  .  |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:45"
[10:52:45.543] |  :  .  |  :  .  |  :  .    ..$ session_uuid     : chr "85991406d0f0e3f089fc90593b6cf225"
[10:52:45.543] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:52:45.543] |  :  .  |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:45.543] |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:45.543] |  :  .  |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:45.543] |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:45.543] |  :  .  |  :  .  |  :  .    .. .. ..$ pid   : int 69323
[10:52:45.543] |  :  .  |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:44"
[10:52:45.543] |  :  .  |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:52:45.543] |  :  .  |  :  .  |  :  .    ..$ r_info           :List of 4
[10:52:45.543] |  :  .  |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:45.543] |  :  .  |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:52:45.543] |  :  .  |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:52:45.543] |  :  .  |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:52:45.543] |  :  .  |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:52:45.543] |  :  .  |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:52:45.543] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:52:45.543] |  :  .  |  :  .  |  :  .   $ success: logi TRUE
[10:52:45.543] |  :  .  |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.003 0.001 0.003 0 0
[10:52:45.543] |  :  .  |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:45.543] |  :  .  |  :  .  |  :  .   $ tag    : NULL
[10:52:45.553] |  :  .  |  :  .  |  :  .  Received FutureResult
[10:52:45.553] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'remove', earlySignal = 0) ...
[10:52:45.553] |  :  .  |  :  .  |  :  .  |  Removed future from position #1
[10:52:45.553] |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:45.553] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'remove', earlySignal = 0) ... done
[10:52:45.553] |  :  .  |  :  .  |  :  .  Erased future from future backend
[10:52:45.554] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:45.554] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:45.554] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:45.554] |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:45.554] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:52:45.554] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:45.554] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:52:45.554] |  :  .  |  :  .  |  result() for ClusterFuture ... done
Processing: .......... [100%]
v4 = 4
** Left-to-right and right-to-left future assignments
[10:52:45.555] |  :  .  |  :  .  |  getGlobalsAndPackages() ...
[10:52:45.555] |  :  .  |  :  .  |  :  Searching for globals ...
[10:52:45.555] |  :  .  |  :  .  |  :  .  globals found: [0] 
[10:52:45.555] |  :  .  |  :  .  |  :  Searching for globals ... DONE
[10:52:45.555] |  :  .  |  :  .  |  :  globals: [0] <none>
[10:52:45.555] |  :  .  |  :  .  |  :  packages: [0] <none>
[10:52:45.555] |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:52:45.556] |  :  .  |  :  .  |  run() for Future (‘Future’) ...
[10:52:45.556] |  :  .  |  :  .  |  :  state: ‘created’
[10:52:45.556] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:45.556] |  :  .  |  :  .  |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:45.556] |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ...
[10:52:45.556] |  :  .  |  :  .  |  :  .  Launching futures ...
[10:52:45.556] |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:52:45.556] |  :  .  |  :  .  |  :  .  |  :  Workers: [n=2]
[10:52:45.557] |  :  .  |  :  .  |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:45.558] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry: ‘workers-f8b4ed0bd54220608f2f0cb6472feaaa’
[10:52:45.558] |  :  .  |  :  .  |  :  .  |  :  requestWorker() ...
[10:52:45.558] |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ...
[10:52:45.558] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of workers: 2
[10:52:45.559] |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ...
[10:52:45.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ...
[10:52:45.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:52:45.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:52:45.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ... done
[10:52:45.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Total time: 0
[10:52:45.559] |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ... done
[10:52:45.559] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ...
[10:52:45.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:52:45.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:52:45.559] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ... done
[10:52:45.560] |  :  .  |  :  .  |  :  .  |  :  .  |  Index of first available worker: 1
[10:52:45.560] |  :  .  |  :  .  |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:52:45.637] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Worker is functional
[10:52:45.637] |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ... done
[10:52:45.637] |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:52:45.638] |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ... done
[10:52:45.638] |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:52:45.638] |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:52:45.638] |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ...
[10:52:45.638] |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:52:45.638] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ...
[10:52:45.639] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ...
[10:52:45.639] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:45.639] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:52:45.639] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:52:45.639] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:52:45.639] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ...
[10:52:45.639] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:45.639] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:45.639] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:45.639] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:45.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:52:45.640] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ... done
[10:52:45.640] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'add', earlySignal = 0) ...
[10:52:45.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Appended future to position #1
[10:52:45.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:52:45.640] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'add', earlySignal = 0) ... done
[10:52:45.640] |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ... done
[10:52:45.640] |  :  .  |  :  .  |  :  .  |  :  .  MultisessionFuture started
[10:52:45.641] |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:52:45.641] |  :  .  |  :  .  |  :  .  |  Launching futures ... done
[10:52:45.641] |  :  .  |  :  .  |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:45.641] |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ... done
[10:52:45.641] |  :  .  |  :  .  |  :  run() for Future (‘MultisessionFuture’) ... done
[10:52:45.641] |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:52:45.641] |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:52:45.641] |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:52:45.642] |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:52:45.642] |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:52:45.642] |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:52:45.684] |  :  .  |  :  .  |  :  .  |  [1] TRUE
[10:52:45.684] |  :  .  |  :  .  |  :  .  |  received data:
[10:52:45.684] |  :  .  |  :  .  |  :  .  |  List of 5
[10:52:45.684] |  :  .  |  :  .  |  :  .  |   $ type   : chr "VALUE"
[10:52:45.684] |  :  .  |  :  .  |  :  .  |   $ value  :List of 13
[10:52:45.684] |  :  .  |  :  .  |  :  .  |    ..$ value            : num 1
[10:52:45.684] |  :  .  |  :  .  |  :  .  |    ..$ visible          : logi TRUE
[10:52:45.684] |  :  .  |  :  .  |  :  .  |    ..$ stdout           : chr ""
[10:52:45.684] |  :  .  |  :  .  |  :  .  |    ..$ conditions       : list()
[10:52:45.684] |  :  .  |  :  .  |  :  .  |    ..$ rng              : logi FALSE
[10:52:45.684] |  :  .  |  :  .  |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:52:45.684] |  :  .  |  :  .  |  :  .  |    ..$ misuseConnections:List of 3
[10:52:45.684] |  :  .  |  :  .  |  :  .  |    .. ..$ added   : NULL
[10:52:45.684] |  :  .  |  :  .  |  :  .  |    .. ..$ removed : NULL
[10:52:45.684] |  :  .  |  :  .  |  :  .  |    .. ..$ replaced: NULL
[10:52:45.684] |  :  .  |  :  .  |  :  .  |    ..$ misuseDevices    : NULL
[10:52:45.684] |  :  .  |  :  .  |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:45"
[10:52:45.684] |  :  .  |  :  .  |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:45"
[10:52:45.684] |  :  .  |  :  .  |  :  .  |    ..$ session_uuid     : chr "85991406d0f0e3f089fc90593b6cf225"
[10:52:45.684] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:52:45.684] |  :  .  |  :  .  |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:45.684] |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:45.684] |  :  .  |  :  .  |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:45.684] |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:45.684] |  :  .  |  :  .  |  :  .  |    .. .. ..$ pid   : int 69323
[10:52:45.684] |  :  .  |  :  .  |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:44"
[10:52:45.684] |  :  .  |  :  .  |  :  .  |    .. .. ..$ random: int 2147483647
[10:52:45.684] |  :  .  |  :  .  |  :  .  |    ..$ r_info           :List of 4
[10:52:45.684] |  :  .  |  :  .  |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:45.684] |  :  .  |  :  .  |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:52:45.684] |  :  .  |  :  .  |  :  .  |    .. ..$ os           : chr "unix"
[10:52:45.684] |  :  .  |  :  .  |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:52:45.684] |  :  .  |  :  .  |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:52:45.684] |  :  .  |  :  .  |  :  .  |    ..$ version          : chr "1.8"
[10:52:45.684] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:52:45.684] |  :  .  |  :  .  |  :  .  |   $ success: logi TRUE
[10:52:45.684] |  :  .  |  :  .  |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.002 0 0.003 0 0
[10:52:45.684] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:45.684] |  :  .  |  :  .  |  :  .  |   $ tag    : NULL
[10:52:45.695] |  :  .  |  :  .  |  :  .  |  Received FutureResult
[10:52:45.695] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'remove', earlySignal = 0) ...
[10:52:45.695] |  :  .  |  :  .  |  :  .  |  :  Removed future from position #1
[10:52:45.695] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:52:45.695] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'remove', earlySignal = 0) ... done
[10:52:45.695] |  :  .  |  :  .  |  :  .  |  Erased future from future backend
[10:52:45.695] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:45.695] |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:52:45.695] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:52:45.695] |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:45.696] |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:52:45.696] |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:52:45.696] |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:52:45.696] |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
c = 1
[10:52:45.696] |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
[10:52:45.696] |  :  .  |  :  .  |  :  .  Searching for globals ...
[10:52:45.697] |  :  .  |  :  .  |  :  .  |  globals found: [0] 
[10:52:45.697] |  :  .  |  :  .  |  :  .  Searching for globals ... DONE
[10:52:45.697] |  :  .  |  :  .  |  :  .  globals: [0] <none>
[10:52:45.697] |  :  .  |  :  .  |  :  .  packages: [0] <none>
[10:52:45.697] |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:52:45.697] |  :  .  |  :  .  |  :  run() for Future (‘Future’) ...
[10:52:45.697] |  :  .  |  :  .  |  :  .  state: ‘created’
[10:52:45.697] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:45.698] |  :  .  |  :  .  |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:45.698] |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ...
[10:52:45.698] |  :  .  |  :  .  |  :  .  |  Launching futures ...
[10:52:45.698] |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:52:45.698] |  :  .  |  :  .  |  :  .  |  :  .  Workers: [n=2]
[10:52:45.698] |  :  .  |  :  .  |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:45.700] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry: ‘workers-f8b4ed0bd54220608f2f0cb6472feaaa’
[10:52:45.700] |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ...
[10:52:45.700] |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ...
[10:52:45.700] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of workers: 2
[10:52:45.700] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:52:45.700] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ...
[10:52:45.700] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:52:45.700] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:45.700] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ... done
[10:52:45.700] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Total time: 0
[10:52:45.701] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:52:45.701] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ...
[10:52:45.701] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:52:45.701] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:52:45.701] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ... done
[10:52:45.701] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Index of first available worker: 1
[10:52:45.701] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:52:45.779] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Worker is functional
[10:52:45.779] |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ... done
[10:52:45.780] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:45.780] |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ... done
[10:52:45.780] |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:52:45.780] |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:52:45.780] |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ...
[10:52:45.780] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:45.780] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ...
[10:52:45.781] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:52:45.781] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:52:45.781] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:52:45.781] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:52:45.781] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:52:45.781] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:52:45.781] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:45.781] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:52:45.781] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:45.781] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:52:45.782] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:52:45.782] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ... done
[10:52:45.782] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'add', earlySignal = 0) ...
[10:52:45.782] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Appended future to position #1
[10:52:45.782] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:52:45.782] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'add', earlySignal = 0) ... done
[10:52:45.782] |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ... done
[10:52:45.783] |  :  .  |  :  .  |  :  .  |  :  .  |  MultisessionFuture started
[10:52:45.783] |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:52:45.783] |  :  .  |  :  .  |  :  .  |  :  Launching futures ... done
[10:52:45.783] |  :  .  |  :  .  |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:45.783] |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ... done
[10:52:45.783] |  :  .  |  :  .  |  :  .  run() for Future (‘MultisessionFuture’) ... done
[10:52:45.783] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:45.783] |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:52:45.783] |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:45.784] |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:52:45.784] |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:52:45.786] |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:45.828] |  :  .  |  :  .  |  :  .  |  :  [1] TRUE
[10:52:45.828] |  :  .  |  :  .  |  :  .  |  :  received data:
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :  List of 5
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :   $ type   : chr "VALUE"
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :   $ value  :List of 13
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :    ..$ value            : num 1
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :    ..$ visible          : logi TRUE
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :    ..$ stdout           : chr ""
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :    ..$ conditions       : list()
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :    ..$ rng              : logi FALSE
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :    ..$ misuseConnections:List of 3
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :    .. ..$ added   : NULL
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :    .. ..$ removed : NULL
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :    .. ..$ replaced: NULL
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :    ..$ misuseDevices    : NULL
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:45"
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:45"
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :    ..$ session_uuid     : chr "85991406d0f0e3f089fc90593b6cf225"
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ pid   : int 69323
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:44"
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :    ..$ r_info           :List of 4
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :    .. ..$ os           : chr "unix"
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :    ..$ version          : chr "1.8"
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :   $ success: logi TRUE
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.005 0 0.005 0 0
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:45.829] |  :  .  |  :  .  |  :  .  |  :   $ tag    : NULL
[10:52:45.839] |  :  .  |  :  .  |  :  .  |  :  Received FutureResult
[10:52:45.839] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'remove', earlySignal = 0) ...
[10:52:45.839] |  :  .  |  :  .  |  :  .  |  :  .  Removed future from position #1
[10:52:45.839] |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:52:45.839] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'remove', earlySignal = 0) ... done
[10:52:45.839] |  :  .  |  :  .  |  :  .  |  :  Erased future from future backend
[10:52:45.839] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:52:45.839] |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:52:45.840] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:52:45.840] |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:45.840] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:45.840] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:45.840] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:45.840] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
d = 1
** Nested future assignments
[10:52:45.840] |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ...
[10:52:45.840] |  :  .  |  :  .  |  :  .  |  Searching for globals ...
[10:52:45.844] |  :  .  |  :  .  |  :  .  |  :  globals found: [5] ‘{’, ‘<-’, ‘%<-%’, ‘%->%’, ‘+’
[10:52:45.844] |  :  .  |  :  .  |  :  .  |  Searching for globals ... DONE
[10:52:45.845] |  :  .  |  :  .  |  :  .  |  Resolving globals: FALSE
[10:52:45.845] |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ...
[10:52:45.845] |  :  .  |  :  .  |  :  .  |  :  Packages associated with globals: [2] ‘base’, ‘future’
[10:52:45.845] |  :  .  |  :  .  |  :  .  |  :  Packages: [2] ‘base’, ‘future’
[10:52:45.845] |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ... DONE
[10:52:45.845] |  :  .  |  :  .  |  :  .  |  Packages after dropping 'base': [1] ‘future’
[10:52:45.846] |  :  .  |  :  .  |  :  .  |  Packages after dropping non-attached packages: [1] ‘future’
[10:52:45.846] |  :  .  |  :  .  |  :  .  |  globals: [0] 
[10:52:45.846] |  :  .  |  :  .  |  :  .  |  packages: [1] ‘future’
[10:52:45.846] |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:52:45.846] |  :  .  |  :  .  |  :  .  run() for Future (‘Future’) ...
[10:52:45.846] |  :  .  |  :  .  |  :  .  |  state: ‘created’
[10:52:45.846] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:45.847] |  :  .  |  :  .  |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:45.847] |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ...
[10:52:45.847] |  :  .  |  :  .  |  :  .  |  :  Launching futures ...
[10:52:45.847] |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:52:45.847] |  :  .  |  :  .  |  :  .  |  :  .  |  Workers: [n=2]
[10:52:45.847] |  :  .  |  :  .  |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:45.849] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry: ‘workers-f8b4ed0bd54220608f2f0cb6472feaaa’
[10:52:45.849] |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ...
[10:52:45.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ...
[10:52:45.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of workers: 2
[10:52:45.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ...
[10:52:45.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ...
[10:52:45.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:52:45.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:52:45.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ... done
[10:52:45.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Total time: 0
[10:52:45.850] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ... done
[10:52:45.850] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ...
[10:52:45.850] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:52:45.850] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:45.850] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ... done
[10:52:45.850] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Index of first available worker: 1
[10:52:45.850] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Validate that the worker is functional ...
[10:52:45.928] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Worker is functional
[10:52:45.928] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ... done
[10:52:45.929] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:45.929] |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestWorker() ... done
[10:52:45.929] |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ...
[10:52:45.929] |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:52:45.929] |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ...
[10:52:45.929] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:45.930] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ...
[10:52:45.930] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ...
[10:52:45.930] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 1): ‘future’
[10:52:45.930] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ... done
[10:52:45.930] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ...
[10:52:45.930] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ... done
[10:52:45.930] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ...
[10:52:45.930] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:45.930] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:52:45.931] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:45.931] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:52:45.931] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ... done
[10:52:45.931] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ... done
[10:52:45.931] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'add', earlySignal = 0) ...
[10:52:45.931] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Appended future to position #1
[10:52:45.931] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:52:45.931] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'add', earlySignal = 0) ... done
[10:52:45.932] |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ... done
[10:52:45.932] |  :  .  |  :  .  |  :  .  |  :  .  |  :  MultisessionFuture started
[10:52:45.932] |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:52:45.932] |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ... done
[10:52:45.932] |  :  .  |  :  .  |  :  .  |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:45.932] |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ... done
[10:52:45.932] |  :  .  |  :  .  |  :  .  |  run() for Future (‘MultisessionFuture’) ... done
[10:52:45.932] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:45.932] |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:52:45.933] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:45.933] |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:52:45.933] |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:52:45.933] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .  [1] TRUE
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .  received data:
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .  List of 5
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .   $ type   : chr "VALUE"
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .   $ value  :List of 13
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .    ..$ value            : num 10
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .    ..$ stdout           : chr ""
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .    ..$ conditions       : list()
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ added   : NULL
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ removed : NULL
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ replaced: NULL
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:45"
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:46"
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .    ..$ session_uuid     : chr "85991406d0f0e3f089fc90593b6cf225"
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ pid   : int 69323
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:44"
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .    ..$ r_info           :List of 4
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .   $ success: logi TRUE
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.045 0 0.044 0 0
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:46.017] |  :  .  |  :  .  |  :  .  |  :  .   $ tag    : NULL
[10:52:46.028] |  :  .  |  :  .  |  :  .  |  :  .  Received FutureResult
[10:52:46.028] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'remove', earlySignal = 0) ...
[10:52:46.028] |  :  .  |  :  .  |  :  .  |  :  .  |  Removed future from position #1
[10:52:46.028] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:46.028] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'remove', earlySignal = 0) ... done
[10:52:46.028] |  :  .  |  :  .  |  :  .  |  :  .  Erased future from future backend
[10:52:46.028] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:46.028] |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:46.029] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:46.029] |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:46.029] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:52:46.029] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:46.029] |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:52:46.029] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
a = 10
[10:52:46.029] |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ...
[10:52:46.029] |  :  .  |  :  .  |  :  .  |  :  Searching for globals ...
[10:52:46.030] |  :  .  |  :  .  |  :  .  |  :  .  globals found: [3] ‘{’, ‘+’, ‘a’
[10:52:46.031] |  :  .  |  :  .  |  :  .  |  :  Searching for globals ... DONE
[10:52:46.031] |  :  .  |  :  .  |  :  .  |  :  Resolving globals: FALSE
[10:52:46.031] |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ...
[10:52:46.031] |  :  .  |  :  .  |  :  .  |  :  .  Packages associated with globals: [1] ‘base’
[10:52:46.031] |  :  .  |  :  .  |  :  .  |  :  .  Packages: [1] ‘base’
[10:52:46.031] |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ... DONE
[10:52:46.032] |  :  .  |  :  .  |  :  .  |  :  Packages after dropping 'base': [0] 
[10:52:46.032] |  :  .  |  :  .  |  :  .  |  :  globals: [1] ‘a’
[10:52:46.032] |  :  .  |  :  .  |  :  .  |  :  packages: [0] 
[10:52:46.032] |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:52:46.032] |  :  .  |  :  .  |  :  .  |  run() for Future (‘Future’) ...
[10:52:46.032] |  :  .  |  :  .  |  :  .  |  :  state: ‘created’
[10:52:46.032] |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.032] |  :  .  |  :  .  |  :  .  |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.033] |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ...
[10:52:46.033] |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ...
[10:52:46.033] |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:52:46.033] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Workers: [n=2]
[10:52:46.033] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:46.034] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry: ‘workers-f8b4ed0bd54220608f2f0cb6472feaaa’
[10:52:46.035] |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestWorker() ...
[10:52:46.035] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ...
[10:52:46.035] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of workers: 2
[10:52:46.035] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ...
[10:52:46.035] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ...
[10:52:46.035] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:52:46.035] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:52:46.035] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ... done
[10:52:46.035] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Total time: 0
[10:52:46.036] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ... done
[10:52:46.036] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ...
[10:52:46.036] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:52:46.036] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:52:46.036] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'list', earlySignal = 0) ... done
[10:52:46.036] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Index of first available worker: 1
[10:52:46.036] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:52:46.074] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Worker is functional
[10:52:46.074] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ... done
[10:52:46.074] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:52:46.074] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ... done
[10:52:46.074] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:52:46.075] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:52:46.075] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ...
[10:52:46.075] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:52:46.075] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ...
[10:52:46.075] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ...
[10:52:46.075] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:46.075] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:52:46.075] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:52:46.076] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:52:46.076] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ...
[10:52:46.076] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.076] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:46.076] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.076] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:46.076] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:52:46.076] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ... done
[10:52:46.077] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'add', earlySignal = 0) ...
[10:52:46.077] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Appended future to position #1
[10:52:46.077] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:52:46.077] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'add', earlySignal = 0) ... done
[10:52:46.077] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ... done
[10:52:46.077] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  MultisessionFuture started
[10:52:46.077] |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:52:46.077] |  :  .  |  :  .  |  :  .  |  :  .  |  Launching futures ... done
[10:52:46.077] |  :  .  |  :  .  |  :  .  |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:46.077] |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ... done
[10:52:46.078] |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘MultisessionFuture’) ... done
[10:52:46.078] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:52:46.078] |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:52:46.078] |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:52:46.078] |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:52:46.078] |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:52:46.079] |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:52:46.120] |  :  .  |  :  .  |  :  .  |  :  .  |  [1] TRUE
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |  received data:
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |  List of 5
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |   $ type   : chr "VALUE"
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |   $ value  :List of 13
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ value            : num 11
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ visible          : logi TRUE
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ stdout           : chr ""
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ conditions       : list()
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ rng              : logi FALSE
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseConnections:List of 3
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ added   : NULL
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ removed : NULL
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ replaced: NULL
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseDevices    : NULL
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:46"
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:46"
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ session_uuid     : chr "85991406d0f0e3f089fc90593b6cf225"
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ pid   : int 69323
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:44"
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ random: int 2147483647
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ r_info           :List of 4
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os           : chr "unix"
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ version          : chr "1.8"
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |   $ success: logi TRUE
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:46.121] |  :  .  |  :  .  |  :  .  |  :  .  |   $ tag    : NULL
[10:52:46.131] |  :  .  |  :  .  |  :  .  |  :  .  |  Received FutureResult
[10:52:46.131] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'remove', earlySignal = 0) ...
[10:52:46.131] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Removed future from position #1
[10:52:46.131] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:52:46.131] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-f8b4ed0bd54220608f2f0cb6472feaaa', action = 'remove', earlySignal = 0) ... done
[10:52:46.133] |  :  .  |  :  .  |  :  .  |  :  .  |  Erased future from future backend
[10:52:46.133] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:46.133] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:52:46.134] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:52:46.134] |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:46.134] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:52:46.134] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:52:46.134] |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:52:46.134] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
b = 11
*** %<-% with ‘multisession’ futures ... DONE
Testing with 2 cores ... DONE

> message("*** %<-% ... DONE")
*** %<-% ... DONE
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=2s, sys.self=0.1s, elapsed=3s, user.child=0.7s, sys.child=0.5s
Test ‘futureAssign_OP’ ... success
> 
