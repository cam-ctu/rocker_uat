
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script inst/testme/test-futureAssign_OP.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future:::testme("futureAssign_OP")
Test ‘futureAssign_OP’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future/testme/test-futureAssign_OP.R’

> library(future)
[08:08:05.965] Option 'future.startup.script': TRUE
[08:08:05.965] Future startup scripts considered: ‘.future.R’, ‘~/.future.R’
[08:08:05.966] Future startup scripts found: <none>

> message("*** %<-% ...")
*** %<-% ...

> for (cores in 1:availCores) {
+     message(sprintf("Testing with %d cores ...", cores))
+     options(mc.cores = cores)
+     for (strategy in supp .... [TRUNCATED] 
Testing with 1 cores ...
*** %<-% with ‘sequential’ futures ...
[08:08:06.006] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.006] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:08:06.006] | : all.equal() for FutureStrategyList ...
[08:08:06.006] | : . New stack:
[08:08:06.006] | : . List of 1
[08:08:06.006] | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.006] | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.006] | : .   ..- attr(*, "init")= logi TRUE
[08:08:06.006] | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.006] | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.006] | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.006] | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:06.006] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.010] | : . Old stack:
[08:08:06.011] | : . List of 1
[08:08:06.011] | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.011] | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.011] | : .   ..- attr(*, "init")= logi TRUE
[08:08:06.011] | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.011] | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.011] | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.011] | : .   ..- attr(*, "call")= language plan(sequential)
[08:08:06.011] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.013] | : . Not identical
[08:08:06.013] | : . all.equal() for future ...
[08:08:06.013] | : . ' List of 2
[08:08:06.013] | : . '  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.013] | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.013] | : . '   ..- attr(*, "init")= logi TRUE
[08:08:06.013] | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.013] | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.013] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.013] | : . '   ..- attr(*, "call")= language plan(strategy)
[08:08:06.013] | : . '  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.013] | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.013] | : . '   ..- attr(*, "init")= logi TRUE
[08:08:06.013] | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.013] | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.013] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.013] | : . '   ..- attr(*, "call")= language plan(sequential)
[08:08:06.017] | : . all.equal() for future ... done
[08:08:06.018] | : all.equal() for FutureStrategyList ... done
[08:08:06.018] | : plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:06.018] | : List of future strategies:
[08:08:06.018] | : 1. sequential:
[08:08:06.018] | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:06.018] | :    - tweaked: FALSE
[08:08:06.018] | :    - call: plan(sequential)
[08:08:06.018] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[08:08:06.019] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
** Future evaluation without globals
[08:08:06.020] future(..., label = NULL) ...
[08:08:06.020] | lazy: FALSE
[08:08:06.020] | stdout: TRUE
[08:08:06.020] | conditions: [n=1] ‘condition’
[08:08:06.020] | gc: FALSE
[08:08:06.020] | earlySignal: FALSE
[08:08:06.022] | getGlobalsAndPackages() ...
[08:08:06.022] | : Searching for globals ...
[08:08:06.033] | : . globals found: [2] ‘{’, ‘<-’
[08:08:06.033] | : Searching for globals ... done
[08:08:06.033] | : Resolving globals: FALSE
[08:08:06.034] | : Search for packages associated with the globals ...
[08:08:06.034] | : . Packages associated with globals: [1] ‘base’
[08:08:06.034] | : . Packages: [1] ‘base’
[08:08:06.034] | : Search for packages associated with the globals ... done
[08:08:06.034] | : Packages after dropping 'base': [0] 
[08:08:06.035] | : globals: [0] 
[08:08:06.035] | : packages: [0] 
[08:08:06.035] | getGlobalsAndPackages() ... done
[08:08:06.035] | run() for ‘Future’ (<unnamed-1>) ...
[08:08:06.035] | : state: ‘created’
[08:08:06.036] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.036] | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:06.036] | : . ' function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.036] | : . '  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.036] | : . '  - attr(*, "init")= logi TRUE
[08:08:06.036] | : . '  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.036] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.036] | : . '  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.036] | : . '  - attr(*, "call")= language plan(sequential)
[08:08:06.038] | : . ' init: TRUE
[08:08:06.038] | : . ' makeFutureBackend(<sequential>) ...
[08:08:06.038] | : . ' , Backend function: <‘NULL’>
[08:08:06.038] | : . ' , Evaluator tweak arguments: [n=0]
[08:08:06.038] | : . ' ,  list()
[08:08:06.039] | : . ' , Evaluator formal arguments: [n=2]
[08:08:06.039] | : . ' ,  list()
[08:08:06.039] | : . ' , Backend factory arguments: [n=2]
[08:08:06.039] | : . ' , Dotted pair list of 2
[08:08:06.039] | : . ' ,  $ gc         : logi FALSE
[08:08:06.039] | : . ' ,  $ earlySignal: logi FALSE
[08:08:06.040] | : . ' , Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:06.040] | : . ' makeFutureBackend(<sequential>) ... done
[08:08:06.040] | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:06.040] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.041] | : Using SequentialFutureBackend ...
[08:08:06.041] | : . Number of futures since start: 0 (0 created, 0 launched, 0 finished)
[08:08:06.041] | : . Launching futures ...
[08:08:06.041] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:06.041] | : . ' , getFutureData() ...
[08:08:06.041] | : . ' , ; getFutureCore() ...
[08:08:06.041] | : . ' , ; ` Packages needed by the future expression (n = 0): <none>
[08:08:06.042] | : . ' , ; getFutureCore() ... done
[08:08:06.042] | : . ' , ; getFutureCapture() ...
[08:08:06.042] | : . ' , ; getFutureCapture() ... done
[08:08:06.042] | : . ' , ; getFutureContext() ...
[08:08:06.042] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.042] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:06.042] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.042] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:06.043] | : . ' , ; getFutureContext() ... done
[08:08:06.043] | : . ' , getFutureData() ... done
[08:08:06.045] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.045] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:06.045] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.046] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.046] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:06.046] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:06.046] | : . ' , ; ` | New stack:
[08:08:06.046] | : . ' , ; ` | List of 1
[08:08:06.046] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.046] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.046] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:06.046] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.046] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.046] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.046] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.046] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.050] | : . ' , ; ` | Old stack:
[08:08:06.050] | : . ' , ; ` | List of 1
[08:08:06.050] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.050] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.050] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:06.050] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.050] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.050] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.050] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:06.050] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.050] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.050] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.050] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.053] | : . ' , ; ` | Not identical
[08:08:06.053] | : . ' , ; ` | all.equal() for future ...
[08:08:06.054] | : . ' , ; ` | : List of 2
[08:08:06.054] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.054] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.054] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:06.054] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.054] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.054] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.054] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.054] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.054] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.054] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:06.054] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.054] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.054] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.054] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:06.054] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.054] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.054] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.058] | : . ' , ; ` | all.equal() for future ... done
[08:08:06.059] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:06.059] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:06.059] | : . ' , ; ` List of future strategies:
[08:08:06.059] | : . ' , ; ` 1. sequential:
[08:08:06.059] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:06.059] | : . ' , ; `    - tweaked: FALSE
[08:08:06.059] | : . ' , ; `    - call: plan(sequential)
[08:08:06.059] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:06.059] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.061] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.061] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.062] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:06.062] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:06.062] | : . ' , ; ` | : New stack:
[08:08:06.062] | : . ' , ; ` | : List of 1
[08:08:06.062] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.062] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.062] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:06.062] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.062] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.062] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.062] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:06.062] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.062] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.062] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.062] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.065] | : . ' , ; ` | : Old stack:
[08:08:06.065] | : . ' , ; ` | : List of 1
[08:08:06.065] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.065] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.065] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:06.065] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.065] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.065] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.065] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:06.065] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.065] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.065] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.065] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.069] | : . ' , ; ` | : Identical
[08:08:06.069] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:06.069] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:06.070] | : . ' , ; ` | List of future strategies:
[08:08:06.070] | : . ' , ; ` | 1. sequential:
[08:08:06.070] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:06.070] | : . ' , ; ` |    - tweaked: FALSE
[08:08:06.070] | : . ' , ; ` |    - call: plan(sequential)
[08:08:06.070] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:06.070] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.070] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.073] | : . ' , SequentialFuture started (and completed)
[08:08:06.073] | : . ' , signalConditions() ...
[08:08:06.074] | : . ' , ; include = ‘immediateCondition’
[08:08:06.074] | : . ' , ; exclude = 
[08:08:06.074] | : . ' , ; resignal = FALSE
[08:08:06.074] | : . ' , ; Number of conditions: 6
[08:08:06.074] | : . ' , ;  int 6
[08:08:06.074] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.074] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.075] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.075] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.075] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.075] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.075] | : . ' , signalConditions() ... done
[08:08:06.075] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:06.075] | : . Launching futures ... done
[08:08:06.075] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:06.076] | : Using SequentialFutureBackend ... done
[08:08:06.076] | run() for ‘Future’ (<unnamed-1>) ... done
[08:08:06.076] future(..., label = NULL) ... done
[08:08:06.076] value() for SequentialFuture (<unnamed-1>) ...
[08:08:06.076] | signalConditions() ...
[08:08:06.076] | : include = ‘immediateCondition’
[08:08:06.077] | : exclude = 
[08:08:06.077] | : resignal = FALSE
[08:08:06.077] | : Number of conditions: 6
[08:08:06.077] | :  int 6
[08:08:06.077] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.077] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.077] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.078] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.078] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.078] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.078] | signalConditions() ... done
[08:08:06.078] | relay stdout ...
[08:08:06.078] | relay stdout ... done
[08:08:06.078] | check for misuse ...
[08:08:06.078] | check for misuse ... done
[08:08:06.078] | relay conditions ...
[08:08:06.078] | : Future state: ‘finished’
[08:08:06.079] | : signalConditions() ...
[08:08:06.079] | : . include = ‘condition’
[08:08:06.079] | : . exclude = ‘immediateCondition’
[08:08:06.079] | : . resignal = TRUE
[08:08:06.079] | : . Number of conditions: 6
[08:08:06.079] | : .  int 6
[08:08:06.079] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.080] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.044] | : . ' , attachPackages() ...
[08:08:06.080] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.080] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.044] | : . ' , ; packages: [n=1] ‘future’
[08:08:06.080] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.080] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.044] | : . ' , attachPackages() ... done
[08:08:06.080] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.080] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.044] | : . ' , attachPackages() ...
[08:08:06.080] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.080] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.045] | : . ' , ; packages: [n=0] 
[08:08:06.081] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.081] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.045] | : . ' , attachPackages() ... done
[08:08:06.081] | : signalConditions() ... done
[08:08:06.081] | relay conditions ... done
[08:08:06.081] value() for SequentialFuture (<unnamed-1>) ... done
** Future evaluation with globals
[08:08:06.081] future(..., label = NULL) ...
[08:08:06.081] | lazy: FALSE
[08:08:06.081] | stdout: TRUE
[08:08:06.082] | conditions: [n=1] ‘condition’
[08:08:06.082] | gc: FALSE
[08:08:06.082] | earlySignal: FALSE
[08:08:06.082] | getGlobalsAndPackages() ...
[08:08:06.082] | : Searching for globals ...
[08:08:06.087] | : . globals found: [3] ‘{’, ‘<-’, ‘a’
[08:08:06.087] | : Searching for globals ... done
[08:08:06.089] | : Resolving globals: FALSE
[08:08:06.089] | : Search for packages associated with the globals ...
[08:08:06.089] | : . Packages associated with globals: [1] ‘base’
[08:08:06.089] | : . Packages: [1] ‘base’
[08:08:06.089] | : Search for packages associated with the globals ... done
[08:08:06.089] | : Packages after dropping 'base': [0] 
[08:08:06.090] | : globals: [1] ‘a’
[08:08:06.090] | : packages: [0] 
[08:08:06.090] | getGlobalsAndPackages() ... done
[08:08:06.090] | run() for ‘Future’ (<unnamed-2>) ...
[08:08:06.090] | : state: ‘created’
[08:08:06.090] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.090] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.090] | : Using SequentialFutureBackend ...
[08:08:06.091] | : . Number of futures since start: 1 (1 created, 1 launched, 1 finished)
[08:08:06.091] | : . Launching futures ...
[08:08:06.091] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:06.091] | : . ' , getFutureData() ...
[08:08:06.091] | : . ' , ; getFutureCore() ...
[08:08:06.091] | : . ' , ; ` Packages needed by the future expression (n = 0): <none>
[08:08:06.091] | : . ' , ; getFutureCore() ... done
[08:08:06.091] | : . ' , ; getFutureCapture() ...
[08:08:06.091] | : . ' , ; getFutureCapture() ... done
[08:08:06.091] | : . ' , ; getFutureContext() ...
[08:08:06.092] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.092] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:06.092] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.092] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:06.092] | : . ' , ; getFutureContext() ... done
[08:08:06.092] | : . ' , getFutureData() ... done
[08:08:06.093] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.093] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:06.094] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.094] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.094] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:06.094] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:06.094] | : . ' , ; ` | New stack:
[08:08:06.094] | : . ' , ; ` | List of 1
[08:08:06.094] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.094] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.094] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:06.094] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.094] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.094] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.094] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.094] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.097] | : . ' , ; ` | Old stack:
[08:08:06.097] | : . ' , ; ` | List of 1
[08:08:06.097] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.097] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.097] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:06.097] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.097] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.097] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.097] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:06.097] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.097] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.097] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.097] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.100] | : . ' , ; ` | Not identical
[08:08:06.100] | : . ' , ; ` | all.equal() for future ...
[08:08:06.100] | : . ' , ; ` | : List of 2
[08:08:06.100] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.100] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.100] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:06.100] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.100] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.100] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.100] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.100] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.100] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.100] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:06.100] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.100] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.100] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.100] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:06.100] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.100] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.100] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.105] | : . ' , ; ` | all.equal() for future ... done
[08:08:06.105] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:06.105] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:06.105] | : . ' , ; ` List of future strategies:
[08:08:06.105] | : . ' , ; ` 1. sequential:
[08:08:06.105] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:06.105] | : . ' , ; `    - tweaked: FALSE
[08:08:06.105] | : . ' , ; `    - call: plan(sequential)
[08:08:06.106] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:06.106] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.106] | : . ' , assign_globals() ...
[08:08:06.106] | : . ' , List of 1
[08:08:06.106] | : . ' ,  $ a: num 2
[08:08:06.106] | : . ' ,  - attr(*, "where")=List of 1
[08:08:06.106] | : . ' ,   ..$ a:<environment: R_GlobalEnv> 
[08:08:06.106] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:06.106] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:06.106] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:06.106] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:06.109] | : . ' , - copied ‘a’ to environment
[08:08:06.110] | : . ' , assign_globals() ... done
[08:08:06.111] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.111] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.111] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:06.111] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:06.111] | : . ' , ; ` | : New stack:
[08:08:06.112] | : . ' , ; ` | : List of 1
[08:08:06.112] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.112] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.112] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:06.112] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.112] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.112] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.112] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:06.112] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.112] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.112] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.112] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.115] | : . ' , ; ` | : Old stack:
[08:08:06.115] | : . ' , ; ` | : List of 1
[08:08:06.115] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.115] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.115] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:06.115] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.115] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.115] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.115] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:06.115] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.115] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.115] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.115] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.118] | : . ' , ; ` | : Identical
[08:08:06.118] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:06.118] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:06.118] | : . ' , ; ` | List of future strategies:
[08:08:06.118] | : . ' , ; ` | 1. sequential:
[08:08:06.118] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:06.118] | : . ' , ; ` |    - tweaked: FALSE
[08:08:06.118] | : . ' , ; ` |    - call: plan(sequential)
[08:08:06.118] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:06.118] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.119] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.119] | : . ' , SequentialFuture started (and completed)
[08:08:06.119] | : . ' , signalConditions() ...
[08:08:06.119] | : . ' , ; include = ‘immediateCondition’
[08:08:06.119] | : . ' , ; exclude = 
[08:08:06.119] | : . ' , ; resignal = FALSE
[08:08:06.119] | : . ' , ; Number of conditions: 6
[08:08:06.119] | : . ' , ;  int 6
[08:08:06.120] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.120] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.120] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.120] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.120] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.120] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.120] | : . ' , signalConditions() ... done
[08:08:06.121] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:06.121] | : . Launching futures ... done
[08:08:06.121] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:06.121] | : Using SequentialFutureBackend ... done
[08:08:06.121] | run() for ‘Future’ (<unnamed-2>) ... done
[08:08:06.121] future(..., label = NULL) ... done
[08:08:06.121] value() for SequentialFuture (<unnamed-2>) ...
[08:08:06.121] | signalConditions() ...
[08:08:06.121] | : include = ‘immediateCondition’
[08:08:06.121] | : exclude = 
[08:08:06.122] | : resignal = FALSE
[08:08:06.122] | : Number of conditions: 6
[08:08:06.122] | :  int 6
[08:08:06.122] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.122] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.122] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.122] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.122] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.123] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.123] | signalConditions() ... done
[08:08:06.123] | relay stdout ...
[08:08:06.123] | relay stdout ... done
[08:08:06.123] | check for misuse ...
[08:08:06.123] | check for misuse ... done
[08:08:06.123] | relay conditions ...
[08:08:06.123] | : Future state: ‘finished’
[08:08:06.123] | : signalConditions() ...
[08:08:06.123] | : . include = ‘condition’
[08:08:06.124] | : . exclude = ‘immediateCondition’
[08:08:06.124] | : . resignal = TRUE
[08:08:06.124] | : . Number of conditions: 6
[08:08:06.124] | : .  int 6
[08:08:06.124] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.124] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.092] | : . ' , attachPackages() ...
[08:08:06.124] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.124] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.092] | : . ' , ; packages: [n=1] ‘future’
[08:08:06.125] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.125] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.093] | : . ' , attachPackages() ... done
[08:08:06.125] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.125] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.093] | : . ' , attachPackages() ...
[08:08:06.125] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.125] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.093] | : . ' , ; packages: [n=0] 
[08:08:06.125] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.125] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.093] | : . ' , attachPackages() ... done
[08:08:06.126] | : signalConditions() ... done
[08:08:06.126] | relay conditions ... done
[08:08:06.126] value() for SequentialFuture (<unnamed-2>) ... done
** Future evaluation with errors
[08:08:06.127] future(..., label = NULL) ...
[08:08:06.127] | lazy: FALSE
[08:08:06.127] | stdout: TRUE
[08:08:06.127] | conditions: [n=1] ‘condition’
[08:08:06.127] | gc: FALSE
[08:08:06.127] | earlySignal: FALSE
[08:08:06.127] | getGlobalsAndPackages() ...
[08:08:06.127] | : Searching for globals ...
[08:08:06.135] | : . globals found: [3] ‘{’, ‘<-’, ‘stop’
[08:08:06.135] | : Searching for globals ... done
[08:08:06.136] | : Resolving globals: FALSE
[08:08:06.136] | : Search for packages associated with the globals ...
[08:08:06.136] | : . Packages associated with globals: [1] ‘base’
[08:08:06.136] | : . Packages: [1] ‘base’
[08:08:06.136] | : Search for packages associated with the globals ... done
[08:08:06.136] | : Packages after dropping 'base': [0] 
[08:08:06.136] | : globals: [0] 
[08:08:06.137] | : packages: [0] 
[08:08:06.137] | getGlobalsAndPackages() ... done
[08:08:06.137] | run() for ‘Future’ (<unnamed-3>) ...
[08:08:06.137] | : state: ‘created’
[08:08:06.137] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.137] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.137] | : Using SequentialFutureBackend ...
[08:08:06.137] | : . Number of futures since start: 2 (2 created, 2 launched, 2 finished)
[08:08:06.137] | : . Launching futures ...
[08:08:06.138] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:06.138] | : . ' , getFutureData() ...
[08:08:06.138] | : . ' , ; getFutureCore() ...
[08:08:06.138] | : . ' , ; ` Packages needed by the future expression (n = 0): <none>
[08:08:06.138] | : . ' , ; getFutureCore() ... done
[08:08:06.138] | : . ' , ; getFutureCapture() ...
[08:08:06.138] | : . ' , ; getFutureCapture() ... done
[08:08:06.138] | : . ' , ; getFutureContext() ...
[08:08:06.138] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.138] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:06.139] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.139] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:06.139] | : . ' , ; getFutureContext() ... done
[08:08:06.139] | : . ' , getFutureData() ... done
[08:08:06.140] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.140] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:06.140] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.140] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.141] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:06.141] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:06.141] | : . ' , ; ` | New stack:
[08:08:06.141] | : . ' , ; ` | List of 1
[08:08:06.141] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.141] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.141] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:06.141] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.141] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.141] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.141] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.141] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.144] | : . ' , ; ` | Old stack:
[08:08:06.144] | : . ' , ; ` | List of 1
[08:08:06.144] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.144] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.144] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:06.144] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.144] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.144] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.144] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:06.144] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.144] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.144] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.144] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.147] | : . ' , ; ` | Not identical
[08:08:06.147] | : . ' , ; ` | all.equal() for future ...
[08:08:06.147] | : . ' , ; ` | : List of 2
[08:08:06.147] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.147] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.147] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:06.147] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.147] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.147] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.147] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.147] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.147] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.147] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:06.147] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.147] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.147] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.147] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:06.147] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.147] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.147] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.152] | : . ' , ; ` | all.equal() for future ... done
[08:08:06.152] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:06.152] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:06.152] | : . ' , ; ` List of future strategies:
[08:08:06.152] | : . ' , ; ` 1. sequential:
[08:08:06.152] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:06.152] | : . ' , ; `    - tweaked: FALSE
[08:08:06.152] | : . ' , ; `    - call: plan(sequential)
[08:08:06.153] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:06.153] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.155] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.155] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.155] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:06.155] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:06.155] | : . ' , ; ` | : New stack:
[08:08:06.155] | : . ' , ; ` | : List of 1
[08:08:06.155] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.155] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.155] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:06.155] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.155] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.155] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.155] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:06.155] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.155] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.155] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.155] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.158] | : . ' , ; ` | : Old stack:
[08:08:06.158] | : . ' , ; ` | : List of 1
[08:08:06.158] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.158] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.158] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:06.158] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.158] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.158] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.158] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:06.158] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.158] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.158] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.158] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.162] | : . ' , ; ` | : Identical
[08:08:06.162] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:06.162] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:06.162] | : . ' , ; ` | List of future strategies:
[08:08:06.162] | : . ' , ; ` | 1. sequential:
[08:08:06.162] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:06.162] | : . ' , ; ` |    - tweaked: FALSE
[08:08:06.162] | : . ' , ; ` |    - call: plan(sequential)
[08:08:06.163] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:06.163] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.163] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.163] | : . ' , SequentialFuture started (and completed)
[08:08:06.163] | : . ' , signalConditions() ...
[08:08:06.163] | : . ' , ; include = ‘immediateCondition’
[08:08:06.164] | : . ' , ; exclude = 
[08:08:06.164] | : . ' , ; resignal = FALSE
[08:08:06.164] | : . ' , ; Number of conditions: 7
[08:08:06.164] | : . ' , ;  int 7
[08:08:06.164] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.164] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.164] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.164] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.165] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.165] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.165] | : . ' , ; Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:06.165] | : . ' , signalConditions() ... done
[08:08:06.165] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:06.165] | : . Launching futures ... done
[08:08:06.165] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:06.165] | : Using SequentialFutureBackend ... done
[08:08:06.165] | run() for ‘Future’ (<unnamed-3>) ... done
[08:08:06.166] future(..., label = NULL) ... done
[08:08:06.166] value() for SequentialFuture (<unnamed-3>) ...
[08:08:06.166] | signalConditions() ...
[08:08:06.166] | : include = ‘immediateCondition’
[08:08:06.166] | : exclude = 
[08:08:06.166] | : resignal = FALSE
[08:08:06.166] | : Number of conditions: 7
[08:08:06.166] | :  int 7
[08:08:06.167] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.167] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.167] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.167] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.167] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.167] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.167] | : Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:06.167] | signalConditions() ... done
[08:08:06.167] | relay stdout ...
[08:08:06.168] | relay stdout ... done
[08:08:06.168] | check for misuse ...
[08:08:06.168] | check for misuse ... done
[08:08:06.168] | relay conditions ...
[08:08:06.168] | : Future state: ‘finished’
[08:08:06.168] | : signalConditions() ...
[08:08:06.168] | : . include = ‘condition’
[08:08:06.168] | : . exclude = ‘immediateCondition’
[08:08:06.168] | : . resignal = TRUE
[08:08:06.168] | : . Number of conditions: 7
[08:08:06.168] | : .  int 7
[08:08:06.169] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.169] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.139] | : . ' , attachPackages() ...
[08:08:06.169] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.169] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.139] | : . ' , ; packages: [n=1] ‘future’
[08:08:06.169] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.169] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.139] | : . ' , attachPackages() ... done
[08:08:06.170] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.170] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.139] | : . ' , attachPackages() ...
[08:08:06.170] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.170] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.140] | : . ' , ; packages: [n=0] 
[08:08:06.170] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.170] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.140] | : . ' , attachPackages() ... done
[08:08:06.170] | : . Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:06.170] | : . Condition #7: ‘simpleError’, ‘error’, ‘condition’
[08:08:06.170] | : signalConditions() ... done
[08:08:06.171] | relay conditions ... done
[08:08:06.171] | future(..., label = NULL) ...
[08:08:06.171] | : lazy: FALSE
[08:08:06.171] | : stdout: TRUE
[08:08:06.171] | : conditions: [n=1] ‘condition’
[08:08:06.172] | : gc: FALSE
[08:08:06.172] | : earlySignal: FALSE
[08:08:06.172] | : getGlobalsAndPackages() ...
[08:08:06.172] | : . Searching for globals ...
[08:08:06.184] | : . ' globals found: [6] ‘{’, ‘if’, ‘==’, ‘%%’, ‘ii’, ‘stop’
[08:08:06.184] | : . Searching for globals ... done
[08:08:06.184] | : . Resolving globals: FALSE
[08:08:06.184] | : . Search for packages associated with the globals ...
[08:08:06.185] | : . ' Packages associated with globals: [1] ‘base’
[08:08:06.185] | : . ' Packages: [1] ‘base’
[08:08:06.185] | : . Search for packages associated with the globals ... done
[08:08:06.185] | : . Packages after dropping 'base': [0] 
[08:08:06.185] | : . globals: [1] ‘ii’
[08:08:06.185] | : . packages: [0] 
[08:08:06.185] | : getGlobalsAndPackages() ... done
[08:08:06.186] | : run() for ‘Future’ (<unnamed-4>) ...
[08:08:06.186] | : . state: ‘created’
[08:08:06.186] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.186] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.186] | : . Using SequentialFutureBackend ...
[08:08:06.186] | : . ' Number of futures since start: 3 (3 created, 3 launched, 3 finished)
[08:08:06.186] | : . ' Launching futures ...
[08:08:06.186] | : . ' , launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:06.186] | : . ' , ; getFutureData() ...
[08:08:06.187] | : . ' , ; ` getFutureCore() ...
[08:08:06.187] | : . ' , ; ` | Packages needed by the future expression (n = 0): <none>
[08:08:06.187] | : . ' , ; ` getFutureCore() ... done
[08:08:06.187] | : . ' , ; ` getFutureCapture() ...
[08:08:06.187] | : . ' , ; ` getFutureCapture() ... done
[08:08:06.187] | : . ' , ; ` getFutureContext() ...
[08:08:06.187] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.187] | : . ' , ; ` | : Getting stack without first backend: [n=0] 
[08:08:06.187] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.187] | : . ' , ; ` | Packages needed by future backend (n = 0): <none>
[08:08:06.188] | : . ' , ; ` getFutureContext() ... done
[08:08:06.188] | : . ' , ; getFutureData() ... done
[08:08:06.189] | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.189] | : . ' , ; ` Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:06.189] | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.189] | : . ' , ; plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.189] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:06.190] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:06.190] | : . ' , ; ` | : New stack:
[08:08:06.190] | : . ' , ; ` | : List of 1
[08:08:06.190] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.190] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.190] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:06.190] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.190] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.190] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.190] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.190] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.192] | : . ' , ; ` | : Old stack:
[08:08:06.192] | : . ' , ; ` | : List of 1
[08:08:06.192] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.192] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.192] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:06.192] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.192] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.192] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.192] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:06.192] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.192] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.192] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.192] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.197] | : . ' , ; ` | : Not identical
[08:08:06.197] | : . ' , ; ` | : all.equal() for future ...
[08:08:06.198] | : . ' , ; ` | : . List of 2
[08:08:06.198] | : . ' , ; ` | : .  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.198] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.198] | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:08:06.198] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.198] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.198] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.198] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.198] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.198] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.198] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:06.198] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.198] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.198] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.198] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(sequential)
[08:08:06.198] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.198] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.198] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.203] | : . ' , ; ` | : all.equal() for future ... done
[08:08:06.203] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:06.203] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:06.203] | : . ' , ; ` | List of future strategies:
[08:08:06.203] | : . ' , ; ` | 1. sequential:
[08:08:06.203] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:06.203] | : . ' , ; ` |    - tweaked: FALSE
[08:08:06.203] | : . ' , ; ` |    - call: plan(sequential)
[08:08:06.204] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:06.204] | : . ' , ; plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.204] | : . ' , ; assign_globals() ...
[08:08:06.204] | : . ' , ; List of 1
[08:08:06.204] | : . ' , ;  $ ii: int 1
[08:08:06.204] | : . ' , ;  - attr(*, "where")=List of 1
[08:08:06.204] | : . ' , ;   ..$ ii:<environment: R_GlobalEnv> 
[08:08:06.204] | : . ' , ;  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:06.204] | : . ' , ;  - attr(*, "resolved")= logi FALSE
[08:08:06.204] | : . ' , ;  - attr(*, "total_size")= num NA
[08:08:06.204] | : . ' , ;  - attr(*, "already-done")= logi TRUE
[08:08:06.207] | : . ' , ; - copied ‘ii’ to environment
[08:08:06.207] | : . ' , ; assign_globals() ... done
[08:08:06.208] | : . ' , ; plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.209] | : . ' , ; ` plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.209] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:06.209] | : . ' , ; ` | : all.equal() for FutureStrategyList ...
[08:08:06.209] | : . ' , ; ` | : . New stack:
[08:08:06.209] | : . ' , ; ` | : . List of 1
[08:08:06.209] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.209] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.209] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:06.209] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.209] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.209] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.209] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(sequential)
[08:08:06.209] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.209] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.209] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.209] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.212] | : . ' , ; ` | : . Old stack:
[08:08:06.212] | : . ' , ; ` | : . List of 1
[08:08:06.212] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.212] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.212] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:06.212] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.212] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.212] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.212] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(sequential)
[08:08:06.212] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.212] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.212] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.212] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.216] | : . ' , ; ` | : . Identical
[08:08:06.216] | : . ' , ; ` | : all.equal() for FutureStrategyList ... done
[08:08:06.216] | : . ' , ; ` | : plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:06.216] | : . ' , ; ` | : List of future strategies:
[08:08:06.216] | : . ' , ; ` | : 1. sequential:
[08:08:06.216] | : . ' , ; ` | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:06.216] | : . ' , ; ` | :    - tweaked: FALSE
[08:08:06.216] | : . ' , ; ` | :    - call: plan(sequential)
[08:08:06.217] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:06.217] | : . ' , ; ` plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.217] | : . ' , ; plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.217] | : . ' , ; SequentialFuture started (and completed)
[08:08:06.218] | : . ' , ; signalConditions() ...
[08:08:06.218] | : . ' , ; ` include = ‘immediateCondition’
[08:08:06.218] | : . ' , ; ` exclude = 
[08:08:06.218] | : . ' , ; ` resignal = FALSE
[08:08:06.218] | : . ' , ; ` Number of conditions: 6
[08:08:06.218] | : . ' , ; `  int 6
[08:08:06.218] | : . ' , ; ` Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.219] | : . ' , ; ` Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.219] | : . ' , ; ` Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.219] | : . ' , ; ` Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.219] | : . ' , ; ` Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.219] | : . ' , ; ` Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.219] | : . ' , ; signalConditions() ... done
[08:08:06.219] | : . ' , launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:06.219] | : . ' Launching futures ... done
[08:08:06.219] | : . ' Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:06.220] | : . Using SequentialFutureBackend ... done
[08:08:06.220] | : run() for ‘Future’ (<unnamed-4>) ... done
[08:08:06.220] | future(..., label = NULL) ... done
[08:08:06.220] | future(..., label = NULL) ...
[08:08:06.220] | : lazy: FALSE
[08:08:06.220] | : stdout: TRUE
[08:08:06.221] | : conditions: [n=1] ‘condition’
[08:08:06.221] | : gc: FALSE
[08:08:06.221] | : earlySignal: FALSE
[08:08:06.221] | : getGlobalsAndPackages() ...
[08:08:06.221] | : . Searching for globals ...
[08:08:06.234] | : . ' globals found: [6] ‘{’, ‘if’, ‘==’, ‘%%’, ‘ii’, ‘stop’
[08:08:06.234] | : . Searching for globals ... done
[08:08:06.234] | : . Resolving globals: FALSE
[08:08:06.234] | : . Search for packages associated with the globals ...
[08:08:06.234] | : . ' Packages associated with globals: [1] ‘base’
[08:08:06.234] | : . ' Packages: [1] ‘base’
[08:08:06.235] | : . Search for packages associated with the globals ... done
[08:08:06.235] | : . Packages after dropping 'base': [0] 
[08:08:06.235] | : . globals: [1] ‘ii’
[08:08:06.235] | : . packages: [0] 
[08:08:06.235] | : getGlobalsAndPackages() ... done
[08:08:06.235] | : run() for ‘Future’ (<unnamed-5>) ...
[08:08:06.235] | : . state: ‘created’
[08:08:06.235] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.236] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.236] | : . Using SequentialFutureBackend ...
[08:08:06.236] | : . ' Number of futures since start: 4 (4 created, 4 launched, 4 finished)
[08:08:06.236] | : . ' Launching futures ...
[08:08:06.236] | : . ' , launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:06.236] | : . ' , ; getFutureData() ...
[08:08:06.236] | : . ' , ; ` getFutureCore() ...
[08:08:06.236] | : . ' , ; ` | Packages needed by the future expression (n = 0): <none>
[08:08:06.236] | : . ' , ; ` getFutureCore() ... done
[08:08:06.237] | : . ' , ; ` getFutureCapture() ...
[08:08:06.237] | : . ' , ; ` getFutureCapture() ... done
[08:08:06.237] | : . ' , ; ` getFutureContext() ...
[08:08:06.237] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.237] | : . ' , ; ` | : Getting stack without first backend: [n=0] 
[08:08:06.237] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.237] | : . ' , ; ` | Packages needed by future backend (n = 0): <none>
[08:08:06.237] | : . ' , ; ` getFutureContext() ... done
[08:08:06.237] | : . ' , ; getFutureData() ... done
[08:08:06.239] | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.239] | : . ' , ; ` Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:06.239] | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.239] | : . ' , ; plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.239] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:06.239] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:06.240] | : . ' , ; ` | : New stack:
[08:08:06.240] | : . ' , ; ` | : List of 1
[08:08:06.240] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.240] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.240] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:06.240] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.240] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.240] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.240] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.240] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.242] | : . ' , ; ` | : Old stack:
[08:08:06.242] | : . ' , ; ` | : List of 1
[08:08:06.242] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.242] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.242] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:06.242] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.242] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.242] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.242] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:06.242] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.242] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.242] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.242] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.245] | : . ' , ; ` | : Not identical
[08:08:06.245] | : . ' , ; ` | : all.equal() for future ...
[08:08:06.246] | : . ' , ; ` | : . List of 2
[08:08:06.246] | : . ' , ; ` | : .  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.246] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.246] | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:08:06.246] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.246] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.246] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.246] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.246] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.246] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.246] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:06.246] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.246] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.246] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.246] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(sequential)
[08:08:06.246] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.246] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.246] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.251] | : . ' , ; ` | : all.equal() for future ... done
[08:08:06.251] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:06.251] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:06.252] | : . ' , ; ` | List of future strategies:
[08:08:06.252] | : . ' , ; ` | 1. sequential:
[08:08:06.252] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:06.252] | : . ' , ; ` |    - tweaked: FALSE
[08:08:06.252] | : . ' , ; ` |    - call: plan(sequential)
[08:08:06.252] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:06.252] | : . ' , ; plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.252] | : . ' , ; assign_globals() ...
[08:08:06.252] | : . ' , ; List of 1
[08:08:06.252] | : . ' , ;  $ ii: int 2
[08:08:06.252] | : . ' , ;  - attr(*, "where")=List of 1
[08:08:06.252] | : . ' , ;   ..$ ii:<environment: R_GlobalEnv> 
[08:08:06.252] | : . ' , ;  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:06.252] | : . ' , ;  - attr(*, "resolved")= logi FALSE
[08:08:06.252] | : . ' , ;  - attr(*, "total_size")= num NA
[08:08:06.252] | : . ' , ;  - attr(*, "already-done")= logi TRUE
[08:08:06.255] | : . ' , ; - copied ‘ii’ to environment
[08:08:06.255] | : . ' , ; assign_globals() ... done
[08:08:06.257] | : . ' , ; plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.257] | : . ' , ; ` plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.257] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:06.257] | : . ' , ; ` | : all.equal() for FutureStrategyList ...
[08:08:06.257] | : . ' , ; ` | : . New stack:
[08:08:06.257] | : . ' , ; ` | : . List of 1
[08:08:06.257] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.257] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.257] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:06.257] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.257] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.257] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.257] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(sequential)
[08:08:06.257] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.257] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.257] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.257] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.260] | : . ' , ; ` | : . Old stack:
[08:08:06.260] | : . ' , ; ` | : . List of 1
[08:08:06.260] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.260] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.260] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:06.260] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.260] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.260] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.260] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(sequential)
[08:08:06.260] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.260] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.260] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.260] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.264] | : . ' , ; ` | : . Identical
[08:08:06.264] | : . ' , ; ` | : all.equal() for FutureStrategyList ... done
[08:08:06.264] | : . ' , ; ` | : plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:06.264] | : . ' , ; ` | : List of future strategies:
[08:08:06.264] | : . ' , ; ` | : 1. sequential:
[08:08:06.264] | : . ' , ; ` | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:06.264] | : . ' , ; ` | :    - tweaked: FALSE
[08:08:06.264] | : . ' , ; ` | :    - call: plan(sequential)
[08:08:06.264] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:06.264] | : . ' , ; ` plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.264] | : . ' , ; plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.265] | : . ' , ; SequentialFuture started (and completed)
[08:08:06.265] | : . ' , ; signalConditions() ...
[08:08:06.265] | : . ' , ; ` include = ‘immediateCondition’
[08:08:06.265] | : . ' , ; ` exclude = 
[08:08:06.265] | : . ' , ; ` resignal = FALSE
[08:08:06.265] | : . ' , ; ` Number of conditions: 7
[08:08:06.265] | : . ' , ; `  int 7
[08:08:06.266] | : . ' , ; ` Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.266] | : . ' , ; ` Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.266] | : . ' , ; ` Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.266] | : . ' , ; ` Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.267] | : . ' , ; ` Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.267] | : . ' , ; ` Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.267] | : . ' , ; ` Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:06.267] | : . ' , ; signalConditions() ... done
[08:08:06.267] | : . ' , launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:06.267] | : . ' Launching futures ... done
[08:08:06.267] | : . ' Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:06.268] | : . Using SequentialFutureBackend ... done
[08:08:06.268] | : run() for ‘Future’ (<unnamed-5>) ... done
[08:08:06.268] | future(..., label = NULL) ... done
[08:08:06.268] | future(..., label = NULL) ...
[08:08:06.268] | : lazy: FALSE
[08:08:06.268] | : stdout: TRUE
[08:08:06.268] | : conditions: [n=1] ‘condition’
[08:08:06.269] | : gc: FALSE
[08:08:06.269] | : earlySignal: FALSE
[08:08:06.269] | : getGlobalsAndPackages() ...
[08:08:06.269] | : . Searching for globals ...
[08:08:06.280] | : . ' globals found: [6] ‘{’, ‘if’, ‘==’, ‘%%’, ‘ii’, ‘stop’
[08:08:06.281] | : . Searching for globals ... done
[08:08:06.281] | : . Resolving globals: FALSE
[08:08:06.281] | : . Search for packages associated with the globals ...
[08:08:06.282] | : . ' Packages associated with globals: [1] ‘base’
[08:08:06.282] | : . ' Packages: [1] ‘base’
[08:08:06.282] | : . Search for packages associated with the globals ... done
[08:08:06.282] | : . Packages after dropping 'base': [0] 
[08:08:06.282] | : . globals: [1] ‘ii’
[08:08:06.282] | : . packages: [0] 
[08:08:06.283] | : getGlobalsAndPackages() ... done
[08:08:06.283] | : run() for ‘Future’ (<unnamed-6>) ...
[08:08:06.283] | : . state: ‘created’
[08:08:06.283] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.283] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.283] | : . Using SequentialFutureBackend ...
[08:08:06.283] | : . ' Number of futures since start: 5 (5 created, 5 launched, 5 finished)
[08:08:06.283] | : . ' Launching futures ...
[08:08:06.283] | : . ' , launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:06.284] | : . ' , ; getFutureData() ...
[08:08:06.284] | : . ' , ; ` getFutureCore() ...
[08:08:06.284] | : . ' , ; ` | Packages needed by the future expression (n = 0): <none>
[08:08:06.284] | : . ' , ; ` getFutureCore() ... done
[08:08:06.284] | : . ' , ; ` getFutureCapture() ...
[08:08:06.284] | : . ' , ; ` getFutureCapture() ... done
[08:08:06.284] | : . ' , ; ` getFutureContext() ...
[08:08:06.284] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.284] | : . ' , ; ` | : Getting stack without first backend: [n=0] 
[08:08:06.285] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.285] | : . ' , ; ` | Packages needed by future backend (n = 0): <none>
[08:08:06.285] | : . ' , ; ` getFutureContext() ... done
[08:08:06.285] | : . ' , ; getFutureData() ... done
[08:08:06.286] | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.286] | : . ' , ; ` Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:06.286] | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.286] | : . ' , ; plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.287] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:06.287] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:06.287] | : . ' , ; ` | : New stack:
[08:08:06.287] | : . ' , ; ` | : List of 1
[08:08:06.287] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.287] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.287] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:06.287] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.287] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.287] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.287] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.287] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.289] | : . ' , ; ` | : Old stack:
[08:08:06.289] | : . ' , ; ` | : List of 1
[08:08:06.289] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.289] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.289] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:06.289] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.289] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.289] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.289] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:06.289] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.289] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.289] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.289] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.292] | : . ' , ; ` | : Not identical
[08:08:06.293] | : . ' , ; ` | : all.equal() for future ...
[08:08:06.293] | : . ' , ; ` | : . List of 2
[08:08:06.293] | : . ' , ; ` | : .  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.293] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.293] | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:08:06.293] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.293] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.293] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.293] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.293] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.293] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.293] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:06.293] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.293] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.293] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.293] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(sequential)
[08:08:06.293] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.293] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.293] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.298] | : . ' , ; ` | : all.equal() for future ... done
[08:08:06.298] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:06.298] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:06.298] | : . ' , ; ` | List of future strategies:
[08:08:06.298] | : . ' , ; ` | 1. sequential:
[08:08:06.298] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:06.298] | : . ' , ; ` |    - tweaked: FALSE
[08:08:06.298] | : . ' , ; ` |    - call: plan(sequential)
[08:08:06.299] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:06.299] | : . ' , ; plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.299] | : . ' , ; assign_globals() ...
[08:08:06.300] | : . ' , ; List of 1
[08:08:06.300] | : . ' , ;  $ ii: int 3
[08:08:06.300] | : . ' , ;  - attr(*, "where")=List of 1
[08:08:06.300] | : . ' , ;   ..$ ii:<environment: R_GlobalEnv> 
[08:08:06.300] | : . ' , ;  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:06.300] | : . ' , ;  - attr(*, "resolved")= logi FALSE
[08:08:06.300] | : . ' , ;  - attr(*, "total_size")= num NA
[08:08:06.300] | : . ' , ;  - attr(*, "already-done")= logi TRUE
[08:08:06.302] | : . ' , ; - copied ‘ii’ to environment
[08:08:06.302] | : . ' , ; assign_globals() ... done
[08:08:06.303] | : . ' , ; plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.304] | : . ' , ; ` plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.304] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:06.304] | : . ' , ; ` | : all.equal() for FutureStrategyList ...
[08:08:06.304] | : . ' , ; ` | : . New stack:
[08:08:06.304] | : . ' , ; ` | : . List of 1
[08:08:06.304] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.304] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.304] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:06.304] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.304] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.304] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.304] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(sequential)
[08:08:06.304] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.304] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.304] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.304] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.307] | : . ' , ; ` | : . Old stack:
[08:08:06.307] | : . ' , ; ` | : . List of 1
[08:08:06.307] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.307] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.307] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:06.307] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.307] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.307] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.307] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(sequential)
[08:08:06.307] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.307] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.307] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.307] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.310] | : . ' , ; ` | : . Identical
[08:08:06.310] | : . ' , ; ` | : all.equal() for FutureStrategyList ... done
[08:08:06.310] | : . ' , ; ` | : plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:06.311] | : . ' , ; ` | : List of future strategies:
[08:08:06.311] | : . ' , ; ` | : 1. sequential:
[08:08:06.311] | : . ' , ; ` | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:06.311] | : . ' , ; ` | :    - tweaked: FALSE
[08:08:06.311] | : . ' , ; ` | :    - call: plan(sequential)
[08:08:06.311] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:06.311] | : . ' , ; ` plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.311] | : . ' , ; plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.312] | : . ' , ; SequentialFuture started (and completed)
[08:08:06.312] | : . ' , ; signalConditions() ...
[08:08:06.312] | : . ' , ; ` include = ‘immediateCondition’
[08:08:06.312] | : . ' , ; ` exclude = 
[08:08:06.312] | : . ' , ; ` resignal = FALSE
[08:08:06.312] | : . ' , ; ` Number of conditions: 6
[08:08:06.312] | : . ' , ; `  int 6
[08:08:06.313] | : . ' , ; ` Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.313] | : . ' , ; ` Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.313] | : . ' , ; ` Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.313] | : . ' , ; ` Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.313] | : . ' , ; ` Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.313] | : . ' , ; ` Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.313] | : . ' , ; signalConditions() ... done
[08:08:06.313] | : . ' , launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:06.313] | : . ' Launching futures ... done
[08:08:06.313] | : . ' Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:06.314] | : . Using SequentialFutureBackend ... done
[08:08:06.314] | : run() for ‘Future’ (<unnamed-6>) ... done
[08:08:06.314] | future(..., label = NULL) ... done
[08:08:06.314] | value() for SequentialFuture (<unnamed-4>) ...
[08:08:06.314] | : signalConditions() ...
[08:08:06.314] | : . include = ‘immediateCondition’
[08:08:06.314] | : . exclude = 
[08:08:06.314] | : . resignal = FALSE
[08:08:06.315] | : . Number of conditions: 6
[08:08:06.315] | : .  int 6
[08:08:06.315] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.315] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.315] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.315] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.315] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.316] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.316] | : signalConditions() ... done
[08:08:06.316] | : relay stdout ...
[08:08:06.343] | : relay stdout ... done
[08:08:06.343] | : check for misuse ...
[08:08:06.343] | : check for misuse ... done
[08:08:06.344] | : relay conditions ...
[08:08:06.344] | : . Future state: ‘finished’
[08:08:06.344] | : . signalConditions() ...
[08:08:06.344] | : . ' include = ‘condition’
[08:08:06.344] | : . ' exclude = ‘immediateCondition’
[08:08:06.344] | : . ' resignal = TRUE
[08:08:06.344] | : . ' Number of conditions: 6
[08:08:06.344] | : . '  int 6
[08:08:06.345] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.345] | : . ' Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.188] | : . ' , ; attachPackages() ...
[08:08:06.345] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.345] | : . ' Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.188] | : . ' , ; ` packages: [n=1] ‘future’
[08:08:06.346] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.346] | : . ' Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.188] | : . ' , ; attachPackages() ... done
[08:08:06.346] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.346] | : . ' Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.188] | : . ' , ; attachPackages() ...
[08:08:06.346] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.346] | : . ' Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.188] | : . ' , ; ` packages: [n=0] 
[08:08:06.346] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.346] | : . ' Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.188] | : . ' , ; attachPackages() ... done
[08:08:06.347] | : . signalConditions() ... done
[08:08:06.347] | : relay conditions ... done
[08:08:06.347] | value() for SequentialFuture (<unnamed-4>) ... done
[08:08:06.347] | value() for SequentialFuture (<unnamed-5>) ...
[08:08:06.347] | : signalConditions() ...
[08:08:06.347] | : . include = ‘immediateCondition’
[08:08:06.347] | : . exclude = 
[08:08:06.347] | : . resignal = FALSE
[08:08:06.347] | : . Number of conditions: 7
[08:08:06.348] | : .  int 7
[08:08:06.348] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.348] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.348] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.348] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.348] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.348] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.349] | : . Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:06.349] | : signalConditions() ... done
[08:08:06.349] | : relay stdout ...
[08:08:06.349] | : relay stdout ... done
[08:08:06.349] | : check for misuse ...
[08:08:06.349] | : check for misuse ... done
[08:08:06.349] | : relay conditions ...
[08:08:06.349] | : . Future state: ‘finished’
[08:08:06.349] | : . signalConditions() ...
[08:08:06.349] | : . ' include = ‘condition’
[08:08:06.350] | : . ' exclude = ‘immediateCondition’
[08:08:06.350] | : . ' resignal = TRUE
[08:08:06.350] | : . ' Number of conditions: 7
[08:08:06.350] | : . '  int 7
[08:08:06.350] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.350] | : . ' Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.238] | : . ' , ; attachPackages() ...
[08:08:06.351] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.351] | : . ' Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.238] | : . ' , ; ` packages: [n=1] ‘future’
[08:08:06.351] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.351] | : . ' Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.238] | : . ' , ; attachPackages() ... done
[08:08:06.351] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.351] | : . ' Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.238] | : . ' , ; attachPackages() ...
[08:08:06.351] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.351] | : . ' Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.238] | : . ' , ; ` packages: [n=0] 
[08:08:06.351] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.352] | : . ' Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.238] | : . ' , ; attachPackages() ... done
[08:08:06.352] | : . ' Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:06.352] | : . ' Condition #7: ‘simpleError’, ‘error’, ‘condition’
[08:08:06.352] | : . signalConditions() ... done
[08:08:06.352] | : relay conditions ... done
[08:08:06.353] | : value() for SequentialFuture (<unnamed-6>) ...
[08:08:06.353] | : . signalConditions() ...
[08:08:06.353] | : . ' include = ‘immediateCondition’
[08:08:06.353] | : . ' exclude = 
[08:08:06.353] | : . ' resignal = FALSE
[08:08:06.353] | : . ' Number of conditions: 6
[08:08:06.354] | : . '  int 6
[08:08:06.354] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.354] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.354] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.354] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.354] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.355] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.355] | : . signalConditions() ... done
[08:08:06.355] | : . relay stdout ...
[08:08:06.355] | : . relay stdout ... done
[08:08:06.355] | : . check for misuse ...
[08:08:06.355] | : . check for misuse ... done
[08:08:06.355] | : . relay conditions ...
[08:08:06.355] | : . ' Future state: ‘finished’
[08:08:06.355] | : . ' signalConditions() ...
[08:08:06.355] | : . ' , include = ‘condition’
[08:08:06.356] | : . ' , exclude = ‘immediateCondition’
[08:08:06.356] | : . ' , resignal = TRUE
[08:08:06.356] | : . ' , Number of conditions: 6
[08:08:06.356] | : . ' ,  int 6
[08:08:06.356] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.356] | : . ' , Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.285] | : . ' , ; attachPackages() ...
[08:08:06.357] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.357] | : . ' , Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.285] | : . ' , ; ` packages: [n=1] ‘future’
[08:08:06.357] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.357] | : . ' , Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.285] | : . ' , ; attachPackages() ... done
[08:08:06.357] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.357] | : . ' , Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.285] | : . ' , ; attachPackages() ...
[08:08:06.357] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.357] | : . ' , Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.286] | : . ' , ; ` packages: [n=0] 
[08:08:06.358] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.358] | : . ' , Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.286] | : . ' , ; attachPackages() ... done
[08:08:06.358] | : . ' signalConditions() ... done
[08:08:06.358] | : . relay conditions ... done
[08:08:06.358] | : value() for SequentialFuture (<unnamed-6>) ... done
Warning in get(var, envir = x, inherits = FALSE) :
  restarting interrupted promise evaluation
[08:08:06.358] | : value() for SequentialFuture (<unnamed-5>) ...
[08:08:06.358] | : . signalConditions() ...
[08:08:06.359] | : . ' include = ‘immediateCondition’
[08:08:06.359] | : . ' exclude = 
[08:08:06.359] | : . ' resignal = FALSE
[08:08:06.359] | : . ' Number of conditions: 7
[08:08:06.359] | : . '  int 7
[08:08:06.359] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.359] | : . ' already signaled, skipping
[08:08:06.360] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.360] | : . ' already signaled, skipping
[08:08:06.360] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.360] | : . ' already signaled, skipping
[08:08:06.360] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.360] | : . ' already signaled, skipping
[08:08:06.360] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.360] | : . ' already signaled, skipping
[08:08:06.360] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.360] | : . ' already signaled, skipping
[08:08:06.361] | : . ' Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:06.361] | : . ' already signaled, skipping
[08:08:06.361] | : . signalConditions() ... done
[08:08:06.361] | : . relay stdout ...
[08:08:06.361] | : . relay stdout ... done
[08:08:06.361] | : . check for misuse ...
[08:08:06.361] | : . check for misuse ... done
[08:08:06.361] | : . relay conditions ...
[08:08:06.361] | : . ' Future state: ‘finished’
[08:08:06.362] | : . ' signalConditions() ...
[08:08:06.362] | : . ' , include = ‘condition’
[08:08:06.362] | : . ' , exclude = ‘immediateCondition’
[08:08:06.362] | : . ' , resignal = TRUE
[08:08:06.362] | : . ' , Number of conditions: 7
[08:08:06.362] | : . ' ,  int 7
[08:08:06.362] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.362] | : . ' , Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.238] | : . ' , ; attachPackages() ...
[08:08:06.363] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.363] | : . ' , Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.238] | : . ' , ; ` packages: [n=1] ‘future’
[08:08:06.363] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.363] | : . ' , Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.238] | : . ' , ; attachPackages() ... done
[08:08:06.363] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.363] | : . ' , Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.238] | : . ' , ; attachPackages() ...
[08:08:06.363] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.363] | : . ' , Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.238] | : . ' , ; ` packages: [n=0] 
[08:08:06.364] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.364] | : . ' , Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.238] | : . ' , ; attachPackages() ... done
[08:08:06.364] | : . ' , Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:06.364] | : . ' , Condition #7: ‘simpleError’, ‘error’, ‘condition’
[08:08:06.364] | : . ' signalConditions() ... done
[08:08:06.365] | : . relay conditions ... done
Warning in get(var, envir = x, inherits = FALSE) :
  restarting interrupted promise evaluation
[08:08:06.365] | : . value() for SequentialFuture (<unnamed-5>) ...
[08:08:06.366] | : . ' signalConditions() ...
[08:08:06.366] | : . ' , include = ‘immediateCondition’
[08:08:06.366] | : . ' , exclude = 
[08:08:06.366] | : . ' , resignal = FALSE
[08:08:06.366] | : . ' , Number of conditions: 7
[08:08:06.366] | : . ' ,  int 7
[08:08:06.366] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.367] | : . ' , already signaled, skipping
[08:08:06.367] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.367] | : . ' , already signaled, skipping
[08:08:06.367] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.367] | : . ' , already signaled, skipping
[08:08:06.367] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.367] | : . ' , already signaled, skipping
[08:08:06.367] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.367] | : . ' , already signaled, skipping
[08:08:06.367] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.368] | : . ' , already signaled, skipping
[08:08:06.368] | : . ' , Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:06.368] | : . ' , already signaled, skipping
[08:08:06.368] | : . ' signalConditions() ... done
[08:08:06.368] | : . ' relay stdout ...
[08:08:06.368] | : . ' relay stdout ... done
[08:08:06.368] | : . ' check for misuse ...
[08:08:06.368] | : . ' check for misuse ... done
[08:08:06.368] | : . ' relay conditions ...
[08:08:06.368] | : . ' , Future state: ‘finished’
[08:08:06.369] | : . ' , signalConditions() ...
[08:08:06.369] | : . ' , ; include = ‘condition’
[08:08:06.369] | : . ' , ; exclude = ‘immediateCondition’
[08:08:06.369] | : . ' , ; resignal = TRUE
[08:08:06.369] | : . ' , ; Number of conditions: 7
[08:08:06.369] | : . ' , ;  int 7
[08:08:06.369] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.370] | : . ' , ; Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.238] | : . ' , ; attachPackages() ...
[08:08:06.370] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.370] | : . ' , ; Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.238] | : . ' , ; ` packages: [n=1] ‘future’
[08:08:06.370] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.370] | : . ' , ; Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.238] | : . ' , ; attachPackages() ... done
[08:08:06.370] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.370] | : . ' , ; Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.238] | : . ' , ; attachPackages() ...
[08:08:06.370] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.370] | : . ' , ; Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.238] | : . ' , ; ` packages: [n=0] 
[08:08:06.371] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.371] | : . ' , ; Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.238] | : . ' , ; attachPackages() ... done
[08:08:06.371] | : . ' , ; Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:06.371] | : . ' , ; Condition #7: ‘simpleError’, ‘error’, ‘condition’
[08:08:06.371] | : . ' , signalConditions() ... done
[08:08:06.371] | : . ' relay conditions ... done
** Future evaluation with a poor-man's "progress bar"
[08:08:06.371] | : . ' future(..., label = NULL) ...
[08:08:06.372] | : . ' , lazy: FALSE
[08:08:06.372] | : . ' , stdout: TRUE
[08:08:06.372] | : . ' , conditions: [n=1] ‘condition’
[08:08:06.372] | : . ' , gc: FALSE
[08:08:06.372] | : . ' , earlySignal: FALSE
[08:08:06.372] | : . ' , getGlobalsAndPackages() ...
[08:08:06.372] | : . ' , ; Searching for globals ...
[08:08:06.389] | : . ' , ; ` globals found: [4] ‘{’, ‘cat’, ‘for’, ‘:’
[08:08:06.389] | : . ' , ; Searching for globals ... done
[08:08:06.389] | : . ' , ; Resolving globals: FALSE
[08:08:06.389] | : . ' , ; Search for packages associated with the globals ...
[08:08:06.389] | : . ' , ; ` Packages associated with globals: [1] ‘base’
[08:08:06.390] | : . ' , ; ` Packages: [1] ‘base’
[08:08:06.390] | : . ' , ; Search for packages associated with the globals ... done
[08:08:06.390] | : . ' , ; Packages after dropping 'base': [0] 
[08:08:06.390] | : . ' , ; globals: [0] 
[08:08:06.390] | : . ' , ; packages: [0] 
[08:08:06.390] | : . ' , getGlobalsAndPackages() ... done
[08:08:06.390] | : . ' , run() for ‘Future’ (<unnamed-7>) ...
[08:08:06.391] | : . ' , ; state: ‘created’
[08:08:06.391] | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.391] | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.391] | : . ' , ; Using SequentialFutureBackend ...
[08:08:06.391] | : . ' , ; ` Number of futures since start: 6 (6 created, 6 launched, 6 finished)
[08:08:06.391] | : . ' , ; ` Launching futures ...
[08:08:06.391] | : . ' , ; ` | launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:06.391] | : . ' , ; ` | : getFutureData() ...
[08:08:06.391] | : . ' , ; ` | : . getFutureCore() ...
[08:08:06.392] | : . ' , ; ` | : . ' Packages needed by the future expression (n = 0): <none>
[08:08:06.392] | : . ' , ; ` | : . getFutureCore() ... done
[08:08:06.392] | : . ' , ; ` | : . getFutureCapture() ...
[08:08:06.392] | : . ' , ; ` | : . getFutureCapture() ... done
[08:08:06.392] | : . ' , ; ` | : . getFutureContext() ...
[08:08:06.392] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.392] | : . ' , ; ` | : . ' , Getting stack without first backend: [n=0] 
[08:08:06.392] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.392] | : . ' , ; ` | : . ' Packages needed by future backend (n = 0): <none>
[08:08:06.392] | : . ' , ; ` | : . getFutureContext() ... done
[08:08:06.393] | : . ' , ; ` | : getFutureData() ... done
[08:08:06.394] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.394] | : . ' , ; ` | : . Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:06.394] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.394] | : . ' , ; ` | : plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.394] | : . ' , ; ` | : . plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:06.395] | : . ' , ; ` | : . ' all.equal() for FutureStrategyList ...
[08:08:06.395] | : . ' , ; ` | : . ' , New stack:
[08:08:06.395] | : . ' , ; ` | : . ' , List of 1
[08:08:06.395] | : . ' , ; ` | : . ' ,  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.395] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.395] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= logi TRUE
[08:08:06.395] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.395] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.395] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.395] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.395] | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.397] | : . ' , ; ` | : . ' , Old stack:
[08:08:06.397] | : . ' , ; ` | : . ' , List of 1
[08:08:06.397] | : . ' , ; ` | : . ' ,  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.397] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.397] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:08:06.397] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.397] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.397] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.397] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(sequential)
[08:08:06.397] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.397] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.397] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.397] | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.401] | : . ' , ; ` | : . ' , Not identical
[08:08:06.401] | : . ' , ; ` | : . ' , all.equal() for future ...
[08:08:06.401] | : . ' , ; ` | : . ' , ; List of 2
[08:08:06.401] | : . ' , ; ` | : . ' , ;  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.401] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.401] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= logi TRUE
[08:08:06.401] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.401] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.401] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.401] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.401] | : . ' , ; ` | : . ' , ;  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.401] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.401] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:08:06.401] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.401] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.401] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.401] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(sequential)
[08:08:06.401] | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.401] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.401] | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.406] | : . ' , ; ` | : . ' , all.equal() for future ... done
[08:08:06.406] | : . ' , ; ` | : . ' all.equal() for FutureStrategyList ... done
[08:08:06.407] | : . ' , ; ` | : . ' plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:06.407] | : . ' , ; ` | : . ' List of future strategies:
[08:08:06.407] | : . ' , ; ` | : . ' 1. sequential:
[08:08:06.407] | : . ' , ; ` | : . '    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:06.407] | : . ' , ; ` | : . '    - tweaked: FALSE
[08:08:06.407] | : . ' , ; ` | : . '    - call: plan(sequential)
[08:08:06.407] | : . ' , ; ` | : . plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:06.407] | : . ' , ; ` | : plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.409] | : . ' , ; ` | : plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.409] | : . ' , ; ` | : . plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.409] | : . ' , ; ` | : . ' plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:06.409] | : . ' , ; ` | : . ' , all.equal() for FutureStrategyList ...
[08:08:06.409] | : . ' , ; ` | : . ' , ; New stack:
[08:08:06.409] | : . ' , ; ` | : . ' , ; List of 1
[08:08:06.409] | : . ' , ; ` | : . ' , ;  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.409] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.409] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:08:06.409] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.409] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.409] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.409] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(sequential)
[08:08:06.409] | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.409] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.409] | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.409] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.412] | : . ' , ; ` | : . ' , ; Old stack:
[08:08:06.412] | : . ' , ; ` | : . ' , ; List of 1
[08:08:06.412] | : . ' , ; ` | : . ' , ;  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.412] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.412] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:08:06.412] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.412] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.412] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.412] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(sequential)
[08:08:06.412] | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.412] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.412] | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.412] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.415] | : . ' , ; ` | : . ' , ; Identical
[08:08:06.415] | : . ' , ; ` | : . ' , all.equal() for FutureStrategyList ... done
[08:08:06.416] | : . ' , ; ` | : . ' , plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:06.416] | : . ' , ; ` | : . ' , List of future strategies:
[08:08:06.416] | : . ' , ; ` | : . ' , 1. sequential:
[08:08:06.416] | : . ' , ; ` | : . ' ,    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:06.416] | : . ' , ; ` | : . ' ,    - tweaked: FALSE
[08:08:06.416] | : . ' , ; ` | : . ' ,    - call: plan(sequential)
[08:08:06.416] | : . ' , ; ` | : . ' plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:06.416] | : . ' , ; ` | : . plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.416] | : . ' , ; ` | : plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.417] | : . ' , ; ` | : SequentialFuture started (and completed)
[08:08:06.417] | : . ' , ; ` | : signalConditions() ...
[08:08:06.417] | : . ' , ; ` | : . include = ‘immediateCondition’
[08:08:06.417] | : . ' , ; ` | : . exclude = 
[08:08:06.417] | : . ' , ; ` | : . resignal = FALSE
[08:08:06.417] | : . ' , ; ` | : . Number of conditions: 6
[08:08:06.417] | : . ' , ; ` | : .  int 6
[08:08:06.418] | : . ' , ; ` | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.418] | : . ' , ; ` | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.418] | : . ' , ; ` | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.418] | : . ' , ; ` | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.418] | : . ' , ; ` | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.418] | : . ' , ; ` | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.418] | : . ' , ; ` | : signalConditions() ... done
[08:08:06.419] | : . ' , ; ` | launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:06.419] | : . ' , ; ` Launching futures ... done
[08:08:06.419] | : . ' , ; ` Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:06.419] | : . ' , ; Using SequentialFutureBackend ... done
[08:08:06.420] | : . ' , run() for ‘Future’ (<unnamed-7>) ... done
[08:08:06.420] | : . ' future(..., label = NULL) ... done
** Collecting results
v1 = 1
v2 = 2
Warning in sprintf(...) : restarting interrupted promise evaluation
[08:08:06.420] | : . ' value() for SequentialFuture (<unnamed-3>) ...
[08:08:06.420] | : . ' , signalConditions() ...
[08:08:06.420] | : . ' , ; include = ‘immediateCondition’
[08:08:06.420] | : . ' , ; exclude = 
[08:08:06.420] | : . ' , ; resignal = FALSE
[08:08:06.421] | : . ' , ; Number of conditions: 7
[08:08:06.421] | : . ' , ;  int 7
[08:08:06.421] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.421] | : . ' , ; already signaled, skipping
[08:08:06.421] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.421] | : . ' , ; already signaled, skipping
[08:08:06.421] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.422] | : . ' , ; already signaled, skipping
[08:08:06.422] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.422] | : . ' , ; already signaled, skipping
[08:08:06.422] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.422] | : . ' , ; already signaled, skipping
[08:08:06.422] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.422] | : . ' , ; already signaled, skipping
[08:08:06.422] | : . ' , ; Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:06.422] | : . ' , ; already signaled, skipping
[08:08:06.422] | : . ' , signalConditions() ... done
[08:08:06.422] | : . ' , relay stdout ...
[08:08:06.423] | : . ' , relay stdout ... done
[08:08:06.423] | : . ' , check for misuse ...
[08:08:06.423] | : . ' , check for misuse ... done
[08:08:06.423] | : . ' , relay conditions ...
[08:08:06.423] | : . ' , ; Future state: ‘finished’
[08:08:06.423] | : . ' , ; signalConditions() ...
[08:08:06.423] | : . ' , ; ` include = ‘condition’
[08:08:06.423] | : . ' , ; ` exclude = ‘immediateCondition’
[08:08:06.423] | : . ' , ; ` resignal = TRUE
[08:08:06.423] | : . ' , ; ` Number of conditions: 7
[08:08:06.424] | : . ' , ; `  int 7
[08:08:06.424] | : . ' , ; ` Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.424] | : . ' , ; ` Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.139] | : . ' , attachPackages() ...
[08:08:06.424] | : . ' , ; ` Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.424] | : . ' , ; ` Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.139] | : . ' , ; packages: [n=1] ‘future’
[08:08:06.424] | : . ' , ; ` Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.424] | : . ' , ; ` Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.139] | : . ' , attachPackages() ... done
[08:08:06.425] | : . ' , ; ` Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.425] | : . ' , ; ` Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.139] | : . ' , attachPackages() ...
[08:08:06.425] | : . ' , ; ` Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.425] | : . ' , ; ` Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.140] | : . ' , ; packages: [n=0] 
[08:08:06.425] | : . ' , ; ` Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.425] | : . ' , ; ` Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.140] | : . ' , attachPackages() ... done
[08:08:06.425] | : . ' , ; ` Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:06.425] | : . ' , ; ` Condition #7: ‘simpleError’, ‘error’, ‘condition’
[08:08:06.426] | : . ' , ; signalConditions() ... done
[08:08:06.426] | : . ' , relay conditions ... done
v3: <simpleError> (as expect)
[08:08:06.426] | : . ' , value() for SequentialFuture (<unnamed-7>) ...
[08:08:06.426] | : . ' , ; signalConditions() ...
[08:08:06.426] | : . ' , ; ` include = ‘immediateCondition’
[08:08:06.426] | : . ' , ; ` exclude = 
[08:08:06.426] | : . ' , ; ` resignal = FALSE
[08:08:06.426] | : . ' , ; ` Number of conditions: 6
[08:08:06.426] | : . ' , ; `  int 6
[08:08:06.427] | : . ' , ; ` Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.427] | : . ' , ; ` Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.427] | : . ' , ; ` Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.427] | : . ' , ; ` Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.427] | : . ' , ; ` Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.427] | : . ' , ; ` Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.427] | : . ' , ; signalConditions() ... done
[08:08:06.428] | : . ' , ; relay stdout ...
Processing: .......... [100%]
[08:08:06.428] | : . ' , ; relay stdout ... done
[08:08:06.428] | : . ' , ; check for misuse ...
[08:08:06.428] | : . ' , ; check for misuse ... done
[08:08:06.428] | : . ' , ; relay conditions ...
[08:08:06.428] | : . ' , ; ` Future state: ‘finished’
[08:08:06.428] | : . ' , ; ` signalConditions() ...
[08:08:06.428] | : . ' , ; ` | include = ‘condition’
[08:08:06.428] | : . ' , ; ` | exclude = ‘immediateCondition’
[08:08:06.428] | : . ' , ; ` | resignal = TRUE
[08:08:06.428] | : . ' , ; ` | Number of conditions: 6
[08:08:06.429] | : . ' , ; ` |  int 6
[08:08:06.429] | : . ' , ; ` | Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.429] | : . ' , ; ` | Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.393] | : . ' , ; ` | : attachPackages() ...
[08:08:06.429] | : . ' , ; ` | Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.429] | : . ' , ; ` | Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.393] | : . ' , ; ` | : . packages: [n=1] ‘future’
[08:08:06.429] | : . ' , ; ` | Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.430] | : . ' , ; ` | Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.393] | : . ' , ; ` | : attachPackages() ... done
[08:08:06.430] | : . ' , ; ` | Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.430] | : . ' , ; ` | Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.393] | : . ' , ; ` | : attachPackages() ...
[08:08:06.430] | : . ' , ; ` | Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.430] | : . ' , ; ` | Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.393] | : . ' , ; ` | : . packages: [n=0] 
[08:08:06.430] | : . ' , ; ` | Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.430] | : . ' , ; ` | Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.393] | : . ' , ; ` | : attachPackages() ... done
[08:08:06.430] | : . ' , ; ` signalConditions() ... done
[08:08:06.430] | : . ' , ; relay conditions ... done
[08:08:06.431] | : . ' , value() for SequentialFuture (<unnamed-7>) ... done
v4 = 4
** Left-to-right and right-to-left future assignments
[08:08:06.431] | : . ' , future(..., label = NULL) ...
[08:08:06.431] | : . ' , ; lazy: FALSE
[08:08:06.431] | : . ' , ; stdout: TRUE
[08:08:06.431] | : . ' , ; conditions: [n=1] ‘condition’
[08:08:06.431] | : . ' , ; gc: FALSE
[08:08:06.431] | : . ' , ; earlySignal: FALSE
[08:08:06.431] | : . ' , ; getGlobalsAndPackages() ...
[08:08:06.431] | : . ' , ; ` Searching for globals ...
[08:08:06.433] | : . ' , ; ` | globals found: [0] 
[08:08:06.433] | : . ' , ; ` Searching for globals ... done
[08:08:06.433] | : . ' , ; ` globals: [0] <none>
[08:08:06.433] | : . ' , ; ` packages: [0] <none>
[08:08:06.433] | : . ' , ; getGlobalsAndPackages() ... done
[08:08:06.433] | : . ' , ; run() for ‘Future’ (<unnamed-8>) ...
[08:08:06.433] | : . ' , ; ` state: ‘created’
[08:08:06.433] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.434] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.434] | : . ' , ; ` Using SequentialFutureBackend ...
[08:08:06.434] | : . ' , ; ` | Number of futures since start: 7 (7 created, 7 launched, 7 finished)
[08:08:06.434] | : . ' , ; ` | Launching futures ...
[08:08:06.434] | : . ' , ; ` | : launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:06.434] | : . ' , ; ` | : . getFutureData() ...
[08:08:06.434] | : . ' , ; ` | : . ' getFutureCore() ...
[08:08:06.434] | : . ' , ; ` | : . ' , Packages needed by the future expression (n = 0): <none>
[08:08:06.434] | : . ' , ; ` | : . ' getFutureCore() ... done
[08:08:06.434] | : . ' , ; ` | : . ' getFutureCapture() ...
[08:08:06.435] | : . ' , ; ` | : . ' getFutureCapture() ... done
[08:08:06.435] | : . ' , ; ` | : . ' getFutureContext() ...
[08:08:06.435] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.435] | : . ' , ; ` | : . ' , ; Getting stack without first backend: [n=0] 
[08:08:06.435] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.435] | : . ' , ; ` | : . ' , Packages needed by future backend (n = 0): <none>
[08:08:06.435] | : . ' , ; ` | : . ' getFutureContext() ... done
[08:08:06.435] | : . ' , ; ` | : . getFutureData() ... done
[08:08:06.437] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.437] | : . ' , ; ` | : . ' Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:06.437] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.437] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.437] | : . ' , ; ` | : . ' plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:06.437] | : . ' , ; ` | : . ' , all.equal() for FutureStrategyList ...
[08:08:06.437] | : . ' , ; ` | : . ' , ; New stack:
[08:08:06.437] | : . ' , ; ` | : . ' , ; List of 1
[08:08:06.437] | : . ' , ; ` | : . ' , ;  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.437] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.437] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= logi TRUE
[08:08:06.437] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.437] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.437] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.437] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.437] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.441] | : . ' , ; ` | : . ' , ; Old stack:
[08:08:06.441] | : . ' , ; ` | : . ' , ; List of 1
[08:08:06.441] | : . ' , ; ` | : . ' , ;  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.441] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.441] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:08:06.441] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.441] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.441] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.441] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(sequential)
[08:08:06.441] | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.441] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.441] | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.441] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.444] | : . ' , ; ` | : . ' , ; Not identical
[08:08:06.444] | : . ' , ; ` | : . ' , ; all.equal() for future ...
[08:08:06.444] | : . ' , ; ` | : . ' , ; ` List of 2
[08:08:06.444] | : . ' , ; ` | : . ' , ; `  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.444] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.444] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:06.444] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.444] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.444] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.444] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.444] | : . ' , ; ` | : . ' , ; `  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.444] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.444] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:08:06.444] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.444] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.444] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.444] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(sequential)
[08:08:06.444] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.444] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.444] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.449] | : . ' , ; ` | : . ' , ; all.equal() for future ... done
[08:08:06.449] | : . ' , ; ` | : . ' , all.equal() for FutureStrategyList ... done
[08:08:06.449] | : . ' , ; ` | : . ' , plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:06.449] | : . ' , ; ` | : . ' , List of future strategies:
[08:08:06.449] | : . ' , ; ` | : . ' , 1. sequential:
[08:08:06.449] | : . ' , ; ` | : . ' ,    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:06.449] | : . ' , ; ` | : . ' ,    - tweaked: FALSE
[08:08:06.449] | : . ' , ; ` | : . ' ,    - call: plan(sequential)
[08:08:06.450] | : . ' , ; ` | : . ' plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:06.450] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.451] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.451] | : . ' , ; ` | : . ' plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.451] | : . ' , ; ` | : . ' , plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:06.452] | : . ' , ; ` | : . ' , ; all.equal() for FutureStrategyList ...
[08:08:06.452] | : . ' , ; ` | : . ' , ; ` New stack:
[08:08:06.452] | : . ' , ; ` | : . ' , ; ` List of 1
[08:08:06.452] | : . ' , ; ` | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.452] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.452] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:08:06.452] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.452] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.452] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.452] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(sequential)
[08:08:06.452] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.452] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.452] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.452] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.455] | : . ' , ; ` | : . ' , ; ` Old stack:
[08:08:06.455] | : . ' , ; ` | : . ' , ; ` List of 1
[08:08:06.455] | : . ' , ; ` | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.455] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.455] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:08:06.455] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.455] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.455] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.455] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(sequential)
[08:08:06.455] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.455] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.455] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.455] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.459] | : . ' , ; ` | : . ' , ; ` Identical
[08:08:06.459] | : . ' , ; ` | : . ' , ; all.equal() for FutureStrategyList ... done
[08:08:06.459] | : . ' , ; ` | : . ' , ; plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:06.459] | : . ' , ; ` | : . ' , ; List of future strategies:
[08:08:06.459] | : . ' , ; ` | : . ' , ; 1. sequential:
[08:08:06.459] | : . ' , ; ` | : . ' , ;    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:06.459] | : . ' , ; ` | : . ' , ;    - tweaked: FALSE
[08:08:06.459] | : . ' , ; ` | : . ' , ;    - call: plan(sequential)
[08:08:06.460] | : . ' , ; ` | : . ' , plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:06.460] | : . ' , ; ` | : . ' plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.460] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.460] | : . ' , ; ` | : . SequentialFuture started (and completed)
[08:08:06.460] | : . ' , ; ` | : . signalConditions() ...
[08:08:06.460] | : . ' , ; ` | : . ' include = ‘immediateCondition’
[08:08:06.460] | : . ' , ; ` | : . ' exclude = 
[08:08:06.460] | : . ' , ; ` | : . ' resignal = FALSE
[08:08:06.461] | : . ' , ; ` | : . ' Number of conditions: 6
[08:08:06.461] | : . ' , ; ` | : . '  int 6
[08:08:06.461] | : . ' , ; ` | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.461] | : . ' , ; ` | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.461] | : . ' , ; ` | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.461] | : . ' , ; ` | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.461] | : . ' , ; ` | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.462] | : . ' , ; ` | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.462] | : . ' , ; ` | : . signalConditions() ... done
[08:08:06.462] | : . ' , ; ` | : launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:06.462] | : . ' , ; ` | Launching futures ... done
[08:08:06.462] | : . ' , ; ` | Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:06.462] | : . ' , ; ` Using SequentialFutureBackend ... done
[08:08:06.462] | : . ' , ; run() for ‘Future’ (<unnamed-8>) ... done
[08:08:06.462] | : . ' , future(..., label = NULL) ... done
[08:08:06.462] | : . ' , value() for SequentialFuture (<unnamed-8>) ...
[08:08:06.463] | : . ' , ; signalConditions() ...
[08:08:06.463] | : . ' , ; ` include = ‘immediateCondition’
[08:08:06.463] | : . ' , ; ` exclude = 
[08:08:06.463] | : . ' , ; ` resignal = FALSE
[08:08:06.463] | : . ' , ; ` Number of conditions: 6
[08:08:06.463] | : . ' , ; `  int 6
[08:08:06.463] | : . ' , ; ` Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.463] | : . ' , ; ` Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.464] | : . ' , ; ` Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.464] | : . ' , ; ` Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.464] | : . ' , ; ` Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.464] | : . ' , ; ` Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.464] | : . ' , ; signalConditions() ... done
[08:08:06.464] | : . ' , ; relay stdout ...
[08:08:06.464] | : . ' , ; relay stdout ... done
[08:08:06.464] | : . ' , ; check for misuse ...
[08:08:06.464] | : . ' , ; check for misuse ... done
[08:08:06.464] | : . ' , ; relay conditions ...
[08:08:06.465] | : . ' , ; ` Future state: ‘finished’
[08:08:06.465] | : . ' , ; ` signalConditions() ...
[08:08:06.465] | : . ' , ; ` | include = ‘condition’
[08:08:06.465] | : . ' , ; ` | exclude = ‘immediateCondition’
[08:08:06.465] | : . ' , ; ` | resignal = TRUE
[08:08:06.465] | : . ' , ; ` | Number of conditions: 6
[08:08:06.465] | : . ' , ; ` |  int 6
[08:08:06.465] | : . ' , ; ` | Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.466] | : . ' , ; ` | Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.436] | : . ' , ; ` | : . attachPackages() ...
[08:08:06.466] | : . ' , ; ` | Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.466] | : . ' , ; ` | Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.436] | : . ' , ; ` | : . ' packages: [n=1] ‘future’
[08:08:06.466] | : . ' , ; ` | Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.466] | : . ' , ; ` | Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.436] | : . ' , ; ` | : . attachPackages() ... done
[08:08:06.466] | : . ' , ; ` | Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.466] | : . ' , ; ` | Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.436] | : . ' , ; ` | : . attachPackages() ...
[08:08:06.466] | : . ' , ; ` | Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.467] | : . ' , ; ` | Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.436] | : . ' , ; ` | : . ' packages: [n=0] 
[08:08:06.467] | : . ' , ; ` | Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.467] | : . ' , ; ` | Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.436] | : . ' , ; ` | : . attachPackages() ... done
[08:08:06.467] | : . ' , ; ` signalConditions() ... done
[08:08:06.467] | : . ' , ; relay conditions ... done
[08:08:06.467] | : . ' , value() for SequentialFuture (<unnamed-8>) ... done
c = 1
[08:08:06.467] | : . ' , future(..., label = NULL) ...
[08:08:06.467] | : . ' , ; lazy: FALSE
[08:08:06.467] | : . ' , ; stdout: TRUE
[08:08:06.468] | : . ' , ; conditions: [n=1] ‘condition’
[08:08:06.468] | : . ' , ; gc: FALSE
[08:08:06.468] | : . ' , ; earlySignal: FALSE
[08:08:06.468] | : . ' , ; getGlobalsAndPackages() ...
[08:08:06.468] | : . ' , ; ` Searching for globals ...
[08:08:06.469] | : . ' , ; ` | globals found: [0] 
[08:08:06.469] | : . ' , ; ` Searching for globals ... done
[08:08:06.469] | : . ' , ; ` globals: [0] <none>
[08:08:06.469] | : . ' , ; ` packages: [0] <none>
[08:08:06.469] | : . ' , ; getGlobalsAndPackages() ... done
[08:08:06.470] | : . ' , ; run() for ‘Future’ (<unnamed-9>) ...
[08:08:06.470] | : . ' , ; ` state: ‘created’
[08:08:06.470] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.470] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.470] | : . ' , ; ` Using SequentialFutureBackend ...
[08:08:06.470] | : . ' , ; ` | Number of futures since start: 8 (8 created, 8 launched, 8 finished)
[08:08:06.470] | : . ' , ; ` | Launching futures ...
[08:08:06.470] | : . ' , ; ` | : launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:06.470] | : . ' , ; ` | : . getFutureData() ...
[08:08:06.471] | : . ' , ; ` | : . ' getFutureCore() ...
[08:08:06.471] | : . ' , ; ` | : . ' , Packages needed by the future expression (n = 0): <none>
[08:08:06.471] | : . ' , ; ` | : . ' getFutureCore() ... done
[08:08:06.471] | : . ' , ; ` | : . ' getFutureCapture() ...
[08:08:06.471] | : . ' , ; ` | : . ' getFutureCapture() ... done
[08:08:06.471] | : . ' , ; ` | : . ' getFutureContext() ...
[08:08:06.471] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.471] | : . ' , ; ` | : . ' , ; Getting stack without first backend: [n=0] 
[08:08:06.471] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.471] | : . ' , ; ` | : . ' , Packages needed by future backend (n = 0): <none>
[08:08:06.472] | : . ' , ; ` | : . ' getFutureContext() ... done
[08:08:06.472] | : . ' , ; ` | : . getFutureData() ... done
[08:08:06.473] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.473] | : . ' , ; ` | : . ' Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:06.473] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.473] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.473] | : . ' , ; ` | : . ' plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:06.474] | : . ' , ; ` | : . ' , all.equal() for FutureStrategyList ...
[08:08:06.474] | : . ' , ; ` | : . ' , ; New stack:
[08:08:06.474] | : . ' , ; ` | : . ' , ; List of 1
[08:08:06.474] | : . ' , ; ` | : . ' , ;  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.474] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.474] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= logi TRUE
[08:08:06.474] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.474] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.474] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.474] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.474] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.477] | : . ' , ; ` | : . ' , ; Old stack:
[08:08:06.477] | : . ' , ; ` | : . ' , ; List of 1
[08:08:06.477] | : . ' , ; ` | : . ' , ;  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.477] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.477] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:08:06.477] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.477] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.477] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.477] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(sequential)
[08:08:06.477] | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.477] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.477] | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.477] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.480] | : . ' , ; ` | : . ' , ; Not identical
[08:08:06.481] | : . ' , ; ` | : . ' , ; all.equal() for future ...
[08:08:06.481] | : . ' , ; ` | : . ' , ; ` List of 2
[08:08:06.481] | : . ' , ; ` | : . ' , ; `  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.481] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.481] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:06.481] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.481] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.481] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.481] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.481] | : . ' , ; ` | : . ' , ; `  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.481] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.481] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:08:06.481] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.481] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.481] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.481] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(sequential)
[08:08:06.481] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.481] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.481] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.486] | : . ' , ; ` | : . ' , ; all.equal() for future ... done
[08:08:06.486] | : . ' , ; ` | : . ' , all.equal() for FutureStrategyList ... done
[08:08:06.486] | : . ' , ; ` | : . ' , plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:06.486] | : . ' , ; ` | : . ' , List of future strategies:
[08:08:06.486] | : . ' , ; ` | : . ' , 1. sequential:
[08:08:06.486] | : . ' , ; ` | : . ' ,    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:06.486] | : . ' , ; ` | : . ' ,    - tweaked: FALSE
[08:08:06.486] | : . ' , ; ` | : . ' ,    - call: plan(sequential)
[08:08:06.486] | : . ' , ; ` | : . ' plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:06.486] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.488] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.488] | : . ' , ; ` | : . ' plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.488] | : . ' , ; ` | : . ' , plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:06.488] | : . ' , ; ` | : . ' , ; all.equal() for FutureStrategyList ...
[08:08:06.488] | : . ' , ; ` | : . ' , ; ` New stack:
[08:08:06.489] | : . ' , ; ` | : . ' , ; ` List of 1
[08:08:06.489] | : . ' , ; ` | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.489] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.489] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:08:06.489] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.489] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.489] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.489] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(sequential)
[08:08:06.489] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.489] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.489] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.489] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.492] | : . ' , ; ` | : . ' , ; ` Old stack:
[08:08:06.492] | : . ' , ; ` | : . ' , ; ` List of 1
[08:08:06.492] | : . ' , ; ` | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.492] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.492] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:08:06.492] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.492] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.492] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.492] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(sequential)
[08:08:06.492] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.492] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.492] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.492] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.495] | : . ' , ; ` | : . ' , ; ` Identical
[08:08:06.496] | : . ' , ; ` | : . ' , ; all.equal() for FutureStrategyList ... done
[08:08:06.496] | : . ' , ; ` | : . ' , ; plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:06.496] | : . ' , ; ` | : . ' , ; List of future strategies:
[08:08:06.496] | : . ' , ; ` | : . ' , ; 1. sequential:
[08:08:06.496] | : . ' , ; ` | : . ' , ;    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:06.496] | : . ' , ; ` | : . ' , ;    - tweaked: FALSE
[08:08:06.496] | : . ' , ; ` | : . ' , ;    - call: plan(sequential)
[08:08:06.496] | : . ' , ; ` | : . ' , plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:06.496] | : . ' , ; ` | : . ' plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.496] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.497] | : . ' , ; ` | : . SequentialFuture started (and completed)
[08:08:06.497] | : . ' , ; ` | : . signalConditions() ...
[08:08:06.497] | : . ' , ; ` | : . ' include = ‘immediateCondition’
[08:08:06.497] | : . ' , ; ` | : . ' exclude = 
[08:08:06.497] | : . ' , ; ` | : . ' resignal = FALSE
[08:08:06.497] | : . ' , ; ` | : . ' Number of conditions: 6
[08:08:06.497] | : . ' , ; ` | : . '  int 6
[08:08:06.498] | : . ' , ; ` | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.498] | : . ' , ; ` | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.498] | : . ' , ; ` | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.498] | : . ' , ; ` | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.498] | : . ' , ; ` | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.498] | : . ' , ; ` | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.498] | : . ' , ; ` | : . signalConditions() ... done
[08:08:06.498] | : . ' , ; ` | : launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:06.499] | : . ' , ; ` | Launching futures ... done
[08:08:06.499] | : . ' , ; ` | Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:06.499] | : . ' , ; ` Using SequentialFutureBackend ... done
[08:08:06.499] | : . ' , ; run() for ‘Future’ (<unnamed-9>) ... done
[08:08:06.499] | : . ' , future(..., label = NULL) ... done
[08:08:06.499] | : . ' , value() for SequentialFuture (<unnamed-9>) ...
[08:08:06.499] | : . ' , ; signalConditions() ...
[08:08:06.499] | : . ' , ; ` include = ‘immediateCondition’
[08:08:06.499] | : . ' , ; ` exclude = 
[08:08:06.499] | : . ' , ; ` resignal = FALSE
[08:08:06.500] | : . ' , ; ` Number of conditions: 6
[08:08:06.500] | : . ' , ; `  int 6
[08:08:06.500] | : . ' , ; ` Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.500] | : . ' , ; ` Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.500] | : . ' , ; ` Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.500] | : . ' , ; ` Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.500] | : . ' , ; ` Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.501] | : . ' , ; ` Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.501] | : . ' , ; signalConditions() ... done
[08:08:06.501] | : . ' , ; relay stdout ...
[08:08:06.501] | : . ' , ; relay stdout ... done
[08:08:06.501] | : . ' , ; check for misuse ...
[08:08:06.501] | : . ' , ; check for misuse ... done
[08:08:06.501] | : . ' , ; relay conditions ...
[08:08:06.501] | : . ' , ; ` Future state: ‘finished’
[08:08:06.501] | : . ' , ; ` signalConditions() ...
[08:08:06.501] | : . ' , ; ` | include = ‘condition’
[08:08:06.502] | : . ' , ; ` | exclude = ‘immediateCondition’
[08:08:06.502] | : . ' , ; ` | resignal = TRUE
[08:08:06.502] | : . ' , ; ` | Number of conditions: 6
[08:08:06.502] | : . ' , ; ` |  int 6
[08:08:06.502] | : . ' , ; ` | Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.502] | : . ' , ; ` | Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.472] | : . ' , ; ` | : . attachPackages() ...
[08:08:06.502] | : . ' , ; ` | Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.503] | : . ' , ; ` | Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.472] | : . ' , ; ` | : . ' packages: [n=1] ‘future’
[08:08:06.503] | : . ' , ; ` | Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.503] | : . ' , ; ` | Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.472] | : . ' , ; ` | : . attachPackages() ... done
[08:08:06.503] | : . ' , ; ` | Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.503] | : . ' , ; ` | Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.472] | : . ' , ; ` | : . attachPackages() ...
[08:08:06.503] | : . ' , ; ` | Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.503] | : . ' , ; ` | Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.472] | : . ' , ; ` | : . ' packages: [n=0] 
[08:08:06.503] | : . ' , ; ` | Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.503] | : . ' , ; ` | Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.473] | : . ' , ; ` | : . attachPackages() ... done
[08:08:06.504] | : . ' , ; ` signalConditions() ... done
[08:08:06.504] | : . ' , ; relay conditions ... done
[08:08:06.504] | : . ' , value() for SequentialFuture (<unnamed-9>) ... done
d = 1
** Nested future assignments
[08:08:06.504] | : . ' , future(..., label = NULL) ...
[08:08:06.504] | : . ' , ; lazy: FALSE
[08:08:06.504] | : . ' , ; stdout: TRUE
[08:08:06.504] | : . ' , ; conditions: [n=1] ‘condition’
[08:08:06.504] | : . ' , ; gc: FALSE
[08:08:06.505] | : . ' , ; earlySignal: FALSE
[08:08:06.505] | : . ' , ; getGlobalsAndPackages() ...
[08:08:06.505] | : . ' , ; ` Searching for globals ...
[08:08:06.536] | : . ' , ; ` | globals found: [5] ‘{’, ‘<-’, ‘%<-%’, ‘%->%’, ‘+’
[08:08:06.536] | : . ' , ; ` Searching for globals ... done
[08:08:06.536] | : . ' , ; ` Resolving globals: FALSE
[08:08:06.536] | : . ' , ; ` Search for packages associated with the globals ...
[08:08:06.536] | : . ' , ; ` | Packages associated with globals: [2] ‘base’, ‘future’
[08:08:06.537] | : . ' , ; ` | Packages: [2] ‘base’, ‘future’
[08:08:06.537] | : . ' , ; ` Search for packages associated with the globals ... done
[08:08:06.537] | : . ' , ; ` Packages after dropping 'base': [1] ‘future’
[08:08:06.537] | : . ' , ; ` Packages after dropping non-attached packages: [1] ‘future’
[08:08:06.537] | : . ' , ; ` globals: [0] 
[08:08:06.537] | : . ' , ; ` packages: [1] ‘future’
[08:08:06.537] | : . ' , ; getGlobalsAndPackages() ... done
[08:08:06.538] | : . ' , ; run() for ‘Future’ (<unnamed-10>) ...
[08:08:06.538] | : . ' , ; ` state: ‘created’
[08:08:06.538] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.538] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.538] | : . ' , ; ` Using SequentialFutureBackend ...
[08:08:06.538] | : . ' , ; ` | Number of futures since start: 9 (9 created, 9 launched, 9 finished)
[08:08:06.538] | : . ' , ; ` | Launching futures ...
[08:08:06.539] | : . ' , ; ` | : launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:06.539] | : . ' , ; ` | : . getFutureData() ...
[08:08:06.539] | : . ' , ; ` | : . ' getFutureCore() ...
[08:08:06.539] | : . ' , ; ` | : . ' , Packages needed by the future expression (n = 1): ‘future’
[08:08:06.539] | : . ' , ; ` | : . ' getFutureCore() ... done
[08:08:06.539] | : . ' , ; ` | : . ' getFutureCapture() ...
[08:08:06.539] | : . ' , ; ` | : . ' getFutureCapture() ... done
[08:08:06.539] | : . ' , ; ` | : . ' getFutureContext() ...
[08:08:06.539] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.540] | : . ' , ; ` | : . ' , ; Getting stack without first backend: [n=0] 
[08:08:06.540] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.540] | : . ' , ; ` | : . ' , Packages needed by future backend (n = 0): <none>
[08:08:06.540] | : . ' , ; ` | : . ' getFutureContext() ... done
[08:08:06.540] | : . ' , ; ` | : . getFutureData() ... done
[08:08:06.541] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.542] | : . ' , ; ` | : . ' Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:06.542] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.542] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.542] | : . ' , ; ` | : . ' plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:06.542] | : . ' , ; ` | : . ' , all.equal() for FutureStrategyList ...
[08:08:06.542] | : . ' , ; ` | : . ' , ; New stack:
[08:08:06.542] | : . ' , ; ` | : . ' , ; List of 1
[08:08:06.542] | : . ' , ; ` | : . ' , ;  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.542] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.542] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= logi TRUE
[08:08:06.542] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.542] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.542] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.542] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.542] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.545] | : . ' , ; ` | : . ' , ; Old stack:
[08:08:06.545] | : . ' , ; ` | : . ' , ; List of 1
[08:08:06.545] | : . ' , ; ` | : . ' , ;  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.545] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.545] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:08:06.545] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.545] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.545] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.545] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(sequential)
[08:08:06.545] | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.545] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.545] | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.545] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.550] | : . ' , ; ` | : . ' , ; Not identical
[08:08:06.550] | : . ' , ; ` | : . ' , ; all.equal() for future ...
[08:08:06.550] | : . ' , ; ` | : . ' , ; ` List of 2
[08:08:06.550] | : . ' , ; ` | : . ' , ; `  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.550] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.550] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:06.550] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.550] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.550] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.550] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.550] | : . ' , ; ` | : . ' , ; `  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.550] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.550] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:08:06.550] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.550] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.550] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.550] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(sequential)
[08:08:06.550] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.550] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.550] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.556] | : . ' , ; ` | : . ' , ; all.equal() for future ... done
[08:08:06.556] | : . ' , ; ` | : . ' , all.equal() for FutureStrategyList ... done
[08:08:06.556] | : . ' , ; ` | : . ' , plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:06.556] | : . ' , ; ` | : . ' , List of future strategies:
[08:08:06.556] | : . ' , ; ` | : . ' , 1. sequential:
[08:08:06.556] | : . ' , ; ` | : . ' ,    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:06.556] | : . ' , ; ` | : . ' ,    - tweaked: FALSE
[08:08:06.556] | : . ' , ; ` | : . ' ,    - call: plan(sequential)
[08:08:06.557] | : . ' , ; ` | : . ' plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:06.557] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.640] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.640] | : . ' , ; ` | : . ' plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.640] | : . ' , ; ` | : . ' , plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:06.640] | : . ' , ; ` | : . ' , ; all.equal() for FutureStrategyList ...
[08:08:06.641] | : . ' , ; ` | : . ' , ; ` New stack:
[08:08:06.641] | : . ' , ; ` | : . ' , ; ` List of 1
[08:08:06.641] | : . ' , ; ` | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.641] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.641] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:08:06.641] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.641] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.641] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.641] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(sequential)
[08:08:06.641] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.641] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.641] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.641] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.644] | : . ' , ; ` | : . ' , ; ` Old stack:
[08:08:06.644] | : . ' , ; ` | : . ' , ; ` List of 1
[08:08:06.644] | : . ' , ; ` | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.644] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.644] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:08:06.644] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.644] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.644] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.644] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(sequential)
[08:08:06.644] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.644] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.644] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.644] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.647] | : . ' , ; ` | : . ' , ; ` Identical
[08:08:06.647] | : . ' , ; ` | : . ' , ; all.equal() for FutureStrategyList ... done
[08:08:06.647] | : . ' , ; ` | : . ' , ; plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:06.647] | : . ' , ; ` | : . ' , ; List of future strategies:
[08:08:06.647] | : . ' , ; ` | : . ' , ; 1. sequential:
[08:08:06.647] | : . ' , ; ` | : . ' , ;    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:06.647] | : . ' , ; ` | : . ' , ;    - tweaked: FALSE
[08:08:06.647] | : . ' , ; ` | : . ' , ;    - call: plan(sequential)
[08:08:06.648] | : . ' , ; ` | : . ' , plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:06.648] | : . ' , ; ` | : . ' plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.648] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.648] | : . ' , ; ` | : . SequentialFuture started (and completed)
[08:08:06.648] | : . ' , ; ` | : . signalConditions() ...
[08:08:06.648] | : . ' , ; ` | : . ' include = ‘immediateCondition’
[08:08:06.648] | : . ' , ; ` | : . ' exclude = 
[08:08:06.648] | : . ' , ; ` | : . ' resignal = FALSE
[08:08:06.649] | : . ' , ; ` | : . ' Number of conditions: 276
[08:08:06.649] | : . ' , ; ` | : . '  int 276
[08:08:06.649] | : . ' , ; ` | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.649] | : . ' , ; ` | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.649] | : . ' , ; ` | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.649] | : . ' , ; ` | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.649] | : . ' , ; ` | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.650] | : . ' , ; ` | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.650] | : . ' , ; ` | : . ' Condition #7 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.650] | : . ' , ; ` | : . ' Condition #8 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.650] | : . ' , ; ` | : . ' Condition #9 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.650] | : . ' , ; ` | : . ' Condition #10 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.650] | : . ' , ; ` | : . ' Condition #11 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.650] | : . ' , ; ` | : . ' Condition #12 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.650] | : . ' , ; ` | : . ' Condition #13 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.650] | : . ' , ; ` | : . ' Condition #14 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.650] | : . ' , ; ` | : . ' Condition #15 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.651] | : . ' , ; ` | : . ' Condition #16 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.651] | : . ' , ; ` | : . ' Condition #17 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.651] | : . ' , ; ` | : . ' Condition #18 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.651] | : . ' , ; ` | : . ' Condition #19 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.651] | : . ' , ; ` | : . ' Condition #20 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.651] | : . ' , ; ` | : . ' Condition #21 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.651] | : . ' , ; ` | : . ' Condition #22 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.651] | : . ' , ; ` | : . ' Condition #23 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.651] | : . ' , ; ` | : . ' Condition #24 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.651] | : . ' , ; ` | : . ' Condition #25 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.651] | : . ' , ; ` | : . ' Condition #26 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.652] | : . ' , ; ` | : . ' Condition #27 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.652] | : . ' , ; ` | : . ' Condition #28 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.652] | : . ' , ; ` | : . ' Condition #29 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.652] | : . ' , ; ` | : . ' Condition #30 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.652] | : . ' , ; ` | : . ' Condition #31 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.652] | : . ' , ; ` | : . ' Condition #32 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.652] | : . ' , ; ` | : . ' Condition #33 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.652] | : . ' , ; ` | : . ' Condition #34 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.652] | : . ' , ; ` | : . ' Condition #35 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.652] | : . ' , ; ` | : . ' Condition #36 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.653] | : . ' , ; ` | : . ' Condition #37 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.653] | : . ' , ; ` | : . ' Condition #38 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.653] | : . ' , ; ` | : . ' Condition #39 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.653] | : . ' , ; ` | : . ' Condition #40 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.653] | : . ' , ; ` | : . ' Condition #41 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.653] | : . ' , ; ` | : . ' Condition #42 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.653] | : . ' , ; ` | : . ' Condition #43 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.653] | : . ' , ; ` | : . ' Condition #44 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.653] | : . ' , ; ` | : . ' Condition #45 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.653] | : . ' , ; ` | : . ' Condition #46 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.654] | : . ' , ; ` | : . ' Condition #47 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.654] | : . ' , ; ` | : . ' Condition #48 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.654] | : . ' , ; ` | : . ' Condition #49 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.654] | : . ' , ; ` | : . ' Condition #50 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.654] | : . ' , ; ` | : . ' Condition #51 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.654] | : . ' , ; ` | : . ' Condition #52 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.654] | : . ' , ; ` | : . ' Condition #53 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.654] | : . ' , ; ` | : . ' Condition #54 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.654] | : . ' , ; ` | : . ' Condition #55 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.654] | : . ' , ; ` | : . ' Condition #56 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.654] | : . ' , ; ` | : . ' Condition #57 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.655] | : . ' , ; ` | : . ' Condition #58 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.655] | : . ' , ; ` | : . ' Condition #59 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.655] | : . ' , ; ` | : . ' Condition #60 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.655] | : . ' , ; ` | : . ' Condition #61 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.655] | : . ' , ; ` | : . ' Condition #62 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.655] | : . ' , ; ` | : . ' Condition #63 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.655] | : . ' , ; ` | : . ' Condition #64 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.656] | : . ' , ; ` | : . ' Condition #65 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.656] | : . ' , ; ` | : . ' Condition #66 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.656] | : . ' , ; ` | : . ' Condition #67 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.656] | : . ' , ; ` | : . ' Condition #68 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.656] | : . ' , ; ` | : . ' Condition #69 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.656] | : . ' , ; ` | : . ' Condition #70 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.657] | : . ' , ; ` | : . ' Condition #71 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.657] | : . ' , ; ` | : . ' Condition #72 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.657] | : . ' , ; ` | : . ' Condition #73 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.657] | : . ' , ; ` | : . ' Condition #74 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.657] | : . ' , ; ` | : . ' Condition #75 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.657] | : . ' , ; ` | : . ' Condition #76 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.657] | : . ' , ; ` | : . ' Condition #77 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.657] | : . ' , ; ` | : . ' Condition #78 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.657] | : . ' , ; ` | : . ' Condition #79 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.657] | : . ' , ; ` | : . ' Condition #80 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.658] | : . ' , ; ` | : . ' Condition #81 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.658] | : . ' , ; ` | : . ' Condition #82 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.658] | : . ' , ; ` | : . ' Condition #83 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.658] | : . ' , ; ` | : . ' Condition #84 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.658] | : . ' , ; ` | : . ' Condition #85 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.658] | : . ' , ; ` | : . ' Condition #86 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.658] | : . ' , ; ` | : . ' Condition #87 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.658] | : . ' , ; ` | : . ' Condition #88 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.658] | : . ' , ; ` | : . ' Condition #89 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.658] | : . ' , ; ` | : . ' Condition #90 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.659] | : . ' , ; ` | : . ' Condition #91 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.659] | : . ' , ; ` | : . ' Condition #92 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.659] | : . ' , ; ` | : . ' Condition #93 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.659] | : . ' , ; ` | : . ' Condition #94 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.659] | : . ' , ; ` | : . ' Condition #95 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.659] | : . ' , ; ` | : . ' Condition #96 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.659] | : . ' , ; ` | : . ' Condition #97 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.659] | : . ' , ; ` | : . ' Condition #98 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.659] | : . ' , ; ` | : . ' Condition #99 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.659] | : . ' , ; ` | : . ' Condition #100 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.659] | : . ' , ; ` | : . ' Condition #101 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.660] | : . ' , ; ` | : . ' Condition #102 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.660] | : . ' , ; ` | : . ' Condition #103 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.660] | : . ' , ; ` | : . ' Condition #104 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.660] | : . ' , ; ` | : . ' Condition #105 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.660] | : . ' , ; ` | : . ' Condition #106 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.660] | : . ' , ; ` | : . ' Condition #107 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.660] | : . ' , ; ` | : . ' Condition #108 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.660] | : . ' , ; ` | : . ' Condition #109 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.660] | : . ' , ; ` | : . ' Condition #110 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.660] | : . ' , ; ` | : . ' Condition #111 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.661] | : . ' , ; ` | : . ' Condition #112 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.661] | : . ' , ; ` | : . ' Condition #113 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.661] | : . ' , ; ` | : . ' Condition #114 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.661] | : . ' , ; ` | : . ' Condition #115 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.661] | : . ' , ; ` | : . ' Condition #116 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.661] | : . ' , ; ` | : . ' Condition #117 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.661] | : . ' , ; ` | : . ' Condition #118 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.661] | : . ' , ; ` | : . ' Condition #119 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.661] | : . ' , ; ` | : . ' Condition #120 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.662] | : . ' , ; ` | : . ' Condition #121 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.662] | : . ' , ; ` | : . ' Condition #122 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.662] | : . ' , ; ` | : . ' Condition #123 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.662] | : . ' , ; ` | : . ' Condition #124 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.662] | : . ' , ; ` | : . ' Condition #125 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.662] | : . ' , ; ` | : . ' Condition #126 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.662] | : . ' , ; ` | : . ' Condition #127 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.662] | : . ' , ; ` | : . ' Condition #128 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.662] | : . ' , ; ` | : . ' Condition #129 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.662] | : . ' , ; ` | : . ' Condition #130 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.662] | : . ' , ; ` | : . ' Condition #131 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.663] | : . ' , ; ` | : . ' Condition #132 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.663] | : . ' , ; ` | : . ' Condition #133 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.663] | : . ' , ; ` | : . ' Condition #134 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.663] | : . ' , ; ` | : . ' Condition #135 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.663] | : . ' , ; ` | : . ' Condition #136 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.663] | : . ' , ; ` | : . ' Condition #137 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.663] | : . ' , ; ` | : . ' Condition #138 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.663] | : . ' , ; ` | : . ' Condition #139 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.663] | : . ' , ; ` | : . ' Condition #140 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.663] | : . ' , ; ` | : . ' Condition #141 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.664] | : . ' , ; ` | : . ' Condition #142 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.664] | : . ' , ; ` | : . ' Condition #143 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.664] | : . ' , ; ` | : . ' Condition #144 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.664] | : . ' , ; ` | : . ' Condition #145 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.664] | : . ' , ; ` | : . ' Condition #146 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.664] | : . ' , ; ` | : . ' Condition #147 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.664] | : . ' , ; ` | : . ' Condition #148 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.664] | : . ' , ; ` | : . ' Condition #149 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.664] | : . ' , ; ` | : . ' Condition #150 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.664] | : . ' , ; ` | : . ' Condition #151 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.664] | : . ' , ; ` | : . ' Condition #152 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.665] | : . ' , ; ` | : . ' Condition #153 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.665] | : . ' , ; ` | : . ' Condition #154 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.665] | : . ' , ; ` | : . ' Condition #155 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.665] | : . ' , ; ` | : . ' Condition #156 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.665] | : . ' , ; ` | : . ' Condition #157 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.665] | : . ' , ; ` | : . ' Condition #158 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.665] | : . ' , ; ` | : . ' Condition #159 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.665] | : . ' , ; ` | : . ' Condition #160 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.665] | : . ' , ; ` | : . ' Condition #161 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.665] | : . ' , ; ` | : . ' Condition #162 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.666] | : . ' , ; ` | : . ' Condition #163 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.666] | : . ' , ; ` | : . ' Condition #164 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.666] | : . ' , ; ` | : . ' Condition #165 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.666] | : . ' , ; ` | : . ' Condition #166 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.666] | : . ' , ; ` | : . ' Condition #167 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.666] | : . ' , ; ` | : . ' Condition #168 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.666] | : . ' , ; ` | : . ' Condition #169 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.666] | : . ' , ; ` | : . ' Condition #170 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.666] | : . ' , ; ` | : . ' Condition #171 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.666] | : . ' , ; ` | : . ' Condition #172 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.666] | : . ' , ; ` | : . ' Condition #173 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.667] | : . ' , ; ` | : . ' Condition #174 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.667] | : . ' , ; ` | : . ' Condition #175 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.667] | : . ' , ; ` | : . ' Condition #176 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.667] | : . ' , ; ` | : . ' Condition #177 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.667] | : . ' , ; ` | : . ' Condition #178 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.667] | : . ' , ; ` | : . ' Condition #179 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.667] | : . ' , ; ` | : . ' Condition #180 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.667] | : . ' , ; ` | : . ' Condition #181 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.667] | : . ' , ; ` | : . ' Condition #182 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.667] | : . ' , ; ` | : . ' Condition #183 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.668] | : . ' , ; ` | : . ' Condition #184 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.668] | : . ' , ; ` | : . ' Condition #185 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.668] | : . ' , ; ` | : . ' Condition #186 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.668] | : . ' , ; ` | : . ' Condition #187 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.668] | : . ' , ; ` | : . ' Condition #188 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.668] | : . ' , ; ` | : . ' Condition #189 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.668] | : . ' , ; ` | : . ' Condition #190 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.668] | : . ' , ; ` | : . ' Condition #191 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.668] | : . ' , ; ` | : . ' Condition #192 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.668] | : . ' , ; ` | : . ' Condition #193 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.668] | : . ' , ; ` | : . ' Condition #194 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.669] | : . ' , ; ` | : . ' Condition #195 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.669] | : . ' , ; ` | : . ' Condition #196 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.669] | : . ' , ; ` | : . ' Condition #197 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.669] | : . ' , ; ` | : . ' Condition #198 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.669] | : . ' , ; ` | : . ' Condition #199 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.669] | : . ' , ; ` | : . ' Condition #200 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.669] | : . ' , ; ` | : . ' Condition #201 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.669] | : . ' , ; ` | : . ' Condition #202 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.669] | : . ' , ; ` | : . ' Condition #203 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.669] | : . ' , ; ` | : . ' Condition #204 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.670] | : . ' , ; ` | : . ' Condition #205 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.670] | : . ' , ; ` | : . ' Condition #206 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.670] | : . ' , ; ` | : . ' Condition #207 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.670] | : . ' , ; ` | : . ' Condition #208 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.670] | : . ' , ; ` | : . ' Condition #209 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.670] | : . ' , ; ` | : . ' Condition #210 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.670] | : . ' , ; ` | : . ' Condition #211 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.670] | : . ' , ; ` | : . ' Condition #212 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.670] | : . ' , ; ` | : . ' Condition #213 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.670] | : . ' , ; ` | : . ' Condition #214 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.671] | : . ' , ; ` | : . ' Condition #215 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.671] | : . ' , ; ` | : . ' Condition #216 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.671] | : . ' , ; ` | : . ' Condition #217 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.671] | : . ' , ; ` | : . ' Condition #218 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.671] | : . ' , ; ` | : . ' Condition #219 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.671] | : . ' , ; ` | : . ' Condition #220 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.672] | : . ' , ; ` | : . ' Condition #221 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.672] | : . ' , ; ` | : . ' Condition #222 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.672] | : . ' , ; ` | : . ' Condition #223 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.672] | : . ' , ; ` | : . ' Condition #224 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.672] | : . ' , ; ` | : . ' Condition #225 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.672] | : . ' , ; ` | : . ' Condition #226 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.672] | : . ' , ; ` | : . ' Condition #227 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.673] | : . ' , ; ` | : . ' Condition #228 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.673] | : . ' , ; ` | : . ' Condition #229 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.673] | : . ' , ; ` | : . ' Condition #230 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.673] | : . ' , ; ` | : . ' Condition #231 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.673] | : . ' , ; ` | : . ' Condition #232 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.673] | : . ' , ; ` | : . ' Condition #233 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.673] | : . ' , ; ` | : . ' Condition #234 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.673] | : . ' , ; ` | : . ' Condition #235 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.673] | : . ' , ; ` | : . ' Condition #236 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.673] | : . ' , ; ` | : . ' Condition #237 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.673] | : . ' , ; ` | : . ' Condition #238 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.674] | : . ' , ; ` | : . ' Condition #239 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.674] | : . ' , ; ` | : . ' Condition #240 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.674] | : . ' , ; ` | : . ' Condition #241 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.674] | : . ' , ; ` | : . ' Condition #242 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.674] | : . ' , ; ` | : . ' Condition #243 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.674] | : . ' , ; ` | : . ' Condition #244 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.674] | : . ' , ; ` | : . ' Condition #245 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.674] | : . ' , ; ` | : . ' Condition #246 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.674] | : . ' , ; ` | : . ' Condition #247 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.674] | : . ' , ; ` | : . ' Condition #248 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.675] | : . ' , ; ` | : . ' Condition #249 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.675] | : . ' , ; ` | : . ' Condition #250 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.675] | : . ' , ; ` | : . ' Condition #251 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.675] | : . ' , ; ` | : . ' Condition #252 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.675] | : . ' , ; ` | : . ' Condition #253 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.675] | : . ' , ; ` | : . ' Condition #254 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.675] | : . ' , ; ` | : . ' Condition #255 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.675] | : . ' , ; ` | : . ' Condition #256 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.675] | : . ' , ; ` | : . ' Condition #257 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.675] | : . ' , ; ` | : . ' Condition #258 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.675] | : . ' , ; ` | : . ' Condition #259 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.676] | : . ' , ; ` | : . ' Condition #260 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.676] | : . ' , ; ` | : . ' Condition #261 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.676] | : . ' , ; ` | : . ' Condition #262 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.676] | : . ' , ; ` | : . ' Condition #263 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.676] | : . ' , ; ` | : . ' Condition #264 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.676] | : . ' , ; ` | : . ' Condition #265 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.676] | : . ' , ; ` | : . ' Condition #266 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.676] | : . ' , ; ` | : . ' Condition #267 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.676] | : . ' , ; ` | : . ' Condition #268 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.676] | : . ' , ; ` | : . ' Condition #269 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.677] | : . ' , ; ` | : . ' Condition #270 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.677] | : . ' , ; ` | : . ' Condition #271 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.677] | : . ' , ; ` | : . ' Condition #272 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.677] | : . ' , ; ` | : . ' Condition #273 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.677] | : . ' , ; ` | : . ' Condition #274 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.677] | : . ' , ; ` | : . ' Condition #275 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.677] | : . ' , ; ` | : . ' Condition #276 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.677] | : . ' , ; ` | : . signalConditions() ... done
[08:08:06.677] | : . ' , ; ` | : launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:06.677] | : . ' , ; ` | Launching futures ... done
[08:08:06.678] | : . ' , ; ` | Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:06.678] | : . ' , ; ` Using SequentialFutureBackend ... done
[08:08:06.678] | : . ' , ; run() for ‘Future’ (<unnamed-10>) ... done
[08:08:06.678] | : . ' , future(..., label = NULL) ... done
[08:08:06.678] | : . ' , value() for SequentialFuture (<unnamed-10>) ...
[08:08:06.678] | : . ' , ; signalConditions() ...
[08:08:06.678] | : . ' , ; ` include = ‘immediateCondition’
[08:08:06.678] | : . ' , ; ` exclude = 
[08:08:06.678] | : . ' , ; ` resignal = FALSE
[08:08:06.678] | : . ' , ; ` Number of conditions: 276
[08:08:06.679] | : . ' , ; `  int 276
[08:08:06.679] | : . ' , ; ` Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.679] | : . ' , ; ` Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.679] | : . ' , ; ` Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.679] | : . ' , ; ` Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.679] | : . ' , ; ` Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.680] | : . ' , ; ` Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.680] | : . ' , ; ` Condition #7 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.680] | : . ' , ; ` Condition #8 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.680] | : . ' , ; ` Condition #9 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.680] | : . ' , ; ` Condition #10 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.680] | : . ' , ; ` Condition #11 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.680] | : . ' , ; ` Condition #12 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.680] | : . ' , ; ` Condition #13 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.680] | : . ' , ; ` Condition #14 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.680] | : . ' , ; ` Condition #15 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.680] | : . ' , ; ` Condition #16 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.681] | : . ' , ; ` Condition #17 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.681] | : . ' , ; ` Condition #18 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.681] | : . ' , ; ` Condition #19 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.681] | : . ' , ; ` Condition #20 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.681] | : . ' , ; ` Condition #21 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.681] | : . ' , ; ` Condition #22 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.681] | : . ' , ; ` Condition #23 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.681] | : . ' , ; ` Condition #24 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.681] | : . ' , ; ` Condition #25 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.681] | : . ' , ; ` Condition #26 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.682] | : . ' , ; ` Condition #27 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.682] | : . ' , ; ` Condition #28 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.682] | : . ' , ; ` Condition #29 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.682] | : . ' , ; ` Condition #30 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.682] | : . ' , ; ` Condition #31 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.682] | : . ' , ; ` Condition #32 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.682] | : . ' , ; ` Condition #33 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.682] | : . ' , ; ` Condition #34 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.682] | : . ' , ; ` Condition #35 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.682] | : . ' , ; ` Condition #36 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.683] | : . ' , ; ` Condition #37 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.683] | : . ' , ; ` Condition #38 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.683] | : . ' , ; ` Condition #39 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.683] | : . ' , ; ` Condition #40 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.683] | : . ' , ; ` Condition #41 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.683] | : . ' , ; ` Condition #42 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.683] | : . ' , ; ` Condition #43 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.683] | : . ' , ; ` Condition #44 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.683] | : . ' , ; ` Condition #45 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.683] | : . ' , ; ` Condition #46 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.683] | : . ' , ; ` Condition #47 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.684] | : . ' , ; ` Condition #48 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.684] | : . ' , ; ` Condition #49 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.684] | : . ' , ; ` Condition #50 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.684] | : . ' , ; ` Condition #51 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.684] | : . ' , ; ` Condition #52 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.684] | : . ' , ; ` Condition #53 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.684] | : . ' , ; ` Condition #54 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.684] | : . ' , ; ` Condition #55 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.684] | : . ' , ; ` Condition #56 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.684] | : . ' , ; ` Condition #57 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.685] | : . ' , ; ` Condition #58 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.685] | : . ' , ; ` Condition #59 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.685] | : . ' , ; ` Condition #60 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.685] | : . ' , ; ` Condition #61 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.685] | : . ' , ; ` Condition #62 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.685] | : . ' , ; ` Condition #63 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.685] | : . ' , ; ` Condition #64 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.685] | : . ' , ; ` Condition #65 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.685] | : . ' , ; ` Condition #66 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.685] | : . ' , ; ` Condition #67 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.686] | : . ' , ; ` Condition #68 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.686] | : . ' , ; ` Condition #69 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.686] | : . ' , ; ` Condition #70 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.686] | : . ' , ; ` Condition #71 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.686] | : . ' , ; ` Condition #72 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.686] | : . ' , ; ` Condition #73 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.686] | : . ' , ; ` Condition #74 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.686] | : . ' , ; ` Condition #75 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.686] | : . ' , ; ` Condition #76 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.686] | : . ' , ; ` Condition #77 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.687] | : . ' , ; ` Condition #78 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.687] | : . ' , ; ` Condition #79 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.687] | : . ' , ; ` Condition #80 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.687] | : . ' , ; ` Condition #81 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.687] | : . ' , ; ` Condition #82 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.687] | : . ' , ; ` Condition #83 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.688] | : . ' , ; ` Condition #84 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.688] | : . ' , ; ` Condition #85 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.688] | : . ' , ; ` Condition #86 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.688] | : . ' , ; ` Condition #87 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.688] | : . ' , ; ` Condition #88 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.688] | : . ' , ; ` Condition #89 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.688] | : . ' , ; ` Condition #90 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.689] | : . ' , ; ` Condition #91 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.689] | : . ' , ; ` Condition #92 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.689] | : . ' , ; ` Condition #93 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.689] | : . ' , ; ` Condition #94 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.689] | : . ' , ; ` Condition #95 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.689] | : . ' , ; ` Condition #96 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.689] | : . ' , ; ` Condition #97 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.689] | : . ' , ; ` Condition #98 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.689] | : . ' , ; ` Condition #99 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.689] | : . ' , ; ` Condition #100 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.689] | : . ' , ; ` Condition #101 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.690] | : . ' , ; ` Condition #102 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.690] | : . ' , ; ` Condition #103 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.690] | : . ' , ; ` Condition #104 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.690] | : . ' , ; ` Condition #105 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.690] | : . ' , ; ` Condition #106 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.690] | : . ' , ; ` Condition #107 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.690] | : . ' , ; ` Condition #108 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.690] | : . ' , ; ` Condition #109 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.690] | : . ' , ; ` Condition #110 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.690] | : . ' , ; ` Condition #111 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.691] | : . ' , ; ` Condition #112 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.691] | : . ' , ; ` Condition #113 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.691] | : . ' , ; ` Condition #114 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.691] | : . ' , ; ` Condition #115 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.691] | : . ' , ; ` Condition #116 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.691] | : . ' , ; ` Condition #117 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.691] | : . ' , ; ` Condition #118 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.691] | : . ' , ; ` Condition #119 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.691] | : . ' , ; ` Condition #120 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.691] | : . ' , ; ` Condition #121 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.692] | : . ' , ; ` Condition #122 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.692] | : . ' , ; ` Condition #123 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.692] | : . ' , ; ` Condition #124 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.692] | : . ' , ; ` Condition #125 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.692] | : . ' , ; ` Condition #126 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.692] | : . ' , ; ` Condition #127 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.692] | : . ' , ; ` Condition #128 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.692] | : . ' , ; ` Condition #129 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.692] | : . ' , ; ` Condition #130 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.692] | : . ' , ; ` Condition #131 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.692] | : . ' , ; ` Condition #132 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.693] | : . ' , ; ` Condition #133 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.693] | : . ' , ; ` Condition #134 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.693] | : . ' , ; ` Condition #135 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.693] | : . ' , ; ` Condition #136 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.693] | : . ' , ; ` Condition #137 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.693] | : . ' , ; ` Condition #138 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.693] | : . ' , ; ` Condition #139 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.693] | : . ' , ; ` Condition #140 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.693] | : . ' , ; ` Condition #141 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.693] | : . ' , ; ` Condition #142 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.694] | : . ' , ; ` Condition #143 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.694] | : . ' , ; ` Condition #144 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.694] | : . ' , ; ` Condition #145 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.694] | : . ' , ; ` Condition #146 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.694] | : . ' , ; ` Condition #147 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.694] | : . ' , ; ` Condition #148 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.694] | : . ' , ; ` Condition #149 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.694] | : . ' , ; ` Condition #150 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.694] | : . ' , ; ` Condition #151 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.694] | : . ' , ; ` Condition #152 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.694] | : . ' , ; ` Condition #153 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.695] | : . ' , ; ` Condition #154 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.695] | : . ' , ; ` Condition #155 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.695] | : . ' , ; ` Condition #156 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.695] | : . ' , ; ` Condition #157 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.695] | : . ' , ; ` Condition #158 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.695] | : . ' , ; ` Condition #159 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.695] | : . ' , ; ` Condition #160 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.695] | : . ' , ; ` Condition #161 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.695] | : . ' , ; ` Condition #162 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.695] | : . ' , ; ` Condition #163 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.696] | : . ' , ; ` Condition #164 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.696] | : . ' , ; ` Condition #165 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.696] | : . ' , ; ` Condition #166 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.696] | : . ' , ; ` Condition #167 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.696] | : . ' , ; ` Condition #168 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.696] | : . ' , ; ` Condition #169 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.696] | : . ' , ; ` Condition #170 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.696] | : . ' , ; ` Condition #171 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.696] | : . ' , ; ` Condition #172 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.696] | : . ' , ; ` Condition #173 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.697] | : . ' , ; ` Condition #174 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.697] | : . ' , ; ` Condition #175 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.697] | : . ' , ; ` Condition #176 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.697] | : . ' , ; ` Condition #177 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.697] | : . ' , ; ` Condition #178 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.697] | : . ' , ; ` Condition #179 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.697] | : . ' , ; ` Condition #180 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.697] | : . ' , ; ` Condition #181 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.697] | : . ' , ; ` Condition #182 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.697] | : . ' , ; ` Condition #183 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.698] | : . ' , ; ` Condition #184 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.698] | : . ' , ; ` Condition #185 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.698] | : . ' , ; ` Condition #186 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.698] | : . ' , ; ` Condition #187 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.698] | : . ' , ; ` Condition #188 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.698] | : . ' , ; ` Condition #189 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.698] | : . ' , ; ` Condition #190 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.698] | : . ' , ; ` Condition #191 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.698] | : . ' , ; ` Condition #192 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.698] | : . ' , ; ` Condition #193 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.698] | : . ' , ; ` Condition #194 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.699] | : . ' , ; ` Condition #195 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.699] | : . ' , ; ` Condition #196 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.699] | : . ' , ; ` Condition #197 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.699] | : . ' , ; ` Condition #198 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.699] | : . ' , ; ` Condition #199 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.699] | : . ' , ; ` Condition #200 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.699] | : . ' , ; ` Condition #201 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.699] | : . ' , ; ` Condition #202 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.699] | : . ' , ; ` Condition #203 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.699] | : . ' , ; ` Condition #204 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.700] | : . ' , ; ` Condition #205 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.700] | : . ' , ; ` Condition #206 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.700] | : . ' , ; ` Condition #207 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.700] | : . ' , ; ` Condition #208 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.700] | : . ' , ; ` Condition #209 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.700] | : . ' , ; ` Condition #210 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.700] | : . ' , ; ` Condition #211 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.700] | : . ' , ; ` Condition #212 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.700] | : . ' , ; ` Condition #213 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.700] | : . ' , ; ` Condition #214 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.700] | : . ' , ; ` Condition #215 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.701] | : . ' , ; ` Condition #216 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.701] | : . ' , ; ` Condition #217 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.701] | : . ' , ; ` Condition #218 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.701] | : . ' , ; ` Condition #219 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.701] | : . ' , ; ` Condition #220 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.701] | : . ' , ; ` Condition #221 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.701] | : . ' , ; ` Condition #222 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.701] | : . ' , ; ` Condition #223 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.701] | : . ' , ; ` Condition #224 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.701] | : . ' , ; ` Condition #225 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.702] | : . ' , ; ` Condition #226 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.702] | : . ' , ; ` Condition #227 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.702] | : . ' , ; ` Condition #228 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.702] | : . ' , ; ` Condition #229 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.702] | : . ' , ; ` Condition #230 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.702] | : . ' , ; ` Condition #231 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.702] | : . ' , ; ` Condition #232 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.702] | : . ' , ; ` Condition #233 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.702] | : . ' , ; ` Condition #234 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.702] | : . ' , ; ` Condition #235 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.702] | : . ' , ; ` Condition #236 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.703] | : . ' , ; ` Condition #237 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.703] | : . ' , ; ` Condition #238 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.703] | : . ' , ; ` Condition #239 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.704] | : . ' , ; ` Condition #240 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.704] | : . ' , ; ` Condition #241 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.704] | : . ' , ; ` Condition #242 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.704] | : . ' , ; ` Condition #243 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.704] | : . ' , ; ` Condition #244 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.704] | : . ' , ; ` Condition #245 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.704] | : . ' , ; ` Condition #246 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.704] | : . ' , ; ` Condition #247 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.704] | : . ' , ; ` Condition #248 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.704] | : . ' , ; ` Condition #249 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.705] | : . ' , ; ` Condition #250 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.705] | : . ' , ; ` Condition #251 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.705] | : . ' , ; ` Condition #252 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.705] | : . ' , ; ` Condition #253 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.705] | : . ' , ; ` Condition #254 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.705] | : . ' , ; ` Condition #255 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.705] | : . ' , ; ` Condition #256 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.705] | : . ' , ; ` Condition #257 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.705] | : . ' , ; ` Condition #258 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.705] | : . ' , ; ` Condition #259 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.705] | : . ' , ; ` Condition #260 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.706] | : . ' , ; ` Condition #261 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.706] | : . ' , ; ` Condition #262 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.706] | : . ' , ; ` Condition #263 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.706] | : . ' , ; ` Condition #264 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.706] | : . ' , ; ` Condition #265 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.706] | : . ' , ; ` Condition #266 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.706] | : . ' , ; ` Condition #267 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.706] | : . ' , ; ` Condition #268 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.706] | : . ' , ; ` Condition #269 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.706] | : . ' , ; ` Condition #270 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.707] | : . ' , ; ` Condition #271 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.707] | : . ' , ; ` Condition #272 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.707] | : . ' , ; ` Condition #273 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.707] | : . ' , ; ` Condition #274 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.707] | : . ' , ; ` Condition #275 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.707] | : . ' , ; ` Condition #276 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.707] | : . ' , ; signalConditions() ... done
[08:08:06.707] | : . ' , ; relay stdout ...
[08:08:06.707] | : . ' , ; relay stdout ... done
[08:08:06.707] | : . ' , ; check for misuse ...
[08:08:06.708] | : . ' , ; check for misuse ... done
[08:08:06.708] | : . ' , ; relay conditions ...
[08:08:06.708] | : . ' , ; ` Future state: ‘finished’
[08:08:06.708] | : . ' , ; ` signalConditions() ...
[08:08:06.708] | : . ' , ; ` | include = ‘condition’
[08:08:06.708] | : . ' , ; ` | exclude = ‘immediateCondition’
[08:08:06.708] | : . ' , ; ` | resignal = TRUE
[08:08:06.708] | : . ' , ; ` | Number of conditions: 276
[08:08:06.708] | : . ' , ; ` |  int 276
[08:08:06.709] | : . ' , ; ` | Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.709] | : . ' , ; ` | Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.540] | : . ' , ; ` | : . attachPackages() ...
[08:08:06.709] | : . ' , ; ` | Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.709] | : . ' , ; ` | Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.540] | : . ' , ; ` | : . ' packages: [n=1] ‘future’
[08:08:06.709] | : . ' , ; ` | Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.709] | : . ' , ; ` | Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.541] | : . ' , ; ` | : . attachPackages() ... done
[08:08:06.709] | : . ' , ; ` | Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.710] | : . ' , ; ` | Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.541] | : . ' , ; ` | : . attachPackages() ...
[08:08:06.710] | : . ' , ; ` | Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.710] | : . ' , ; ` | Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.541] | : . ' , ; ` | : . ' packages: [n=1] ‘future’
[08:08:06.710] | : . ' , ; ` | Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.710] | : . ' , ; ` | Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.541] | : . ' , ; ` | : . attachPackages() ... done
[08:08:06.710] | : . ' , ; ` | Condition #7 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.710] | : . ' , ; ` | Condition #7: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.557] | : . ' , ; ` | : . future(..., label = NULL) ...
[08:08:06.710] | : . ' , ; ` | Condition #8 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.710] | : . ' , ; ` | Condition #8: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.557] | : . ' , ; ` | : . ' lazy: FALSE
[08:08:06.711] | : . ' , ; ` | Condition #9 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.711] | : . ' , ; ` | Condition #9: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.557] | : . ' , ; ` | : . ' stdout: TRUE
[08:08:06.711] | : . ' , ; ` | Condition #10 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.711] | : . ' , ; ` | Condition #10: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.557] | : . ' , ; ` | : . ' conditions: [n=1] ‘condition’
[08:08:06.711] | : . ' , ; ` | Condition #11 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.711] | : . ' , ; ` | Condition #11: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.558] | : . ' , ; ` | : . ' gc: FALSE
[08:08:06.711] | : . ' , ; ` | Condition #12 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.711] | : . ' , ; ` | Condition #12: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.558] | : . ' , ; ` | : . ' earlySignal: FALSE
[08:08:06.711] | : . ' , ; ` | Condition #13 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.711] | : . ' , ; ` | Condition #13: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.558] | : . ' , ; ` | : . ' getGlobalsAndPackages() ...
[08:08:06.712] | : . ' , ; ` | Condition #14 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.712] | : . ' , ; ` | Condition #14: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.558] | : . ' , ; ` | : . ' , Searching for globals ...
[08:08:06.712] | : . ' , ; ` | Condition #15 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.712] | : . ' , ; ` | Condition #15: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.559] | : . ' , ; ` | : . ' , ; globals found: [0] 
[08:08:06.712] | : . ' , ; ` | Condition #16 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.712] | : . ' , ; ` | Condition #16: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.559] | : . ' , ; ` | : . ' , Searching for globals ... done
[08:08:06.712] | : . ' , ; ` | Condition #17 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.712] | : . ' , ; ` | Condition #17: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.560] | : . ' , ; ` | : . ' , globals: [0] <none>
[08:08:06.712] | : . ' , ; ` | Condition #18 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.713] | : . ' , ; ` | Condition #18: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.560] | : . ' , ; ` | : . ' , packages: [0] <none>
[08:08:06.713] | : . ' , ; ` | Condition #19 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.713] | : . ' , ; ` | Condition #19: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.560] | : . ' , ; ` | : . ' getGlobalsAndPackages() ... done
[08:08:06.713] | : . ' , ; ` | Condition #20 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.713] | : . ' , ; ` | Condition #20: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.560] | : . ' , ; ` | : . ' run() for ‘Future’ (<unnamed-11>) ...
[08:08:06.713] | : . ' , ; ` | Condition #21 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.713] | : . ' , ; ` | Condition #21: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.560] | : . ' , ; ` | : . ' , state: ‘created’
[08:08:06.713] | : . ' , ; ` | Condition #22 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.713] | : . ' , ; ` | Condition #22: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.560] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.714] | : . ' , ; ` | Condition #23 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.714] | : . ' , ; ` | Condition #23: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.560] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.714] | : . ' , ; ` | Condition #24 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.714] | : . ' , ; ` | Condition #24: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.561] | : . ' , ; ` | : . ' , Using SequentialFutureBackend ...
[08:08:06.714] | : . ' , ; ` | Condition #25 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.714] | : . ' , ; ` | Condition #25: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.561] | : . ' , ; ` | : . ' , ; Number of futures since start: 9 (9 created, 9 launched, 9 finished)
[08:08:06.714] | : . ' , ; ` | Condition #26 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.714] | : . ' , ; ` | Condition #26: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.561] | : . ' , ; ` | : . ' , ; Launching futures ...
[08:08:06.714] | : . ' , ; ` | Condition #27 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.715] | : . ' , ; ` | Condition #27: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.561] | : . ' , ; ` | : . ' , ; ` launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:06.715] | : . ' , ; ` | Condition #28 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.715] | : . ' , ; ` | Condition #28: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.561] | : . ' , ; ` | : . ' , ; ` | getFutureData() ...
[08:08:06.715] | : . ' , ; ` | Condition #29 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.715] | : . ' , ; ` | Condition #29: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.561] | : . ' , ; ` | : . ' , ; ` | : getFutureCore() ...
[08:08:06.715] | : . ' , ; ` | Condition #30 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.715] | : . ' , ; ` | Condition #30: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.561] | : . ' , ; ` | : . ' , ; ` | : . Packages needed by the future expression (n = 0): <none>
[08:08:06.715] | : . ' , ; ` | Condition #31 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.715] | : . ' , ; ` | Condition #31: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.562] | : . ' , ; ` | : . ' , ; ` | : getFutureCore() ... done
[08:08:06.716] | : . ' , ; ` | Condition #32 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.716] | : . ' , ; ` | Condition #32: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.562] | : . ' , ; ` | : . ' , ; ` | : getFutureCapture() ...
[08:08:06.716] | : . ' , ; ` | Condition #33 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.716] | : . ' , ; ` | Condition #33: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.562] | : . ' , ; ` | : . ' , ; ` | : getFutureCapture() ... done
[08:08:06.716] | : . ' , ; ` | Condition #34 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.716] | : . ' , ; ` | Condition #34: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.562] | : . ' , ; ` | : . ' , ; ` | : getFutureContext() ...
[08:08:06.716] | : . ' , ; ` | Condition #35 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.716] | : . ' , ; ` | Condition #35: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.562] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.716] | : . ' , ; ` | Condition #36 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.717] | : . ' , ; ` | Condition #36: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.562] | : . ' , ; ` | : . ' , ; ` | : . ' Getting stack without first backend: [n=0] 
[08:08:06.717] | : . ' , ; ` | Condition #37 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.717] | : . ' , ; ` | Condition #37: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.562] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.717] | : . ' , ; ` | Condition #38 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.717] | : . ' , ; ` | Condition #38: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.562] | : . ' , ; ` | : . ' , ; ` | : . Packages needed by future backend (n = 0): <none>
[08:08:06.717] | : . ' , ; ` | Condition #39 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.717] | : . ' , ; ` | Condition #39: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.563] | : . ' , ; ` | : . ' , ; ` | : getFutureContext() ... done
[08:08:06.717] | : . ' , ; ` | Condition #40 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.717] | : . ' , ; ` | Condition #40: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.563] | : . ' , ; ` | : . ' , ; ` | getFutureData() ... done
[08:08:06.718] | : . ' , ; ` | Condition #41 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.718] | : . ' , ; ` | Condition #41: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.564] | : . ' , ; ` | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.718] | : . ' , ; ` | Condition #42 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.718] | : . ' , ; ` | Condition #42: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.564] | : . ' , ; ` | : . ' , ; ` | : Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:06.718] | : . ' , ; ` | Condition #43 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.718] | : . ' , ; ` | Condition #43: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.564] | : . ' , ; ` | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.720] | : . ' , ; ` | Condition #44 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.720] | : . ' , ; ` | Condition #44: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.564] | : . ' , ; ` | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.720] | : . ' , ; ` | Condition #45 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.720] | : . ' , ; ` | Condition #45: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.565] | : . ' , ; ` | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:06.720] | : . ' , ; ` | Condition #46 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.720] | : . ' , ; ` | Condition #46: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.565] | : . ' , ; ` | : . ' , ; ` | : . all.equal() for FutureStrategyList ...
[08:08:06.720] | : . ' , ; ` | Condition #47 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.721] | : . ' , ; ` | Condition #47: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.565] | : . ' , ; ` | : . ' , ; ` | : . ' New stack:
[08:08:06.721] | : . ' , ; ` | Condition #48 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.721] | : . ' , ; ` | Condition #48: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.565] | : . ' , ; ` | : . ' , ; ` | : . ' List of 1
[08:08:06.565] | : . ' , ; ` | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.565] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.565] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "init")= logi TRUE
[08:08:06.565] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.565] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.565] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.565] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.565] | : . ' , ; ` | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.721] | : . ' , ; ` | Condition #49 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.721] | : . ' , ; ` | Condition #49: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.569] | : . ' , ; ` | : . ' , ; ` | : . ' Old stack:
[08:08:06.721] | : . ' , ; ` | Condition #50 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.721] | : . ' , ; ` | Condition #50: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.569] | : . ' , ; ` | : . ' , ; ` | : . ' List of 1
[08:08:06.569] | : . ' , ; ` | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.569] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.569] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:08:06.569] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.569] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.569] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.569] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(sequential)
[08:08:06.569] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.569] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.569] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.569] | : . ' , ; ` | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.721] | : . ' , ; ` | Condition #51 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.721] | : . ' , ; ` | Condition #51: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.572] | : . ' , ; ` | : . ' , ; ` | : . ' Not identical
[08:08:06.722] | : . ' , ; ` | Condition #52 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.722] | : . ' , ; ` | Condition #52: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.573] | : . ' , ; ` | : . ' , ; ` | : . ' all.equal() for future ...
[08:08:06.722] | : . ' , ; ` | Condition #53 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.722] | : . ' , ; ` | Condition #53: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.573] | : . ' , ; ` | : . ' , ; ` | : . ' , List of 2
[08:08:06.573] | : . ' , ; ` | : . ' , ; ` | : . ' ,  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.573] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.573] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= logi TRUE
[08:08:06.573] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.573] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.573] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.573] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.573] | : . ' , ; ` | : . ' , ; ` | : . ' ,  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.573] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.573] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:08:06.573] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.573] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.573] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.573] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(sequential)
[08:08:06.573] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.573] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.573] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.722] | : . ' , ; ` | Condition #54 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.722] | : . ' , ; ` | Condition #54: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.578] | : . ' , ; ` | : . ' , ; ` | : . ' all.equal() for future ... done
[08:08:06.722] | : . ' , ; ` | Condition #55 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.722] | : . ' , ; ` | Condition #55: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.578] | : . ' , ; ` | : . ' , ; ` | : . all.equal() for FutureStrategyList ... done
[08:08:06.723] | : . ' , ; ` | Condition #56 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.723] | : . ' , ; ` | Condition #56: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.578] | : . ' , ; ` | : . ' , ; ` | : . plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:06.723] | : . ' , ; ` | Condition #57 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.723] | : . ' , ; ` | Condition #57: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.578] | : . ' , ; ` | : . ' , ; ` | : . List of future strategies:
[08:08:06.578] | : . ' , ; ` | : . ' , ; ` | : . 1. sequential:
[08:08:06.578] | : . ' , ; ` | : . ' , ; ` | : .    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:06.578] | : . ' , ; ` | : . ' , ; ` | : .    - tweaked: FALSE
[08:08:06.578] | : . ' , ; ` | : . ' , ; ` | : .    - call: plan(sequential)
[08:08:06.723] | : . ' , ; ` | Condition #58 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.723] | : . ' , ; ` | Condition #58: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.579] | : . ' , ; ` | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:06.723] | : . ' , ; ` | Condition #59 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.723] | : . ' , ; ` | Condition #59: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.579] | : . ' , ; ` | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.723] | : . ' , ; ` | Condition #60 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.724] | : . ' , ; ` | Condition #60: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.580] | : . ' , ; ` | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.724] | : . ' , ; ` | Condition #61 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.724] | : . ' , ; ` | Condition #61: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.581] | : . ' , ; ` | : . ' , ; ` | : plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.724] | : . ' , ; ` | Condition #62 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.724] | : . ' , ; ` | Condition #62: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.581] | : . ' , ; ` | : . ' , ; ` | : . plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:06.724] | : . ' , ; ` | Condition #63 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.724] | : . ' , ; ` | Condition #63: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.581] | : . ' , ; ` | : . ' , ; ` | : . ' all.equal() for FutureStrategyList ...
[08:08:06.724] | : . ' , ; ` | Condition #64 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.724] | : . ' , ; ` | Condition #64: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.581] | : . ' , ; ` | : . ' , ; ` | : . ' , New stack:
[08:08:06.725] | : . ' , ; ` | Condition #65 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.725] | : . ' , ; ` | Condition #65: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.581] | : . ' , ; ` | : . ' , ; ` | : . ' , List of 1
[08:08:06.581] | : . ' , ; ` | : . ' , ; ` | : . ' ,  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.581] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.581] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:08:06.581] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.581] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.581] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.581] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(sequential)
[08:08:06.581] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.581] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.581] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.581] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.725] | : . ' , ; ` | Condition #66 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.725] | : . ' , ; ` | Condition #66: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.584] | : . ' , ; ` | : . ' , ; ` | : . ' , Old stack:
[08:08:06.725] | : . ' , ; ` | Condition #67 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.725] | : . ' , ; ` | Condition #67: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.584] | : . ' , ; ` | : . ' , ; ` | : . ' , List of 1
[08:08:06.584] | : . ' , ; ` | : . ' , ; ` | : . ' ,  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.584] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.584] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:08:06.584] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.584] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.584] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.584] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(sequential)
[08:08:06.584] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.584] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.584] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.584] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.725] | : . ' , ; ` | Condition #68 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.725] | : . ' , ; ` | Condition #68: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.589] | : . ' , ; ` | : . ' , ; ` | : . ' , Identical
[08:08:06.725] | : . ' , ; ` | Condition #69 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.726] | : . ' , ; ` | Condition #69: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.589] | : . ' , ; ` | : . ' , ; ` | : . ' all.equal() for FutureStrategyList ... done
[08:08:06.726] | : . ' , ; ` | Condition #70 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.726] | : . ' , ; ` | Condition #70: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.589] | : . ' , ; ` | : . ' , ; ` | : . ' plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:06.726] | : . ' , ; ` | Condition #71 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.726] | : . ' , ; ` | Condition #71: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.589] | : . ' , ; ` | : . ' , ; ` | : . ' List of future strategies:
[08:08:06.589] | : . ' , ; ` | : . ' , ; ` | : . ' 1. sequential:
[08:08:06.589] | : . ' , ; ` | : . ' , ; ` | : . '    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:06.589] | : . ' , ; ` | : . ' , ; ` | : . '    - tweaked: FALSE
[08:08:06.589] | : . ' , ; ` | : . ' , ; ` | : . '    - call: plan(sequential)
[08:08:06.726] | : . ' , ; ` | Condition #72 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.726] | : . ' , ; ` | Condition #72: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.589] | : . ' , ; ` | : . ' , ; ` | : . plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:06.726] | : . ' , ; ` | Condition #73 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.726] | : . ' , ; ` | Condition #73: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.590] | : . ' , ; ` | : . ' , ; ` | : plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.727] | : . ' , ; ` | Condition #74 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.727] | : . ' , ; ` | Condition #74: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.590] | : . ' , ; ` | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.727] | : . ' , ; ` | Condition #75 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.727] | : . ' , ; ` | Condition #75: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.590] | : . ' , ; ` | : . ' , ; ` | SequentialFuture started (and completed)
[08:08:06.727] | : . ' , ; ` | Condition #76 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.727] | : . ' , ; ` | Condition #76: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.590] | : . ' , ; ` | : . ' , ; ` | signalConditions() ...
[08:08:06.727] | : . ' , ; ` | Condition #77 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.727] | : . ' , ; ` | Condition #77: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.590] | : . ' , ; ` | : . ' , ; ` | : include = ‘immediateCondition’
[08:08:06.727] | : . ' , ; ` | Condition #78 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.728] | : . ' , ; ` | Condition #78: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.590] | : . ' , ; ` | : . ' , ; ` | : exclude = 
[08:08:06.728] | : . ' , ; ` | Condition #79 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.728] | : . ' , ; ` | Condition #79: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.590] | : . ' , ; ` | : . ' , ; ` | : resignal = FALSE
[08:08:06.728] | : . ' , ; ` | Condition #80 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.728] | : . ' , ; ` | Condition #80: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.591] | : . ' , ; ` | : . ' , ; ` | : Number of conditions: 6
[08:08:06.728] | : . ' , ; ` | Condition #81 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.728] | : . ' , ; ` | Condition #81: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.591] | : . ' , ; ` | : . ' , ; ` | :  int 6
[08:08:06.728] | : . ' , ; ` | Condition #82 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.728] | : . ' , ; ` | Condition #82: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.591] | : . ' , ; ` | : . ' , ; ` | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.729] | : . ' , ; ` | Condition #83 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.729] | : . ' , ; ` | Condition #83: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.591] | : . ' , ; ` | : . ' , ; ` | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.729] | : . ' , ; ` | Condition #84 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.729] | : . ' , ; ` | Condition #84: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.591] | : . ' , ; ` | : . ' , ; ` | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.729] | : . ' , ; ` | Condition #85 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.729] | : . ' , ; ` | Condition #85: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.592] | : . ' , ; ` | : . ' , ; ` | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.729] | : . ' , ; ` | Condition #86 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.729] | : . ' , ; ` | Condition #86: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.592] | : . ' , ; ` | : . ' , ; ` | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.729] | : . ' , ; ` | Condition #87 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.730] | : . ' , ; ` | Condition #87: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.592] | : . ' , ; ` | : . ' , ; ` | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.730] | : . ' , ; ` | Condition #88 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.730] | : . ' , ; ` | Condition #88: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.592] | : . ' , ; ` | : . ' , ; ` | signalConditions() ... done
[08:08:06.730] | : . ' , ; ` | Condition #89 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.730] | : . ' , ; ` | Condition #89: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.592] | : . ' , ; ` | : . ' , ; ` launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:06.730] | : . ' , ; ` | Condition #90 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.730] | : . ' , ; ` | Condition #90: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.592] | : . ' , ; ` | : . ' , ; Launching futures ... done
[08:08:06.730] | : . ' , ; ` | Condition #91 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.730] | : . ' , ; ` | Condition #91: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.592] | : . ' , ; ` | : . ' , ; Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:06.731] | : . ' , ; ` | Condition #92 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.731] | : . ' , ; ` | Condition #92: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.592] | : . ' , ; ` | : . ' , Using SequentialFutureBackend ... done
[08:08:06.731] | : . ' , ; ` | Condition #93 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.731] | : . ' , ; ` | Condition #93: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.592] | : . ' , ; ` | : . ' run() for ‘Future’ (<unnamed-11>) ... done
[08:08:06.731] | : . ' , ; ` | Condition #94 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.731] | : . ' , ; ` | Condition #94: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.593] | : . ' , ; ` | : . future(..., label = NULL) ... done
[08:08:06.731] | : . ' , ; ` | Condition #95 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.731] | : . ' , ; ` | Condition #95: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.593] | : . ' , ; ` | : . future(..., label = NULL) ...
[08:08:06.731] | : . ' , ; ` | Condition #96 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.731] | : . ' , ; ` | Condition #96: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.593] | : . ' , ; ` | : . ' lazy: FALSE
[08:08:06.732] | : . ' , ; ` | Condition #97 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.732] | : . ' , ; ` | Condition #97: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.593] | : . ' , ; ` | : . ' stdout: TRUE
[08:08:06.732] | : . ' , ; ` | Condition #98 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.732] | : . ' , ; ` | Condition #98: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.593] | : . ' , ; ` | : . ' conditions: [n=1] ‘condition’
[08:08:06.732] | : . ' , ; ` | Condition #99 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.732] | : . ' , ; ` | Condition #99: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.593] | : . ' , ; ` | : . ' gc: FALSE
[08:08:06.732] | : . ' , ; ` | Condition #100 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.732] | : . ' , ; ` | Condition #100: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.593] | : . ' , ; ` | : . ' earlySignal: FALSE
[08:08:06.732] | : . ' , ; ` | Condition #101 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.733] | : . ' , ; ` | Condition #101: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.594] | : . ' , ; ` | : . ' getGlobalsAndPackages() ...
[08:08:06.733] | : . ' , ; ` | Condition #102 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.733] | : . ' , ; ` | Condition #102: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.594] | : . ' , ; ` | : . ' , Searching for globals ...
[08:08:06.733] | : . ' , ; ` | Condition #103 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.733] | : . ' , ; ` | Condition #103: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.595] | : . ' , ; ` | : . ' , ; globals found: [0] 
[08:08:06.733] | : . ' , ; ` | Condition #104 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.733] | : . ' , ; ` | Condition #104: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.595] | : . ' , ; ` | : . ' , Searching for globals ... done
[08:08:06.733] | : . ' , ; ` | Condition #105 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.733] | : . ' , ; ` | Condition #105: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.595] | : . ' , ; ` | : . ' , globals: [0] <none>
[08:08:06.734] | : . ' , ; ` | Condition #106 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.734] | : . ' , ; ` | Condition #106: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.595] | : . ' , ; ` | : . ' , packages: [0] <none>
[08:08:06.734] | : . ' , ; ` | Condition #107 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.734] | : . ' , ; ` | Condition #107: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.595] | : . ' , ; ` | : . ' getGlobalsAndPackages() ... done
[08:08:06.734] | : . ' , ; ` | Condition #108 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.734] | : . ' , ; ` | Condition #108: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.596] | : . ' , ; ` | : . ' run() for ‘Future’ (<unnamed-12>) ...
[08:08:06.734] | : . ' , ; ` | Condition #109 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.734] | : . ' , ; ` | Condition #109: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.596] | : . ' , ; ` | : . ' , state: ‘created’
[08:08:06.734] | : . ' , ; ` | Condition #110 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.735] | : . ' , ; ` | Condition #110: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.596] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.735] | : . ' , ; ` | Condition #111 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.735] | : . ' , ; ` | Condition #111: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.596] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.735] | : . ' , ; ` | Condition #112 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.735] | : . ' , ; ` | Condition #112: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.596] | : . ' , ; ` | : . ' , Using SequentialFutureBackend ...
[08:08:06.735] | : . ' , ; ` | Condition #113 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.735] | : . ' , ; ` | Condition #113: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.596] | : . ' , ; ` | : . ' , ; Number of futures since start: 10 (10 created, 10 launched, 10 finished)
[08:08:06.735] | : . ' , ; ` | Condition #114 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.735] | : . ' , ; ` | Condition #114: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.596] | : . ' , ; ` | : . ' , ; Launching futures ...
[08:08:06.736] | : . ' , ; ` | Condition #115 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.736] | : . ' , ; ` | Condition #115: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.596] | : . ' , ; ` | : . ' , ; ` launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:06.736] | : . ' , ; ` | Condition #116 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.736] | : . ' , ; ` | Condition #116: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.597] | : . ' , ; ` | : . ' , ; ` | getFutureData() ...
[08:08:06.737] | : . ' , ; ` | Condition #117 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.737] | : . ' , ; ` | Condition #117: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.597] | : . ' , ; ` | : . ' , ; ` | : getFutureCore() ...
[08:08:06.737] | : . ' , ; ` | Condition #118 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.737] | : . ' , ; ` | Condition #118: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.597] | : . ' , ; ` | : . ' , ; ` | : . Packages needed by the future expression (n = 0): <none>
[08:08:06.737] | : . ' , ; ` | Condition #119 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.737] | : . ' , ; ` | Condition #119: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.597] | : . ' , ; ` | : . ' , ; ` | : getFutureCore() ... done
[08:08:06.737] | : . ' , ; ` | Condition #120 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.737] | : . ' , ; ` | Condition #120: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.597] | : . ' , ; ` | : . ' , ; ` | : getFutureCapture() ...
[08:08:06.738] | : . ' , ; ` | Condition #121 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.738] | : . ' , ; ` | Condition #121: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.597] | : . ' , ; ` | : . ' , ; ` | : getFutureCapture() ... done
[08:08:06.738] | : . ' , ; ` | Condition #122 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.738] | : . ' , ; ` | Condition #122: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.597] | : . ' , ; ` | : . ' , ; ` | : getFutureContext() ...
[08:08:06.738] | : . ' , ; ` | Condition #123 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.738] | : . ' , ; ` | Condition #123: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.597] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.738] | : . ' , ; ` | Condition #124 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.738] | : . ' , ; ` | Condition #124: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.598] | : . ' , ; ` | : . ' , ; ` | : . ' Getting stack without first backend: [n=0] 
[08:08:06.738] | : . ' , ; ` | Condition #125 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.739] | : . ' , ; ` | Condition #125: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.598] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.739] | : . ' , ; ` | Condition #126 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.739] | : . ' , ; ` | Condition #126: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.598] | : . ' , ; ` | : . ' , ; ` | : . Packages needed by future backend (n = 0): <none>
[08:08:06.739] | : . ' , ; ` | Condition #127 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.739] | : . ' , ; ` | Condition #127: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.598] | : . ' , ; ` | : . ' , ; ` | : getFutureContext() ... done
[08:08:06.739] | : . ' , ; ` | Condition #128 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.739] | : . ' , ; ` | Condition #128: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.598] | : . ' , ; ` | : . ' , ; ` | getFutureData() ... done
[08:08:06.739] | : . ' , ; ` | Condition #129 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.739] | : . ' , ; ` | Condition #129: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.599] | : . ' , ; ` | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.740] | : . ' , ; ` | Condition #130 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.740] | : . ' , ; ` | Condition #130: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.599] | : . ' , ; ` | : . ' , ; ` | : Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:06.740] | : . ' , ; ` | Condition #131 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.740] | : . ' , ; ` | Condition #131: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.600] | : . ' , ; ` | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.740] | : . ' , ; ` | Condition #132 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.740] | : . ' , ; ` | Condition #132: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.600] | : . ' , ; ` | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.740] | : . ' , ; ` | Condition #133 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.740] | : . ' , ; ` | Condition #133: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.600] | : . ' , ; ` | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:06.741] | : . ' , ; ` | Condition #134 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.741] | : . ' , ; ` | Condition #134: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.600] | : . ' , ; ` | : . ' , ; ` | : . all.equal() for FutureStrategyList ...
[08:08:06.741] | : . ' , ; ` | Condition #135 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.741] | : . ' , ; ` | Condition #135: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.600] | : . ' , ; ` | : . ' , ; ` | : . ' New stack:
[08:08:06.741] | : . ' , ; ` | Condition #136 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.741] | : . ' , ; ` | Condition #136: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.600] | : . ' , ; ` | : . ' , ; ` | : . ' List of 1
[08:08:06.600] | : . ' , ; ` | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.600] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.600] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "init")= logi TRUE
[08:08:06.600] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.600] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.600] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.600] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.600] | : . ' , ; ` | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.741] | : . ' , ; ` | Condition #137 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.741] | : . ' , ; ` | Condition #137: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.603] | : . ' , ; ` | : . ' , ; ` | : . ' Old stack:
[08:08:06.741] | : . ' , ; ` | Condition #138 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.741] | : . ' , ; ` | Condition #138: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.603] | : . ' , ; ` | : . ' , ; ` | : . ' List of 1
[08:08:06.603] | : . ' , ; ` | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.603] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.603] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:08:06.603] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.603] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.603] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.603] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(sequential)
[08:08:06.603] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.603] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.603] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.603] | : . ' , ; ` | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.742] | : . ' , ; ` | Condition #139 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.742] | : . ' , ; ` | Condition #139: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.607] | : . ' , ; ` | : . ' , ; ` | : . ' Not identical
[08:08:06.742] | : . ' , ; ` | Condition #140 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.742] | : . ' , ; ` | Condition #140: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.607] | : . ' , ; ` | : . ' , ; ` | : . ' all.equal() for future ...
[08:08:06.742] | : . ' , ; ` | Condition #141 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.742] | : . ' , ; ` | Condition #141: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.607] | : . ' , ; ` | : . ' , ; ` | : . ' , List of 2
[08:08:06.607] | : . ' , ; ` | : . ' , ; ` | : . ' ,  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.607] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.607] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= logi TRUE
[08:08:06.607] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.607] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.607] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.607] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.607] | : . ' , ; ` | : . ' , ; ` | : . ' ,  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.607] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.607] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:08:06.607] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.607] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.607] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.607] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(sequential)
[08:08:06.607] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.607] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.607] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.742] | : . ' , ; ` | Condition #142 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.742] | : . ' , ; ` | Condition #142: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.612] | : . ' , ; ` | : . ' , ; ` | : . ' all.equal() for future ... done
[08:08:06.743] | : . ' , ; ` | Condition #143 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.743] | : . ' , ; ` | Condition #143: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.612] | : . ' , ; ` | : . ' , ; ` | : . all.equal() for FutureStrategyList ... done
[08:08:06.743] | : . ' , ; ` | Condition #144 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.743] | : . ' , ; ` | Condition #144: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.612] | : . ' , ; ` | : . ' , ; ` | : . plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:06.743] | : . ' , ; ` | Condition #145 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.743] | : . ' , ; ` | Condition #145: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.612] | : . ' , ; ` | : . ' , ; ` | : . List of future strategies:
[08:08:06.612] | : . ' , ; ` | : . ' , ; ` | : . 1. sequential:
[08:08:06.612] | : . ' , ; ` | : . ' , ; ` | : .    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:06.612] | : . ' , ; ` | : . ' , ; ` | : .    - tweaked: FALSE
[08:08:06.612] | : . ' , ; ` | : . ' , ; ` | : .    - call: plan(sequential)
[08:08:06.743] | : . ' , ; ` | Condition #146 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.743] | : . ' , ; ` | Condition #146: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.613] | : . ' , ; ` | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:06.743] | : . ' , ; ` | Condition #147 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.744] | : . ' , ; ` | Condition #147: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.613] | : . ' , ; ` | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.744] | : . ' , ; ` | Condition #148 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.744] | : . ' , ; ` | Condition #148: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.614] | : . ' , ; ` | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.744] | : . ' , ; ` | Condition #149 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.744] | : . ' , ; ` | Condition #149: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.615] | : . ' , ; ` | : . ' , ; ` | : plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.744] | : . ' , ; ` | Condition #150 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.744] | : . ' , ; ` | Condition #150: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.615] | : . ' , ; ` | : . ' , ; ` | : . plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:06.744] | : . ' , ; ` | Condition #151 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.744] | : . ' , ; ` | Condition #151: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.615] | : . ' , ; ` | : . ' , ; ` | : . ' all.equal() for FutureStrategyList ...
[08:08:06.745] | : . ' , ; ` | Condition #152 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.745] | : . ' , ; ` | Condition #152: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.615] | : . ' , ; ` | : . ' , ; ` | : . ' , New stack:
[08:08:06.745] | : . ' , ; ` | Condition #153 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.745] | : . ' , ; ` | Condition #153: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.615] | : . ' , ; ` | : . ' , ; ` | : . ' , List of 1
[08:08:06.615] | : . ' , ; ` | : . ' , ; ` | : . ' ,  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.615] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.615] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:08:06.615] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.615] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.615] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.615] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(sequential)
[08:08:06.615] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.615] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.615] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.615] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.745] | : . ' , ; ` | Condition #154 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.745] | : . ' , ; ` | Condition #154: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.618] | : . ' , ; ` | : . ' , ; ` | : . ' , Old stack:
[08:08:06.745] | : . ' , ; ` | Condition #155 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.745] | : . ' , ; ` | Condition #155: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.618] | : . ' , ; ` | : . ' , ; ` | : . ' , List of 1
[08:08:06.618] | : . ' , ; ` | : . ' , ; ` | : . ' ,  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.618] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.618] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:08:06.618] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.618] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.618] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.618] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(sequential)
[08:08:06.618] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.618] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.618] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.618] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.745] | : . ' , ; ` | Condition #156 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.746] | : . ' , ; ` | Condition #156: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.622] | : . ' , ; ` | : . ' , ; ` | : . ' , Identical
[08:08:06.746] | : . ' , ; ` | Condition #157 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.746] | : . ' , ; ` | Condition #157: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.622] | : . ' , ; ` | : . ' , ; ` | : . ' all.equal() for FutureStrategyList ... done
[08:08:06.746] | : . ' , ; ` | Condition #158 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.746] | : . ' , ; ` | Condition #158: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.623] | : . ' , ; ` | : . ' , ; ` | : . ' plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:06.746] | : . ' , ; ` | Condition #159 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.746] | : . ' , ; ` | Condition #159: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.623] | : . ' , ; ` | : . ' , ; ` | : . ' List of future strategies:
[08:08:06.623] | : . ' , ; ` | : . ' , ; ` | : . ' 1. sequential:
[08:08:06.623] | : . ' , ; ` | : . ' , ; ` | : . '    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:06.623] | : . ' , ; ` | : . ' , ; ` | : . '    - tweaked: FALSE
[08:08:06.623] | : . ' , ; ` | : . ' , ; ` | : . '    - call: plan(sequential)
[08:08:06.746] | : . ' , ; ` | Condition #160 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.746] | : . ' , ; ` | Condition #160: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.623] | : . ' , ; ` | : . ' , ; ` | : . plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:06.747] | : . ' , ; ` | Condition #161 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.747] | : . ' , ; ` | Condition #161: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.623] | : . ' , ; ` | : . ' , ; ` | : plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.747] | : . ' , ; ` | Condition #162 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.747] | : . ' , ; ` | Condition #162: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.623] | : . ' , ; ` | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.747] | : . ' , ; ` | Condition #163 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.747] | : . ' , ; ` | Condition #163: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.624] | : . ' , ; ` | : . ' , ; ` | SequentialFuture started (and completed)
[08:08:06.747] | : . ' , ; ` | Condition #164 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.747] | : . ' , ; ` | Condition #164: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.624] | : . ' , ; ` | : . ' , ; ` | signalConditions() ...
[08:08:06.747] | : . ' , ; ` | Condition #165 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.747] | : . ' , ; ` | Condition #165: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.624] | : . ' , ; ` | : . ' , ; ` | : include = ‘immediateCondition’
[08:08:06.748] | : . ' , ; ` | Condition #166 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.748] | : . ' , ; ` | Condition #166: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.624] | : . ' , ; ` | : . ' , ; ` | : exclude = 
[08:08:06.748] | : . ' , ; ` | Condition #167 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.748] | : . ' , ; ` | Condition #167: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.624] | : . ' , ; ` | : . ' , ; ` | : resignal = FALSE
[08:08:06.748] | : . ' , ; ` | Condition #168 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.748] | : . ' , ; ` | Condition #168: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.624] | : . ' , ; ` | : . ' , ; ` | : Number of conditions: 6
[08:08:06.748] | : . ' , ; ` | Condition #169 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.748] | : . ' , ; ` | Condition #169: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.624] | : . ' , ; ` | : . ' , ; ` | :  int 6
[08:08:06.749] | : . ' , ; ` | Condition #170 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.749] | : . ' , ; ` | Condition #170: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.625] | : . ' , ; ` | : . ' , ; ` | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.749] | : . ' , ; ` | Condition #171 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.749] | : . ' , ; ` | Condition #171: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.625] | : . ' , ; ` | : . ' , ; ` | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.749] | : . ' , ; ` | Condition #172 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.749] | : . ' , ; ` | Condition #172: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.625] | : . ' , ; ` | : . ' , ; ` | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.749] | : . ' , ; ` | Condition #173 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.749] | : . ' , ; ` | Condition #173: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.625] | : . ' , ; ` | : . ' , ; ` | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.749] | : . ' , ; ` | Condition #174 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.749] | : . ' , ; ` | Condition #174: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.625] | : . ' , ; ` | : . ' , ; ` | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.750] | : . ' , ; ` | Condition #175 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.750] | : . ' , ; ` | Condition #175: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.625] | : . ' , ; ` | : . ' , ; ` | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.750] | : . ' , ; ` | Condition #176 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.750] | : . ' , ; ` | Condition #176: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.626] | : . ' , ; ` | : . ' , ; ` | signalConditions() ... done
[08:08:06.750] | : . ' , ; ` | Condition #177 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.750] | : . ' , ; ` | Condition #177: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.626] | : . ' , ; ` | : . ' , ; ` launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:06.750] | : . ' , ; ` | Condition #178 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.750] | : . ' , ; ` | Condition #178: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.626] | : . ' , ; ` | : . ' , ; Launching futures ... done
[08:08:06.750] | : . ' , ; ` | Condition #179 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.751] | : . ' , ; ` | Condition #179: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.626] | : . ' , ; ` | : . ' , ; Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:06.751] | : . ' , ; ` | Condition #180 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.751] | : . ' , ; ` | Condition #180: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.626] | : . ' , ; ` | : . ' , Using SequentialFutureBackend ... done
[08:08:06.751] | : . ' , ; ` | Condition #181 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.751] | : . ' , ; ` | Condition #181: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.626] | : . ' , ; ` | : . ' run() for ‘Future’ (<unnamed-12>) ... done
[08:08:06.751] | : . ' , ; ` | Condition #182 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.751] | : . ' , ; ` | Condition #182: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.626] | : . ' , ; ` | : . future(..., label = NULL) ... done
[08:08:06.751] | : . ' , ; ` | Condition #183 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.751] | : . ' , ; ` | Condition #183: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.626] | : . ' , ; ` | : . value() for SequentialFuture (<unnamed-11>) ...
[08:08:06.752] | : . ' , ; ` | Condition #184 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.752] | : . ' , ; ` | Condition #184: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.627] | : . ' , ; ` | : . ' signalConditions() ...
[08:08:06.752] | : . ' , ; ` | Condition #185 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.752] | : . ' , ; ` | Condition #185: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.627] | : . ' , ; ` | : . ' , include = ‘immediateCondition’
[08:08:06.752] | : . ' , ; ` | Condition #186 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.752] | : . ' , ; ` | Condition #186: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.627] | : . ' , ; ` | : . ' , exclude = 
[08:08:06.752] | : . ' , ; ` | Condition #187 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.752] | : . ' , ; ` | Condition #187: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.627] | : . ' , ; ` | : . ' , resignal = FALSE
[08:08:06.752] | : . ' , ; ` | Condition #188 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.753] | : . ' , ; ` | Condition #188: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.627] | : . ' , ; ` | : . ' , Number of conditions: 6
[08:08:06.753] | : . ' , ; ` | Condition #189 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.753] | : . ' , ; ` | Condition #189: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.627] | : . ' , ; ` | : . ' ,  int 6
[08:08:06.754] | : . ' , ; ` | Condition #190 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.754] | : . ' , ; ` | Condition #190: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.628] | : . ' , ; ` | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.754] | : . ' , ; ` | Condition #191 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.754] | : . ' , ; ` | Condition #191: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.628] | : . ' , ; ` | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.754] | : . ' , ; ` | Condition #192 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.754] | : . ' , ; ` | Condition #192: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.628] | : . ' , ; ` | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.754] | : . ' , ; ` | Condition #193 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.754] | : . ' , ; ` | Condition #193: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.628] | : . ' , ; ` | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.755] | : . ' , ; ` | Condition #194 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.755] | : . ' , ; ` | Condition #194: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.628] | : . ' , ; ` | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.755] | : . ' , ; ` | Condition #195 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.755] | : . ' , ; ` | Condition #195: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.628] | : . ' , ; ` | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.755] | : . ' , ; ` | Condition #196 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.755] | : . ' , ; ` | Condition #196: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.628] | : . ' , ; ` | : . ' signalConditions() ... done
[08:08:06.755] | : . ' , ; ` | Condition #197 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.755] | : . ' , ; ` | Condition #197: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.628] | : . ' , ; ` | : . ' relay stdout ...
[08:08:06.756] | : . ' , ; ` | Condition #198 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.756] | : . ' , ; ` | Condition #198: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.629] | : . ' , ; ` | : . ' relay stdout ... done
[08:08:06.756] | : . ' , ; ` | Condition #199 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.756] | : . ' , ; ` | Condition #199: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.629] | : . ' , ; ` | : . ' check for misuse ...
[08:08:06.756] | : . ' , ; ` | Condition #200 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.756] | : . ' , ; ` | Condition #200: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.629] | : . ' , ; ` | : . ' check for misuse ... done
[08:08:06.756] | : . ' , ; ` | Condition #201 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.756] | : . ' , ; ` | Condition #201: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.629] | : . ' , ; ` | : . ' relay conditions ...
[08:08:06.756] | : . ' , ; ` | Condition #202 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.757] | : . ' , ; ` | Condition #202: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.629] | : . ' , ; ` | : . ' , Future state: ‘finished’
[08:08:06.757] | : . ' , ; ` | Condition #203 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.757] | : . ' , ; ` | Condition #203: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.629] | : . ' , ; ` | : . ' , signalConditions() ...
[08:08:06.757] | : . ' , ; ` | Condition #204 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.757] | : . ' , ; ` | Condition #204: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.629] | : . ' , ; ` | : . ' , ; include = ‘condition’
[08:08:06.757] | : . ' , ; ` | Condition #205 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.757] | : . ' , ; ` | Condition #205: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.629] | : . ' , ; ` | : . ' , ; exclude = ‘immediateCondition’
[08:08:06.757] | : . ' , ; ` | Condition #206 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.757] | : . ' , ; ` | Condition #206: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.630] | : . ' , ; ` | : . ' , ; resignal = TRUE
[08:08:06.758] | : . ' , ; ` | Condition #207 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.758] | : . ' , ; ` | Condition #207: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.630] | : . ' , ; ` | : . ' , ; Number of conditions: 6
[08:08:06.758] | : . ' , ; ` | Condition #208 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.758] | : . ' , ; ` | Condition #208: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.630] | : . ' , ; ` | : . ' , ;  int 6
[08:08:06.758] | : . ' , ; ` | Condition #209 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.758] | : . ' , ; ` | Condition #209: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.630] | : . ' , ; ` | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.758] | : . ' , ; ` | Condition #210 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.758] | : . ' , ; ` | Condition #210: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.630] | : . ' , ; ` | : . ' , ; Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.758] | : . ' , ; ` | Condition #211 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.758] | : . ' , ; ` | Condition #211: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.563] | : . ' , ; ` | : . ' , ; ` | attachPackages() ...
[08:08:06.759] | : . ' , ; ` | Condition #212 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.759] | : . ' , ; ` | Condition #212: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.630] | : . ' , ; ` | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.759] | : . ' , ; ` | Condition #213 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.759] | : . ' , ; ` | Condition #213: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.631] | : . ' , ; ` | : . ' , ; Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.759] | : . ' , ; ` | Condition #214 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.759] | : . ' , ; ` | Condition #214: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.563] | : . ' , ; ` | : . ' , ; ` | : packages: [n=1] ‘future’
[08:08:06.759] | : . ' , ; ` | Condition #215 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.759] | : . ' , ; ` | Condition #215: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.631] | : . ' , ; ` | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.759] | : . ' , ; ` | Condition #216 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.760] | : . ' , ; ` | Condition #216: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.631] | : . ' , ; ` | : . ' , ; Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.760] | : . ' , ; ` | Condition #217 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.760] | : . ' , ; ` | Condition #217: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.563] | : . ' , ; ` | : . ' , ; ` | attachPackages() ... done
[08:08:06.760] | : . ' , ; ` | Condition #218 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.760] | : . ' , ; ` | Condition #218: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.631] | : . ' , ; ` | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.760] | : . ' , ; ` | Condition #219 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.760] | : . ' , ; ` | Condition #219: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.631] | : . ' , ; ` | : . ' , ; Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.760] | : . ' , ; ` | Condition #220 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.760] | : . ' , ; ` | Condition #220: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.563] | : . ' , ; ` | : . ' , ; ` | attachPackages() ...
[08:08:06.761] | : . ' , ; ` | Condition #221 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.761] | : . ' , ; ` | Condition #221: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.631] | : . ' , ; ` | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.761] | : . ' , ; ` | Condition #222 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.761] | : . ' , ; ` | Condition #222: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.631] | : . ' , ; ` | : . ' , ; Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.761] | : . ' , ; ` | Condition #223 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.761] | : . ' , ; ` | Condition #223: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.563] | : . ' , ; ` | : . ' , ; ` | : packages: [n=0] 
[08:08:06.761] | : . ' , ; ` | Condition #224 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.761] | : . ' , ; ` | Condition #224: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.632] | : . ' , ; ` | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.761] | : . ' , ; ` | Condition #225 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.762] | : . ' , ; ` | Condition #225: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.632] | : . ' , ; ` | : . ' , ; Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.762] | : . ' , ; ` | Condition #226 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.762] | : . ' , ; ` | Condition #226: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.564] | : . ' , ; ` | : . ' , ; ` | attachPackages() ... done
[08:08:06.762] | : . ' , ; ` | Condition #227 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.762] | : . ' , ; ` | Condition #227: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.632] | : . ' , ; ` | : . ' , signalConditions() ... done
[08:08:06.762] | : . ' , ; ` | Condition #228 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.762] | : . ' , ; ` | Condition #228: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.632] | : . ' , ; ` | : . ' relay conditions ... done
[08:08:06.762] | : . ' , ; ` | Condition #229 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.762] | : . ' , ; ` | Condition #229: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.632] | : . ' , ; ` | : . value() for SequentialFuture (<unnamed-11>) ... done
[08:08:06.763] | : . ' , ; ` | Condition #230 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.763] | : . ' , ; ` | Condition #230: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.632] | : . ' , ; ` | : . value() for SequentialFuture (<unnamed-12>) ...
[08:08:06.763] | : . ' , ; ` | Condition #231 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.763] | : . ' , ; ` | Condition #231: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.632] | : . ' , ; ` | : . ' signalConditions() ...
[08:08:06.763] | : . ' , ; ` | Condition #232 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.763] | : . ' , ; ` | Condition #232: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.632] | : . ' , ; ` | : . ' , include = ‘immediateCondition’
[08:08:06.763] | : . ' , ; ` | Condition #233 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.763] | : . ' , ; ` | Condition #233: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.633] | : . ' , ; ` | : . ' , exclude = 
[08:08:06.763] | : . ' , ; ` | Condition #234 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.764] | : . ' , ; ` | Condition #234: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.633] | : . ' , ; ` | : . ' , resignal = FALSE
[08:08:06.764] | : . ' , ; ` | Condition #235 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.764] | : . ' , ; ` | Condition #235: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.633] | : . ' , ; ` | : . ' , Number of conditions: 6
[08:08:06.764] | : . ' , ; ` | Condition #236 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.764] | : . ' , ; ` | Condition #236: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.633] | : . ' , ; ` | : . ' ,  int 6
[08:08:06.764] | : . ' , ; ` | Condition #237 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.764] | : . ' , ; ` | Condition #237: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.633] | : . ' , ; ` | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.764] | : . ' , ; ` | Condition #238 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.764] | : . ' , ; ` | Condition #238: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.633] | : . ' , ; ` | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.765] | : . ' , ; ` | Condition #239 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.765] | : . ' , ; ` | Condition #239: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.634] | : . ' , ; ` | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.765] | : . ' , ; ` | Condition #240 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.765] | : . ' , ; ` | Condition #240: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.634] | : . ' , ; ` | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.765] | : . ' , ; ` | Condition #241 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.765] | : . ' , ; ` | Condition #241: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.634] | : . ' , ; ` | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.765] | : . ' , ; ` | Condition #242 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.765] | : . ' , ; ` | Condition #242: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.634] | : . ' , ; ` | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.765] | : . ' , ; ` | Condition #243 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.766] | : . ' , ; ` | Condition #243: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.634] | : . ' , ; ` | : . ' signalConditions() ... done
[08:08:06.766] | : . ' , ; ` | Condition #244 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.766] | : . ' , ; ` | Condition #244: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.634] | : . ' , ; ` | : . ' relay stdout ...
[08:08:06.766] | : . ' , ; ` | Condition #245 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.766] | : . ' , ; ` | Condition #245: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.634] | : . ' , ; ` | : . ' relay stdout ... done
[08:08:06.766] | : . ' , ; ` | Condition #246 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.766] | : . ' , ; ` | Condition #246: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.634] | : . ' , ; ` | : . ' check for misuse ...
[08:08:06.766] | : . ' , ; ` | Condition #247 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.766] | : . ' , ; ` | Condition #247: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.635] | : . ' , ; ` | : . ' check for misuse ... done
[08:08:06.767] | : . ' , ; ` | Condition #248 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.767] | : . ' , ; ` | Condition #248: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.635] | : . ' , ; ` | : . ' relay conditions ...
[08:08:06.767] | : . ' , ; ` | Condition #249 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.767] | : . ' , ; ` | Condition #249: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.635] | : . ' , ; ` | : . ' , Future state: ‘finished’
[08:08:06.767] | : . ' , ; ` | Condition #250 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.767] | : . ' , ; ` | Condition #250: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.635] | : . ' , ; ` | : . ' , signalConditions() ...
[08:08:06.767] | : . ' , ; ` | Condition #251 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.767] | : . ' , ; ` | Condition #251: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.635] | : . ' , ; ` | : . ' , ; include = ‘condition’
[08:08:06.767] | : . ' , ; ` | Condition #252 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.767] | : . ' , ; ` | Condition #252: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.635] | : . ' , ; ` | : . ' , ; exclude = ‘immediateCondition’
[08:08:06.768] | : . ' , ; ` | Condition #253 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.768] | : . ' , ; ` | Condition #253: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.635] | : . ' , ; ` | : . ' , ; resignal = TRUE
[08:08:06.768] | : . ' , ; ` | Condition #254 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.768] | : . ' , ; ` | Condition #254: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.635] | : . ' , ; ` | : . ' , ; Number of conditions: 6
[08:08:06.768] | : . ' , ; ` | Condition #255 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.768] | : . ' , ; ` | Condition #255: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.635] | : . ' , ; ` | : . ' , ;  int 6
[08:08:06.768] | : . ' , ; ` | Condition #256 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.768] | : . ' , ; ` | Condition #256: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.636] | : . ' , ; ` | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.768] | : . ' , ; ` | Condition #257 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.769] | : . ' , ; ` | Condition #257: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.636] | : . ' , ; ` | : . ' , ; Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.769] | : . ' , ; ` | Condition #258 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.769] | : . ' , ; ` | Condition #258: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.598] | : . ' , ; ` | : . ' , ; ` | attachPackages() ...
[08:08:06.769] | : . ' , ; ` | Condition #259 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.769] | : . ' , ; ` | Condition #259: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.636] | : . ' , ; ` | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.769] | : . ' , ; ` | Condition #260 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.769] | : . ' , ; ` | Condition #260: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.636] | : . ' , ; ` | : . ' , ; Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.769] | : . ' , ; ` | Condition #261 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.769] | : . ' , ; ` | Condition #261: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.598] | : . ' , ; ` | : . ' , ; ` | : packages: [n=1] ‘future’
[08:08:06.770] | : . ' , ; ` | Condition #262 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.770] | : . ' , ; ` | Condition #262: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.636] | : . ' , ; ` | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.771] | : . ' , ; ` | Condition #263 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.771] | : . ' , ; ` | Condition #263: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.637] | : . ' , ; ` | : . ' , ; Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.771] | : . ' , ; ` | Condition #264 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.771] | : . ' , ; ` | Condition #264: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.599] | : . ' , ; ` | : . ' , ; ` | attachPackages() ... done
[08:08:06.771] | : . ' , ; ` | Condition #265 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.771] | : . ' , ; ` | Condition #265: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.637] | : . ' , ; ` | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.771] | : . ' , ; ` | Condition #266 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.771] | : . ' , ; ` | Condition #266: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.637] | : . ' , ; ` | : . ' , ; Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.771] | : . ' , ; ` | Condition #267 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.772] | : . ' , ; ` | Condition #267: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.599] | : . ' , ; ` | : . ' , ; ` | attachPackages() ...
[08:08:06.772] | : . ' , ; ` | Condition #268 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.772] | : . ' , ; ` | Condition #268: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.637] | : . ' , ; ` | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.772] | : . ' , ; ` | Condition #269 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.772] | : . ' , ; ` | Condition #269: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.637] | : . ' , ; ` | : . ' , ; Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.772] | : . ' , ; ` | Condition #270 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.772] | : . ' , ; ` | Condition #270: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.599] | : . ' , ; ` | : . ' , ; ` | : packages: [n=0] 
[08:08:06.772] | : . ' , ; ` | Condition #271 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.772] | : . ' , ; ` | Condition #271: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.637] | : . ' , ; ` | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.773] | : . ' , ; ` | Condition #272 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.773] | : . ' , ; ` | Condition #272: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.637] | : . ' , ; ` | : . ' , ; Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.773] | : . ' , ; ` | Condition #273 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.773] | : . ' , ; ` | Condition #273: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.599] | : . ' , ; ` | : . ' , ; ` | attachPackages() ... done
[08:08:06.773] | : . ' , ; ` | Condition #274 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.773] | : . ' , ; ` | Condition #274: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.638] | : . ' , ; ` | : . ' , signalConditions() ... done
[08:08:06.773] | : . ' , ; ` | Condition #275 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.773] | : . ' , ; ` | Condition #275: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.638] | : . ' , ; ` | : . ' relay conditions ... done
[08:08:06.773] | : . ' , ; ` | Condition #276 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.774] | : . ' , ; ` | Condition #276: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.638] | : . ' , ; ` | : . value() for SequentialFuture (<unnamed-12>) ... done
[08:08:06.774] | : . ' , ; ` signalConditions() ... done
[08:08:06.774] | : . ' , ; relay conditions ... done
[08:08:06.774] | : . ' , value() for SequentialFuture (<unnamed-10>) ... done
a = 10
[08:08:06.774] | : . ' , future(..., label = NULL) ...
[08:08:06.774] | : . ' , ; lazy: FALSE
[08:08:06.774] | : . ' , ; stdout: TRUE
[08:08:06.775] | : . ' , ; conditions: [n=1] ‘condition’
[08:08:06.775] | : . ' , ; gc: FALSE
[08:08:06.775] | : . ' , ; earlySignal: FALSE
[08:08:06.775] | : . ' , ; getGlobalsAndPackages() ...
[08:08:06.775] | : . ' , ; ` Searching for globals ...
[08:08:06.780] | : . ' , ; ` | globals found: [3] ‘{’, ‘+’, ‘a’
[08:08:06.780] | : . ' , ; ` Searching for globals ... done
[08:08:06.780] | : . ' , ; ` Resolving globals: FALSE
[08:08:06.780] | : . ' , ; ` Search for packages associated with the globals ...
[08:08:06.780] | : . ' , ; ` | Packages associated with globals: [1] ‘base’
[08:08:06.781] | : . ' , ; ` | Packages: [1] ‘base’
[08:08:06.781] | : . ' , ; ` Search for packages associated with the globals ... done
[08:08:06.781] | : . ' , ; ` Packages after dropping 'base': [0] 
[08:08:06.781] | : . ' , ; ` globals: [1] ‘a’
[08:08:06.781] | : . ' , ; ` packages: [0] 
[08:08:06.781] | : . ' , ; getGlobalsAndPackages() ... done
[08:08:06.781] | : . ' , ; run() for ‘Future’ (<unnamed-13>) ...
[08:08:06.781] | : . ' , ; ` state: ‘created’
[08:08:06.782] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.782] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.782] | : . ' , ; ` Using SequentialFutureBackend ...
[08:08:06.782] | : . ' , ; ` | Number of futures since start: 12 (12 created, 12 launched, 12 finished)
[08:08:06.782] | : . ' , ; ` | Launching futures ...
[08:08:06.782] | : . ' , ; ` | : launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:06.782] | : . ' , ; ` | : . getFutureData() ...
[08:08:06.782] | : . ' , ; ` | : . ' getFutureCore() ...
[08:08:06.782] | : . ' , ; ` | : . ' , Packages needed by the future expression (n = 0): <none>
[08:08:06.782] | : . ' , ; ` | : . ' getFutureCore() ... done
[08:08:06.783] | : . ' , ; ` | : . ' getFutureCapture() ...
[08:08:06.783] | : . ' , ; ` | : . ' getFutureCapture() ... done
[08:08:06.783] | : . ' , ; ` | : . ' getFutureContext() ...
[08:08:06.783] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.783] | : . ' , ; ` | : . ' , ; Getting stack without first backend: [n=0] 
[08:08:06.783] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.783] | : . ' , ; ` | : . ' , Packages needed by future backend (n = 0): <none>
[08:08:06.783] | : . ' , ; ` | : . ' getFutureContext() ... done
[08:08:06.783] | : . ' , ; ` | : . getFutureData() ... done
[08:08:06.785] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.785] | : . ' , ; ` | : . ' Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:06.785] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.785] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.785] | : . ' , ; ` | : . ' plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:06.785] | : . ' , ; ` | : . ' , all.equal() for FutureStrategyList ...
[08:08:06.785] | : . ' , ; ` | : . ' , ; New stack:
[08:08:06.786] | : . ' , ; ` | : . ' , ; List of 1
[08:08:06.786] | : . ' , ; ` | : . ' , ;  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.786] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.786] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= logi TRUE
[08:08:06.786] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.786] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.786] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.786] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.786] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.789] | : . ' , ; ` | : . ' , ; Old stack:
[08:08:06.789] | : . ' , ; ` | : . ' , ; List of 1
[08:08:06.789] | : . ' , ; ` | : . ' , ;  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.789] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.789] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:08:06.789] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.789] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.789] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.789] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(sequential)
[08:08:06.789] | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.789] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.789] | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.789] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.792] | : . ' , ; ` | : . ' , ; Not identical
[08:08:06.792] | : . ' , ; ` | : . ' , ; all.equal() for future ...
[08:08:06.792] | : . ' , ; ` | : . ' , ; ` List of 2
[08:08:06.792] | : . ' , ; ` | : . ' , ; `  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.792] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.792] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:06.792] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.792] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.792] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.792] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.792] | : . ' , ; ` | : . ' , ; `  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.792] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.792] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:08:06.792] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.792] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.792] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.792] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(sequential)
[08:08:06.792] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.792] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.792] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.797] | : . ' , ; ` | : . ' , ; all.equal() for future ... done
[08:08:06.797] | : . ' , ; ` | : . ' , all.equal() for FutureStrategyList ... done
[08:08:06.798] | : . ' , ; ` | : . ' , plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:06.798] | : . ' , ; ` | : . ' , List of future strategies:
[08:08:06.798] | : . ' , ; ` | : . ' , 1. sequential:
[08:08:06.798] | : . ' , ; ` | : . ' ,    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:06.798] | : . ' , ; ` | : . ' ,    - tweaked: FALSE
[08:08:06.798] | : . ' , ; ` | : . ' ,    - call: plan(sequential)
[08:08:06.798] | : . ' , ; ` | : . ' plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:06.798] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.798] | : . ' , ; ` | : . assign_globals() ...
[08:08:06.798] | : . ' , ; ` | : . List of 1
[08:08:06.798] | : . ' , ; ` | : .  $ a: num 10
[08:08:06.798] | : . ' , ; ` | : .  - attr(*, "where")=List of 1
[08:08:06.798] | : . ' , ; ` | : .   ..$ a:<environment: R_GlobalEnv> 
[08:08:06.798] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:06.798] | : . ' , ; ` | : .  - attr(*, "resolved")= logi FALSE
[08:08:06.798] | : . ' , ; ` | : .  - attr(*, "total_size")= num NA
[08:08:06.798] | : . ' , ; ` | : .  - attr(*, "already-done")= logi TRUE
[08:08:06.801] | : . ' , ; ` | : . - copied ‘a’ to environment
[08:08:06.801] | : . ' , ; ` | : . assign_globals() ... done
[08:08:06.802] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.802] | : . ' , ; ` | : . ' plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.803] | : . ' , ; ` | : . ' , plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:06.803] | : . ' , ; ` | : . ' , ; all.equal() for FutureStrategyList ...
[08:08:06.803] | : . ' , ; ` | : . ' , ; ` New stack:
[08:08:06.803] | : . ' , ; ` | : . ' , ; ` List of 1
[08:08:06.803] | : . ' , ; ` | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.803] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.803] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:08:06.803] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.803] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.803] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.803] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(sequential)
[08:08:06.803] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.803] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.803] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.803] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.807] | : . ' , ; ` | : . ' , ; ` Old stack:
[08:08:06.807] | : . ' , ; ` | : . ' , ; ` List of 1
[08:08:06.807] | : . ' , ; ` | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.807] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.807] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:08:06.807] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.807] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.807] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.807] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(sequential)
[08:08:06.807] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.807] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.807] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.807] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.810] | : . ' , ; ` | : . ' , ; ` Identical
[08:08:06.810] | : . ' , ; ` | : . ' , ; all.equal() for FutureStrategyList ... done
[08:08:06.810] | : . ' , ; ` | : . ' , ; plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:06.810] | : . ' , ; ` | : . ' , ; List of future strategies:
[08:08:06.810] | : . ' , ; ` | : . ' , ; 1. sequential:
[08:08:06.810] | : . ' , ; ` | : . ' , ;    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:06.810] | : . ' , ; ` | : . ' , ;    - tweaked: FALSE
[08:08:06.810] | : . ' , ; ` | : . ' , ;    - call: plan(sequential)
[08:08:06.811] | : . ' , ; ` | : . ' , plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:06.811] | : . ' , ; ` | : . ' plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.811] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.811] | : . ' , ; ` | : . SequentialFuture started (and completed)
[08:08:06.811] | : . ' , ; ` | : . signalConditions() ...
[08:08:06.811] | : . ' , ; ` | : . ' include = ‘immediateCondition’
[08:08:06.812] | : . ' , ; ` | : . ' exclude = 
[08:08:06.812] | : . ' , ; ` | : . ' resignal = FALSE
[08:08:06.812] | : . ' , ; ` | : . ' Number of conditions: 6
[08:08:06.812] | : . ' , ; ` | : . '  int 6
[08:08:06.812] | : . ' , ; ` | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.812] | : . ' , ; ` | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.812] | : . ' , ; ` | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.813] | : . ' , ; ` | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.813] | : . ' , ; ` | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.813] | : . ' , ; ` | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.813] | : . ' , ; ` | : . signalConditions() ... done
[08:08:06.813] | : . ' , ; ` | : launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:06.813] | : . ' , ; ` | Launching futures ... done
[08:08:06.813] | : . ' , ; ` | Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:06.813] | : . ' , ; ` Using SequentialFutureBackend ... done
[08:08:06.813] | : . ' , ; run() for ‘Future’ (<unnamed-13>) ... done
[08:08:06.813] | : . ' , future(..., label = NULL) ... done
[08:08:06.814] | : . ' , value() for SequentialFuture (<unnamed-13>) ...
[08:08:06.814] | : . ' , ; signalConditions() ...
[08:08:06.814] | : . ' , ; ` include = ‘immediateCondition’
[08:08:06.814] | : . ' , ; ` exclude = 
[08:08:06.814] | : . ' , ; ` resignal = FALSE
[08:08:06.814] | : . ' , ; ` Number of conditions: 6
[08:08:06.814] | : . ' , ; `  int 6
[08:08:06.815] | : . ' , ; ` Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.815] | : . ' , ; ` Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.815] | : . ' , ; ` Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.815] | : . ' , ; ` Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.815] | : . ' , ; ` Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.815] | : . ' , ; ` Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.815] | : . ' , ; signalConditions() ... done
[08:08:06.815] | : . ' , ; relay stdout ...
[08:08:06.815] | : . ' , ; relay stdout ... done
[08:08:06.816] | : . ' , ; check for misuse ...
[08:08:06.816] | : . ' , ; check for misuse ... done
[08:08:06.816] | : . ' , ; relay conditions ...
[08:08:06.816] | : . ' , ; ` Future state: ‘finished’
[08:08:06.816] | : . ' , ; ` signalConditions() ...
[08:08:06.816] | : . ' , ; ` | include = ‘condition’
[08:08:06.816] | : . ' , ; ` | exclude = ‘immediateCondition’
[08:08:06.816] | : . ' , ; ` | resignal = TRUE
[08:08:06.816] | : . ' , ; ` | Number of conditions: 6
[08:08:06.816] | : . ' , ; ` |  int 6
[08:08:06.817] | : . ' , ; ` | Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.817] | : . ' , ; ` | Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.784] | : . ' , ; ` | : . attachPackages() ...
[08:08:06.817] | : . ' , ; ` | Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.817] | : . ' , ; ` | Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.784] | : . ' , ; ` | : . ' packages: [n=1] ‘future’
[08:08:06.817] | : . ' , ; ` | Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.817] | : . ' , ; ` | Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.784] | : . ' , ; ` | : . attachPackages() ... done
[08:08:06.817] | : . ' , ; ` | Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.818] | : . ' , ; ` | Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.784] | : . ' , ; ` | : . attachPackages() ...
[08:08:06.818] | : . ' , ; ` | Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.818] | : . ' , ; ` | Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.784] | : . ' , ; ` | : . ' packages: [n=0] 
[08:08:06.818] | : . ' , ; ` | Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.818] | : . ' , ; ` | Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.784] | : . ' , ; ` | : . attachPackages() ... done
[08:08:06.818] | : . ' , ; ` signalConditions() ... done
[08:08:06.818] | : . ' , ; relay conditions ... done
[08:08:06.818] | : . ' , value() for SequentialFuture (<unnamed-13>) ... done
b = 11
*** %<-% with ‘sequential’ futures ... DONE
Testing with 1 cores ... DONE
Testing with 2 cores ...
*** %<-% with ‘multicore’ futures ...
[08:08:06.819] | : . ' , plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.819] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:08:06.819] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:06.819] | : . ' , ; ` | New stack:
[08:08:06.819] | : . ' , ; ` | List of 1
[08:08:06.819] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:06.819] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:06.819] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:06.819] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:06.819] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:06.819] | : . ' , ; ` |     ...)  
[08:08:06.819] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:06.819] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:06.819] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:06.819] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.822] | : . ' , ; ` | Old stack:
[08:08:06.822] | : . ' , ; ` | List of 1
[08:08:06.822] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.822] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.822] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:06.822] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.822] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.822] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.822] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:06.822] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.822] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.822] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.822] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.827] | : . ' , ; ` | Not identical
[08:08:06.827] | : . ' , ; ` | all.equal() for future ...
[08:08:06.827] | : . ' , ; ` | : List of 2
[08:08:06.827] | : . ' , ; ` | :  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:06.827] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:06.827] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:06.827] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:06.827] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:06.827] | : . ' , ; ` | :     ...)  
[08:08:06.827] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:06.827] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:06.827] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:06.827] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.827] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.827] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:06.827] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.827] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.827] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.827] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:06.827] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045a9518> 
[08:08:06.827] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.827] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.833] | : . ' , ; ` | : Formals differ
[08:08:06.833] | : . ' , ; ` | all.equal() for future ... done
[08:08:06.833] | : . ' , ; ` | Future strategies differ at level 1
[08:08:06.833] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:06.833] | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:06.833] | : . ' , ; ` List of future strategies:
[08:08:06.833] | : . ' , ; ` 1. multicore:
[08:08:06.833] | : . ' , ; `    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:06.833] | : . ' , ; `    - tweaked: FALSE
[08:08:06.833] | : . ' , ; `    - call: plan(strategy)
[08:08:06.834] | : . ' , ; ` List of 1
[08:08:06.834] | : . ' , ; `  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:06.834] | : . ' , ; `     earlySignal = FALSE, envir = parent.frame())  
[08:08:06.834] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:06.834] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:06.834] | : . ' , ; `   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:06.834] | : . ' , ; `     ...)  
[08:08:06.834] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:06.834] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:06.834] | : . ' , ; `   ..- attr(*, "call")= language plan(strategy)
[08:08:06.834] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.836] | : . ' , ; ` plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ...
[08:08:06.836] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.837] | : . ' , ; ` | : Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:06.837] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.837] | : . ' , ; ` | Legacy shutdown of cluster workers ...
[08:08:06.837] | : . ' , ; ` | : Stopping existing cluster ...
[08:08:06.837] | : . ' , ; ` | : . No pre-existing cluster. Skipping
[08:08:06.837] | : . ' , ; ` | : Stopping existing cluster ... done
[08:08:06.837] | : . ' , ; ` | Legacy shutdown of cluster workers ... done
[08:08:06.838] | : . ' , ; ` plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[08:08:06.838] | : . ' , ; ` plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ...
[08:08:06.838] | : . ' , ; ` | function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:06.838] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:06.838] | : . ' , ; ` |  - attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:06.838] | : . ' , ; ` |  - attr(*, "init")= logi TRUE
[08:08:06.838] | : . ' , ; ` |  - attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:06.838] | : . ' , ; ` |     ...)  
[08:08:06.838] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:06.838] | : . ' , ; ` |  - attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:06.838] | : . ' , ; ` |  - attr(*, "call")= language plan(strategy)
[08:08:06.840] | : . ' , ; ` | init: TRUE
[08:08:06.840] | : . ' , ; ` | makeFutureBackend(<multicore>) ...
[08:08:06.840] | : . ' , ; ` | : Backend function: <‘NULL’>
[08:08:06.840] | : . ' , ; ` | : Evaluator tweak arguments: [n=0]
[08:08:06.840] | : . ' , ; ` | :  list()
[08:08:06.840] | : . ' , ; ` | : Evaluator formal arguments: [n=3]
[08:08:06.841] | : . ' , ; ` | :  list()
[08:08:06.841] | : . ' , ; ` | : Backend factory arguments: [n=3]
[08:08:06.841] | : . ' , ; ` | : Dotted pair list of 3
[08:08:06.841] | : . ' , ; ` | :  $ workers    : language availableCores(constraints = "multicore")
[08:08:06.841] | : . ' , ; ` | :  $ gc         : logi FALSE
[08:08:06.841] | : . ' , ; ` | :  $ earlySignal: logi FALSE
[08:08:06.844] | : . ' , ; ` | : Backend: <‘MulticoreFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:06.844] | : . ' , ; ` | makeFutureBackend(<multicore>) ... done
[08:08:06.844] | : . ' , ; ` plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ... done
[08:08:06.844] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.844] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.846] | : . ' , ; ` plan(): nbrOfWorkers() = 2
[08:08:06.846] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[08:08:06.846] | : . ' , plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
** Future evaluation without globals
[08:08:06.847] | : . ' , future(..., label = NULL) ...
[08:08:06.847] | : . ' , ; lazy: FALSE
[08:08:06.847] | : . ' , ; stdout: TRUE
[08:08:06.847] | : . ' , ; conditions: [n=1] ‘condition’
[08:08:06.847] | : . ' , ; gc: FALSE
[08:08:06.847] | : . ' , ; earlySignal: FALSE
[08:08:06.847] | : . ' , ; getGlobalsAndPackages() ...
[08:08:06.847] | : . ' , ; ` Searching for globals ...
[08:08:06.853] | : . ' , ; ` | globals found: [2] ‘{’, ‘<-’
[08:08:06.853] | : . ' , ; ` Searching for globals ... done
[08:08:06.854] | : . ' , ; ` Resolving globals: FALSE
[08:08:06.854] | : . ' , ; ` Search for packages associated with the globals ...
[08:08:06.854] | : . ' , ; ` | Packages associated with globals: [1] ‘base’
[08:08:06.854] | : . ' , ; ` | Packages: [1] ‘base’
[08:08:06.854] | : . ' , ; ` Search for packages associated with the globals ... done
[08:08:06.854] | : . ' , ; ` Packages after dropping 'base': [0] 
[08:08:06.854] | : . ' , ; ` globals: [0] 
[08:08:06.855] | : . ' , ; ` packages: [0] 
[08:08:06.855] | : . ' , ; getGlobalsAndPackages() ... done
[08:08:06.855] | : . ' , ; run() for ‘Future’ (<unnamed-14>) ...
[08:08:06.855] | : . ' , ; ` state: ‘created’
[08:08:06.855] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.855] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.855] | : . ' , ; ` Using MulticoreFutureBackend ...
[08:08:06.855] | : . ' , ; ` | Number of futures since start: 0 (0 created, 0 launched, 0 finished)
[08:08:06.856] | : . ' , ; ` | Launching futures ...
[08:08:06.856] | : . ' , ; ` | : launchFuture() for MulticoreFutureBackend ...
[08:08:06.856] | : . ' , ; ` | : . getFutureData() ...
[08:08:06.856] | : . ' , ; ` | : . ' getFutureCore() ...
[08:08:06.856] | : . ' , ; ` | : . ' , Packages needed by the future expression (n = 0): <none>
[08:08:06.856] | : . ' , ; ` | : . ' getFutureCore() ... done
[08:08:06.856] | : . ' , ; ` | : . ' getFutureCapture() ...
[08:08:06.857] | : . ' , ; ` | : . ' getFutureCapture() ... done
[08:08:06.857] | : . ' , ; ` | : . ' getFutureContext() ...
[08:08:06.857] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.857] | : . ' , ; ` | : . ' , ; Getting stack without first backend: [n=0] 
[08:08:06.857] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.857] | : . ' , ; ` | : . ' , Packages needed by future backend (n = 0): <none>
[08:08:06.857] | : . ' , ; ` | : . ' getFutureContext() ... done
[08:08:06.858] | : . ' , ; ` | : . getFutureData() ... done
[08:08:06.858] | : . ' , ; ` | : . requestCore(..., workers = 2) ...
[08:08:06.858] | : . ' , ; ` | : . requestCore(..., workers = 2) ... done
[08:08:06.861] | : . ' , ; ` | : . MulticoreFuture started
[08:08:06.861] | : . ' , ; ` | : launchFuture() for MulticoreFutureBackend ... done
[08:08:06.862] | : . ' , ; ` | Launching futures ... done
[08:08:06.862] | : . ' , ; ` | Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:06.862] | : . ' , ; ` Using MulticoreFutureBackend ... done
[08:08:06.863] | : . ' , ; run() for ‘Future’ (<unnamed-14>) ... done
[08:08:06.863] | : . ' , future(..., label = NULL) ... done
[08:08:06.863] | : . ' , value() for MulticoreFuture (<unnamed-14>) ...
[08:08:06.864] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.864] | : . ' , ; ` | : . ' Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:06.865] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.865] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.865] | : . ' , ; ` | : . ' plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:06.865] | : . ' , ; ` | : . ' , all.equal() for FutureStrategyList ...
[08:08:06.866] | : . ' , ; result() for MulticoreFuture ...
[08:08:06.866] | : . ' , ; ` | : . ' , ; New stack:
[08:08:06.866] | : . ' , ; ` | : . ' , ; List of 1
[08:08:06.866] | : . ' , ; ` | : . ' , ;  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.866] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.866] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= logi TRUE
[08:08:06.866] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.866] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.866] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.866] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.866] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.870] | : . ' , ; ` | : . ' , ; Old stack:
[08:08:06.871] | : . ' , ; ` | : . ' , ; List of 1
[08:08:06.871] | : . ' , ; ` | : . ' , ;  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:06.871] | : . ' , ; ` | : . ' , ;     earlySignal = FALSE, envir = parent.frame())  
[08:08:06.871] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:06.871] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:08:06.871] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:06.871] | : . ' , ; ` | : . ' , ;     ...)  
[08:08:06.871] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:06.871] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:06.871] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategy)
[08:08:06.871] | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:06.871] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:06.871] | : . ' , ; ` | : . ' , ;     ...)  
[08:08:06.871] | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:06.871] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.880] | : . ' , ; ` | : . ' , ; Not identical
[08:08:06.881] | : . ' , ; ` | : . ' , ; all.equal() for future ...
[08:08:06.881] | : . ' , ; ` | : . ' , ; ` List of 2
[08:08:06.881] | : . ' , ; ` | : . ' , ; `  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.881] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.881] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:06.881] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.881] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.881] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.881] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.881] | : . ' , ; ` | : . ' , ; `  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:06.881] | : . ' , ; ` | : . ' , ; `     earlySignal = FALSE, envir = parent.frame())  
[08:08:06.881] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:06.881] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:08:06.881] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:06.881] | : . ' , ; ` | : . ' , ; `     ...)  
[08:08:06.881] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:06.881] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:06.881] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategy)
[08:08:06.881] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:06.881] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:06.881] | : . ' , ; ` | : . ' , ; `     ...)  
[08:08:06.881] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:06.889] | : . ' , ; ` | : . ' , ; ` Formals differ
[08:08:06.890] | : . ' , ; ` | : . ' , ; all.equal() for future ... done
[08:08:06.890] | : . ' , ; ` | : . ' , ; Future strategies differ at level 1
[08:08:06.890] | : . ' , ; ` | : . ' , all.equal() for FutureStrategyList ... done
[08:08:06.890] | : . ' , ; ` | : . ' , plan(): Setting new future backend stack:
[08:08:06.890] | : . ' , ; ` | : . ' , List of future strategies:
[08:08:06.890] | : . ' , ; ` | : . ' , 1. sequential:
[08:08:06.890] | : . ' , ; ` | : . ' ,    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:06.890] | : . ' , ; ` | : . ' ,    - tweaked: FALSE
[08:08:06.890] | : . ' , ; ` | : . ' ,    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.891] | : . ' , ; ` | : . ' , List of 1
[08:08:06.891] | : . ' , ; ` | : . ' ,  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.891] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.891] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= logi TRUE
[08:08:06.891] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.891] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.891] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.891] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.891] | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.894] | : . ' , ; ` | : . ' , plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:06.894] | : . ' , ; ` | : . ' , plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:06.894] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.894] | : . ' , ; ` | : . ' , ; plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:06.895] | : . ' , ; ` | : . ' , ; ` function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.895] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.895] | : . ' , ; ` | : . ' , ; `  - attr(*, "init")= logi TRUE
[08:08:06.895] | : . ' , ; ` | : . ' , ; `  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.895] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.895] | : . ' , ; ` | : . ' , ; `  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.895] | : . ' , ; ` | : . ' , ; `  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.897] | : . ' , ; ` | : . ' , ; ` init: TRUE
[08:08:06.897] | : . ' , ; ` | : . ' , ; ` makeFutureBackend(<sequential>) ...
[08:08:06.897] | : . ' , ; ` | : . ' , ; ` | Backend function: <‘NULL’>
[08:08:06.897] | : . ' , ; ` | : . ' , ; ` | Evaluator tweak arguments: [n=0]
[08:08:06.897] | : . ' , ; ` | : . ' , ; ` |  list()
[08:08:06.897] | : . ' , ; ` | : . ' , ; ` | Evaluator formal arguments: [n=2]
[08:08:06.897] | : . ' , ; ` | : . ' , ; ` |  list()
[08:08:06.898] | : . ' , ; ` | : . ' , ; ` | Backend factory arguments: [n=2]
[08:08:06.898] | : . ' , ; ` | : . ' , ; ` | Dotted pair list of 2
[08:08:06.898] | : . ' , ; ` | : . ' , ; ` |  $ gc         : logi FALSE
[08:08:06.898] | : . ' , ; ` | : . ' , ; ` |  $ earlySignal: logi FALSE
[08:08:06.899] | : . ' , ; ` | : . ' , ; ` | Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:06.899] | : . ' , ; ` | : . ' , ; ` makeFutureBackend(<sequential>) ... done
[08:08:06.899] | : . ' , ; ` | : . ' , ; plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:06.899] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.899] | : . ' , ; ` | : . ' , plan(): nbrOfWorkers() = 1
[08:08:06.900] | : . ' , ; ` | : . ' plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:06.900] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.903] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.903] | : . ' , ; ` | : . ' plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.903] | : . ' , ; ` | : . ' , plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:06.904] | : . ' , ; ` | : . ' , ; all.equal() for FutureStrategyList ...
[08:08:06.904] | : . ' , ; ` | : . ' , ; ` New stack:
[08:08:06.904] | : . ' , ; ` | : . ' , ; ` List of 1
[08:08:06.904] | : . ' , ; ` | : . ' , ; `  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:06.904] | : . ' , ; ` | : . ' , ; `     earlySignal = FALSE, envir = parent.frame())  
[08:08:06.904] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:06.904] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:08:06.904] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:06.904] | : . ' , ; ` | : . ' , ; `     ...)  
[08:08:06.904] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:06.904] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:06.904] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategy)
[08:08:06.904] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:06.904] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:06.904] | : . ' , ; ` | : . ' , ; `     ...)  
[08:08:06.904] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:06.904] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.907] | : . ' , ; ` | : . ' , ; ` Old stack:
[08:08:06.907] | : . ' , ; ` | : . ' , ; ` List of 1
[08:08:06.907] | : . ' , ; ` | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.907] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.907] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:08:06.907] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.907] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.907] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.907] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.907] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045f6468> 
[08:08:06.907] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.907] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.907] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.911] | : . ' , ; ` | : . ' , ; ` Not identical
[08:08:06.911] | : . ' , ; ` | : . ' , ; ` all.equal() for future ...
[08:08:06.911] | : . ' , ; ` | : . ' , ; ` | List of 2
[08:08:06.911] | : . ' , ; ` | : . ' , ; ` |  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:06.911] | : . ' , ; ` | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:06.911] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:06.911] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:06.911] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:06.911] | : . ' , ; ` | : . ' , ; ` |     ...)  
[08:08:06.911] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:06.911] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:06.911] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:06.911] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:06.911] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:06.911] | : . ' , ; ` | : . ' , ; ` |     ...)  
[08:08:06.911] | : . ' , ; ` | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:06.911] | : . ' , ; ` | : . ' , ; ` |  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.911] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.911] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:06.911] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.911] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.911] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.911] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.911] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9045f6468> 
[08:08:06.911] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.911] | : . ' , ; ` | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.916] | : . ' , ; ` | : . ' , ; ` | Formals differ
[08:08:06.916] | : . ' , ; ` | : . ' , ; ` all.equal() for future ... done
[08:08:06.917] | : . ' , ; ` | : . ' , ; ` Future strategies differ at level 1
[08:08:06.917] | : . ' , ; ` | : . ' , ; all.equal() for FutureStrategyList ... done
[08:08:06.917] | : . ' , ; ` | : . ' , ; plan(): Setting new future backend stack:
[08:08:06.917] | : . ' , ; ` | : . ' , ; List of future strategies:
[08:08:06.917] | : . ' , ; ` | : . ' , ; 1. multicore:
[08:08:06.917] | : . ' , ; ` | : . ' , ;    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:06.917] | : . ' , ; ` | : . ' , ;    - tweaked: FALSE
[08:08:06.917] | : . ' , ; ` | : . ' , ;    - call: plan(strategy)
[08:08:06.917] | : . ' , ; ` | : . ' , ; List of 1
[08:08:06.917] | : . ' , ; ` | : . ' , ;  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:06.917] | : . ' , ; ` | : . ' , ;     earlySignal = FALSE, envir = parent.frame())  
[08:08:06.917] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:06.917] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:08:06.917] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:06.917] | : . ' , ; ` | : . ' , ;     ...)  
[08:08:06.917] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:06.917] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:06.917] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategy)
[08:08:06.917] | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:06.917] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:06.917] | : . ' , ; ` | : . ' , ;     ...)  
[08:08:06.917] | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:06.917] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.922] | : . ' , ; ` | : . ' , ; plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:06.922] | : . ' , ; ` | : . ' , ; plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:06.922] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.922] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.922] | : . ' , ; ` | : . ' , ; plan(): nbrOfWorkers() = 2
[08:08:06.922] | : . ' , ; ` | : . ' , plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:06.922] | : . ' , ; ` | : . ' plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.922] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.924] | : . ' , ; ` readImmediateCondition() ...
[08:08:06.924] | : . ' , ; ` | Path: ‘/tmp/RtmpohK6N2/.future/immediateConditions’
[08:08:06.924] | : . ' , ; ` | Number of RDS files: 0
[08:08:06.924] | : . ' , ; ` | Returned conditions set:
[08:08:06.924] | : . ' , ; ` |  list()
[08:08:06.925] | : . ' , ; ` readImmediateCondition() ... done
[08:08:06.925] | : . ' , ; ` result() for MulticoreFuture ...
[08:08:06.925] | : . ' , ; ` result() for MulticoreFuture ... done
[08:08:06.926] | : . ' , ; ` signalConditions() ...
[08:08:06.926] | : . ' , ; ` | include = ‘immediateCondition’
[08:08:06.926] | : . ' , ; ` | exclude = 
[08:08:06.926] | : . ' , ; ` | resignal = FALSE
[08:08:06.926] | : . ' , ; ` | Number of conditions: 6
[08:08:06.926] | : . ' , ; ` |  int 6
[08:08:06.927] | : . ' , ; ` | Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.927] | : . ' , ; ` | Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.927] | : . ' , ; ` | Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.927] | : . ' , ; ` | Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.927] | : . ' , ; ` | Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.928] | : . ' , ; ` | Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.928] | : . ' , ; ` signalConditions() ... done
[08:08:06.928] | : . ' , ; result() for MulticoreFuture ... done
[08:08:06.928] | : . ' , ; result() for MulticoreFuture ...
[08:08:06.928] | : . ' , ; result() for MulticoreFuture ... done
[08:08:06.928] | : . ' , ; signalConditions() ...
[08:08:06.928] | : . ' , ; ` include = ‘immediateCondition’
[08:08:06.929] | : . ' , ; ` exclude = 
[08:08:06.929] | : . ' , ; ` resignal = FALSE
[08:08:06.929] | : . ' , ; ` Number of conditions: 6
[08:08:06.929] | : . ' , ; `  int 6
[08:08:06.929] | : . ' , ; ` Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.930] | : . ' , ; ` Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.932] | : . ' , ; ` Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.932] | : . ' , ; ` Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.932] | : . ' , ; ` Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.932] | : . ' , ; ` Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.933] | : . ' , ; signalConditions() ... done
[08:08:06.933] | : . ' , ; relay stdout ...
[08:08:06.933] | : . ' , ; relay stdout ... done
[08:08:06.933] | : . ' , ; check for misuse ...
[08:08:06.933] | : . ' , ; check for misuse ... done
[08:08:06.934] | : . ' , ; relay conditions ...
[08:08:06.934] | : . ' , ; ` Future state: ‘finished’
[08:08:06.934] | : . ' , ; ` result() for MulticoreFuture ...
[08:08:06.934] | : . ' , ; ` result() for MulticoreFuture ... done
[08:08:06.934] | : . ' , ; ` signalConditions() ...
[08:08:06.934] | : . ' , ; ` | include = ‘condition’
[08:08:06.935] | : . ' , ; ` | exclude = ‘immediateCondition’
[08:08:06.935] | : . ' , ; ` | resignal = TRUE
[08:08:06.935] | : . ' , ; ` | Number of conditions: 6
[08:08:06.935] | : . ' , ; ` |  int 6
[08:08:06.936] | : . ' , ; ` | Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.936] | : . ' , ; ` | Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.861] | : . ' , ; ` | : . attachPackages() ...
[08:08:06.936] | : . ' , ; ` | Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.937] | : . ' , ; ` | Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.862] | : . ' , ; ` | : . ' packages: [n=1] ‘future’
[08:08:06.937] | : . ' , ; ` | Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.937] | : . ' , ; ` | Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.862] | : . ' , ; ` | : . attachPackages() ... done
[08:08:06.937] | : . ' , ; ` | Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.937] | : . ' , ; ` | Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.863] | : . ' , ; ` | : . attachPackages() ...
[08:08:06.938] | : . ' , ; ` | Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.938] | : . ' , ; ` | Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.863] | : . ' , ; ` | : . ' packages: [n=0] 
[08:08:06.938] | : . ' , ; ` | Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:06.938] | : . ' , ; ` | Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.863] | : . ' , ; ` | : . attachPackages() ... done
[08:08:06.938] | : . ' , ; ` signalConditions() ... done
[08:08:06.938] | : . ' , ; relay conditions ... done
[08:08:06.939] | : . ' , value() for MulticoreFuture (<unnamed-14>) ... done
** Future evaluation with globals
[08:08:06.939] | : . ' , future(..., label = NULL) ...
[08:08:06.939] | : . ' , ; lazy: FALSE
[08:08:06.939] | : . ' , ; stdout: TRUE
[08:08:06.939] | : . ' , ; conditions: [n=1] ‘condition’
[08:08:06.940] | : . ' , ; gc: FALSE
[08:08:06.940] | : . ' , ; earlySignal: FALSE
[08:08:06.940] | : . ' , ; getGlobalsAndPackages() ...
[08:08:06.940] | : . ' , ; ` Searching for globals ...
[08:08:06.947] | : . ' , ; ` | globals found: [3] ‘{’, ‘<-’, ‘a’
[08:08:06.947] | : . ' , ; ` Searching for globals ... done
[08:08:06.947] | : . ' , ; ` Resolving globals: FALSE
[08:08:06.947] | : . ' , ; ` Search for packages associated with the globals ...
[08:08:06.948] | : . ' , ; ` | Packages associated with globals: [1] ‘base’
[08:08:06.948] | : . ' , ; ` | Packages: [1] ‘base’
[08:08:06.948] | : . ' , ; ` Search for packages associated with the globals ... done
[08:08:06.948] | : . ' , ; ` Packages after dropping 'base': [0] 
[08:08:06.948] | : . ' , ; ` globals: [1] ‘a’
[08:08:06.948] | : . ' , ; ` packages: [0] 
[08:08:06.948] | : . ' , ; getGlobalsAndPackages() ... done
[08:08:06.949] | : . ' , ; run() for ‘Future’ (<unnamed-15>) ...
[08:08:06.949] | : . ' , ; ` state: ‘created’
[08:08:06.949] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.949] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.949] | : . ' , ; ` Using MulticoreFutureBackend ...
[08:08:06.949] | : . ' , ; ` | Number of futures since start: 1 (1 created, 1 launched, 1 finished)
[08:08:06.949] | : . ' , ; ` | Launching futures ...
[08:08:06.950] | : . ' , ; ` | : launchFuture() for MulticoreFutureBackend ...
[08:08:06.950] | : . ' , ; ` | : . getFutureData() ...
[08:08:06.950] | : . ' , ; ` | : . ' getFutureCore() ...
[08:08:06.950] | : . ' , ; ` | : . ' , Packages needed by the future expression (n = 0): <none>
[08:08:06.950] | : . ' , ; ` | : . ' getFutureCore() ... done
[08:08:06.950] | : . ' , ; ` | : . ' getFutureCapture() ...
[08:08:06.950] | : . ' , ; ` | : . ' getFutureCapture() ... done
[08:08:06.950] | : . ' , ; ` | : . ' getFutureContext() ...
[08:08:06.950] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.951] | : . ' , ; ` | : . ' , ; Getting stack without first backend: [n=0] 
[08:08:06.951] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.951] | : . ' , ; ` | : . ' , Packages needed by future backend (n = 0): <none>
[08:08:06.951] | : . ' , ; ` | : . ' getFutureContext() ... done
[08:08:06.951] | : . ' , ; ` | : . getFutureData() ... done
[08:08:06.951] | : . ' , ; ` | : . requestCore(..., workers = 2) ...
[08:08:06.951] | : . ' , ; ` | : . requestCore(..., workers = 2) ... done
[08:08:06.953] | : . ' , ; ` | : . MulticoreFuture started
[08:08:06.954] | : . ' , ; ` | : launchFuture() for MulticoreFutureBackend ... done
[08:08:06.954] | : . ' , ; ` | Launching futures ... done
[08:08:06.954] | : . ' , ; ` | Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:06.954] | : . ' , ; ` Using MulticoreFutureBackend ... done
[08:08:06.955] | : . ' , ; run() for ‘Future’ (<unnamed-15>) ... done
[08:08:06.955] | : . ' , future(..., label = NULL) ... done
[08:08:06.955] | : . ' , value() for MulticoreFuture (<unnamed-15>) ...
[08:08:06.956] | : . ' , ; result() for MulticoreFuture ...
[08:08:06.956] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.957] | : . ' , ; ` | : . ' Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:06.959] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.960] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.961] | : . ' , ; ` | : . ' plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:06.961] | : . ' , ; ` | : . ' , all.equal() for FutureStrategyList ...
[08:08:06.961] | : . ' , ; ` | : . ' , ; New stack:
[08:08:06.962] | : . ' , ; ` | : . ' , ; List of 1
[08:08:06.962] | : . ' , ; ` | : . ' , ;  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.962] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.962] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= logi TRUE
[08:08:06.962] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.962] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.962] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.962] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.962] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.969] | : . ' , ; ` | : . ' , ; Old stack:
[08:08:06.969] | : . ' , ; ` | : . ' , ; List of 1
[08:08:06.969] | : . ' , ; ` | : . ' , ;  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:06.969] | : . ' , ; ` | : . ' , ;     earlySignal = FALSE, envir = parent.frame())  
[08:08:06.969] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:06.969] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:08:06.969] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:06.969] | : . ' , ; ` | : . ' , ;     ...)  
[08:08:06.969] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:06.969] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:06.969] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategy)
[08:08:06.969] | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:06.969] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:06.969] | : . ' , ; ` | : . ' , ;     ...)  
[08:08:06.969] | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:06.969] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.975] | : . ' , ; ` | : . ' , ; Not identical
[08:08:06.975] | : . ' , ; ` | : . ' , ; all.equal() for future ...
[08:08:06.975] | : . ' , ; ` | : . ' , ; ` List of 2
[08:08:06.975] | : . ' , ; ` | : . ' , ; `  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.975] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.975] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:06.975] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.975] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.975] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.975] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.975] | : . ' , ; ` | : . ' , ; `  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:06.975] | : . ' , ; ` | : . ' , ; `     earlySignal = FALSE, envir = parent.frame())  
[08:08:06.975] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:06.975] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:08:06.975] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:06.975] | : . ' , ; ` | : . ' , ; `     ...)  
[08:08:06.975] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:06.975] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:06.975] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategy)
[08:08:06.975] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:06.975] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:06.975] | : . ' , ; ` | : . ' , ; `     ...)  
[08:08:06.975] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:06.982] | : . ' , ; ` | : . ' , ; ` Formals differ
[08:08:06.982] | : . ' , ; ` | : . ' , ; all.equal() for future ... done
[08:08:06.982] | : . ' , ; ` | : . ' , ; Future strategies differ at level 1
[08:08:06.982] | : . ' , ; ` | : . ' , all.equal() for FutureStrategyList ... done
[08:08:06.983] | : . ' , ; ` | : . ' , plan(): Setting new future backend stack:
[08:08:06.983] | : . ' , ; ` | : . ' , List of future strategies:
[08:08:06.983] | : . ' , ; ` | : . ' , 1. sequential:
[08:08:06.983] | : . ' , ; ` | : . ' ,    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:06.983] | : . ' , ; ` | : . ' ,    - tweaked: FALSE
[08:08:06.983] | : . ' , ; ` | : . ' ,    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.983] | : . ' , ; ` | : . ' , List of 1
[08:08:06.983] | : . ' , ; ` | : . ' ,  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.983] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.983] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= logi TRUE
[08:08:06.983] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.983] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.983] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.983] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.983] | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:06.986] | : . ' , ; ` | : . ' , plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:06.986] | : . ' , ; ` | : . ' , plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:06.987] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:06.987] | : . ' , ; ` | : . ' , ; plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:06.987] | : . ' , ; ` | : . ' , ; ` function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:06.987] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:06.987] | : . ' , ; ` | : . ' , ; `  - attr(*, "init")= logi TRUE
[08:08:06.987] | : . ' , ; ` | : . ' , ; `  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:06.987] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.987] | : . ' , ; ` | : . ' , ; `  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:06.987] | : . ' , ; ` | : . ' , ; `  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:06.990] | : . ' , ; ` | : . ' , ; ` init: TRUE
[08:08:06.991] | : . ' , ; ` | : . ' , ; ` makeFutureBackend(<sequential>) ...
[08:08:06.991] | : . ' , ; ` | : . ' , ; ` | Backend function: <‘NULL’>
[08:08:06.991] | : . ' , ; ` | : . ' , ; ` | Evaluator tweak arguments: [n=0]
[08:08:06.991] | : . ' , ; ` | : . ' , ; ` |  list()
[08:08:06.991] | : . ' , ; ` | : . ' , ; ` | Evaluator formal arguments: [n=2]
[08:08:06.991] | : . ' , ; ` | : . ' , ; ` |  list()
[08:08:06.992] | : . ' , ; ` | : . ' , ; ` | Backend factory arguments: [n=2]
[08:08:06.992] | : . ' , ; ` | : . ' , ; ` | Dotted pair list of 2
[08:08:06.992] | : . ' , ; ` | : . ' , ; ` |  $ gc         : logi FALSE
[08:08:06.992] | : . ' , ; ` | : . ' , ; ` |  $ earlySignal: logi FALSE
[08:08:06.993] | : . ' , ; ` | : . ' , ; ` | Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:06.993] | : . ' , ; ` | : . ' , ; ` makeFutureBackend(<sequential>) ... done
[08:08:06.993] | : . ' , ; ` | : . ' , ; plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:06.993] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:06.994] | : . ' , ; ` | : . ' , plan(): nbrOfWorkers() = 1
[08:08:06.994] | : . ' , ; ` | : . ' plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:06.994] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:06.994] | : . ' , ; ` | : . assign_globals() ...
[08:08:06.994] | : . ' , ; ` | : . List of 1
[08:08:06.994] | : . ' , ; ` | : .  $ a: num 2
[08:08:06.994] | : . ' , ; ` | : .  - attr(*, "where")=List of 1
[08:08:06.994] | : . ' , ; ` | : .   ..$ a:<environment: R_GlobalEnv> 
[08:08:06.994] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:06.994] | : . ' , ; ` | : .  - attr(*, "resolved")= logi FALSE
[08:08:06.994] | : . ' , ; ` | : .  - attr(*, "total_size")= num NA
[08:08:06.994] | : . ' , ; ` | : .  - attr(*, "already-done")= logi TRUE
[08:08:06.997] | : . ' , ; ` | : . - copied ‘a’ to environment
[08:08:06.997] | : . ' , ; ` | : . assign_globals() ... done
[08:08:06.999] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.999] | : . ' , ; ` | : . ' plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:06.999] | : . ' , ; ` | : . ' , plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:06.999] | : . ' , ; ` | : . ' , ; all.equal() for FutureStrategyList ...
[08:08:06.999] | : . ' , ; ` | : . ' , ; ` New stack:
[08:08:07.000] | : . ' , ; ` | : . ' , ; ` List of 1
[08:08:07.000] | : . ' , ; ` | : . ' , ; `  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.000] | : . ' , ; ` | : . ' , ; `     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.000] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.000] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:08:07.000] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.000] | : . ' , ; ` | : . ' , ; `     ...)  
[08:08:07.000] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.000] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.000] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategy)
[08:08:07.000] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.000] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.000] | : . ' , ; ` | : . ' , ; `     ...)  
[08:08:07.000] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.000] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.003] | : . ' , ; ` | : . ' , ; ` Old stack:
[08:08:07.003] | : . ' , ; ` | : . ' , ; ` List of 1
[08:08:07.003] | : . ' , ; ` | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.003] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.003] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:08:07.003] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.003] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.003] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.003] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.003] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9028d8168> 
[08:08:07.003] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.003] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.003] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.006] | : . ' , ; ` | : . ' , ; ` Not identical
[08:08:07.006] | : . ' , ; ` | : . ' , ; ` all.equal() for future ...
[08:08:07.006] | : . ' , ; ` | : . ' , ; ` | List of 2
[08:08:07.006] | : . ' , ; ` | : . ' , ; ` |  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.006] | : . ' , ; ` | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.006] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.006] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:07.006] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.006] | : . ' , ; ` | : . ' , ; ` |     ...)  
[08:08:07.006] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.006] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.006] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:07.006] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.006] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.006] | : . ' , ; ` | : . ' , ; ` |     ...)  
[08:08:07.006] | : . ' , ; ` | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.006] | : . ' , ; ` | : . ' , ; ` |  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.006] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.006] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:07.006] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.006] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.006] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.006] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.006] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9028d8168> 
[08:08:07.006] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.006] | : . ' , ; ` | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.013] | : . ' , ; ` | : . ' , ; ` | Formals differ
[08:08:07.013] | : . ' , ; ` | : . ' , ; ` all.equal() for future ... done
[08:08:07.013] | : . ' , ; ` | : . ' , ; ` Future strategies differ at level 1
[08:08:07.014] | : . ' , ; ` | : . ' , ; all.equal() for FutureStrategyList ... done
[08:08:07.014] | : . ' , ; ` | : . ' , ; plan(): Setting new future backend stack:
[08:08:07.014] | : . ' , ; ` | : . ' , ; List of future strategies:
[08:08:07.014] | : . ' , ; ` | : . ' , ; 1. multicore:
[08:08:07.014] | : . ' , ; ` | : . ' , ;    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:07.014] | : . ' , ; ` | : . ' , ;    - tweaked: FALSE
[08:08:07.014] | : . ' , ; ` | : . ' , ;    - call: plan(strategy)
[08:08:07.014] | : . ' , ; ` | : . ' , ; List of 1
[08:08:07.014] | : . ' , ; ` | : . ' , ;  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.014] | : . ' , ; ` | : . ' , ;     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.014] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.014] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:08:07.014] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.014] | : . ' , ; ` | : . ' , ;     ...)  
[08:08:07.014] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.014] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.014] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategy)
[08:08:07.014] | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.014] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.014] | : . ' , ; ` | : . ' , ;     ...)  
[08:08:07.014] | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.014] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.017] | : . ' , ; ` | : . ' , ; plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:07.017] | : . ' , ; ` | : . ' , ; plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:07.017] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.018] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.018] | : . ' , ; ` | : . ' , ; plan(): nbrOfWorkers() = 2
[08:08:07.018] | : . ' , ; ` | : . ' , plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:07.018] | : . ' , ; ` | : . ' plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.018] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.019] | : . ' , ; ` readImmediateCondition() ...
[08:08:07.019] | : . ' , ; ` | Path: ‘/tmp/RtmpohK6N2/.future/immediateConditions’
[08:08:07.021] | : . ' , ; ` | Number of RDS files: 0
[08:08:07.021] | : . ' , ; ` | Returned conditions set:
[08:08:07.021] | : . ' , ; ` |  list()
[08:08:07.022] | : . ' , ; ` readImmediateCondition() ... done
[08:08:07.022] | : . ' , ; ` result() for MulticoreFuture ...
[08:08:07.023] | : . ' , ; ` result() for MulticoreFuture ... done
[08:08:07.023] | : . ' , ; ` signalConditions() ...
[08:08:07.023] | : . ' , ; ` | include = ‘immediateCondition’
[08:08:07.023] | : . ' , ; ` | exclude = 
[08:08:07.024] | : . ' , ; ` | resignal = FALSE
[08:08:07.024] | : . ' , ; ` | Number of conditions: 6
[08:08:07.024] | : . ' , ; ` |  int 6
[08:08:07.025] | : . ' , ; ` | Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.025] | : . ' , ; ` | Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.025] | : . ' , ; ` | Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.025] | : . ' , ; ` | Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.026] | : . ' , ; ` | Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.026] | : . ' , ; ` | Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.026] | : . ' , ; ` signalConditions() ... done
[08:08:07.026] | : . ' , ; result() for MulticoreFuture ... done
[08:08:07.026] | : . ' , ; result() for MulticoreFuture ...
[08:08:07.027] | : . ' , ; result() for MulticoreFuture ... done
[08:08:07.027] | : . ' , ; signalConditions() ...
[08:08:07.027] | : . ' , ; ` include = ‘immediateCondition’
[08:08:07.027] | : . ' , ; ` exclude = 
[08:08:07.027] | : . ' , ; ` resignal = FALSE
[08:08:07.027] | : . ' , ; ` Number of conditions: 6
[08:08:07.028] | : . ' , ; `  int 6
[08:08:07.028] | : . ' , ; ` Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.028] | : . ' , ; ` Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.029] | : . ' , ; ` Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.029] | : . ' , ; ` Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.029] | : . ' , ; ` Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.029] | : . ' , ; ` Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.029] | : . ' , ; signalConditions() ... done
[08:08:07.029] | : . ' , ; relay stdout ...
[08:08:07.029] | : . ' , ; relay stdout ... done
[08:08:07.030] | : . ' , ; check for misuse ...
[08:08:07.030] | : . ' , ; check for misuse ... done
[08:08:07.030] | : . ' , ; relay conditions ...
[08:08:07.030] | : . ' , ; ` Future state: ‘finished’
[08:08:07.030] | : . ' , ; ` result() for MulticoreFuture ...
[08:08:07.030] | : . ' , ; ` result() for MulticoreFuture ... done
[08:08:07.030] | : . ' , ; ` signalConditions() ...
[08:08:07.031] | : . ' , ; ` | include = ‘condition’
[08:08:07.031] | : . ' , ; ` | exclude = ‘immediateCondition’
[08:08:07.031] | : . ' , ; ` | resignal = TRUE
[08:08:07.031] | : . ' , ; ` | Number of conditions: 6
[08:08:07.031] | : . ' , ; ` |  int 6
[08:08:07.032] | : . ' , ; ` | Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.032] | : . ' , ; ` | Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.954] | : . ' , ; ` | : . attachPackages() ...
[08:08:07.032] | : . ' , ; ` | Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.032] | : . ' , ; ` | Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.955] | : . ' , ; ` | : . ' packages: [n=1] ‘future’
[08:08:07.032] | : . ' , ; ` | Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.032] | : . ' , ; ` | Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.955] | : . ' , ; ` | : . attachPackages() ... done
[08:08:07.032] | : . ' , ; ` | Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.033] | : . ' , ; ` | Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.955] | : . ' , ; ` | : . attachPackages() ...
[08:08:07.033] | : . ' , ; ` | Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.033] | : . ' , ; ` | Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.955] | : . ' , ; ` | : . ' packages: [n=0] 
[08:08:07.033] | : . ' , ; ` | Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.033] | : . ' , ; ` | Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:06.956] | : . ' , ; ` | : . attachPackages() ... done
[08:08:07.033] | : . ' , ; ` signalConditions() ... done
[08:08:07.033] | : . ' , ; relay conditions ... done
[08:08:07.034] | : . ' , value() for MulticoreFuture (<unnamed-15>) ... done
** Future evaluation with errors
[08:08:07.034] | : . ' , future(..., label = NULL) ...
[08:08:07.034] | : . ' , ; lazy: FALSE
[08:08:07.034] | : . ' , ; stdout: TRUE
[08:08:07.034] | : . ' , ; conditions: [n=1] ‘condition’
[08:08:07.035] | : . ' , ; gc: FALSE
[08:08:07.035] | : . ' , ; earlySignal: FALSE
[08:08:07.035] | : . ' , ; getGlobalsAndPackages() ...
[08:08:07.035] | : . ' , ; ` Searching for globals ...
[08:08:07.046] | : . ' , ; ` | globals found: [3] ‘{’, ‘<-’, ‘stop’
[08:08:07.046] | : . ' , ; ` Searching for globals ... done
[08:08:07.047] | : . ' , ; ` Resolving globals: FALSE
[08:08:07.047] | : . ' , ; ` Search for packages associated with the globals ...
[08:08:07.047] | : . ' , ; ` | Packages associated with globals: [1] ‘base’
[08:08:07.047] | : . ' , ; ` | Packages: [1] ‘base’
[08:08:07.047] | : . ' , ; ` Search for packages associated with the globals ... done
[08:08:07.047] | : . ' , ; ` Packages after dropping 'base': [0] 
[08:08:07.048] | : . ' , ; ` globals: [0] 
[08:08:07.048] | : . ' , ; ` packages: [0] 
[08:08:07.048] | : . ' , ; getGlobalsAndPackages() ... done
[08:08:07.048] | : . ' , ; run() for ‘Future’ (<unnamed-16>) ...
[08:08:07.048] | : . ' , ; ` state: ‘created’
[08:08:07.048] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.048] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.049] | : . ' , ; ` Using MulticoreFutureBackend ...
[08:08:07.049] | : . ' , ; ` | Number of futures since start: 2 (2 created, 2 launched, 2 finished)
[08:08:07.049] | : . ' , ; ` | Launching futures ...
[08:08:07.049] | : . ' , ; ` | : launchFuture() for MulticoreFutureBackend ...
[08:08:07.049] | : . ' , ; ` | : . getFutureData() ...
[08:08:07.049] | : . ' , ; ` | : . ' getFutureCore() ...
[08:08:07.049] | : . ' , ; ` | : . ' , Packages needed by the future expression (n = 0): <none>
[08:08:07.049] | : . ' , ; ` | : . ' getFutureCore() ... done
[08:08:07.049] | : . ' , ; ` | : . ' getFutureCapture() ...
[08:08:07.050] | : . ' , ; ` | : . ' getFutureCapture() ... done
[08:08:07.050] | : . ' , ; ` | : . ' getFutureContext() ...
[08:08:07.050] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.050] | : . ' , ; ` | : . ' , ; Getting stack without first backend: [n=0] 
[08:08:07.050] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.050] | : . ' , ; ` | : . ' , Packages needed by future backend (n = 0): <none>
[08:08:07.050] | : . ' , ; ` | : . ' getFutureContext() ... done
[08:08:07.050] | : . ' , ; ` | : . getFutureData() ... done
[08:08:07.051] | : . ' , ; ` | : . requestCore(..., workers = 2) ...
[08:08:07.051] | : . ' , ; ` | : . requestCore(..., workers = 2) ... done
[08:08:07.053] | : . ' , ; ` | : . MulticoreFuture started
[08:08:07.053] | : . ' , ; ` | : launchFuture() for MulticoreFutureBackend ... done
[08:08:07.053] | : . ' , ; ` | Launching futures ... done
[08:08:07.054] | : . ' , ; ` | Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:07.054] | : . ' , ; ` Using MulticoreFutureBackend ... done
[08:08:07.054] | : . ' , ; run() for ‘Future’ (<unnamed-16>) ... done
[08:08:07.054] | : . ' , future(..., label = NULL) ... done
[08:08:07.055] | : . ' , value() for MulticoreFuture (<unnamed-16>) ...
[08:08:07.055] | : . ' , ; result() for MulticoreFuture ...
[08:08:07.056] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.056] | : . ' , ; ` | : . ' Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:07.056] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.057] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:07.057] | : . ' , ; ` | : . ' plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:07.057] | : . ' , ; ` | : . ' , all.equal() for FutureStrategyList ...
[08:08:07.058] | : . ' , ; ` | : . ' , ; New stack:
[08:08:07.058] | : . ' , ; ` | : . ' , ; List of 1
[08:08:07.058] | : . ' , ; ` | : . ' , ;  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.058] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.058] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= logi TRUE
[08:08:07.058] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.058] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.058] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.058] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.058] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.063] | : . ' , ; ` | : . ' , ; Old stack:
[08:08:07.063] | : . ' , ; ` | : . ' , ; List of 1
[08:08:07.063] | : . ' , ; ` | : . ' , ;  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.063] | : . ' , ; ` | : . ' , ;     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.063] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.063] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:08:07.063] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.063] | : . ' , ; ` | : . ' , ;     ...)  
[08:08:07.063] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.063] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.063] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategy)
[08:08:07.063] | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.063] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.063] | : . ' , ; ` | : . ' , ;     ...)  
[08:08:07.063] | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.063] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.068] | : . ' , ; ` | : . ' , ; Not identical
[08:08:07.068] | : . ' , ; ` | : . ' , ; all.equal() for future ...
[08:08:07.069] | : . ' , ; ` | : . ' , ; ` List of 2
[08:08:07.069] | : . ' , ; ` | : . ' , ; `  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.069] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.069] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:07.069] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.069] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.069] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.069] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.069] | : . ' , ; ` | : . ' , ; `  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.069] | : . ' , ; ` | : . ' , ; `     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.069] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.069] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:08:07.069] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.069] | : . ' , ; ` | : . ' , ; `     ...)  
[08:08:07.069] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.069] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.069] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategy)
[08:08:07.069] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.069] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.069] | : . ' , ; ` | : . ' , ; `     ...)  
[08:08:07.069] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.080] | : . ' , ; ` | : . ' , ; ` Formals differ
[08:08:07.081] | : . ' , ; ` | : . ' , ; all.equal() for future ... done
[08:08:07.081] | : . ' , ; ` | : . ' , ; Future strategies differ at level 1
[08:08:07.081] | : . ' , ; ` | : . ' , all.equal() for FutureStrategyList ... done
[08:08:07.081] | : . ' , ; ` | : . ' , plan(): Setting new future backend stack:
[08:08:07.081] | : . ' , ; ` | : . ' , List of future strategies:
[08:08:07.081] | : . ' , ; ` | : . ' , 1. sequential:
[08:08:07.081] | : . ' , ; ` | : . ' ,    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:07.081] | : . ' , ; ` | : . ' ,    - tweaked: FALSE
[08:08:07.081] | : . ' , ; ` | : . ' ,    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.082] | : . ' , ; ` | : . ' , List of 1
[08:08:07.082] | : . ' , ; ` | : . ' ,  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.082] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.082] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= logi TRUE
[08:08:07.082] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.082] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.082] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.082] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.082] | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.085] | : . ' , ; ` | : . ' , plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:07.086] | : . ' , ; ` | : . ' , plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:07.086] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.086] | : . ' , ; ` | : . ' , ; plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:07.086] | : . ' , ; ` | : . ' , ; ` function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.086] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.086] | : . ' , ; ` | : . ' , ; `  - attr(*, "init")= logi TRUE
[08:08:07.086] | : . ' , ; ` | : . ' , ; `  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.086] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.086] | : . ' , ; ` | : . ' , ; `  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.086] | : . ' , ; ` | : . ' , ; `  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.088] | : . ' , ; ` | : . ' , ; ` init: TRUE
[08:08:07.088] | : . ' , ; ` | : . ' , ; ` makeFutureBackend(<sequential>) ...
[08:08:07.088] | : . ' , ; ` | : . ' , ; ` | Backend function: <‘NULL’>
[08:08:07.088] | : . ' , ; ` | : . ' , ; ` | Evaluator tweak arguments: [n=0]
[08:08:07.089] | : . ' , ; ` | : . ' , ; ` |  list()
[08:08:07.089] | : . ' , ; ` | : . ' , ; ` | Evaluator formal arguments: [n=2]
[08:08:07.089] | : . ' , ; ` | : . ' , ; ` |  list()
[08:08:07.089] | : . ' , ; ` | : . ' , ; ` | Backend factory arguments: [n=2]
[08:08:07.089] | : . ' , ; ` | : . ' , ; ` | Dotted pair list of 2
[08:08:07.089] | : . ' , ; ` | : . ' , ; ` |  $ gc         : logi FALSE
[08:08:07.089] | : . ' , ; ` | : . ' , ; ` |  $ earlySignal: logi FALSE
[08:08:07.090] | : . ' , ; ` | : . ' , ; ` | Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:07.091] | : . ' , ; ` | : . ' , ; ` makeFutureBackend(<sequential>) ... done
[08:08:07.091] | : . ' , ; ` | : . ' , ; plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:07.091] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.091] | : . ' , ; ` | : . ' , plan(): nbrOfWorkers() = 1
[08:08:07.091] | : . ' , ; ` | : . ' plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:07.091] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.094] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:07.094] | : . ' , ; ` | : . ' plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:07.094] | : . ' , ; ` | : . ' , plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:07.094] | : . ' , ; ` | : . ' , ; all.equal() for FutureStrategyList ...
[08:08:07.094] | : . ' , ; ` | : . ' , ; ` New stack:
[08:08:07.094] | : . ' , ; ` | : . ' , ; ` List of 1
[08:08:07.094] | : . ' , ; ` | : . ' , ; `  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.094] | : . ' , ; ` | : . ' , ; `     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.094] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.094] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:08:07.094] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.094] | : . ' , ; ` | : . ' , ; `     ...)  
[08:08:07.094] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.094] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.094] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategy)
[08:08:07.094] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.094] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.094] | : . ' , ; ` | : . ' , ; `     ...)  
[08:08:07.094] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.094] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.099] | : . ' , ; ` | : . ' , ; ` Old stack:
[08:08:07.099] | : . ' , ; ` | : . ' , ; ` List of 1
[08:08:07.099] | : . ' , ; ` | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.099] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.099] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:08:07.099] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.099] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.099] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.099] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.099] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f903d14a20> 
[08:08:07.099] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.099] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.099] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.103] | : . ' , ; ` | : . ' , ; ` Not identical
[08:08:07.103] | : . ' , ; ` | : . ' , ; ` all.equal() for future ...
[08:08:07.103] | : . ' , ; ` | : . ' , ; ` | List of 2
[08:08:07.103] | : . ' , ; ` | : . ' , ; ` |  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.103] | : . ' , ; ` | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.103] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.103] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:07.103] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.103] | : . ' , ; ` | : . ' , ; ` |     ...)  
[08:08:07.103] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.103] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.103] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:07.103] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.103] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.103] | : . ' , ; ` | : . ' , ; ` |     ...)  
[08:08:07.103] | : . ' , ; ` | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.103] | : . ' , ; ` | : . ' , ; ` |  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.103] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.103] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:07.103] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.103] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.103] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.103] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.103] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f903d14a20> 
[08:08:07.103] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.103] | : . ' , ; ` | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.108] | : . ' , ; ` | : . ' , ; ` | Formals differ
[08:08:07.109] | : . ' , ; ` | : . ' , ; ` all.equal() for future ... done
[08:08:07.109] | : . ' , ; ` | : . ' , ; ` Future strategies differ at level 1
[08:08:07.109] | : . ' , ; ` | : . ' , ; all.equal() for FutureStrategyList ... done
[08:08:07.109] | : . ' , ; ` | : . ' , ; plan(): Setting new future backend stack:
[08:08:07.109] | : . ' , ; ` | : . ' , ; List of future strategies:
[08:08:07.109] | : . ' , ; ` | : . ' , ; 1. multicore:
[08:08:07.109] | : . ' , ; ` | : . ' , ;    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:07.109] | : . ' , ; ` | : . ' , ;    - tweaked: FALSE
[08:08:07.109] | : . ' , ; ` | : . ' , ;    - call: plan(strategy)
[08:08:07.109] | : . ' , ; ` | : . ' , ; List of 1
[08:08:07.109] | : . ' , ; ` | : . ' , ;  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.109] | : . ' , ; ` | : . ' , ;     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.109] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.109] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:08:07.109] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.109] | : . ' , ; ` | : . ' , ;     ...)  
[08:08:07.109] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.109] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.109] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategy)
[08:08:07.109] | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.109] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.109] | : . ' , ; ` | : . ' , ;     ...)  
[08:08:07.109] | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.109] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.112] | : . ' , ; ` | : . ' , ; plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:07.113] | : . ' , ; ` | : . ' , ; plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:07.113] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.113] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.113] | : . ' , ; ` | : . ' , ; plan(): nbrOfWorkers() = 2
[08:08:07.113] | : . ' , ; ` | : . ' , plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:07.113] | : . ' , ; ` | : . ' plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.113] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.114] | : . ' , ; ` readImmediateCondition() ...
[08:08:07.114] | : . ' , ; ` | Path: ‘/tmp/RtmpohK6N2/.future/immediateConditions’
[08:08:07.115] | : . ' , ; ` | Number of RDS files: 0
[08:08:07.115] | : . ' , ; ` | Returned conditions set:
[08:08:07.115] | : . ' , ; ` |  list()
[08:08:07.115] | : . ' , ; ` readImmediateCondition() ... done
[08:08:07.116] | : . ' , ; ` result() for MulticoreFuture ...
[08:08:07.116] | : . ' , ; ` result() for MulticoreFuture ... done
[08:08:07.116] | : . ' , ; ` signalConditions() ...
[08:08:07.116] | : . ' , ; ` | include = ‘immediateCondition’
[08:08:07.116] | : . ' , ; ` | exclude = 
[08:08:07.117] | : . ' , ; ` | resignal = FALSE
[08:08:07.117] | : . ' , ; ` | Number of conditions: 7
[08:08:07.117] | : . ' , ; ` |  int 7
[08:08:07.118] | : . ' , ; ` | Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.118] | : . ' , ; ` | Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.118] | : . ' , ; ` | Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.118] | : . ' , ; ` | Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.118] | : . ' , ; ` | Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.118] | : . ' , ; ` | Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.118] | : . ' , ; ` | Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:07.119] | : . ' , ; ` signalConditions() ... done
[08:08:07.119] | : . ' , ; result() for MulticoreFuture ... done
[08:08:07.119] | : . ' , ; result() for MulticoreFuture ...
[08:08:07.119] | : . ' , ; result() for MulticoreFuture ... done
[08:08:07.119] | : . ' , ; signalConditions() ...
[08:08:07.119] | : . ' , ; ` include = ‘immediateCondition’
[08:08:07.119] | : . ' , ; ` exclude = 
[08:08:07.120] | : . ' , ; ` resignal = FALSE
[08:08:07.120] | : . ' , ; ` Number of conditions: 7
[08:08:07.120] | : . ' , ; `  int 7
[08:08:07.120] | : . ' , ; ` Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.121] | : . ' , ; ` Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.121] | : . ' , ; ` Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.121] | : . ' , ; ` Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.121] | : . ' , ; ` Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.121] | : . ' , ; ` Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.121] | : . ' , ; ` Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:07.121] | : . ' , ; signalConditions() ... done
[08:08:07.122] | : . ' , ; relay stdout ...
[08:08:07.122] | : . ' , ; relay stdout ... done
[08:08:07.122] | : . ' , ; check for misuse ...
[08:08:07.122] | : . ' , ; check for misuse ... done
[08:08:07.122] | : . ' , ; relay conditions ...
[08:08:07.122] | : . ' , ; ` Future state: ‘finished’
[08:08:07.122] | : . ' , ; ` result() for MulticoreFuture ...
[08:08:07.123] | : . ' , ; ` result() for MulticoreFuture ... done
[08:08:07.123] | : . ' , ; ` signalConditions() ...
[08:08:07.123] | : . ' , ; ` | include = ‘condition’
[08:08:07.123] | : . ' , ; ` | exclude = ‘immediateCondition’
[08:08:07.123] | : . ' , ; ` | resignal = TRUE
[08:08:07.123] | : . ' , ; ` | Number of conditions: 7
[08:08:07.123] | : . ' , ; ` |  int 7
[08:08:07.124] | : . ' , ; ` | Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.124] | : . ' , ; ` | Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.054] | : . ' , ; ` | : . attachPackages() ...
[08:08:07.124] | : . ' , ; ` | Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.124] | : . ' , ; ` | Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.054] | : . ' , ; ` | : . ' packages: [n=1] ‘future’
[08:08:07.125] | : . ' , ; ` | Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.125] | : . ' , ; ` | Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.054] | : . ' , ; ` | : . attachPackages() ... done
[08:08:07.125] | : . ' , ; ` | Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.125] | : . ' , ; ` | Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.055] | : . ' , ; ` | : . attachPackages() ...
[08:08:07.125] | : . ' , ; ` | Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.125] | : . ' , ; ` | Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.055] | : . ' , ; ` | : . ' packages: [n=0] 
[08:08:07.125] | : . ' , ; ` | Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.126] | : . ' , ; ` | Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.055] | : . ' , ; ` | : . attachPackages() ... done
[08:08:07.126] | : . ' , ; ` | Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:07.126] | : . ' , ; ` | Condition #7: ‘simpleError’, ‘error’, ‘condition’
[08:08:07.126] | : . ' , ; ` signalConditions() ... done
[08:08:07.126] | : . ' , ; relay conditions ... done
[08:08:07.127] | : . ' , ; future(..., label = NULL) ...
[08:08:07.129] | : . ' , ; ` lazy: FALSE
[08:08:07.129] | : . ' , ; ` stdout: TRUE
[08:08:07.129] | : . ' , ; ` conditions: [n=1] ‘condition’
[08:08:07.129] | : . ' , ; ` gc: FALSE
[08:08:07.129] | : . ' , ; ` earlySignal: FALSE
[08:08:07.130] | : . ' , ; ` getGlobalsAndPackages() ...
[08:08:07.130] | : . ' , ; ` | Searching for globals ...
[08:08:07.145] | : . ' , ; ` | : globals found: [6] ‘{’, ‘if’, ‘==’, ‘%%’, ‘ii’, ‘stop’
[08:08:07.145] | : . ' , ; ` | Searching for globals ... done
[08:08:07.145] | : . ' , ; ` | Resolving globals: FALSE
[08:08:07.145] | : . ' , ; ` | Search for packages associated with the globals ...
[08:08:07.145] | : . ' , ; ` | : Packages associated with globals: [1] ‘base’
[08:08:07.147] | : . ' , ; ` | : Packages: [1] ‘base’
[08:08:07.147] | : . ' , ; ` | Search for packages associated with the globals ... done
[08:08:07.147] | : . ' , ; ` | Packages after dropping 'base': [0] 
[08:08:07.147] | : . ' , ; ` | globals: [1] ‘ii’
[08:08:07.147] | : . ' , ; ` | packages: [0] 
[08:08:07.147] | : . ' , ; ` getGlobalsAndPackages() ... done
[08:08:07.148] | : . ' , ; ` run() for ‘Future’ (<unnamed-17>) ...
[08:08:07.148] | : . ' , ; ` | state: ‘created’
[08:08:07.148] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.148] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.148] | : . ' , ; ` | Using MulticoreFutureBackend ...
[08:08:07.148] | : . ' , ; ` | : Number of futures since start: 3 (3 created, 3 launched, 3 finished)
[08:08:07.148] | : . ' , ; ` | : Launching futures ...
[08:08:07.148] | : . ' , ; ` | : . launchFuture() for MulticoreFutureBackend ...
[08:08:07.149] | : . ' , ; ` | : . ' getFutureData() ...
[08:08:07.149] | : . ' , ; ` | : . ' , getFutureCore() ...
[08:08:07.149] | : . ' , ; ` | : . ' , ; Packages needed by the future expression (n = 0): <none>
[08:08:07.149] | : . ' , ; ` | : . ' , getFutureCore() ... done
[08:08:07.149] | : . ' , ; ` | : . ' , getFutureCapture() ...
[08:08:07.149] | : . ' , ; ` | : . ' , getFutureCapture() ... done
[08:08:07.149] | : . ' , ; ` | : . ' , getFutureContext() ...
[08:08:07.149] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.149] | : . ' , ; ` | : . ' , ; ` Getting stack without first backend: [n=0] 
[08:08:07.150] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.150] | : . ' , ; ` | : . ' , ; Packages needed by future backend (n = 0): <none>
[08:08:07.150] | : . ' , ; ` | : . ' , getFutureContext() ... done
[08:08:07.150] | : . ' , ; ` | : . ' getFutureData() ... done
[08:08:07.150] | : . ' , ; ` | : . ' requestCore(..., workers = 2) ...
[08:08:07.150] | : . ' , ; ` | : . ' requestCore(..., workers = 2) ... done
[08:08:07.152] | : . ' , ; ` | : . ' MulticoreFuture started
[08:08:07.153] | : . ' , ; ` | : . launchFuture() for MulticoreFutureBackend ... done
[08:08:07.154] | : . ' , ; ` | : Launching futures ... done
[08:08:07.154] | : . ' , ; ` | : Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:07.155] | : . ' , ; ` | Using MulticoreFutureBackend ... done
[08:08:07.155] | : . ' , ; ` run() for ‘Future’ (<unnamed-17>) ... done
[08:08:07.155] | : . ' , ; future(..., label = NULL) ... done
[08:08:07.156] | : . ' , ; future(..., label = NULL) ...
[08:08:07.156] | : . ' , ; ` lazy: FALSE
[08:08:07.156] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.156] | : . ' , ; ` stdout: TRUE
[08:08:07.156] | : . ' , ; ` | : . ' , Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:07.157] | : . ' , ; ` conditions: [n=1] ‘condition’
[08:08:07.157] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.157] | : . ' , ; ` gc: FALSE
[08:08:07.157] | : . ' , ; ` earlySignal: FALSE
[08:08:07.157] | : . ' , ; ` | : . ' plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:07.157] | : . ' , ; ` getGlobalsAndPackages() ...
[08:08:07.157] | : . ' , ; ` | : . ' , plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:07.157] | : . ' , ; ` | Searching for globals ...
[08:08:07.158] | : . ' , ; ` | : . ' , ; all.equal() for FutureStrategyList ...
[08:08:07.158] | : . ' , ; ` | : . ' , ; ` New stack:
[08:08:07.158] | : . ' , ; ` | : . ' , ; ` List of 1
[08:08:07.158] | : . ' , ; ` | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.158] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.158] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:07.158] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.158] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.158] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.158] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.158] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.162] | : . ' , ; ` | : . ' , ; ` Old stack:
[08:08:07.162] | : . ' , ; ` | : . ' , ; ` List of 1
[08:08:07.162] | : . ' , ; ` | : . ' , ; `  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.162] | : . ' , ; ` | : . ' , ; `     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.162] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.162] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:08:07.162] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.162] | : . ' , ; ` | : . ' , ; `     ...)  
[08:08:07.162] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.162] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.162] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategy)
[08:08:07.162] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.162] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.162] | : . ' , ; ` | : . ' , ; `     ...)  
[08:08:07.162] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.162] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.167] | : . ' , ; ` | : . ' , ; ` Not identical
[08:08:07.167] | : . ' , ; ` | : . ' , ; ` all.equal() for future ...
[08:08:07.167] | : . ' , ; ` | : . ' , ; ` | List of 2
[08:08:07.167] | : . ' , ; ` | : . ' , ; ` |  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.167] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.167] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:07.167] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.167] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.167] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.167] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.167] | : . ' , ; ` | : . ' , ; ` |  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.167] | : . ' , ; ` | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.167] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.167] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:07.167] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.167] | : . ' , ; ` | : . ' , ; ` |     ...)  
[08:08:07.167] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.167] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.167] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:07.167] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.167] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.167] | : . ' , ; ` | : . ' , ; ` |     ...)  
[08:08:07.167] | : . ' , ; ` | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.177] | : . ' , ; ` | : . ' , ; ` | Formals differ
[08:08:07.177] | : . ' , ; ` | : . ' , ; ` all.equal() for future ... done
[08:08:07.177] | : . ' , ; ` | : . ' , ; ` Future strategies differ at level 1
[08:08:07.177] | : . ' , ; ` | : . ' , ; all.equal() for FutureStrategyList ... done
[08:08:07.177] | : . ' , ; ` | : . ' , ; plan(): Setting new future backend stack:
[08:08:07.177] | : . ' , ; ` | : . ' , ; List of future strategies:
[08:08:07.177] | : . ' , ; ` | : . ' , ; 1. sequential:
[08:08:07.177] | : . ' , ; ` | : . ' , ;    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:07.177] | : . ' , ; ` | : . ' , ;    - tweaked: FALSE
[08:08:07.177] | : . ' , ; ` | : . ' , ;    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.180] | : . ' , ; ` | : globals found: [6] ‘{’, ‘if’, ‘==’, ‘%%’, ‘ii’, ‘stop’
[08:08:07.181] | : . ' , ; ` | Searching for globals ... done
[08:08:07.181] | : . ' , ; ` | Resolving globals: FALSE
[08:08:07.181] | : . ' , ; ` | Search for packages associated with the globals ...
[08:08:07.178] | : . ' , ; ` | : . ' , ; List of 1
[08:08:07.178] | : . ' , ; ` | : . ' , ;  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.178] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.178] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= logi TRUE
[08:08:07.178] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.178] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.178] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.178] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.178] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.181] | : . ' , ; ` | : Packages associated with globals: [1] ‘base’
[08:08:07.181] | : . ' , ; ` | : . ' , ; plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:07.181] | : . ' , ; ` | : . ' , ; plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:07.182] | : . ' , ; ` | : Packages: [1] ‘base’
[08:08:07.182] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.182] | : . ' , ; ` | Search for packages associated with the globals ... done
[08:08:07.182] | : . ' , ; ` | : . ' , ; ` plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:07.182] | : . ' , ; ` | Packages after dropping 'base': [0] 
[08:08:07.182] | : . ' , ; ` | globals: [1] ‘ii’
[08:08:07.182] | : . ' , ; ` | packages: [0] 
[08:08:07.182] | : . ' , ; ` getGlobalsAndPackages() ... done
[08:08:07.183] | : . ' , ; ` run() for ‘Future’ (<unnamed-18>) ...
[08:08:07.183] | : . ' , ; ` | state: ‘created’
[08:08:07.183] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.183] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.183] | : . ' , ; ` | Using MulticoreFutureBackend ...
[08:08:07.183] | : . ' , ; ` | : Number of futures since start: 4 (4 created, 4 launched, 3 finished)
[08:08:07.183] | : . ' , ; ` | : Launching futures ...
[08:08:07.183] | : . ' , ; ` | : . launchFuture() for MulticoreFutureBackend ...
[08:08:07.184] | : . ' , ; ` | : . ' getFutureData() ...
[08:08:07.184] | : . ' , ; ` | : . ' , getFutureCore() ...
[08:08:07.182] | : . ' , ; ` | : . ' , ; ` | function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.182] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.182] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "init")= logi TRUE
[08:08:07.182] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.182] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.182] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.182] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.184] | : . ' , ; ` | : . ' , ; Packages needed by the future expression (n = 0): <none>
[08:08:07.184] | : . ' , ; ` | : . ' , ; ` | init: TRUE
[08:08:07.184] | : . ' , ; ` | : . ' , getFutureCore() ... done
[08:08:07.184] | : . ' , ; ` | : . ' , getFutureCapture() ...
[08:08:07.184] | : . ' , ; ` | : . ' , ; ` | makeFutureBackend(<sequential>) ...
[08:08:07.184] | : . ' , ; ` | : . ' , getFutureCapture() ... done
[08:08:07.184] | : . ' , ; ` | : . ' , ; ` | : Backend function: <‘NULL’>
[08:08:07.184] | : . ' , ; ` | : . ' , getFutureContext() ...
[08:08:07.184] | : . ' , ; ` | : . ' , ; ` | : Evaluator tweak arguments: [n=0]
[08:08:07.184] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.184] | : . ' , ; ` | : . ' , ; ` | :  list()
[08:08:07.184] | : . ' , ; ` | : . ' , ; ` Getting stack without first backend: [n=0] 
[08:08:07.185] | : . ' , ; ` | : . ' , ; ` | : Evaluator formal arguments: [n=2]
[08:08:07.185] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.185] | : . ' , ; ` | : . ' , ; Packages needed by future backend (n = 0): <none>
[08:08:07.185] | : . ' , ; ` | : . ' , ; ` | :  list()
[08:08:07.185] | : . ' , ; ` | : . ' , getFutureContext() ... done
[08:08:07.185] | : . ' , ; ` | : . ' , ; ` | : Backend factory arguments: [n=2]
[08:08:07.185] | : . ' , ; ` | : . ' getFutureData() ... done
[08:08:07.185] | : . ' , ; ` | : . ' requestCore(..., workers = 2) ...
[08:08:07.186] | : . ' , ; ` | : . ' requestCore(..., workers = 2) ... done
[08:08:07.185] | : . ' , ; ` | : . ' , ; ` | : Dotted pair list of 2
[08:08:07.185] | : . ' , ; ` | : . ' , ; ` | :  $ gc         : logi FALSE
[08:08:07.185] | : . ' , ; ` | : . ' , ; ` | :  $ earlySignal: logi FALSE
[08:08:07.186] | : . ' , ; ` | : . ' , ; ` | : Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:07.186] | : . ' , ; ` | : . ' , ; ` | makeFutureBackend(<sequential>) ... done
[08:08:07.186] | : . ' , ; ` | : . ' , ; ` plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:07.187] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.187] | : . ' , ; ` | : . ' , ; plan(): nbrOfWorkers() = 1
[08:08:07.187] | : . ' , ; ` | : . ' , plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:07.187] | : . ' , ; ` | : . ' plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.187] | : . ' , ; ` | : . ' assign_globals() ...
[08:08:07.188] | : . ' , ; ` | : . ' MulticoreFuture started
[08:08:07.189] | : . ' , ; ` | : . launchFuture() for MulticoreFutureBackend ... done
[08:08:07.189] | : . ' , ; ` | : Launching futures ... done
[08:08:07.189] | : . ' , ; ` | : Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:07.187] | : . ' , ; ` | : . ' List of 1
[08:08:07.187] | : . ' , ; ` | : . '  $ ii: int 1
[08:08:07.187] | : . ' , ; ` | : . '  - attr(*, "where")=List of 1
[08:08:07.187] | : . ' , ; ` | : . '   ..$ ii:<environment: R_GlobalEnv> 
[08:08:07.187] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:07.187] | : . ' , ; ` | : . '  - attr(*, "resolved")= logi FALSE
[08:08:07.187] | : . ' , ; ` | : . '  - attr(*, "total_size")= num NA
[08:08:07.187] | : . ' , ; ` | : . '  - attr(*, "already-done")= logi TRUE
[08:08:07.190] | : . ' , ; ` | Using MulticoreFutureBackend ... done
[08:08:07.190] | : . ' , ; ` | : . ' - copied ‘ii’ to environment
[08:08:07.190] | : . ' , ; ` | : . ' assign_globals() ... done
[08:08:07.190] | : . ' , ; ` run() for ‘Future’ (<unnamed-18>) ... done
[08:08:07.190] | : . ' , ; future(..., label = NULL) ... done
[08:08:07.192] | : . ' , ; future(..., label = NULL) ...
[08:08:07.192] | : . ' , ; ` | : . ' plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:07.192] | : . ' , ; ` lazy: FALSE
[08:08:07.192] | : . ' , ; ` | : . ' , plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:07.193] | : . ' , ; ` | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:07.192] | : . ' , ; ` stdout: TRUE
[08:08:07.193] | : . ' , ; ` | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:07.193] | : . ' , ; ` | : . ' , ; ` | New stack:
[08:08:07.193] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.193] | : . ' , ; ` conditions: [n=1] ‘condition’
[08:08:07.193] | : . ' , ; ` gc: FALSE
[08:08:07.193] | : . ' , ; ` | : . ' , Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:07.193] | : . ' , ; ` earlySignal: FALSE
[08:08:07.193] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.194] | : . ' , ; ` getGlobalsAndPackages() ...
[08:08:07.194] | : . ' , ; ` | Searching for globals ...
[08:08:07.194] | : . ' , ; ` | : . ' plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:07.194] | : . ' , ; ` | : . ' , plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:07.195] | : . ' , ; ` | : . ' , ; all.equal() for FutureStrategyList ...
[08:08:07.195] | : . ' , ; ` | : . ' , ; ` New stack:
[08:08:07.193] | : . ' , ; ` | : . ' , ; ` | List of 1
[08:08:07.193] | : . ' , ; ` | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.193] | : . ' , ; ` | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.193] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.193] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:07.193] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.193] | : . ' , ; ` | : . ' , ; ` |     ...)  
[08:08:07.193] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.193] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.193] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:07.193] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.193] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.193] | : . ' , ; ` | : . ' , ; ` |     ...)  
[08:08:07.193] | : . ' , ; ` | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.193] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.199] | : . ' , ; ` | : . ' , ; ` | Old stack:
[08:08:07.195] | : . ' , ; ` | : . ' , ; ` List of 1
[08:08:07.195] | : . ' , ; ` | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.195] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.195] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:07.195] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.195] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.195] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.195] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.195] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.202] | : . ' , ; ` | : . ' , ; ` Old stack:
[08:08:07.199] | : . ' , ; ` | : . ' , ; ` | List of 1
[08:08:07.199] | : . ' , ; ` | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.199] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.199] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:07.199] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.199] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.199] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.199] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.199] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f902bc6920> 
[08:08:07.199] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.199] | : . ' , ; ` | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.199] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.203] | : . ' , ; ` | : . ' , ; ` | Not identical
[08:08:07.203] | : . ' , ; ` | : . ' , ; ` | all.equal() for future ...
[08:08:07.203] | : . ' , ; ` | : . ' , ; ` | : List of 2
[08:08:07.203] | : . ' , ; ` | : . ' , ; ` | :  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.203] | : . ' , ; ` | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.203] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.203] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:07.203] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.203] | : . ' , ; ` | : . ' , ; ` | :     ...)  
[08:08:07.203] | : . ' , ; ` | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.203] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.203] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:07.203] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.203] | : . ' , ; ` | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.203] | : . ' , ; ` | : . ' , ; ` | :     ...)  
[08:08:07.203] | : . ' , ; ` | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.203] | : . ' , ; ` | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.203] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.203] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:07.203] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.203] | : . ' , ; ` | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.203] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.203] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.203] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f902bc6920> 
[08:08:07.203] | : . ' , ; ` | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.203] | : . ' , ; ` | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.209] | : . ' , ; ` | : . ' , ; ` | : Formals differ
[08:08:07.209] | : . ' , ; ` | : . ' , ; ` | all.equal() for future ... done
[08:08:07.202] | : . ' , ; ` | : . ' , ; ` List of 1
[08:08:07.202] | : . ' , ; ` | : . ' , ; `  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.202] | : . ' , ; ` | : . ' , ; `     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.202] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.202] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:08:07.202] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.202] | : . ' , ; ` | : . ' , ; `     ...)  
[08:08:07.202] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.202] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.202] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategy)
[08:08:07.202] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.202] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.202] | : . ' , ; ` | : . ' , ; `     ...)  
[08:08:07.202] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.202] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.209] | : . ' , ; ` | : . ' , ; ` | Future strategies differ at level 1
[08:08:07.209] | : . ' , ; ` | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:07.209] | : . ' , ; ` | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:07.209] | : . ' , ; ` | : . ' , ; ` Not identical
[08:08:07.210] | : . ' , ; ` | : . ' , ; ` all.equal() for future ...
[08:08:07.210] | : . ' , ; ` | : . ' , ; ` List of future strategies:
[08:08:07.210] | : . ' , ; ` | : . ' , ; ` 1. multicore:
[08:08:07.210] | : . ' , ; ` | : . ' , ; `    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:07.210] | : . ' , ; ` | : . ' , ; `    - tweaked: FALSE
[08:08:07.210] | : . ' , ; ` | : . ' , ; `    - call: plan(strategy)
[08:08:07.210] | : . ' , ; ` | : . ' , ; ` List of 1
[08:08:07.210] | : . ' , ; ` | : . ' , ; `  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.210] | : . ' , ; ` | : . ' , ; `     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.210] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.210] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:08:07.210] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.210] | : . ' , ; ` | : . ' , ; `     ...)  
[08:08:07.210] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.210] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.210] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategy)
[08:08:07.210] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.210] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.210] | : . ' , ; ` | : . ' , ; `     ...)  
[08:08:07.210] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.210] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.213] | : . ' , ; ` | : . ' , ; ` plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:07.213] | : . ' , ; ` | : . ' , ; ` plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:07.214] | : . ' , ; ` | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.214] | : . ' , ; ` | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.214] | : . ' , ; ` | : . ' , ; ` plan(): nbrOfWorkers() = 2
[08:08:07.214] | : . ' , ; ` | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:07.214] | : . ' , ; ` | : . ' , plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.214] | : . ' , ; ` | : . ' plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.210] | : . ' , ; ` | : . ' , ; ` | List of 2
[08:08:07.210] | : . ' , ; ` | : . ' , ; ` |  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.210] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.210] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:07.210] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.210] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.210] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.210] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.210] | : . ' , ; ` | : . ' , ; ` |  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.210] | : . ' , ; ` | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.210] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.210] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:07.210] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.210] | : . ' , ; ` | : . ' , ; ` |     ...)  
[08:08:07.210] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.210] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.210] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:07.210] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.210] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.210] | : . ' , ; ` | : . ' , ; ` |     ...)  
[08:08:07.210] | : . ' , ; ` | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.226] | : . ' , ; ` | : . ' , ; ` | Formals differ
[08:08:07.227] | : . ' , ; ` | : . ' , ; ` all.equal() for future ... done
[08:08:07.227] | : . ' , ; ` | : . ' , ; ` Future strategies differ at level 1
[08:08:07.227] | : . ' , ; ` | : . ' , ; all.equal() for FutureStrategyList ... done
[08:08:07.227] | : . ' , ; ` | : . ' , ; plan(): Setting new future backend stack:
[08:08:07.227] | : . ' , ; ` | : . ' , ; List of future strategies:
[08:08:07.227] | : . ' , ; ` | : . ' , ; 1. sequential:
[08:08:07.227] | : . ' , ; ` | : . ' , ;    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:07.227] | : . ' , ; ` | : . ' , ;    - tweaked: FALSE
[08:08:07.227] | : . ' , ; ` | : . ' , ;    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.232] | : . ' , ; ` | : globals found: [6] ‘{’, ‘if’, ‘==’, ‘%%’, ‘ii’, ‘stop’
[08:08:07.232] | : . ' , ; ` | Searching for globals ... done
[08:08:07.228] | : . ' , ; ` | : . ' , ; List of 1
[08:08:07.228] | : . ' , ; ` | : . ' , ;  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.228] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.228] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= logi TRUE
[08:08:07.228] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.228] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.228] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.228] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.228] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.232] | : . ' , ; ` | Resolving globals: FALSE
[08:08:07.232] | : . ' , ; ` | : . ' , ; plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:07.232] | : . ' , ; ` | Search for packages associated with the globals ...
[08:08:07.233] | : . ' , ; ` | : . ' , ; plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:07.233] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.233] | : . ' , ; ` | : Packages associated with globals: [1] ‘base’
[08:08:07.233] | : . ' , ; ` | : . ' , ; ` plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:07.233] | : . ' , ; ` | : Packages: [1] ‘base’
[08:08:07.233] | : . ' , ; ` | Search for packages associated with the globals ... done
[08:08:07.234] | : . ' , ; ` | Packages after dropping 'base': [0] 
[08:08:07.234] | : . ' , ; ` | globals: [1] ‘ii’
[08:08:07.234] | : . ' , ; ` | packages: [0] 
[08:08:07.234] | : . ' , ; ` getGlobalsAndPackages() ... done
[08:08:07.234] | : . ' , ; ` run() for ‘Future’ (<unnamed-19>) ...
[08:08:07.234] | : . ' , ; ` | state: ‘created’
[08:08:07.235] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.235] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.235] | : . ' , ; ` | Using MulticoreFutureBackend ...
[08:08:07.235] | : . ' , ; ` | : Number of futures since start: 5 (5 created, 5 launched, 3 finished)
[08:08:07.233] | : . ' , ; ` | : . ' , ; ` | function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.233] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.233] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "init")= logi TRUE
[08:08:07.233] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.233] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.233] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.233] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.235] | : . ' , ; ` | : Launching futures ...
[08:08:07.235] | : . ' , ; ` | : . ' , ; ` | init: TRUE
[08:08:07.235] | : . ' , ; ` | : . ' , ; ` | makeFutureBackend(<sequential>) ...
[08:08:07.235] | : . ' , ; ` | : . launchFuture() for MulticoreFutureBackend ...
[08:08:07.235] | : . ' , ; ` | : . ' , ; ` | : Backend function: <‘NULL’>
[08:08:07.235] | : . ' , ; ` | : . ' getFutureData() ...
[08:08:07.236] | : . ' , ; ` | : . ' , ; ` | : Evaluator tweak arguments: [n=0]
[08:08:07.236] | : . ' , ; ` | : . ' , getFutureCore() ...
[08:08:07.236] | : . ' , ; ` | : . ' , ; Packages needed by the future expression (n = 0): <none>
[08:08:07.236] | : . ' , ; ` | : . ' , getFutureCore() ... done
[08:08:07.236] | : . ' , ; ` | : . ' , ; ` | :  list()
[08:08:07.236] | : . ' , ; ` | : . ' , getFutureCapture() ...
[08:08:07.236] | : . ' , ; ` | : . ' , ; ` | : Evaluator formal arguments: [n=2]
[08:08:07.236] | : . ' , ; ` | : . ' , getFutureCapture() ... done
[08:08:07.236] | : . ' , ; ` | : . ' , getFutureContext() ...
[08:08:07.236] | : . ' , ; ` | : . ' , ; ` | :  list()
[08:08:07.236] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.236] | : . ' , ; ` | : . ' , ; ` | : Backend factory arguments: [n=2]
[08:08:07.236] | : . ' , ; ` | : . ' , ; ` Getting stack without first backend: [n=0] 
[08:08:07.236] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.237] | : . ' , ; ` | : . ' , ; Packages needed by future backend (n = 0): <none>
[08:08:07.237] | : . ' , ; ` | : . ' , getFutureContext() ... done
[08:08:07.237] | : . ' , ; ` | : . ' getFutureData() ... done
[08:08:07.237] | : . ' , ; ` | : . ' requestCore(..., workers = 2) ...
[08:08:07.236] | : . ' , ; ` | : . ' , ; ` | : Dotted pair list of 2
[08:08:07.236] | : . ' , ; ` | : . ' , ; ` | :  $ gc         : logi FALSE
[08:08:07.236] | : . ' , ; ` | : . ' , ; ` | :  $ earlySignal: logi FALSE
[08:08:07.238] | : . ' , ; ` | : . ' , Poll #1 (0): usedCores() = 2, workers = 2
[08:08:07.238] | : . ' , ; ` | : . ' , ; ` | : Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:07.238] | : . ' , ; ` | : . ' , ; ` | makeFutureBackend(<sequential>) ... done
[08:08:07.238] | : . ' , ; ` | : . ' , ; ` plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:07.238] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.238] | : . ' , ; ` | : . ' , ; plan(): nbrOfWorkers() = 1
[08:08:07.238] | : . ' , ; ` | : . ' , plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:07.238] | : . ' , ; ` | : . ' plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.239] | : . ' , ; ` | : . ' assign_globals() ...
[08:08:07.239] | : . ' , ; ` | : . ' List of 1
[08:08:07.239] | : . ' , ; ` | : . '  $ ii: int 2
[08:08:07.239] | : . ' , ; ` | : . '  - attr(*, "where")=List of 1
[08:08:07.239] | : . ' , ; ` | : . '   ..$ ii:<environment: R_GlobalEnv> 
[08:08:07.239] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:07.239] | : . ' , ; ` | : . '  - attr(*, "resolved")= logi FALSE
[08:08:07.239] | : . ' , ; ` | : . '  - attr(*, "total_size")= num NA
[08:08:07.239] | : . ' , ; ` | : . '  - attr(*, "already-done")= logi TRUE
[08:08:07.243] | : . ' , ; ` | : . ' - copied ‘ii’ to environment
[08:08:07.243] | : . ' , ; ` | : . ' assign_globals() ... done
[08:08:07.246] | : . ' , ; ` | : . ' plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:07.246] | : . ' , ; ` | : . ' , plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:07.246] | : . ' , ; ` | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:07.246] | : . ' , ; ` | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:07.246] | : . ' , ; ` | : . ' , ; ` | New stack:
[08:08:07.248] | : . ' , ; ` | : . ' , readImmediateCondition() ...
[08:08:07.248] | : . ' , ; ` | : . ' , ; Path: ‘/tmp/RtmpohK6N2/.future/immediateConditions’
[08:08:07.249] | : . ' , ; ` | : . ' , ; Number of RDS files: 0
[08:08:07.249] | : . ' , ; ` | : . ' , ; Returned conditions set:
[08:08:07.249] | : . ' , ; ` | : . ' , ;  list()
[08:08:07.249] | : . ' , ; ` | : . ' , readImmediateCondition() ... done
[08:08:07.249] | : . ' , ; ` | : . ' , value() for MulticoreFuture (<unnamed-17>) ...
[08:08:07.246] | : . ' , ; ` | : . ' , ; ` | List of 1
[08:08:07.246] | : . ' , ; ` | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.246] | : . ' , ; ` | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.246] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.246] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:07.246] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.246] | : . ' , ; ` | : . ' , ; ` |     ...)  
[08:08:07.246] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.246] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.246] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:07.246] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.246] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.246] | : . ' , ; ` | : . ' , ; ` |     ...)  
[08:08:07.246] | : . ' , ; ` | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.246] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.250] | : . ' , ; ` | : . ' , ; result() for MulticoreFuture ...
[08:08:07.250] | : . ' , ; ` | : . ' , ; ` | Old stack:
[08:08:07.250] | : . ' , ; ` | : . ' , ; ` readImmediateCondition() ...
[08:08:07.250] | : . ' , ; ` | : . ' , ; ` | Path: ‘/tmp/RtmpohK6N2/.future/immediateConditions’
[08:08:07.251] | : . ' , ; ` | : . ' , ; ` | Number of RDS files: 0
[08:08:07.251] | : . ' , ; ` | : . ' , ; ` | Returned conditions set:
[08:08:07.251] | : . ' , ; ` | : . ' , ; ` |  list()
[08:08:07.251] | : . ' , ; ` | : . ' , ; ` readImmediateCondition() ... done
[08:08:07.251] | : . ' , ; ` | : . ' , ; ` result() for MulticoreFuture ...
[08:08:07.252] | : . ' , ; ` | : . ' , ; ` result() for MulticoreFuture ... done
[08:08:07.252] | : . ' , ; ` | : . ' , ; ` signalConditions() ...
[08:08:07.252] | : . ' , ; ` | : . ' , ; ` | include = ‘immediateCondition’
[08:08:07.252] | : . ' , ; ` | : . ' , ; ` | exclude = 
[08:08:07.252] | : . ' , ; ` | : . ' , ; ` | resignal = FALSE
[08:08:07.252] | : . ' , ; ` | : . ' , ; ` | Number of conditions: 6
[08:08:07.252] | : . ' , ; ` | : . ' , ; ` |  int 6
[08:08:07.253] | : . ' , ; ` | : . ' , ; ` | Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.253] | : . ' , ; ` | : . ' , ; ` | Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.253] | : . ' , ; ` | : . ' , ; ` | Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.253] | : . ' , ; ` | : . ' , ; ` | Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.253] | : . ' , ; ` | : . ' , ; ` | Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.253] | : . ' , ; ` | : . ' , ; ` | Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.250] | : . ' , ; ` | : . ' , ; ` | List of 1
[08:08:07.250] | : . ' , ; ` | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.250] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.250] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:07.250] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.250] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.250] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.250] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.250] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f904113538> 
[08:08:07.250] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.250] | : . ' , ; ` | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.250] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.254] | : . ' , ; ` | : . ' , ; ` | Not identical
[08:08:07.255] | : . ' , ; ` | : . ' , ; ` | all.equal() for future ...
[08:08:07.253] | : . ' , ; ` | : . ' , ; ` signalConditions() ... done
[08:08:07.255] | : . ' , ; ` | : . ' , ; result() for MulticoreFuture ... done
[08:08:07.255] | : . ' , ; ` | : . ' , ; result() for MulticoreFuture ...
[08:08:07.255] | : . ' , ; ` | : . ' , ; result() for MulticoreFuture ... done
[08:08:07.256] | : . ' , ; ` | : . ' , ; signalConditions() ...
[08:08:07.256] | : . ' , ; ` | : . ' , ; ` include = ‘immediateCondition’
[08:08:07.256] | : . ' , ; ` | : . ' , ; ` exclude = 
[08:08:07.256] | : . ' , ; ` | : . ' , ; ` resignal = FALSE
[08:08:07.256] | : . ' , ; ` | : . ' , ; ` Number of conditions: 6
[08:08:07.256] | : . ' , ; ` | : . ' , ; `  int 6
[08:08:07.257] | : . ' , ; ` | : . ' , ; ` Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.257] | : . ' , ; ` | : . ' , ; ` Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.257] | : . ' , ; ` | : . ' , ; ` Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.257] | : . ' , ; ` | : . ' , ; ` Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.257] | : . ' , ; ` | : . ' , ; ` Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.257] | : . ' , ; ` | : . ' , ; ` Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.258] | : . ' , ; ` | : . ' , ; signalConditions() ... done
[08:08:07.258] | : . ' , ; ` | : . ' , ; check for misuse ...
[08:08:07.258] | : . ' , ; ` | : . ' , ; check for misuse ... done
[08:08:07.258] | : . ' , ; ` | : . ' , value() for MulticoreFuture (<unnamed-17>) ... done
[08:08:07.259] | : . ' , ; ` | : . ' requestCore(..., workers = 2) ... done
[08:08:07.255] | : . ' , ; ` | : . ' , ; ` | : List of 2
[08:08:07.255] | : . ' , ; ` | : . ' , ; ` | :  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.255] | : . ' , ; ` | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.255] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.255] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:07.255] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.255] | : . ' , ; ` | : . ' , ; ` | :     ...)  
[08:08:07.255] | : . ' , ; ` | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.255] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.255] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:07.255] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.255] | : . ' , ; ` | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.255] | : . ' , ; ` | : . ' , ; ` | :     ...)  
[08:08:07.255] | : . ' , ; ` | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.255] | : . ' , ; ` | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.255] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.255] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:07.255] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.255] | : . ' , ; ` | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.255] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.255] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.255] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f904113538> 
[08:08:07.255] | : . ' , ; ` | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.255] | : . ' , ; ` | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.261] | : . ' , ; ` | : . ' , ; ` | : Formals differ
[08:08:07.261] | : . ' , ; ` | : . ' , ; ` | all.equal() for future ... done
[08:08:07.261] | : . ' , ; ` | : . ' , ; ` | Future strategies differ at level 1
[08:08:07.261] | : . ' , ; ` | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:07.261] | : . ' , ; ` | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:07.261] | : . ' , ; ` | : . ' MulticoreFuture started
[08:08:07.262] | : . ' , ; ` | : . launchFuture() for MulticoreFutureBackend ... done
[08:08:07.262] | : . ' , ; ` | : Launching futures ... done
[08:08:07.263] | : . ' , ; ` | : Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:07.263] | : . ' , ; ` | : . ' , ; ` List of future strategies:
[08:08:07.263] | : . ' , ; ` | : . ' , ; ` 1. multicore:
[08:08:07.263] | : . ' , ; ` | : . ' , ; `    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:07.263] | : . ' , ; ` | : . ' , ; `    - tweaked: FALSE
[08:08:07.263] | : . ' , ; ` | : . ' , ; `    - call: plan(strategy)
[08:08:07.263] | : . ' , ; ` | Using MulticoreFutureBackend ... done
[08:08:07.264] | : . ' , ; ` run() for ‘Future’ (<unnamed-19>) ... done
[08:08:07.264] | : . ' , ; future(..., label = NULL) ... done
[08:08:07.265] | : . ' , ; value() for MulticoreFuture (<unnamed-17>) ...
[08:08:07.266] | : . ' , ; ` result() for MulticoreFuture ...
[08:08:07.266] | : . ' , ; ` result() for MulticoreFuture ... done
[08:08:07.267] | : . ' , ; ` result() for MulticoreFuture ...
[08:08:07.267] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.263] | : . ' , ; ` | : . ' , ; ` List of 1
[08:08:07.263] | : . ' , ; ` | : . ' , ; `  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.263] | : . ' , ; ` | : . ' , ; `     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.263] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.263] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:08:07.263] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.263] | : . ' , ; ` | : . ' , ; `     ...)  
[08:08:07.263] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.263] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.263] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategy)
[08:08:07.263] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.263] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.263] | : . ' , ; ` | : . ' , ; `     ...)  
[08:08:07.263] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.263] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.267] | : . ' , ; ` result() for MulticoreFuture ... done
[08:08:07.267] | : . ' , ; ` | : . ' , ; ` plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:07.267] | : . ' , ; ` | : . ' , ; ` plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:07.267] | : . ' , ; ` | : . ' , Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:07.267] | : . ' , ; ` signalConditions() ...
[08:08:07.268] | : . ' , ; ` | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.268] | : . ' , ; ` | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.268] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.268] | : . ' , ; ` | include = ‘immediateCondition’
[08:08:07.268] | : . ' , ; ` | : . ' , ; ` plan(): nbrOfWorkers() = 2
[08:08:07.268] | : . ' , ; ` | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:07.268] | : . ' , ; ` | : . ' , plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.268] | : . ' , ; ` | exclude = 
[08:08:07.268] | : . ' , ; ` | : . ' plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:07.268] | : . ' , ; ` | : . ' plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.268] | : . ' , ; ` | resignal = FALSE
[08:08:07.269] | : . ' , ; ` | : . ' , plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:07.269] | : . ' , ; ` | Number of conditions: 6
[08:08:07.269] | : . ' , ; ` | : . ' , ; all.equal() for FutureStrategyList ...
[08:08:07.269] | : . ' , ; ` | : . ' , ; ` New stack:
[08:08:07.269] | : . ' , ; ` |  int 6
[08:08:07.270] | : . ' , ; ` | Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.271] | : . ' , ; ` | Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.271] | : . ' , ; ` | Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.271] | : . ' , ; ` | Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.271] | : . ' , ; ` | Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.272] | : . ' , ; ` | Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.272] | : . ' , ; ` signalConditions() ... done
[08:08:07.272] | : . ' , ; ` relay stdout ...
[08:08:07.272] | : . ' , ; ` relay stdout ... done
[08:08:07.273] | : . ' , ; ` check for misuse ...
[08:08:07.273] | : . ' , ; ` check for misuse ... done
[08:08:07.273] | : . ' , ; ` relay conditions ...
[08:08:07.273] | : . ' , ; ` | Future state: ‘finished’
[08:08:07.274] | : . ' , ; ` | result() for MulticoreFuture ...
[08:08:07.274] | : . ' , ; ` | result() for MulticoreFuture ... done
[08:08:07.274] | : . ' , ; ` | signalConditions() ...
[08:08:07.274] | : . ' , ; ` | : include = ‘condition’
[08:08:07.275] | : . ' , ; ` | : exclude = ‘immediateCondition’
[08:08:07.275] | : . ' , ; ` | : resignal = TRUE
[08:08:07.275] | : . ' , ; ` | : Number of conditions: 6
[08:08:07.269] | : . ' , ; ` | : . ' , ; ` List of 1
[08:08:07.269] | : . ' , ; ` | : . ' , ; `  $ :function (..., gc = FALSE, e[08:08:07.275] | : . ' , ; ` | :  int 6
arlySignal = FALSE, envir = parent.frame())  
[08:08:07.269] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.269] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:07.269] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.269] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.269] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.269] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.269] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.276] | : . ' , ; ` | : . ' , ; ` Old stack:
[08:08:07.276] | : . ' , ; ` | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.276] | : . ' , ; ` | : Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.153] | : . ' , ; ` | : . ' attachPackages() ...
[08:08:07.277] | : . ' , ; ` | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.277] | : . ' , ; ` | : Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.154] | : . ' , ; ` | : . ' , packages: [n=1] ‘future’
[08:08:07.277] | : . ' , ; ` | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.277] | : . ' , ; ` | : Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.155] | : . ' , ; ` | : . ' attachPackages() ... done
[08:08:07.278] | : . ' , ; ` | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.278] | : . ' , ; ` | : Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.155] | : . ' , ; ` | : . ' attachPackages() ...
[08:08:07.278] | : . ' , ; ` | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.279] | : . ' , ; ` | : Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.155] | : . ' , ; ` | : . ' , packages: [n=0] 
[08:08:07.279] | : . ' , ; ` | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.279] | : . ' , ; ` | : Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.155] | : . ' , ; ` | : . ' attachPackages() ... done
[08:08:07.279] | : . ' , ; ` | signalConditions() ... done
[08:08:07.280] | : . ' , ; ` relay conditions ... done
[08:08:07.280] | : . ' , ; value() for MulticoreFuture (<unnamed-17>) ... done
[08:08:07.280] | : . ' , ; value() for MulticoreFuture (<unnamed-18>) ...
[08:08:07.280] | : . ' , ; ` result() for MulticoreFuture ...
[08:08:07.282] | : . ' , ; ` | readImmediateCondition() ...
[08:08:07.282] | : . ' , ; ` | : Path: ‘/tmp/RtmpohK6N2/.future/immediateConditions’
[08:08:07.282] | : . ' , ; ` | : Number of RDS files: 0
[08:08:07.282] | : . ' , ; ` | : Returned conditions set:
[08:08:07.283] | : . ' , ; ` | :  list()
[08:08:07.283] | : . ' , ; ` | readImmediateCondition() ... done
[08:08:07.284] | : . ' , ; ` | result() for MulticoreFuture ...
[08:08:07.276] | : . ' , ; ` | : . ' , ; ` List of 1
[08:08:07.276] | : . ' , ; ` | : . ' , ; `  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.276] | : . ' , ; ` | : . ' , ; `     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.276] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.276] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:08:07.276] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.276] | : . ' , ; ` | : . ' , ; `     ...)  
[08:08:07.276] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.276] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.276] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategy)
[08:08:07.276] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.276] | [08:08:07.284] | : . ' , ; ` | result() for MulticoreFuture ... done
: . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.276] | : . ' , ; ` | : . ' , ; `     ...)  
[08:08:07.276] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.276] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.284] | : . ' , ; ` | signalConditions() ...
[08:08:07.284] | : . ' , ; ` | : . ' , ; ` Not identical
[08:08:07.284] | : . ' , ; ` | : include = ‘immediateCondition’
[08:08:07.284] | : . ' , ; ` | : . ' , ; ` all.equal() for future ...
[08:08:07.284] | : . ' , ; ` | : exclude = 
[08:08:07.285] | : . ' , ; ` | : resignal = FALSE
[08:08:07.285] | : . ' , ; ` | : Number of conditions: 7
[08:08:07.285] | : . ' , ; ` | :  int 7
[08:08:07.286] | : . ' , ; ` | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.286] | : . ' , ; ` | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.286] | : . ' , ; ` | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.287] | : . ' , ; ` | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.287] | : . ' , ; ` | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.287] | : . ' , ; ` | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.287] | : . ' , ; ` | : Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:07.288] | : . ' , ; ` | signalConditions() ... done
[08:08:07.288] | : . ' , ; ` result() for MulticoreFuture ... done
[08:08:07.288] | : . ' , ; ` result() for MulticoreFuture ...
[08:08:07.288] | : . ' , ; ` result() for MulticoreFuture ... done
[08:08:07.288] | : . ' , ; ` signalConditions() ...
[08:08:07.289] | : . ' , ; ` | include = ‘immediateCondition’
[08:08:07.289] | : . ' , ; ` | exclude = 
[08:08:07.289] | : . ' , ; ` | resignal = FALSE
[08:08:07.289] | : . ' , ; ` | Number of conditions: 7
[08:08:07.289] | : . ' , ; ` |  int 7
[08:08:07.290] | : . ' , ; ` | Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.290] | : . ' , ; ` | Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.291] | : . ' , ; ` | Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.291] | : . ' , ; ` | Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.291] | : . ' , ; ` | Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.291] | : . ' , ; ` | Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.291] | : . ' , ; ` | Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:07.292] | : . ' , ; ` signalConditions() ... done
[08:08:07.292] | : . ' , ; ` relay stdout ...
[08:08:07.292] | : . ' , ; ` relay stdout ... done
[08:08:07.292] | : . ' , ; ` check for misuse ...
[08:08:07.293] | : . ' , ; ` check for misuse ... done
[08:08:07.293] | : . ' , ; ` relay conditions ...
[08:08:07.293] | : . ' , ; ` | Future state: ‘finished’
[08:08:07.293] | : . ' , ; ` | result() for MulticoreFuture ...
[08:08:07.293] | : . ' , ; ` | result() for MulticoreFuture ... done
[08:08:07.294] | : . ' , ; ` | signalConditions() ...
[08:08:07.294] | : . ' , ; ` | : include = ‘condition’
[08:08:07.294] | : . ' , ; ` | : exclude = ‘immediateCondition’
[08:08:07.294] | : . ' , ; ` | : resignal = TRUE
[08:08:07.294] | : . ' , ; ` | : Number of conditions: 7
[08:08:07.295] | : . ' , ; ` | :  int 7
[08:08:07.295] | : . ' , ; ` | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.295] | : . ' , ; ` | : Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.189] | : . ' , ; ` | : . ' attachPackages() ...
[08:08:07.285] | : . ' , ; ` | : . ' , ; ` | List of 2
[08:08:07.285] | : . ' , ; ` | : . ' , ; ` |  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.285] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.285] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:07.285] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.285] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.285] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.285] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.285] | : . ' , ; ` | : . ' , ; ` |  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.285] | : . ' , ; ` | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.285] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.285] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:07.285] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.285] | : . ' , ; ` | : . ' , ; ` |     ...)  
[08:08:07.285] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.285] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.285] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:07.285] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.285] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.285] | : . ' , ; ` | : . ' , ; ` |     ...)  
[08:08:07.285] | : . ' , ; ` | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.296] | : . ' , ; ` | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.297] | : . ' , ; ` | : . ' , ; ` | Formals differ
[08:08:07.299] | : . ' , ; ` | : Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.190] | : . ' , ; ` | : . ' , packages: [n=1] ‘future’
[08:08:07.299] | : . ' , ; ` | : . ' , ; ` all.equal() for future ... done
[08:08:07.299] | : . ' , ; ` | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.299] | : . ' , ; ` | : . ' , ; ` Future strategies differ at level 1
[08:08:07.299] | : . ' , ; ` | : . ' , ; all.equal() for FutureStrategyList ... done
[08:08:07.299] | : . ' , ; ` | : Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.190] | : . ' , ; ` | : . ' attachPackages() ... done
[08:08:07.300] | : . ' , ; ` | : . ' , ; plan(): Setting new future backend stack:
[08:08:07.300] | : . ' , ; ` | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.300] | : . ' , ; ` | : Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.191] | : . ' , ; ` | : . ' attachPackages() ...
[08:08:07.300] | : . ' , ; ` | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.300] | : . ' , ; ` | : . ' , ; List of future strategies:
[08:08:07.300] | : . ' , ; ` | : . ' , ; 1. sequential:
[08:08:07.300] | : . ' , ; ` | : . ' , ;    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:07.300] | : . ' , ; ` | : . ' , ;    - tweaked: FALSE
[08:08:07.300] | : . ' , ; ` | : . ' , ;    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.301] | : . ' , ; ` | : Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.191] | : . ' , ; ` | : . ' , packages: [n=0] 
[08:08:07.301] | : . ' , ; ` | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.301] | : . ' , ; ` | : Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.191] | : . ' , ; ` | : . ' attachPackages() ... done
[08:08:07.302] | : . ' , ; ` | : Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:07.302] | : . ' , ; ` | : Condition #7: ‘simpleError’, ‘error’, ‘condition’
[08:08:07.302] | : . ' , ; ` | signalConditions() ... done
[08:08:07.302] | : . ' , ; ` relay conditions ... done
[08:08:07.303] | : . ' , ; ` value() for MulticoreFuture (<unnamed-19>) ...
[08:08:07.303] | : . ' , ; ` | result() for MulticoreFuture ...
[08:08:07.301] | : . ' , ; ` | : . ' , ; List of 1
[08:08:07.301] | : . ' , ; ` | : . ' , ;  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.301] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.301] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= logi TRUE
[08:08:07.301] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.301] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.301] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.301] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.301] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.306] | : . ' , ; ` | : . ' , ; plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:07.306] | : . ' , ; ` | : . ' , ; plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:07.306] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.306] | : . ' , ; ` | : . ' , ; ` plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:07.306] | : . ' , ; ` | : . ' , ; ` | function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.306] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.306] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "init")= logi TRUE
[08:08:07.306] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.306] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.306] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.306] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.308] | : . ' , ; ` | : . ' , ; ` | init: TRUE
[08:08:07.309] | : . ' , ; ` | : . ' , ; ` | makeFutureBackend(<sequential>) ...
[08:08:07.309] | : . ' , ; ` | : . ' , ; ` | : Backend function: <‘NULL’>
[08:08:07.309] | : . ' , ; ` | : . ' , ; ` | : Evaluator tweak arguments: [n=0]
[08:08:07.309] | : . ' , ; ` | : . ' , ; ` | :  list()
[08:08:07.309] | : . ' , ; ` | : . ' , ; ` | : Evaluator formal arguments: [n=2]
[08:08:07.309] | : . ' , ; ` | : . ' , ; ` | :  list()
[08:08:07.310] | : . ' , ; ` | : . ' , ; ` | : Backend factory arguments: [n=2]
[08:08:07.310] | : . ' , ; ` | : . ' , ; ` | : Dotted pair list of 2
[08:08:07.310] | : . ' , ; ` | : . ' , ; ` | :  $ gc         : logi FALSE
[08:08:07.310] | : . ' , ; ` | : . ' , ; ` | :  $ earlySignal: logi FALSE
[08:08:07.311] | : . ' , ; ` | : . ' , ; ` | : Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:07.311] | : . ' , ; ` | : . ' , ; ` | makeFutureBackend(<sequential>) ... done
[08:08:07.311] | : . ' , ; ` | : . ' , ; ` plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:07.311] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.311] | : . ' , ; ` | : . ' , ; plan(): nbrOfWorkers() = 1
[08:08:07.311] | : . ' , ; ` | : . ' , plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:07.312] | : . ' , ; ` | : . ' plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.312] | : . ' , ; ` | : . ' assign_globals() ...
[08:08:07.312] | : . ' , ; ` | : . ' List of 1
[08:08:07.312] | : . ' , ; ` | : . '  $ ii: int 3
[08:08:07.312] | : . ' , ; ` | : . '  - attr(*, "where")=List of 1
[08:08:07.312] | : . ' , ; ` | : . '   ..$ ii:<environment: R_GlobalEnv> 
[08:08:07.312] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:07.312] | : . ' , ; ` | : . '  - attr(*, "resolved")= logi FALSE
[08:08:07.312] | : . ' , ; ` | : . '  - attr(*, "total_size")= num NA
[08:08:07.312] | : . ' , ; ` | : . '  - attr(*, "already-done")= logi TRUE
[08:08:07.314] | : . ' , ; ` | : . ' - copied ‘ii’ to environment
[08:08:07.315] | : . ' , ; ` | : . ' assign_globals() ... done
[08:08:07.317] | : . ' , ; ` | : . ' plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:07.317] | : . ' , ; ` | : . ' , plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:07.317] | : . ' , ; ` | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:07.317] | : . ' , ; ` | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:07.317] | : . ' , ; ` | : . ' , ; ` | New stack:
[08:08:07.317] | : . ' , ; ` | : . ' , ; ` | List of 1
[08:08:07.317] | : . ' , ; ` | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.317] | : . ' , ; ` | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.317] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.317] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:07.317] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.317] | : . ' , ; ` | : . ' , ; ` |     ...)  
[08:08:07.317] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.317] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.317] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:07.317] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.317] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.317] | : . ' , ; ` | : . ' , ; ` |     ...)  
[08:08:07.317] | : . ' , ; ` | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.317] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.322] | : . ' , ; ` | : . ' , ; ` | Old stack:
[08:08:07.322] | : . ' , ; ` | : . ' , ; ` | List of 1
[08:08:07.322] | : . ' , ; ` | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.322] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.322] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:07.322] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.322] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.322] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.322] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.322] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f901e6c6a8> 
[08:08:07.322] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.322] | : . ' , ; ` | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.322] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.325] | : . ' , ; ` | : . ' , ; ` | Not identical
[08:08:07.325] | : . ' , ; ` | : . ' , ; ` | all.equal() for future ...
[08:08:07.326] | : . ' , ; ` | : . ' , ; ` | : List of 2
[08:08:07.326] | : . ' , ; ` | : . ' , ; ` | :  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.326] | : . ' , ; ` | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.326] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.326] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:07.326] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.326] | : . ' , ; ` | : . ' , ; ` | :     ...)  
[08:08:07.326] | : . ' , ; ` | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.326] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.326] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:07.326] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.326] | : . ' , ; ` | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.326] | : . ' , ; ` | : . ' , ; ` | :     ...)  
[08:08:07.326] | : . ' , ; ` | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.326] | : . ' , ; ` | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.326] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.326] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:07.326] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.326] | : . ' , ; ` | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.326] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.326] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.326] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f901e6c6a8> 
[08:08:07.326] | : . ' , ; ` | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.326] | : . ' , ; ` | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.331] | : . ' , ; ` | : . ' , ; ` | : Formals differ
[08:08:07.331] | : . ' , ; ` | : . ' , ; ` | all.equal() for future ... done
[08:08:07.331] | : . ' , ; ` | : . ' , ; ` | Future strategies differ at level 1
[08:08:07.331] | : . ' , ; ` | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:07.332] | : . ' , ; ` | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:07.332] | : . ' , ; ` | : . ' , ; ` List of future strategies:
[08:08:07.332] | : . ' , ; ` | : . ' , ; ` 1. multicore:
[08:08:07.332] | : . ' , ; ` | : . ' , ; `    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:07.332] | : . ' , ; ` | : . ' , ; `    - tweaked: FALSE
[08:08:07.332] | : . ' , ; ` | : . ' , ; `    - call: plan(strategy)
[08:08:07.332] | : . ' , ; ` | : . ' , ; ` List of 1
[08:08:07.332] | : . ' , ; ` | : . ' , ; `  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.332] | : . ' , ; ` | : . ' , ; `     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.332] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.332] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:08:07.332] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.332] | : . ' , ; ` | : . ' , ; `     ...)  
[08:08:07.332] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.332] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.332] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategy)
[08:08:07.332] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.332] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.332] | : . ' , ; ` | : . ' , ; `     ...)  
[08:08:07.332] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.332] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.335] | : . ' , ; ` | : . ' , ; ` plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:07.335] | : . ' , ; ` | : . ' , ; ` plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:07.336] | : . ' , ; ` | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.336] | : . ' , ; ` | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.336] | : . ' , ; ` | : . ' , ; ` plan(): nbrOfWorkers() = 2
[08:08:07.336] | : . ' , ; ` | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:07.336] | : . ' , ; ` | : . ' , plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.336] | : . ' , ; ` | : . ' plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.337] | : . ' , ; ` | : readImmediateCondition() ...
[08:08:07.337] | : . ' , ; ` | : . Path: ‘/tmp/RtmpohK6N2/.future/immediateConditions’
[08:08:07.337] | : . ' , ; ` | : . Number of RDS files: 0
[08:08:07.337] | : . ' , ; ` | : . Returned conditions set:
[08:08:07.338] | : . ' , ; ` | : .  list()
[08:08:07.338] | : . ' , ; ` | : readImmediateCondition() ... done
[08:08:07.339] | : . ' , ; ` | : result() for MulticoreFuture ...
[08:08:07.339] | : . ' , ; ` | : result() for MulticoreFuture ... done
[08:08:07.339] | : . ' , ; ` | : signalConditions() ...
[08:08:07.339] | : . ' , ; ` | : . include = ‘immediateCondition’
[08:08:07.339] | : . ' , ; ` | : . exclude = 
[08:08:07.340] | : . ' , ; ` | : . resignal = FALSE
[08:08:07.340] | : . ' , ; ` | : . Number of conditions: 6
[08:08:07.340] | : . ' , ; ` | : .  int 6
[08:08:07.341] | : . ' , ; ` | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.341] | : . ' , ; ` | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.341] | : . ' , ; ` | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.341] | : . ' , ; ` | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.341] | : . ' , ; ` | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.341] | : . ' , ; ` | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.341] | : . ' , ; ` | : signalConditions() ... done
[08:08:07.342] | : . ' , ; ` | result() for MulticoreFuture ... done
[08:08:07.342] | : . ' , ; ` | result() for MulticoreFuture ...
[08:08:07.342] | : . ' , ; ` | result() for MulticoreFuture ... done
[08:08:07.342] | : . ' , ; ` | signalConditions() ...
[08:08:07.342] | : . ' , ; ` | : include = ‘immediateCondition’
[08:08:07.342] | : . ' , ; ` | : exclude = 
[08:08:07.342] | : . ' , ; ` | : resignal = FALSE
[08:08:07.342] | : . ' , ; ` | : Number of conditions: 6
[08:08:07.343] | : . ' , ; ` | :  int 6
[08:08:07.343] | : . ' , ; ` | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.343] | : . ' , ; ` | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.343] | : . ' , ; ` | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.343] | : . ' , ; ` | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.343] | : . ' , ; ` | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.344] | : . ' , ; ` | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.344] | : . ' , ; ` | signalConditions() ... done
[08:08:07.344] | : . ' , ; ` | relay stdout ...
[08:08:07.344] | : . ' , ; ` | relay stdout ... done
[08:08:07.344] | : . ' , ; ` | check for misuse ...
[08:08:07.344] | : . ' , ; ` | check for misuse ... done
[08:08:07.344] | : . ' , ; ` | relay conditions ...
[08:08:07.344] | : . ' , ; ` | : Future state: ‘finished’
[08:08:07.344] | : . ' , ; ` | : result() for MulticoreFuture ...
[08:08:07.345] | : . ' , ; ` | : result() for MulticoreFuture ... done
[08:08:07.345] | : . ' , ; ` | : signalConditions() ...
[08:08:07.345] | : . ' , ; ` | : . include = ‘condition’
[08:08:07.345] | : . ' , ; ` | : . exclude = ‘immediateCondition’
[08:08:07.345] | : . ' , ; ` | : . resignal = TRUE
[08:08:07.345] | : . ' , ; ` | : . Number of conditions: 6
[08:08:07.345] | : . ' , ; ` | : .  int 6
[08:08:07.346] | : . ' , ; ` | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.346] | : . ' , ; ` | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.262] | : . ' , ; ` | : . ' attachPackages() ...
[08:08:07.346] | : . ' , ; ` | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.346] | : . ' , ; ` | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.263] | : . ' , ; ` | : . ' , packages: [n=1] ‘future’
[08:08:07.346] | : . ' , ; ` | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.346] | : . ' , ; ` | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.264] | : . ' , ; ` | : . ' attachPackages() ... done
[08:08:07.346] | : . ' , ; ` | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.347] | : . ' , ; ` | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.264] | : . ' , ; ` | : . ' attachPackages() ...
[08:08:07.347] | : . ' , ; ` | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.347] | : . ' , ; ` | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.265] | : . ' , ; ` | : . ' , packages: [n=0] 
[08:08:07.347] | : . ' , ; ` | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.347] | : . ' , ; ` | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.265] | : . ' , ; ` | : . ' attachPackages() ... done
[08:08:07.347] | : . ' , ; ` | : signalConditions() ... done
[08:08:07.347] | : . ' , ; ` | relay conditions ... done
[08:08:07.347] | : . ' , ; ` value() for MulticoreFuture (<unnamed-19>) ... done
Warning in get(var, envir = x, inherits = FALSE) :
  restarting interrupted promise evaluation
[08:08:07.348] | : . ' , ; ` value() for MulticoreFuture (<unnamed-18>) ...
[08:08:07.348] | : . ' , ; ` | result() for MulticoreFuture ...
[08:08:07.348] | : . ' , ; ` | result() for MulticoreFuture ... done
[08:08:07.348] | : . ' , ; ` | result() for MulticoreFuture ...
[08:08:07.348] | : . ' , ; ` | result() for MulticoreFuture ... done
[08:08:07.348] | : . ' , ; ` | signalConditions() ...
[08:08:07.348] | : . ' , ; ` | : include = ‘immediateCondition’
[08:08:07.349] | : . ' , ; ` | : exclude = 
[08:08:07.349] | : . ' , ; ` | : resignal = FALSE
[08:08:07.349] | : . ' , ; ` | : Number of conditions: 7
[08:08:07.349] | : . ' , ; ` | :  int 7
[08:08:07.349] | : . ' , ; ` | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.349] | : . ' , ; ` | : already signaled, skipping
[08:08:07.350] | : . ' , ; ` | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.350] | : . ' , ; ` | : already signaled, skipping
[08:08:07.350] | : . ' , ; ` | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.350] | : . ' , ; ` | : already signaled, skipping
[08:08:07.350] | : . ' , ; ` | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.350] | : . ' , ; ` | : already signaled, skipping
[08:08:07.350] | : . ' , ; ` | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.350] | : . ' , ; ` | : already signaled, skipping
[08:08:07.350] | : . ' , ; ` | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.350] | : . ' , ; ` | : already signaled, skipping
[08:08:07.351] | : . ' , ; ` | : Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:07.351] | : . ' , ; ` | : already signaled, skipping
[08:08:07.351] | : . ' , ; ` | signalConditions() ... done
[08:08:07.351] | : . ' , ; ` | relay stdout ...
[08:08:07.351] | : . ' , ; ` | relay stdout ... done
[08:08:07.351] | : . ' , ; ` | check for misuse ...
[08:08:07.351] | : . ' , ; ` | check for misuse ... done
[08:08:07.351] | : . ' , ; ` | relay conditions ...
[08:08:07.351] | : . ' , ; ` | : Future state: ‘finished’
[08:08:07.352] | : . ' , ; ` | : result() for MulticoreFuture ...
[08:08:07.352] | : . ' , ; ` | : result() for MulticoreFuture ... done
[08:08:07.352] | : . ' , ; ` | : signalConditions() ...
[08:08:07.352] | : . ' , ; ` | : . include = ‘condition’
[08:08:07.352] | : . ' , ; ` | : . exclude = ‘immediateCondition’
[08:08:07.352] | : . ' , ; ` | : . resignal = TRUE
[08:08:07.352] | : . ' , ; ` | : . Number of conditions: 7
[08:08:07.352] | : . ' , ; ` | : .  int 7
[08:08:07.353] | : . ' , ; ` | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.353] | : . ' , ; ` | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.189] | : . ' , ; ` | : . ' attachPackages() ...
[08:08:07.353] | : . ' , ; ` | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.353] | : . ' , ; ` | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.190] | : . ' , ; ` | : . ' , packages: [n=1] ‘future’
[08:08:07.353] | : . ' , ; ` | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.353] | : . ' , ; ` | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.190] | : . ' , ; ` | : . ' attachPackages() ... done
[08:08:07.354] | : . ' , ; ` | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.354] | : . ' , ; ` | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.191] | : . ' , ; ` | : . ' attachPackages() ...
[08:08:07.354] | : . ' , ; ` | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.356] | : . ' , ; ` | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.191] | : . ' , ; ` | : . ' , packages: [n=0] 
[08:08:07.356] | : . ' , ; ` | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.356] | : . ' , ; ` | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.191] | : . ' , ; ` | : . ' attachPackages() ... done
[08:08:07.356] | : . ' , ; ` | : . Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:07.356] | : . ' , ; ` | : . Condition #7: ‘simpleError’, ‘error’, ‘condition’
[08:08:07.357] | : . ' , ; ` | : signalConditions() ... done
[08:08:07.357] | : . ' , ; ` | relay conditions ... done
Warning in get(var, envir = x, inherits = FALSE) :
  restarting interrupted promise evaluation
[08:08:07.357] | : . ' , ; ` | value() for MulticoreFuture (<unnamed-18>) ...
[08:08:07.357] | : . ' , ; ` | : result() for MulticoreFuture ...
[08:08:07.357] | : . ' , ; ` | : result() for MulticoreFuture ... done
[08:08:07.358] | : . ' , ; ` | : result() for MulticoreFuture ...
[08:08:07.358] | : . ' , ; ` | : result() for MulticoreFuture ... done
[08:08:07.358] | : . ' , ; ` | : signalConditions() ...
[08:08:07.358] | : . ' , ; ` | : . include = ‘immediateCondition’
[08:08:07.358] | : . ' , ; ` | : . exclude = 
[08:08:07.358] | : . ' , ; ` | : . resignal = FALSE
[08:08:07.358] | : . ' , ; ` | : . Number of conditions: 7
[08:08:07.359] | : . ' , ; ` | : .  int 7
[08:08:07.359] | : . ' , ; ` | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.359] | : . ' , ; ` | : . already signaled, skipping
[08:08:07.359] | : . ' , ; ` | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.359] | : . ' , ; ` | : . already signaled, skipping
[08:08:07.359] | : . ' , ; ` | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.360] | : . ' , ; ` | : . already signaled, skipping
[08:08:07.360] | : . ' , ; ` | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.360] | : . ' , ; ` | : . already signaled, skipping
[08:08:07.360] | : . ' , ; ` | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.360] | : . ' , ; ` | : . already signaled, skipping
[08:08:07.360] | : . ' , ; ` | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.360] | : . ' , ; ` | : . already signaled, skipping
[08:08:07.360] | : . ' , ; ` | : . Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:07.360] | : . ' , ; ` | : . already signaled, skipping
[08:08:07.360] | : . ' , ; ` | : signalConditions() ... done
[08:08:07.361] | : . ' , ; ` | : relay stdout ...
[08:08:07.361] | : . ' , ; ` | : relay stdout ... done
[08:08:07.361] | : . ' , ; ` | : check for misuse ...
[08:08:07.361] | : . ' , ; ` | : check for misuse ... done
[08:08:07.361] | : . ' , ; ` | : relay conditions ...
[08:08:07.361] | : . ' , ; ` | : . Future state: ‘finished’
[08:08:07.361] | : . ' , ; ` | : . result() for MulticoreFuture ...
[08:08:07.361] | : . ' , ; ` | : . result() for MulticoreFuture ... done
[08:08:07.361] | : . ' , ; ` | : . signalConditions() ...
[08:08:07.362] | : . ' , ; ` | : . ' include = ‘condition’
[08:08:07.362] | : . ' , ; ` | : . ' exclude = ‘immediateCondition’
[08:08:07.362] | : . ' , ; ` | : . ' resignal = TRUE
[08:08:07.362] | : . ' , ; ` | : . ' Number of conditions: 7
[08:08:07.362] | : . ' , ; ` | : . '  int 7
[08:08:07.362] | : . ' , ; ` | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.362] | : . ' , ; ` | : . ' Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.189] | : . ' , ; ` | : . ' attachPackages() ...
[08:08:07.363] | : . ' , ; ` | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.363] | : . ' , ; ` | : . ' Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.190] | : . ' , ; ` | : . ' , packages: [n=1] ‘future’
[08:08:07.363] | : . ' , ; ` | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.363] | : . ' , ; ` | : . ' Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.190] | : . ' , ; ` | : . ' attachPackages() ... done
[08:08:07.363] | : . ' , ; ` | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.363] | : . ' , ; ` | : . ' Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.191] | : . ' , ; ` | : . ' attachPackages() ...
[08:08:07.363] | : . ' , ; ` | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.363] | : . ' , ; ` | : . ' Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.191] | : . ' , ; ` | : . ' , packages: [n=0] 
[08:08:07.364] | : . ' , ; ` | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.364] | : . ' , ; ` | : . ' Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.191] | : . ' , ; ` | : . ' attachPackages() ... done
[08:08:07.364] | : . ' , ; ` | : . ' Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:07.364] | : . ' , ; ` | : . ' Condition #7: ‘simpleError’, ‘error’, ‘condition’
[08:08:07.364] | : . ' , ; ` | : . signalConditions() ... done
[08:08:07.364] | : . ' , ; ` | : relay conditions ... done
** Future evaluation with a poor-man's "progress bar"
[08:08:07.365] | : . ' , ; ` | : future(..., label = NULL) ...
[08:08:07.365] | : . ' , ; ` | : . lazy: FALSE
[08:08:07.365] | : . ' , ; ` | : . stdout: TRUE
[08:08:07.365] | : . ' , ; ` | : . conditions: [n=1] ‘condition’
[08:08:07.365] | : . ' , ; ` | : . gc: FALSE
[08:08:07.365] | : . ' , ; ` | : . earlySignal: FALSE
[08:08:07.365] | : . ' , ; ` | : . getGlobalsAndPackages() ...
[08:08:07.365] | : . ' , ; ` | : . ' Searching for globals ...
[08:08:07.385] | : . ' , ; ` | : . ' , globals found: [4] ‘{’, ‘cat’, ‘for’, ‘:’
[08:08:07.385] | : . ' , ; ` | : . ' Searching for globals ... done
[08:08:07.385] | : . ' , ; ` | : . ' Resolving globals: FALSE
[08:08:07.385] | : . ' , ; ` | : . ' Search for packages associated with the globals ...
[08:08:07.385] | : . ' , ; ` | : . ' , Packages associated with globals: [1] ‘base’
[08:08:07.386] | : . ' , ; ` | : . ' , Packages: [1] ‘base’
[08:08:07.386] | : . ' , ; ` | : . ' Search for packages associated with the globals ... done
[08:08:07.386] | : . ' , ; ` | : . ' Packages after dropping 'base': [0] 
[08:08:07.386] | : . ' , ; ` | : . ' globals: [0] 
[08:08:07.386] | : . ' , ; ` | : . ' packages: [0] 
[08:08:07.386] | : . ' , ; ` | : . getGlobalsAndPackages() ... done
[08:08:07.386] | : . ' , ; ` | : . run() for ‘Future’ (<unnamed-20>) ...
[08:08:07.387] | : . ' , ; ` | : . ' state: ‘created’
[08:08:07.387] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.387] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.387] | : . ' , ; ` | : . ' Using MulticoreFutureBackend ...
[08:08:07.387] | : . ' , ; ` | : . ' , Number of futures since start: 6 (6 created, 6 launched, 7 finished)
[08:08:07.389] | : . ' , ; ` | : . ' , Launching futures ...
[08:08:07.389] | : . ' , ; ` | : . ' , ; launchFuture() for MulticoreFutureBackend ...
[08:08:07.389] | : . ' , ; ` | : . ' , ; ` getFutureData() ...
[08:08:07.389] | : . ' , ; ` | : . ' , ; ` | getFutureCore() ...
[08:08:07.389] | : . ' , ; ` | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:08:07.389] | : . ' , ; ` | : . ' , ; ` | getFutureCore() ... done
[08:08:07.389] | : . ' , ; ` | : . ' , ; ` | getFutureCapture() ...
[08:08:07.389] | : . ' , ; ` | : . ' , ; ` | getFutureCapture() ... done
[08:08:07.390] | : . ' , ; ` | : . ' , ; ` | getFutureContext() ...
[08:08:07.390] | : . ' , ; ` | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.390] | : . ' , ; ` | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:07.390] | : . ' , ; ` | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.390] | : . ' , ; ` | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:07.390] | : . ' , ; ` | : . ' , ; ` | getFutureContext() ... done
[08:08:07.390] | : . ' , ; ` | : . ' , ; ` getFutureData() ... done
[08:08:07.391] | : . ' , ; ` | : . ' , ; ` requestCore(..., workers = 2) ...
[08:08:07.391] | : . ' , ; ` | : . ' , ; ` requestCore(..., workers = 2) ... done
[08:08:07.393] | : . ' , ; ` | : . ' , ; ` MulticoreFuture started
[08:08:07.394] | : . ' , ; ` | : . ' , ; launchFuture() for MulticoreFutureBackend ... done
[08:08:07.394] | : . ' , ; ` | : . ' , Launching futures ... done
[08:08:07.395] | : . ' , ; ` | : . ' , Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:07.395] | : . ' , ; ` | : . ' Using MulticoreFutureBackend ... done
[08:08:07.396] | : . ' , ; ` | : . run() for ‘Future’ (<unnamed-20>) ... done
[08:08:07.396] | : . ' , ; ` | : future(..., label = NULL) ... done
** Collecting results
v1 = 1
v2 = 2
Warning in sprintf(...) : restarting interrupted promise evaluation
[08:08:07.397] | : . ' , ; ` | : value() for MulticoreFuture (<unnamed-16>) ...
[08:08:07.397] | : . ' , ; ` | : . result() for MulticoreFuture ...
[08:08:07.398] | : . ' , ; ` | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.398] | : . ' , ; ` | : . result() for MulticoreFuture ... done
[08:08:07.398] | : . ' , ; ` | : . ' , ; ` | Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:07.398] | : . ' , ; ` | : . result() for MulticoreFuture ...
[08:08:07.398] | : . ' , ; ` | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.399] | : . ' , ; ` | : . result() for MulticoreFuture ... done
[08:08:07.399] | : . ' , ; ` | : . signalConditions() ...
[08:08:07.399] | : . ' , ; ` | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:07.399] | : . ' , ; ` | : . ' include = ‘immediateCondition’
[08:08:07.399] | : . ' , ; ` | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:07.399] | : . ' , ; ` | : . ' exclude = 
[08:08:07.400] | : . ' , ; ` | : . ' , ; ` | : all.equal() for FutureStrategyList ...
[08:08:07.400] | : . ' , ; ` | : . ' resignal = FALSE
[08:08:07.400] | : . ' , ; ` | : . ' , ; ` | : . New stack:
[08:08:07.400] | : . ' , ; ` | : . ' Number of conditions: 7
[08:08:07.400] | : . ' , ; ` | : . '  int 7
[08:08:07.401] | : . ' , ; ` | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.401] | : . ' , ; ` | : . ' already signaled, skipping
[08:08:07.401] | : . ' , ; ` | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.402] | : . ' , ; ` | : . ' already signaled, skipping
[08:08:07.402] | : . ' , ; ` | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.402] | : . ' , ; ` | : . ' already signaled, skipping
[08:08:07.402] | : . ' , ; ` | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.402] | : . ' , ; ` | : . ' already signaled, skipping
[08:08:07.402] | : . ' , ; ` | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.403] | : . ' , ; ` | : . ' already signaled, skipping
[08:08:07.403] | : . ' , ; ` | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.403] | : . ' , ; ` | : . ' already signaled, skipping
[08:08:07.403] | : . ' , ; ` | : . ' Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:07.403] | : . ' , ; ` | : . ' already signaled, skipping
[08:08:07.403] | : . ' , ; ` | : . signalConditions() ... done
[08:08:07.403] | : . ' , ; ` | : . relay stdout ...
[08:08:07.404] | : . ' , ; ` | : . relay stdout ... done
[08:08:07.404] | : . ' , ; ` | : . check for misuse ...
[08:08:07.404] | : . ' , ; ` | : . check for misuse ... done
[08:08:07.404] | : . ' , ; ` | : . relay conditions ...
[08:08:07.404] | : . ' , ; ` | : . ' Future state: ‘finished’
[08:08:07.404] | : . ' , ; ` | : . ' result() for MulticoreFuture ...
[08:08:07.404] | : . ' , ; ` | : . ' result() for MulticoreFuture ... done
[08:08:07.400] | : . ' , ; ` | : . ' , ; ` | : . List of 1
[08:08:07.400] | : . ' , ; ` | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.400] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.400] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:08:07.400] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.400] | : . ' , ; ` | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.400] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.400] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.400] | : . ' , ; ` | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.405] | : . ' , ; ` | : . ' , ; ` | : . Old stack:
[08:08:07.405] | : . ' , ; ` | : . ' signalConditions() ...
[08:08:07.405] | : . ' , ; ` | : . ' , include = ‘condition’
[08:08:07.405] | : . ' , ; ` | : . ' , exclude = ‘immediateCondition’
[08:08:07.405] | : . ' , ; ` | : . ' , resignal = TRUE
[08:08:07.405] | : . ' , ; ` | : . ' , Number of conditions: 7
[08:08:07.405] | : . ' , ; ` | : . ' ,  int 7
[08:08:07.406] | : . ' , ; ` | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.406] | : . ' , ; ` | : . ' , Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.054] | : . ' , ; ` | : . attachPackages() ...
[08:08:07.406] | : . ' , ; ` | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.406] | : . ' , ; ` | : . ' , Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.054] | : . ' , ; ` | : . ' packages: [n=1] ‘future’
[08:08:07.407] | : . ' , ; ` | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.407] | : . ' , ; ` | : . ' , Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.054] | : . ' , ; ` | : . attachPackages() ... done
[08:08:07.407] | : . ' , ; ` | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.407] | : . ' , ; ` | : . ' , Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.055] | : . ' , ; ` | : . attachPackages() ...
[08:08:07.407] | : . ' , ; ` | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.407] | : . ' , ; ` | : . ' , Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.055] | : . ' , ; ` | : . ' packages: [n=0] 
[08:08:07.408] | : . ' , ; ` | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.408] | : . ' , ; ` | : . ' , Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.055] | : . ' , ; ` | : . attachPackages() ... done
[08:08:07.408] | : . ' , ; ` | : . ' , Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:07.408] | : . ' , ; ` | : . ' , Condition #7: ‘simpleError’, ‘error’, ‘condition’
[08:08:07.408] | : . ' , ; ` | : . ' signalConditions() ... done
[08:08:07.409] | : . ' , ; ` | : . relay conditions ... done
v3: <simpleError> (as expect)
[08:08:07.409] | : . ' , ; ` | : . value() for MulticoreFuture (<unnamed-20>) ...
[08:08:07.409] | : . ' , ; ` | : . ' result() for MulticoreFuture ...
[08:08:07.405] | : . ' , ; ` | : . ' , ; ` | : . List of 1
[08:08:07.405] | : . ' , ; ` | : . ' , ; ` | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.405] | : . ' , ; ` | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.405] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.405] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:07.405] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.405] | : . ' , ; ` | : . ' , ; ` | : .     ...)  
[08:08:07.405] | : . ' , ; ` | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.405] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.405] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:07.405] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.405] | : . ' , ; ` | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.405] | : . ' , ; ` | : . ' , ; ` | : .     ...)  
[08:08:07.405] | : . ' , ; ` | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.405] | : . ' , ; ` | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.410] | : . ' , ; ` | : . ' , ; ` | : . Not identical
[08:08:07.410] | : . ' , ; ` | : . ' , ; ` | : . all.equal() for future ...
[08:08:07.410] | : . ' , ; ` | : . ' , ; ` | : . ' List of 2
[08:08:07.410] | : . ' , ; ` | : . ' , ; ` | : . '  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.410] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.410] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "init")= logi TRUE
[08:08:07.410] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.410] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.410] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.410] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.410] | : . ' , ; ` | : . ' , ; ` | : . '  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.410] | : . ' , ; ` | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.410] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.410] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:08:07.410] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.410] | : . ' , ; ` | : . ' , ; ` | : . '     ...)  
[08:08:07.410] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.410] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.410] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:08:07.410] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.410] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.410] | : . ' , ; ` | : . ' , ; ` | : . '     ...)  
[08:08:07.410] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.418] | : . ' , ; ` | : . ' , ; ` | : . ' Formals differ
[08:08:07.418] | : . ' , ; ` | : . ' , ; ` | : . all.equal() for future ... done
[08:08:07.418] | : . ' , ; ` | : . ' , ; ` | : . Future strategies differ at level 1
[08:08:07.418] | : . ' , ; ` | : . ' , ; ` | : all.equal() for FutureStrategyList ... done
[08:08:07.420] | : . ' , ; ` | : . ' , ; ` | : plan(): Setting new future backend stack:
[08:08:07.420] | : . ' , ; ` | : . ' , ; ` | : List of future strategies:
[08:08:07.420] | : . ' , ; ` | : . ' , ; ` | : 1. sequential:
[08:08:07.420] | : . ' , ; ` | : . ' , ; ` | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:07.420] | : . ' , ; ` | : . ' , ; ` | :    - tweaked: FALSE
[08:08:07.420] | : . ' , ; ` | : . ' , ; ` | :    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.421] | : . ' , ; ` | : . ' , ; ` | : List of 1
[08:08:07.421] | : . ' , ; ` | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.421] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.421] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:07.421] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.421] | : . ' , ; ` | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.421] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.421] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.421] | : . ' , ; ` | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.425] | : . ' , ; ` | : . ' , ; ` | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:07.425] | : . ' , ; ` | : . ' , ; ` | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:07.425] | : . ' , ; ` | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.425] | : . ' , ; ` | : . ' , ; ` | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:07.425] | : . ' , ; ` | : . ' , ; ` | : . ' function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.425] | : . ' , ; ` | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.425] | : . ' , ; ` | : . ' , ; ` | : . '  - attr(*, "init")= logi TRUE
[08:08:07.425] | : . ' , ; ` | : . ' , ; ` | : . '  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.425] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.425] | : . ' , ; ` | : . ' , ; ` | : . '  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.425] | : . ' , ; ` | : . ' , ; ` | : . '  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.427] | : . ' , ; ` | : . ' , ; ` | : . ' init: TRUE
[08:08:07.428] | : . ' , ; ` | : . ' , ; ` | : . ' makeFutureBackend(<sequential>) ...
[08:08:07.428] | : . ' , ; ` | : . ' , ; ` | : . ' , Backend function: <‘NULL’>
[08:08:07.428] | : . ' , ; ` | : . ' , ; ` | : . ' , Evaluator tweak arguments: [n=0]
[08:08:07.428] | : . ' , ; ` | : . ' , ; ` | : . ' ,  list()
[08:08:07.428] | : . ' , ; ` | : . ' , ; ` | : . ' , Evaluator formal arguments: [n=2]
[08:08:07.428] | : . ' , ; ` | : . ' , ; ` | : . ' ,  list()
[08:08:07.429] | : . ' , ; ` | : . ' , ; ` | : . ' , Backend factory arguments: [n=2]
[08:08:07.429] | : . ' , ; ` | : . ' , ; ` | : . ' , Dotted pair list of 2
[08:08:07.429] | : . ' , ; ` | : . ' , ; ` | : . ' ,  $ gc         : logi FALSE
[08:08:07.429] | : . ' , ; ` | : . ' , ; ` | : . ' ,  $ earlySignal: logi FALSE
[08:08:07.430] | : . ' , ; ` | : . ' , ; ` | : . ' , Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:07.430] | : . ' , ; ` | : . ' , ; ` | : . ' makeFutureBackend(<sequential>) ... done
[08:08:07.430] | : . ' , ; ` | : . ' , ; ` | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:07.430] | : . ' , ; ` | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.430] | : . ' , ; ` | : . ' , ; ` | : plan(): nbrOfWorkers() = 1
[08:08:07.430] | : . ' , ; ` | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:07.431] | : . ' , ; ` | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.433] | : . ' , ; ` | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:07.433] | : . ' , ; ` | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:07.433] | : . ' , ; ` | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:07.433] | : . ' , ; ` | : . ' , ; ` | : . all.equal() for FutureStrategyList ...
[08:08:07.433] | : . ' , ; ` | : . ' , ; ` | : . ' New stack:
[08:08:07.434] | : . ' , ; ` | : . ' , ; ` | : . ' List of 1
[08:08:07.434] | : . ' , ; ` | : . ' , ; ` | : . '  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.434] | : . ' , ; ` | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.434] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.434] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:08:07.434] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.434] | : . ' , ; ` | : . ' , ; ` | : . '     ...)  
[08:08:07.434] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.434] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.434] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:08:07.434] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.434] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.434] | : . ' , ; ` | : . ' , ; ` | : . '     ...)  
[08:08:07.434] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.434] | : . ' , ; ` | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.437] | : . ' , ; ` | : . ' , ; ` | : . ' Old stack:
[08:08:07.437] | : . ' , ; ` | : . ' , ; ` | : . ' List of 1
[08:08:07.437] | : . ' , ; ` | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.437] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.437] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:08:07.437] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.437] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.437] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.437] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.437] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f901edac80> 
[08:08:07.437] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.437] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.437] | : . ' , ; ` | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.445] | : . ' , ; ` | : . ' , ; ` | : . ' Not identical
[08:08:07.445] | : . ' , ; ` | : . ' , ; ` | : . ' all.equal() for future ...
[08:08:07.445] | : . ' , ; ` | : . ' , ; ` | : . ' , List of 2
[08:08:07.445] | : . ' , ; ` | : . ' , ; ` | : . ' ,  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.445] | : . ' , ; ` | : . ' , ; ` | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.445] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.445] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:08:07.445] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.445] | : . ' , ; ` | : . ' , ; ` | : . ' ,     ...)  
[08:08:07.445] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.445] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.445] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategy)
[08:08:07.445] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.445] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.445] | : . ' , ; ` | : . ' , ; ` | : . ' ,     ...)  
[08:08:07.445] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.445] | : . ' , ; ` | : . ' , ; ` | : . ' ,  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.445] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.445] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:08:07.445] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.445] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.445] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.445] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.445] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f901edac80> 
[08:08:07.445] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.445] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.451] | : . ' , ; ` | : . ' , ; ` | : . ' , Formals differ
[08:08:07.452] | : . ' , ; ` | : . ' , ; ` | : . ' all.equal() for future ... done
[08:08:07.452] | : . ' , ; ` | : . ' , ; ` | : . ' Future strategies differ at level 1
[08:08:07.452] | : . ' , ; ` | : . ' , ; ` | : . all.equal() for FutureStrategyList ... done
[08:08:07.452] | : . ' , ; ` | : . ' , ; ` | : . plan(): Setting new future backend stack:
[08:08:07.452] | : . ' , ; ` | : . ' , ; ` | : . List of future strategies:
[08:08:07.452] | : . ' , ; ` | : . ' , ; ` | : . 1. multicore:
[08:08:07.452] | : . ' , ; ` | : . ' , ; ` | : .    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:07.452] | : . ' , ; ` | : . ' , ; ` | : .    - tweaked: FALSE
[08:08:07.452] | : . ' , ; ` | : . ' , ; ` | : .    - call: plan(strategy)
[08:08:07.452] | : . ' , ; ` | : . ' , ; ` | : . List of 1
[08:08:07.452] | : . ' , ; ` | : . ' , ; ` | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.452] | : . ' , ; ` | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.452] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.452] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:07.452] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.452] | : . ' , ; ` | : . ' , ; ` | : .     ...)  
[08:08:07.452] | : . ' , ; ` | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.452] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.452] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:07.452] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.452] | : . ' , ; ` | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.452] | : . ' , ; ` | : . ' , ; ` | : .     ...)  
[08:08:07.452] | : . ' , ; ` | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.452] | : . ' , ; ` | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.456] | : . ' , ; ` | : . ' , ; ` | : . plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:07.456] | : . ' , ; ` | : . ' , ; ` | : . plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:07.456] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.456] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.456] | : . ' , ; ` | : . ' , ; ` | : . plan(): nbrOfWorkers() = 2
[08:08:07.456] | : . ' , ; ` | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:07.456] | : . ' , ; ` | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.456] | : . ' , ; ` | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.457] | : . ' , ; ` | : . ' , readImmediateCondition() ...
[08:08:07.457] | : . ' , ; ` | : . ' , ; Path: ‘/tmp/RtmpohK6N2/.future/immediateConditions’
[08:08:07.457] | : . ' , ; ` | : . ' , ; Number of RDS files: 0
[08:08:07.458] | : . ' , ; ` | : . ' , ; Returned conditions set:
[08:08:07.458] | : . ' , ; ` | : . ' , ;  list()
[08:08:07.458] | : . ' , ; ` | : . ' , readImmediateCondition() ... done
[08:08:07.459] | : . ' , ; ` | : . ' , result() for MulticoreFuture ...
[08:08:07.459] | : . ' , ; ` | : . ' , result() for MulticoreFuture ... done
[08:08:07.459] | : . ' , ; ` | : . ' , signalConditions() ...
[08:08:07.459] | : . ' , ; ` | : . ' , ; include = ‘immediateCondition’
[08:08:07.459] | : . ' , ; ` | : . ' , ; exclude = 
[08:08:07.459] | : . ' , ; ` | : . ' , ; resignal = FALSE
[08:08:07.459] | : . ' , ; ` | : . ' , ; Number of conditions: 6
[08:08:07.460] | : . ' , ; ` | : . ' , ;  int 6
[08:08:07.460] | : . ' , ; ` | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.460] | : . ' , ; ` | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.460] | : . ' , ; ` | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.461] | : . ' , ; ` | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.461] | : . ' , ; ` | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.461] | : . ' , ; ` | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.461] | : . ' , ; ` | : . ' , signalConditions() ... done
[08:08:07.461] | : . ' , ; ` | : . ' result() for MulticoreFuture ... done
[08:08:07.461] | : . ' , ; ` | : . ' result() for MulticoreFuture ...
[08:08:07.461] | : . ' , ; ` | : . ' result() for MulticoreFuture ... done
[08:08:07.462] | : . ' , ; ` | : . ' signalConditions() ...
[08:08:07.462] | : . ' , ; ` | : . ' , include = ‘immediateCondition’
[08:08:07.462] | : . ' , ; ` | : . ' , exclude = 
[08:08:07.462] | : . ' , ; ` | : . ' , resignal = FALSE
[08:08:07.462] | : . ' , ; ` | : . ' , Number of conditions: 6
[08:08:07.462] | : . ' , ; ` | : . ' ,  int 6
[08:08:07.463] | : . ' , ; ` | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.463] | : . ' , ; ` | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.463] | : . ' , ; ` | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.463] | : . ' , ; ` | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.463] | : . ' , ; ` | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.463] | : . ' , ; ` | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.464] | : . ' , ; ` | : . ' signalConditions() ... done
[08:08:07.464] | : . ' , ; ` | : . ' relay stdout ...
Processing: .......... [100%]
[08:08:07.464] | : . ' , ; ` | : . ' relay stdout ... done
[08:08:07.464] | : . ' , ; ` | : . ' check for misuse ...
[08:08:07.464] | : . ' , ; ` | : . ' check for misuse ... done
[08:08:07.464] | : . ' , ; ` | : . ' relay conditions ...
[08:08:07.464] | : . ' , ; ` | : . ' , Future state: ‘finished’
[08:08:07.465] | : . ' , ; ` | : . ' , result() for MulticoreFuture ...
[08:08:07.465] | : . ' , ; ` | : . ' , result() for MulticoreFuture ... done
[08:08:07.465] | : . ' , ; ` | : . ' , signalConditions() ...
[08:08:07.465] | : . ' , ; ` | : . ' , ; include = ‘condition’
[08:08:07.465] | : . ' , ; ` | : . ' , ; exclude = ‘immediateCondition’
[08:08:07.465] | : . ' , ; ` | : . ' , ; resignal = TRUE
[08:08:07.465] | : . ' , ; ` | : . ' , ; Number of conditions: 6
[08:08:07.465] | : . ' , ; ` | : . ' , ;  int 6
[08:08:07.468] | : . ' , ; ` | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.468] | : . ' , ; ` | : . ' , ; Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.394] | : . ' , ; ` | : . ' , ; ` attachPackages() ...
[08:08:07.468] | : . ' , ; ` | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.468] | : . ' , ; ` | : . ' , ; Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.395] | : . ' , ; ` | : . ' , ; ` | packages: [n=1] ‘future’
[08:08:07.469] | : . ' , ; ` | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.469] | : . ' , ; ` | : . ' , ; Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.396] | : . ' , ; ` | : . ' , ; ` attachPackages() ... done
[08:08:07.469] | : . ' , ; ` | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.469] | : . ' , ; ` | : . ' , ; Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.396] | : . ' , ; ` | : . ' , ; ` attachPackages() ...
[08:08:07.469] | : . ' , ; ` | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.470] | : . ' , ; ` | : . ' , ; Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.396] | : . ' , ; ` | : . ' , ; ` | packages: [n=0] 
[08:08:07.470] | : . ' , ; ` | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.470] | : . ' , ; ` | : . ' , ; Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.397] | : . ' , ; ` | : . ' , ; ` attachPackages() ... done
[08:08:07.470] | : . ' , ; ` | : . ' , signalConditions() ... done
[08:08:07.470] | : . ' , ; ` | : . ' relay conditions ... done
[08:08:07.471] | : . ' , ; ` | : . value() for MulticoreFuture (<unnamed-20>) ... done
v4 = 4
** Left-to-right and right-to-left future assignments
[08:08:07.471] | : . ' , ; ` | : . future(..., label = NULL) ...
[08:08:07.471] | : . ' , ; ` | : . ' lazy: FALSE
[08:08:07.471] | : . ' , ; ` | : . ' stdout: TRUE
[08:08:07.471] | : . ' , ; ` | : . ' conditions: [n=1] ‘condition’
[08:08:07.472] | : . ' , ; ` | : . ' gc: FALSE
[08:08:07.472] | : . ' , ; ` | : . ' earlySignal: FALSE
[08:08:07.472] | : . ' , ; ` | : . ' getGlobalsAndPackages() ...
[08:08:07.472] | : . ' , ; ` | : . ' , Searching for globals ...
[08:08:07.474] | : . ' , ; ` | : . ' , ; globals found: [0] 
[08:08:07.474] | : . ' , ; ` | : . ' , Searching for globals ... done
[08:08:07.474] | : . ' , ; ` | : . ' , globals: [0] <none>
[08:08:07.474] | : . ' , ; ` | : . ' , packages: [0] <none>
[08:08:07.474] | : . ' , ; ` | : . ' getGlobalsAndPackages() ... done
[08:08:07.474] | : . ' , ; ` | : . ' run() for ‘Future’ (<unnamed-21>) ...
[08:08:07.475] | : . ' , ; ` | : . ' , state: ‘created’
[08:08:07.475] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.475] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.475] | : . ' , ; ` | : . ' , Using MulticoreFutureBackend ...
[08:08:07.475] | : . ' , ; ` | : . ' , ; Number of futures since start: 7 (7 created, 7 launched, 8 finished)
[08:08:07.475] | : . ' , ; ` | : . ' , ; Launching futures ...
[08:08:07.475] | : . ' , ; ` | : . ' , ; ` launchFuture() for MulticoreFutureBackend ...
[08:08:07.475] | : . ' , ; ` | : . ' , ; ` | getFutureData() ...
[08:08:07.476] | : . ' , ; ` | : . ' , ; ` | : getFutureCore() ...
[08:08:07.476] | : . ' , ; ` | : . ' , ; ` | : . Packages needed by the future expression (n = 0): <none>
[08:08:07.476] | : . ' , ; ` | : . ' , ; ` | : getFutureCore() ... done
[08:08:07.476] | : . ' , ; ` | : . ' , ; ` | : getFutureCapture() ...
[08:08:07.476] | : . ' , ; ` | : . ' , ; ` | : getFutureCapture() ... done
[08:08:07.476] | : . ' , ; ` | : . ' , ; ` | : getFutureContext() ...
[08:08:07.476] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.476] | : . ' , ; ` | : . ' , ; ` | : . ' Getting stack without first backend: [n=0] 
[08:08:07.477] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.477] | : . ' , ; ` | : . ' , ; ` | : . Packages needed by future backend (n = 0): <none>
[08:08:07.477] | : . ' , ; ` | : . ' , ; ` | : getFutureContext() ... done
[08:08:07.477] | : . ' , ; ` | : . ' , ; ` | getFutureData() ... done
[08:08:07.477] | : . ' , ; ` | : . ' , ; ` | requestCore(..., workers = 2) ...
[08:08:07.477] | : . ' , ; ` | : . ' , ; ` | requestCore(..., workers = 2) ... done
[08:08:07.479] | : . ' , ; ` | : . ' , ; ` | MulticoreFuture started
[08:08:07.480] | : . ' , ; ` | : . ' , ; ` launchFuture() for MulticoreFutureBackend ... done
[08:08:07.480] | : . ' , ; ` | : . ' , ; Launching futures ... done
[08:08:07.480] | : . ' , ; ` | : . ' , ; Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:07.481] | : . ' , ; ` | : . ' , Using MulticoreFutureBackend ... done
[08:08:07.481] | : . ' , ; ` | : . ' run() for ‘Future’ (<unnamed-21>) ... done
[08:08:07.481] | : . ' , ; ` | : . future(..., label = NULL) ... done
[08:08:07.482] | : . ' , ; ` | : . value() for MulticoreFuture (<unnamed-21>) ...
[08:08:07.482] | : . ' , ; ` | : . ' result() for MulticoreFuture ...
[08:08:07.483] | : . ' , ; ` | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.483] | : . ' , ; ` | : . ' , ; ` | : Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:07.484] | : . ' , ; ` | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.484] | : . ' , ; ` | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:07.484] | : . ' , ; ` | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:07.485] | : . ' , ; ` | : . ' , ; ` | : . all.equal() for FutureStrategyList ...
[08:08:07.485] | : . ' , ; ` | : . ' , ; ` | : . ' New stack:
[08:08:07.485] | : . ' , ; ` | : . ' , ; ` | : . ' List of 1
[08:08:07.485] | : . ' , ; ` | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.485] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.485] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "init")= logi TRUE
[08:08:07.485] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.485] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.485] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.485] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.485] | : . ' , ; ` | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.490] | : . ' , ; ` | : . ' , ; ` | : . ' Old stack:
[08:08:07.490] | : . ' , ; ` | : . ' , ; ` | : . ' List of 1
[08:08:07.490] | : . ' , ; ` | : . ' , ; ` | : . '  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.490] | : . ' , ; ` | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.490] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.490] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:08:07.490] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.490] | : . ' , ; ` | : . ' , ; ` | : . '     ...)  
[08:08:07.490] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.490] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.490] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:08:07.490] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.490] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.490] | : . ' , ; ` | : . ' , ; ` | : . '     ...)  
[08:08:07.490] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.490] | : . ' , ; ` | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.496] | : . ' , ; ` | : . ' , ; ` | : . ' Not identical
[08:08:07.496] | : . ' , ; ` | : . ' , ; ` | : . ' all.equal() for future ...
[08:08:07.496] | : . ' , ; ` | : . ' , ; ` | : . ' , List of 2
[08:08:07.496] | : . ' , ; ` | : . ' , ; ` | : . ' ,  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.496] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.496] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= logi TRUE
[08:08:07.496] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.496] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.496] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.496] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.496] | : . ' , ; ` | : . ' , ; ` | : . ' ,  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.496] | : . ' , ; ` | : . ' , ; ` | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.496] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.496] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:08:07.496] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.496] | : . ' , ; ` | : . ' , ; ` | : . ' ,     ...)  
[08:08:07.496] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.496] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.496] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategy)
[08:08:07.496] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.496] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.496] | : . ' , ; ` | : . ' , ; ` | : . ' ,     ...)  
[08:08:07.496] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.511] | : . ' , ; ` | : . ' , ; ` | : . ' , Formals differ
[08:08:07.511] | : . ' , ; ` | : . ' , ; ` | : . ' all.equal() for future ... done
[08:08:07.512] | : . ' , ; ` | : . ' , ; ` | : . ' Future strategies differ at level 1
[08:08:07.512] | : . ' , ; ` | : . ' , ; ` | : . all.equal() for FutureStrategyList ... done
[08:08:07.512] | : . ' , ; ` | : . ' , ; ` | : . plan(): Setting new future backend stack:
[08:08:07.512] | : . ' , ; ` | : . ' , ; ` | : . List of future strategies:
[08:08:07.512] | : . ' , ; ` | : . ' , ; ` | : . 1. sequential:
[08:08:07.512] | : . ' , ; ` | : . ' , ; ` | : .    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:07.512] | : . ' , ; ` | : . ' , ; ` | : .    - tweaked: FALSE
[08:08:07.512] | : . ' , ; ` | : . ' , ; ` | : .    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.513] | : . ' , ; ` | : . ' , ; ` | : . List of 1
[08:08:07.513] | : . ' , ; ` | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.513] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.513] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:08:07.513] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.513] | : . ' , ; ` | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.513] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.513] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.513] | : . ' , ; ` | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.516] | : . ' , ; ` | : . ' , ; ` | : . plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:07.516] | : . ' , ; ` | : . ' , ; ` | : . plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:07.516] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.517] | : . ' , ; ` | : . ' , ; ` | : . ' plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:07.517] | : . ' , ; ` | : . ' , ; ` | : . ' , function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.517] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.517] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "init")= logi TRUE
[08:08:07.517] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.517] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.517] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.517] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.519] | : . ' , ; ` | : . ' , ; ` | : . ' , init: TRUE
[08:08:07.519] | : . ' , ; ` | : . ' , ; ` | : . ' , makeFutureBackend(<sequential>) ...
[08:08:07.519] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Backend function: <‘NULL’>
[08:08:07.519] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Evaluator tweak arguments: [n=0]
[08:08:07.519] | : . ' , ; ` | : . ' , ; ` | : . ' , ;  list()
[08:08:07.520] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Evaluator formal arguments: [n=2]
[08:08:07.520] | : . ' , ; ` | : . ' , ; ` | : . ' , ;  list()
[08:08:07.520] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Backend factory arguments: [n=2]
[08:08:07.520] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Dotted pair list of 2
[08:08:07.520] | : . ' , ; ` | : . ' , ; ` | : . ' , ;  $ gc         : logi FALSE
[08:08:07.520] | : . ' , ; ` | : . ' , ; ` | : . ' , ;  $ earlySignal: logi FALSE
[08:08:07.521] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:07.521] | : . ' , ; ` | : . ' , ; ` | : . ' , makeFutureBackend(<sequential>) ... done
[08:08:07.522] | : . ' , ; ` | : . ' , ; ` | : . ' plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:07.522] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.522] | : . ' , ; ` | : . ' , ; ` | : . plan(): nbrOfWorkers() = 1
[08:08:07.522] | : . ' , ; ` | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:07.522] | : . ' , ; ` | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.524] | : . ' , ; ` | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:07.525] | : . ' , ; ` | : . ' , ; ` | : plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:07.525] | : . ' , ; ` | : . ' , ; ` | : . plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:07.525] | : . ' , ; ` | : . ' , ; ` | : . ' all.equal() for FutureStrategyList ...
[08:08:07.525] | : . ' , ; ` | : . ' , ; ` | : . ' , New stack:
[08:08:07.525] | : . ' , ; ` | : . ' , ; ` | : . ' , List of 1
[08:08:07.525] | : . ' , ; ` | : . ' , ; ` | : . ' ,  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.525] | : . ' , ; ` | : . ' , ; ` | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.525] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.525] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:08:07.525] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.525] | : . ' , ; ` | : . ' , ; ` | : . ' ,     ...)  
[08:08:07.525] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.525] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.525] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategy)
[08:08:07.525] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.525] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.525] | : . ' , ; ` | : . ' , ; ` | : . ' ,     ...)  
[08:08:07.525] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.525] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.530] | : . ' , ; ` | : . ' , ; ` | : . ' , Old stack:
[08:08:07.531] | : . ' , ; ` | : . ' , ; ` | : . ' , List of 1
[08:08:07.531] | : . ' , ; ` | : . ' , ; ` | : . ' ,  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.531] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.531] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:08:07.531] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.531] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.531] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.531] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.531] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f903ed97d0> 
[08:08:07.531] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.531] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.531] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.534] | : . ' , ; ` | : . ' , ; ` | : . ' , Not identical
[08:08:07.534] | : . ' , ; ` | : . ' , ; ` | : . ' , all.equal() for future ...
[08:08:07.534] | : . ' , ; ` | : . ' , ; ` | : . ' , ; List of 2
[08:08:07.534] | : . ' , ; ` | : . ' , ; ` | : . ' , ;  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.534] | : . ' , ; ` | : . ' , ; ` | : . ' , ;     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.534] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.534] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:08:07.534] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.534] | : . ' , ; ` | : . ' , ; ` | : . ' , ;     ...)  
[08:08:07.534] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.534] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.534] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategy)
[08:08:07.534] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.534] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.534] | : . ' , ; ` | : . ' , ; ` | : . ' , ;     ...)  
[08:08:07.534] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.534] | : . ' , ; ` | : . ' , ; ` | : . ' , ;  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.534] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.534] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:08:07.534] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.534] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.534] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.534] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.534] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f903ed97d0> 
[08:08:07.534] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.534] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.540] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Formals differ
[08:08:07.540] | : . ' , ; ` | : . ' , ; ` | : . ' , all.equal() for future ... done
[08:08:07.540] | : . ' , ; ` | : . ' , ; ` | : . ' , Future strategies differ at level 1
[08:08:07.540] | : . ' , ; ` | : . ' , ; ` | : . ' all.equal() for FutureStrategyList ... done
[08:08:07.541] | : . ' , ; ` | : . ' , ; ` | : . ' plan(): Setting new future backend stack:
[08:08:07.541] | : . ' , ; ` | : . ' , ; ` | : . ' List of future strategies:
[08:08:07.541] | : . ' , ; ` | : . ' , ; ` | : . ' 1. multicore:
[08:08:07.541] | : . ' , ; ` | : . ' , ; ` | : . '    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:07.541] | : . ' , ; ` | : . ' , ; ` | : . '    - tweaked: FALSE
[08:08:07.541] | : . ' , ; ` | : . ' , ; ` | : . '    - call: plan(strategy)
[08:08:07.541] | : . ' , ; ` | : . ' , ; ` | : . ' List of 1
[08:08:07.541] | : . ' , ; ` | : . ' , ; ` | : . '  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.541] | : . ' , ; ` | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.541] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.541] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:08:07.541] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.541] | : . ' , ; ` | : . ' , ; ` | : . '     ...)  
[08:08:07.541] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.541] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.541] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:08:07.541] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.541] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.541] | : . ' , ; ` | : . ' , ; ` | : . '     ...)  
[08:08:07.541] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.541] | : . ' , ; ` | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.544] | : . ' , ; ` | : . ' , ; ` | : . ' plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:07.545] | : . ' , ; ` | : . ' , ; ` | : . ' plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:07.545] | : . ' , ; ` | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.546] | : . ' , ; ` | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.547] | : . ' , ; ` | : . ' , ; ` | : . ' plan(): nbrOfWorkers() = 2
[08:08:07.547] | : . ' , ; ` | : . ' , ; ` | : . plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:07.547] | : . ' , ; ` | : . ' , ; ` | : plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.547] | : . ' , ; ` | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.548] | : . ' , ; ` | : . ' , readImmediateCondition() ...
[08:08:07.548] | : . ' , ; ` | : . ' , ; Path: ‘/tmp/RtmpohK6N2/.future/immediateConditions’
[08:08:07.548] | : . ' , ; ` | : . ' , ; Number of RDS files: 0
[08:08:07.548] | : . ' , ; ` | : . ' , ; Returned conditions set:
[08:08:07.549] | : . ' , ; ` | : . ' , ;  list()
[08:08:07.549] | : . ' , ; ` | : . ' , readImmediateCondition() ... done
[08:08:07.550] | : . ' , ; ` | : . ' , result() for MulticoreFuture ...
[08:08:07.550] | : . ' , ; ` | : . ' , result() for MulticoreFuture ... done
[08:08:07.550] | : . ' , ; ` | : . ' , signalConditions() ...
[08:08:07.550] | : . ' , ; ` | : . ' , ; include = ‘immediateCondition’
[08:08:07.550] | : . ' , ; ` | : . ' , ; exclude = 
[08:08:07.550] | : . ' , ; ` | : . ' , ; resignal = FALSE
[08:08:07.551] | : . ' , ; ` | : . ' , ; Number of conditions: 6
[08:08:07.551] | : . ' , ; ` | : . ' , ;  int 6
[08:08:07.551] | : . ' , ; ` | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.551] | : . ' , ; ` | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.552] | : . ' , ; ` | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.552] | : . ' , ; ` | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.552] | : . ' , ; ` | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.552] | : . ' , ; ` | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.552] | : . ' , ; ` | : . ' , signalConditions() ... done
[08:08:07.552] | : . ' , ; ` | : . ' result() for MulticoreFuture ... done
[08:08:07.553] | : . ' , ; ` | : . ' result() for MulticoreFuture ...
[08:08:07.553] | : . ' , ; ` | : . ' result() for MulticoreFuture ... done
[08:08:07.553] | : . ' , ; ` | : . ' signalConditions() ...
[08:08:07.553] | : . ' , ; ` | : . ' , include = ‘immediateCondition’
[08:08:07.553] | : . ' , ; ` | : . ' , exclude = 
[08:08:07.553] | : . ' , ; ` | : . ' , resignal = FALSE
[08:08:07.553] | : . ' , ; ` | : . ' , Number of conditions: 6
[08:08:07.554] | : . ' , ; ` | : . ' ,  int 6
[08:08:07.554] | : . ' , ; ` | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.554] | : . ' , ; ` | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.555] | : . ' , ; ` | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.555] | : . ' , ; ` | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.555] | : . ' , ; ` | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.555] | : . ' , ; ` | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.555] | : . ' , ; ` | : . ' signalConditions() ... done
[08:08:07.555] | : . ' , ; ` | : . ' relay stdout ...
[08:08:07.555] | : . ' , ; ` | : . ' relay stdout ... done
[08:08:07.556] | : . ' , ; ` | : . ' check for misuse ...
[08:08:07.556] | : . ' , ; ` | : . ' check for misuse ... done
[08:08:07.556] | : . ' , ; ` | : . ' relay conditions ...
[08:08:07.556] | : . ' , ; ` | : . ' , Future state: ‘finished’
[08:08:07.556] | : . ' , ; ` | : . ' , result() for MulticoreFuture ...
[08:08:07.556] | : . ' , ; ` | : . ' , result() for MulticoreFuture ... done
[08:08:07.556] | : . ' , ; ` | : . ' , signalConditions() ...
[08:08:07.557] | : . ' , ; ` | : . ' , ; include = ‘condition’
[08:08:07.557] | : . ' , ; ` | : . ' , ; exclude = ‘immediateCondition’
[08:08:07.557] | : . ' , ; ` | : . ' , ; resignal = TRUE
[08:08:07.557] | : . ' , ; ` | : . ' , ; Number of conditions: 6
[08:08:07.557] | : . ' , ; ` | : . ' , ;  int 6
[08:08:07.558] | : . ' , ; ` | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.558] | : . ' , ; ` | : . ' , ; Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.480] | : . ' , ; ` | : . ' , ; ` | attachPackages() ...
[08:08:07.558] | : . ' , ; ` | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.558] | : . ' , ; ` | : . ' , ; Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.481] | : . ' , ; ` | : . ' , ; ` | : packages: [n=1] ‘future’
[08:08:07.558] | : . ' , ; ` | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.558] | : . ' , ; ` | : . ' , ; Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.481] | : . ' , ; ` | : . ' , ; ` | attachPackages() ... done
[08:08:07.559] | : . ' , ; ` | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.559] | : . ' , ; ` | : . ' , ; Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.482] | : . ' , ; ` | : . ' , ; ` | attachPackages() ...
[08:08:07.559] | : . ' , ; ` | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.559] | : . ' , ; ` | : . ' , ; Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.482] | : . ' , ; ` | : . ' , ; ` | : packages: [n=0] 
[08:08:07.564] | : . ' , ; ` | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.565] | : . ' , ; ` | : . ' , ; Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.482] | : . ' , ; ` | : . ' , ; ` | attachPackages() ... done
[08:08:07.565] | : . ' , ; ` | : . ' , signalConditions() ... done
[08:08:07.565] | : . ' , ; ` | : . ' relay conditions ... done
[08:08:07.565] | : . ' , ; ` | : . value() for MulticoreFuture (<unnamed-21>) ... done
c = 1
[08:08:07.565] | : . ' , ; ` | : . future(..., label = NULL) ...
[08:08:07.566] | : . ' , ; ` | : . ' lazy: FALSE
[08:08:07.566] | : . ' , ; ` | : . ' stdout: TRUE
[08:08:07.566] | : . ' , ; ` | : . ' conditions: [n=1] ‘condition’
[08:08:07.566] | : . ' , ; ` | : . ' gc: FALSE
[08:08:07.566] | : . ' , ; ` | : . ' earlySignal: FALSE
[08:08:07.566] | : . ' , ; ` | : . ' getGlobalsAndPackages() ...
[08:08:07.567] | : . ' , ; ` | : . ' , Searching for globals ...
[08:08:07.568] | : . ' , ; ` | : . ' , ; globals found: [0] 
[08:08:07.569] | : . ' , ; ` | : . ' , Searching for globals ... done
[08:08:07.569] | : . ' , ; ` | : . ' , globals: [0] <none>
[08:08:07.569] | : . ' , ; ` | : . ' , packages: [0] <none>
[08:08:07.569] | : . ' , ; ` | : . ' getGlobalsAndPackages() ... done
[08:08:07.570] | : . ' , ; ` | : . ' run() for ‘Future’ (<unnamed-22>) ...
[08:08:07.570] | : . ' , ; ` | : . ' , state: ‘created’
[08:08:07.570] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.570] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.570] | : . ' , ; ` | : . ' , Using MulticoreFutureBackend ...
[08:08:07.570] | : . ' , ; ` | : . ' , ; Number of futures since start: 8 (8 created, 8 launched, 9 finished)
[08:08:07.571] | : . ' , ; ` | : . ' , ; Launching futures ...
[08:08:07.571] | : . ' , ; ` | : . ' , ; ` launchFuture() for MulticoreFutureBackend ...
[08:08:07.571] | : . ' , ; ` | : . ' , ; ` | getFutureData() ...
[08:08:07.571] | : . ' , ; ` | : . ' , ; ` | : getFutureCore() ...
[08:08:07.571] | : . ' , ; ` | : . ' , ; ` | : . Packages needed by the future expression (n = 0): <none>
[08:08:07.571] | : . ' , ; ` | : . ' , ; ` | : getFutureCore() ... done
[08:08:07.572] | : . ' , ; ` | : . ' , ; ` | : getFutureCapture() ...
[08:08:07.572] | : . ' , ; ` | : . ' , ; ` | : getFutureCapture() ... done
[08:08:07.572] | : . ' , ; ` | : . ' , ; ` | : getFutureContext() ...
[08:08:07.572] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.572] | : . ' , ; ` | : . ' , ; ` | : . ' Getting stack without first backend: [n=0] 
[08:08:07.572] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.573] | : . ' , ; ` | : . ' , ; ` | : . Packages needed by future backend (n = 0): <none>
[08:08:07.573] | : . ' , ; ` | : . ' , ; ` | : getFutureContext() ... done
[08:08:07.573] | : . ' , ; ` | : . ' , ; ` | getFutureData() ... done
[08:08:07.573] | : . ' , ; ` | : . ' , ; ` | requestCore(..., workers = 2) ...
[08:08:07.573] | : . ' , ; ` | : . ' , ; ` | requestCore(..., workers = 2) ... done
[08:08:07.575] | : . ' , ; ` | : . ' , ; ` | MulticoreFuture started
[08:08:07.576] | : . ' , ; ` | : . ' , ; ` launchFuture() for MulticoreFutureBackend ... done
[08:08:07.576] | : . ' , ; ` | : . ' , ; Launching futures ... done
[08:08:07.577] | : . ' , ; ` | : . ' , ; Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:07.577] | : . ' , ; ` | : . ' , Using MulticoreFutureBackend ... done
[08:08:07.577] | : . ' , ; ` | : . ' run() for ‘Future’ (<unnamed-22>) ... done
[08:08:07.578] | : . ' , ; ` | : . future(..., label = NULL) ... done
[08:08:07.578] | : . ' , ; ` | : . value() for MulticoreFuture (<unnamed-22>) ...
[08:08:07.578] | : . ' , ; ` | : . ' result() for MulticoreFuture ...
[08:08:07.579] | : . ' , ; ` | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.579] | : . ' , ; ` | : . ' , ; ` | : Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:07.580] | : . ' , ; ` | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.580] | : . ' , ; ` | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:07.581] | : . ' , ; ` | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:07.581] | : . ' , ; ` | : . ' , ; ` | : . all.equal() for FutureStrategyList ...
[08:08:07.581] | : . ' , ; ` | : . ' , ; ` | : . ' New stack:
[08:08:07.581] | : . ' , ; ` | : . ' , ; ` | : . ' List of 1
[08:08:07.581] | : . ' , ; ` | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.581] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.581] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "init")= logi TRUE
[08:08:07.581] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.581] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.581] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.581] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.581] | : . ' , ; ` | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.587] | : . ' , ; ` | : . ' , ; ` | : . ' Old stack:
[08:08:07.587] | : . ' , ; ` | : . ' , ; ` | : . ' List of 1
[08:08:07.587] | : . ' , ; ` | : . ' , ; ` | : . '  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.587] | : . ' , ; ` | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.587] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.587] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:08:07.587] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.587] | : . ' , ; ` | : . ' , ; ` | : . '     ...)  
[08:08:07.587] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.587] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.587] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:08:07.587] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.587] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.587] | : . ' , ; ` | : . ' , ; ` | : . '     ...)  
[08:08:07.587] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.587] | : . ' , ; ` | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.593] | : . ' , ; ` | : . ' , ; ` | : . ' Not identical
[08:08:07.593] | : . ' , ; ` | : . ' , ; ` | : . ' all.equal() for future ...
[08:08:07.593] | : . ' , ; ` | : . ' , ; ` | : . ' , List of 2
[08:08:07.593] | : . ' , ; ` | : . ' , ; ` | : . ' ,  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.593] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.593] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= logi TRUE
[08:08:07.593] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.593] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.593] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.593] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.593] | : . ' , ; ` | : . ' , ; ` | : . ' ,  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.593] | : . ' , ; ` | : . ' , ; ` | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.593] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.593] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:08:07.593] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.593] | : . ' , ; ` | : . ' , ; ` | : . ' ,     ...)  
[08:08:07.593] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.593] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.593] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategy)
[08:08:07.593] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.593] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.593] | : . ' , ; ` | : . ' , ; ` | : . ' ,     ...)  
[08:08:07.593] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.608] | : . ' , ; ` | : . ' , ; ` | : . ' , Formals differ
[08:08:07.608] | : . ' , ; ` | : . ' , ; ` | : . ' all.equal() for future ... done
[08:08:07.608] | : . ' , ; ` | : . ' , ; ` | : . ' Future strategies differ at level 1
[08:08:07.608] | : . ' , ; ` | : . ' , ; ` | : . all.equal() for FutureStrategyList ... done
[08:08:07.609] | : . ' , ; ` | : . ' , ; ` | : . plan(): Setting new future backend stack:
[08:08:07.609] | : . ' , ; ` | : . ' , ; ` | : . List of future strategies:
[08:08:07.609] | : . ' , ; ` | : . ' , ; ` | : . 1. sequential:
[08:08:07.609] | : . ' , ; ` | : . ' , ; ` | : .    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:07.609] | : . ' , ; ` | : . ' , ; ` | : .    - tweaked: FALSE
[08:08:07.609] | : . ' , ; ` | : . ' , ; ` | : .    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.610] | : . ' , ; ` | : . ' , ; ` | : . List of 1
[08:08:07.610] | : . ' , ; ` | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.610] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.610] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:08:07.610] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.610] | : . ' , ; ` | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.610] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.610] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.610] | : . ' , ; ` | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.614] | : . ' , ; ` | : . ' , ; ` | : . plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:07.614] | : . ' , ; ` | : . ' , ; ` | : . plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:07.614] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.614] | : . ' , ; ` | : . ' , ; ` | : . ' plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:07.614] | : . ' , ; ` | : . ' , ; ` | : . ' , function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.614] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.614] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "init")= logi TRUE
[08:08:07.614] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.614] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.614] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.614] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.616] | : . ' , ; ` | : . ' , ; ` | : . ' , init: TRUE
[08:08:07.617] | : . ' , ; ` | : . ' , ; ` | : . ' , makeFutureBackend(<sequential>) ...
[08:08:07.617] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Backend function: <‘NULL’>
[08:08:07.617] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Evaluator tweak arguments: [n=0]
[08:08:07.617] | : . ' , ; ` | : . ' , ; ` | : . ' , ;  list()
[08:08:07.617] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Evaluator formal arguments: [n=2]
[08:08:07.617] | : . ' , ; ` | : . ' , ; ` | : . ' , ;  list()
[08:08:07.618] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Backend factory arguments: [n=2]
[08:08:07.618] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Dotted pair list of 2
[08:08:07.618] | : . ' , ; ` | : . ' , ; ` | : . ' , ;  $ gc         : logi FALSE
[08:08:07.618] | : . ' , ; ` | : . ' , ; ` | : . ' , ;  $ earlySignal: logi FALSE
[08:08:07.619] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:07.619] | : . ' , ; ` | : . ' , ; ` | : . ' , makeFutureBackend(<sequential>) ... done
[08:08:07.619] | : . ' , ; ` | : . ' , ; ` | : . ' plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:07.620] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.620] | : . ' , ; ` | : . ' , ; ` | : . plan(): nbrOfWorkers() = 1
[08:08:07.620] | : . ' , ; ` | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:07.620] | : . ' , ; ` | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.624] | : . ' , ; ` | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:07.625] | : . ' , ; ` | : . ' , ; ` | : plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:07.625] | : . ' , ; ` | : . ' , ; ` | : . plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:07.625] | : . ' , ; ` | : . ' , ; ` | : . ' all.equal() for FutureStrategyList ...
[08:08:07.626] | : . ' , ; ` | : . ' , ; ` | : . ' , New stack:
[08:08:07.626] | : . ' , ; ` | : . ' , ; ` | : . ' , List of 1
[08:08:07.626] | : . ' , ; ` | : . ' , ; ` | : . ' ,  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.626] | : . ' , ; ` | : . ' , ; ` | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.626] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.626] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:08:07.626] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.626] | : . ' , ; ` | : . ' , ; ` | : . ' ,     ...)  
[08:08:07.626] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.626] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.626] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategy)
[08:08:07.626] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.626] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.626] | : . ' , ; ` | : . ' , ; ` | : . ' ,     ...)  
[08:08:07.626] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.626] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.632] | : . ' , ; ` | : . ' , ; ` | : . ' , Old stack:
[08:08:07.634] | : . ' , ; ` | : . ' , ; ` | : . ' , List of 1
[08:08:07.634] | : . ' , ; ` | : . ' , ; ` | : . ' ,  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.634] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.634] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:08:07.634] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.634] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.634] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.634] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.634] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f903aa5230> 
[08:08:07.634] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.634] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.634] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.640] | : . ' , ; ` | : . ' , ; ` | : . ' , Not identical
[08:08:07.641] | : . ' , ; ` | : . ' , ; ` | : . ' , all.equal() for future ...
[08:08:07.641] | : . ' , ; ` | : . ' , ; ` | : . ' , ; List of 2
[08:08:07.641] | : . ' , ; ` | : . ' , ; ` | : . ' , ;  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.641] | : . ' , ; ` | : . ' , ; ` | : . ' , ;     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.641] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.641] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:08:07.641] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.641] | : . ' , ; ` | : . ' , ; ` | : . ' , ;     ...)  
[08:08:07.641] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.641] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.641] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategy)
[08:08:07.641] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.641] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.641] | : . ' , ; ` | : . ' , ; ` | : . ' , ;     ...)  
[08:08:07.641] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.641] | : . ' , ; ` | : . ' , ; ` | : . ' , ;  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.641] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.641] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:08:07.641] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.641] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.641] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.641] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.641] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f903aa5230> 
[08:08:07.641] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.641] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.652] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Formals differ
[08:08:07.653] | : . ' , ; ` | : . ' , ; ` | : . ' , all.equal() for future ... done
[08:08:07.653] | : . ' , ; ` | : . ' , ; ` | : . ' , Future strategies differ at level 1
[08:08:07.653] | : . ' , ; ` | : . ' , ; ` | : . ' all.equal() for FutureStrategyList ... done
[08:08:07.653] | : . ' , ; ` | : . ' , ; ` | : . ' plan(): Setting new future backend stack:
[08:08:07.654] | : . ' , ; ` | : . ' , ; ` | : . ' List of future strategies:
[08:08:07.654] | : . ' , ; ` | : . ' , ; ` | : . ' 1. multicore:
[08:08:07.654] | : . ' , ; ` | : . ' , ; ` | : . '    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:07.654] | : . ' , ; ` | : . ' , ; ` | : . '    - tweaked: FALSE
[08:08:07.654] | : . ' , ; ` | : . ' , ; ` | : . '    - call: plan(strategy)
[08:08:07.654] | : . ' , ; ` | : . ' , ; ` | : . ' List of 1
[08:08:07.654] | : . ' , ; ` | : . ' , ; ` | : . '  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.654] | : . ' , ; ` | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.654] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.654] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:08:07.654] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.654] | : . ' , ; ` | : . ' , ; ` | : . '     ...)  
[08:08:07.654] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.654] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.654] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:08:07.654] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.654] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.654] | : . ' , ; ` | : . ' , ; ` | : . '     ...)  
[08:08:07.654] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.654] | : . ' , ; ` | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.661] | : . ' , ; ` | : . ' , ; ` | : . ' plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:07.661] | : . ' , ; ` | : . ' , ; ` | : . ' plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:07.661] | : . ' , ; ` | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.661] | : . ' , ; ` | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.662] | : . ' , ; ` | : . ' , ; ` | : . ' plan(): nbrOfWorkers() = 2
[08:08:07.662] | : . ' , ; ` | : . ' , ; ` | : . plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:07.662] | : . ' , ; ` | : . ' , ; ` | : plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.662] | : . ' , ; ` | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.663] | : . ' , ; ` | : . ' , readImmediateCondition() ...
[08:08:07.663] | : . ' , ; ` | : . ' , ; Path: ‘/tmp/RtmpohK6N2/.future/immediateConditions’
[08:08:07.664] | : . ' , ; ` | : . ' , ; Number of RDS files: 0
[08:08:07.664] | : . ' , ; ` | : . ' , ; Returned conditions set:
[08:08:07.664] | : . ' , ; ` | : . ' , ;  list()
[08:08:07.665] | : . ' , ; ` | : . ' , readImmediateCondition() ... done
[08:08:07.666] | : . ' , ; ` | : . ' , result() for MulticoreFuture ...
[08:08:07.666] | : . ' , ; ` | : . ' , result() for MulticoreFuture ... done
[08:08:07.666] | : . ' , ; ` | : . ' , signalConditions() ...
[08:08:07.666] | : . ' , ; ` | : . ' , ; include = ‘immediateCondition’
[08:08:07.667] | : . ' , ; ` | : . ' , ; exclude = 
[08:08:07.667] | : . ' , ; ` | : . ' , ; resignal = FALSE
[08:08:07.667] | : . ' , ; ` | : . ' , ; Number of conditions: 6
[08:08:07.667] | : . ' , ; ` | : . ' , ;  int 6
[08:08:07.668] | : . ' , ; ` | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.668] | : . ' , ; ` | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.669] | : . ' , ; ` | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.669] | : . ' , ; ` | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.669] | : . ' , ; ` | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.669] | : . ' , ; ` | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.670] | : . ' , ; ` | : . ' , signalConditions() ... done
[08:08:07.670] | : . ' , ; ` | : . ' result() for MulticoreFuture ... done
[08:08:07.670] | : . ' , ; ` | : . ' result() for MulticoreFuture ...
[08:08:07.670] | : . ' , ; ` | : . ' result() for MulticoreFuture ... done
[08:08:07.671] | : . ' , ; ` | : . ' signalConditions() ...
[08:08:07.671] | : . ' , ; ` | : . ' , include = ‘immediateCondition’
[08:08:07.671] | : . ' , ; ` | : . ' , exclude = 
[08:08:07.671] | : . ' , ; ` | : . ' , resignal = FALSE
[08:08:07.671] | : . ' , ; ` | : . ' , Number of conditions: 6
[08:08:07.672] | : . ' , ; ` | : . ' ,  int 6
[08:08:07.672] | : . ' , ; ` | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.673] | : . ' , ; ` | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.673] | : . ' , ; ` | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.673] | : . ' , ; ` | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.673] | : . ' , ; ` | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.673] | : . ' , ; ` | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.673] | : . ' , ; ` | : . ' signalConditions() ... done
[08:08:07.673] | : . ' , ; ` | : . ' relay stdout ...
[08:08:07.674] | : . ' , ; ` | : . ' relay stdout ... done
[08:08:07.674] | : . ' , ; ` | : . ' check for misuse ...
[08:08:07.674] | : . ' , ; ` | : . ' check for misuse ... done
[08:08:07.674] | : . ' , ; ` | : . ' relay conditions ...
[08:08:07.674] | : . ' , ; ` | : . ' , Future state: ‘finished’
[08:08:07.674] | : . ' , ; ` | : . ' , result() for MulticoreFuture ...
[08:08:07.674] | : . ' , ; ` | : . ' , result() for MulticoreFuture ... done
[08:08:07.675] | : . ' , ; ` | : . ' , signalConditions() ...
[08:08:07.675] | : . ' , ; ` | : . ' , ; include = ‘condition’
[08:08:07.675] | : . ' , ; ` | : . ' , ; exclude = ‘immediateCondition’
[08:08:07.675] | : . ' , ; ` | : . ' , ; resignal = TRUE
[08:08:07.675] | : . ' , ; ` | : . ' , ; Number of conditions: 6
[08:08:07.675] | : . ' , ; ` | : . ' , ;  int 6
[08:08:07.676] | : . ' , ; ` | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.676] | : . ' , ; ` | : . ' , ; Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.577] | : . ' , ; ` | : . ' , ; ` | attachPackages() ...
[08:08:07.676] | : . ' , ; ` | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.676] | : . ' , ; ` | : . ' , ; Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.577] | : . ' , ; ` | : . ' , ; ` | : packages: [n=1] ‘future’
[08:08:07.677] | : . ' , ; ` | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.677] | : . ' , ; ` | : . ' , ; Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.578] | : . ' , ; ` | : . ' , ; ` | attachPackages() ... done
[08:08:07.677] | : . ' , ; ` | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.677] | : . ' , ; ` | : . ' , ; Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.578] | : . ' , ; ` | : . ' , ; ` | attachPackages() ...
[08:08:07.677] | : . ' , ; ` | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.677] | : . ' , ; ` | : . ' , ; Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.578] | : . ' , ; ` | : . ' , ; ` | : packages: [n=0] 
[08:08:07.678] | : . ' , ; ` | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.678] | : . ' , ; ` | : . ' , ; Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.578] | : . ' , ; ` | : . ' , ; ` | attachPackages() ... done
[08:08:07.678] | : . ' , ; ` | : . ' , signalConditions() ... done
[08:08:07.678] | : . ' , ; ` | : . ' relay conditions ... done
[08:08:07.678] | : . ' , ; ` | : . value() for MulticoreFuture (<unnamed-22>) ... done
d = 1
** Nested future assignments
[08:08:07.679] | : . ' , ; ` | : . future(..., label = NULL) ...
[08:08:07.679] | : . ' , ; ` | : . ' lazy: FALSE
[08:08:07.679] | : . ' , ; ` | : . ' stdout: TRUE
[08:08:07.679] | : . ' , ; ` | : . ' conditions: [n=1] ‘condition’
[08:08:07.679] | : . ' , ; ` | : . ' gc: FALSE
[08:08:07.679] | : . ' , ; ` | : . ' earlySignal: FALSE
[08:08:07.680] | : . ' , ; ` | : . ' getGlobalsAndPackages() ...
[08:08:07.680] | : . ' , ; ` | : . ' , Searching for globals ...
[08:08:07.718] | : . ' , ; ` | : . ' , ; globals found: [5] ‘{’, ‘<-’, ‘%<-%’, ‘%->%’, ‘+’
[08:08:07.718] | : . ' , ; ` | : . ' , Searching for globals ... done
[08:08:07.718] | : . ' , ; ` | : . ' , Resolving globals: FALSE
[08:08:07.718] | : . ' , ; ` | : . ' , Search for packages associated with the globals ...
[08:08:07.718] | : . ' , ; ` | : . ' , ; Packages associated with globals: [2] ‘base’, ‘future’
[08:08:07.719] | : . ' , ; ` | : . ' , ; Packages: [2] ‘base’, ‘future’
[08:08:07.719] | : . ' , ; ` | : . ' , Search for packages associated with the globals ... done
[08:08:07.719] | : . ' , ; ` | : . ' , Packages after dropping 'base': [1] ‘future’
[08:08:07.719] | : . ' , ; ` | : . ' , Packages after dropping non-attached packages: [1] ‘future’
[08:08:07.719] | : . ' , ; ` | : . ' , globals: [0] 
[08:08:07.719] | : . ' , ; ` | : . ' , packages: [1] ‘future’
[08:08:07.719] | : . ' , ; ` | : . ' getGlobalsAndPackages() ... done
[08:08:07.720] | : . ' , ; ` | : . ' run() for ‘Future’ (<unnamed-23>) ...
[08:08:07.720] | : . ' , ; ` | : . ' , state: ‘created’
[08:08:07.720] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.720] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.720] | : . ' , ; ` | : . ' , Using MulticoreFutureBackend ...
[08:08:07.720] | : . ' , ; ` | : . ' , ; Number of futures since start: 9 (9 created, 9 launched, 10 finished)
[08:08:07.720] | : . ' , ; ` | : . ' , ; Launching futures ...
[08:08:07.721] | : . ' , ; ` | : . ' , ; ` launchFuture() for MulticoreFutureBackend ...
[08:08:07.721] | : . ' , ; ` | : . ' , ; ` | getFutureData() ...
[08:08:07.721] | : . ' , ; ` | : . ' , ; ` | : getFutureCore() ...
[08:08:07.721] | : . ' , ; ` | : . ' , ; ` | : . Packages needed by the future expression (n = 1): ‘future’
[08:08:07.721] | : . ' , ; ` | : . ' , ; ` | : getFutureCore() ... done
[08:08:07.721] | : . ' , ; ` | : . ' , ; ` | : getFutureCapture() ...
[08:08:07.721] | : . ' , ; ` | : . ' , ; ` | : getFutureCapture() ... done
[08:08:07.721] | : . ' , ; ` | : . ' , ; ` | : getFutureContext() ...
[08:08:07.721] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.722] | : . ' , ; ` | : . ' , ; ` | : . ' Getting stack without first backend: [n=0] 
[08:08:07.722] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.722] | : . ' , ; ` | : . ' , ; ` | : . Packages needed by future backend (n = 0): <none>
[08:08:07.722] | : . ' , ; ` | : . ' , ; ` | : getFutureContext() ... done
[08:08:07.722] | : . ' , ; ` | : . ' , ; ` | getFutureData() ... done
[08:08:07.722] | : . ' , ; ` | : . ' , ; ` | requestCore(..., workers = 2) ...
[08:08:07.723] | : . ' , ; ` | : . ' , ; ` | requestCore(..., workers = 2) ... done
[08:08:07.725] | : . ' , ; ` | : . ' , ; ` | MulticoreFuture started
[08:08:07.725] | : . ' , ; ` | : . ' , ; ` launchFuture() for MulticoreFutureBackend ... done
[08:08:07.726] | : . ' , ; ` | : . ' , ; Launching futures ... done
[08:08:07.726] | : . ' , ; ` | : . ' , ; Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:07.726] | : . ' , ; ` | : . ' , Using MulticoreFutureBackend ... done
[08:08:07.727] | : . ' , ; ` | : . ' run() for ‘Future’ (<unnamed-23>) ... done
[08:08:07.727] | : . ' , ; ` | : . future(..., label = NULL) ... done
[08:08:07.727] | : . ' , ; ` | : . value() for MulticoreFuture (<unnamed-23>) ...
[08:08:07.728] | : . ' , ; ` | : . ' result() for MulticoreFuture ...
[08:08:07.728] | : . ' , ; ` | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.729] | : . ' , ; ` | : . ' , ; ` | : Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:07.729] | : . ' , ; ` | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.729] | : . ' , ; ` | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:07.730] | : . ' , ; ` | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:07.730] | : . ' , ; ` | : . ' , ; ` | : . all.equal() for FutureStrategyList ...
[08:08:07.730] | : . ' , ; ` | : . ' , ; ` | : . ' New stack:
[08:08:07.731] | : . ' , ; ` | : . ' , ; ` | : . ' List of 1
[08:08:07.731] | : . ' , ; ` | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.731] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.731] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "init")= logi TRUE
[08:08:07.731] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.731] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.731] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.731] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.731] | : . ' , ; ` | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.736] | : . ' , ; ` | : . ' , ; ` | : . ' Old stack:
[08:08:07.736] | : . ' , ; ` | : . ' , ; ` | : . ' List of 1
[08:08:07.736] | : . ' , ; ` | : . ' , ; ` | : . '  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.736] | : . ' , ; ` | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.736] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.736] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:08:07.736] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.736] | : . ' , ; ` | : . ' , ; ` | : . '     ...)  
[08:08:07.736] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.736] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.736] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:08:07.736] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.736] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.736] | : . ' , ; ` | : . ' , ; ` | : . '     ...)  
[08:08:07.736] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.736] | : . ' , ; ` | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.742] | : . ' , ; ` | : . ' , ; ` | : . ' Not identical
[08:08:07.742] | : . ' , ; ` | : . ' , ; ` | : . ' all.equal() for future ...
[08:08:07.742] | : . ' , ; ` | : . ' , ; ` | : . ' , List of 2
[08:08:07.742] | : . ' , ; ` | : . ' , ; ` | : . ' ,  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.742] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.742] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= logi TRUE
[08:08:07.742] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.742] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.742] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.742] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.742] | : . ' , ; ` | : . ' , ; ` | : . ' ,  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.742] | : . ' , ; ` | : . ' , ; ` | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.742] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.742] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:08:07.742] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.742] | : . ' , ; ` | : . ' , ; ` | : . ' ,     ...)  
[08:08:07.742] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.742] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.742] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategy)
[08:08:07.742] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.742] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.742] | : . ' , ; ` | : . ' , ; ` | : . ' ,     ...)  
[08:08:07.742] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.754] | : . ' , ; ` | : . ' , ; ` | : . ' , Formals differ
[08:08:07.754] | : . ' , ; ` | : . ' , ; ` | : . ' all.equal() for future ... done
[08:08:07.754] | : . ' , ; ` | : . ' , ; ` | : . ' Future strategies differ at level 1
[08:08:07.754] | : . ' , ; ` | : . ' , ; ` | : . all.equal() for FutureStrategyList ... done
[08:08:07.754] | : . ' , ; ` | : . ' , ; ` | : . plan(): Setting new future backend stack:
[08:08:07.755] | : . ' , ; ` | : . ' , ; ` | : . List of future strategies:
[08:08:07.755] | : . ' , ; ` | : . ' , ; ` | : . 1. sequential:
[08:08:07.755] | : . ' , ; ` | : . ' , ; ` | : .    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:07.755] | : . ' , ; ` | : . ' , ; ` | : .    - tweaked: FALSE
[08:08:07.755] | : . ' , ; ` | : . ' , ; ` | : .    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.756] | : . ' , ; ` | : . ' , ; ` | : . List of 1
[08:08:07.756] | : . ' , ; ` | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.756] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.756] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:08:07.756] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.756] | : . ' , ; ` | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.756] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.756] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.756] | : . ' , ; ` | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.759] | : . ' , ; ` | : . ' , ; ` | : . plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:07.759] | : . ' , ; ` | : . ' , ; ` | : . plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:07.759] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.760] | : . ' , ; ` | : . ' , ; ` | : . ' plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:07.760] | : . ' , ; ` | : . ' , ; ` | : . ' , function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.760] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.760] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "init")= logi TRUE
[08:08:07.760] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.760] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.760] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.760] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.762] | : . ' , ; ` | : . ' , ; ` | : . ' , init: TRUE
[08:08:07.762] | : . ' , ; ` | : . ' , ; ` | : . ' , makeFutureBackend(<sequential>) ...
[08:08:07.762] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Backend function: <‘NULL’>
[08:08:07.762] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Evaluator tweak arguments: [n=0]
[08:08:07.762] | : . ' , ; ` | : . ' , ; ` | : . ' , ;  list()
[08:08:07.762] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Evaluator formal arguments: [n=2]
[08:08:07.763] | : . ' , ; ` | : . ' , ; ` | : . ' , ;  list()
[08:08:07.763] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Backend factory arguments: [n=2]
[08:08:07.763] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Dotted pair list of 2
[08:08:07.763] | : . ' , ; ` | : . ' , ; ` | : . ' , ;  $ gc         : logi FALSE
[08:08:07.763] | : . ' , ; ` | : . ' , ; ` | : . ' , ;  $ earlySignal: logi FALSE
[08:08:07.764] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:07.764] | : . ' , ; ` | : . ' , ; ` | : . ' , makeFutureBackend(<sequential>) ... done
[08:08:07.764] | : . ' , ; ` | : . ' , ; ` | : . ' plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:07.764] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.765] | : . ' , ; ` | : . ' , ; ` | : . plan(): nbrOfWorkers() = 1
[08:08:07.765] | : . ' , ; ` | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:07.765] | : . ' , ; ` | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.854] | : . ' , ; ` | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:07.854] | : . ' , ; ` | : . ' , ; ` | : plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:07.854] | : . ' , ; ` | : . ' , ; ` | : . plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:07.854] | : . ' , ; ` | : . ' , ; ` | : . ' all.equal() for FutureStrategyList ...
[08:08:07.855] | : . ' , ; ` | : . ' , ; ` | : . ' , New stack:
[08:08:07.855] | : . ' , ; ` | : . ' , ; ` | : . ' , List of 1
[08:08:07.855] | : . ' , ; ` | : . ' , ; ` | : . ' ,  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.855] | : . ' , ; ` | : . ' , ; ` | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.855] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.855] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:08:07.855] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.855] | : . ' , ; ` | : . ' , ; ` | : . ' ,     ...)  
[08:08:07.855] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.855] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.855] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategy)
[08:08:07.855] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.855] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.855] | : . ' , ; ` | : . ' , ; ` | : . ' ,     ...)  
[08:08:07.855] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.855] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.858] | : . ' , ; ` | : . ' , ; ` | : . ' , Old stack:
[08:08:07.858] | : . ' , ; ` | : . ' , ; ` | : . ' , List of 1
[08:08:07.858] | : . ' , ; ` | : . ' , ; ` | : . ' ,  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.858] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.858] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:08:07.858] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.858] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.858] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.858] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.858] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f903aa0110> 
[08:08:07.858] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.858] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.858] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.863] | : . ' , ; ` | : . ' , ; ` | : . ' , Not identical
[08:08:07.863] | : . ' , ; ` | : . ' , ; ` | : . ' , all.equal() for future ...
[08:08:07.863] | : . ' , ; ` | : . ' , ; ` | : . ' , ; List of 2
[08:08:07.863] | : . ' , ; ` | : . ' , ; ` | : . ' , ;  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.863] | : . ' , ; ` | : . ' , ; ` | : . ' , ;     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.863] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.863] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:08:07.863] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.863] | : . ' , ; ` | : . ' , ; ` | : . ' , ;     ...)  
[08:08:07.863] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.863] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.863] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategy)
[08:08:07.863] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.863] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.863] | : . ' , ; ` | : . ' , ; ` | : . ' , ;     ...)  
[08:08:07.863] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.863] | : . ' , ; ` | : . ' , ; ` | : . ' , ;  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.863] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.863] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:08:07.863] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.863] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.863] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.863] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.863] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f903aa0110> 
[08:08:07.863] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.863] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.869] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Formals differ
[08:08:07.869] | : . ' , ; ` | : . ' , ; ` | : . ' , all.equal() for future ... done
[08:08:07.869] | : . ' , ; ` | : . ' , ; ` | : . ' , Future strategies differ at level 1
[08:08:07.869] | : . ' , ; ` | : . ' , ; ` | : . ' all.equal() for FutureStrategyList ... done
[08:08:07.869] | : . ' , ; ` | : . ' , ; ` | : . ' plan(): Setting new future backend stack:
[08:08:07.869] | : . ' , ; ` | : . ' , ; ` | : . ' List of future strategies:
[08:08:07.869] | : . ' , ; ` | : . ' , ; ` | : . ' 1. multicore:
[08:08:07.869] | : . ' , ; ` | : . ' , ; ` | : . '    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:07.869] | : . ' , ; ` | : . ' , ; ` | : . '    - tweaked: FALSE
[08:08:07.869] | : . ' , ; ` | : . ' , ; ` | : . '    - call: plan(strategy)
[08:08:07.869] | : . ' , ; ` | : . ' , ; ` | : . ' List of 1
[08:08:07.869] | : . ' , ; ` | : . ' , ; ` | : . '  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:07.869] | : . ' , ; ` | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:08:07.869] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:07.869] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:08:07.869] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.869] | : . ' , ; ` | : . ' , ; ` | : . '     ...)  
[08:08:07.869] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.869] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.869] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:08:07.869] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:07.869] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:07.869] | : . ' , ; ` | : . ' , ; ` | : . '     ...)  
[08:08:07.869] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:07.869] | : . ' , ; ` | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.873] | : . ' , ; ` | : . ' , ; ` | : . ' plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:07.873] | : . ' , ; ` | : . ' , ; ` | : . ' plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:07.873] | : . ' , ; ` | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.873] | : . ' , ; ` | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.873] | : . ' , ; ` | : . ' , ; ` | : . ' plan(): nbrOfWorkers() = 2
[08:08:07.873] | : . ' , ; ` | : . ' , ; ` | : . plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:07.873] | : . ' , ; ` | : . ' , ; ` | : plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.873] | : . ' , ; ` | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.876] | : . ' , ; ` | : . ' , readImmediateCondition() ...
[08:08:07.876] | : . ' , ; ` | : . ' , ; Path: ‘/tmp/RtmpohK6N2/.future/immediateConditions’
[08:08:07.876] | : . ' , ; ` | : . ' , ; Number of RDS files: 0
[08:08:07.876] | : . ' , ; ` | : . ' , ; Returned conditions set:
[08:08:07.877] | : . ' , ; ` | : . ' , ;  list()
[08:08:07.877] | : . ' , ; ` | : . ' , readImmediateCondition() ... done
[08:08:07.878] | : . ' , ; ` | : . ' , result() for MulticoreFuture ...
[08:08:07.878] | : . ' , ; ` | : . ' , result() for MulticoreFuture ... done
[08:08:07.878] | : . ' , ; ` | : . ' , signalConditions() ...
[08:08:07.878] | : . ' , ; ` | : . ' , ; include = ‘immediateCondition’
[08:08:07.878] | : . ' , ; ` | : . ' , ; exclude = 
[08:08:07.878] | : . ' , ; ` | : . ' , ; resignal = FALSE
[08:08:07.878] | : . ' , ; ` | : . ' , ; Number of conditions: 276
[08:08:07.879] | : . ' , ; ` | : . ' , ;  int 276
[08:08:07.879] | : . ' , ; ` | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.879] | : . ' , ; ` | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.880] | : . ' , ; ` | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.880] | : . ' , ; ` | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.880] | : . ' , ; ` | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.880] | : . ' , ; ` | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.880] | : . ' , ; ` | : . ' , ; Condition #7 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.880] | : . ' , ; ` | : . ' , ; Condition #8 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.880] | : . ' , ; ` | : . ' , ; Condition #9 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.881] | : . ' , ; ` | : . ' , ; Condition #10 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.881] | : . ' , ; ` | : . ' , ; Condition #11 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.881] | : . ' , ; ` | : . ' , ; Condition #12 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.881] | : . ' , ; ` | : . ' , ; Condition #13 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.881] | : . ' , ; ` | : . ' , ; Condition #14 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.881] | : . ' , ; ` | : . ' , ; Condition #15 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.881] | : . ' , ; ` | : . ' , ; Condition #16 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.882] | : . ' , ; ` | : . ' , ; Condition #17 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.882] | : . ' , ; ` | : . ' , ; Condition #18 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.882] | : . ' , ; ` | : . ' , ; Condition #19 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.882] | : . ' , ; ` | : . ' , ; Condition #20 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.882] | : . ' , ; ` | : . ' , ; Condition #21 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.882] | : . ' , ; ` | : . ' , ; Condition #22 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.882] | : . ' , ; ` | : . ' , ; Condition #23 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.883] | : . ' , ; ` | : . ' , ; Condition #24 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.883] | : . ' , ; ` | : . ' , ; Condition #25 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.883] | : . ' , ; ` | : . ' , ; Condition #26 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.883] | : . ' , ; ` | : . ' , ; Condition #27 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.883] | : . ' , ; ` | : . ' , ; Condition #28 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.883] | : . ' , ; ` | : . ' , ; Condition #29 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.883] | : . ' , ; ` | : . ' , ; Condition #30 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.884] | : . ' , ; ` | : . ' , ; Condition #31 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.884] | : . ' , ; ` | : . ' , ; Condition #32 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.884] | : . ' , ; ` | : . ' , ; Condition #33 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.884] | : . ' , ; ` | : . ' , ; Condition #34 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.884] | : . ' , ; ` | : . ' , ; Condition #35 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.884] | : . ' , ; ` | : . ' , ; Condition #36 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.884] | : . ' , ; ` | : . ' , ; Condition #37 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.885] | : . ' , ; ` | : . ' , ; Condition #38 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.885] | : . ' , ; ` | : . ' , ; Condition #39 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.885] | : . ' , ; ` | : . ' , ; Condition #40 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.885] | : . ' , ; ` | : . ' , ; Condition #41 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.885] | : . ' , ; ` | : . ' , ; Condition #42 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.885] | : . ' , ; ` | : . ' , ; Condition #43 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.885] | : . ' , ; ` | : . ' , ; Condition #44 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.886] | : . ' , ; ` | : . ' , ; Condition #45 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.886] | : . ' , ; ` | : . ' , ; Condition #46 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.886] | : . ' , ; ` | : . ' , ; Condition #47 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.886] | : . ' , ; ` | : . ' , ; Condition #48 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.886] | : . ' , ; ` | : . ' , ; Condition #49 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.886] | : . ' , ; ` | : . ' , ; Condition #50 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.886] | : . ' , ; ` | : . ' , ; Condition #51 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.887] | : . ' , ; ` | : . ' , ; Condition #52 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.887] | : . ' , ; ` | : . ' , ; Condition #53 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.887] | : . ' , ; ` | : . ' , ; Condition #54 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.887] | : . ' , ; ` | : . ' , ; Condition #55 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.887] | : . ' , ; ` | : . ' , ; Condition #56 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.887] | : . ' , ; ` | : . ' , ; Condition #57 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.887] | : . ' , ; ` | : . ' , ; Condition #58 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.888] | : . ' , ; ` | : . ' , ; Condition #59 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.888] | : . ' , ; ` | : . ' , ; Condition #60 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.888] | : . ' , ; ` | : . ' , ; Condition #61 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.888] | : . ' , ; ` | : . ' , ; Condition #62 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.888] | : . ' , ; ` | : . ' , ; Condition #63 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.888] | : . ' , ; ` | : . ' , ; Condition #64 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.888] | : . ' , ; ` | : . ' , ; Condition #65 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.889] | : . ' , ; ` | : . ' , ; Condition #66 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.889] | : . ' , ; ` | : . ' , ; Condition #67 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.889] | : . ' , ; ` | : . ' , ; Condition #68 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.889] | : . ' , ; ` | : . ' , ; Condition #69 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.889] | : . ' , ; ` | : . ' , ; Condition #70 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.889] | : . ' , ; ` | : . ' , ; Condition #71 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.891] | : . ' , ; ` | : . ' , ; Condition #72 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.892] | : . ' , ; ` | : . ' , ; Condition #73 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.892] | : . ' , ; ` | : . ' , ; Condition #74 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.892] | : . ' , ; ` | : . ' , ; Condition #75 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.892] | : . ' , ; ` | : . ' , ; Condition #76 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.892] | : . ' , ; ` | : . ' , ; Condition #77 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.893] | : . ' , ; ` | : . ' , ; Condition #78 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.893] | : . ' , ; ` | : . ' , ; Condition #79 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.893] | : . ' , ; ` | : . ' , ; Condition #80 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.893] | : . ' , ; ` | : . ' , ; Condition #81 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.893] | : . ' , ; ` | : . ' , ; Condition #82 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.893] | : . ' , ; ` | : . ' , ; Condition #83 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.893] | : . ' , ; ` | : . ' , ; Condition #84 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.894] | : . ' , ; ` | : . ' , ; Condition #85 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.894] | : . ' , ; ` | : . ' , ; Condition #86 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.894] | : . ' , ; ` | : . ' , ; Condition #87 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.894] | : . ' , ; ` | : . ' , ; Condition #88 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.894] | : . ' , ; ` | : . ' , ; Condition #89 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.894] | : . ' , ; ` | : . ' , ; Condition #90 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.895] | : . ' , ; ` | : . ' , ; Condition #91 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.895] | : . ' , ; ` | : . ' , ; Condition #92 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.895] | : . ' , ; ` | : . ' , ; Condition #93 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.895] | : . ' , ; ` | : . ' , ; Condition #94 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.895] | : . ' , ; ` | : . ' , ; Condition #95 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.895] | : . ' , ; ` | : . ' , ; Condition #96 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.895] | : . ' , ; ` | : . ' , ; Condition #97 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.896] | : . ' , ; ` | : . ' , ; Condition #98 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.896] | : . ' , ; ` | : . ' , ; Condition #99 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.896] | : . ' , ; ` | : . ' , ; Condition #100 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.896] | : . ' , ; ` | : . ' , ; Condition #101 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.896] | : . ' , ; ` | : . ' , ; Condition #102 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.897] | : . ' , ; ` | : . ' , ; Condition #103 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.897] | : . ' , ; ` | : . ' , ; Condition #104 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.897] | : . ' , ; ` | : . ' , ; Condition #105 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.897] | : . ' , ; ` | : . ' , ; Condition #106 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.897] | : . ' , ; ` | : . ' , ; Condition #107 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.897] | : . ' , ; ` | : . ' , ; Condition #108 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.897] | : . ' , ; ` | : . ' , ; Condition #109 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.898] | : . ' , ; ` | : . ' , ; Condition #110 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.898] | : . ' , ; ` | : . ' , ; Condition #111 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.898] | : . ' , ; ` | : . ' , ; Condition #112 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.898] | : . ' , ; ` | : . ' , ; Condition #113 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.898] | : . ' , ; ` | : . ' , ; Condition #114 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.898] | : . ' , ; ` | : . ' , ; Condition #115 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.898] | : . ' , ; ` | : . ' , ; Condition #116 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.899] | : . ' , ; ` | : . ' , ; Condition #117 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.899] | : . ' , ; ` | : . ' , ; Condition #118 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.899] | : . ' , ; ` | : . ' , ; Condition #119 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.899] | : . ' , ; ` | : . ' , ; Condition #120 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.899] | : . ' , ; ` | : . ' , ; Condition #121 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.899] | : . ' , ; ` | : . ' , ; Condition #122 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.899] | : . ' , ; ` | : . ' , ; Condition #123 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.899] | : . ' , ; ` | : . ' , ; Condition #124 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.899] | : . ' , ; ` | : . ' , ; Condition #125 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.900] | : . ' , ; ` | : . ' , ; Condition #126 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.900] | : . ' , ; ` | : . ' , ; Condition #127 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.900] | : . ' , ; ` | : . ' , ; Condition #128 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.900] | : . ' , ; ` | : . ' , ; Condition #129 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.900] | : . ' , ; ` | : . ' , ; Condition #130 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.900] | : . ' , ; ` | : . ' , ; Condition #131 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.900] | : . ' , ; ` | : . ' , ; Condition #132 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.900] | : . ' , ; ` | : . ' , ; Condition #133 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.900] | : . ' , ; ` | : . ' , ; Condition #134 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.900] | : . ' , ; ` | : . ' , ; Condition #135 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.901] | : . ' , ; ` | : . ' , ; Condition #136 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.901] | : . ' , ; ` | : . ' , ; Condition #137 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.901] | : . ' , ; ` | : . ' , ; Condition #138 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.901] | : . ' , ; ` | : . ' , ; Condition #139 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.901] | : . ' , ; ` | : . ' , ; Condition #140 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.901] | : . ' , ; ` | : . ' , ; Condition #141 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.901] | : . ' , ; ` | : . ' , ; Condition #142 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.901] | : . ' , ; ` | : . ' , ; Condition #143 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.901] | : . ' , ; ` | : . ' , ; Condition #144 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.902] | : . ' , ; ` | : . ' , ; Condition #145 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.902] | : . ' , ; ` | : . ' , ; Condition #146 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.902] | : . ' , ; ` | : . ' , ; Condition #147 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.902] | : . ' , ; ` | : . ' , ; Condition #148 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.902] | : . ' , ; ` | : . ' , ; Condition #149 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.902] | : . ' , ; ` | : . ' , ; Condition #150 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.902] | : . ' , ; ` | : . ' , ; Condition #151 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.902] | : . ' , ; ` | : . ' , ; Condition #152 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.902] | : . ' , ; ` | : . ' , ; Condition #153 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.902] | : . ' , ; ` | : . ' , ; Condition #154 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.903] | : . ' , ; ` | : . ' , ; Condition #155 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.903] | : . ' , ; ` | : . ' , ; Condition #156 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.903] | : . ' , ; ` | : . ' , ; Condition #157 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.903] | : . ' , ; ` | : . ' , ; Condition #158 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.903] | : . ' , ; ` | : . ' , ; Condition #159 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.903] | : . ' , ; ` | : . ' , ; Condition #160 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.903] | : . ' , ; ` | : . ' , ; Condition #161 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.903] | : . ' , ; ` | : . ' , ; Condition #162 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.903] | : . ' , ; ` | : . ' , ; Condition #163 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.903] | : . ' , ; ` | : . ' , ; Condition #164 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.904] | : . ' , ; ` | : . ' , ; Condition #165 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.904] | : . ' , ; ` | : . ' , ; Condition #166 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.904] | : . ' , ; ` | : . ' , ; Condition #167 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.904] | : . ' , ; ` | : . ' , ; Condition #168 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.904] | : . ' , ; ` | : . ' , ; Condition #169 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.904] | : . ' , ; ` | : . ' , ; Condition #170 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.904] | : . ' , ; ` | : . ' , ; Condition #171 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.904] | : . ' , ; ` | : . ' , ; Condition #172 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.904] | : . ' , ; ` | : . ' , ; Condition #173 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.904] | : . ' , ; ` | : . ' , ; Condition #174 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.905] | : . ' , ; ` | : . ' , ; Condition #175 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.905] | : . ' , ; ` | : . ' , ; Condition #176 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.905] | : . ' , ; ` | : . ' , ; Condition #177 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.905] | : . ' , ; ` | : . ' , ; Condition #178 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.905] | : . ' , ; ` | : . ' , ; Condition #179 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.905] | : . ' , ; ` | : . ' , ; Condition #180 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.905] | : . ' , ; ` | : . ' , ; Condition #181 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.905] | : . ' , ; ` | : . ' , ; Condition #182 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.905] | : . ' , ; ` | : . ' , ; Condition #183 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.906] | : . ' , ; ` | : . ' , ; Condition #184 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.906] | : . ' , ; ` | : . ' , ; Condition #185 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.906] | : . ' , ; ` | : . ' , ; Condition #186 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.906] | : . ' , ; ` | : . ' , ; Condition #187 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.906] | : . ' , ; ` | : . ' , ; Condition #188 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.906] | : . ' , ; ` | : . ' , ; Condition #189 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.906] | : . ' , ; ` | : . ' , ; Condition #190 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.906] | : . ' , ; ` | : . ' , ; Condition #191 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.906] | : . ' , ; ` | : . ' , ; Condition #192 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.906] | : . ' , ; ` | : . ' , ; Condition #193 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.907] | : . ' , ; ` | : . ' , ; Condition #194 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.907] | : . ' , ; ` | : . ' , ; Condition #195 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.907] | : . ' , ; ` | : . ' , ; Condition #196 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.907] | : . ' , ; ` | : . ' , ; Condition #197 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.907] | : . ' , ; ` | : . ' , ; Condition #198 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.907] | : . ' , ; ` | : . ' , ; Condition #199 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.907] | : . ' , ; ` | : . ' , ; Condition #200 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.907] | : . ' , ; ` | : . ' , ; Condition #201 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.907] | : . ' , ; ` | : . ' , ; Condition #202 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.907] | : . ' , ; ` | : . ' , ; Condition #203 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.908] | : . ' , ; ` | : . ' , ; Condition #204 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.908] | : . ' , ; ` | : . ' , ; Condition #205 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.908] | : . ' , ; ` | : . ' , ; Condition #206 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.908] | : . ' , ; ` | : . ' , ; Condition #207 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.908] | : . ' , ; ` | : . ' , ; Condition #208 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.908] | : . ' , ; ` | : . ' , ; Condition #209 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.908] | : . ' , ; ` | : . ' , ; Condition #210 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.908] | : . ' , ; ` | : . ' , ; Condition #211 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.908] | : . ' , ; ` | : . ' , ; Condition #212 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.908] | : . ' , ; ` | : . ' , ; Condition #213 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.908] | : . ' , ; ` | : . ' , ; Condition #214 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.909] | : . ' , ; ` | : . ' , ; Condition #215 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.909] | : . ' , ; ` | : . ' , ; Condition #216 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.909] | : . ' , ; ` | : . ' , ; Condition #217 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.909] | : . ' , ; ` | : . ' , ; Condition #218 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.910] | : . ' , ; ` | : . ' , ; Condition #219 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.910] | : . ' , ; ` | : . ' , ; Condition #220 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.910] | : . ' , ; ` | : . ' , ; Condition #221 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.910] | : . ' , ; ` | : . ' , ; Condition #222 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.911] | : . ' , ; ` | : . ' , ; Condition #223 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.911] | : . ' , ; ` | : . ' , ; Condition #224 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.911] | : . ' , ; ` | : . ' , ; Condition #225 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.911] | : . ' , ; ` | : . ' , ; Condition #226 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.911] | : . ' , ; ` | : . ' , ; Condition #227 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.911] | : . ' , ; ` | : . ' , ; Condition #228 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.911] | : . ' , ; ` | : . ' , ; Condition #229 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.911] | : . ' , ; ` | : . ' , ; Condition #230 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.911] | : . ' , ; ` | : . ' , ; Condition #231 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.912] | : . ' , ; ` | : . ' , ; Condition #232 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.912] | : . ' , ; ` | : . ' , ; Condition #233 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.912] | : . ' , ; ` | : . ' , ; Condition #234 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.912] | : . ' , ; ` | : . ' , ; Condition #235 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.912] | : . ' , ; ` | : . ' , ; Condition #236 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.912] | : . ' , ; ` | : . ' , ; Condition #237 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.912] | : . ' , ; ` | : . ' , ; Condition #238 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.912] | : . ' , ; ` | : . ' , ; Condition #239 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.912] | : . ' , ; ` | : . ' , ; Condition #240 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.913] | : . ' , ; ` | : . ' , ; Condition #241 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.913] | : . ' , ; ` | : . ' , ; Condition #242 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.913] | : . ' , ; ` | : . ' , ; Condition #243 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.913] | : . ' , ; ` | : . ' , ; Condition #244 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.913] | : . ' , ; ` | : . ' , ; Condition #245 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.913] | : . ' , ; ` | : . ' , ; Condition #246 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.913] | : . ' , ; ` | : . ' , ; Condition #247 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.913] | : . ' , ; ` | : . ' , ; Condition #248 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.913] | : . ' , ; ` | : . ' , ; Condition #249 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.913] | : . ' , ; ` | : . ' , ; Condition #250 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.914] | : . ' , ; ` | : . ' , ; Condition #251 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.914] | : . ' , ; ` | : . ' , ; Condition #252 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.914] | : . ' , ; ` | : . ' , ; Condition #253 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.914] | : . ' , ; ` | : . ' , ; Condition #254 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.914] | : . ' , ; ` | : . ' , ; Condition #255 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.914] | : . ' , ; ` | : . ' , ; Condition #256 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.914] | : . ' , ; ` | : . ' , ; Condition #257 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.914] | : . ' , ; ` | : . ' , ; Condition #258 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.914] | : . ' , ; ` | : . ' , ; Condition #259 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.915] | : . ' , ; ` | : . ' , ; Condition #260 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.915] | : . ' , ; ` | : . ' , ; Condition #261 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.915] | : . ' , ; ` | : . ' , ; Condition #262 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.915] | : . ' , ; ` | : . ' , ; Condition #263 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.915] | : . ' , ; ` | : . ' , ; Condition #264 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.915] | : . ' , ; ` | : . ' , ; Condition #265 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.915] | : . ' , ; ` | : . ' , ; Condition #266 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.915] | : . ' , ; ` | : . ' , ; Condition #267 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.915] | : . ' , ; ` | : . ' , ; Condition #268 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.915] | : . ' , ; ` | : . ' , ; Condition #269 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.915] | : . ' , ; ` | : . ' , ; Condition #270 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.916] | : . ' , ; ` | : . ' , ; Condition #271 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.916] | : . ' , ; ` | : . ' , ; Condition #272 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.916] | : . ' , ; ` | : . ' , ; Condition #273 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.916] | : . ' , ; ` | : . ' , ; Condition #274 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.916] | : . ' , ; ` | : . ' , ; Condition #275 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.916] | : . ' , ; ` | : . ' , ; Condition #276 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.916] | : . ' , ; ` | : . ' , signalConditions() ... done
[08:08:07.916] | : . ' , ; ` | : . ' result() for MulticoreFuture ... done
[08:08:07.916] | : . ' , ; ` | : . ' result() for MulticoreFuture ...
[08:08:07.917] | : . ' , ; ` | : . ' result() for MulticoreFuture ... done
[08:08:07.917] | : . ' , ; ` | : . ' signalConditions() ...
[08:08:07.917] | : . ' , ; ` | : . ' , include = ‘immediateCondition’
[08:08:07.917] | : . ' , ; ` | : . ' , exclude = 
[08:08:07.917] | : . ' , ; ` | : . ' , resignal = FALSE
[08:08:07.917] | : . ' , ; ` | : . ' , Number of conditions: 276
[08:08:07.917] | : . ' , ; ` | : . ' ,  int 276
[08:08:07.918] | : . ' , ; ` | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.918] | : . ' , ; ` | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.918] | : . ' , ; ` | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.918] | : . ' , ; ` | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.918] | : . ' , ; ` | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.918] | : . ' , ; ` | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.918] | : . ' , ; ` | : . ' , Condition #7 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.918] | : . ' , ; ` | : . ' , Condition #8 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.918] | : . ' , ; ` | : . ' , Condition #9 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.919] | : . ' , ; ` | : . ' , Condition #10 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.919] | : . ' , ; ` | : . ' , Condition #11 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.919] | : . ' , ; ` | : . ' , Condition #12 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.919] | : . ' , ; ` | : . ' , Condition #13 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.919] | : . ' , ; ` | : . ' , Condition #14 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.919] | : . ' , ; ` | : . ' , Condition #15 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.919] | : . ' , ; ` | : . ' , Condition #16 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.919] | : . ' , ; ` | : . ' , Condition #17 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.919] | : . ' , ; ` | : . ' , Condition #18 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.919] | : . ' , ; ` | : . ' , Condition #19 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.920] | : . ' , ; ` | : . ' , Condition #20 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.920] | : . ' , ; ` | : . ' , Condition #21 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.920] | : . ' , ; ` | : . ' , Condition #22 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.920] | : . ' , ; ` | : . ' , Condition #23 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.920] | : . ' , ; ` | : . ' , Condition #24 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.920] | : . ' , ; ` | : . ' , Condition #25 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.920] | : . ' , ; ` | : . ' , Condition #26 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.920] | : . ' , ; ` | : . ' , Condition #27 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.920] | : . ' , ; ` | : . ' , Condition #28 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.920] | : . ' , ; ` | : . ' , Condition #29 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.921] | : . ' , ; ` | : . ' , Condition #30 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.921] | : . ' , ; ` | : . ' , Condition #31 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.921] | : . ' , ; ` | : . ' , Condition #32 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.921] | : . ' , ; ` | : . ' , Condition #33 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.921] | : . ' , ; ` | : . ' , Condition #34 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.921] | : . ' , ; ` | : . ' , Condition #35 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.921] | : . ' , ; ` | : . ' , Condition #36 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.921] | : . ' , ; ` | : . ' , Condition #37 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.921] | : . ' , ; ` | : . ' , Condition #38 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.921] | : . ' , ; ` | : . ' , Condition #39 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.922] | : . ' , ; ` | : . ' , Condition #40 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.922] | : . ' , ; ` | : . ' , Condition #41 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.922] | : . ' , ; ` | : . ' , Condition #42 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.922] | : . ' , ; ` | : . ' , Condition #43 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.922] | : . ' , ; ` | : . ' , Condition #44 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.922] | : . ' , ; ` | : . ' , Condition #45 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.922] | : . ' , ; ` | : . ' , Condition #46 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.922] | : . ' , ; ` | : . ' , Condition #47 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.922] | : . ' , ; ` | : . ' , Condition #48 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.922] | : . ' , ; ` | : . ' , Condition #49 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.923] | : . ' , ; ` | : . ' , Condition #50 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.923] | : . ' , ; ` | : . ' , Condition #51 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.923] | : . ' , ; ` | : . ' , Condition #52 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.923] | : . ' , ; ` | : . ' , Condition #53 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.923] | : . ' , ; ` | : . ' , Condition #54 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.923] | : . ' , ; ` | : . ' , Condition #55 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.923] | : . ' , ; ` | : . ' , Condition #56 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.923] | : . ' , ; ` | : . ' , Condition #57 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.923] | : . ' , ; ` | : . ' , Condition #58 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.923] | : . ' , ; ` | : . ' , Condition #59 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.923] | : . ' , ; ` | : . ' , Condition #60 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.924] | : . ' , ; ` | : . ' , Condition #61 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.924] | : . ' , ; ` | : . ' , Condition #62 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.924] | : . ' , ; ` | : . ' , Condition #63 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.924] | : . ' , ; ` | : . ' , Condition #64 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.924] | : . ' , ; ` | : . ' , Condition #65 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.924] | : . ' , ; ` | : . ' , Condition #66 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.924] | : . ' , ; ` | : . ' , Condition #67 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.924] | : . ' , ; ` | : . ' , Condition #68 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.924] | : . ' , ; ` | : . ' , Condition #69 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.924] | : . ' , ; ` | : . ' , Condition #70 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.925] | : . ' , ; ` | : . ' , Condition #71 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.925] | : . ' , ; ` | : . ' , Condition #72 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.925] | : . ' , ; ` | : . ' , Condition #73 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.925] | : . ' , ; ` | : . ' , Condition #74 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.925] | : . ' , ; ` | : . ' , Condition #75 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.925] | : . ' , ; ` | : . ' , Condition #76 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.925] | : . ' , ; ` | : . ' , Condition #77 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.926] | : . ' , ; ` | : . ' , Condition #78 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.926] | : . ' , ; ` | : . ' , Condition #79 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.926] | : . ' , ; ` | : . ' , Condition #80 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.926] | : . ' , ; ` | : . ' , Condition #81 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.927] | : . ' , ; ` | : . ' , Condition #82 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.927] | : . ' , ; ` | : . ' , Condition #83 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.927] | : . ' , ; ` | : . ' , Condition #84 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.927] | : . ' , ; ` | : . ' , Condition #85 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.927] | : . ' , ; ` | : . ' , Condition #86 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.927] | : . ' , ; ` | : . ' , Condition #87 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.927] | : . ' , ; ` | : . ' , Condition #88 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.927] | : . ' , ; ` | : . ' , Condition #89 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.927] | : . ' , ; ` | : . ' , Condition #90 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.927] | : . ' , ; ` | : . ' , Condition #91 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.928] | : . ' , ; ` | : . ' , Condition #92 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.928] | : . ' , ; ` | : . ' , Condition #93 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.928] | : . ' , ; ` | : . ' , Condition #94 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.928] | : . ' , ; ` | : . ' , Condition #95 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.928] | : . ' , ; ` | : . ' , Condition #96 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.928] | : . ' , ; ` | : . ' , Condition #97 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.928] | : . ' , ; ` | : . ' , Condition #98 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.928] | : . ' , ; ` | : . ' , Condition #99 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.928] | : . ' , ; ` | : . ' , Condition #100 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.928] | : . ' , ; ` | : . ' , Condition #101 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.929] | : . ' , ; ` | : . ' , Condition #102 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.929] | : . ' , ; ` | : . ' , Condition #103 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.929] | : . ' , ; ` | : . ' , Condition #104 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.929] | : . ' , ; ` | : . ' , Condition #105 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.929] | : . ' , ; ` | : . ' , Condition #106 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.929] | : . ' , ; ` | : . ' , Condition #107 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.929] | : . ' , ; ` | : . ' , Condition #108 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.929] | : . ' , ; ` | : . ' , Condition #109 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.929] | : . ' , ; ` | : . ' , Condition #110 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.930] | : . ' , ; ` | : . ' , Condition #111 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.930] | : . ' , ; ` | : . ' , Condition #112 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.930] | : . ' , ; ` | : . ' , Condition #113 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.930] | : . ' , ; ` | : . ' , Condition #114 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.930] | : . ' , ; ` | : . ' , Condition #115 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.930] | : . ' , ; ` | : . ' , Condition #116 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.930] | : . ' , ; ` | : . ' , Condition #117 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.930] | : . ' , ; ` | : . ' , Condition #118 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.930] | : . ' , ; ` | : . ' , Condition #119 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.930] | : . ' , ; ` | : . ' , Condition #120 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.931] | : . ' , ; ` | : . ' , Condition #121 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.931] | : . ' , ; ` | : . ' , Condition #122 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.931] | : . ' , ; ` | : . ' , Condition #123 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.931] | : . ' , ; ` | : . ' , Condition #124 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.931] | : . ' , ; ` | : . ' , Condition #125 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.931] | : . ' , ; ` | : . ' , Condition #126 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.931] | : . ' , ; ` | : . ' , Condition #127 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.931] | : . ' , ; ` | : . ' , Condition #128 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.931] | : . ' , ; ` | : . ' , Condition #129 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.931] | : . ' , ; ` | : . ' , Condition #130 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.931] | : . ' , ; ` | : . ' , Condition #131 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.932] | : . ' , ; ` | : . ' , Condition #132 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.932] | : . ' , ; ` | : . ' , Condition #133 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.932] | : . ' , ; ` | : . ' , Condition #134 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.932] | : . ' , ; ` | : . ' , Condition #135 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.932] | : . ' , ; ` | : . ' , Condition #136 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.932] | : . ' , ; ` | : . ' , Condition #137 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.932] | : . ' , ; ` | : . ' , Condition #138 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.932] | : . ' , ; ` | : . ' , Condition #139 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.932] | : . ' , ; ` | : . ' , Condition #140 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.932] | : . ' , ; ` | : . ' , Condition #141 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.933] | : . ' , ; ` | : . ' , Condition #142 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.933] | : . ' , ; ` | : . ' , Condition #143 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.933] | : . ' , ; ` | : . ' , Condition #144 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.933] | : . ' , ; ` | : . ' , Condition #145 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.933] | : . ' , ; ` | : . ' , Condition #146 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.933] | : . ' , ; ` | : . ' , Condition #147 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.933] | : . ' , ; ` | : . ' , Condition #148 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.933] | : . ' , ; ` | : . ' , Condition #149 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.933] | : . ' , ; ` | : . ' , Condition #150 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.933] | : . ' , ; ` | : . ' , Condition #151 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.934] | : . ' , ; ` | : . ' , Condition #152 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.934] | : . ' , ; ` | : . ' , Condition #153 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.934] | : . ' , ; ` | : . ' , Condition #154 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.934] | : . ' , ; ` | : . ' , Condition #155 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.934] | : . ' , ; ` | : . ' , Condition #156 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.934] | : . ' , ; ` | : . ' , Condition #157 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.934] | : . ' , ; ` | : . ' , Condition #158 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.934] | : . ' , ; ` | : . ' , Condition #159 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.934] | : . ' , ; ` | : . ' , Condition #160 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.934] | : . ' , ; ` | : . ' , Condition #161 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.934] | : . ' , ; ` | : . ' , Condition #162 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.935] | : . ' , ; ` | : . ' , Condition #163 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.935] | : . ' , ; ` | : . ' , Condition #164 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.935] | : . ' , ; ` | : . ' , Condition #165 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.935] | : . ' , ; ` | : . ' , Condition #166 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.935] | : . ' , ; ` | : . ' , Condition #167 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.935] | : . ' , ; ` | : . ' , Condition #168 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.935] | : . ' , ; ` | : . ' , Condition #169 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.935] | : . ' , ; ` | : . ' , Condition #170 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.935] | : . ' , ; ` | : . ' , Condition #171 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.935] | : . ' , ; ` | : . ' , Condition #172 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.936] | : . ' , ; ` | : . ' , Condition #173 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.936] | : . ' , ; ` | : . ' , Condition #174 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.936] | : . ' , ; ` | : . ' , Condition #175 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.936] | : . ' , ; ` | : . ' , Condition #176 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.936] | : . ' , ; ` | : . ' , Condition #177 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.936] | : . ' , ; ` | : . ' , Condition #178 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.936] | : . ' , ; ` | : . ' , Condition #179 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.936] | : . ' , ; ` | : . ' , Condition #180 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.936] | : . ' , ; ` | : . ' , Condition #181 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.936] | : . ' , ; ` | : . ' , Condition #182 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.936] | : . ' , ; ` | : . ' , Condition #183 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.937] | : . ' , ; ` | : . ' , Condition #184 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.937] | : . ' , ; ` | : . ' , Condition #185 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.937] | : . ' , ; ` | : . ' , Condition #186 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.937] | : . ' , ; ` | : . ' , Condition #187 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.937] | : . ' , ; ` | : . ' , Condition #188 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.937] | : . ' , ; ` | : . ' , Condition #189 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.937] | : . ' , ; ` | : . ' , Condition #190 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.937] | : . ' , ; ` | : . ' , Condition #191 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.937] | : . ' , ; ` | : . ' , Condition #192 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.937] | : . ' , ; ` | : . ' , Condition #193 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.938] | : . ' , ; ` | : . ' , Condition #194 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.938] | : . ' , ; ` | : . ' , Condition #195 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.938] | : . ' , ; ` | : . ' , Condition #196 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.938] | : . ' , ; ` | : . ' , Condition #197 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.938] | : . ' , ; ` | : . ' , Condition #198 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.938] | : . ' , ; ` | : . ' , Condition #199 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.938] | : . ' , ; ` | : . ' , Condition #200 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.938] | : . ' , ; ` | : . ' , Condition #201 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.938] | : . ' , ; ` | : . ' , Condition #202 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.938] | : . ' , ; ` | : . ' , Condition #203 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.939] | : . ' , ; ` | : . ' , Condition #204 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.939] | : . ' , ; ` | : . ' , Condition #205 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.939] | : . ' , ; ` | : . ' , Condition #206 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.939] | : . ' , ; ` | : . ' , Condition #207 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.939] | : . ' , ; ` | : . ' , Condition #208 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.939] | : . ' , ; ` | : . ' , Condition #209 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.939] | : . ' , ; ` | : . ' , Condition #210 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.939] | : . ' , ; ` | : . ' , Condition #211 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.939] | : . ' , ; ` | : . ' , Condition #212 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.939] | : . ' , ; ` | : . ' , Condition #213 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.939] | : . ' , ; ` | : . ' , Condition #214 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.940] | : . ' , ; ` | : . ' , Condition #215 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.940] | : . ' , ; ` | : . ' , Condition #216 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.940] | : . ' , ; ` | : . ' , Condition #217 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.940] | : . ' , ; ` | : . ' , Condition #218 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.940] | : . ' , ; ` | : . ' , Condition #219 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.940] | : . ' , ; ` | : . ' , Condition #220 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.940] | : . ' , ; ` | : . ' , Condition #221 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.940] | : . ' , ; ` | : . ' , Condition #222 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.940] | : . ' , ; ` | : . ' , Condition #223 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.941] | : . ' , ; ` | : . ' , Condition #224 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.941] | : . ' , ; ` | : . ' , Condition #225 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.941] | : . ' , ; ` | : . ' , Condition #226 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.942] | : . ' , ; ` | : . ' , Condition #227 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.942] | : . ' , ; ` | : . ' , Condition #228 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.942] | : . ' , ; ` | : . ' , Condition #229 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.942] | : . ' , ; ` | : . ' , Condition #230 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.942] | : . ' , ; ` | : . ' , Condition #231 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.942] | : . ' , ; ` | : . ' , Condition #232 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.942] | : . ' , ; ` | : . ' , Condition #233 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.942] | : . ' , ; ` | : . ' , Condition #234 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.942] | : . ' , ; ` | : . ' , Condition #235 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.942] | : . ' , ; ` | : . ' , Condition #236 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.943] | : . ' , ; ` | : . ' , Condition #237 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.943] | : . ' , ; ` | : . ' , Condition #238 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.943] | : . ' , ; ` | : . ' , Condition #239 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.943] | : . ' , ; ` | : . ' , Condition #240 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.943] | : . ' , ; ` | : . ' , Condition #241 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.943] | : . ' , ; ` | : . ' , Condition #242 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.943] | : . ' , ; ` | : . ' , Condition #243 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.943] | : . ' , ; ` | : . ' , Condition #244 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.943] | : . ' , ; ` | : . ' , Condition #245 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.944] | : . ' , ; ` | : . ' , Condition #246 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.944] | : . ' , ; ` | : . ' , Condition #247 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.944] | : . ' , ; ` | : . ' , Condition #248 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.944] | : . ' , ; ` | : . ' , Condition #249 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.944] | : . ' , ; ` | : . ' , Condition #250 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.944] | : . ' , ; ` | : . ' , Condition #251 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.944] | : . ' , ; ` | : . ' , Condition #252 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.944] | : . ' , ; ` | : . ' , Condition #253 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.944] | : . ' , ; ` | : . ' , Condition #254 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.944] | : . ' , ; ` | : . ' , Condition #255 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.945] | : . ' , ; ` | : . ' , Condition #256 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.945] | : . ' , ; ` | : . ' , Condition #257 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.945] | : . ' , ; ` | : . ' , Condition #258 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.945] | : . ' , ; ` | : . ' , Condition #259 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.945] | : . ' , ; ` | : . ' , Condition #260 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.945] | : . ' , ; ` | : . ' , Condition #261 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.945] | : . ' , ; ` | : . ' , Condition #262 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.945] | : . ' , ; ` | : . ' , Condition #263 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.945] | : . ' , ; ` | : . ' , Condition #264 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.945] | : . ' , ; ` | : . ' , Condition #265 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.946] | : . ' , ; ` | : . ' , Condition #266 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.946] | : . ' , ; ` | : . ' , Condition #267 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.946] | : . ' , ; ` | : . ' , Condition #268 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.946] | : . ' , ; ` | : . ' , Condition #269 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.946] | : . ' , ; ` | : . ' , Condition #270 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.946] | : . ' , ; ` | : . ' , Condition #271 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.946] | : . ' , ; ` | : . ' , Condition #272 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.946] | : . ' , ; ` | : . ' , Condition #273 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.946] | : . ' , ; ` | : . ' , Condition #274 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.946] | : . ' , ; ` | : . ' , Condition #275 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.947] | : . ' , ; ` | : . ' , Condition #276 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.947] | : . ' , ; ` | : . ' signalConditions() ... done
[08:08:07.947] | : . ' , ; ` | : . ' relay stdout ...
[08:08:07.947] | : . ' , ; ` | : . ' relay stdout ... done
[08:08:07.947] | : . ' , ; ` | : . ' check for misuse ...
[08:08:07.947] | : . ' , ; ` | : . ' check for misuse ... done
[08:08:07.947] | : . ' , ; ` | : . ' relay conditions ...
[08:08:07.947] | : . ' , ; ` | : . ' , Future state: ‘finished’
[08:08:07.947] | : . ' , ; ` | : . ' , result() for MulticoreFuture ...
[08:08:07.947] | : . ' , ; ` | : . ' , result() for MulticoreFuture ... done
[08:08:07.948] | : . ' , ; ` | : . ' , signalConditions() ...
[08:08:07.948] | : . ' , ; ` | : . ' , ; include = ‘condition’
[08:08:07.948] | : . ' , ; ` | : . ' , ; exclude = ‘immediateCondition’
[08:08:07.948] | : . ' , ; ` | : . ' , ; resignal = TRUE
[08:08:07.948] | : . ' , ; ` | : . ' , ; Number of conditions: 276
[08:08:07.948] | : . ' , ; ` | : . ' , ;  int 276
[08:08:07.948] | : . ' , ; ` | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.949] | : . ' , ; ` | : . ' , ; Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.726] | : . ' , ; ` | : . ' , ; ` | attachPackages() ...
[08:08:07.949] | : . ' , ; ` | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.949] | : . ' , ; ` | : . ' , ; Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.726] | : . ' , ; ` | : . ' , ; ` | : packages: [n=1] ‘future’
[08:08:07.949] | : . ' , ; ` | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.949] | : . ' , ; ` | : . ' , ; Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.727] | : . ' , ; ` | : . ' , ; ` | attachPackages() ... done
[08:08:07.949] | : . ' , ; ` | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.949] | : . ' , ; ` | : . ' , ; Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.727] | : . ' , ; ` | : . ' , ; ` | attachPackages() ...
[08:08:07.949] | : . ' , ; ` | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.949] | : . ' , ; ` | : . ' , ; Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.727] | : . ' , ; ` | : . ' , ; ` | : packages: [n=1] ‘future’
[08:08:07.950] | : . ' , ; ` | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.950] | : . ' , ; ` | : . ' , ; Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.728] | : . ' , ; ` | : . ' , ; ` | attachPackages() ... done
[08:08:07.950] | : . ' , ; ` | : . ' , ; Condition #7 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.950] | : . ' , ; ` | : . ' , ; Condition #7: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.765] | : . ' , ; ` | : . ' , ; ` | future(..., label = NULL) ...
[08:08:07.950] | : . ' , ; ` | : . ' , ; Condition #8 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.950] | : . ' , ; ` | : . ' , ; Condition #8: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.765] | : . ' , ; ` | : . ' , ; ` | : lazy: FALSE
[08:08:07.950] | : . ' , ; ` | : . ' , ; Condition #9 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.950] | : . ' , ; ` | : . ' , ; Condition #9: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.766] | : . ' , ; ` | : . ' , ; ` | : stdout: TRUE
[08:08:07.950] | : . ' , ; ` | : . ' , ; Condition #10 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.951] | : . ' , ; ` | : . ' , ; Condition #10: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.766] | : . ' , ; ` | : . ' , ; ` | : conditions: [n=1] ‘condition’
[08:08:07.951] | : . ' , ; ` | : . ' , ; Condition #11 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.951] | : . ' , ; ` | : . ' , ; Condition #11: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.766] | : . ' , ; ` | : . ' , ; ` | : gc: FALSE
[08:08:07.951] | : . ' , ; ` | : . ' , ; Condition #12 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.951] | : . ' , ; ` | : . ' , ; Condition #12: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.766] | : . ' , ; ` | : . ' , ; ` | : earlySignal: FALSE
[08:08:07.951] | : . ' , ; ` | : . ' , ; Condition #13 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.951] | : . ' , ; ` | : . ' , ; Condition #13: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.766] | : . ' , ; ` | : . ' , ; ` | : getGlobalsAndPackages() ...
[08:08:07.951] | : . ' , ; ` | : . ' , ; Condition #14 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.951] | : . ' , ; ` | : . ' , ; Condition #14: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.766] | : . ' , ; ` | : . ' , ; ` | : . Searching for globals ...
[08:08:07.952] | : . ' , ; ` | : . ' , ; Condition #15 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.952] | : . ' , ; ` | : . ' , ; Condition #15: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.768] | : . ' , ; ` | : . ' , ; ` | : . ' globals found: [0] 
[08:08:07.952] | : . ' , ; ` | : . ' , ; Condition #16 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.952] | : . ' , ; ` | : . ' , ; Condition #16: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.768] | : . ' , ; ` | : . ' , ; ` | : . Searching for globals ... done
[08:08:07.952] | : . ' , ; ` | : . ' , ; Condition #17 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.952] | : . ' , ; ` | : . ' , ; Condition #17: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.768] | : . ' , ; ` | : . ' , ; ` | : . globals: [0] <none>
[08:08:07.952] | : . ' , ; ` | : . ' , ; Condition #18 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.952] | : . ' , ; ` | : . ' , ; Condition #18: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.768] | : . ' , ; ` | : . ' , ; ` | : . packages: [0] <none>
[08:08:07.952] | : . ' , ; ` | : . ' , ; Condition #19 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.953] | : . ' , ; ` | : . ' , ; Condition #19: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.768] | : . ' , ; ` | : . ' , ; ` | : getGlobalsAndPackages() ... done
[08:08:07.953] | : . ' , ; ` | : . ' , ; Condition #20 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.953] | : . ' , ; ` | : . ' , ; Condition #20: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.769] | : . ' , ; ` | : . ' , ; ` | : run() for ‘Future’ (<unnamed-24>) ...
[08:08:07.953] | : . ' , ; ` | : . ' , ; Condition #21 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.953] | : . ' , ; ` | : . ' , ; Condition #21: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.769] | : . ' , ; ` | : . ' , ; ` | : . state: ‘created’
[08:08:07.953] | : . ' , ; ` | : . ' , ; Condition #22 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.953] | : . ' , ; ` | : . ' , ; Condition #22: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.769] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.953] | : . ' , ; ` | : . ' , ; Condition #23 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.953] | : . ' , ; ` | : . ' , ; Condition #23: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.769] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.954] | : . ' , ; ` | : . ' , ; Condition #24 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.954] | : . ' , ; ` | : . ' , ; Condition #24: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.769] | : . ' , ; ` | : . ' , ; ` | : . Using SequentialFutureBackend ...
[08:08:07.954] | : . ' , ; ` | : . ' , ; Condition #25 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.954] | : . ' , ; ` | : . ' , ; Condition #25: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.770] | : . ' , ; ` | : . ' , ; ` | : . ' Number of futures since start: 0 (0 created, 0 launched, 0 finished)
[08:08:07.954] | : . ' , ; ` | : . ' , ; Condition #26 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.954] | : . ' , ; ` | : . ' , ; Condition #26: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.770] | : . ' , ; ` | : . ' , ; ` | : . ' Launching futures ...
[08:08:07.954] | : . ' , ; ` | : . ' , ; Condition #27 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.954] | : . ' , ; ` | : . ' , ; Condition #27: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.770] | : . ' , ; ` | : . ' , ; ` | : . ' , launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:07.954] | : . ' , ; ` | : . ' , ; Condition #28 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.955] | : . ' , ; ` | : . ' , ; Condition #28: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.770] | : . ' , ; ` | : . ' , ; ` | : . ' , ; getFutureData() ...
[08:08:07.955] | : . ' , ; ` | : . ' , ; Condition #29 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.955] | : . ' , ; ` | : . ' , ; Condition #29: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.770] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` getFutureCore() ...
[08:08:07.955] | : . ' , ; ` | : . ' , ; Condition #30 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.955] | : . ' , ; ` | : . ' , ; Condition #30: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.770] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Packages needed by the future expression (n = 0): <none>
[08:08:07.955] | : . ' , ; ` | : . ' , ; Condition #31 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.955] | : . ' , ; ` | : . ' , ; Condition #31: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.770] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` getFutureCore() ... done
[08:08:07.955] | : . ' , ; ` | : . ' , ; Condition #32 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.955] | : . ' , ; ` | : . ' , ; Condition #32: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.771] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` getFutureCapture() ...
[08:08:07.956] | : . ' , ; ` | : . ' , ; Condition #33 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.956] | : . ' , ; ` | : . ' , ; Condition #33: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.771] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` getFutureCapture() ... done
[08:08:07.957] | : . ' , ; ` | : . ' , ; Condition #34 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.957] | : . ' , ; ` | : . ' , ; Condition #34: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.771] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` getFutureContext() ...
[08:08:07.957] | : . ' , ; ` | : . ' , ; Condition #35 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.957] | : . ' , ; ` | : . ' , ; Condition #35: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.771] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.957] | : . ' , ; ` | : . ' , ; Condition #36 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.957] | : . ' , ; ` | : . ' , ; Condition #36: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.771] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Getting stack without first backend: [n=0] 
[08:08:07.957] | : . ' , ; ` | : . ' , ; Condition #37 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.958] | : . ' , ; ` | : . ' , ; Condition #37: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.771] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.958] | : . ' , ; ` | : . ' , ; Condition #38 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.958] | : . ' , ; ` | : . ' , ; Condition #38: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.771] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Packages needed by future backend (n = 0): <none>
[08:08:07.958] | : . ' , ; ` | : . ' , ; Condition #39 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.958] | : . ' , ; ` | : . ' , ; Condition #39: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.772] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` getFutureContext() ... done
[08:08:07.958] | : . ' , ; ` | : . ' , ; Condition #40 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.958] | : . ' , ; ` | : . ' , ; Condition #40: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.773] | : . ' , ; ` | : . ' , ; ` | : . ' , ; getFutureData() ... done
[08:08:07.958] | : . ' , ; ` | : . ' , ; Condition #41 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.958] | : . ' , ; ` | : . ' , ; Condition #41: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.775] | : . ' , ; ` | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.959] | : . ' , ; ` | : . ' , ; Condition #42 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.959] | : . ' , ; ` | : . ' , ; Condition #42: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.775] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:07.959] | : . ' , ; ` | : . ' , ; Condition #43 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.959] | : . ' , ; ` | : . ' , ; Condition #43: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.775] | : . ' , ; ` | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.959] | : . ' , ; ` | : . ' , ; Condition #44 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.959] | : . ' , ; ` | : . ' , ; Condition #44: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.775] | : . ' , ; ` | : . ' , ; ` | : . ' , ; plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:07.959] | : . ' , ; ` | : . ' , ; Condition #45 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.959] | : . ' , ; ` | : . ' , ; Condition #45: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.776] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:07.959] | : . ' , ; ` | : . ' , ; Condition #46 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.960] | : . ' , ; ` | : . ' , ; Condition #46: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.776] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:07.960] | : . ' , ; ` | : . ' , ; Condition #47 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.960] | : . ' , ; ` | : . ' , ; Condition #47: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.776] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : New stack:
[08:08:07.960] | : . ' , ; ` | : . ' , ; Condition #48 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.960] | : . ' , ; ` | : . ' , ; Condition #48: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.776] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : List of 1
[08:08:07.776] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.776] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.776] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:07.776] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.776] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.776] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.776] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.776] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.960] | : . ' , ; ` | : . ' , ; Condition #49 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.960] | : . ' , ; ` | : . ' , ; Condition #49: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.779] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Old stack:
[08:08:07.960] | : . ' , ; ` | : . ' , ; Condition #50 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.961] | : . ' , ; ` | : . ' , ; Condition #50: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.779] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : List of 1
[08:08:07.779] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.779] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.779] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:07.779] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.779] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.779] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.779] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.779] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f903aa0110> 
[08:08:07.779] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.779] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.779] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.961] | : . ' , ; ` | : . ' , ; Condition #51 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.961] | : . ' , ; ` | : . ' , ; Condition #51: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.782] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Not identical
[08:08:07.961] | : . ' , ; ` | : . ' , ; Condition #52 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.961] | : . ' , ; ` | : . ' , ; Condition #52: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.782] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : all.equal() for future ...
[08:08:07.961] | : . ' , ; ` | : . ' , ; Condition #53 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.961] | : . ' , ; ` | : . ' , ; Condition #53: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.782] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . List of 2
[08:08:07.782] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.782] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.782] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:08:07.782] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.782] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.782] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.782] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.782] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.782] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.782] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:07.782] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.782] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.782] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.782] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.782] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f903aa0110> 
[08:08:07.782] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.782] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.961] | : . ' , ; ` | : . ' , ; Condition #54 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.961] | : . ' , ; ` | : . ' , ; Condition #54: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.788] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : all.equal() for future ... done
[08:08:07.962] | : . ' , ; ` | : . ' , ; Condition #55 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.962] | : . ' , ; ` | : . ' , ; Condition #55: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.788] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:07.962] | : . ' , ; ` | : . ' , ; Condition #56 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.962] | : . ' , ; ` | : . ' , ; Condition #56: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.788] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:07.962] | : . ' , ; ` | : . ' , ; Condition #57 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.962] | : . ' , ; ` | : . ' , ; Condition #57: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.788] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | List of future strategies:
[08:08:07.788] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | 1. sequential:
[08:08:07.788] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:07.788] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` |    - tweaked: FALSE
[08:08:07.788] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` |    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.962] | : . ' , ; ` | : . ' , ; Condition #58 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.962] | : . ' , ; ` | : . ' , ; Condition #58: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.788] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:07.962] | : . ' , ; ` | : . ' , ; Condition #59 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.963] | : . ' , ; ` | : . ' , ; Condition #59: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.789] | : . ' , ; ` | : . ' , ; ` | : . ' , ; plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.963] | : . ' , ; ` | : . ' , ; Condition #60 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.963] | : . ' , ; ` | : . ' , ; Condition #60: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.792] | : . ' , ; ` | : . ' , ; ` | : . ' , ; plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:07.963] | : . ' , ; ` | : . ' , ; Condition #61 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.963] | : . ' , ; ` | : . ' , ; Condition #61: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.792] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:07.963] | : . ' , ; ` | : . ' , ; Condition #62 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.963] | : . ' , ; ` | : . ' , ; Condition #62: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.792] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:07.963] | : . ' , ; ` | : . ' , ; Condition #63 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.963] | : . ' , ; ` | : . ' , ; Condition #63: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.792] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : all.equal() for FutureStrategyList ...
[08:08:07.964] | : . ' , ; ` | : . ' , ; Condition #64 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.964] | : . ' , ; ` | : . ' , ; Condition #64: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.792] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . New stack:
[08:08:07.964] | : . ' , ; ` | : . ' , ; Condition #65 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.964] | : . ' , ; ` | : . ' , ; Condition #65: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.793] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . List of 1
[08:08:07.793] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.793] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.793] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:07.793] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.793] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.793] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.793] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.793] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f903aa0110> 
[08:08:07.793] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.793] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.793] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.964] | : . ' , ; ` | : . ' , ; Condition #66 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.964] | : . ' , ; ` | : . ' , ; Condition #66: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.796] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . Old stack:
[08:08:07.964] | : . ' , ; ` | : . ' , ; Condition #67 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.964] | : . ' , ; ` | : . ' , ; Condition #67: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.796] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . List of 1
[08:08:07.796] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.796] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.796] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:07.796] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.796] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.796] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.796] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.796] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f903aa0110> 
[08:08:07.796] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.796] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.796] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.964] | : . ' , ; ` | : . ' , ; Condition #68 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.965] | : . ' , ; ` | : . ' , ; Condition #68: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.799] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . Identical
[08:08:07.965] | : . ' , ; ` | : . ' , ; Condition #69 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.965] | : . ' , ; ` | : . ' , ; Condition #69: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.799] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : all.equal() for FutureStrategyList ... done
[08:08:07.965] | : . ' , ; ` | : . ' , ; Condition #70 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.965] | : . ' , ; ` | : . ' , ; Condition #70: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.799] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:07.965] | : . ' , ; ` | : . ' , ; Condition #71 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.965] | : . ' , ; ` | : . ' , ; Condition #71: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.800] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : List of future strategies:
[08:08:07.800] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : 1. sequential:
[08:08:07.800] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:07.800] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :    - tweaked: FALSE
[08:08:07.800] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.965] | : . ' , ; ` | : . ' , ; Condition #72 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.965] | : . ' , ; ` | : . ' , ; Condition #72: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.800] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:07.966] | : . ' , ; ` | : . ' , ; Condition #73 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.966] | : . ' , ; ` | : . ' , ; Condition #73: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.800] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.966] | : . ' , ; ` | : . ' , ; Condition #74 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.966] | : . ' , ; ` | : . ' , ; Condition #74: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.800] | : . ' , ; ` | : . ' , ; ` | : . ' , ; plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.966] | : . ' , ; ` | : . ' , ; Condition #75 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.966] | : . ' , ; ` | : . ' , ; Condition #75: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.801] | : . ' , ; ` | : . ' , ; ` | : . ' , ; SequentialFuture started (and completed)
[08:08:07.966] | : . ' , ; ` | : . ' , ; Condition #76 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.966] | : . ' , ; ` | : . ' , ; Condition #76: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.801] | : . ' , ; ` | : . ' , ; ` | : . ' , ; signalConditions() ...
[08:08:07.966] | : . ' , ; ` | : . ' , ; Condition #77 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.967] | : . ' , ; ` | : . ' , ; Condition #77: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.801] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` include = ‘immediateCondition’
[08:08:07.967] | : . ' , ; ` | : . ' , ; Condition #78 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.967] | : . ' , ; ` | : . ' , ; Condition #78: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.801] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` exclude = 
[08:08:07.967] | : . ' , ; ` | : . ' , ; Condition #79 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.967] | : . ' , ; ` | : . ' , ; Condition #79: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.801] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` resignal = FALSE
[08:08:07.967] | : . ' , ; ` | : . ' , ; Condition #80 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.967] | : . ' , ; ` | : . ' , ; Condition #80: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.801] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Number of conditions: 6
[08:08:07.967] | : . ' , ; ` | : . ' , ; Condition #81 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.967] | : . ' , ; ` | : . ' , ; Condition #81: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.801] | : . ' , ; ` | : . ' , ; ` | : . ' , ; `  int 6
[08:08:07.968] | : . ' , ; ` | : . ' , ; Condition #82 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.968] | : . ' , ; ` | : . ' , ; Condition #82: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.802] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.968] | : . ' , ; ` | : . ' , ; Condition #83 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.968] | : . ' , ; ` | : . ' , ; Condition #83: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.802] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.968] | : . ' , ; ` | : . ' , ; Condition #84 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.968] | : . ' , ; ` | : . ' , ; Condition #84: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.802] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.968] | : . ' , ; ` | : . ' , ; Condition #85 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.968] | : . ' , ; ` | : . ' , ; Condition #85: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.802] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.968] | : . ' , ; ` | : . ' , ; Condition #86 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.969] | : . ' , ; ` | : . ' , ; Condition #86: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.802] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.969] | : . ' , ; ` | : . ' , ; Condition #87 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.969] | : . ' , ; ` | : . ' , ; Condition #87: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.802] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.969] | : . ' , ; ` | : . ' , ; Condition #88 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.969] | : . ' , ; ` | : . ' , ; Condition #88: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.803] | : . ' , ; ` | : . ' , ; ` | : . ' , ; signalConditions() ... done
[08:08:07.969] | : . ' , ; ` | : . ' , ; Condition #89 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.969] | : . ' , ; ` | : . ' , ; Condition #89: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.803] | : . ' , ; ` | : . ' , ; ` | : . ' , launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:07.969] | : . ' , ; ` | : . ' , ; Condition #90 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.969] | : . ' , ; ` | : . ' , ; Condition #90: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.803] | : . ' , ; ` | : . ' , ; ` | : . ' Launching futures ... done
[08:08:07.970] | : . ' , ; ` | : . ' , ; Condition #91 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.970] | : . ' , ; ` | : . ' , ; Condition #91: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.803] | : . ' , ; ` | : . ' , ; ` | : . ' Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:07.970] | : . ' , ; ` | : . ' , ; Condition #92 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.970] | : . ' , ; ` | : . ' , ; Condition #92: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.803] | : . ' , ; ` | : . ' , ; ` | : . Using SequentialFutureBackend ... done
[08:08:07.970] | : . ' , ; ` | : . ' , ; Condition #93 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.970] | : . ' , ; ` | : . ' , ; Condition #93: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.803] | : . ' , ; ` | : . ' , ; ` | : run() for ‘Future’ (<unnamed-24>) ... done
[08:08:07.970] | : . ' , ; ` | : . ' , ; Condition #94 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.970] | : . ' , ; ` | : . ' , ; Condition #94: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.803] | : . ' , ; ` | : . ' , ; ` | future(..., label = NULL) ... done
[08:08:07.970] | : . ' , ; ` | : . ' , ; Condition #95 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.971] | : . ' , ; ` | : . ' , ; Condition #95: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.804] | : . ' , ; ` | : . ' , ; ` | future(..., label = NULL) ...
[08:08:07.971] | : . ' , ; ` | : . ' , ; Condition #96 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.972] | : . ' , ; ` | : . ' , ; Condition #96: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.804] | : . ' , ; ` | : . ' , ; ` | : lazy: FALSE
[08:08:07.972] | : . ' , ; ` | : . ' , ; Condition #97 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.972] | : . ' , ; ` | : . ' , ; Condition #97: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.804] | : . ' , ; ` | : . ' , ; ` | : stdout: TRUE
[08:08:07.972] | : . ' , ; ` | : . ' , ; Condition #98 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.972] | : . ' , ; ` | : . ' , ; Condition #98: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.804] | : . ' , ; ` | : . ' , ; ` | : conditions: [n=1] ‘condition’
[08:08:07.972] | : . ' , ; ` | : . ' , ; Condition #99 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.972] | : . ' , ; ` | : . ' , ; Condition #99: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.804] | : . ' , ; ` | : . ' , ; ` | : gc: FALSE
[08:08:07.972] | : . ' , ; ` | : . ' , ; Condition #100 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.973] | : . ' , ; ` | : . ' , ; Condition #100: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.804] | : . ' , ; ` | : . ' , ; ` | : earlySignal: FALSE
[08:08:07.973] | : . ' , ; ` | : . ' , ; Condition #101 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.973] | : . ' , ; ` | : . ' , ; Condition #101: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.804] | : . ' , ; ` | : . ' , ; ` | : getGlobalsAndPackages() ...
[08:08:07.973] | : . ' , ; ` | : . ' , ; Condition #102 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.973] | : . ' , ; ` | : . ' , ; Condition #102: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.805] | : . ' , ; ` | : . ' , ; ` | : . Searching for globals ...
[08:08:07.973] | : . ' , ; ` | : . ' , ; Condition #103 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.973] | : . ' , ; ` | : . ' , ; Condition #103: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.806] | : . ' , ; ` | : . ' , ; ` | : . ' globals found: [0] 
[08:08:07.973] | : . ' , ; ` | : . ' , ; Condition #104 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.973] | : . ' , ; ` | : . ' , ; Condition #104: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.806] | : . ' , ; ` | : . ' , ; ` | : . Searching for globals ... done
[08:08:07.974] | : . ' , ; ` | : . ' , ; Condition #105 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.974] | : . ' , ; ` | : . ' , ; Condition #105: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.806] | : . ' , ; ` | : . ' , ; ` | : . globals: [0] <none>
[08:08:07.974] | : . ' , ; ` | : . ' , ; Condition #106 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.974] | : . ' , ; ` | : . ' , ; Condition #106: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.806] | : . ' , ; ` | : . ' , ; ` | : . packages: [0] <none>
[08:08:07.974] | : . ' , ; ` | : . ' , ; Condition #107 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.974] | : . ' , ; ` | : . ' , ; Condition #107: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.806] | : . ' , ; ` | : . ' , ; ` | : getGlobalsAndPackages() ... done
[08:08:07.974] | : . ' , ; ` | : . ' , ; Condition #108 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.974] | : . ' , ; ` | : . ' , ; Condition #108: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.807] | : . ' , ; ` | : . ' , ; ` | : run() for ‘Future’ (<unnamed-25>) ...
[08:08:07.974] | : . ' , ; ` | : . ' , ; Condition #109 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.975] | : . ' , ; ` | : . ' , ; Condition #109: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.807] | : . ' , ; ` | : . ' , ; ` | : . state: ‘created’
[08:08:07.975] | : . ' , ; ` | : . ' , ; Condition #110 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.975] | : . ' , ; ` | : . ' , ; Condition #110: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.807] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.975] | : . ' , ; ` | : . ' , ; Condition #111 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.975] | : . ' , ; ` | : . ' , ; Condition #111: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.807] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.975] | : . ' , ; ` | : . ' , ; Condition #112 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.975] | : . ' , ; ` | : . ' , ; Condition #112: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.807] | : . ' , ; ` | : . ' , ; ` | : . Using SequentialFutureBackend ...
[08:08:07.975] | : . ' , ; ` | : . ' , ; Condition #113 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.975] | : . ' , ; ` | : . ' , ; Condition #113: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.807] | : . ' , ; ` | : . ' , ; ` | : . ' Number of futures since start: 1 (1 created, 1 launched, 1 finished)
[08:08:07.976] | : . ' , ; ` | : . ' , ; Condition #114 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.976] | : . ' , ; ` | : . ' , ; Condition #114: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.807] | : . ' , ; ` | : . ' , ; ` | : . ' Launching futures ...
[08:08:07.976] | : . ' , ; ` | : . ' , ; Condition #115 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.976] | : . ' , ; ` | : . ' , ; Condition #115: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.808] | : . ' , ; ` | : . ' , ; ` | : . ' , launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:07.976] | : . ' , ; ` | : . ' , ; Condition #116 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.976] | : . ' , ; ` | : . ' , ; Condition #116: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.808] | : . ' , ; ` | : . ' , ; ` | : . ' , ; getFutureData() ...
[08:08:07.976] | : . ' , ; ` | : . ' , ; Condition #117 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.976] | : . ' , ; ` | : . ' , ; Condition #117: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.808] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` getFutureCore() ...
[08:08:07.977] | : . ' , ; ` | : . ' , ; Condition #118 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.977] | : . ' , ; ` | : . ' , ; Condition #118: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.808] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Packages needed by the future expression (n = 0): <none>
[08:08:07.977] | : . ' , ; ` | : . ' , ; Condition #119 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.977] | : . ' , ; ` | : . ' , ; Condition #119: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.808] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` getFutureCore() ... done
[08:08:07.977] | : . ' , ; ` | : . ' , ; Condition #120 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.977] | : . ' , ; ` | : . ' , ; Condition #120: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.808] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` getFutureCapture() ...
[08:08:07.977] | : . ' , ; ` | : . ' , ; Condition #121 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.977] | : . ' , ; ` | : . ' , ; Condition #121: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.808] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` getFutureCapture() ... done
[08:08:07.977] | : . ' , ; ` | : . ' , ; Condition #122 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.977] | : . ' , ; ` | : . ' , ; Condition #122: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.808] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` getFutureContext() ...
[08:08:07.978] | : . ' , ; ` | : . ' , ; Condition #123 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.978] | : . ' , ; ` | : . ' , ; Condition #123: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.810] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.978] | : . ' , ; ` | : . ' , ; Condition #124 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.978] | : . ' , ; ` | : . ' , ; Condition #124: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.810] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Getting stack without first backend: [n=0] 
[08:08:07.978] | : . ' , ; ` | : . ' , ; Condition #125 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.978] | : . ' , ; ` | : . ' , ; Condition #125: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.810] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.978] | : . ' , ; ` | : . ' , ; Condition #126 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.978] | : . ' , ; ` | : . ' , ; Condition #126: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.810] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Packages needed by future backend (n = 0): <none>
[08:08:07.979] | : . ' , ; ` | : . ' , ; Condition #127 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.979] | : . ' , ; ` | : . ' , ; Condition #127: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.810] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` getFutureContext() ... done
[08:08:07.979] | : . ' , ; ` | : . ' , ; Condition #128 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.979] | : . ' , ; ` | : . ' , ; Condition #128: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.811] | : . ' , ; ` | : . ' , ; ` | : . ' , ; getFutureData() ... done
[08:08:07.979] | : . ' , ; ` | : . ' , ; Condition #129 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.979] | : . ' , ; ` | : . ' , ; Condition #129: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.812] | : . ' , ; ` | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:07.979] | : . ' , ; ` | : . ' , ; Condition #130 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.979] | : . ' , ; ` | : . ' , ; Condition #130: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.812] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:07.979] | : . ' , ; ` | : . ' , ; Condition #131 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.979] | : . ' , ; ` | : . ' , ; Condition #131: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.812] | : . ' , ; ` | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:07.980] | : . ' , ; ` | : . ' , ; Condition #132 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.980] | : . ' , ; ` | : . ' , ; Condition #132: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.812] | : . ' , ; ` | : . ' , ; ` | : . ' , ; plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:07.980] | : . ' , ; ` | : . ' , ; Condition #133 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.980] | : . ' , ; ` | : . ' , ; Condition #133: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.813] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:07.980] | : . ' , ; ` | : . ' , ; Condition #134 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.980] | : . ' , ; ` | : . ' , ; Condition #134: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.813] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:07.980] | : . ' , ; ` | : . ' , ; Condition #135 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.980] | : . ' , ; ` | : . ' , ; Condition #135: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.813] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : New stack:
[08:08:07.980] | : . ' , ; ` | : . ' , ; Condition #136 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.981] | : . ' , ; ` | : . ' , ; Condition #136: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.813] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : List of 1
[08:08:07.813] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.813] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.813] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:07.813] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.813] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.813] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.813] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.813] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.981] | : . ' , ; ` | : . ' , ; Condition #137 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.981] | : . ' , ; ` | : . ' , ; Condition #137: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.816] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Old stack:
[08:08:07.981] | : . ' , ; ` | : . ' , ; Condition #138 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.981] | : . ' , ; ` | : . ' , ; Condition #138: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.816] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : List of 1
[08:08:07.816] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.816] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.816] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:07.816] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.816] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.816] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.816] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.816] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f903aa0110> 
[08:08:07.816] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.816] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.816] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.981] | : . ' , ; ` | : . ' , ; Condition #139 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.981] | : . ' , ; ` | : . ' , ; Condition #139: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.819] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Not identical
[08:08:07.981] | : . ' , ; ` | : . ' , ; Condition #140 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.981] | : . ' , ; ` | : . ' , ; Condition #140: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.819] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : all.equal() for future ...
[08:08:07.982] | : . ' , ; ` | : . ' , ; Condition #141 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.982] | : . ' , ; ` | : . ' , ; Condition #141: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.819] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . List of 2
[08:08:07.819] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.819] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.819] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:08:07.819] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.819] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.819] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.819] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.819] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.819] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.819] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:07.819] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.819] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.819] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.819] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.819] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f903aa0110> 
[08:08:07.819] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.819] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.982] | : . ' , ; ` | : . ' , ; Condition #142 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.982] | : . ' , ; ` | : . ' , ; Condition #142: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.824] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : all.equal() for future ... done
[08:08:07.982] | : . ' , ; ` | : . ' , ; Condition #143 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.982] | : . ' , ; ` | : . ' , ; Condition #143: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.824] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:07.982] | : . ' , ; ` | : . ' , ; Condition #144 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.982] | : . ' , ; ` | : . ' , ; Condition #144: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.824] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:07.983] | : . ' , ; ` | : . ' , ; Condition #145 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.983] | : . ' , ; ` | : . ' , ; Condition #145: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.824] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | List of future strategies:
[08:08:07.824] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | 1. sequential:
[08:08:07.824] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:07.824] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` |    - tweaked: FALSE
[08:08:07.824] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` |    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.983] | : . ' , ; ` | : . ' , ; Condition #146 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.983] | : . ' , ; ` | : . ' , ; Condition #146: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.825] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:07.983] | : . ' , ; ` | : . ' , ; Condition #147 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.983] | : . ' , ; ` | : . ' , ; Condition #147: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.825] | : . ' , ; ` | : . ' , ; ` | : . ' , ; plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.983] | : . ' , ; ` | : . ' , ; Condition #148 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.983] | : . ' , ; ` | : . ' , ; Condition #148: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.828] | : . ' , ; ` | : . ' , ; ` | : . ' , ; plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:07.983] | : . ' , ; ` | : . ' , ; Condition #149 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.984] | : . ' , ; ` | : . ' , ; Condition #149: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.828] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:07.984] | : . ' , ; ` | : . ' , ; Condition #150 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.984] | : . ' , ; ` | : . ' , ; Condition #150: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.828] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:07.984] | : . ' , ; ` | : . ' , ; Condition #151 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.984] | : . ' , ; ` | : . ' , ; Condition #151: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.828] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : all.equal() for FutureStrategyList ...
[08:08:07.984] | : . ' , ; ` | : . ' , ; Condition #152 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.984] | : . ' , ; ` | : . ' , ; Condition #152: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.828] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . New stack:
[08:08:07.984] | : . ' , ; ` | : . ' , ; Condition #153 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.984] | : . ' , ; ` | : . ' , ; Condition #153: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.829] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . List of 1
[08:08:07.829] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.829] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.829] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:07.829] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.829] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.829] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.829] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.829] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f903aa0110> 
[08:08:07.829] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.829] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.829] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.985] | : . ' , ; ` | : . ' , ; Condition #154 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.985] | : . ' , ; ` | : . ' , ; Condition #154: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.832] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . Old stack:
[08:08:07.985] | : . ' , ; ` | : . ' , ; Condition #155 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.985] | : . ' , ; ` | : . ' , ; Condition #155: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.832] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . List of 1
[08:08:07.832] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:07.832] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:07.832] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:07.832] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.832] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.832] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.832] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.832] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f903aa0110> 
[08:08:07.832] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:07.832] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:07.832] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:07.985] | : . ' , ; ` | : . ' , ; Condition #156 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.985] | : . ' , ; ` | : . ' , ; Condition #156: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.835] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . Identical
[08:08:07.985] | : . ' , ; ` | : . ' , ; Condition #157 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.986] | : . ' , ; ` | : . ' , ; Condition #157: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.835] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : all.equal() for FutureStrategyList ... done
[08:08:07.986] | : . ' , ; ` | : . ' , ; Condition #158 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.986] | : . ' , ; ` | : . ' , ; Condition #158: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.835] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:07.987] | : . ' , ; ` | : . ' , ; Condition #159 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.987] | : . ' , ; ` | : . ' , ; Condition #159: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.835] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : List of future strategies:
[08:08:07.835] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : 1. sequential:
[08:08:07.835] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:07.835] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :    - tweaked: FALSE
[08:08:07.835] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | :    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:07.987] | : . ' , ; ` | : . ' , ; Condition #160 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.987] | : . ' , ; ` | : . ' , ; Condition #160: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.836] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:07.987] | : . ' , ; ` | : . ' , ; Condition #161 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.987] | : . ' , ; ` | : . ' , ; Condition #161: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.836] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.987] | : . ' , ; ` | : . ' , ; Condition #162 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.987] | : . ' , ; ` | : . ' , ; Condition #162: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.836] | : . ' , ; ` | : . ' , ; ` | : . ' , ; plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:07.988] | : . ' , ; ` | : . ' , ; Condition #163 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.988] | : . ' , ; ` | : . ' , ; Condition #163: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.836] | : . ' , ; ` | : . ' , ; ` | : . ' , ; SequentialFuture started (and completed)
[08:08:07.988] | : . ' , ; ` | : . ' , ; Condition #164 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.988] | : . ' , ; ` | : . ' , ; Condition #164: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.837] | : . ' , ; ` | : . ' , ; ` | : . ' , ; signalConditions() ...
[08:08:07.988] | : . ' , ; ` | : . ' , ; Condition #165 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.988] | : . ' , ; ` | : . ' , ; Condition #165: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.837] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` include = ‘immediateCondition’
[08:08:07.988] | : . ' , ; ` | : . ' , ; Condition #166 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.988] | : . ' , ; ` | : . ' , ; Condition #166: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.837] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` exclude = 
[08:08:07.988] | : . ' , ; ` | : . ' , ; Condition #167 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.989] | : . ' , ; ` | : . ' , ; Condition #167: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.837] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` resignal = FALSE
[08:08:07.989] | : . ' , ; ` | : . ' , ; Condition #168 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.989] | : . ' , ; ` | : . ' , ; Condition #168: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.837] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Number of conditions: 6
[08:08:07.989] | : . ' , ; ` | : . ' , ; Condition #169 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.989] | : . ' , ; ` | : . ' , ; Condition #169: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.837] | : . ' , ; ` | : . ' , ; ` | : . ' , ; `  int 6
[08:08:07.989] | : . ' , ; ` | : . ' , ; Condition #170 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.989] | : . ' , ; ` | : . ' , ; Condition #170: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.838] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.989] | : . ' , ; ` | : . ' , ; Condition #171 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.990] | : . ' , ; ` | : . ' , ; Condition #171: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.838] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.990] | : . ' , ; ` | : . ' , ; Condition #172 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.990] | : . ' , ; ` | : . ' , ; Condition #172: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.838] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.990] | : . ' , ; ` | : . ' , ; Condition #173 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.990] | : . ' , ; ` | : . ' , ; Condition #173: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.838] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.990] | : . ' , ; ` | : . ' , ; Condition #174 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.990] | : . ' , ; ` | : . ' , ; Condition #174: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.838] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.990] | : . ' , ; ` | : . ' , ; Condition #175 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.990] | : . ' , ; ` | : . ' , ; Condition #175: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.838] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.991] | : . ' , ; ` | : . ' , ; Condition #176 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.991] | : . ' , ; ` | : . ' , ; Condition #176: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.838] | : . ' , ; ` | : . ' , ; ` | : . ' , ; signalConditions() ... done
[08:08:07.991] | : . ' , ; ` | : . ' , ; Condition #177 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.991] | : . ' , ; ` | : . ' , ; Condition #177: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.838] | : . ' , ; ` | : . ' , ; ` | : . ' , launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:07.991] | : . ' , ; ` | : . ' , ; Condition #178 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.991] | : . ' , ; ` | : . ' , ; Condition #178: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.839] | : . ' , ; ` | : . ' , ; ` | : . ' Launching futures ... done
[08:08:07.991] | : . ' , ; ` | : . ' , ; Condition #179 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.991] | : . ' , ; ` | : . ' , ; Condition #179: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.839] | : . ' , ; ` | : . ' , ; ` | : . ' Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:07.991] | : . ' , ; ` | : . ' , ; Condition #180 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.992] | : . ' , ; ` | : . ' , ; Condition #180: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.839] | : . ' , ; ` | : . ' , ; ` | : . Using SequentialFutureBackend ... done
[08:08:07.992] | : . ' , ; ` | : . ' , ; Condition #181 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.992] | : . ' , ; ` | : . ' , ; Condition #181: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.839] | : . ' , ; ` | : . ' , ; ` | : run() for ‘Future’ (<unnamed-25>) ... done
[08:08:07.992] | : . ' , ; ` | : . ' , ; Condition #182 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.992] | : . ' , ; ` | : . ' , ; Condition #182: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.839] | : . ' , ; ` | : . ' , ; ` | future(..., label = NULL) ... done
[08:08:07.992] | : . ' , ; ` | : . ' , ; Condition #183 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.992] | : . ' , ; ` | : . ' , ; Condition #183: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.839] | : . ' , ; ` | : . ' , ; ` | value() for SequentialFuture (<unnamed-24>) ...
[08:08:07.992] | : . ' , ; ` | : . ' , ; Condition #184 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.992] | : . ' , ; ` | : . ' , ; Condition #184: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.839] | : . ' , ; ` | : . ' , ; ` | : signalConditions() ...
[08:08:07.993] | : . ' , ; ` | : . ' , ; Condition #185 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.993] | : . ' , ; ` | : . ' , ; Condition #185: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.840] | : . ' , ; ` | : . ' , ; ` | : . include = ‘immediateCondition’
[08:08:07.993] | : . ' , ; ` | : . ' , ; Condition #186 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.993] | : . ' , ; ` | : . ' , ; Condition #186: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.840] | : . ' , ; ` | : . ' , ; ` | : . exclude = 
[08:08:07.993] | : . ' , ; ` | : . ' , ; Condition #187 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.993] | : . ' , ; ` | : . ' , ; Condition #187: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.840] | : . ' , ; ` | : . ' , ; ` | : . resignal = FALSE
[08:08:07.993] | : . ' , ; ` | : . ' , ; Condition #188 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.993] | : . ' , ; ` | : . ' , ; Condition #188: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.840] | : . ' , ; ` | : . ' , ; ` | : . Number of conditions: 6
[08:08:07.993] | : . ' , ; ` | : . ' , ; Condition #189 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.994] | : . ' , ; ` | : . ' , ; Condition #189: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.840] | : . ' , ; ` | : . ' , ; ` | : .  int 6
[08:08:07.994] | : . ' , ; ` | : . ' , ; Condition #190 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.994] | : . ' , ; ` | : . ' , ; Condition #190: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.840] | : . ' , ; ` | : . ' , ; ` | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.994] | : . ' , ; ` | : . ' , ; Condition #191 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.994] | : . ' , ; ` | : . ' , ; Condition #191: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.841] | : . ' , ; ` | : . ' , ; ` | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.994] | : . ' , ; ` | : . ' , ; Condition #192 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.994] | : . ' , ; ` | : . ' , ; Condition #192: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.841] | : . ' , ; ` | : . ' , ; ` | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.994] | : . ' , ; ` | : . ' , ; Condition #193 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.994] | : . ' , ; ` | : . ' , ; Condition #193: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.841] | : . ' , ; ` | : . ' , ; ` | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.995] | : . ' , ; ` | : . ' , ; Condition #194 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.995] | : . ' , ; ` | : . ' , ; Condition #194: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.841] | : . ' , ; ` | : . ' , ; ` | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.995] | : . ' , ; ` | : . ' , ; Condition #195 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.995] | : . ' , ; ` | : . ' , ; Condition #195: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.841] | : . ' , ; ` | : . ' , ; ` | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.995] | : . ' , ; ` | : . ' , ; Condition #196 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.995] | : . ' , ; ` | : . ' , ; Condition #196: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.841] | : . ' , ; ` | : . ' , ; ` | : signalConditions() ... done
[08:08:07.995] | : . ' , ; ` | : . ' , ; Condition #197 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.995] | : . ' , ; ` | : . ' , ; Condition #197: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.841] | : . ' , ; ` | : . ' , ; ` | : relay stdout ...
[08:08:07.995] | : . ' , ; ` | : . ' , ; Condition #198 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.995] | : . ' , ; ` | : . ' , ; Condition #198: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.842] | : . ' , ; ` | : . ' , ; ` | : relay stdout ... done
[08:08:07.996] | : . ' , ; ` | : . ' , ; Condition #199 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.996] | : . ' , ; ` | : . ' , ; Condition #199: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.842] | : . ' , ; ` | : . ' , ; ` | : check for misuse ...
[08:08:07.996] | : . ' , ; ` | : . ' , ; Condition #200 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.996] | : . ' , ; ` | : . ' , ; Condition #200: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.842] | : . ' , ; ` | : . ' , ; ` | : check for misuse ... done
[08:08:07.996] | : . ' , ; ` | : . ' , ; Condition #201 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.996] | : . ' , ; ` | : . ' , ; Condition #201: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.842] | : . ' , ; ` | : . ' , ; ` | : relay conditions ...
[08:08:07.996] | : . ' , ; ` | : . ' , ; Condition #202 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.996] | : . ' , ; ` | : . ' , ; Condition #202: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.842] | : . ' , ; ` | : . ' , ; ` | : . Future state: ‘finished’
[08:08:07.996] | : . ' , ; ` | : . ' , ; Condition #203 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.997] | : . ' , ; ` | : . ' , ; Condition #203: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.842] | : . ' , ; ` | : . ' , ; ` | : . signalConditions() ...
[08:08:07.997] | : . ' , ; ` | : . ' , ; Condition #204 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.997] | : . ' , ; ` | : . ' , ; Condition #204: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.842] | : . ' , ; ` | : . ' , ; ` | : . ' include = ‘condition’
[08:08:07.997] | : . ' , ; ` | : . ' , ; Condition #205 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.997] | : . ' , ; ` | : . ' , ; Condition #205: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.842] | : . ' , ; ` | : . ' , ; ` | : . ' exclude = ‘immediateCondition’
[08:08:07.997] | : . ' , ; ` | : . ' , ; Condition #206 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.997] | : . ' , ; ` | : . ' , ; Condition #206: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.843] | : . ' , ; ` | : . ' , ; ` | : . ' resignal = TRUE
[08:08:07.997] | : . ' , ; ` | : . ' , ; Condition #207 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.997] | : . ' , ; ` | : . ' , ; Condition #207: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.843] | : . ' , ; ` | : . ' , ; ` | : . ' Number of conditions: 6
[08:08:07.998] | : . ' , ; ` | : . ' , ; Condition #208 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.998] | : . ' , ; ` | : . ' , ; Condition #208: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.844] | : . ' , ; ` | : . ' , ; ` | : . '  int 6
[08:08:07.998] | : . ' , ; ` | : . ' , ; Condition #209 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.998] | : . ' , ; ` | : . ' , ; Condition #209: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.844] | : . ' , ; ` | : . ' , ; ` | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.998] | : . ' , ; ` | : . ' , ; Condition #210 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.998] | : . ' , ; ` | : . ' , ; Condition #210: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.845] | : . ' , ; ` | : . ' , ; ` | : . ' Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.998] | : . ' , ; ` | : . ' , ; Condition #211 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.998] | : . ' , ; ` | : . ' , ; Condition #211: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.774] | : . ' , ; ` | : . ' , ; ` | : . ' , ; attachPackages() ...
[08:08:07.998] | : . ' , ; ` | : . ' , ; Condition #212 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.999] | : . ' , ; ` | : . ' , ; Condition #212: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.845] | : . ' , ; ` | : . ' , ; ` | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.999] | : . ' , ; ` | : . ' , ; Condition #213 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.999] | : . ' , ; ` | : . ' , ; Condition #213: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.845] | : . ' , ; ` | : . ' , ; ` | : . ' Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.999] | : . ' , ; ` | : . ' , ; Condition #214 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.999] | : . ' , ; ` | : . ' , ; Condition #214: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.774] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` packages: [n=1] ‘future’
[08:08:07.999] | : . ' , ; ` | : . ' , ; Condition #215 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.999] | : . ' , ; ` | : . ' , ; Condition #215: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.845] | : . ' , ; ` | : . ' , ; ` | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.999] | : . ' , ; ` | : . ' , ; Condition #216 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:07.999] | : . ' , ; ` | : . ' , ; Condition #216: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.845] | : . ' , ; ` | : . ' , ; ` | : . ' Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:08.000] | : . ' , ; ` | : . ' , ; Condition #217 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.000] | : . ' , ; ` | : . ' , ; Condition #217: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.774] | : . ' , ; ` | : . ' , ; ` | : . ' , ; attachPackages() ... done
[08:08:08.000] | : . ' , ; ` | : . ' , ; Condition #218 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.000] | : . ' , ; ` | : . ' , ; Condition #218: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.845] | : . ' , ; ` | : . ' , ; ` | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.001] | : . ' , ; ` | : . ' , ; Condition #219 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.001] | : . ' , ; ` | : . ' , ; Condition #219: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.845] | : . ' , ; ` | : . ' , ; ` | : . ' Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:08.001] | : . ' , ; ` | : . ' , ; Condition #220 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.002] | : . ' , ; ` | : . ' , ; Condition #220: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.774] | : . ' , ; ` | : . ' , ; ` | : . ' , ; attachPackages() ...
[08:08:08.002] | : . ' , ; ` | : . ' , ; Condition #221 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.002] | : . ' , ; ` | : . ' , ; Condition #221: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.846] | : . ' , ; ` | : . ' , ; ` | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.002] | : . ' , ; ` | : . ' , ; Condition #222 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.002] | : . ' , ; ` | : . ' , ; Condition #222: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.846] | : . ' , ; ` | : . ' , ; ` | : . ' Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:08.002] | : . ' , ; ` | : . ' , ; Condition #223 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.002] | : . ' , ; ` | : . ' , ; Condition #223: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.774] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` packages: [n=0] 
[08:08:08.002] | : . ' , ; ` | : . ' , ; Condition #224 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.002] | : . ' , ; ` | : . ' , ; Condition #224: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.846] | : . ' , ; ` | : . ' , ; ` | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.003] | : . ' , ; ` | : . ' , ; Condition #225 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.003] | : . ' , ; ` | : . ' , ; Condition #225: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.846] | : . ' , ; ` | : . ' , ; ` | : . ' Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:08.003] | : . ' , ; ` | : . ' , ; Condition #226 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.003] | : . ' , ; ` | : . ' , ; Condition #226: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.774] | : . ' , ; ` | : . ' , ; ` | : . ' , ; attachPackages() ... done
[08:08:08.003] | : . ' , ; ` | : . ' , ; Condition #227 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.003] | : . ' , ; ` | : . ' , ; Condition #227: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.846] | : . ' , ; ` | : . ' , ; ` | : . signalConditions() ... done
[08:08:08.003] | : . ' , ; ` | : . ' , ; Condition #228 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.003] | : . ' , ; ` | : . ' , ; Condition #228: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.846] | : . ' , ; ` | : . ' , ; ` | : relay conditions ... done
[08:08:08.004] | : . ' , ; ` | : . ' , ; Condition #229 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.004] | : . ' , ; ` | : . ' , ; Condition #229: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.846] | : . ' , ; ` | : . ' , ; ` | value() for SequentialFuture (<unnamed-24>) ... done
[08:08:08.004] | : . ' , ; ` | : . ' , ; Condition #230 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.004] | : . ' , ; ` | : . ' , ; Condition #230: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.847] | : . ' , ; ` | : . ' , ; ` | value() for SequentialFuture (<unnamed-25>) ...
[08:08:08.004] | : . ' , ; ` | : . ' , ; Condition #231 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.004] | : . ' , ; ` | : . ' , ; Condition #231: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.847] | : . ' , ; ` | : . ' , ; ` | : signalConditions() ...
[08:08:08.004] | : . ' , ; ` | : . ' , ; Condition #232 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.004] | : . ' , ; ` | : . ' , ; Condition #232: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.847] | : . ' , ; ` | : . ' , ; ` | : . include = ‘immediateCondition’
[08:08:08.004] | : . ' , ; ` | : . ' , ; Condition #233 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.005] | : . ' , ; ` | : . ' , ; Condition #233: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.847] | : . ' , ; ` | : . ' , ; ` | : . exclude = 
[08:08:08.005] | : . ' , ; ` | : . ' , ; Condition #234 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.005] | : . ' , ; ` | : . ' , ; Condition #234: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.847] | : . ' , ; ` | : . ' , ; ` | : . resignal = FALSE
[08:08:08.005] | : . ' , ; ` | : . ' , ; Condition #235 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.005] | : . ' , ; ` | : . ' , ; Condition #235: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.847] | : . ' , ; ` | : . ' , ; ` | : . Number of conditions: 6
[08:08:08.005] | : . ' , ; ` | : . ' , ; Condition #236 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.005] | : . ' , ; ` | : . ' , ; Condition #236: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.847] | : . ' , ; ` | : . ' , ; ` | : .  int 6
[08:08:08.005] | : . ' , ; ` | : . ' , ; Condition #237 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.005] | : . ' , ; ` | : . ' , ; Condition #237: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.848] | : . ' , ; ` | : . ' , ; ` | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.006] | : . ' , ; ` | : . ' , ; Condition #238 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.006] | : . ' , ; ` | : . ' , ; Condition #238: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.848] | : . ' , ; ` | : . ' , ; ` | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.006] | : . ' , ; ` | : . ' , ; Condition #239 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.006] | : . ' , ; ` | : . ' , ; Condition #239: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.848] | : . ' , ; ` | : . ' , ; ` | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.006] | : . ' , ; ` | : . ' , ; Condition #240 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.006] | : . ' , ; ` | : . ' , ; Condition #240: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.848] | : . ' , ; ` | : . ' , ; ` | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.006] | : . ' , ; ` | : . ' , ; Condition #241 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.006] | : . ' , ; ` | : . ' , ; Condition #241: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.848] | : . ' , ; ` | : . ' , ; ` | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.006] | : . ' , ; ` | : . ' , ; Condition #242 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.007] | : . ' , ; ` | : . ' , ; Condition #242: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.849] | : . ' , ; ` | : . ' , ; ` | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.007] | : . ' , ; ` | : . ' , ; Condition #243 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.007] | : . ' , ; ` | : . ' , ; Condition #243: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.849] | : . ' , ; ` | : . ' , ; ` | : signalConditions() ... done
[08:08:08.007] | : . ' , ; ` | : . ' , ; Condition #244 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.007] | : . ' , ; ` | : . ' , ; Condition #244: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.849] | : . ' , ; ` | : . ' , ; ` | : relay stdout ...
[08:08:08.007] | : . ' , ; ` | : . ' , ; Condition #245 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.007] | : . ' , ; ` | : . ' , ; Condition #245: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.849] | : . ' , ; ` | : . ' , ; ` | : relay stdout ... done
[08:08:08.007] | : . ' , ; ` | : . ' , ; Condition #246 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.007] | : . ' , ; ` | : . ' , ; Condition #246: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.849] | : . ' , ; ` | : . ' , ; ` | : check for misuse ...
[08:08:08.008] | : . ' , ; ` | : . ' , ; Condition #247 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.008] | : . ' , ; ` | : . ' , ; Condition #247: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.849] | : . ' , ; ` | : . ' , ; ` | : check for misuse ... done
[08:08:08.008] | : . ' , ; ` | : . ' , ; Condition #248 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.008] | : . ' , ; ` | : . ' , ; Condition #248: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.849] | : . ' , ; ` | : . ' , ; ` | : relay conditions ...
[08:08:08.008] | : . ' , ; ` | : . ' , ; Condition #249 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.008] | : . ' , ; ` | : . ' , ; Condition #249: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.849] | : . ' , ; ` | : . ' , ; ` | : . Future state: ‘finished’
[08:08:08.008] | : . ' , ; ` | : . ' , ; Condition #250 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.008] | : . ' , ; ` | : . ' , ; Condition #250: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.850] | : . ' , ; ` | : . ' , ; ` | : . signalConditions() ...
[08:08:08.008] | : . ' , ; ` | : . ' , ; Condition #251 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.009] | : . ' , ; ` | : . ' , ; Condition #251: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.850] | : . ' , ; ` | : . ' , ; ` | : . ' include = ‘condition’
[08:08:08.009] | : . ' , ; ` | : . ' , ; Condition #252 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.009] | : . ' , ; ` | : . ' , ; Condition #252: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.850] | : . ' , ; ` | : . ' , ; ` | : . ' exclude = ‘immediateCondition’
[08:08:08.009] | : . ' , ; ` | : . ' , ; Condition #253 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.009] | : . ' , ; ` | : . ' , ; Condition #253: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.850] | : . ' , ; ` | : . ' , ; ` | : . ' resignal = TRUE
[08:08:08.009] | : . ' , ; ` | : . ' , ; Condition #254 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.009] | : . ' , ; ` | : . ' , ; Condition #254: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.850] | : . ' , ; ` | : . ' , ; ` | : . ' Number of conditions: 6
[08:08:08.009] | : . ' , ; ` | : . ' , ; Condition #255 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.009] | : . ' , ; ` | : . ' , ; Condition #255: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.850] | : . ' , ; ` | : . ' , ; ` | : . '  int 6
[08:08:08.010] | : . ' , ; ` | : . ' , ; Condition #256 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.010] | : . ' , ; ` | : . ' , ; Condition #256: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.851] | : . ' , ; ` | : . ' , ; ` | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.010] | : . ' , ; ` | : . ' , ; Condition #257 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.010] | : . ' , ; ` | : . ' , ; Condition #257: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.851] | : . ' , ; ` | : . ' , ; ` | : . ' Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:08.010] | : . ' , ; ` | : . ' , ; Condition #258 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.010] | : . ' , ; ` | : . ' , ; Condition #258: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.811] | : . ' , ; ` | : . ' , ; ` | : . ' , ; attachPackages() ...
[08:08:08.010] | : . ' , ; ` | : . ' , ; Condition #259 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.010] | : . ' , ; ` | : . ' , ; Condition #259: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.851] | : . ' , ; ` | : . ' , ; ` | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.010] | : . ' , ; ` | : . ' , ; Condition #260 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.011] | : . ' , ; ` | : . ' , ; Condition #260: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.851] | : . ' , ; ` | : . ' , ; ` | : . ' Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:08.011] | : . ' , ; ` | : . ' , ; Condition #261 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.011] | : . ' , ; ` | : . ' , ; Condition #261: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.811] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` packages: [n=1] ‘future’
[08:08:08.011] | : . ' , ; ` | : . ' , ; Condition #262 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.011] | : . ' , ; ` | : . ' , ; Condition #262: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.851] | : . ' , ; ` | : . ' , ; ` | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.011] | : . ' , ; ` | : . ' , ; Condition #263 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.011] | : . ' , ; ` | : . ' , ; Condition #263: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.851] | : . ' , ; ` | : . ' , ; ` | : . ' Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:08.011] | : . ' , ; ` | : . ' , ; Condition #264 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.011] | : . ' , ; ` | : . ' , ; Condition #264: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.811] | : . ' , ; ` | : . ' , ; ` | : . ' , ; attachPackages() ... done
[08:08:08.012] | : . ' , ; ` | : . ' , ; Condition #265 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.012] | : . ' , ; ` | : . ' , ; Condition #265: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.851] | : . ' , ; ` | : . ' , ; ` | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.012] | : . ' , ; ` | : . ' , ; Condition #266 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.012] | : . ' , ; ` | : . ' , ; Condition #266: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.852] | : . ' , ; ` | : . ' , ; ` | : . ' Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:08.012] | : . ' , ; ` | : . ' , ; Condition #267 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.012] | : . ' , ; ` | : . ' , ; Condition #267: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.811] | : . ' , ; ` | : . ' , ; ` | : . ' , ; attachPackages() ...
[08:08:08.012] | : . ' , ; ` | : . ' , ; Condition #268 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.012] | : . ' , ; ` | : . ' , ; Condition #268: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.852] | : . ' , ; ` | : . ' , ; ` | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.012] | : . ' , ; ` | : . ' , ; Condition #269 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.013] | : . ' , ; ` | : . ' , ; Condition #269: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.852] | : . ' , ; ` | : . ' , ; ` | : . ' Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:08.013] | : . ' , ; ` | : . ' , ; Condition #270 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.013] | : . ' , ; ` | : . ' , ; Condition #270: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.811] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` packages: [n=0] 
[08:08:08.013] | : . ' , ; ` | : . ' , ; Condition #271 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.013] | : . ' , ; ` | : . ' , ; Condition #271: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.852] | : . ' , ; ` | : . ' , ; ` | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.013] | : . ' , ; ` | : . ' , ; Condition #272 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.013] | : . ' , ; ` | : . ' , ; Condition #272: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.852] | : . ' , ; ` | : . ' , ; ` | : . ' Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:08.013] | : . ' , ; ` | : . ' , ; Condition #273 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.013] | : . ' , ; ` | : . ' , ; Condition #273: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.811] | : . ' , ; ` | : . ' , ; ` | : . ' , ; attachPackages() ... done
[08:08:08.014] | : . ' , ; ` | : . ' , ; Condition #274 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.014] | : . ' , ; ` | : . ' , ; Condition #274: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.852] | : . ' , ; ` | : . ' , ; ` | : . signalConditions() ... done
[08:08:08.014] | : . ' , ; ` | : . ' , ; Condition #275 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.014] | : . ' , ; ` | : . ' , ; Condition #275: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.853] | : . ' , ; ` | : . ' , ; ` | : relay conditions ... done
[08:08:08.014] | : . ' , ; ` | : . ' , ; Condition #276 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.014] | : . ' , ; ` | : . ' , ; Condition #276: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:07.853] | : . ' , ; ` | : . ' , ; ` | value() for SequentialFuture (<unnamed-25>) ... done
[08:08:08.014] | : . ' , ; ` | : . ' , signalConditions() ... done
[08:08:08.014] | : . ' , ; ` | : . ' relay conditions ... done
[08:08:08.015] | : . ' , ; ` | : . value() for MulticoreFuture (<unnamed-23>) ... done
a = 10
[08:08:08.015] | : . ' , ; ` | : . future(..., label = NULL) ...
[08:08:08.015] | : . ' , ; ` | : . ' lazy: FALSE
[08:08:08.015] | : . ' , ; ` | : . ' stdout: TRUE
[08:08:08.015] | : . ' , ; ` | : . ' conditions: [n=1] ‘condition’
[08:08:08.015] | : . ' , ; ` | : . ' gc: FALSE
[08:08:08.015] | : . ' , ; ` | : . ' earlySignal: FALSE
[08:08:08.016] | : . ' , ; ` | : . ' getGlobalsAndPackages() ...
[08:08:08.016] | : . ' , ; ` | : . ' , Searching for globals ...
[08:08:08.022] | : . ' , ; ` | : . ' , ; globals found: [3] ‘{’, ‘+’, ‘a’
[08:08:08.022] | : . ' , ; ` | : . ' , Searching for globals ... done
[08:08:08.022] | : . ' , ; ` | : . ' , Resolving globals: FALSE
[08:08:08.022] | : . ' , ; ` | : . ' , Search for packages associated with the globals ...
[08:08:08.022] | : . ' , ; ` | : . ' , ; Packages associated with globals: [1] ‘base’
[08:08:08.023] | : . ' , ; ` | : . ' , ; Packages: [1] ‘base’
[08:08:08.023] | : . ' , ; ` | : . ' , Search for packages associated with the globals ... done
[08:08:08.023] | : . ' , ; ` | : . ' , Packages after dropping 'base': [0] 
[08:08:08.023] | : . ' , ; ` | : . ' , globals: [1] ‘a’
[08:08:08.023] | : . ' , ; ` | : . ' , packages: [0] 
[08:08:08.023] | : . ' , ; ` | : . ' getGlobalsAndPackages() ... done
[08:08:08.023] | : . ' , ; ` | : . ' run() for ‘Future’ (<unnamed-24>) ...
[08:08:08.023] | : . ' , ; ` | : . ' , state: ‘created’
[08:08:08.024] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:08.024] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:08.024] | : . ' , ; ` | : . ' , Using MulticoreFutureBackend ...
[08:08:08.024] | : . ' , ; ` | : . ' , ; Number of futures since start: 10 (10 created, 10 launched, 11 finished)
[08:08:08.024] | : . ' , ; ` | : . ' , ; Launching futures ...
[08:08:08.024] | : . ' , ; ` | : . ' , ; ` launchFuture() for MulticoreFutureBackend ...
[08:08:08.024] | : . ' , ; ` | : . ' , ; ` | getFutureData() ...
[08:08:08.024] | : . ' , ; ` | : . ' , ; ` | : getFutureCore() ...
[08:08:08.024] | : . ' , ; ` | : . ' , ; ` | : . Packages needed by the future expression (n = 0): <none>
[08:08:08.025] | : . ' , ; ` | : . ' , ; ` | : getFutureCore() ... done
[08:08:08.025] | : . ' , ; ` | : . ' , ; ` | : getFutureCapture() ...
[08:08:08.025] | : . ' , ; ` | : . ' , ; ` | : getFutureCapture() ... done
[08:08:08.025] | : . ' , ; ` | : . ' , ; ` | : getFutureContext() ...
[08:08:08.025] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:08.025] | : . ' , ; ` | : . ' , ; ` | : . ' Getting stack without first backend: [n=0] 
[08:08:08.025] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:08.025] | : . ' , ; ` | : . ' , ; ` | : . Packages needed by future backend (n = 0): <none>
[08:08:08.025] | : . ' , ; ` | : . ' , ; ` | : getFutureContext() ... done
[08:08:08.026] | : . ' , ; ` | : . ' , ; ` | getFutureData() ... done
[08:08:08.026] | : . ' , ; ` | : . ' , ; ` | requestCore(..., workers = 2) ...
[08:08:08.026] | : . ' , ; ` | : . ' , ; ` | requestCore(..., workers = 2) ... done
[08:08:08.028] | : . ' , ; ` | : . ' , ; ` | MulticoreFuture started
[08:08:08.029] | : . ' , ; ` | : . ' , ; ` launchFuture() for MulticoreFutureBackend ... done
[08:08:08.029] | : . ' , ; ` | : . ' , ; Launching futures ... done
[08:08:08.029] | : . ' , ; ` | : . ' , ; Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:08.029] | : . ' , ; ` | : . ' , Using MulticoreFutureBackend ... done
[08:08:08.029] | : . ' , ; ` | : . ' run() for ‘Future’ (<unnamed-24>) ... done
[08:08:08.030] | : . ' , ; ` | : . future(..., label = NULL) ... done
[08:08:08.030] | : . ' , ; ` | : . value() for MulticoreFuture (<unnamed-24>) ...
[08:08:08.030] | : . ' , ; ` | : . ' result() for MulticoreFuture ...
[08:08:08.031] | : . ' , ; ` | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:08.032] | : . ' , ; ` | : . ' , ; ` | : Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:08.032] | : . ' , ; ` | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:08.032] | : . ' , ; ` | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:08.033] | : . ' , ; ` | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:08.033] | : . ' , ; ` | : . ' , ; ` | : . all.equal() for FutureStrategyList ...
[08:08:08.033] | : . ' , ; ` | : . ' , ; ` | : . ' New stack:
[08:08:08.033] | : . ' , ; ` | : . ' , ; ` | : . ' List of 1
[08:08:08.033] | : . ' , ; ` | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:08.033] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:08.033] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "init")= logi TRUE
[08:08:08.033] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:08.033] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:08.033] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:08.033] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:08.033] | : . ' , ; ` | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:08.038] | : . ' , ; ` | : . ' , ; ` | : . ' Old stack:
[08:08:08.039] | : . ' , ; ` | : . ' , ; ` | : . ' List of 1
[08:08:08.039] | : . ' , ; ` | : . ' , ; ` | : . '  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:08.039] | : . ' , ; ` | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:08:08.039] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:08.039] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:08:08.039] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:08.039] | : . ' , ; ` | : . ' , ; ` | : . '     ...)  
[08:08:08.039] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:08.039] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:08.039] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:08:08.039] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:08.039] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:08.039] | : . ' , ; ` | : . ' , ; ` | : . '     ...)  
[08:08:08.039] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:08.039] | : . ' , ; ` | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:08.048] | : . ' , ; ` | : . ' , ; ` | : . ' Not identical
[08:08:08.049] | : . ' , ; ` | : . ' , ; ` | : . ' all.equal() for future ...
[08:08:08.049] | : . ' , ; ` | : . ' , ; ` | : . ' , List of 2
[08:08:08.049] | : . ' , ; ` | : . ' , ; ` | : . ' ,  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:08.049] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:08.049] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= logi TRUE
[08:08:08.049] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:08.049] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:08.049] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:08.049] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:08.049] | : . ' , ; ` | : . ' , ; ` | : . ' ,  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:08.049] | : . ' , ; ` | : . ' , ; ` | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:08:08.049] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:08.049] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:08:08.049] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:08.049] | : . ' , ; ` | : . ' , ; ` | : . ' ,     ...)  
[08:08:08.049] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:08.049] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:08.049] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategy)
[08:08:08.049] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:08.049] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:08.049] | : . ' , ; ` | : . ' , ; ` | : . ' ,     ...)  
[08:08:08.049] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:08.058] | : . ' , ; ` | : . ' , ; ` | : . ' , Formals differ
[08:08:08.058] | : . ' , ; ` | : . ' , ; ` | : . ' all.equal() for future ... done
[08:08:08.058] | : . ' , ; ` | : . ' , ; ` | : . ' Future strategies differ at level 1
[08:08:08.058] | : . ' , ; ` | : . ' , ; ` | : . all.equal() for FutureStrategyList ... done
[08:08:08.058] | : . ' , ; ` | : . ' , ; ` | : . plan(): Setting new future backend stack:
[08:08:08.058] | : . ' , ; ` | : . ' , ; ` | : . List of future strategies:
[08:08:08.058] | : . ' , ; ` | : . ' , ; ` | : . 1. sequential:
[08:08:08.058] | : . ' , ; ` | : . ' , ; ` | : .    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:08.058] | : . ' , ; ` | : . ' , ; ` | : .    - tweaked: FALSE
[08:08:08.058] | : . ' , ; ` | : . ' , ; ` | : .    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:08.059] | : . ' , ; ` | : . ' , ; ` | : . List of 1
[08:08:08.059] | : . ' , ; ` | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:08.059] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:08.059] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:08:08.059] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:08.059] | : . ' , ; ` | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:08.059] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:08.059] | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:08.059] | : . ' , ; ` | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:08.062] | : . ' , ; ` | : . ' , ; ` | : . plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:08.062] | : . ' , ; ` | : . ' , ; ` | : . plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:08.062] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:08.062] | : . ' , ; ` | : . ' , ; ` | : . ' plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:08.063] | : . ' , ; ` | : . ' , ; ` | : . ' , function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:08.063] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:08.063] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "init")= logi TRUE
[08:08:08.063] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:08.063] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:08.063] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:08.063] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:08.065] | : . ' , ; ` | : . ' , ; ` | : . ' , init: TRUE
[08:08:08.065] | : . ' , ; ` | : . ' , ; ` | : . ' , makeFutureBackend(<sequential>) ...
[08:08:08.065] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Backend function: <‘NULL’>
[08:08:08.065] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Evaluator tweak arguments: [n=0]
[08:08:08.065] | : . ' , ; ` | : . ' , ; ` | : . ' , ;  list()
[08:08:08.065] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Evaluator formal arguments: [n=2]
[08:08:08.066] | : . ' , ; ` | : . ' , ; ` | : . ' , ;  list()
[08:08:08.066] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Backend factory arguments: [n=2]
[08:08:08.066] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Dotted pair list of 2
[08:08:08.066] | : . ' , ; ` | : . ' , ; ` | : . ' , ;  $ gc         : logi FALSE
[08:08:08.066] | : . ' , ; ` | : . ' , ; ` | : . ' , ;  $ earlySignal: logi FALSE
[08:08:08.110] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:08.111] | : . ' , ; ` | : . ' , ; ` | : . ' , makeFutureBackend(<sequential>) ... done
[08:08:08.111] | : . ' , ; ` | : . ' , ; ` | : . ' plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:08.111] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:08.111] | : . ' , ; ` | : . ' , ; ` | : . plan(): nbrOfWorkers() = 1
[08:08:08.111] | : . ' , ; ` | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:08.111] | : . ' , ; ` | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:08.111] | : . ' , ; ` | : . ' , ; ` | assign_globals() ...
[08:08:08.111] | : . ' , ; ` | : . ' , ; ` | List of 1
[08:08:08.111] | : . ' , ; ` | : . ' , ; ` |  $ a: num 10
[08:08:08.111] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "where")=List of 1
[08:08:08.111] | : . ' , ; ` | : . ' , ; ` |   ..$ a:<environment: R_GlobalEnv> 
[08:08:08.111] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:08.111] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "resolved")= logi FALSE
[08:08:08.111] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "total_size")= num NA
[08:08:08.111] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "already-done")= logi TRUE
[08:08:08.114] | : . ' , ; ` | : . ' , ; ` | - copied ‘a’ to environment
[08:08:08.114] | : . ' , ; ` | : . ' , ; ` | assign_globals() ... done
[08:08:08.116] | : . ' , ; ` | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:08.116] | : . ' , ; ` | : . ' , ; ` | : plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:08.116] | : . ' , ; ` | : . ' , ; ` | : . plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:08.116] | : . ' , ; ` | : . ' , ; ` | : . ' all.equal() for FutureStrategyList ...
[08:08:08.116] | : . ' , ; ` | : . ' , ; ` | : . ' , New stack:
[08:08:08.116] | : . ' , ; ` | : . ' , ; ` | : . ' , List of 1
[08:08:08.116] | : . ' , ; ` | : . ' , ; ` | : . ' ,  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:08.116] | : . ' , ; ` | : . ' , ; ` | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:08:08.116] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:08.116] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:08:08.116] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:08.116] | : . ' , ; ` | : . ' , ; ` | : . ' ,     ...)  
[08:08:08.116] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:08.116] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:08.116] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategy)
[08:08:08.116] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:08.116] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:08.116] | : . ' , ; ` | : . ' , ; ` | : . ' ,     ...)  
[08:08:08.116] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:08.116] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:08.120] | : . ' , ; ` | : . ' , ; ` | : . ' , Old stack:
[08:08:08.120] | : . ' , ; ` | : . ' , ; ` | : . ' , List of 1
[08:08:08.120] | : . ' , ; ` | : . ' , ; ` | : . ' ,  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:08.120] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:08.120] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:08:08.120] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:08.120] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:08.120] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:08.120] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:08.120] | : . ' , ; ` | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f904f49420> 
[08:08:08.120] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:08.120] | : . ' , ; ` | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:08.120] | : . ' , ; ` | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:08.123] | : . ' , ; ` | : . ' , ; ` | : . ' , Not identical
[08:08:08.123] | : . ' , ; ` | : . ' , ; ` | : . ' , all.equal() for future ...
[08:08:08.123] | : . ' , ; ` | : . ' , ; ` | : . ' , ; List of 2
[08:08:08.123] | : . ' , ; ` | : . ' , ; ` | : . ' , ;  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:08.123] | : . ' , ; ` | : . ' , ; ` | : . ' , ;     earlySignal = FALSE, envir = parent.frame())  
[08:08:08.123] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:08.123] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:08:08.123] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:08.123] | : . ' , ; ` | : . ' , ; ` | : . ' , ;     ...)  
[08:08:08.123] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:08.123] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:08.123] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategy)
[08:08:08.123] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:08.123] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:08.123] | : . ' , ; ` | : . ' , ; ` | : . ' , ;     ...)  
[08:08:08.123] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:08.123] | : . ' , ; ` | : . ' , ; ` | : . ' , ;  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:08.123] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:08.123] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:08:08.123] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:08.123] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:08.123] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:08.123] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:08.123] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f904f49420> 
[08:08:08.123] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:08.123] | : . ' , ; ` | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:08.129] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Formals differ
[08:08:08.129] | : . ' , ; ` | : . ' , ; ` | : . ' , all.equal() for future ... done
[08:08:08.129] | : . ' , ; ` | : . ' , ; ` | : . ' , Future strategies differ at level 1
[08:08:08.129] | : . ' , ; ` | : . ' , ; ` | : . ' all.equal() for FutureStrategyList ... done
[08:08:08.129] | : . ' , ; ` | : . ' , ; ` | : . ' plan(): Setting new future backend stack:
[08:08:08.129] | : . ' , ; ` | : . ' , ; ` | : . ' List of future strategies:
[08:08:08.129] | : . ' , ; ` | : . ' , ; ` | : . ' 1. multicore:
[08:08:08.129] | : . ' , ; ` | : . ' , ; ` | : . '    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:08.129] | : . ' , ; ` | : . ' , ; ` | : . '    - tweaked: FALSE
[08:08:08.129] | : . ' , ; ` | : . ' , ; ` | : . '    - call: plan(strategy)
[08:08:08.129] | : . ' , ; ` | : . ' , ; ` | : . ' List of 1
[08:08:08.129] | : . ' , ; ` | : . ' , ; ` | : . '  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:08.129] | : . ' , ; ` | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:08:08.129] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:08.129] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:08:08.129] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:08.129] | : . ' , ; ` | : . ' , ; ` | : . '     ...)  
[08:08:08.129] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:08.129] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:08.129] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:08:08.129] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:08.129] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:08.129] | : . ' , ; ` | : . ' , ; ` | : . '     ...)  
[08:08:08.129] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:08.129] | : . ' , ; ` | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:08.133] | : . ' , ; ` | : . ' , ; ` | : . ' plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:08.133] | : . ' , ; ` | : . ' , ; ` | : . ' plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:08.133] | : . ' , ; ` | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:08.133] | : . ' , ; ` | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:08.133] | : . ' , ; ` | : . ' , ; ` | : . ' plan(): nbrOfWorkers() = 2
[08:08:08.133] | : . ' , ; ` | : . ' , ; ` | : . plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:08.133] | : . ' , ; ` | : . ' , ; ` | : plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:08.134] | : . ' , ; ` | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:08.134] | : . ' , ; ` | : . ' , readImmediateCondition() ...
[08:08:08.134] | : . ' , ; ` | : . ' , ; Path: ‘/tmp/RtmpohK6N2/.future/immediateConditions’
[08:08:08.135] | : . ' , ; ` | : . ' , ; Number of RDS files: 0
[08:08:08.135] | : . ' , ; ` | : . ' , ; Returned conditions set:
[08:08:08.135] | : . ' , ; ` | : . ' , ;  list()
[08:08:08.136] | : . ' , ; ` | : . ' , readImmediateCondition() ... done
[08:08:08.136] | : . ' , ; ` | : . ' , result() for MulticoreFuture ...
[08:08:08.136] | : . ' , ; ` | : . ' , result() for MulticoreFuture ... done
[08:08:08.136] | : . ' , ; ` | : . ' , signalConditions() ...
[08:08:08.136] | : . ' , ; ` | : . ' , ; include = ‘immediateCondition’
[08:08:08.137] | : . ' , ; ` | : . ' , ; exclude = 
[08:08:08.137] | : . ' , ; ` | : . ' , ; resignal = FALSE
[08:08:08.137] | : . ' , ; ` | : . ' , ; Number of conditions: 6
[08:08:08.137] | : . ' , ; ` | : . ' , ;  int 6
[08:08:08.138] | : . ' , ; ` | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.138] | : . ' , ; ` | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.138] | : . ' , ; ` | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.138] | : . ' , ; ` | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.138] | : . ' , ; ` | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.138] | : . ' , ; ` | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.139] | : . ' , ; ` | : . ' , signalConditions() ... done
[08:08:08.139] | : . ' , ; ` | : . ' result() for MulticoreFuture ... done
[08:08:08.139] | : . ' , ; ` | : . ' result() for MulticoreFuture ...
[08:08:08.139] | : . ' , ; ` | : . ' result() for MulticoreFuture ... done
[08:08:08.139] | : . ' , ; ` | : . ' signalConditions() ...
[08:08:08.139] | : . ' , ; ` | : . ' , include = ‘immediateCondition’
[08:08:08.140] | : . ' , ; ` | : . ' , exclude = 
[08:08:08.140] | : . ' , ; ` | : . ' , resignal = FALSE
[08:08:08.140] | : . ' , ; ` | : . ' , Number of conditions: 6
[08:08:08.140] | : . ' , ; ` | : . ' ,  int 6
[08:08:08.140] | : . ' , ; ` | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.141] | : . ' , ; ` | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.141] | : . ' , ; ` | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.141] | : . ' , ; ` | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.141] | : . ' , ; ` | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.143] | : . ' , ; ` | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.143] | : . ' , ; ` | : . ' signalConditions() ... done
[08:08:08.144] | : . ' , ; ` | : . ' relay stdout ...
[08:08:08.144] | : . ' , ; ` | : . ' relay stdout ... done
[08:08:08.144] | : . ' , ; ` | : . ' check for misuse ...
[08:08:08.144] | : . ' , ; ` | : . ' check for misuse ... done
[08:08:08.144] | : . ' , ; ` | : . ' relay conditions ...
[08:08:08.145] | : . ' , ; ` | : . ' , Future state: ‘finished’
[08:08:08.145] | : . ' , ; ` | : . ' , result() for MulticoreFuture ...
[08:08:08.145] | : . ' , ; ` | : . ' , result() for MulticoreFuture ... done
[08:08:08.145] | : . ' , ; ` | : . ' , signalConditions() ...
[08:08:08.146] | : . ' , ; ` | : . ' , ; include = ‘condition’
[08:08:08.146] | : . ' , ; ` | : . ' , ; exclude = ‘immediateCondition’
[08:08:08.146] | : . ' , ; ` | : . ' , ; resignal = TRUE
[08:08:08.146] | : . ' , ; ` | : . ' , ; Number of conditions: 6
[08:08:08.146] | : . ' , ; ` | : . ' , ;  int 6
[08:08:08.147] | : . ' , ; ` | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.147] | : . ' , ; ` | : . ' , ; Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:08.029] | : . ' , ; ` | : . ' , ; ` | attachPackages() ...
[08:08:08.147] | : . ' , ; ` | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.148] | : . ' , ; ` | : . ' , ; Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:08.030] | : . ' , ; ` | : . ' , ; ` | : packages: [n=1] ‘future’
[08:08:08.148] | : . ' , ; ` | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.148] | : . ' , ; ` | : . ' , ; Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:08.030] | : . ' , ; ` | : . ' , ; ` | attachPackages() ... done
[08:08:08.148] | : . ' , ; ` | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.148] | : . ' , ; ` | : . ' , ; Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:08.030] | : . ' , ; ` | : . ' , ; ` | attachPackages() ...
[08:08:08.149] | : . ' , ; ` | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.149] | : . ' , ; ` | : . ' , ; Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:08.030] | : . ' , ; ` | : . ' , ; ` | : packages: [n=0] 
[08:08:08.149] | : . ' , ; ` | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:08.149] | : . ' , ; ` | : . ' , ; Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:08.031] | : . ' , ; ` | : . ' , ; ` | attachPackages() ... done
[08:08:08.150] | : . ' , ; ` | : . ' , signalConditions() ... done
[08:08:08.150] | : . ' , ; ` | : . ' relay conditions ... done
[08:08:08.150] | : . ' , ; ` | : . value() for MulticoreFuture (<unnamed-24>) ... done
b = 11
*** %<-% with ‘multicore’ futures ... DONE
*** %<-% with ‘multisession’ futures ...
[08:08:08.150] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:08.151] | : . ' , ; ` | : . ' plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:08:08.151] | : . ' , ; ` | : . ' , all.equal() for FutureStrategyList ...
[08:08:08.151] | : . ' , ; ` | : . ' , ; New stack:
[08:08:08.151] | : . ' , ; ` | : . ' , ; List of 1
[08:08:08.151] | : . ' , ; ` | : . ' , ;  $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:08:08.151] | : . ' , ; ` | : . ' , ;     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:08.151] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:08:08.151] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= logi TRUE
[08:08:08.151] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:08:08.151] | : . ' , ; ` | : . ' , ;     gc = FALSE, earlySignal = FALSE, ...)  
[08:08:08.151] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:08.151] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:08.151] | : . ' , ; ` | : . ' , ;   ..- attr(*, "untweakable")= chr "persistent"
[08:08:08.151] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategy)
[08:08:08.151] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:08.155] | : . ' , ; ` | : . ' , ; Old stack:
[08:08:08.155] | : . ' , ; ` | : . ' , ; List of 1
[08:08:08.155] | : . ' , ; ` | : . ' , ;  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:08.155] | : . ' , ; ` | : . ' , ;     earlySignal = FALSE, envir = parent.frame())  
[08:08:08.155] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:08.155] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:08:08.155] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:08.155] | : . ' , ; ` | : . ' , ;     ...)  
[08:08:08.155] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:08.155] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:08.155] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategy)
[08:08:08.155] | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:08.155] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:08.155] | : . ' , ; ` | : . ' , ;     ...)  
[08:08:08.155] | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:08.155] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:08.159] | : . ' , ; ` | : . ' , ; Not identical
[08:08:08.159] | : . ' , ; ` | : . ' , ; all.equal() for future ...
[08:08:08.159] | : . ' , ; ` | : . ' , ; ` List of 2
[08:08:08.159] | : . ' , ; ` | : . ' , ; `  $ target :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:08:08.159] | : . ' , ; ` | : . ' , ; `     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:08.159] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:08:08.159] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:08.159] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:08:08.159] | : . ' , ; ` | : . ' , ; `     gc = FALSE, earlySignal = FALSE, ...)  
[08:08:08.159] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:08.159] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:08.159] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "untweakable")= chr "persistent"
[08:08:08.159] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategy)
[08:08:08.159] | : . ' , ; ` | : . ' , ; `  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:08.159] | : . ' , ; ` | : . ' , ; `     earlySignal = FALSE, envir = parent.frame())  
[08:08:08.159] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:08.159] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:08:08.159] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:08.159] | : . ' , ; ` | : . ' , ; `     ...)  
[08:08:08.159] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:08.159] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:08.159] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategy)
[08:08:08.159] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9046dfba0> 
[08:08:08.159] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:08.159] | : . ' , ; ` | : . ' , ; `     ...)  
[08:08:08.159] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:08.203] | : . ' , ; ` | : . ' , ; ` Formals differ
[08:08:08.203] | : . ' , ; ` | : . ' , ; all.equal() for future ... done
[08:08:08.203] | : . ' , ; ` | : . ' , ; Future strategies differ at level 1
[08:08:08.203] | : . ' , ; ` | : . ' , all.equal() for FutureStrategyList ... done
[08:08:08.203] | : . ' , ; ` | : . ' , plan(): Setting new future backend stack:
[08:08:08.203] | : . ' , ; ` | : . ' , List of future strategies:
[08:08:08.203] | : . ' , ; ` | : . ' , 1. multisession:
[08:08:08.203] | : . ' , ; ` | : . ' ,    - args: function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:08.203] | : . ' , ; ` | : . ' ,    - tweaked: FALSE
[08:08:08.203] | : . ' , ; ` | : . ' ,    - call: plan(strategy)
[08:08:08.204] | : . ' , ; ` | : . ' , List of 1
[08:08:08.204] | : . ' , ; ` | : . ' ,  $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:08:08.204] | : . ' , ; ` | : . ' ,     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:08.204] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:08:08.204] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= logi TRUE
[08:08:08.204] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:08:08.204] | : . ' , ; ` | : . ' ,     gc = FALSE, earlySignal = FALSE, ...)  
[08:08:08.204] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:08.204] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:08.204] | : . ' , ; ` | : . ' ,   ..- attr(*, "untweakable")= chr "persistent"
[08:08:08.204] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategy)
[08:08:08.204] | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:08.206] | : . ' , ; ` | : . ' , plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ...
[08:08:08.207] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:08.207] | : . ' , ; ` | : . ' , ; ` Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:08.207] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:08.208] | : . ' , ; ` | : . ' , ; Legacy shutdown of cluster workers ...
[08:08:08.208] | : . ' , ; ` | : . ' , ; ` Stopping existing cluster ...
[08:08:08.208] | : . ' , ; ` | : . ' , ; ` | No pre-existing cluster. Skipping
[08:08:08.208] | : . ' , ; ` | : . ' , ; ` Stopping existing cluster ... done
[08:08:08.208] | : . ' , ; ` | : . ' , ; Legacy shutdown of cluster workers ... done
[08:08:08.208] | : . ' , ; ` | : . ' , plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[08:08:08.208] | : . ' , ; ` | : . ' , plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ...
[08:08:08.208] | : . ' , ; ` | : . ' , ; function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:08:08.208] | : . ' , ; ` | : . ' , ;     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:08.208] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:08:08.208] | : . ' , ; ` | : . ' , ;  - attr(*, "init")= logi TRUE
[08:08:08.208] | : . ' , ; ` | : . ' , ;  - attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:08:08.208] | : . ' , ; ` | : . ' , ;     gc = FALSE, earlySignal = FALSE, ...)  
[08:08:08.208] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:08.208] | : . ' , ; ` | : . ' , ;  - attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:08.208] | : . ' , ; ` | : . ' , ;  - attr(*, "untweakable")= chr "persistent"
[08:08:08.208] | : . ' , ; ` | : . ' , ;  - attr(*, "call")= language plan(strategy)
[08:08:08.211] | : . ' , ; ` | : . ' , ; init: TRUE
[08:08:08.211] | : . ' , ; ` | : . ' , ; makeFutureBackend(<multisession>) ...
[08:08:08.211] | : . ' , ; ` | : . ' , ; ` Backend function: <‘NULL’>
[08:08:08.211] | : . ' , ; ` | : . ' , ; ` Evaluator tweak arguments: [n=0]
[08:08:08.211] | : . ' , ; ` | : . ' , ; `  list()
[08:08:08.211] | : . ' , ; ` | : . ' , ; ` Evaluator formal arguments: [n=4]
[08:08:08.211] | : . ' , ; ` | : . ' , ; `  list()
[08:08:08.212] | : . ' , ; ` | : . ' , ; ` Backend factory arguments: [n=4]
[08:08:08.212] | : . ' , ; ` | : . ' , ; ` Dotted pair list of 4
[08:08:08.212] | : . ' , ; ` | : . ' , ; `  $ workers     : language availableCores()
[08:08:08.212] | : . ' , ; ` | : . ' , ; `  $ rscript_libs: language .libPaths()
[08:08:08.212] | : . ' , ; ` | : . ' , ; `  $ gc          : logi FALSE
[08:08:08.212] | : . ' , ; ` | : . ' , ; `  $ earlySignal : logi FALSE
[08:08:08.213] | : . ' , ; ` | : . ' , ; ` MultisessionFutureBackend(workers = <workers>, interrupts = TRUE, ...) ...
[08:08:08.213] | : . ' , ; ` | : . ' , ; ` | Arguments:
[08:08:08.213] | : . ' , ; ` | : . ' , ; ` | List of 5
[08:08:08.213] | : . ' , ; ` | : . ' , ; ` |  $ workers     : Named int 2
[08:08:08.213] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "names")= chr "mc.cores"
[08:08:08.213] | : . ' , ; ` | : . ' , ; ` |  $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[08:08:08.213] | : . ' , ; ` | : . ' , ; ` |  $ interrupts  : logi TRUE
[08:08:08.213] | : . ' , ; ` | : . ' , ; ` |  $ gc          : logi FALSE
[08:08:08.213] | : . ' , ; ` | : . ' , ; ` |  $ earlySignal : logi FALSE
[08:08:08.217] | : . ' , ; ` | : . ' , ; ` | ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ...
[08:08:08.217] | : . ' , ; ` | : . ' , ; ` | : workers: 2
[08:08:08.217] | : . ' , ; ` | : . ' , ; ` | : getCluster() ...
[08:08:08.218] | : . ' , ; ` | : . ' , ; ` | : getCluster() ... done
[08:08:08.218] | : . ' , ; ` | : . ' , ; ` | : Stopping existing cluster ...
[08:08:08.218] | : . ' , ; ` | : . ' , ; ` | : . No pre-existing cluster. Skipping
[08:08:08.218] | : . ' , ; ` | : . ' , ; ` | : Stopping existing cluster ... done
[08:08:08.218] | : . ' , ; ` | : . ' , ; ` | : Starting new cluster ...
[08:08:08.218] | : . ' , ; ` | : . ' , ; ` | : . makeCluster(workers, ...) ...
[08:08:08.218] | : . ' , ; ` | : . ' , ; ` | : . ' Arguments:
[08:08:08.218] | : . ' , ; ` | : . ' , ; ` | : . ' List of 2
[08:08:08.218] | : . ' , ; ` | : . ' , ; ` | : . '  $             : int 2
[08:08:08.218] | : . ' , ; ` | : . ' , ; ` | : . '  $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[08:08:08.219] | : . ' , ; ` | : . ' , ; ` | : . ' .makeCluster() ...
[08:08:08.219] | : . ' , ; ` | : . ' , ; ` | : . ' , workers: ‘2’
[08:08:08.219] | : . ' , ; ` | : . ' , ; ` | : . ' , R_FUTURE_PLAN: NA
[08:08:08.220] | : . ' , ; ` | : . ' , ; ` | : . ' , parallelly::makeClusterPSOCK() arguments:
[08:08:08.220] | : . ' , ; ` | : . ' , ; ` | : . ' , List of 2
[08:08:08.220] | : . ' , ; ` | : . ' , ; ` | : . ' ,  $             : int 2
[08:08:08.220] | : . ' , ; ` | : . ' , ; ` | : . ' ,  $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[08:08:08.714] | : . ' , ; ` | : . ' , ; ` | : . ' , Generated cluster UUID
[08:08:08.714] | : . ' , ; ` | : . ' , ; ` | : . ' , Cluster UUID: ‘a24376b6c5156fe46f79f17f54ce8a4c’
[08:08:08.714] | : . ' , ; ` | : . ' , ; ` | : . ' , Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:08:08.717] | : . ' , ; ` | : . ' , ; ` | : . ' .makeCluster() ... done
[08:08:08.717] | : . ' , ; ` | : . ' , ; ` | : . ' Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:08:08.718] | : . ' , ; ` | : . ' , ; ` | : . makeCluster(workers, ...) ... done
[08:08:08.718] | : . ' , ; ` | : . ' , ; ` | : . Number of workers: 2
[08:08:08.718] | : . ' , ; ` | : . ' , ; ` | : . Workers UUID: ‘a24376b6c5156fe46f79f17f54ce8a4c’
[08:08:08.719] | : . ' , ; ` | : . ' , ; ` | : Starting new cluster ... done
[08:08:08.719] | : . ' , ; ` | : . ' , ; ` | ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ... done
[08:08:08.719] | : . ' , ; ` | : . ' , ; ` | Backend: <‘MultisessionFutureBackend’, ‘ClusterFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:08.719] | : . ' , ; ` | : . ' , ; ` MultisessionFutureBackend(workers = <workers>, interrupts = TRUE, ...) ... done
[08:08:08.719] | : . ' , ; ` | : . ' , ; makeFutureBackend(<multisession>) ... done
[08:08:08.719] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:08.719] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:08.720] | : . ' , ; ` | : . ' , ; plan(): nbrOfWorkers() = 2
[08:08:08.720] | : . ' , ; ` | : . ' , plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ... done
[08:08:08.720] | : . ' , ; ` | : . ' plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
** Future evaluation without globals
[08:08:08.720] | : . ' , ; ` | : . ' future(..., label = NULL) ...
[08:08:08.720] | : . ' , ; ` | : . ' , lazy: FALSE
[08:08:08.720] | : . ' , ; ` | : . ' , stdout: TRUE
[08:08:08.721] | : . ' , ; ` | : . ' , conditions: [n=1] ‘condition’
[08:08:08.721] | : . ' , ; ` | : . ' , gc: FALSE
[08:08:08.721] | : . ' , ; ` | : . ' , earlySignal: FALSE
[08:08:08.721] | : . ' , ; ` | : . ' , getGlobalsAndPackages() ...
[08:08:08.721] | : . ' , ; ` | : . ' , ; Searching for globals ...
[08:08:08.727] | : . ' , ; ` | : . ' , ; ` globals found: [2] ‘{’, ‘<-’
[08:08:08.727] | : . ' , ; ` | : . ' , ; Searching for globals ... done
[08:08:08.727] | : . ' , ; ` | : . ' , ; Resolving globals: FALSE
[08:08:08.727] | : . ' , ; ` | : . ' , ; Search for packages associated with the globals ...
[08:08:08.727] | : . ' , ; ` | : . ' , ; ` Packages associated with globals: [1] ‘base’
[08:08:08.727] | : . ' , ; ` | : . ' , ; ` Packages: [1] ‘base’
[08:08:08.727] | : . ' , ; ` | : . ' , ; Search for packages associated with the globals ... done
[08:08:08.728] | : . ' , ; ` | : . ' , ; Packages after dropping 'base': [0] 
[08:08:08.728] | : . ' , ; ` | : . ' , ; globals: [0] 
[08:08:08.728] | : . ' , ; ` | : . ' , ; packages: [0] 
[08:08:08.728] | : . ' , ; ` | : . ' , getGlobalsAndPackages() ... done
[08:08:08.728] | : . ' , ; ` | : . ' , run() for ‘Future’ (<unnamed-25>) ...
[08:08:08.728] | : . ' , ; ` | : . ' , ; state: ‘created’
[08:08:08.728] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:08.729] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:08.729] | : . ' , ; ` | : . ' , ; Using MultisessionFutureBackend ...
[08:08:08.729] | : . ' , ; ` | : . ' , ; ` Number of futures since start: 0 (0 created, 0 launched, 0 finished)
[08:08:08.729] | : . ' , ; ` | : . ' , ; ` Launching futures ...
[08:08:08.729] | : . ' , ; ` | : . ' , ; ` | launchFuture() for ClusterFutureBackend ...
[08:08:08.729] | : . ' , ; ` | : . ' , ; ` | : Workers: [n=2]
[08:08:08.729] | : . ' , ; ` | : . ' , ; ` | : Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:08:08.731] | : . ' , ; ` | : . ' , ; ` | : FutureRegistry: ‘workers-a24376b6c5156fe46f79f17f54ce8a4c’
[08:08:08.731] | : . ' , ; ` | : . ' , ; ` | : requestWorker() ...
[08:08:08.731] | : . ' , ; ` | : . ' , ; ` | : . requestNode() ...
[08:08:08.731] | : . ' , ; ` | : . ' , ; ` | : . ' Number of workers: 2
[08:08:08.731] | : . ' , ; ` | : . ' , ; ` | : . ' Polling for a free worker ...
[08:08:08.732] | : . ' , ; ` | : . ' , ; ` | : . ' , FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:08.732] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Created empty registry ‘workers-a24376b6c5156fe46f79f17f54ce8a4c’
[08:08:08.732] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Listing all futures
[08:08:08.732] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Number of registered futures: 0
[08:08:08.732] | : . ' , ; ` | : . ' , ; ` | : . ' , FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:08.732] | : . ' , ; ` | : . ' , ; ` | : . ' , Total time: 0
[08:08:08.732] | : . ' , ; ` | : . ' , ; ` | : . ' Polling for a free worker ... done
[08:08:08.732] | : . ' , ; ` | : . ' , ; ` | : . ' FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:08.733] | : . ' , ; ` | : . ' , ; ` | : . ' , Listing all futures
[08:08:08.733] | : . ' , ; ` | : . ' , ; ` | : . ' , Number of registered futures: 0
[08:08:08.733] | : . ' , ; ` | : . ' , ; ` | : . ' FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:08.733] | : . ' , ; ` | : . ' , ; ` | : . ' avail: [n=2] ‘1’, ‘2’
[08:08:08.733] | : . ' , ; ` | : . ' , ; ` | : . ' Index of first available worker: 1
[08:08:08.733] | : . ' , ; ` | : . ' , ; ` | : . ' Validate that the worker is functional ...
[08:08:08.796] | : . ' , ; ` | : . ' , ; ` | : . ' , Worker is functional
[08:08:08.797] | : . ' , ; ` | : . ' , ; ` | : . ' , FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:08.797] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Listing all futures
[08:08:08.797] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Number of registered futures: 0
[08:08:08.797] | : . ' , ; ` | : . ' , ; ` | : . ' , FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:08.797] | : . ' , ; ` | : . ' , ; ` | : . ' Validate that the worker is functional ... done
[08:08:08.798] | : . ' , ; ` | : . ' , ; ` | : . requestNode() ... done
[08:08:08.798] | : . ' , ; ` | : . ' , ; ` | : . cluster node index: 1
[08:08:08.798] | : . ' , ; ` | : . ' , ; ` | : requestWorker() ... done
[08:08:08.798] | : . ' , ; ` | : . ' , ; ` | : eraseGlobalEnvironment() ...
[08:08:08.799] | : . ' , ; ` | : . ' , ; ` | : eraseGlobalEnvironment() ... done
[08:08:08.799] | : . ' , ; ` | : . ' , ; ` | : launchFuture() ...
[08:08:08.799] | : . ' , ; ` | : . ' , ; ` | : . cluster node index: 1
[08:08:08.799] | : . ' , ; ` | : . ' , ; ` | : . getFutureData() ...
[08:08:08.799] | : . ' , ; ` | : . ' , ; ` | : . ' getFutureCore() ...
[08:08:08.800] | : . ' , ; ` | : . ' , ; ` | : . ' , Packages needed by the future expression (n = 0): <none>
[08:08:08.800] | : . ' , ; ` | : . ' , ; ` | : . ' getFutureCore() ... done
[08:08:08.800] | : . ' , ; ` | : . ' , ; ` | : . ' getFutureCapture() ...
[08:08:08.800] | : . ' , ; ` | : . ' , ; ` | : . ' getFutureCapture() ... done
[08:08:08.800] | : . ' , ; ` | : . ' , ; ` | : . ' getFutureContext() ...
[08:08:08.800] | : . ' , ; ` | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:08.800] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Getting stack without first backend: [n=0] 
[08:08:08.801] | : . ' , ; ` | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:08.801] | : . ' , ; ` | : . ' , ; ` | : . ' , Packages needed by future backend (n = 0): <none>
[08:08:08.801] | : . ' , ; ` | : . ' , ; ` | : . ' getFutureContext() ... done
[08:08:08.801] | : . ' , ; ` | : . ' , ; ` | : . getFutureData() ... done
[08:08:08.802] | : . ' , ; ` | : . ' , ; ` | : . FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'add', earlySignal = 0) ...
[08:08:08.802] | : . ' , ; ` | : . ' , ; ` | : . ' Appended future to position #1
[08:08:08.802] | : . ' , ; ` | : . ' , ; ` | : . ' Number of registered futures: 1
[08:08:08.802] | : . ' , ; ` | : . ' , ; ` | : . FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'add', earlySignal = 0) ... done
[08:08:08.802] | : . ' , ; ` | : . ' , ; ` | : launchFuture() ... done
[08:08:08.802] | : . ' , ; ` | : . ' , ; ` | : MultisessionFuture started
[08:08:08.802] | : . ' , ; ` | : . ' , ; ` | launchFuture() for ClusterFutureBackend ... done
[08:08:08.803] | : . ' , ; ` | : . ' , ; ` Launching futures ... done
[08:08:08.803] | : . ' , ; ` | : . ' , ; ` Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:08.803] | : . ' , ; ` | : . ' , ; Using MultisessionFutureBackend ... done
[08:08:08.803] | : . ' , ; ` | : . ' , run() for ‘Future’ (<unnamed-25>) ... done
[08:08:08.803] | : . ' , ; ` | : . ' future(..., label = NULL) ... done
[08:08:08.803] | : . ' , ; ` | : . ' value() for MultisessionFuture (<unnamed-25>) ...
[08:08:08.804] | : . ' , ; ` | : . ' , result() for ClusterFuture ...
[08:08:08.804] | : . ' , ; ` | : . ' , ; assertValidConnection() ...
[08:08:08.804] | : . ' , ; ` | : . ' , ; ` cluster node index: 1
[08:08:08.805] | : . ' , ; ` | : . ' , ; assertValidConnection() ... done
[08:08:08.805] | : . ' , ; ` | : . ' , ; receiveMessageFromWorker() for ClusterFuture ...
[08:08:08.805] | : . ' , ; ` | : . ' , ; ` cluster node index: 1
[08:08:08.891] | : . ' , ; ` | : . ' , ; ` [1] TRUE
[08:08:08.892] | : . ' , ; ` | : . ' , ; ` received data:
[08:08:08.892] | : . ' , ; ` | : . ' , ; ` List of 5
[08:08:08.892] | : . ' , ; ` | : . ' , ; `  $ type   : chr "VALUE"
[08:08:08.892] | : . ' , ; ` | : . ' , ; `  $ value  :List of 16
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   ..$ value              : num 1
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   ..$ visible            : logi FALSE
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   ..$ stdout             : chr ""
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   ..$ conditions         : list()
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   ..$ rng                : logi FALSE
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   ..$ seed               : NULL
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   ..$ misuseGlobalEnv    : NULL
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   ..$ misuseConnections  :List of 3
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   .. ..$ added   : NULL
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   .. ..$ removed : NULL
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   .. ..$ replaced: NULL
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   ..$ misuseDevices      : NULL
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   ..$ misuseDefaultDevice: list()
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:08"
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:08"
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   ..$ uuid               : chr [1:2] "67af0fd89af88a05d7f19a04932924f6" "25"
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   ..$ session_uuid       : chr "64d1c0ec81c7b9e640126f07ad396546"
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "source")=List of 5
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   .. .. ..$ host  : Named chr "285a5f234941"
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   .. .. ..$ pid   : int 68323
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:08"
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   .. .. ..$ random: int 2147483647
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   ..$ r_info             :List of 4
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   .. .. ..$ : int [1:3] 4 5 0
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   .. ..$ os           : chr "unix"
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   .. ..$ os_name      : chr "Linux"
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   .. ..$ captures_utf8: logi TRUE
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   ..$ version            : chr "1.8"
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr "FutureResult"
[08:08:08.892] | : . ' , ; ` | : . ' , ; `  $ success: logi TRUE
[08:08:08.892] | : . ' , ; ` | : . ' , ; `  $ time   : 'proc_time' Named num [1:5] 0.045 0.003 0.048 0 0
[08:08:08.892] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:08.892] | : . ' , ; ` | : . ' , ; `  $ tag    : NULL
[08:08:08.907] | : . ' , ; ` | : . ' , ; ` Received FutureResult
[08:08:08.907] | : . ' , ; ` | : . ' , ; ` FutureResult:
[08:08:08.907] | : . ' , ; ` | : . ' , ; ` value: ‘numeric’
[08:08:08.907] | : . ' , ; ` | : . ' , ; ` visible: FALSE
[08:08:08.907] | : . ' , ; ` | : . ' , ; ` stdout: character
[08:08:08.907] | : . ' , ; ` | : . ' , ; ` conditions: [n = 0] 
[08:08:08.907] | : . ' , ; ` | : . ' , ; ` RNG used: FALSE
[08:08:08.907] | : . ' , ; ` | : . ' , ; ` duration: 0.04695415 secs (started 2025-06-17 08:08:08.844404)
[08:08:08.907] | : . ' , ; ` | : . ' , ; ` version: 1.8
[08:08:08.908] | : . ' , ; ` | : . ' , ; ` FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'remove', earlySignal = 0) ...
[08:08:08.908] | : . ' , ; ` | : . ' , ; ` | Removed future from position #1
[08:08:08.908] | : . ' , ; ` | : . ' , ; ` | Number of registered futures: 0
[08:08:08.908] | : . ' , ; ` | : . ' , ; ` FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'remove', earlySignal = 0) ... done
[08:08:08.908] | : . ' , ; ` | : . ' , ; ` Erased future from future backend
[08:08:08.908] | : . ' , ; ` | : . ' , ; ` result() for ClusterFuture ...
[08:08:08.909] | : . ' , ; ` | : . ' , ; ` | result already collected: FutureResult
[08:08:08.909] | : . ' , ; ` | : . ' , ; ` result() for ClusterFuture ... done
[08:08:08.909] | : . ' , ; ` | : . ' , ; ` signalConditions() ...
[08:08:08.909] | : . ' , ; ` | : . ' , ; ` | include = ‘immediateCondition’
[08:08:08.909] | : . ' , ; ` | : . ' , ; ` | exclude = 
[08:08:08.909] | : . ' , ; ` | : . ' , ; ` | resignal = FALSE
[08:08:08.909] | : . ' , ; ` | : . ' , ; ` | Number of conditions: 0
[08:08:08.910] | : . ' , ; ` | : . ' , ; ` |  int 0
[08:08:08.910] | : . ' , ; ` | : . ' , ; ` signalConditions() ... done
[08:08:08.910] | : . ' , ; ` | : . ' , ; receiveMessageFromWorker() for ClusterFuture ... done
[08:08:08.910] | : . ' , ; ` | : . ' , result() for ClusterFuture ... done
[08:08:08.910] | : . ' , ; ` | : . ' , result() for ClusterFuture ...
[08:08:08.911] | : . ' , ; ` | : . ' , ; result already collected: FutureResult
[08:08:08.911] | : . ' , ; ` | : . ' , result() for ClusterFuture ... done
[08:08:08.911] | : . ' , ; ` | : . ' , signalConditions() ...
[08:08:08.911] | : . ' , ; ` | : . ' , ; include = ‘immediateCondition’
[08:08:08.911] | : . ' , ; ` | : . ' , ; exclude = 
[08:08:08.911] | : . ' , ; ` | : . ' , ; resignal = FALSE
[08:08:08.911] | : . ' , ; ` | : . ' , ; Number of conditions: 0
[08:08:08.911] | : . ' , ; ` | : . ' , ;  int 0
[08:08:08.912] | : . ' , ; ` | : . ' , signalConditions() ... done
[08:08:08.912] | : . ' , ; ` | : . ' , relay stdout ...
[08:08:08.912] | : . ' , ; ` | : . ' , relay stdout ... done
[08:08:08.912] | : . ' , ; ` | : . ' , check for misuse ...
[08:08:08.913] | : . ' , ; ` | : . ' , check for misuse ... done
[08:08:08.913] | : . ' , ; ` | : . ' value() for MultisessionFuture (<unnamed-25>) ... done
** Future evaluation with globals
[08:08:08.913] | : . ' , ; ` | : . ' future(..., label = NULL) ...
[08:08:08.913] | : . ' , ; ` | : . ' , lazy: FALSE
[08:08:08.913] | : . ' , ; ` | : . ' , stdout: TRUE
[08:08:08.913] | : . ' , ; ` | : . ' , conditions: [n=1] ‘condition’
[08:08:08.914] | : . ' , ; ` | : . ' , gc: FALSE
[08:08:08.914] | : . ' , ; ` | : . ' , earlySignal: FALSE
[08:08:08.914] | : . ' , ; ` | : . ' , getGlobalsAndPackages() ...
[08:08:08.914] | : . ' , ; ` | : . ' , ; Searching for globals ...
[08:08:08.921] | : . ' , ; ` | : . ' , ; ` globals found: [3] ‘{’, ‘<-’, ‘a’
[08:08:08.921] | : . ' , ; ` | : . ' , ; Searching for globals ... done
[08:08:08.922] | : . ' , ; ` | : . ' , ; Resolving globals: FALSE
[08:08:08.922] | : . ' , ; ` | : . ' , ; Search for packages associated with the globals ...
[08:08:08.922] | : . ' , ; ` | : . ' , ; ` Packages associated with globals: [1] ‘base’
[08:08:08.922] | : . ' , ; ` | : . ' , ; ` Packages: [1] ‘base’
[08:08:08.923] | : . ' , ; ` | : . ' , ; Search for packages associated with the globals ... done
[08:08:08.923] | : . ' , ; ` | : . ' , ; Packages after dropping 'base': [0] 
[08:08:08.923] | : . ' , ; ` | : . ' , ; globals: [1] ‘a’
[08:08:08.923] | : . ' , ; ` | : . ' , ; packages: [0] 
[08:08:08.923] | : . ' , ; ` | : . ' , getGlobalsAndPackages() ... done
[08:08:08.923] | : . ' , ; ` | : . ' , run() for ‘Future’ (<unnamed-26>) ...
[08:08:08.924] | : . ' , ; ` | : . ' , ; state: ‘created’
[08:08:08.924] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:08.924] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:08.924] | : . ' , ; ` | : . ' , ; Using MultisessionFutureBackend ...
[08:08:08.924] | : . ' , ; ` | : . ' , ; ` Number of futures since start: 1 (1 created, 1 launched, 1 finished)
[08:08:08.924] | : . ' , ; ` | : . ' , ; ` Launching futures ...
[08:08:08.924] | : . ' , ; ` | : . ' , ; ` | launchFuture() for ClusterFutureBackend ...
[08:08:08.925] | : . ' , ; ` | : . ' , ; ` | : Workers: [n=2]
[08:08:08.925] | : . ' , ; ` | : . ' , ; ` | : Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:08:08.927] | : . ' , ; ` | : . ' , ; ` | : FutureRegistry: ‘workers-a24376b6c5156fe46f79f17f54ce8a4c’
[08:08:08.927] | : . ' , ; ` | : . ' , ; ` | : requestWorker() ...
[08:08:08.927] | : . ' , ; ` | : . ' , ; ` | : . requestNode() ...
[08:08:08.927] | : . ' , ; ` | : . ' , ; ` | : . ' Number of workers: 2
[08:08:08.927] | : . ' , ; ` | : . ' , ; ` | : . ' Polling for a free worker ...
[08:08:08.927] | : . ' , ; ` | : . ' , ; ` | : . ' , FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:08.928] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Listing all futures
[08:08:08.928] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Number of registered futures: 0
[08:08:08.928] | : . ' , ; ` | : . ' , ; ` | : . ' , FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:08.928] | : . ' , ; ` | : . ' , ; ` | : . ' , Total time: 0
[08:08:08.928] | : . ' , ; ` | : . ' , ; ` | : . ' Polling for a free worker ... done
[08:08:08.928] | : . ' , ; ` | : . ' , ; ` | : . ' FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:08.928] | : . ' , ; ` | : . ' , ; ` | : . ' , Listing all futures
[08:08:08.928] | : . ' , ; ` | : . ' , ; ` | : . ' , Number of registered futures: 0
[08:08:08.929] | : . ' , ; ` | : . ' , ; ` | : . ' FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:08.929] | : . ' , ; ` | : . ' , ; ` | : . ' avail: [n=2] ‘1’, ‘2’
[08:08:08.929] | : . ' , ; ` | : . ' , ; ` | : . ' Index of first available worker: 1
[08:08:08.929] | : . ' , ; ` | : . ' , ; ` | : . ' Validate that the worker is functional ...
[08:08:08.985] | : . ' , ; ` | : . ' , ; ` | : . ' , Worker is functional
[08:08:08.985] | : . ' , ; ` | : . ' , ; ` | : . ' , FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:08.986] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Listing all futures
[08:08:08.986] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Number of registered futures: 0
[08:08:08.986] | : . ' , ; ` | : . ' , ; ` | : . ' , FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:08.986] | : . ' , ; ` | : . ' , ; ` | : . ' Validate that the worker is functional ... done
[08:08:08.986] | : . ' , ; ` | : . ' , ; ` | : . requestNode() ... done
[08:08:08.986] | : . ' , ; ` | : . ' , ; ` | : . cluster node index: 1
[08:08:08.986] | : . ' , ; ` | : . ' , ; ` | : requestWorker() ... done
[08:08:08.986] | : . ' , ; ` | : . ' , ; ` | : eraseGlobalEnvironment() ...
[08:08:08.987] | : . ' , ; ` | : . ' , ; ` | : eraseGlobalEnvironment() ... done
[08:08:08.987] | : . ' , ; ` | : . ' , ; ` | : launchFuture() ...
[08:08:08.987] | : . ' , ; ` | : . ' , ; ` | : . cluster node index: 1
[08:08:08.987] | : . ' , ; ` | : . ' , ; ` | : . getFutureData() ...
[08:08:08.987] | : . ' , ; ` | : . ' , ; ` | : . ' getFutureCore() ...
[08:08:08.987] | : . ' , ; ` | : . ' , ; ` | : . ' , Packages needed by the future expression (n = 0): <none>
[08:08:08.987] | : . ' , ; ` | : . ' , ; ` | : . ' getFutureCore() ... done
[08:08:08.987] | : . ' , ; ` | : . ' , ; ` | : . ' getFutureCapture() ...
[08:08:08.987] | : . ' , ; ` | : . ' , ; ` | : . ' getFutureCapture() ... done
[08:08:08.988] | : . ' , ; ` | : . ' , ; ` | : . ' getFutureContext() ...
[08:08:08.988] | : . ' , ; ` | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:08.988] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Getting stack without first backend: [n=0] 
[08:08:08.988] | : . ' , ; ` | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:08.988] | : . ' , ; ` | : . ' , ; ` | : . ' , Packages needed by future backend (n = 0): <none>
[08:08:08.988] | : . ' , ; ` | : . ' , ; ` | : . ' getFutureContext() ... done
[08:08:08.988] | : . ' , ; ` | : . ' , ; ` | : . getFutureData() ... done
[08:08:08.989] | : . ' , ; ` | : . ' , ; ` | : . FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'add', earlySignal = 0) ...
[08:08:08.989] | : . ' , ; ` | : . ' , ; ` | : . ' Appended future to position #1
[08:08:08.989] | : . ' , ; ` | : . ' , ; ` | : . ' Number of registered futures: 1
[08:08:08.989] | : . ' , ; ` | : . ' , ; ` | : . FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'add', earlySignal = 0) ... done
[08:08:08.989] | : . ' , ; ` | : . ' , ; ` | : launchFuture() ... done
[08:08:08.989] | : . ' , ; ` | : . ' , ; ` | : MultisessionFuture started
[08:08:08.989] | : . ' , ; ` | : . ' , ; ` | launchFuture() for ClusterFutureBackend ... done
[08:08:08.989] | : . ' , ; ` | : . ' , ; ` Launching futures ... done
[08:08:08.989] | : . ' , ; ` | : . ' , ; ` Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:08.990] | : . ' , ; ` | : . ' , ; Using MultisessionFutureBackend ... done
[08:08:08.990] | : . ' , ; ` | : . ' , run() for ‘Future’ (<unnamed-26>) ... done
[08:08:08.990] | : . ' , ; ` | : . ' future(..., label = NULL) ... done
[08:08:08.990] | : . ' , ; ` | : . ' value() for MultisessionFuture (<unnamed-26>) ...
[08:08:08.990] | : . ' , ; ` | : . ' , result() for ClusterFuture ...
[08:08:08.990] | : . ' , ; ` | : . ' , ; assertValidConnection() ...
[08:08:08.990] | : . ' , ; ` | : . ' , ; ` cluster node index: 1
[08:08:08.991] | : . ' , ; ` | : . ' , ; assertValidConnection() ... done
[08:08:08.991] | : . ' , ; ` | : . ' , ; receiveMessageFromWorker() for ClusterFuture ...
[08:08:08.991] | : . ' , ; ` | : . ' , ; ` cluster node index: 1
[08:08:09.033] | : . ' , ; ` | : . ' , ; ` [1] TRUE
[08:08:09.033] | : . ' , ; ` | : . ' , ; ` received data:
[08:08:09.033] | : . ' , ; ` | : . ' , ; ` List of 5
[08:08:09.033] | : . ' , ; ` | : . ' , ; `  $ type   : chr "VALUE"
[08:08:09.033] | : . ' , ; ` | : . ' , ; `  $ value  :List of 16
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   ..$ value              : num 2
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   ..$ visible            : logi FALSE
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   ..$ stdout             : chr ""
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   ..$ conditions         : list()
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   ..$ rng                : logi FALSE
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   ..$ seed               : NULL
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   ..$ misuseGlobalEnv    : NULL
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   ..$ misuseConnections  :List of 3
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   .. ..$ added   : NULL
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   .. ..$ removed : NULL
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   .. ..$ replaced: NULL
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   ..$ misuseDevices      : NULL
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   ..$ misuseDefaultDevice: list()
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:09"
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:09"
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   ..$ uuid               : chr [1:2] "67af0fd89af88a05d7f19a04932924f6" "26"
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   ..$ session_uuid       : chr "64d1c0ec81c7b9e640126f07ad396546"
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "source")=List of 5
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   .. .. ..$ host  : Named chr "285a5f234941"
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   .. .. ..$ pid   : int 68323
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:08"
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   .. .. ..$ random: int 2147483647
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   ..$ r_info             :List of 4
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   .. .. ..$ : int [1:3] 4 5 0
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   .. ..$ os           : chr "unix"
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   .. ..$ os_name      : chr "Linux"
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   .. ..$ captures_utf8: logi TRUE
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   ..$ version            : chr "1.8"
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr "FutureResult"
[08:08:09.033] | : . ' , ; ` | : . ' , ; `  $ success: logi TRUE
[08:08:09.033] | : . ' , ; ` | : . ' , ; `  $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[08:08:09.033] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:09.033] | : . ' , ; ` | : . ' , ; `  $ tag    : NULL
[08:08:09.044] | : . ' , ; ` | : . ' , ; ` Received FutureResult
[08:08:09.044] | : . ' , ; ` | : . ' , ; ` FutureResult:
[08:08:09.044] | : . ' , ; ` | : . ' , ; ` value: ‘numeric’
[08:08:09.044] | : . ' , ; ` | : . ' , ; ` visible: FALSE
[08:08:09.044] | : . ' , ; ` | : . ' , ; ` stdout: character
[08:08:09.044] | : . ' , ; ` | : . ' , ; ` conditions: [n = 0] 
[08:08:09.044] | : . ' , ; ` | : . ' , ; ` RNG used: FALSE
[08:08:09.044] | : . ' , ; ` | : . ' , ; ` duration: 0.002632618 secs (started 2025-06-17 08:08:09.030197)
[08:08:09.044] | : . ' , ; ` | : . ' , ; ` version: 1.8
[08:08:09.045] | : . ' , ; ` | : . ' , ; ` FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'remove', earlySignal = 0) ...
[08:08:09.045] | : . ' , ; ` | : . ' , ; ` | Removed future from position #1
[08:08:09.045] | : . ' , ; ` | : . ' , ; ` | Number of registered futures: 0
[08:08:09.045] | : . ' , ; ` | : . ' , ; ` FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'remove', earlySignal = 0) ... done
[08:08:09.045] | : . ' , ; ` | : . ' , ; ` Erased future from future backend
[08:08:09.045] | : . ' , ; ` | : . ' , ; ` result() for ClusterFuture ...
[08:08:09.046] | : . ' , ; ` | : . ' , ; ` | result already collected: FutureResult
[08:08:09.046] | : . ' , ; ` | : . ' , ; ` result() for ClusterFuture ... done
[08:08:09.046] | : . ' , ; ` | : . ' , ; ` signalConditions() ...
[08:08:09.046] | : . ' , ; ` | : . ' , ; ` | include = ‘immediateCondition’
[08:08:09.046] | : . ' , ; ` | : . ' , ; ` | exclude = 
[08:08:09.046] | : . ' , ; ` | : . ' , ; ` | resignal = FALSE
[08:08:09.046] | : . ' , ; ` | : . ' , ; ` | Number of conditions: 0
[08:08:09.046] | : . ' , ; ` | : . ' , ; ` |  int 0
[08:08:09.047] | : . ' , ; ` | : . ' , ; ` signalConditions() ... done
[08:08:09.047] | : . ' , ; ` | : . ' , ; receiveMessageFromWorker() for ClusterFuture ... done
[08:08:09.047] | : . ' , ; ` | : . ' , result() for ClusterFuture ... done
[08:08:09.047] | : . ' , ; ` | : . ' , result() for ClusterFuture ...
[08:08:09.047] | : . ' , ; ` | : . ' , ; result already collected: FutureResult
[08:08:09.047] | : . ' , ; ` | : . ' , result() for ClusterFuture ... done
[08:08:09.047] | : . ' , ; ` | : . ' , signalConditions() ...
[08:08:09.047] | : . ' , ; ` | : . ' , ; include = ‘immediateCondition’
[08:08:09.048] | : . ' , ; ` | : . ' , ; exclude = 
[08:08:09.048] | : . ' , ; ` | : . ' , ; resignal = FALSE
[08:08:09.048] | : . ' , ; ` | : . ' , ; Number of conditions: 0
[08:08:09.048] | : . ' , ; ` | : . ' , ;  int 0
[08:08:09.048] | : . ' , ; ` | : . ' , signalConditions() ... done
[08:08:09.048] | : . ' , ; ` | : . ' , relay stdout ...
[08:08:09.048] | : . ' , ; ` | : . ' , relay stdout ... done
[08:08:09.049] | : . ' , ; ` | : . ' , check for misuse ...
[08:08:09.049] | : . ' , ; ` | : . ' , check for misuse ... done
[08:08:09.049] | : . ' , ; ` | : . ' value() for MultisessionFuture (<unnamed-26>) ... done
** Future evaluation with errors
[08:08:09.049] | : . ' , ; ` | : . ' future(..., label = NULL) ...
[08:08:09.049] | : . ' , ; ` | : . ' , lazy: FALSE
[08:08:09.049] | : . ' , ; ` | : . ' , stdout: TRUE
[08:08:09.049] | : . ' , ; ` | : . ' , conditions: [n=1] ‘condition’
[08:08:09.050] | : . ' , ; ` | : . ' , gc: FALSE
[08:08:09.050] | : . ' , ; ` | : . ' , earlySignal: FALSE
[08:08:09.050] | : . ' , ; ` | : . ' , getGlobalsAndPackages() ...
[08:08:09.050] | : . ' , ; ` | : . ' , ; Searching for globals ...
[08:08:09.058] | : . ' , ; ` | : . ' , ; ` globals found: [3] ‘{’, ‘<-’, ‘stop’
[08:08:09.059] | : . ' , ; ` | : . ' , ; Searching for globals ... done
[08:08:09.059] | : . ' , ; ` | : . ' , ; Resolving globals: FALSE
[08:08:09.059] | : . ' , ; ` | : . ' , ; Search for packages associated with the globals ...
[08:08:09.059] | : . ' , ; ` | : . ' , ; ` Packages associated with globals: [1] ‘base’
[08:08:09.059] | : . ' , ; ` | : . ' , ; ` Packages: [1] ‘base’
[08:08:09.059] | : . ' , ; ` | : . ' , ; Search for packages associated with the globals ... done
[08:08:09.060] | : . ' , ; ` | : . ' , ; Packages after dropping 'base': [0] 
[08:08:09.060] | : . ' , ; ` | : . ' , ; globals: [0] 
[08:08:09.060] | : . ' , ; ` | : . ' , ; packages: [0] 
[08:08:09.060] | : . ' , ; ` | : . ' , getGlobalsAndPackages() ... done
[08:08:09.060] | : . ' , ; ` | : . ' , run() for ‘Future’ (<unnamed-27>) ...
[08:08:09.060] | : . ' , ; ` | : . ' , ; state: ‘created’
[08:08:09.060] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:09.061] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:09.061] | : . ' , ; ` | : . ' , ; Using MultisessionFutureBackend ...
[08:08:09.061] | : . ' , ; ` | : . ' , ; ` Number of futures since start: 2 (2 created, 2 launched, 2 finished)
[08:08:09.061] | : . ' , ; ` | : . ' , ; ` Launching futures ...
[08:08:09.061] | : . ' , ; ` | : . ' , ; ` | launchFuture() for ClusterFutureBackend ...
[08:08:09.061] | : . ' , ; ` | : . ' , ; ` | : Workers: [n=2]
[08:08:09.061] | : . ' , ; ` | : . ' , ; ` | : Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:08:09.063] | : . ' , ; ` | : . ' , ; ` | : FutureRegistry: ‘workers-a24376b6c5156fe46f79f17f54ce8a4c’
[08:08:09.063] | : . ' , ; ` | : . ' , ; ` | : requestWorker() ...
[08:08:09.063] | : . ' , ; ` | : . ' , ; ` | : . requestNode() ...
[08:08:09.063] | : . ' , ; ` | : . ' , ; ` | : . ' Number of workers: 2
[08:08:09.063] | : . ' , ; ` | : . ' , ; ` | : . ' Polling for a free worker ...
[08:08:09.063] | : . ' , ; ` | : . ' , ; ` | : . ' , FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:09.063] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Listing all futures
[08:08:09.063] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Number of registered futures: 0
[08:08:09.064] | : . ' , ; ` | : . ' , ; ` | : . ' , FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:09.064] | : . ' , ; ` | : . ' , ; ` | : . ' , Total time: 0
[08:08:09.064] | : . ' , ; ` | : . ' , ; ` | : . ' Polling for a free worker ... done
[08:08:09.064] | : . ' , ; ` | : . ' , ; ` | : . ' FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:09.064] | : . ' , ; ` | : . ' , ; ` | : . ' , Listing all futures
[08:08:09.064] | : . ' , ; ` | : . ' , ; ` | : . ' , Number of registered futures: 0
[08:08:09.064] | : . ' , ; ` | : . ' , ; ` | : . ' FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:09.064] | : . ' , ; ` | : . ' , ; ` | : . ' avail: [n=2] ‘1’, ‘2’
[08:08:09.064] | : . ' , ; ` | : . ' , ; ` | : . ' Index of first available worker: 1
[08:08:09.065] | : . ' , ; ` | : . ' , ; ` | : . ' Validate that the worker is functional ...
[08:08:09.157] | : . ' , ; ` | : . ' , ; ` | : . ' , Worker is functional
[08:08:09.157] | : . ' , ; ` | : . ' , ; ` | : . ' , FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:09.157] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Listing all futures
[08:08:09.157] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Number of registered futures: 0
[08:08:09.157] | : . ' , ; ` | : . ' , ; ` | : . ' , FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:09.158] | : . ' , ; ` | : . ' , ; ` | : . ' Validate that the worker is functional ... done
[08:08:09.158] | : . ' , ; ` | : . ' , ; ` | : . requestNode() ... done
[08:08:09.158] | : . ' , ; ` | : . ' , ; ` | : . cluster node index: 1
[08:08:09.158] | : . ' , ; ` | : . ' , ; ` | : requestWorker() ... done
[08:08:09.158] | : . ' , ; ` | : . ' , ; ` | : eraseGlobalEnvironment() ...
[08:08:09.158] | : . ' , ; ` | : . ' , ; ` | : eraseGlobalEnvironment() ... done
[08:08:09.159] | : . ' , ; ` | : . ' , ; ` | : launchFuture() ...
[08:08:09.159] | : . ' , ; ` | : . ' , ; ` | : . cluster node index: 1
[08:08:09.159] | : . ' , ; ` | : . ' , ; ` | : . getFutureData() ...
[08:08:09.159] | : . ' , ; ` | : . ' , ; ` | : . ' getFutureCore() ...
[08:08:09.159] | : . ' , ; ` | : . ' , ; ` | : . ' , Packages needed by the future expression (n = 0): <none>
[08:08:09.159] | : . ' , ; ` | : . ' , ; ` | : . ' getFutureCore() ... done
[08:08:09.159] | : . ' , ; ` | : . ' , ; ` | : . ' getFutureCapture() ...
[08:08:09.159] | : . ' , ; ` | : . ' , ; ` | : . ' getFutureCapture() ... done
[08:08:09.159] | : . ' , ; ` | : . ' , ; ` | : . ' getFutureContext() ...
[08:08:09.159] | : . ' , ; ` | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:09.160] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Getting stack without first backend: [n=0] 
[08:08:09.160] | : . ' , ; ` | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:09.160] | : . ' , ; ` | : . ' , ; ` | : . ' , Packages needed by future backend (n = 0): <none>
[08:08:09.160] | : . ' , ; ` | : . ' , ; ` | : . ' getFutureContext() ... done
[08:08:09.160] | : . ' , ; ` | : . ' , ; ` | : . getFutureData() ... done
[08:08:09.160] | : . ' , ; ` | : . ' , ; ` | : . FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'add', earlySignal = 0) ...
[08:08:09.161] | : . ' , ; ` | : . ' , ; ` | : . ' Appended future to position #1
[08:08:09.161] | : . ' , ; ` | : . ' , ; ` | : . ' Number of registered futures: 1
[08:08:09.161] | : . ' , ; ` | : . ' , ; ` | : . FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'add', earlySignal = 0) ... done
[08:08:09.161] | : . ' , ; ` | : . ' , ; ` | : launchFuture() ... done
[08:08:09.161] | : . ' , ; ` | : . ' , ; ` | : MultisessionFuture started
[08:08:09.161] | : . ' , ; ` | : . ' , ; ` | launchFuture() for ClusterFutureBackend ... done
[08:08:09.161] | : . ' , ; ` | : . ' , ; ` Launching futures ... done
[08:08:09.161] | : . ' , ; ` | : . ' , ; ` Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:09.161] | : . ' , ; ` | : . ' , ; Using MultisessionFutureBackend ... done
[08:08:09.162] | : . ' , ; ` | : . ' , run() for ‘Future’ (<unnamed-27>) ... done
[08:08:09.162] | : . ' , ; ` | : . ' future(..., label = NULL) ... done
[08:08:09.162] | : . ' , ; ` | : . ' value() for MultisessionFuture (<unnamed-27>) ...
[08:08:09.162] | : . ' , ; ` | : . ' , result() for ClusterFuture ...
[08:08:09.162] | : . ' , ; ` | : . ' , ; assertValidConnection() ...
[08:08:09.162] | : . ' , ; ` | : . ' , ; ` cluster node index: 1
[08:08:09.163] | : . ' , ; ` | : . ' , ; assertValidConnection() ... done
[08:08:09.163] | : . ' , ; ` | : . ' , ; receiveMessageFromWorker() for ClusterFuture ...
[08:08:09.163] | : . ' , ; ` | : . ' , ; ` cluster node index: 1
[08:08:09.204] | : . ' , ; ` | : . ' , ; ` [1] TRUE
[08:08:09.205] | : . ' , ; ` | : . ' , ; ` received data:
[08:08:09.205] | : . ' , ; ` | : . ' , ; ` List of 5
[08:08:09.205] | : . ' , ; ` | : . ' , ; `  $ type   : chr "VALUE"
[08:08:09.205] | : . ' , ; ` | : . ' , ; `  $ value  :List of 16
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   ..$ value              : NULL
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   ..$ visible            : logi TRUE
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   ..$ stdout             : chr ""
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   ..$ conditions         :List of 1
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. ..$ :List of 5
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. ..$ condition:List of 2
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ message: chr "Woops!"
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ call   : language eval(quote({     { ...
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. ..$ calls    :List of 10
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ : language eval(expr, envir = globalenv())
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ : language eval(expr, envir = globalenv())
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ : language local({     { ...
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ : language eval.parent(substitute(eval(quote(expr), envir)))
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ : language eval(expr, p)
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ : language eval(expr, p)
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ : language eval(quote({     { ...
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ : language eval(quote({     { ...
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ : language stop("Woops!")
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ : language eval(quote({     { ...
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. ..$ session  :List of 6
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ r         :List of 14
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. .. ..$ platform      : chr "x86_64-pc-linux-gnu"
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. .. ..$ arch          : chr "x86_64"
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. .. ..$ os            : chr "linux-gnu"
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. .. ..$ system        : chr "x86_64, linux-gnu"
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. .. ..$ status        : chr ""
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. .. ..$ major         : chr "4"
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. .. ..$ minor         : chr "5.0"
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. .. ..$ year          : chr "2025"
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. .. ..$ month         : chr "04"
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. .. ..$ day           : chr "11"
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. .. ..$ svn rev       : chr "88135"
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. .. ..$ language      : chr "R"
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. .. ..$ version.string: chr "R version 4.5.0 (2025-04-11)"
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. .. ..$ nickname      : chr "How About a Twenty-Six"
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ locale    : chr "LC_CTYPE=en_US.UTF-8;LC_NUMERIC=C;LC_TIME=en_US.UTF-8;LC_COLLATE=en_US.UTF-8;LC_MONETARY=en_US.UTF-8;LC_MESSAGE"| __truncated__
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ rngkind   : chr [1:3] "Mersenne-Twister" "Inversion" "Rejection"
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ namespaces: chr [1:16] "compiler" "parallelly" "graphics" "tools" ...
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ search    : chr [1:10] ".GlobalEnv" "package:future" "package:stats" "package:graphics" ...
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ system    : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. ..$ timestamp: POSIXct[1:1], format: "2025-06-17 08:08:09"
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. ..$ signaled : int 0
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   ..$ rng                : logi FALSE
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   ..$ seed               : NULL
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   ..$ misuseGlobalEnv    : NULL
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   ..$ misuseConnections  :List of 3
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. ..$ added   : NULL
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. ..$ removed : NULL
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. ..$ replaced: NULL
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   ..$ misuseDevices      : NULL
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   ..$ misuseDefaultDevice: list()
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:09"
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:09"
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   ..$ uuid               : chr [1:2] "67af0fd89af88a05d7f19a04932924f6" "27"
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   ..$ session_uuid       : chr "64d1c0ec81c7b9e640126f07ad396546"
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "source")=List of 5
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. ..$ host  : Named chr "285a5f234941"
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. ..$ pid   : int 68323
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:08"
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. ..$ random: int 2147483647
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   ..$ r_info             :List of 4
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. .. ..$ : int [1:3] 4 5 0
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. ..$ os           : chr "unix"
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. ..$ os_name      : chr "Linux"
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   .. ..$ captures_utf8: logi TRUE
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   ..$ version            : chr "1.8"
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr "FutureResult"
[08:08:09.205] | : . ' , ; ` | : . ' , ; `  $ success: logi TRUE
[08:08:09.205] | : . ' , ; ` | : . ' , ; `  $ time   : 'proc_time' Named num [1:5] 0.003 0.001 0.003 0 0
[08:08:09.205] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:09.205] | : . ' , ; ` | : . ' , ; `  $ tag    : NULL
[08:08:09.228] | : . ' , ; ` | : . ' , ; ` Received FutureResult
[08:08:09.229] | : . ' , ; ` | : . ' , ; ` FutureResult:
[08:08:09.229] | : . ' , ; ` | : . ' , ; ` value: ‘NULL’
[08:08:09.229] | : . ' , ; ` | : . ' , ; ` visible: TRUE
[08:08:09.229] | : . ' , ; ` | : . ' , ; ` stdout: character
[08:08:09.229] | : . ' , ; ` | : . ' , ; ` conditions: [n = 1] simpleError
[08:08:09.229] | : . ' , ; ` | : . ' , ; ` RNG used: FALSE
[08:08:09.229] | : . ' , ; ` | : . ' , ; ` duration: 0.002949476 secs (started 2025-06-17 08:08:09.201149)
[08:08:09.229] | : . ' , ; ` | : . ' , ; ` version: 1.8
[08:08:09.229] | : . ' , ; ` | : . ' , ; ` FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'remove', earlySignal = 0) ...
[08:08:09.229] | : . ' , ; ` | : . ' , ; ` | Removed future from position #1
[08:08:09.229] | : . ' , ; ` | : . ' , ; ` | Number of registered futures: 0
[08:08:09.229] | : . ' , ; ` | : . ' , ; ` FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'remove', earlySignal = 0) ... done
[08:08:09.230] | : . ' , ; ` | : . ' , ; ` Erased future from future backend
[08:08:09.230] | : . ' , ; ` | : . ' , ; ` result() for ClusterFuture ...
[08:08:09.230] | : . ' , ; ` | : . ' , ; ` | result already collected: FutureResult
[08:08:09.230] | : . ' , ; ` | : . ' , ; ` result() for ClusterFuture ... done
[08:08:09.230] | : . ' , ; ` | : . ' , ; ` signalConditions() ...
[08:08:09.230] | : . ' , ; ` | : . ' , ; ` | include = ‘immediateCondition’
[08:08:09.230] | : . ' , ; ` | : . ' , ; ` | exclude = 
[08:08:09.230] | : . ' , ; ` | : . ' , ; ` | resignal = FALSE
[08:08:09.230] | : . ' , ; ` | : . ' , ; ` | Number of conditions: 1
[08:08:09.230] | : . ' , ; ` | : . ' , ; ` |  int 1
[08:08:09.231] | : . ' , ; ` | : . ' , ; ` | Condition #1 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:09.231] | : . ' , ; ` | : . ' , ; ` signalConditions() ... done
[08:08:09.231] | : . ' , ; ` | : . ' , ; receiveMessageFromWorker() for ClusterFuture ... done
[08:08:09.231] | : . ' , ; ` | : . ' , result() for ClusterFuture ... done
[08:08:09.231] | : . ' , ; ` | : . ' , result() for ClusterFuture ...
[08:08:09.231] | : . ' , ; ` | : . ' , ; result already collected: FutureResult
[08:08:09.232] | : . ' , ; ` | : . ' , result() for ClusterFuture ... done
[08:08:09.232] | : . ' , ; ` | : . ' , signalConditions() ...
[08:08:09.232] | : . ' , ; ` | : . ' , ; include = ‘immediateCondition’
[08:08:09.232] | : . ' , ; ` | : . ' , ; exclude = 
[08:08:09.232] | : . ' , ; ` | : . ' , ; resignal = FALSE
[08:08:09.232] | : . ' , ; ` | : . ' , ; Number of conditions: 1
[08:08:09.232] | : . ' , ; ` | : . ' , ;  int 1
[08:08:09.233] | : . ' , ; ` | : . ' , ; Condition #1 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:09.233] | : . ' , ; ` | : . ' , signalConditions() ... done
[08:08:09.233] | : . ' , ; ` | : . ' , relay stdout ...
[08:08:09.233] | : . ' , ; ` | : . ' , relay stdout ... done
[08:08:09.233] | : . ' , ; ` | : . ' , check for misuse ...
[08:08:09.233] | : . ' , ; ` | : . ' , check for misuse ... done
[08:08:09.233] | : . ' , ; ` | : . ' , relay conditions ...
[08:08:09.233] | : . ' , ; ` | : . ' , ; Future state: ‘finished’
[08:08:09.233] | : . ' , ; ` | : . ' , ; result() for ClusterFuture ...
[08:08:09.234] | : . ' , ; ` | : . ' , ; ` result already collected: FutureResult
[08:08:09.234] | : . ' , ; ` | : . ' , ; result() for ClusterFuture ... done
[08:08:09.234] | : . ' , ; ` | : . ' , ; signalConditions() ...
[08:08:09.234] | : . ' , ; ` | : . ' , ; ` include = ‘condition’
[08:08:09.234] | : . ' , ; ` | : . ' , ; ` exclude = ‘immediateCondition’
[08:08:09.234] | : . ' , ; ` | : . ' , ; ` resignal = TRUE
[08:08:09.234] | : . ' , ; ` | : . ' , ; ` Number of conditions: 1
[08:08:09.234] | : . ' , ; ` | : . ' , ; `  int 1
[08:08:09.235] | : . ' , ; ` | : . ' , ; ` Condition #1 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:09.235] | : . ' , ; ` | : . ' , ; ` Condition #1: ‘simpleError’, ‘error’, ‘condition’
[08:08:09.235] | : . ' , ; ` | : . ' , ; signalConditions() ... done
[08:08:09.235] | : . ' , ; ` | : . ' , relay conditions ... done
[08:08:09.235] | : . ' , ; ` | : . ' , future(..., label = NULL) ...
[08:08:09.236] | : . ' , ; ` | : . ' , ; lazy: FALSE
[08:08:09.236] | : . ' , ; ` | : . ' , ; stdout: TRUE
[08:08:09.236] | : . ' , ; ` | : . ' , ; conditions: [n=1] ‘condition’
[08:08:09.236] | : . ' , ; ` | : . ' , ; gc: FALSE
[08:08:09.236] | : . ' , ; ` | : . ' , ; earlySignal: FALSE
[08:08:09.236] | : . ' , ; ` | : . ' , ; getGlobalsAndPackages() ...
[08:08:09.236] | : . ' , ; ` | : . ' , ; ` Searching for globals ...
[08:08:09.249] | : . ' , ; ` | : . ' , ; ` | globals found: [6] ‘{’, ‘if’, ‘==’, ‘%%’, ‘ii’, ‘stop’
[08:08:09.249] | : . ' , ; ` | : . ' , ; ` Searching for globals ... done
[08:08:09.249] | : . ' , ; ` | : . ' , ; ` Resolving globals: FALSE
[08:08:09.249] | : . ' , ; ` | : . ' , ; ` Search for packages associated with the globals ...
[08:08:09.249] | : . ' , ; ` | : . ' , ; ` | Packages associated with globals: [1] ‘base’
[08:08:09.249] | : . ' , ; ` | : . ' , ; ` | Packages: [1] ‘base’
[08:08:09.250] | : . ' , ; ` | : . ' , ; ` Search for packages associated with the globals ... done
[08:08:09.250] | : . ' , ; ` | : . ' , ; ` Packages after dropping 'base': [0] 
[08:08:09.250] | : . ' , ; ` | : . ' , ; ` globals: [1] ‘ii’
[08:08:09.250] | : . ' , ; ` | : . ' , ; ` packages: [0] 
[08:08:09.250] | : . ' , ; ` | : . ' , ; getGlobalsAndPackages() ... done
[08:08:09.250] | : . ' , ; ` | : . ' , ; run() for ‘Future’ (<unnamed-28>) ...
[08:08:09.250] | : . ' , ; ` | : . ' , ; ` state: ‘created’
[08:08:09.251] | : . ' , ; ` | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:09.251] | : . ' , ; ` | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:09.251] | : . ' , ; ` | : . ' , ; ` Using MultisessionFutureBackend ...
[08:08:09.251] | : . ' , ; ` | : . ' , ; ` | Number of futures since start: 3 (3 created, 3 launched, 3 finished)
[08:08:09.251] | : . ' , ; ` | : . ' , ; ` | Launching futures ...
[08:08:09.251] | : . ' , ; ` | : . ' , ; ` | : launchFuture() for ClusterFutureBackend ...
[08:08:09.251] | : . ' , ; ` | : . ' , ; ` | : . Workers: [n=2]
[08:08:09.251] | : . ' , ; ` | : . ' , ; ` | : . Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:08:09.253] | : . ' , ; ` | : . ' , ; ` | : . FutureRegistry: ‘workers-a24376b6c5156fe46f79f17f54ce8a4c’
[08:08:09.253] | : . ' , ; ` | : . ' , ; ` | : . requestWorker() ...
[08:08:09.253] | : . ' , ; ` | : . ' , ; ` | : . ' requestNode() ...
[08:08:09.253] | : . ' , ; ` | : . ' , ; ` | : . ' , Number of workers: 2
[08:08:09.253] | : . ' , ; ` | : . ' , ; ` | : . ' , Polling for a free worker ...
[08:08:09.254] | : . ' , ; ` | : . ' , ; ` | : . ' , ; FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:09.254] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Listing all futures
[08:08:09.254] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Number of registered futures: 0
[08:08:09.254] | : . ' , ; ` | : . ' , ; ` | : . ' , ; FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:09.254] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Total time: 0
[08:08:09.254] | : . ' , ; ` | : . ' , ; ` | : . ' , Polling for a free worker ... done
[08:08:09.254] | : . ' , ; ` | : . ' , ; ` | : . ' , FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:09.254] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Listing all futures
[08:08:09.254] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Number of registered futures: 0
[08:08:09.254] | : . ' , ; ` | : . ' , ; ` | : . ' , FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:09.255] | : . ' , ; ` | : . ' , ; ` | : . ' , avail: [n=2] ‘1’, ‘2’
[08:08:09.255] | : . ' , ; ` | : . ' , ; ` | : . ' , Index of first available worker: 1
[08:08:09.255] | : . ' , ; ` | : . ' , ; ` | : . ' , Validate that the worker is functional ...
[08:08:09.348] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Worker is functional
[08:08:09.348] | : . ' , ; ` | : . ' , ; ` | : . ' , ; FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:09.348] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Listing all futures
[08:08:09.348] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Number of registered futures: 0
[08:08:09.348] | : . ' , ; ` | : . ' , ; ` | : . ' , ; FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:09.349] | : . ' , ; ` | : . ' , ; ` | : . ' , Validate that the worker is functional ... done
[08:08:09.349] | : . ' , ; ` | : . ' , ; ` | : . ' requestNode() ... done
[08:08:09.349] | : . ' , ; ` | : . ' , ; ` | : . ' cluster node index: 1
[08:08:09.349] | : . ' , ; ` | : . ' , ; ` | : . requestWorker() ... done
[08:08:09.349] | : . ' , ; ` | : . ' , ; ` | : . eraseGlobalEnvironment() ...
[08:08:09.349] | : . ' , ; ` | : . ' , ; ` | : . eraseGlobalEnvironment() ... done
[08:08:09.350] | : . ' , ; ` | : . ' , ; ` | : . launchFuture() ...
[08:08:09.350] | : . ' , ; ` | : . ' , ; ` | : . ' cluster node index: 1
[08:08:09.350] | : . ' , ; ` | : . ' , ; ` | : . ' getFutureData() ...
[08:08:09.350] | : . ' , ; ` | : . ' , ; ` | : . ' , getFutureCore() ...
[08:08:09.350] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Packages needed by the future expression (n = 0): <none>
[08:08:09.350] | : . ' , ; ` | : . ' , ; ` | : . ' , getFutureCore() ... done
[08:08:09.350] | : . ' , ; ` | : . ' , ; ` | : . ' , getFutureCapture() ...
[08:08:09.350] | : . ' , ; ` | : . ' , ; ` | : . ' , getFutureCapture() ... done
[08:08:09.350] | : . ' , ; ` | : . ' , ; ` | : . ' , getFutureContext() ...
[08:08:09.351] | : . ' , ; ` | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:09.351] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Getting stack without first backend: [n=0] 
[08:08:09.351] | : . ' , ; ` | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:09.351] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Packages needed by future backend (n = 0): <none>
[08:08:09.351] | : . ' , ; ` | : . ' , ; ` | : . ' , getFutureContext() ... done
[08:08:09.351] | : . ' , ; ` | : . ' , ; ` | : . ' getFutureData() ... done
[08:08:09.351] | : . ' , ; ` | : . ' , ; ` | : . ' FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'add', earlySignal = 0) ...
[08:08:09.352] | : . ' , ; ` | : . ' , ; ` | : . ' , Appended future to position #1
[08:08:09.352] | : . ' , ; ` | : . ' , ; ` | : . ' , Number of registered futures: 1
[08:08:09.352] | : . ' , ; ` | : . ' , ; ` | : . ' FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'add', earlySignal = 0) ... done
[08:08:09.352] | : . ' , ; ` | : . ' , ; ` | : . launchFuture() ... done
[08:08:09.352] | : . ' , ; ` | : . ' , ; ` | : . MultisessionFuture started
[08:08:09.352] | : . ' , ; ` | : . ' , ; ` | : launchFuture() for ClusterFutureBackend ... done
[08:08:09.352] | : . ' , ; ` | : . ' , ; ` | Launching futures ... done
[08:08:09.352] | : . ' , ; ` | : . ' , ; ` | Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:09.353] | : . ' , ; ` | : . ' , ; ` Using MultisessionFutureBackend ... done
[08:08:09.353] | : . ' , ; ` | : . ' , ; run() for ‘Future’ (<unnamed-28>) ... done
[08:08:09.353] | : . ' , ; ` | : . ' , future(..., label = NULL) ... done
[08:08:09.353] | : . ' , ; ` | : . ' , future(..., label = NULL) ...
[08:08:09.353] | : . ' , ; ` | : . ' , ; lazy: FALSE
[08:08:09.353] | : . ' , ; ` | : . ' , ; stdout: TRUE
[08:08:09.353] | : . ' , ; ` | : . ' , ; conditions: [n=1] ‘condition’
[08:08:09.354] | : . ' , ; ` | : . ' , ; gc: FALSE
[08:08:09.354] | : . ' , ; ` | : . ' , ; earlySignal: FALSE
[08:08:09.354] | : . ' , ; ` | : . ' , ; getGlobalsAndPackages() ...
[08:08:09.354] | : . ' , ; ` | : . ' , ; ` Searching for globals ...
[08:08:09.367] | : . ' , ; ` | : . ' , ; ` | globals found: [6] ‘{’, ‘if’, ‘==’, ‘%%’, ‘ii’, ‘stop’
[08:08:09.367] | : . ' , ; ` | : . ' , ; ` Searching for globals ... done
[08:08:09.367] | : . ' , ; ` | : . ' , ; ` Resolving globals: FALSE
[08:08:09.367] | : . ' , ; ` | : . ' , ; ` Search for packages associated with the globals ...
[08:08:09.367] | : . ' , ; ` | : . ' , ; ` | Packages associated with globals: [1] ‘base’
[08:08:09.368] | : . ' , ; ` | : . ' , ; ` | Packages: [1] ‘base’
[08:08:09.368] | : . ' , ; ` | : . ' , ; ` Search for packages associated with the globals ... done
[08:08:09.368] | : . ' , ; ` | : . ' , ; ` Packages after dropping 'base': [0] 
[08:08:09.368] | : . ' , ; ` | : . ' , ; ` globals: [1] ‘ii’
[08:08:09.368] | : . ' , ; ` | : . ' , ; ` packages: [0] 
[08:08:09.368] | : . ' , ; ` | : . ' , ; getGlobalsAndPackages() ... done
[08:08:09.368] | : . ' , ; ` | : . ' , ; run() for ‘Future’ (<unnamed-29>) ...
[08:08:09.369] | : . ' , ; ` | : . ' , ; ` state: ‘created’
[08:08:09.369] | : . ' , ; ` | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:09.369] | : . ' , ; ` | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:09.369] | : . ' , ; ` | : . ' , ; ` Using MultisessionFutureBackend ...
[08:08:09.369] | : . ' , ; ` | : . ' , ; ` | Number of futures since start: 4 (4 created, 4 launched, 3 finished)
[08:08:09.369] | : . ' , ; ` | : . ' , ; ` | Launching futures ...
[08:08:09.369] | : . ' , ; ` | : . ' , ; ` | : launchFuture() for ClusterFutureBackend ...
[08:08:09.369] | : . ' , ; ` | : . ' , ; ` | : . Workers: [n=2]
[08:08:09.370] | : . ' , ; ` | : . ' , ; ` | : . Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:08:09.371] | : . ' , ; ` | : . ' , ; ` | : . FutureRegistry: ‘workers-a24376b6c5156fe46f79f17f54ce8a4c’
[08:08:09.371] | : . ' , ; ` | : . ' , ; ` | : . requestWorker() ...
[08:08:09.371] | : . ' , ; ` | : . ' , ; ` | : . ' requestNode() ...
[08:08:09.371] | : . ' , ; ` | : . ' , ; ` | : . ' , Number of workers: 2
[08:08:09.372] | : . ' , ; ` | : . ' , ; ` | : . ' , Polling for a free worker ...
[08:08:09.372] | : . ' , ; ` | : . ' , ; ` | : . ' , ; FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:09.372] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Listing all futures
[08:08:09.372] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Number of registered futures: 1
[08:08:09.372] | : . ' , ; ` | : . ' , ; ` | : . ' , ; FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:09.372] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Total time: 0
[08:08:09.372] | : . ' , ; ` | : . ' , ; ` | : . ' , Polling for a free worker ... done
[08:08:09.372] | : . ' , ; ` | : . ' , ; ` | : . ' , FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:09.372] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Listing all futures
[08:08:09.372] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Number of registered futures: 1
[08:08:09.373] | : . ' , ; ` | : . ' , ; ` | : . ' , FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:09.373] | : . ' , ; ` | : . ' , ; ` | : . ' , avail: [n=2] ‘2’
[08:08:09.373] | : . ' , ; ` | : . ' , ; ` | : . ' , Index of first available worker: 2
[08:08:09.373] | : . ' , ; ` | : . ' , ; ` | : . ' , Validate that the worker is functional ...
[08:08:09.444] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Worker is functional
[08:08:09.444] | : . ' , ; ` | : . ' , ; ` | : . ' , ; FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:09.445] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Listing all futures
[08:08:09.445] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Number of registered futures: 1
[08:08:09.445] | : . ' , ; ` | : . ' , ; ` | : . ' , ; FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:09.445] | : . ' , ; ` | : . ' , ; ` | : . ' , Validate that the worker is functional ... done
[08:08:09.445] | : . ' , ; ` | : . ' , ; ` | : . ' requestNode() ... done
[08:08:09.445] | : . ' , ; ` | : . ' , ; ` | : . ' cluster node index: 2
[08:08:09.445] | : . ' , ; ` | : . ' , ; ` | : . requestWorker() ... done
[08:08:09.445] | : . ' , ; ` | : . ' , ; ` | : . eraseGlobalEnvironment() ...
[08:08:09.446] | : . ' , ; ` | : . ' , ; ` | : . eraseGlobalEnvironment() ... done
[08:08:09.446] | : . ' , ; ` | : . ' , ; ` | : . launchFuture() ...
[08:08:09.446] | : . ' , ; ` | : . ' , ; ` | : . ' cluster node index: 2
[08:08:09.446] | : . ' , ; ` | : . ' , ; ` | : . ' getFutureData() ...
[08:08:09.446] | : . ' , ; ` | : . ' , ; ` | : . ' , getFutureCore() ...
[08:08:09.446] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Packages needed by the future expression (n = 0): <none>
[08:08:09.447] | : . ' , ; ` | : . ' , ; ` | : . ' , getFutureCore() ... done
[08:08:09.447] | : . ' , ; ` | : . ' , ; ` | : . ' , getFutureCapture() ...
[08:08:09.447] | : . ' , ; ` | : . ' , ; ` | : . ' , getFutureCapture() ... done
[08:08:09.447] | : . ' , ; ` | : . ' , ; ` | : . ' , getFutureContext() ...
[08:08:09.447] | : . ' , ; ` | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:09.447] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Getting stack without first backend: [n=0] 
[08:08:09.447] | : . ' , ; ` | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:09.447] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Packages needed by future backend (n = 0): <none>
[08:08:09.448] | : . ' , ; ` | : . ' , ; ` | : . ' , getFutureContext() ... done
[08:08:09.448] | : . ' , ; ` | : . ' , ; ` | : . ' getFutureData() ... done
[08:08:09.448] | : . ' , ; ` | : . ' , ; ` | : . ' FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'add', earlySignal = 0) ...
[08:08:09.448] | : . ' , ; ` | : . ' , ; ` | : . ' , Appended future to position #2
[08:08:09.448] | : . ' , ; ` | : . ' , ; ` | : . ' , Number of registered futures: 2
[08:08:09.448] | : . ' , ; ` | : . ' , ; ` | : . ' FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'add', earlySignal = 0) ... done
[08:08:09.448] | : . ' , ; ` | : . ' , ; ` | : . launchFuture() ... done
[08:08:09.449] | : . ' , ; ` | : . ' , ; ` | : . MultisessionFuture started
[08:08:09.449] | : . ' , ; ` | : . ' , ; ` | : launchFuture() for ClusterFutureBackend ... done
[08:08:09.449] | : . ' , ; ` | : . ' , ; ` | Launching futures ... done
[08:08:09.449] | : . ' , ; ` | : . ' , ; ` | Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:09.449] | : . ' , ; ` | : . ' , ; ` Using MultisessionFutureBackend ... done
[08:08:09.449] | : . ' , ; ` | : . ' , ; run() for ‘Future’ (<unnamed-29>) ... done
[08:08:09.449] | : . ' , ; ` | : . ' , future(..., label = NULL) ... done
[08:08:09.450] | : . ' , ; ` | : . ' , future(..., label = NULL) ...
[08:08:09.450] | : . ' , ; ` | : . ' , ; lazy: FALSE
[08:08:09.450] | : . ' , ; ` | : . ' , ; stdout: TRUE
[08:08:09.450] | : . ' , ; ` | : . ' , ; conditions: [n=1] ‘condition’
[08:08:09.450] | : . ' , ; ` | : . ' , ; gc: FALSE
[08:08:09.450] | : . ' , ; ` | : . ' , ; earlySignal: FALSE
[08:08:09.450] | : . ' , ; ` | : . ' , ; getGlobalsAndPackages() ...
[08:08:09.450] | : . ' , ; ` | : . ' , ; ` Searching for globals ...
[08:08:09.463] | : . ' , ; ` | : . ' , ; ` | globals found: [6] ‘{’, ‘if’, ‘==’, ‘%%’, ‘ii’, ‘stop’
[08:08:09.463] | : . ' , ; ` | : . ' , ; ` Searching for globals ... done
[08:08:09.463] | : . ' , ; ` | : . ' , ; ` Resolving globals: FALSE
[08:08:09.463] | : . ' , ; ` | : . ' , ; ` Search for packages associated with the globals ...
[08:08:09.463] | : . ' , ; ` | : . ' , ; ` | Packages associated with globals: [1] ‘base’
[08:08:09.464] | : . ' , ; ` | : . ' , ; ` | Packages: [1] ‘base’
[08:08:09.464] | : . ' , ; ` | : . ' , ; ` Search for packages associated with the globals ... done
[08:08:09.464] | : . ' , ; ` | : . ' , ; ` Packages after dropping 'base': [0] 
[08:08:09.464] | : . ' , ; ` | : . ' , ; ` globals: [1] ‘ii’
[08:08:09.464] | : . ' , ; ` | : . ' , ; ` packages: [0] 
[08:08:09.464] | : . ' , ; ` | : . ' , ; getGlobalsAndPackages() ... done
[08:08:09.465] | : . ' , ; ` | : . ' , ; run() for ‘Future’ (<unnamed-30>) ...
[08:08:09.465] | : . ' , ; ` | : . ' , ; ` state: ‘created’
[08:08:09.465] | : . ' , ; ` | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:09.465] | : . ' , ; ` | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:09.465] | : . ' , ; ` | : . ' , ; ` Using MultisessionFutureBackend ...
[08:08:09.465] | : . ' , ; ` | : . ' , ; ` | Number of futures since start: 5 (5 created, 5 launched, 3 finished)
[08:08:09.465] | : . ' , ; ` | : . ' , ; ` | Launching futures ...
[08:08:09.466] | : . ' , ; ` | : . ' , ; ` | : launchFuture() for ClusterFutureBackend ...
[08:08:09.466] | : . ' , ; ` | : . ' , ; ` | : . Workers: [n=2]
[08:08:09.466] | : . ' , ; ` | : . ' , ; ` | : . Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:08:09.467] | : . ' , ; ` | : . ' , ; ` | : . FutureRegistry: ‘workers-a24376b6c5156fe46f79f17f54ce8a4c’
[08:08:09.468] | : . ' , ; ` | : . ' , ; ` | : . requestWorker() ...
[08:08:09.468] | : . ' , ; ` | : . ' , ; ` | : . ' requestNode() ...
[08:08:09.468] | : . ' , ; ` | : . ' , ; ` | : . ' , Number of workers: 2
[08:08:09.468] | : . ' , ; ` | : . ' , ; ` | : . ' , Polling for a free worker ...
[08:08:09.468] | : . ' , ; ` | : . ' , ; ` | : . ' , ; FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:09.468] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Listing all futures
[08:08:09.468] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Number of registered futures: 2
[08:08:09.468] | : . ' , ; ` | : . ' , ; ` | : . ' , ; FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:09.468] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Poll #1 (0): usedNodes() = 2, workers = 2
[08:08:09.479] | : . ' , ; ` | : . ' , ; ` | : . ' , ; FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'collect-first', earlySignal = 1) ...
[08:08:09.505] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` collectValues('workers-a24376b6c5156fe46f79f17f54ce8a4c', firstOnly = TRUE) ...
[08:08:09.505] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | resolved() for MultisessionFuture (<unnamed-28>) ...
[08:08:09.505] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Cluster node socket connection: index=4, id=533
[08:08:09.506] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : assertValidConnection() ...
[08:08:09.506] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . cluster node index: 1
[08:08:09.506] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : assertValidConnection() ... done
[08:08:09.506] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : receiveMessageFromWorker() for ClusterFuture ...
[08:08:09.506] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . cluster node index: 1
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . [1] TRUE
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . received data:
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . List of 5
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .  $ type   : chr "VALUE"
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .  $ value  :List of 16
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..$ value              : int 1
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..$ visible            : logi TRUE
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..$ stdout             : chr ""
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..$ conditions         : list()
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..$ rng                : logi FALSE
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..$ seed               : NULL
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..$ misuseGlobalEnv    : NULL
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..$ misuseConnections  :List of 3
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. ..$ added   : NULL
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. ..$ removed : NULL
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. ..$ replaced: NULL
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..$ misuseDevices      : NULL
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..$ misuseDefaultDevice: list()
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:09"
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:09"
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..$ uuid               : chr [1:2] "67af0fd89af88a05d7f19a04932924f6" "28"
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..$ session_uuid       : chr "64d1c0ec81c7b9e640126f07ad396546"
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. ..- attr(*, "source")=List of 5
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. .. ..$ host  : Named chr "285a5f234941"
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. .. ..$ pid   : int 68323
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:08"
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. .. ..$ random: int 2147483647
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..$ r_info             :List of 4
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. .. ..$ : int [1:3] 4 5 0
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. ..$ os           : chr "unix"
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. ..$ os_name      : chr "Linux"
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   .. ..$ captures_utf8: logi TRUE
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..$ version            : chr "1.8"
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "class")= chr "FutureResult"
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .  $ success: logi TRUE
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .  $ time   : 'proc_time' Named num [1:5] 0.005 0 0.005 0 0
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:09.507] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : .  $ tag    : NULL
[08:08:09.520] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . Received FutureResult
[08:08:09.520] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . FutureResult:
[08:08:09.520] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . value: ‘integer’
[08:08:09.520] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . visible: TRUE
[08:08:09.520] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . stdout: character
[08:08:09.520] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . conditions: [n = 0] 
[08:08:09.520] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . RNG used: FALSE
[08:08:09.520] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . duration: 0.004324198 secs (started 2025-06-17 08:08:09.392337)
[08:08:09.520] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . version: 1.8
[08:08:09.521] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'remove', earlySignal = 0) ...
[08:08:09.521] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . ' Removed future from position #1
[08:08:09.521] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . ' Number of registered futures: 1
[08:08:09.521] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'remove', earlySignal = 0) ... done
[08:08:09.521] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . Erased future from future backend
[08:08:09.522] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . result() for ClusterFuture ...
[08:08:09.522] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . ' result already collected: FutureResult
[08:08:09.522] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . result() for ClusterFuture ... done
[08:08:09.522] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . signalConditions() ...
[08:08:09.522] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . ' include = ‘immediateCondition’
[08:08:09.522] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . ' exclude = 
[08:08:09.522] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . ' resignal = FALSE
[08:08:09.522] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . ' Number of conditions: 0
[08:08:09.522] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . '  int 0
[08:08:09.523] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . signalConditions() ... done
[08:08:09.523] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : receiveMessageFromWorker() for ClusterFuture ... done
[08:08:09.523] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : receiveMessageFromWorker() returned object of class FutureResult; resolved
[08:08:09.523] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | resolved() for MultisessionFuture (<unnamed-28>) ... done
[08:08:09.523] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | assertFutureResult() ...
[08:08:09.523] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Future uuid: 67af0fd89af88a05d7f19a04932924f6[08:08:09.523] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Future uuid: 28
[08:08:09.524] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : identical; success
[08:08:09.524] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | assertFutureResult() ... done
[08:08:09.524] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Future at position #1 is resolved ...
[08:08:09.524] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : value() for MultisessionFuture (<unnamed-28>) ...
[08:08:09.524] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . result() for ClusterFuture ...
[08:08:09.524] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . ' result already collected: FutureResult
[08:08:09.524] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . result() for ClusterFuture ... done
[08:08:09.524] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . result() for ClusterFuture ...
[08:08:09.524] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . ' result already collected: FutureResult
[08:08:09.525] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . result() for ClusterFuture ... done
[08:08:09.525] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . signalConditions() ...
[08:08:09.525] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . ' include = ‘immediateCondition’
[08:08:09.525] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . ' exclude = 
[08:08:09.525] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . ' resignal = FALSE
[08:08:09.525] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . ' Number of conditions: 0
[08:08:09.525] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . '  int 0
[08:08:09.526] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . signalConditions() ... done
[08:08:09.526] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . check for misuse ...
[08:08:09.526] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . check for misuse ... done
[08:08:09.526] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : value() for MultisessionFuture (<unnamed-28>) ... done
[08:08:09.526] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Future at position #1 is resolved ... done
[08:08:09.526] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` collectValues('workers-a24376b6c5156fe46f79f17f54ce8a4c', firstOnly = TRUE) ... done
[08:08:09.526] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Remove collected futures ...
[08:08:09.526] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Indices of futures to drop: [n=1] ‘1’
[08:08:09.527] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Remove collected futures ... done
[08:08:09.527] | : . ' , ; ` | : . ' , ; ` | : . ' , ; FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'collect-first', earlySignal = 1) ... done
[08:08:09.527] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Early signaling of 2 future candidates ...
[08:08:09.527] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Number of futures with early signaling requested: 0
[08:08:09.527] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Early signaling of 2 future candidates ... done
[08:08:09.527] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Number of registered futures: 2
[08:08:09.527] | : . ' , ; ` | : . ' , ; ` | : . ' , Polling for a free worker ... done
[08:08:09.527] | : . ' , ; ` | : . ' , ; ` | : . ' , FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:09.527] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Listing all futures
[08:08:09.528] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Number of registered futures: 1
[08:08:09.528] | : . ' , ; ` | : . ' , ; ` | : . ' , FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:09.528] | : . ' , ; ` | : . ' , ; ` | : . ' , Total time: 0.0592567920684814
[08:08:09.528] | : . ' , ; ` | : . ' , ; ` | : . ' requestNode() ... done
[08:08:09.528] | : . ' , ; ` | : . ' , ; ` | : . ' FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:09.528] | : . ' , ; ` | : . ' , ; ` | : . ' , Listing all futures
[08:08:09.528] | : . ' , ; ` | : . ' , ; ` | : . ' , Number of registered futures: 1
[08:08:09.528] | : . ' , ; ` | : . ' , ; ` | : . ' FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:09.528] | : . ' , ; ` | : . ' , ; ` | : . ' avail: [n=2] ‘1’
[08:08:09.528] | : . ' , ; ` | : . ' , ; ` | : . ' Index of first available worker: 1
[08:08:09.529] | : . ' , ; ` | : . ' , ; ` | : . ' Validate that the worker is functional ...
[08:08:09.595] | : . ' , ; ` | : . ' , ; ` | : . ' , Worker is functional
[08:08:09.595] | : . ' , ; ` | : . ' , ; ` | : . ' , FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:09.595] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Listing all futures
[08:08:09.596] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Number of registered futures: 1
[08:08:09.596] | : . ' , ; ` | : . ' , ; ` | : . ' , FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:09.596] | : . ' , ; ` | : . ' , ; ` | : . ' Validate that the worker is functional ... done
[08:08:09.596] | : . ' , ; ` | : . ' , ; ` | : . requestWorker() ... done
[08:08:09.596] | : . ' , ; ` | : . ' , ; ` | : . cluster node index: 1
[08:08:09.596] | : . ' , ; ` | : . ' , ; ` | : launchFuture() for ClusterFutureBackend ... done
[08:08:09.596] | : . ' , ; ` | : . ' , ; ` | : eraseGlobalEnvironment() ...
[08:08:09.597] | : . ' , ; ` | : . ' , ; ` | : eraseGlobalEnvironment() ... done
[08:08:09.597] | : . ' , ; ` | : . ' , ; ` | : launchFuture() ...
[08:08:09.597] | : . ' , ; ` | : . ' , ; ` | : . cluster node index: 1
[08:08:09.597] | : . ' , ; ` | : . ' , ; ` | : . getFutureData() ...
[08:08:09.597] | : . ' , ; ` | : . ' , ; ` | : . ' getFutureCore() ...
[08:08:09.597] | : . ' , ; ` | : . ' , ; ` | : . ' , Packages needed by the future expression (n = 0): <none>
[08:08:09.597] | : . ' , ; ` | : . ' , ; ` | : . ' getFutureCore() ... done
[08:08:09.598] | : . ' , ; ` | : . ' , ; ` | : . ' getFutureCapture() ...
[08:08:09.598] | : . ' , ; ` | : . ' , ; ` | : . ' getFutureCapture() ... done
[08:08:09.598] | : . ' , ; ` | : . ' , ; ` | : . ' getFutureContext() ...
[08:08:09.598] | : . ' , ; ` | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:09.598] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Getting stack without first backend: [n=0] 
[08:08:09.598] | : . ' , ; ` | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:09.598] | : . ' , ; ` | : . ' , ; ` | : . ' , Packages needed by future backend (n = 0): <none>
[08:08:09.598] | : . ' , ; ` | : . ' , ; ` | : . ' getFutureContext() ... done
[08:08:09.599] | : . ' , ; ` | : . ' , ; ` | : . getFutureData() ... done
[08:08:09.599] | : . ' , ; ` | : . ' , ; ` | : . FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'add', earlySignal = 0) ...
[08:08:09.599] | : . ' , ; ` | : . ' , ; ` | : . ' Appended future to position #2
[08:08:09.599] | : . ' , ; ` | : . ' , ; ` | : . ' Number of registered futures: 2
[08:08:09.599] | : . ' , ; ` | : . ' , ; ` | : . FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'add', earlySignal = 0) ... done
[08:08:09.599] | : . ' , ; ` | : . ' , ; ` | : launchFuture() ... done
[08:08:09.599] | : . ' , ; ` | : . ' , ; ` | : MultisessionFuture started
[08:08:09.600] | : . ' , ; ` | : . ' , ; ` | Launching futures ... done
[08:08:09.600] | : . ' , ; ` | : . ' , ; ` Using MultisessionFutureBackend ... done
[08:08:09.600] | : . ' , ; ` | : . ' , ; ` Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:09.600] | : . ' , ; ` | : . ' , ; run() for ‘Future’ (<unnamed-30>) ... done
[08:08:09.600] | : . ' , ; ` | : . ' , future(..., label = NULL) ... done
[08:08:09.600] | : . ' , ; ` | : . ' value() for MultisessionFuture (<unnamed-27>) ... done
[08:08:09.600] | : . ' , ; ` | : . ' value() for MultisessionFuture (<unnamed-28>) ...
[08:08:09.600] | : . ' , ; ` | : . ' , result() for ClusterFuture ...
[08:08:09.601] | : . ' , ; ` | : . ' , ; result already collected: FutureResult
[08:08:09.601] | : . ' , ; ` | : . ' , result() for ClusterFuture ... done
[08:08:09.601] | : . ' , ; ` | : . ' , result() for ClusterFuture ...
[08:08:09.601] | : . ' , ; ` | : . ' , ; result already collected: FutureResult
[08:08:09.601] | : . ' , ; ` | : . ' , result() for ClusterFuture ... done
[08:08:09.601] | : . ' , ; ` | : . ' , signalConditions() ...
[08:08:09.601] | : . ' , ; ` | : . ' , ; include = ‘immediateCondition’
[08:08:09.601] | : . ' , ; ` | : . ' , ; exclude = 
[08:08:09.601] | : . ' , ; ` | : . ' , ; resignal = FALSE
[08:08:09.601] | : . ' , ; ` | : . ' , ; Number of conditions: 0
[08:08:09.602] | : . ' , ; ` | : . ' , ;  int 0
[08:08:09.602] | : . ' , ; ` | : . ' , signalConditions() ... done
[08:08:09.602] | : . ' , ; ` | : . ' , relay stdout ...
[08:08:09.602] | : . ' , ; ` | : . ' , relay stdout ... done
[08:08:09.602] | : . ' , ; ` | : . ' , check for misuse ...
[08:08:09.603] | : . ' , ; ` | : . ' , check for misuse ... done
[08:08:09.603] | : . ' , ; ` | : . ' value() for MultisessionFuture (<unnamed-28>) ... done
[08:08:09.603] | : . ' , ; ` | : . ' value() for MultisessionFuture (<unnamed-29>) ...
[08:08:09.603] | : . ' , ; ` | : . ' , result() for ClusterFuture ...
[08:08:09.603] | : . ' , ; ` | : . ' , ; assertValidConnection() ...
[08:08:09.603] | : . ' , ; ` | : . ' , ; ` cluster node index: 2
[08:08:09.604] | : . ' , ; ` | : . ' , ; assertValidConnection() ... done
[08:08:09.604] | : . ' , ; ` | : . ' , ; receiveMessageFromWorker() for ClusterFuture ...
[08:08:09.604] | : . ' , ; ` | : . ' , ; ` cluster node index: 2
[08:08:09.604] | : . ' , ; ` | : . ' , ; ` [1] TRUE
[08:08:09.604] | : . ' , ; ` | : . ' , ; ` received data:
[08:08:09.604] | : . ' , ; ` | : . ' , ; ` List of 5
[08:08:09.604] | : . ' , ; ` | : . ' , ; `  $ type   : chr "VALUE"
[08:08:09.604] | : . ' , ; ` | : . ' , ; `  $ value  :List of 16
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   ..$ value              : NULL
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   ..$ visible            : logi TRUE
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   ..$ stdout             : chr ""
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   ..$ conditions         :List of 1
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. ..$ :List of 5
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. ..$ condition:List of 2
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ message: chr "Woops!"
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ call   : language eval(quote({     { ...
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. ..$ calls    :List of 10
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ : language eval(expr, envir = globalenv())
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ : language eval(expr, envir = globalenv())
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ : language local({     { ...
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ : language eval.parent(substitute(eval(quote(expr), envir)))
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ : language eval(expr, p)
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ : language eval(expr, p)
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ : language eval(quote({     { ...
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ : language eval(quote({     { ...
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ : language stop("Woops!")
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ : language eval(quote({     { ...
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. ..$ session  :List of 6
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ r         :List of 14
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. .. ..$ platform      : chr "x86_64-pc-linux-gnu"
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. .. ..$ arch          : chr "x86_64"
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. .. ..$ os            : chr "linux-gnu"
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. .. ..$ system        : chr "x86_64, linux-gnu"
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. .. ..$ status        : chr ""
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. .. ..$ major         : chr "4"
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. .. ..$ minor         : chr "5.0"
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. .. ..$ year          : chr "2025"
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. .. ..$ month         : chr "04"
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. .. ..$ day           : chr "11"
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. .. ..$ svn rev       : chr "88135"
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. .. ..$ language      : chr "R"
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. .. ..$ version.string: chr "R version 4.5.0 (2025-04-11)"
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. .. ..$ nickname      : chr "How About a Twenty-Six"
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ locale    : chr "LC_CTYPE=en_US.UTF-8;LC_NUMERIC=C;LC_TIME=en_US.UTF-8;LC_COLLATE=en_US.UTF-8;LC_MONETARY=en_US.UTF-8;LC_MESSAGE"| __truncated__
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ rngkind   : chr [1:3] "Mersenne-Twister" "Inversion" "Rejection"
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ namespaces: chr [1:16] "compiler" "parallelly" "graphics" "tools" ...
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ search    : chr [1:10] ".GlobalEnv" "package:future" "package:stats" "package:graphics" ...
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. ..$ system    : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. ..$ timestamp: POSIXct[1:1], format: "2025-06-17 08:08:09"
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. ..$ signaled : int 0
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   ..$ rng                : logi FALSE
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   ..$ seed               : NULL
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   ..$ misuseGlobalEnv    : NULL
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   ..$ misuseConnections  :List of 3
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. ..$ added   : NULL
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. ..$ removed : NULL
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. ..$ replaced: NULL
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   ..$ misuseDevices      : NULL
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   ..$ misuseDefaultDevice: list()
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:09"
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:09"
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   ..$ uuid               : chr [1:2] "67af0fd89af88a05d7f19a04932924f6" "29"
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   ..$ session_uuid       : chr "44e9f4bf1051c86da03485e6e23ce7f5"
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "source")=List of 5
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. ..$ host  : Named chr "285a5f234941"
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. ..$ pid   : int 68322
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:09"
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. ..$ random: int 2147483647
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   ..$ r_info             :List of 4
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. .. ..$ : int [1:3] 4 5 0
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. ..$ os           : chr "unix"
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. ..$ os_name      : chr "Linux"
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   .. ..$ captures_utf8: logi TRUE
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   ..$ version            : chr "1.8"
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr "FutureResult"
[08:08:09.604] | : . ' , ; ` | : . ' , ; `  $ success: logi TRUE
[08:08:09.604] | : . ' , ; ` | : . ' , ; `  $ time   : 'proc_time' Named num [1:5] 0.052 0.001 0.053 0 0
[08:08:09.604] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:09.604] | : . ' , ; ` | : . ' , ; `  $ tag    : NULL
[08:08:09.626] | : . ' , ; ` | : . ' , ; ` Received FutureResult
[08:08:09.626] | : . ' , ; ` | : . ' , ; ` FutureResult:
[08:08:09.626] | : . ' , ; ` | : . ' , ; ` value: ‘NULL’
[08:08:09.626] | : . ' , ; ` | : . ' , ; ` visible: TRUE
[08:08:09.626] | : . ' , ; ` | : . ' , ; ` stdout: character
[08:08:09.626] | : . ' , ; ` | : . ' , ; ` conditions: [n = 1] simpleError
[08:08:09.626] | : . ' , ; ` | : . ' , ; ` RNG used: FALSE
[08:08:09.626] | : . ' , ; ` | : . ' , ; ` duration: 0.05102801 secs (started 2025-06-17 08:08:09.490451)
[08:08:09.626] | : . ' , ; ` | : . ' , ; ` version: 1.8
[08:08:09.626] | : . ' , ; ` | : . ' , ; ` FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'remove', earlySignal = 0) ...
[08:08:09.626] | : . ' , ; ` | : . ' , ; ` | Removed future from position #1
[08:08:09.627] | : . ' , ; ` | : . ' , ; ` | Number of registered futures: 1
[08:08:09.627] | : . ' , ; ` | : . ' , ; ` FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'remove', earlySignal = 0) ... done
[08:08:09.627] | : . ' , ; ` | : . ' , ; ` Erased future from future backend
[08:08:09.627] | : . ' , ; ` | : . ' , ; ` result() for ClusterFuture ...
[08:08:09.627] | : . ' , ; ` | : . ' , ; ` | result already collected: FutureResult
[08:08:09.627] | : . ' , ; ` | : . ' , ; ` result() for ClusterFuture ... done
[08:08:09.627] | : . ' , ; ` | : . ' , ; ` signalConditions() ...
[08:08:09.627] | : . ' , ; ` | : . ' , ; ` | include = ‘immediateCondition’
[08:08:09.627] | : . ' , ; ` | : . ' , ; ` | exclude = 
[08:08:09.628] | : . ' , ; ` | : . ' , ; ` | resignal = FALSE
[08:08:09.628] | : . ' , ; ` | : . ' , ; ` | Number of conditions: 1
[08:08:09.628] | : . ' , ; ` | : . ' , ; ` |  int 1
[08:08:09.628] | : . ' , ; ` | : . ' , ; ` | Condition #1 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:09.628] | : . ' , ; ` | : . ' , ; ` signalConditions() ... done
[08:08:09.628] | : . ' , ; ` | : . ' , ; receiveMessageFromWorker() for ClusterFuture ... done
[08:08:09.629] | : . ' , ; ` | : . ' , result() for ClusterFuture ... done
[08:08:09.629] | : . ' , ; ` | : . ' , result() for ClusterFuture ...
[08:08:09.629] | : . ' , ; ` | : . ' , ; result already collected: FutureResult
[08:08:09.629] | : . ' , ; ` | : . ' , result() for ClusterFuture ... done
[08:08:09.629] | : . ' , ; ` | : . ' , signalConditions() ...
[08:08:09.629] | : . ' , ; ` | : . ' , ; include = ‘immediateCondition’
[08:08:09.629] | : . ' , ; ` | : . ' , ; exclude = 
[08:08:09.629] | : . ' , ; ` | : . ' , ; resignal = FALSE
[08:08:09.629] | : . ' , ; ` | : . ' , ; Number of conditions: 1
[08:08:09.629] | : . ' , ; ` | : . ' , ;  int 1
[08:08:09.630] | : . ' , ; ` | : . ' , ; Condition #1 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:09.630] | : . ' , ; ` | : . ' , signalConditions() ... done
[08:08:09.630] | : . ' , ; ` | : . ' , relay stdout ...
[08:08:09.630] | : . ' , ; ` | : . ' , relay stdout ... done
[08:08:09.630] | : . ' , ; ` | : . ' , check for misuse ...
[08:08:09.630] | : . ' , ; ` | : . ' , check for misuse ... done
[08:08:09.631] | : . ' , ; ` | : . ' , relay conditions ...
[08:08:09.631] | : . ' , ; ` | : . ' , ; Future state: ‘finished’
[08:08:09.631] | : . ' , ; ` | : . ' , ; result() for ClusterFuture ...
[08:08:09.631] | : . ' , ; ` | : . ' , ; ` result already collected: FutureResult
[08:08:09.631] | : . ' , ; ` | : . ' , ; result() for ClusterFuture ... done
[08:08:09.631] | : . ' , ; ` | : . ' , ; signalConditions() ...
[08:08:09.631] | : . ' , ; ` | : . ' , ; ` include = ‘condition’
[08:08:09.631] | : . ' , ; ` | : . ' , ; ` exclude = ‘immediateCondition’
[08:08:09.631] | : . ' , ; ` | : . ' , ; ` resignal = TRUE
[08:08:09.631] | : . ' , ; ` | : . ' , ; ` Number of conditions: 1
[08:08:09.632] | : . ' , ; ` | : . ' , ; `  int 1
[08:08:09.632] | : . ' , ; ` | : . ' , ; ` Condition #1 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:09.632] | : . ' , ; ` | : . ' , ; ` Condition #1: ‘simpleError’, ‘error’, ‘condition’
[08:08:09.632] | : . ' , ; ` | : . ' , ; signalConditions() ... done
[08:08:09.632] | : . ' , ; ` | : . ' , relay conditions ... done
[08:08:09.633] | : . ' , ; ` | : . ' , value() for MultisessionFuture (<unnamed-30>) ...
[08:08:09.633] | : . ' , ; ` | : . ' , ; result() for ClusterFuture ...
[08:08:09.633] | : . ' , ; ` | : . ' , ; ` assertValidConnection() ...
[08:08:09.633] | : . ' , ; ` | : . ' , ; ` | cluster node index: 1
[08:08:09.633] | : . ' , ; ` | : . ' , ; ` assertValidConnection() ... done
[08:08:09.633] | : . ' , ; ` | : . ' , ; ` receiveMessageFromWorker() for ClusterFuture ...
[08:08:09.634] | : . ' , ; ` | : . ' , ; ` | cluster node index: 1
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` | [1] TRUE
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` | received data:
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` | List of 5
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |  $ type   : chr "VALUE"
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |  $ value  :List of 16
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   ..$ value              : int 3
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   ..$ visible            : logi TRUE
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   ..$ stdout             : chr ""
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   ..$ conditions         : list()
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   ..$ rng                : logi FALSE
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   ..$ seed               : NULL
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   ..$ misuseGlobalEnv    : NULL
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   ..$ misuseConnections  :List of 3
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   .. ..$ added   : NULL
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   .. ..$ removed : NULL
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   .. ..$ replaced: NULL
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   ..$ misuseDevices      : NULL
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   ..$ misuseDefaultDevice: list()
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:09"
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:09"
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   ..$ uuid               : chr [1:2] "67af0fd89af88a05d7f19a04932924f6" "30"
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   ..$ session_uuid       : chr "64d1c0ec81c7b9e640126f07ad396546"
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "source")=List of 5
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   .. .. ..$ host  : Named chr "285a5f234941"
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   .. .. ..$ pid   : int 68323
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:08"
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   .. .. ..$ random: int 2147483647
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   ..$ r_info             :List of 4
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   .. .. ..$ : int [1:3] 4 5 0
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   .. ..$ os           : chr "unix"
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   .. ..$ os_name      : chr "Linux"
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   .. ..$ captures_utf8: logi TRUE
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   ..$ version            : chr "1.8"
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "class")= chr "FutureResult"
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |  $ success: logi TRUE
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |  $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:09.643] | : . ' , ; ` | : . ' , ; ` |  $ tag    : NULL
[08:08:09.656] | : . ' , ; ` | : . ' , ; ` | Received FutureResult
[08:08:09.656] | : . ' , ; ` | : . ' , ; ` | FutureResult:
[08:08:09.656] | : . ' , ; ` | : . ' , ; ` | value: ‘integer’
[08:08:09.656] | : . ' , ; ` | : . ' , ; ` | visible: TRUE
[08:08:09.656] | : . ' , ; ` | : . ' , ; ` | stdout: character
[08:08:09.656] | : . ' , ; ` | : . ' , ; ` | conditions: [n = 0] 
[08:08:09.656] | : . ' , ; ` | : . ' , ; ` | RNG used: FALSE
[08:08:09.656] | : . ' , ; ` | : . ' , ; ` | duration: 0.002652884 secs (started 2025-06-17 08:08:09.640228)
[08:08:09.656] | : . ' , ; ` | : . ' , ; ` | version: 1.8
[08:08:09.657] | : . ' , ; ` | : . ' , ; ` | FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'remove', earlySignal = 0) ...
[08:08:09.657] | : . ' , ; ` | : . ' , ; ` | : Removed future from position #1
[08:08:09.657] | : . ' , ; ` | : . ' , ; ` | : Number of registered futures: 0
[08:08:09.657] | : . ' , ; ` | : . ' , ; ` | FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'remove', earlySignal = 0) ... done
[08:08:09.657] | : . ' , ; ` | : . ' , ; ` | Erased future from future backend
[08:08:09.658] | : . ' , ; ` | : . ' , ; ` | result() for ClusterFuture ...
[08:08:09.658] | : . ' , ; ` | : . ' , ; ` | : result already collected: FutureResult
[08:08:09.658] | : . ' , ; ` | : . ' , ; ` | result() for ClusterFuture ... done
[08:08:09.658] | : . ' , ; ` | : . ' , ; ` | signalConditions() ...
[08:08:09.658] | : . ' , ; ` | : . ' , ; ` | : include = ‘immediateCondition’
[08:08:09.658] | : . ' , ; ` | : . ' , ; ` | : exclude = 
[08:08:09.658] | : . ' , ; ` | : . ' , ; ` | : resignal = FALSE
[08:08:09.658] | : . ' , ; ` | : . ' , ; ` | : Number of conditions: 0
[08:08:09.658] | : . ' , ; ` | : . ' , ; ` | :  int 0
[08:08:09.659] | : . ' , ; ` | : . ' , ; ` | signalConditions() ... done
[08:08:09.659] | : . ' , ; ` | : . ' , ; ` receiveMessageFromWorker() for ClusterFuture ... done
[08:08:09.659] | : . ' , ; ` | : . ' , ; result() for ClusterFuture ... done
[08:08:09.659] | : . ' , ; ` | : . ' , ; result() for ClusterFuture ...
[08:08:09.659] | : . ' , ; ` | : . ' , ; ` result already collected: FutureResult
[08:08:09.659] | : . ' , ; ` | : . ' , ; result() for ClusterFuture ... done
[08:08:09.659] | : . ' , ; ` | : . ' , ; signalConditions() ...
[08:08:09.659] | : . ' , ; ` | : . ' , ; ` include = ‘immediateCondition’
[08:08:09.660] | : . ' , ; ` | : . ' , ; ` exclude = 
[08:08:09.660] | : . ' , ; ` | : . ' , ; ` resignal = FALSE
[08:08:09.660] | : . ' , ; ` | : . ' , ; ` Number of conditions: 0
[08:08:09.660] | : . ' , ; ` | : . ' , ; `  int 0
[08:08:09.660] | : . ' , ; ` | : . ' , ; signalConditions() ... done
[08:08:09.660] | : . ' , ; ` | : . ' , ; relay stdout ...
[08:08:09.660] | : . ' , ; ` | : . ' , ; relay stdout ... done
[08:08:09.661] | : . ' , ; ` | : . ' , ; check for misuse ...
[08:08:09.661] | : . ' , ; ` | : . ' , ; check for misuse ... done
[08:08:09.661] | : . ' , ; ` | : . ' , value() for MultisessionFuture (<unnamed-30>) ... done
Warning in get(var, envir = x, inherits = FALSE) :
  restarting interrupted promise evaluation
[08:08:09.661] | : . ' , ; ` | : . ' , value() for MultisessionFuture (<unnamed-29>) ...
[08:08:09.661] | : . ' , ; ` | : . ' , ; result() for ClusterFuture ...
[08:08:09.661] | : . ' , ; ` | : . ' , ; ` result already collected: FutureResult
[08:08:09.661] | : . ' , ; ` | : . ' , ; result() for ClusterFuture ... done
[08:08:09.662] | : . ' , ; ` | : . ' , ; result() for ClusterFuture ...
[08:08:09.662] | : . ' , ; ` | : . ' , ; ` result already collected: FutureResult
[08:08:09.662] | : . ' , ; ` | : . ' , ; result() for ClusterFuture ... done
[08:08:09.662] | : . ' , ; ` | : . ' , ; signalConditions() ...
[08:08:09.662] | : . ' , ; ` | : . ' , ; ` include = ‘immediateCondition’
[08:08:09.662] | : . ' , ; ` | : . ' , ; ` exclude = 
[08:08:09.662] | : . ' , ; ` | : . ' , ; ` resignal = FALSE
[08:08:09.662] | : . ' , ; ` | : . ' , ; ` Number of conditions: 1
[08:08:09.662] | : . ' , ; ` | : . ' , ; `  int 1
[08:08:09.663] | : . ' , ; ` | : . ' , ; ` Condition #1 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:09.663] | : . ' , ; ` | : . ' , ; ` already signaled, skipping
[08:08:09.663] | : . ' , ; ` | : . ' , ; signalConditions() ... done
[08:08:09.663] | : . ' , ; ` | : . ' , ; relay stdout ...
[08:08:09.663] | : . ' , ; ` | : . ' , ; relay stdout ... done
[08:08:09.663] | : . ' , ; ` | : . ' , ; check for misuse ...
[08:08:09.663] | : . ' , ; ` | : . ' , ; check for misuse ... done
[08:08:09.663] | : . ' , ; ` | : . ' , ; relay conditions ...
[08:08:09.664] | : . ' , ; ` | : . ' , ; ` Future state: ‘finished’
[08:08:09.664] | : . ' , ; ` | : . ' , ; ` result() for ClusterFuture ...
[08:08:09.664] | : . ' , ; ` | : . ' , ; ` | result already collected: FutureResult
[08:08:09.664] | : . ' , ; ` | : . ' , ; ` result() for ClusterFuture ... done
[08:08:09.664] | : . ' , ; ` | : . ' , ; ` signalConditions() ...
[08:08:09.664] | : . ' , ; ` | : . ' , ; ` | include = ‘condition’
[08:08:09.664] | : . ' , ; ` | : . ' , ; ` | exclude = ‘immediateCondition’
[08:08:09.664] | : . ' , ; ` | : . ' , ; ` | resignal = TRUE
[08:08:09.664] | : . ' , ; ` | : . ' , ; ` | Number of conditions: 1
[08:08:09.664] | : . ' , ; ` | : . ' , ; ` |  int 1
[08:08:09.665] | : . ' , ; ` | : . ' , ; ` | Condition #1 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:09.665] | : . ' , ; ` | : . ' , ; ` | Condition #1: ‘simpleError’, ‘error’, ‘condition’
[08:08:09.665] | : . ' , ; ` | : . ' , ; ` signalConditions() ... done
[08:08:09.665] | : . ' , ; ` | : . ' , ; relay conditions ... done
Warning in get(var, envir = x, inherits = FALSE) :
  restarting interrupted promise evaluation
[08:08:09.666] | : . ' , ; ` | : . ' , ; value() for MultisessionFuture (<unnamed-29>) ...
[08:08:09.666] | : . ' , ; ` | : . ' , ; ` result() for ClusterFuture ...
[08:08:09.666] | : . ' , ; ` | : . ' , ; ` | result already collected: FutureResult
[08:08:09.666] | : . ' , ; ` | : . ' , ; ` result() for ClusterFuture ... done
[08:08:09.666] | : . ' , ; ` | : . ' , ; ` result() for ClusterFuture ...
[08:08:09.666] | : . ' , ; ` | : . ' , ; ` | result already collected: FutureResult
[08:08:09.666] | : . ' , ; ` | : . ' , ; ` result() for ClusterFuture ... done
[08:08:09.666] | : . ' , ; ` | : . ' , ; ` signalConditions() ...
[08:08:09.666] | : . ' , ; ` | : . ' , ; ` | include = ‘immediateCondition’
[08:08:09.666] | : . ' , ; ` | : . ' , ; ` | exclude = 
[08:08:09.667] | : . ' , ; ` | : . ' , ; ` | resignal = FALSE
[08:08:09.667] | : . ' , ; ` | : . ' , ; ` | Number of conditions: 1
[08:08:09.667] | : . ' , ; ` | : . ' , ; ` |  int 1
[08:08:09.667] | : . ' , ; ` | : . ' , ; ` | Condition #1 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:09.667] | : . ' , ; ` | : . ' , ; ` | already signaled, skipping
[08:08:09.667] | : . ' , ; ` | : . ' , ; ` signalConditions() ... done
[08:08:09.667] | : . ' , ; ` | : . ' , ; ` relay stdout ...
[08:08:09.668] | : . ' , ; ` | : . ' , ; ` relay stdout ... done
[08:08:09.668] | : . ' , ; ` | : . ' , ; ` check for misuse ...
[08:08:09.668] | : . ' , ; ` | : . ' , ; ` check for misuse ... done
[08:08:09.668] | : . ' , ; ` | : . ' , ; ` relay conditions ...
[08:08:09.668] | : . ' , ; ` | : . ' , ; ` | Future state: ‘finished’
[08:08:09.668] | : . ' , ; ` | : . ' , ; ` | result() for ClusterFuture ...
[08:08:09.668] | : . ' , ; ` | : . ' , ; ` | : result already collected: FutureResult
[08:08:09.668] | : . ' , ; ` | : . ' , ; ` | result() for ClusterFuture ... done
[08:08:09.668] | : . ' , ; ` | : . ' , ; ` | signalConditions() ...
[08:08:09.669] | : . ' , ; ` | : . ' , ; ` | : include = ‘condition’
[08:08:09.669] | : . ' , ; ` | : . ' , ; ` | : exclude = ‘immediateCondition’
[08:08:09.669] | : . ' , ; ` | : . ' , ; ` | : resignal = TRUE
[08:08:09.669] | : . ' , ; ` | : . ' , ; ` | : Number of conditions: 1
[08:08:09.669] | : . ' , ; ` | : . ' , ; ` | :  int 1
[08:08:09.669] | : . ' , ; ` | : . ' , ; ` | : Condition #1 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:09.669] | : . ' , ; ` | : . ' , ; ` | : Condition #1: ‘simpleError’, ‘error’, ‘condition’
[08:08:09.670] | : . ' , ; ` | : . ' , ; ` | signalConditions() ... done
[08:08:09.670] | : . ' , ; ` | : . ' , ; ` relay conditions ... done
** Future evaluation with a poor-man's "progress bar"
[08:08:09.670] | : . ' , ; ` | : . ' , ; ` future(..., label = NULL) ...
[08:08:09.670] | : . ' , ; ` | : . ' , ; ` | lazy: FALSE
[08:08:09.670] | : . ' , ; ` | : . ' , ; ` | stdout: TRUE
[08:08:09.670] | : . ' , ; ` | : . ' , ; ` | conditions: [n=1] ‘condition’
[08:08:09.670] | : . ' , ; ` | : . ' , ; ` | gc: FALSE
[08:08:09.670] | : . ' , ; ` | : . ' , ; ` | earlySignal: FALSE
[08:08:09.671] | : . ' , ; ` | : . ' , ; ` | getGlobalsAndPackages() ...
[08:08:09.671] | : . ' , ; ` | : . ' , ; ` | : Searching for globals ...
[08:08:09.688] | : . ' , ; ` | : . ' , ; ` | : . globals found: [4] ‘{’, ‘cat’, ‘for’, ‘:’
[08:08:09.688] | : . ' , ; ` | : . ' , ; ` | : Searching for globals ... done
[08:08:09.688] | : . ' , ; ` | : . ' , ; ` | : Resolving globals: FALSE
[08:08:09.688] | : . ' , ; ` | : . ' , ; ` | : Search for packages associated with the globals ...
[08:08:09.688] | : . ' , ; ` | : . ' , ; ` | : . Packages associated with globals: [1] ‘base’
[08:08:09.688] | : . ' , ; ` | : . ' , ; ` | : . Packages: [1] ‘base’
[08:08:09.689] | : . ' , ; ` | : . ' , ; ` | : Search for packages associated with the globals ... done
[08:08:09.689] | : . ' , ; ` | : . ' , ; ` | : Packages after dropping 'base': [0] 
[08:08:09.689] | : . ' , ; ` | : . ' , ; ` | : globals: [0] 
[08:08:09.689] | : . ' , ; ` | : . ' , ; ` | : packages: [0] 
[08:08:09.689] | : . ' , ; ` | : . ' , ; ` | getGlobalsAndPackages() ... done
[08:08:09.689] | : . ' , ; ` | : . ' , ; ` | run() for ‘Future’ (<unnamed-31>) ...
[08:08:09.689] | : . ' , ; ` | : . ' , ; ` | : state: ‘created’
[08:08:09.690] | : . ' , ; ` | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:09.690] | : . ' , ; ` | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:09.690] | : . ' , ; ` | : . ' , ; ` | : Using MultisessionFutureBackend ...
[08:08:09.690] | : . ' , ; ` | : . ' , ; ` | : . Number of futures since start: 6 (6 created, 6 launched, 7 finished)
[08:08:09.690] | : . ' , ; ` | : . ' , ; ` | : . Launching futures ...
[08:08:09.690] | : . ' , ; ` | : . ' , ; ` | : . ' launchFuture() for ClusterFutureBackend ...
[08:08:09.690] | : . ' , ; ` | : . ' , ; ` | : . ' , Workers: [n=2]
[08:08:09.690] | : . ' , ; ` | : . ' , ; ` | : . ' , Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:08:09.692] | : . ' , ; ` | : . ' , ; ` | : . ' , FutureRegistry: ‘workers-a24376b6c5156fe46f79f17f54ce8a4c’
[08:08:09.692] | : . ' , ; ` | : . ' , ; ` | : . ' , requestWorker() ...
[08:08:09.692] | : . ' , ; ` | : . ' , ; ` | : . ' , ; requestNode() ...
[08:08:09.692] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Number of workers: 2
[08:08:09.692] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Polling for a free worker ...
[08:08:09.692] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:09.693] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Listing all futures
[08:08:09.693] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Number of registered futures: 0
[08:08:09.693] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:09.693] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Total time: 0
[08:08:09.693] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Polling for a free worker ... done
[08:08:09.693] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:09.693] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Listing all futures
[08:08:09.693] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Number of registered futures: 0
[08:08:09.693] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:09.693] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` avail: [n=2] ‘1’, ‘2’
[08:08:09.694] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Index of first available worker: 1
[08:08:09.694] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Validate that the worker is functional ...
[08:08:09.786] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Worker is functional
[08:08:09.786] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:09.786] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Listing all futures
[08:08:09.786] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Number of registered futures: 0
[08:08:09.786] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:09.786] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Validate that the worker is functional ... done
[08:08:09.787] | : . ' , ; ` | : . ' , ; ` | : . ' , ; requestNode() ... done
[08:08:09.787] | : . ' , ; ` | : . ' , ; ` | : . ' , ; cluster node index: 1
[08:08:09.787] | : . ' , ; ` | : . ' , ; ` | : . ' , requestWorker() ... done
[08:08:09.787] | : . ' , ; ` | : . ' , ; ` | : . ' , eraseGlobalEnvironment() ...
[08:08:09.787] | : . ' , ; ` | : . ' , ; ` | : . ' , eraseGlobalEnvironment() ... done
[08:08:09.787] | : . ' , ; ` | : . ' , ; ` | : . ' , launchFuture() ...
[08:08:09.788] | : . ' , ; ` | : . ' , ; ` | : . ' , ; cluster node index: 1
[08:08:09.788] | : . ' , ; ` | : . ' , ; ` | : . ' , ; getFutureData() ...
[08:08:09.788] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` getFutureCore() ...
[08:08:09.788] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Packages needed by the future expression (n = 0): <none>
[08:08:09.788] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` getFutureCore() ... done
[08:08:09.788] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` getFutureCapture() ...
[08:08:09.788] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` getFutureCapture() ... done
[08:08:09.788] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` getFutureContext() ...
[08:08:09.788] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:09.789] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Getting stack without first backend: [n=0] 
[08:08:09.789] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:09.789] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Packages needed by future backend (n = 0): <none>
[08:08:09.789] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` getFutureContext() ... done
[08:08:09.789] | : . ' , ; ` | : . ' , ; ` | : . ' , ; getFutureData() ... done
[08:08:09.789] | : . ' , ; ` | : . ' , ; ` | : . ' , ; FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'add', earlySignal = 0) ...
[08:08:09.789] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Appended future to position #1
[08:08:09.790] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` Number of registered futures: 1
[08:08:09.790] | : . ' , ; ` | : . ' , ; ` | : . ' , ; FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'add', earlySignal = 0) ... done
[08:08:09.790] | : . ' , ; ` | : . ' , ; ` | : . ' , launchFuture() ... done
[08:08:09.790] | : . ' , ; ` | : . ' , ; ` | : . ' , MultisessionFuture started
[08:08:09.790] | : . ' , ; ` | : . ' , ; ` | : . ' launchFuture() for ClusterFutureBackend ... done
[08:08:09.790] | : . ' , ; ` | : . ' , ; ` | : . Launching futures ... done
[08:08:09.790] | : . ' , ; ` | : . ' , ; ` | : . Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:09.790] | : . ' , ; ` | : . ' , ; ` | : Using MultisessionFutureBackend ... done
[08:08:09.790] | : . ' , ; ` | : . ' , ; ` | run() for ‘Future’ (<unnamed-31>) ... done
[08:08:09.791] | : . ' , ; ` | : . ' , ; ` future(..., label = NULL) ... done
** Collecting results
v1 = 1
v2 = 2
Warning in sprintf(...) : restarting interrupted promise evaluation
[08:08:09.791] | : . ' , ; ` | : . ' , ; ` value() for MultisessionFuture (<unnamed-27>) ...
[08:08:09.791] | : . ' , ; ` | : . ' , ; ` | result() for ClusterFuture ...
[08:08:09.791] | : . ' , ; ` | : . ' , ; ` | : result already collected: FutureResult
[08:08:09.791] | : . ' , ; ` | : . ' , ; ` | result() for ClusterFuture ... done
[08:08:09.791] | : . ' , ; ` | : . ' , ; ` | result() for ClusterFuture ...
[08:08:09.791] | : . ' , ; ` | : . ' , ; ` | : result already collected: FutureResult
[08:08:09.792] | : . ' , ; ` | : . ' , ; ` | result() for ClusterFuture ... done
[08:08:09.792] | : . ' , ; ` | : . ' , ; ` | signalConditions() ...
[08:08:09.792] | : . ' , ; ` | : . ' , ; ` | : include = ‘immediateCondition’
[08:08:09.792] | : . ' , ; ` | : . ' , ; ` | : exclude = 
[08:08:09.792] | : . ' , ; ` | : . ' , ; ` | : resignal = FALSE
[08:08:09.792] | : . ' , ; ` | : . ' , ; ` | : Number of conditions: 1
[08:08:09.792] | : . ' , ; ` | : . ' , ; ` | :  int 1
[08:08:09.793] | : . ' , ; ` | : . ' , ; ` | : Condition #1 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:09.793] | : . ' , ; ` | : . ' , ; ` | : already signaled, skipping
[08:08:09.793] | : . ' , ; ` | : . ' , ; ` | signalConditions() ... done
[08:08:09.793] | : . ' , ; ` | : . ' , ; ` | relay stdout ...
[08:08:09.793] | : . ' , ; ` | : . ' , ; ` | relay stdout ... done
[08:08:09.793] | : . ' , ; ` | : . ' , ; ` | check for misuse ...
[08:08:09.793] | : . ' , ; ` | : . ' , ; ` | check for misuse ... done
[08:08:09.793] | : . ' , ; ` | : . ' , ; ` | relay conditions ...
[08:08:09.793] | : . ' , ; ` | : . ' , ; ` | : Future state: ‘finished’
[08:08:09.794] | : . ' , ; ` | : . ' , ; ` | : result() for ClusterFuture ...
[08:08:09.794] | : . ' , ; ` | : . ' , ; ` | : . result already collected: FutureResult
[08:08:09.794] | : . ' , ; ` | : . ' , ; ` | : result() for ClusterFuture ... done
[08:08:09.794] | : . ' , ; ` | : . ' , ; ` | : signalConditions() ...
[08:08:09.794] | : . ' , ; ` | : . ' , ; ` | : . include = ‘condition’
[08:08:09.794] | : . ' , ; ` | : . ' , ; ` | : . exclude = ‘immediateCondition’
[08:08:09.794] | : . ' , ; ` | : . ' , ; ` | : . resignal = TRUE
[08:08:09.794] | : . ' , ; ` | : . ' , ; ` | : . Number of conditions: 1
[08:08:09.794] | : . ' , ; ` | : . ' , ; ` | : .  int 1
[08:08:09.795] | : . ' , ; ` | : . ' , ; ` | : . Condition #1 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:08:09.795] | : . ' , ; ` | : . ' , ; ` | : . Condition #1: ‘simpleError’, ‘error’, ‘condition’
[08:08:09.795] | : . ' , ; ` | : . ' , ; ` | : signalConditions() ... done
[08:08:09.795] | : . ' , ; ` | : . ' , ; ` | relay conditions ... done
v3: <simpleError> (as expect)
[08:08:09.795] | : . ' , ; ` | : . ' , ; ` | value() for MultisessionFuture (<unnamed-31>) ...
[08:08:09.795] | : . ' , ; ` | : . ' , ; ` | : result() for ClusterFuture ...
[08:08:09.796] | : . ' , ; ` | : . ' , ; ` | : . assertValidConnection() ...
[08:08:09.796] | : . ' , ; ` | : . ' , ; ` | : . ' cluster node index: 1
[08:08:09.796] | : . ' , ; ` | : . ' , ; ` | : . assertValidConnection() ... done
[08:08:09.796] | : . ' , ; ` | : . ' , ; ` | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:09.796] | : . ' , ; ` | : . ' , ; ` | : . ' cluster node index: 1
[08:08:09.833] | : . ' , ; ` | : . ' , ; ` | : . ' [1] TRUE
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . ' received data:
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . ' List of 5
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '  $ type   : chr "VALUE"
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '  $ value  :List of 16
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ value              : num 4
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ visible            : logi TRUE
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ stdout             : chr "Processing: .......... [100%]\n"
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ conditions         : list()
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ rng                : logi FALSE
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ seed               : NULL
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ misuseConnections  :List of 3
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ added   : NULL
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ removed : NULL
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ replaced: NULL
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ misuseDevices      : NULL
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ misuseDefaultDevice: list()
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:09"
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:09"
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ uuid               : chr [1:2] "67af0fd89af88a05d7f19a04932924f6" "31"
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ session_uuid       : chr "64d1c0ec81c7b9e640126f07ad396546"
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "source")=List of 5
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..$ host  : Named chr "285a5f234941"
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..$ pid   : int 68323
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:08"
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..$ random: int 2147483647
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ r_info             :List of 4
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..$ : int [1:3] 4 5 0
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ os           : chr "unix"
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ os_name      : chr "Linux"
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ version            : chr "1.8"
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '  $ success: logi TRUE
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '  $ time   : 'proc_time' Named num [1:5] 0.004 0 0.003 0 0
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:09.834] | : . ' , ; ` | : . ' , ; ` | : . '  $ tag    : NULL
[08:08:09.847] | : . ' , ; ` | : . ' , ; ` | : . ' Received FutureResult
[08:08:09.847] | : . ' , ; ` | : . ' , ; ` | : . ' FutureResult:
[08:08:09.847] | : . ' , ; ` | : . ' , ; ` | : . ' value: ‘numeric’
[08:08:09.847] | : . ' , ; ` | : . ' , ; ` | : . ' visible: TRUE
[08:08:09.847] | : . ' , ; ` | : . ' , ; ` | : . ' stdout: character
[08:08:09.847] | : . ' , ; ` | : . ' , ; ` | : . ' conditions: [n = 0] 
[08:08:09.847] | : . ' , ; ` | : . ' , ; ` | : . ' RNG used: FALSE
[08:08:09.847] | : . ' , ; ` | : . ' , ; ` | : . ' duration: 0.002912521 secs (started 2025-06-17 08:08:09.830217)
[08:08:09.847] | : . ' , ; ` | : . ' , ; ` | : . ' version: 1.8
[08:08:09.847] | : . ' , ; ` | : . ' , ; ` | : . ' FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'remove', earlySignal = 0) ...
[08:08:09.847] | : . ' , ; ` | : . ' , ; ` | : . ' , Removed future from position #1
[08:08:09.848] | : . ' , ; ` | : . ' , ; ` | : . ' , Number of registered futures: 0
[08:08:09.848] | : . ' , ; ` | : . ' , ; ` | : . ' FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'remove', earlySignal = 0) ... done
[08:08:09.848] | : . ' , ; ` | : . ' , ; ` | : . ' Erased future from future backend
[08:08:09.848] | : . ' , ; ` | : . ' , ; ` | : . ' result() for ClusterFuture ...
[08:08:09.848] | : . ' , ; ` | : . ' , ; ` | : . ' , result already collected: FutureResult
[08:08:09.848] | : . ' , ; ` | : . ' , ; ` | : . ' result() for ClusterFuture ... done
[08:08:09.848] | : . ' , ; ` | : . ' , ; ` | : . ' signalConditions() ...
[08:08:09.848] | : . ' , ; ` | : . ' , ; ` | : . ' , include = ‘immediateCondition’
[08:08:09.848] | : . ' , ; ` | : . ' , ; ` | : . ' , exclude = 
[08:08:09.848] | : . ' , ; ` | : . ' , ; ` | : . ' , resignal = FALSE
[08:08:09.849] | : . ' , ; ` | : . ' , ; ` | : . ' , Number of conditions: 0
[08:08:09.849] | : . ' , ; ` | : . ' , ; ` | : . ' ,  int 0
[08:08:09.849] | : . ' , ; ` | : . ' , ; ` | : . ' signalConditions() ... done
[08:08:09.849] | : . ' , ; ` | : . ' , ; ` | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:09.849] | : . ' , ; ` | : . ' , ; ` | : result() for ClusterFuture ... done
[08:08:09.849] | : . ' , ; ` | : . ' , ; ` | : result() for ClusterFuture ...
[08:08:09.849] | : . ' , ; ` | : . ' , ; ` | : . result already collected: FutureResult
[08:08:09.850] | : . ' , ; ` | : . ' , ; ` | : result() for ClusterFuture ... done
[08:08:09.850] | : . ' , ; ` | : . ' , ; ` | : signalConditions() ...
[08:08:09.850] | : . ' , ; ` | : . ' , ; ` | : . include = ‘immediateCondition’
[08:08:09.850] | : . ' , ; ` | : . ' , ; ` | : . exclude = 
[08:08:09.850] | : . ' , ; ` | : . ' , ; ` | : . resignal = FALSE
[08:08:09.850] | : . ' , ; ` | : . ' , ; ` | : . Number of conditions: 0
[08:08:09.850] | : . ' , ; ` | : . ' , ; ` | : .  int 0
[08:08:09.851] | : . ' , ; ` | : . ' , ; ` | : signalConditions() ... done
[08:08:09.851] | : . ' , ; ` | : . ' , ; ` | : relay stdout ...
Processing: .......... [100%]
[08:08:09.851] | : . ' , ; ` | : . ' , ; ` | : relay stdout ... done
[08:08:09.851] | : . ' , ; ` | : . ' , ; ` | : check for misuse ...
[08:08:09.851] | : . ' , ; ` | : . ' , ; ` | : check for misuse ... done
[08:08:09.851] | : . ' , ; ` | : . ' , ; ` | value() for MultisessionFuture (<unnamed-31>) ... done
v4 = 4
** Left-to-right and right-to-left future assignments
[08:08:09.851] | : . ' , ; ` | : . ' , ; ` | future(..., label = NULL) ...
[08:08:09.852] | : . ' , ; ` | : . ' , ; ` | : lazy: FALSE
[08:08:09.852] | : . ' , ; ` | : . ' , ; ` | : stdout: TRUE
[08:08:09.852] | : . ' , ; ` | : . ' , ; ` | : conditions: [n=1] ‘condition’
[08:08:09.852] | : . ' , ; ` | : . ' , ; ` | : gc: FALSE
[08:08:09.852] | : . ' , ; ` | : . ' , ; ` | : earlySignal: FALSE
[08:08:09.852] | : . ' , ; ` | : . ' , ; ` | : getGlobalsAndPackages() ...
[08:08:09.852] | : . ' , ; ` | : . ' , ; ` | : . Searching for globals ...
[08:08:09.853] | : . ' , ; ` | : . ' , ; ` | : . ' globals found: [0] 
[08:08:09.853] | : . ' , ; ` | : . ' , ; ` | : . Searching for globals ... done
[08:08:09.854] | : . ' , ; ` | : . ' , ; ` | : . globals: [0] <none>
[08:08:09.854] | : . ' , ; ` | : . ' , ; ` | : . packages: [0] <none>
[08:08:09.854] | : . ' , ; ` | : . ' , ; ` | : getGlobalsAndPackages() ... done
[08:08:09.854] | : . ' , ; ` | : . ' , ; ` | : run() for ‘Future’ (<unnamed-32>) ...
[08:08:09.854] | : . ' , ; ` | : . ' , ; ` | : . state: ‘created’
[08:08:09.854] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:09.854] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:09.855] | : . ' , ; ` | : . ' , ; ` | : . Using MultisessionFutureBackend ...
[08:08:09.855] | : . ' , ; ` | : . ' , ; ` | : . ' Number of futures since start: 7 (7 created, 7 launched, 8 finished)
[08:08:09.855] | : . ' , ; ` | : . ' , ; ` | : . ' Launching futures ...
[08:08:09.855] | : . ' , ; ` | : . ' , ; ` | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:09.855] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Workers: [n=2]
[08:08:09.855] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:08:09.857] | : . ' , ; ` | : . ' , ; ` | : . ' , ; FutureRegistry: ‘workers-a24376b6c5156fe46f79f17f54ce8a4c’
[08:08:09.857] | : . ' , ; ` | : . ' , ; ` | : . ' , ; requestWorker() ...
[08:08:09.857] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` requestNode() ...
[08:08:09.857] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Number of workers: 2
[08:08:09.857] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Polling for a free worker ...
[08:08:09.857] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:09.857] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . Listing all futures
[08:08:09.858] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . Number of registered futures: 0
[08:08:09.858] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:09.858] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Total time: 0
[08:08:09.858] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Polling for a free worker ... done
[08:08:09.858] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:09.858] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Listing all futures
[08:08:09.858] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Number of registered futures: 0
[08:08:09.858] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:09.858] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:09.858] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Index of first available worker: 1
[08:08:09.859] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Validate that the worker is functional ...
[08:08:09.957] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Worker is functional
[08:08:09.957] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:09.957] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . Listing all futures
[08:08:09.957] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . Number of registered futures: 0
[08:08:09.957] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:09.958] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:09.958] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` requestNode() ... done
[08:08:09.958] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` cluster node index: 1
[08:08:09.958] | : . ' , ; ` | : . ' , ; ` | : . ' , ; requestWorker() ... done
[08:08:09.958] | : . ' , ; ` | : . ' , ; ` | : . ' , ; eraseGlobalEnvironment() ...
[08:08:09.958] | : . ' , ; ` | : . ' , ; ` | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:09.958] | : . ' , ; ` | : . ' , ; ` | : . ' , ; launchFuture() ...
[08:08:09.959] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` cluster node index: 1
[08:08:09.959] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` getFutureData() ...
[08:08:09.959] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | getFutureCore() ...
[08:08:09.959] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:08:09.959] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | getFutureCore() ... done
[08:08:09.959] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | getFutureCapture() ...
[08:08:09.959] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | getFutureCapture() ... done
[08:08:09.959] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | getFutureContext() ...
[08:08:09.959] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:09.960] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:09.960] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:09.960] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:09.960] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | getFutureContext() ... done
[08:08:09.960] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` getFutureData() ... done
[08:08:09.960] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'add', earlySignal = 0) ...
[08:08:09.961] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Appended future to position #1
[08:08:09.961] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Number of registered futures: 1
[08:08:09.961] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'add', earlySignal = 0) ... done
[08:08:09.961] | : . ' , ; ` | : . ' , ; ` | : . ' , ; launchFuture() ... done
[08:08:09.961] | : . ' , ; ` | : . ' , ; ` | : . ' , ; MultisessionFuture started
[08:08:09.961] | : . ' , ; ` | : . ' , ; ` | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:09.961] | : . ' , ; ` | : . ' , ; ` | : . ' Launching futures ... done
[08:08:09.961] | : . ' , ; ` | : . ' , ; ` | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:09.961] | : . ' , ; ` | : . ' , ; ` | : . Using MultisessionFutureBackend ... done
[08:08:09.961] | : . ' , ; ` | : . ' , ; ` | : run() for ‘Future’ (<unnamed-32>) ... done
[08:08:09.962] | : . ' , ; ` | : . ' , ; ` | future(..., label = NULL) ... done
[08:08:09.962] | : . ' , ; ` | : . ' , ; ` | value() for MultisessionFuture (<unnamed-32>) ...
[08:08:09.962] | : . ' , ; ` | : . ' , ; ` | : result() for ClusterFuture ...
[08:08:09.962] | : . ' , ; ` | : . ' , ; ` | : . assertValidConnection() ...
[08:08:09.962] | : . ' , ; ` | : . ' , ; ` | : . ' cluster node index: 1
[08:08:09.962] | : . ' , ; ` | : . ' , ; ` | : . assertValidConnection() ... done
[08:08:09.963] | : . ' , ; ` | : . ' , ; ` | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:09.963] | : . ' , ; ` | : . ' , ; ` | : . ' cluster node index: 1
[08:08:10.006] | : . ' , ; ` | : . ' , ; ` | : . ' [1] TRUE
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . ' received data:
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . ' List of 5
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '  $ type   : chr "VALUE"
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '  $ value  :List of 16
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ value              : num 1
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ visible            : logi TRUE
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ stdout             : chr ""
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ conditions         : list()
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ rng                : logi FALSE
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ seed               : NULL
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ misuseConnections  :List of 3
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ added   : NULL
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ removed : NULL
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ replaced: NULL
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ misuseDevices      : NULL
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ misuseDefaultDevice: list()
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:10"
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:10"
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ uuid               : chr [1:2] "67af0fd89af88a05d7f19a04932924f6" "32"
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ session_uuid       : chr "64d1c0ec81c7b9e640126f07ad396546"
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "source")=List of 5
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..$ host  : Named chr "285a5f234941"
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..$ pid   : int 68323
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:08"
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..$ random: int 2147483647
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ r_info             :List of 4
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..$ : int [1:3] 4 5 0
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ os           : chr "unix"
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ os_name      : chr "Linux"
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ version            : chr "1.8"
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '  $ success: logi TRUE
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '  $ time   : 'proc_time' Named num [1:5] 0.006 0 0.005 0 0
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:10.007] | : . ' , ; ` | : . ' , ; ` | : . '  $ tag    : NULL
[08:08:10.018] | : . ' , ; ` | : . ' , ; ` | : . ' Received FutureResult
[08:08:10.018] | : . ' , ; ` | : . ' , ; ` | : . ' FutureResult:
[08:08:10.018] | : . ' , ; ` | : . ' , ; ` | : . ' value: ‘numeric’
[08:08:10.018] | : . ' , ; ` | : . ' , ; ` | : . ' visible: TRUE
[08:08:10.018] | : . ' , ; ` | : . ' , ; ` | : . ' stdout: character
[08:08:10.018] | : . ' , ; ` | : . ' , ; ` | : . ' conditions: [n = 0] 
[08:08:10.018] | : . ' , ; ` | : . ' , ; ` | : . ' RNG used: FALSE
[08:08:10.018] | : . ' , ; ` | : . ' , ; ` | : . ' duration: 0.004998684 secs (started 2025-06-17 08:08:10.001145)
[08:08:10.018] | : . ' , ; ` | : . ' , ; ` | : . ' version: 1.8
[08:08:10.018] | : . ' , ; ` | : . ' , ; ` | : . ' FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'remove', earlySignal = 0) ...
[08:08:10.019] | : . ' , ; ` | : . ' , ; ` | : . ' , Removed future from position #1
[08:08:10.019] | : . ' , ; ` | : . ' , ; ` | : . ' , Number of registered futures: 0
[08:08:10.019] | : . ' , ; ` | : . ' , ; ` | : . ' FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'remove', earlySignal = 0) ... done
[08:08:10.019] | : . ' , ; ` | : . ' , ; ` | : . ' Erased future from future backend
[08:08:10.019] | : . ' , ; ` | : . ' , ; ` | : . ' result() for ClusterFuture ...
[08:08:10.019] | : . ' , ; ` | : . ' , ; ` | : . ' , result already collected: FutureResult
[08:08:10.019] | : . ' , ; ` | : . ' , ; ` | : . ' result() for ClusterFuture ... done
[08:08:10.019] | : . ' , ; ` | : . ' , ; ` | : . ' signalConditions() ...
[08:08:10.019] | : . ' , ; ` | : . ' , ; ` | : . ' , include = ‘immediateCondition’
[08:08:10.020] | : . ' , ; ` | : . ' , ; ` | : . ' , exclude = 
[08:08:10.020] | : . ' , ; ` | : . ' , ; ` | : . ' , resignal = FALSE
[08:08:10.020] | : . ' , ; ` | : . ' , ; ` | : . ' , Number of conditions: 0
[08:08:10.020] | : . ' , ; ` | : . ' , ; ` | : . ' ,  int 0
[08:08:10.020] | : . ' , ; ` | : . ' , ; ` | : . ' signalConditions() ... done
[08:08:10.020] | : . ' , ; ` | : . ' , ; ` | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:10.020] | : . ' , ; ` | : . ' , ; ` | : result() for ClusterFuture ... done
[08:08:10.021] | : . ' , ; ` | : . ' , ; ` | : result() for ClusterFuture ...
[08:08:10.021] | : . ' , ; ` | : . ' , ; ` | : . result already collected: FutureResult
[08:08:10.021] | : . ' , ; ` | : . ' , ; ` | : result() for ClusterFuture ... done
[08:08:10.021] | : . ' , ; ` | : . ' , ; ` | : signalConditions() ...
[08:08:10.021] | : . ' , ; ` | : . ' , ; ` | : . include = ‘immediateCondition’
[08:08:10.021] | : . ' , ; ` | : . ' , ; ` | : . exclude = 
[08:08:10.021] | : . ' , ; ` | : . ' , ; ` | : . resignal = FALSE
[08:08:10.021] | : . ' , ; ` | : . ' , ; ` | : . Number of conditions: 0
[08:08:10.021] | : . ' , ; ` | : . ' , ; ` | : .  int 0
[08:08:10.022] | : . ' , ; ` | : . ' , ; ` | : signalConditions() ... done
[08:08:10.022] | : . ' , ; ` | : . ' , ; ` | : relay stdout ...
[08:08:10.022] | : . ' , ; ` | : . ' , ; ` | : relay stdout ... done
[08:08:10.022] | : . ' , ; ` | : . ' , ; ` | : check for misuse ...
[08:08:10.022] | : . ' , ; ` | : . ' , ; ` | : check for misuse ... done
[08:08:10.022] | : . ' , ; ` | : . ' , ; ` | value() for MultisessionFuture (<unnamed-32>) ... done
c = 1
[08:08:10.023] | : . ' , ; ` | : . ' , ; ` | future(..., label = NULL) ...
[08:08:10.023] | : . ' , ; ` | : . ' , ; ` | : lazy: FALSE
[08:08:10.023] | : . ' , ; ` | : . ' , ; ` | : stdout: TRUE
[08:08:10.023] | : . ' , ; ` | : . ' , ; ` | : conditions: [n=1] ‘condition’
[08:08:10.023] | : . ' , ; ` | : . ' , ; ` | : gc: FALSE
[08:08:10.023] | : . ' , ; ` | : . ' , ; ` | : earlySignal: FALSE
[08:08:10.023] | : . ' , ; ` | : . ' , ; ` | : getGlobalsAndPackages() ...
[08:08:10.023] | : . ' , ; ` | : . ' , ; ` | : . Searching for globals ...
[08:08:10.025] | : . ' , ; ` | : . ' , ; ` | : . ' globals found: [0] 
[08:08:10.025] | : . ' , ; ` | : . ' , ; ` | : . Searching for globals ... done
[08:08:10.025] | : . ' , ; ` | : . ' , ; ` | : . globals: [0] <none>
[08:08:10.025] | : . ' , ; ` | : . ' , ; ` | : . packages: [0] <none>
[08:08:10.025] | : . ' , ; ` | : . ' , ; ` | : getGlobalsAndPackages() ... done
[08:08:10.025] | : . ' , ; ` | : . ' , ; ` | : run() for ‘Future’ (<unnamed-33>) ...
[08:08:10.026] | : . ' , ; ` | : . ' , ; ` | : . state: ‘created’
[08:08:10.026] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:10.026] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:10.026] | : . ' , ; ` | : . ' , ; ` | : . Using MultisessionFutureBackend ...
[08:08:10.026] | : . ' , ; ` | : . ' , ; ` | : . ' Number of futures since start: 8 (8 created, 8 launched, 9 finished)
[08:08:10.026] | : . ' , ; ` | : . ' , ; ` | : . ' Launching futures ...
[08:08:10.026] | : . ' , ; ` | : . ' , ; ` | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:10.026] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Workers: [n=2]
[08:08:10.027] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:08:10.028] | : . ' , ; ` | : . ' , ; ` | : . ' , ; FutureRegistry: ‘workers-a24376b6c5156fe46f79f17f54ce8a4c’
[08:08:10.028] | : . ' , ; ` | : . ' , ; ` | : . ' , ; requestWorker() ...
[08:08:10.028] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` requestNode() ...
[08:08:10.028] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Number of workers: 2
[08:08:10.029] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Polling for a free worker ...
[08:08:10.029] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:10.029] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . Listing all futures
[08:08:10.029] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . Number of registered futures: 0
[08:08:10.029] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:10.029] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Total time: 0
[08:08:10.029] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Polling for a free worker ... done
[08:08:10.029] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:10.029] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Listing all futures
[08:08:10.029] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Number of registered futures: 0
[08:08:10.030] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:10.030] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:10.030] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Index of first available worker: 1
[08:08:10.030] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Validate that the worker is functional ...
[08:08:10.126] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Worker is functional
[08:08:10.126] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:10.126] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . Listing all futures
[08:08:10.126] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . Number of registered futures: 0
[08:08:10.126] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:10.126] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:10.127] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` requestNode() ... done
[08:08:10.127] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` cluster node index: 1
[08:08:10.127] | : . ' , ; ` | : . ' , ; ` | : . ' , ; requestWorker() ... done
[08:08:10.127] | : . ' , ; ` | : . ' , ; ` | : . ' , ; eraseGlobalEnvironment() ...
[08:08:10.127] | : . ' , ; ` | : . ' , ; ` | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:10.127] | : . ' , ; ` | : . ' , ; ` | : . ' , ; launchFuture() ...
[08:08:10.128] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` cluster node index: 1
[08:08:10.128] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` getFutureData() ...
[08:08:10.128] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | getFutureCore() ...
[08:08:10.128] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:08:10.128] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | getFutureCore() ... done
[08:08:10.128] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | getFutureCapture() ...
[08:08:10.128] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | getFutureCapture() ... done
[08:08:10.128] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | getFutureContext() ...
[08:08:10.128] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:10.129] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:10.129] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:10.129] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:10.129] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | getFutureContext() ... done
[08:08:10.129] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` getFutureData() ... done
[08:08:10.129] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'add', earlySignal = 0) ...
[08:08:10.130] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Appended future to position #1
[08:08:10.130] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Number of registered futures: 1
[08:08:10.130] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'add', earlySignal = 0) ... done
[08:08:10.130] | : . ' , ; ` | : . ' , ; ` | : . ' , ; launchFuture() ... done
[08:08:10.130] | : . ' , ; ` | : . ' , ; ` | : . ' , ; MultisessionFuture started
[08:08:10.130] | : . ' , ; ` | : . ' , ; ` | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:10.130] | : . ' , ; ` | : . ' , ; ` | : . ' Launching futures ... done
[08:08:10.130] | : . ' , ; ` | : . ' , ; ` | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:10.130] | : . ' , ; ` | : . ' , ; ` | : . Using MultisessionFutureBackend ... done
[08:08:10.131] | : . ' , ; ` | : . ' , ; ` | : run() for ‘Future’ (<unnamed-33>) ... done
[08:08:10.131] | : . ' , ; ` | : . ' , ; ` | future(..., label = NULL) ... done
[08:08:10.131] | : . ' , ; ` | : . ' , ; ` | value() for MultisessionFuture (<unnamed-33>) ...
[08:08:10.131] | : . ' , ; ` | : . ' , ; ` | : result() for ClusterFuture ...
[08:08:10.131] | : . ' , ; ` | : . ' , ; ` | : . assertValidConnection() ...
[08:08:10.131] | : . ' , ; ` | : . ' , ; ` | : . ' cluster node index: 1
[08:08:10.132] | : . ' , ; ` | : . ' , ; ` | : . assertValidConnection() ... done
[08:08:10.132] | : . ' , ; ` | : . ' , ; ` | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:10.132] | : . ' , ; ` | : . ' , ; ` | : . ' cluster node index: 1
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . ' [1] TRUE
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . ' received data:
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . ' List of 5
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '  $ type   : chr "VALUE"
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '  $ value  :List of 16
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ value              : num 1
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ visible            : logi TRUE
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ stdout             : chr ""
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ conditions         : list()
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ rng                : logi FALSE
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ seed               : NULL
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ misuseConnections  :List of 3
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ added   : NULL
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ removed : NULL
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ replaced: NULL
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ misuseDevices      : NULL
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ misuseDefaultDevice: list()
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:10"
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:10"
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ uuid               : chr [1:2] "67af0fd89af88a05d7f19a04932924f6" "33"
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ session_uuid       : chr "64d1c0ec81c7b9e640126f07ad396546"
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "source")=List of 5
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..$ host  : Named chr "285a5f234941"
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..$ pid   : int 68323
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:08"
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..$ random: int 2147483647
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ r_info             :List of 4
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..$ : int [1:3] 4 5 0
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ os           : chr "unix"
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ os_name      : chr "Linux"
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ version            : chr "1.8"
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '  $ success: logi TRUE
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '  $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:10.173] | : . ' , ; ` | : . ' , ; ` | : . '  $ tag    : NULL
[08:08:10.187] | : . ' , ; ` | : . ' , ; ` | : . ' Received FutureResult
[08:08:10.187] | : . ' , ; ` | : . ' , ; ` | : . ' FutureResult:
[08:08:10.187] | : . ' , ; ` | : . ' , ; ` | : . ' value: ‘numeric’
[08:08:10.187] | : . ' , ; ` | : . ' , ; ` | : . ' visible: TRUE
[08:08:10.187] | : . ' , ; ` | : . ' , ; ` | : . ' stdout: character
[08:08:10.187] | : . ' , ; ` | : . ' , ; ` | : . ' conditions: [n = 0] 
[08:08:10.187] | : . ' , ; ` | : . ' , ; ` | : . ' RNG used: FALSE
[08:08:10.187] | : . ' , ; ` | : . ' , ; ` | : . ' duration: 0.002730608 secs (started 2025-06-17 08:08:10.170239)
[08:08:10.187] | : . ' , ; ` | : . ' , ; ` | : . ' version: 1.8
[08:08:10.187] | : . ' , ; ` | : . ' , ; ` | : . ' FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'remove', earlySignal = 0) ...
[08:08:10.187] | : . ' , ; ` | : . ' , ; ` | : . ' , Removed future from position #1
[08:08:10.188] | : . ' , ; ` | : . ' , ; ` | : . ' , Number of registered futures: 0
[08:08:10.188] | : . ' , ; ` | : . ' , ; ` | : . ' FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'remove', earlySignal = 0) ... done
[08:08:10.188] | : . ' , ; ` | : . ' , ; ` | : . ' Erased future from future backend
[08:08:10.188] | : . ' , ; ` | : . ' , ; ` | : . ' result() for ClusterFuture ...
[08:08:10.188] | : . ' , ; ` | : . ' , ; ` | : . ' , result already collected: FutureResult
[08:08:10.188] | : . ' , ; ` | : . ' , ; ` | : . ' result() for ClusterFuture ... done
[08:08:10.188] | : . ' , ; ` | : . ' , ; ` | : . ' signalConditions() ...
[08:08:10.188] | : . ' , ; ` | : . ' , ; ` | : . ' , include = ‘immediateCondition’
[08:08:10.188] | : . ' , ; ` | : . ' , ; ` | : . ' , exclude = 
[08:08:10.189] | : . ' , ; ` | : . ' , ; ` | : . ' , resignal = FALSE
[08:08:10.189] | : . ' , ; ` | : . ' , ; ` | : . ' , Number of conditions: 0
[08:08:10.189] | : . ' , ; ` | : . ' , ; ` | : . ' ,  int 0
[08:08:10.189] | : . ' , ; ` | : . ' , ; ` | : . ' signalConditions() ... done
[08:08:10.189] | : . ' , ; ` | : . ' , ; ` | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:10.189] | : . ' , ; ` | : . ' , ; ` | : result() for ClusterFuture ... done
[08:08:10.189] | : . ' , ; ` | : . ' , ; ` | : result() for ClusterFuture ...
[08:08:10.190] | : . ' , ; ` | : . ' , ; ` | : . result already collected: FutureResult
[08:08:10.190] | : . ' , ; ` | : . ' , ; ` | : result() for ClusterFuture ... done
[08:08:10.190] | : . ' , ; ` | : . ' , ; ` | : signalConditions() ...
[08:08:10.190] | : . ' , ; ` | : . ' , ; ` | : . include = ‘immediateCondition’
[08:08:10.190] | : . ' , ; ` | : . ' , ; ` | : . exclude = 
[08:08:10.190] | : . ' , ; ` | : . ' , ; ` | : . resignal = FALSE
[08:08:10.190] | : . ' , ; ` | : . ' , ; ` | : . Number of conditions: 0
[08:08:10.190] | : . ' , ; ` | : . ' , ; ` | : .  int 0
[08:08:10.191] | : . ' , ; ` | : . ' , ; ` | : signalConditions() ... done
[08:08:10.191] | : . ' , ; ` | : . ' , ; ` | : relay stdout ...
[08:08:10.191] | : . ' , ; ` | : . ' , ; ` | : relay stdout ... done
[08:08:10.191] | : . ' , ; ` | : . ' , ; ` | : check for misuse ...
[08:08:10.191] | : . ' , ; ` | : . ' , ; ` | : check for misuse ... done
[08:08:10.191] | : . ' , ; ` | : . ' , ; ` | value() for MultisessionFuture (<unnamed-33>) ... done
d = 1
** Nested future assignments
[08:08:10.192] | : . ' , ; ` | : . ' , ; ` | future(..., label = NULL) ...
[08:08:10.192] | : . ' , ; ` | : . ' , ; ` | : lazy: FALSE
[08:08:10.192] | : . ' , ; ` | : . ' , ; ` | : stdout: TRUE
[08:08:10.192] | : . ' , ; ` | : . ' , ; ` | : conditions: [n=1] ‘condition’
[08:08:10.192] | : . ' , ; ` | : . ' , ; ` | : gc: FALSE
[08:08:10.192] | : . ' , ; ` | : . ' , ; ` | : earlySignal: FALSE
[08:08:10.192] | : . ' , ; ` | : . ' , ; ` | : getGlobalsAndPackages() ...
[08:08:10.192] | : . ' , ; ` | : . ' , ; ` | : . Searching for globals ...
[08:08:10.220] | : . ' , ; ` | : . ' , ; ` | : . ' globals found: [5] ‘{’, ‘<-’, ‘%<-%’, ‘%->%’, ‘+’
[08:08:10.220] | : . ' , ; ` | : . ' , ; ` | : . Searching for globals ... done
[08:08:10.220] | : . ' , ; ` | : . ' , ; ` | : . Resolving globals: FALSE
[08:08:10.221] | : . ' , ; ` | : . ' , ; ` | : . Search for packages associated with the globals ...
[08:08:10.221] | : . ' , ; ` | : . ' , ; ` | : . ' Packages associated with globals: [2] ‘base’, ‘future’
[08:08:10.221] | : . ' , ; ` | : . ' , ; ` | : . ' Packages: [2] ‘base’, ‘future’
[08:08:10.221] | : . ' , ; ` | : . ' , ; ` | : . Search for packages associated with the globals ... done
[08:08:10.221] | : . ' , ; ` | : . ' , ; ` | : . Packages after dropping 'base': [1] ‘future’
[08:08:10.222] | : . ' , ; ` | : . ' , ; ` | : . Packages after dropping non-attached packages: [1] ‘future’
[08:08:10.222] | : . ' , ; ` | : . ' , ; ` | : . globals: [0] 
[08:08:10.222] | : . ' , ; ` | : . ' , ; ` | : . packages: [1] ‘future’
[08:08:10.222] | : . ' , ; ` | : . ' , ; ` | : getGlobalsAndPackages() ... done
[08:08:10.222] | : . ' , ; ` | : . ' , ; ` | : run() for ‘Future’ (<unnamed-34>) ...
[08:08:10.222] | : . ' , ; ` | : . ' , ; ` | : . state: ‘created’
[08:08:10.222] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:10.223] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:10.223] | : . ' , ; ` | : . ' , ; ` | : . Using MultisessionFutureBackend ...
[08:08:10.223] | : . ' , ; ` | : . ' , ; ` | : . ' Number of futures since start: 9 (9 created, 9 launched, 10 finished)
[08:08:10.223] | : . ' , ; ` | : . ' , ; ` | : . ' Launching futures ...
[08:08:10.223] | : . ' , ; ` | : . ' , ; ` | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:10.223] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Workers: [n=2]
[08:08:10.223] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:08:10.225] | : . ' , ; ` | : . ' , ; ` | : . ' , ; FutureRegistry: ‘workers-a24376b6c5156fe46f79f17f54ce8a4c’
[08:08:10.225] | : . ' , ; ` | : . ' , ; ` | : . ' , ; requestWorker() ...
[08:08:10.225] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` requestNode() ...
[08:08:10.225] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Number of workers: 2
[08:08:10.225] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Polling for a free worker ...
[08:08:10.226] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:10.226] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . Listing all futures
[08:08:10.226] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . Number of registered futures: 0
[08:08:10.226] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:10.226] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Total time: 0
[08:08:10.226] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Polling for a free worker ... done
[08:08:10.226] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:10.226] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Listing all futures
[08:08:10.226] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Number of registered futures: 0
[08:08:10.226] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:10.227] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:10.227] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Index of first available worker: 1
[08:08:10.227] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Validate that the worker is functional ...
[08:08:10.320] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Worker is functional
[08:08:10.320] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:10.320] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . Listing all futures
[08:08:10.320] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . Number of registered futures: 0
[08:08:10.320] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:10.321] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:10.321] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` requestNode() ... done
[08:08:10.321] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` cluster node index: 1
[08:08:10.321] | : . ' , ; ` | : . ' , ; ` | : . ' , ; requestWorker() ... done
[08:08:10.321] | : . ' , ; ` | : . ' , ; ` | : . ' , ; eraseGlobalEnvironment() ...
[08:08:10.321] | : . ' , ; ` | : . ' , ; ` | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:10.322] | : . ' , ; ` | : . ' , ; ` | : . ' , ; launchFuture() ...
[08:08:10.322] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` cluster node index: 1
[08:08:10.322] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` getFutureData() ...
[08:08:10.322] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | getFutureCore() ...
[08:08:10.322] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Packages needed by the future expression (n = 1): ‘future’
[08:08:10.322] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | getFutureCore() ... done
[08:08:10.322] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | getFutureCapture() ...
[08:08:10.322] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | getFutureCapture() ... done
[08:08:10.323] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | getFutureContext() ...
[08:08:10.323] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:10.323] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:10.323] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:10.323] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:10.323] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | getFutureContext() ... done
[08:08:10.323] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` getFutureData() ... done
[08:08:10.324] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'add', earlySignal = 0) ...
[08:08:10.324] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Appended future to position #1
[08:08:10.324] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Number of registered futures: 1
[08:08:10.324] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'add', earlySignal = 0) ... done
[08:08:10.324] | : . ' , ; ` | : . ' , ; ` | : . ' , ; launchFuture() ... done
[08:08:10.324] | : . ' , ; ` | : . ' , ; ` | : . ' , ; MultisessionFuture started
[08:08:10.324] | : . ' , ; ` | : . ' , ; ` | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:10.324] | : . ' , ; ` | : . ' , ; ` | : . ' Launching futures ... done
[08:08:10.325] | : . ' , ; ` | : . ' , ; ` | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:10.325] | : . ' , ; ` | : . ' , ; ` | : . Using MultisessionFutureBackend ... done
[08:08:10.325] | : . ' , ; ` | : . ' , ; ` | : run() for ‘Future’ (<unnamed-34>) ... done
[08:08:10.325] | : . ' , ; ` | : . ' , ; ` | future(..., label = NULL) ... done
[08:08:10.325] | : . ' , ; ` | : . ' , ; ` | value() for MultisessionFuture (<unnamed-34>) ...
[08:08:10.325] | : . ' , ; ` | : . ' , ; ` | : result() for ClusterFuture ...
[08:08:10.325] | : . ' , ; ` | : . ' , ; ` | : . assertValidConnection() ...
[08:08:10.325] | : . ' , ; ` | : . ' , ; ` | : . ' cluster node index: 1
[08:08:10.326] | : . ' , ; ` | : . ' , ; ` | : . assertValidConnection() ... done
[08:08:10.326] | : . ' , ; ` | : . ' , ; ` | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:10.326] | : . ' , ; ` | : . ' , ; ` | : . ' cluster node index: 1
[08:08:10.392] | : . ' , ; ` | : . ' , ; ` | : . ' [1] TRUE
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . ' received data:
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . ' List of 5
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '  $ type   : chr "VALUE"
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '  $ value  :List of 16
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ value              : num 10
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ visible            : logi TRUE
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ stdout             : chr ""
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ conditions         : list()
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ rng                : logi FALSE
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ seed               : NULL
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ misuseConnections  :List of 3
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ added   : NULL
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ removed : NULL
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ replaced: NULL
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ misuseDevices      : NULL
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ misuseDefaultDevice: list()
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:10"
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:10"
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ uuid               : chr [1:2] "67af0fd89af88a05d7f19a04932924f6" "34"
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ session_uuid       : chr "64d1c0ec81c7b9e640126f07ad396546"
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "source")=List of 5
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..$ host  : Named chr "285a5f234941"
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..$ pid   : int 68323
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:08"
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..$ random: int 2147483647
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ r_info             :List of 4
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..$ : int [1:3] 4 5 0
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ os           : chr "unix"
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ os_name      : chr "Linux"
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ version            : chr "1.8"
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '  $ success: logi TRUE
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '  $ time   : 'proc_time' Named num [1:5] 0.027 0.001 0.027 0 0
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:10.393] | : . ' , ; ` | : . ' , ; ` | : . '  $ tag    : NULL
[08:08:10.406] | : . ' , ; ` | : . ' , ; ` | : . ' Received FutureResult
[08:08:10.406] | : . ' , ; ` | : . ' , ; ` | : . ' FutureResult:
[08:08:10.406] | : . ' , ; ` | : . ' , ; ` | : . ' value: ‘numeric’
[08:08:10.406] | : . ' , ; ` | : . ' , ; ` | : . ' visible: TRUE
[08:08:10.406] | : . ' , ; ` | : . ' , ; ` | : . ' stdout: character
[08:08:10.406] | : . ' , ; ` | : . ' , ; ` | : . ' conditions: [n = 0] 
[08:08:10.406] | : . ' , ; ` | : . ' , ; ` | : . ' RNG used: FALSE
[08:08:10.406] | : . ' , ; ` | : . ' , ; ` | : . ' duration: 0.02657604 secs (started 2025-06-17 08:08:10.365253)
[08:08:10.406] | : . ' , ; ` | : . ' , ; ` | : . ' version: 1.8
[08:08:10.407] | : . ' , ; ` | : . ' , ; ` | : . ' FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'remove', earlySignal = 0) ...
[08:08:10.407] | : . ' , ; ` | : . ' , ; ` | : . ' , Removed future from position #1
[08:08:10.407] | : . ' , ; ` | : . ' , ; ` | : . ' , Number of registered futures: 0
[08:08:10.407] | : . ' , ; ` | : . ' , ; ` | : . ' FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'remove', earlySignal = 0) ... done
[08:08:10.407] | : . ' , ; ` | : . ' , ; ` | : . ' Erased future from future backend
[08:08:10.407] | : . ' , ; ` | : . ' , ; ` | : . ' result() for ClusterFuture ...
[08:08:10.408] | : . ' , ; ` | : . ' , ; ` | : . ' , result already collected: FutureResult
[08:08:10.408] | : . ' , ; ` | : . ' , ; ` | : . ' result() for ClusterFuture ... done
[08:08:10.408] | : . ' , ; ` | : . ' , ; ` | : . ' signalConditions() ...
[08:08:10.408] | : . ' , ; ` | : . ' , ; ` | : . ' , include = ‘immediateCondition’
[08:08:10.408] | : . ' , ; ` | : . ' , ; ` | : . ' , exclude = 
[08:08:10.408] | : . ' , ; ` | : . ' , ; ` | : . ' , resignal = FALSE
[08:08:10.408] | : . ' , ; ` | : . ' , ; ` | : . ' , Number of conditions: 0
[08:08:10.408] | : . ' , ; ` | : . ' , ; ` | : . ' ,  int 0
[08:08:10.409] | : . ' , ; ` | : . ' , ; ` | : . ' signalConditions() ... done
[08:08:10.409] | : . ' , ; ` | : . ' , ; ` | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:10.409] | : . ' , ; ` | : . ' , ; ` | : result() for ClusterFuture ... done
[08:08:10.409] | : . ' , ; ` | : . ' , ; ` | : result() for ClusterFuture ...
[08:08:10.409] | : . ' , ; ` | : . ' , ; ` | : . result already collected: FutureResult
[08:08:10.409] | : . ' , ; ` | : . ' , ; ` | : result() for ClusterFuture ... done
[08:08:10.409] | : . ' , ; ` | : . ' , ; ` | : signalConditions() ...
[08:08:10.409] | : . ' , ; ` | : . ' , ; ` | : . include = ‘immediateCondition’
[08:08:10.409] | : . ' , ; ` | : . ' , ; ` | : . exclude = 
[08:08:10.410] | : . ' , ; ` | : . ' , ; ` | : . resignal = FALSE
[08:08:10.410] | : . ' , ; ` | : . ' , ; ` | : . Number of conditions: 0
[08:08:10.410] | : . ' , ; ` | : . ' , ; ` | : .  int 0
[08:08:10.410] | : . ' , ; ` | : . ' , ; ` | : signalConditions() ... done
[08:08:10.410] | : . ' , ; ` | : . ' , ; ` | : relay stdout ...
[08:08:10.410] | : . ' , ; ` | : . ' , ; ` | : relay stdout ... done
[08:08:10.410] | : . ' , ; ` | : . ' , ; ` | : check for misuse ...
[08:08:10.411] | : . ' , ; ` | : . ' , ; ` | : check for misuse ... done
[08:08:10.411] | : . ' , ; ` | : . ' , ; ` | value() for MultisessionFuture (<unnamed-34>) ... done
a = 10
[08:08:10.411] | : . ' , ; ` | : . ' , ; ` | future(..., label = NULL) ...
[08:08:10.411] | : . ' , ; ` | : . ' , ; ` | : lazy: FALSE
[08:08:10.411] | : . ' , ; ` | : . ' , ; ` | : stdout: TRUE
[08:08:10.411] | : . ' , ; ` | : . ' , ; ` | : conditions: [n=1] ‘condition’
[08:08:10.411] | : . ' , ; ` | : . ' , ; ` | : gc: FALSE
[08:08:10.412] | : . ' , ; ` | : . ' , ; ` | : earlySignal: FALSE
[08:08:10.412] | : . ' , ; ` | : . ' , ; ` | : getGlobalsAndPackages() ...
[08:08:10.412] | : . ' , ; ` | : . ' , ; ` | : . Searching for globals ...
[08:08:10.417] | : . ' , ; ` | : . ' , ; ` | : . ' globals found: [3] ‘{’, ‘+’, ‘a’
[08:08:10.417] | : . ' , ; ` | : . ' , ; ` | : . Searching for globals ... done
[08:08:10.417] | : . ' , ; ` | : . ' , ; ` | : . Resolving globals: FALSE
[08:08:10.418] | : . ' , ; ` | : . ' , ; ` | : . Search for packages associated with the globals ...
[08:08:10.418] | : . ' , ; ` | : . ' , ; ` | : . ' Packages associated with globals: [1] ‘base’
[08:08:10.418] | : . ' , ; ` | : . ' , ; ` | : . ' Packages: [1] ‘base’
[08:08:10.418] | : . ' , ; ` | : . ' , ; ` | : . Search for packages associated with the globals ... done
[08:08:10.418] | : . ' , ; ` | : . ' , ; ` | : . Packages after dropping 'base': [0] 
[08:08:10.418] | : . ' , ; ` | : . ' , ; ` | : . globals: [1] ‘a’
[08:08:10.419] | : . ' , ; ` | : . ' , ; ` | : . packages: [0] 
[08:08:10.419] | : . ' , ; ` | : . ' , ; ` | : getGlobalsAndPackages() ... done
[08:08:10.419] | : . ' , ; ` | : . ' , ; ` | : run() for ‘Future’ (<unnamed-35>) ...
[08:08:10.419] | : . ' , ; ` | : . ' , ; ` | : . state: ‘created’
[08:08:10.419] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:10.419] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:10.419] | : . ' , ; ` | : . ' , ; ` | : . Using MultisessionFutureBackend ...
[08:08:10.419] | : . ' , ; ` | : . ' , ; ` | : . ' Number of futures since start: 10 (10 created, 10 launched, 11 finished)
[08:08:10.420] | : . ' , ; ` | : . ' , ; ` | : . ' Launching futures ...
[08:08:10.420] | : . ' , ; ` | : . ' , ; ` | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:10.420] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Workers: [n=2]
[08:08:10.420] | : . ' , ; ` | : . ' , ; ` | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:08:10.422] | : . ' , ; ` | : . ' , ; ` | : . ' , ; FutureRegistry: ‘workers-a24376b6c5156fe46f79f17f54ce8a4c’
[08:08:10.422] | : . ' , ; ` | : . ' , ; ` | : . ' , ; requestWorker() ...
[08:08:10.422] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` requestNode() ...
[08:08:10.422] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Number of workers: 2
[08:08:10.422] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Polling for a free worker ...
[08:08:10.422] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:10.422] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . Listing all futures
[08:08:10.422] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . Number of registered futures: 0
[08:08:10.422] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:10.423] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Total time: 0
[08:08:10.423] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Polling for a free worker ... done
[08:08:10.423] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:10.423] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Listing all futures
[08:08:10.423] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Number of registered futures: 0
[08:08:10.423] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:10.423] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:10.423] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Index of first available worker: 1
[08:08:10.423] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Validate that the worker is functional ...
[08:08:10.516] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Worker is functional
[08:08:10.516] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ...
[08:08:10.516] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . Listing all futures
[08:08:10.516] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . Number of registered futures: 0
[08:08:10.517] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'list', earlySignal = 0) ... done
[08:08:10.517] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:10.517] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` requestNode() ... done
[08:08:10.517] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` cluster node index: 1
[08:08:10.517] | : . ' , ; ` | : . ' , ; ` | : . ' , ; requestWorker() ... done
[08:08:10.517] | : . ' , ; ` | : . ' , ; ` | : . ' , ; eraseGlobalEnvironment() ...
[08:08:10.518] | : . ' , ; ` | : . ' , ; ` | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:10.518] | : . ' , ; ` | : . ' , ; ` | : . ' , ; launchFuture() ...
[08:08:10.518] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` cluster node index: 1
[08:08:10.518] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` getFutureData() ...
[08:08:10.518] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | getFutureCore() ...
[08:08:10.518] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:08:10.518] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | getFutureCore() ... done
[08:08:10.518] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | getFutureCapture() ...
[08:08:10.518] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | getFutureCapture() ... done
[08:08:10.519] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | getFutureContext() ...
[08:08:10.519] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:10.519] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:10.519] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:10.519] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:10.519] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | getFutureContext() ... done
[08:08:10.519] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` getFutureData() ... done
[08:08:10.520] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'add', earlySignal = 0) ...
[08:08:10.520] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Appended future to position #1
[08:08:10.520] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` | Number of registered futures: 1
[08:08:10.520] | : . ' , ; ` | : . ' , ; ` | : . ' , ; ` FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'add', earlySignal = 0) ... done
[08:08:10.520] | : . ' , ; ` | : . ' , ; ` | : . ' , ; launchFuture() ... done
[08:08:10.520] | : . ' , ; ` | : . ' , ; ` | : . ' , ; MultisessionFuture started
[08:08:10.520] | : . ' , ; ` | : . ' , ; ` | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:10.520] | : . ' , ; ` | : . ' , ; ` | : . ' Launching futures ... done
[08:08:10.521] | : . ' , ; ` | : . ' , ; ` | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:10.521] | : . ' , ; ` | : . ' , ; ` | : . Using MultisessionFutureBackend ... done
[08:08:10.521] | : . ' , ; ` | : . ' , ; ` | : run() for ‘Future’ (<unnamed-35>) ... done
[08:08:10.521] | : . ' , ; ` | : . ' , ; ` | future(..., label = NULL) ... done
[08:08:10.521] | : . ' , ; ` | : . ' , ; ` | value() for MultisessionFuture (<unnamed-35>) ...
[08:08:10.521] | : . ' , ; ` | : . ' , ; ` | : result() for ClusterFuture ...
[08:08:10.521] | : . ' , ; ` | : . ' , ; ` | : . assertValidConnection() ...
[08:08:10.521] | : . ' , ; ` | : . ' , ; ` | : . ' cluster node index: 1
[08:08:10.522] | : . ' , ; ` | : . ' , ; ` | : . assertValidConnection() ... done
[08:08:10.522] | : . ' , ; ` | : . ' , ; ` | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:10.522] | : . ' , ; ` | : . ' , ; ` | : . ' cluster node index: 1
[08:08:10.564] | : . ' , ; ` | : . ' , ; ` | : . ' [1] TRUE
[08:08:10.564] | : . ' , ; ` | : . ' , ; ` | : . ' received data:
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . ' List of 5
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '  $ type   : chr "VALUE"
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '  $ value  :List of 16
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ value              : num 11
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ visible            : logi TRUE
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ stdout             : chr ""
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ conditions         : list()
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ rng                : logi FALSE
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ seed               : NULL
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ misuseConnections  :List of 3
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ added   : NULL
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ removed : NULL
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ replaced: NULL
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ misuseDevices      : NULL
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ misuseDefaultDevice: list()
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:10"
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:10"
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ uuid               : chr [1:2] "67af0fd89af88a05d7f19a04932924f6" "35"
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ session_uuid       : chr "64d1c0ec81c7b9e640126f07ad396546"
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..- attr(*, "source")=List of 5
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..$ host  : Named chr "285a5f234941"
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..$ pid   : int 68323
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:08"
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..$ random: int 2147483647
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ r_info             :List of 4
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   .. .. ..$ : int [1:3] 4 5 0
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ os           : chr "unix"
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ os_name      : chr "Linux"
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   ..$ version            : chr "1.8"
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '  $ success: logi TRUE
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '  $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:10.565] | : . ' , ; ` | : . ' , ; ` | : . '  $ tag    : NULL
[08:08:10.575] | : . ' , ; ` | : . ' , ; ` | : . ' Received FutureResult
[08:08:10.576] | : . ' , ; ` | : . ' , ; ` | : . ' FutureResult:
[08:08:10.576] | : . ' , ; ` | : . ' , ; ` | : . ' value: ‘numeric’
[08:08:10.576] | : . ' , ; ` | : . ' , ; ` | : . ' visible: TRUE
[08:08:10.576] | : . ' , ; ` | : . ' , ; ` | : . ' stdout: character
[08:08:10.576] | : . ' , ; ` | : . ' , ; ` | : . ' conditions: [n = 0] 
[08:08:10.576] | : . ' , ; ` | : . ' , ; ` | : . ' RNG used: FALSE
[08:08:10.576] | : . ' , ; ` | : . ' , ; ` | : . ' duration: 0.002906799 secs (started 2025-06-17 08:08:10.561195)
[08:08:10.576] | : . ' , ; ` | : . ' , ; ` | : . ' version: 1.8
[08:08:10.576] | : . ' , ; ` | : . ' , ; ` | : . ' FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'remove', earlySignal = 0) ...
[08:08:10.576] | : . ' , ; ` | : . ' , ; ` | : . ' , Removed future from position #1
[08:08:10.576] | : . ' , ; ` | : . ' , ; ` | : . ' , Number of registered futures: 0
[08:08:10.577] | : . ' , ; ` | : . ' , ; ` | : . ' FutureRegistry('workers-a24376b6c5156fe46f79f17f54ce8a4c', action = 'remove', earlySignal = 0) ... done
[08:08:10.577] | : . ' , ; ` | : . ' , ; ` | : . ' Erased future from future backend
[08:08:10.577] | : . ' , ; ` | : . ' , ; ` | : . ' result() for ClusterFuture ...
[08:08:10.577] | : . ' , ; ` | : . ' , ; ` | : . ' , result already collected: FutureResult
[08:08:10.577] | : . ' , ; ` | : . ' , ; ` | : . ' result() for ClusterFuture ... done
[08:08:10.577] | : . ' , ; ` | : . ' , ; ` | : . ' signalConditions() ...
[08:08:10.577] | : . ' , ; ` | : . ' , ; ` | : . ' , include = ‘immediateCondition’
[08:08:10.577] | : . ' , ; ` | : . ' , ; ` | : . ' , exclude = 
[08:08:10.577] | : . ' , ; ` | : . ' , ; ` | : . ' , resignal = FALSE
[08:08:10.577] | : . ' , ; ` | : . ' , ; ` | : . ' , Number of conditions: 0
[08:08:10.578] | : . ' , ; ` | : . ' , ; ` | : . ' ,  int 0
[08:08:10.578] | : . ' , ; ` | : . ' , ; ` | : . ' signalConditions() ... done
[08:08:10.578] | : . ' , ; ` | : . ' , ; ` | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:10.578] | : . ' , ; ` | : . ' , ; ` | : result() for ClusterFuture ... done
[08:08:10.578] | : . ' , ; ` | : . ' , ; ` | : result() for ClusterFuture ...
[08:08:10.578] | : . ' , ; ` | : . ' , ; ` | : . result already collected: FutureResult
[08:08:10.579] | : . ' , ; ` | : . ' , ; ` | : result() for ClusterFuture ... done
[08:08:10.579] | : . ' , ; ` | : . ' , ; ` | : signalConditions() ...
[08:08:10.579] | : . ' , ; ` | : . ' , ; ` | : . include = ‘immediateCondition’
[08:08:10.579] | : . ' , ; ` | : . ' , ; ` | : . exclude = 
[08:08:10.579] | : . ' , ; ` | : . ' , ; ` | : . resignal = FALSE
[08:08:10.579] | : . ' , ; ` | : . ' , ; ` | : . Number of conditions: 0
[08:08:10.579] | : . ' , ; ` | : . ' , ; ` | : .  int 0
[08:08:10.580] | : . ' , ; ` | : . ' , ; ` | : signalConditions() ... done
[08:08:10.580] | : . ' , ; ` | : . ' , ; ` | : relay stdout ...
[08:08:10.580] | : . ' , ; ` | : . ' , ; ` | : relay stdout ... done
[08:08:10.580] | : . ' , ; ` | : . ' , ; ` | : check for misuse ...
[08:08:10.580] | : . ' , ; ` | : . ' , ; ` | : check for misuse ... done
[08:08:10.580] | : . ' , ; ` | : . ' , ; ` | value() for MultisessionFuture (<unnamed-35>) ... done
b = 11
*** %<-% with ‘multisession’ futures ... DONE
Testing with 2 cores ... DONE

> message("*** %<-% ... DONE")
*** %<-% ... DONE
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=3s, sys.self=0.2s, elapsed=5s, user.child=0.9s, sys.child=0.5s
Test ‘futureAssign_OP’ ... success
> 
