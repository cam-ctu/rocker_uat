
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script inst/testme/test-cluster-connection-clashes.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future:::testme("cluster-connection-clashes")
Test ‘cluster-connection-clashes’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future/testme/test-cluster-connection-clashes.R’

> library(future)
[08:07:47.319] Option 'future.startup.script': TRUE
[08:07:47.319] Future startup scripts considered: ‘.future.R’, ‘~/.future.R’
[08:07:47.319] Future startup scripts found: <none>

> message("all.equal() for connection ...")
all.equal() for connection ...

> con1 <- rawConnection(raw())

> close(con1)

> con2 <- rawConnection(raw())

> close(con2)

> stopifnot(!isTRUE(all.equal(con1, con2)))

> message("all.equal() for connection ... done")
all.equal() for connection ... done

> message("all.equal() for cluster backend ...")
all.equal() for cluster backend ...

> for (kk in 1:3) {
+     message("Iteration #", kk)
+     cl <- parallel::makeCluster(1)
+     plan(cluster, workers = cl)
+     fs <- lapply(1:2, FU .... [TRUNCATED] 
Iteration #1
[08:07:47.516] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:47.517] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:07:47.517] | : all.equal() for FutureStrategyList ...
[08:07:47.517] | : . New stack:
[08:07:47.517] | : . List of 1
[08:07:47.517] | : .  $ :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:47.517] | : .     envir = parent.frame())  
[08:07:47.517] | : .   ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:47.517] | : .   ..- attr(*, "init")= logi TRUE
[08:07:47.517] | : .   ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:47.517] | : .     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:47.517] | : .   .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:47.517] | : .   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:47.517] | : .   ..- attr(*, "tweaks")=List of 1
[08:07:47.517] | : .   .. ..$ workers:List of 1
[08:07:47.517] | : .   .. .. ..$ :List of 3
[08:07:47.517] | : .   .. .. .. ..$ con : 'sockconn' int 4
[08:07:47.517] | : .   .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:47.517] | : .   .. .. .. ..$ host: chr "localhost"
[08:07:47.517] | : .   .. .. .. ..$ rank: num 0
[08:07:47.517] | : .   .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:47.517] | : .   .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:47.517] | : .   ..- attr(*, "call")= language plan(cluster, workers = cl)
[08:07:47.517] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:47.527] | : . Old stack:
[08:07:47.527] | : . List of 1
[08:07:47.527] | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:47.527] | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:47.527] | : .   ..- attr(*, "init")= logi TRUE
[08:07:47.527] | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:47.527] | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:47.527] | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:47.527] | : .   ..- attr(*, "call")= language plan(sequential)
[08:07:47.527] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:47.530] | : . Not identical
[08:07:47.530] | : . all.equal() for future ...
[08:07:47.530] | : . ' List of 2
[08:07:47.530] | : . '  $ target :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:47.530] | : . '     envir = parent.frame())  
[08:07:47.530] | : . '   ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:47.530] | : . '   ..- attr(*, "init")= logi TRUE
[08:07:47.530] | : . '   ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:47.530] | : . '     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:47.530] | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:47.530] | : . '   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:47.530] | : . '   ..- attr(*, "tweaks")=List of 1
[08:07:47.530] | : . '   .. ..$ workers:List of 1
[08:07:47.530] | : . '   .. .. ..$ :List of 3
[08:07:47.530] | : . '   .. .. .. ..$ con : 'sockconn' int 4
[08:07:47.530] | : . '   .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:47.530] | : . '   .. .. .. ..$ host: chr "localhost"
[08:07:47.530] | : . '   .. .. .. ..$ rank: num 0
[08:07:47.530] | : . '   .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:47.530] | : . '   .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:47.530] | : . '   ..- attr(*, "call")= language plan(cluster, workers = cl)
[08:07:47.530] | : . '  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:47.530] | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:47.530] | : . '   ..- attr(*, "init")= logi TRUE
[08:07:47.530] | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:47.530] | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:47.530] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:47.530] | : . '   ..- attr(*, "call")= language plan(sequential)
[08:07:47.537] | : . ' Formals differ
[08:07:47.537] | : . all.equal() for future ... done
[08:07:47.537] | : . Future strategies differ at level 1
[08:07:47.537] | : all.equal() for FutureStrategyList ... done
[08:07:47.537] | : plan(): Setting new future backend stack:
[08:07:47.537] | : List of future strategies:
[08:07:47.537] | : 1. cluster:
[08:07:47.537] | :    - args: function (..., workers = "<socket cluster with 1 nodes on host ‘localhost’>", envir = parent.frame())
[08:07:47.537] | :    - tweaked: TRUE
[08:07:47.537] | :    - call: plan(cluster, workers = cl)
[08:07:47.538] | : List of 1
[08:07:47.538] | :  $ :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:47.538] | :     envir = parent.frame())  
[08:07:47.538] | :   ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:47.538] | :   ..- attr(*, "init")= logi TRUE
[08:07:47.538] | :   ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:47.538] | :     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:47.538] | :   .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:47.538] | :   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:47.538] | :   ..- attr(*, "tweaks")=List of 1
[08:07:47.538] | :   .. ..$ workers:List of 1
[08:07:47.538] | :   .. .. ..$ :List of 3
[08:07:47.538] | :   .. .. .. ..$ con : 'sockconn' int 4
[08:07:47.538] | :   .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:47.538] | :   .. .. .. ..$ host: chr "localhost"
[08:07:47.538] | :   .. .. .. ..$ rank: num 0
[08:07:47.538] | :   .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:47.538] | :   .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:47.538] | :   ..- attr(*, "call")= language plan(cluster, workers = cl)
[08:07:47.538] | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:47.543] | : plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ...
[08:07:47.543] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:47.543] | : . ' Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:07:47.543] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:47.544] | : . Legacy shutdown of cluster workers ...
[08:07:47.544] | : . ' Stopping existing cluster ...
[08:07:47.544] | : . ' , No pre-existing cluster. Skipping
[08:07:47.544] | : . ' Stopping existing cluster ... done
[08:07:47.544] | : . Legacy shutdown of cluster workers ... done
[08:07:47.544] | : plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[08:07:47.544] | : plan(): plan_init() of ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ...
[08:07:47.544] | : . function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:47.544] | : .     envir = parent.frame())  
[08:07:47.544] | : .  - attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:47.544] | : .  - attr(*, "init")= logi TRUE
[08:07:47.544] | : .  - attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:47.544] | : .     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:47.544] | : .   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:47.544] | : .  - attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:47.544] | : .  - attr(*, "tweaks")=List of 1
[08:07:47.544] | : .   ..$ workers:List of 1
[08:07:47.544] | : .   .. ..$ :List of 3
[08:07:47.544] | : .   .. .. ..$ con : 'sockconn' int 4
[08:07:47.544] | : .   .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:47.544] | : .   .. .. ..$ host: chr "localhost"
[08:07:47.544] | : .   .. .. ..$ rank: num 0
[08:07:47.544] | : .   .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:47.544] | : .   .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:47.544] | : .  - attr(*, "call")= language plan(cluster, workers = cl)
[08:07:47.550] | : . init: TRUE
[08:07:47.550] | : . makeFutureBackend(<tweaked>) ...
[08:07:47.550] | : . ' Backend function: <‘NULL’>
[08:07:47.550] | : . ' Evaluator tweak arguments: [n=1]
[08:07:47.551] | : . ' List of 1
[08:07:47.551] | : . '  $ workers:List of 1
[08:07:47.551] | : . '   ..$ :List of 3
[08:07:47.551] | : . '   .. ..$ con : 'sockconn' int 4
[08:07:47.551] | : . '   .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:47.551] | : . '   .. ..$ host: chr "localhost"
[08:07:47.551] | : . '   .. ..$ rank: num 0
[08:07:47.551] | : . '   .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:47.551] | : . '   ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:47.553] | : . ' Evaluator formal arguments: [n=1]
[08:07:47.553] | : . ' List of 1
[08:07:47.553] | : . '  $ workers:List of 1
[08:07:47.553] | : . '   ..$ :List of 3
[08:07:47.553] | : . '   .. ..$ con : 'sockconn' int 4
[08:07:47.553] | : . '   .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:47.553] | : . '   .. ..$ host: chr "localhost"
[08:07:47.553] | : . '   .. ..$ rank: num 0
[08:07:47.553] | : . '   .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:47.553] | : . '   ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:47.556] | : . ' Backend factory arguments: [n=1]
[08:07:47.556] | : . ' Dotted pair list of 1
[08:07:47.556] | : . '  $ workers:List of 1
[08:07:47.556] | : . '   ..$ :List of 3
[08:07:47.556] | : . '   .. ..$ con : 'sockconn' int 4
[08:07:47.556] | : . '   .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:47.556] | : . '   .. ..$ host: chr "localhost"
[08:07:47.556] | : . '   .. ..$ rank: num 0
[08:07:47.556] | : . '   .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:47.556] | : . '   ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:47.558] | : . ' ClusterFutureBackend(..., persistent = FALSE, gc = TRUE, earlySignal = TRUE) ...
[08:07:47.558] | : . ' , Stopping existing cluster ...
[08:07:47.558] | : . ' , ; No pre-existing cluster. Skipping
[08:07:47.559] | : . ' , Stopping existing cluster ... done
[08:07:47.559] | : . ' , Number of workers: 1
[08:07:47.559] | : . ' , Generated workers UUID
[08:07:47.559] | : . ' , Workers UUID: ‘381ebb526f9eb2d90230a3c7b34be202’
[08:07:47.559] | : . ' ClusterFutureBackend(..., persistent = FALSE, gc = TRUE, earlySignal = TRUE) ... done
[08:07:47.559] | : . ' Backend: <‘ClusterFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:47.560] | : . makeFutureBackend(<tweaked>) ... done
[08:07:47.560] | : plan(): plan_init() of ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ... done
[08:07:47.560] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:47.560] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:47.560] | : plan(): nbrOfWorkers() = 1
[08:07:47.560] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[08:07:47.560] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:47.560] future(..., label = NULL) ...
[08:07:47.561] | lazy: FALSE
[08:07:47.561] | stdout: TRUE
[08:07:47.561] | conditions: [n=1] ‘condition’
[08:07:47.561] | gc: FALSE
[08:07:47.561] | earlySignal: FALSE
[08:07:47.562] | getGlobalsAndPackages() ...
[08:07:47.562] | : Searching for globals ...
[08:07:47.572] | : . globals found: [3] ‘[[’, ‘X’, ‘i’
[08:07:47.572] | : Searching for globals ... done
[08:07:47.572] | : Resolving globals: FALSE
[08:07:47.572] | : Search for packages associated with the globals ...
[08:07:47.572] | : . Packages associated with globals: [1] ‘base’
[08:07:47.573] | : . Packages: [1] ‘base’
[08:07:47.573] | : Search for packages associated with the globals ... done
[08:07:47.573] | : Packages after dropping 'base': [0] 
[08:07:47.573] | : globals: [2] ‘X’, ‘i’
[08:07:47.573] | : packages: [0] 
[08:07:47.573] | getGlobalsAndPackages() ... done
[08:07:47.575] | run() for ‘Future’ (<unnamed-1>) ...
[08:07:47.575] | : state: ‘created’
[08:07:47.575] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:47.575] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:47.576] | : Using ClusterFutureBackend ...
[08:07:47.576] | : . Number of futures since start: 0 (0 created, 0 launched, 0 finished)
[08:07:47.576] | : . Launching futures ...
[08:07:47.576] | : . ' launchFuture() for ClusterFutureBackend ...
[08:07:47.576] | : . ' , Workers: [n=1]
[08:07:47.576] | : . ' , socket cluster with 1 nodes on host ‘localhost’
[08:07:47.577] | : . ' , FutureRegistry: ‘workers-381ebb526f9eb2d90230a3c7b34be202’
[08:07:47.577] | : . ' , requestWorker() ...
[08:07:47.577] | : . ' , ; requestNode() ...
[08:07:47.577] | : . ' , ; ` Number of workers: 1
[08:07:47.577] | : . ' , ; ` Polling for a free worker ...
[08:07:47.577] | : . ' , ; ` | FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[08:07:47.577] | : . ' , ; ` | : Created empty registry ‘workers-381ebb526f9eb2d90230a3c7b34be202’
[08:07:47.577] | : . ' , ; ` | : Listing all futures
[08:07:47.577] | : . ' , ; ` | : Number of registered futures: 0
[08:07:47.578] | : . ' , ; ` | FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[08:07:47.578] | : . ' , ; ` | Total time: 0
[08:07:47.578] | : . ' , ; ` Polling for a free worker ... done
[08:07:47.578] | : . ' , ; ` FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[08:07:47.578] | : . ' , ; ` | Listing all futures
[08:07:47.578] | : . ' , ; ` | Number of registered futures: 0
[08:07:47.578] | : . ' , ; ` FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[08:07:47.578] | : . ' , ; ` avail: [n=1] ‘1’
[08:07:47.578] | : . ' , ; ` Index of first available worker: 1
[08:07:47.578] | : . ' , ; ` Validate that the worker is functional ...
[08:07:47.632] | : . ' , ; ` | Worker is functional
[08:07:47.633] | : . ' , ; ` | FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[08:07:47.633] | : . ' , ; ` | : Listing all futures
[08:07:47.633] | : . ' , ; ` | : Number of registered futures: 0
[08:07:47.633] | : . ' , ; ` | FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[08:07:47.633] | : . ' , ; ` Validate that the worker is functional ... done
[08:07:47.633] | : . ' , ; requestNode() ... done
[08:07:47.634] | : . ' , ; cluster node index: 1
[08:07:47.634] | : . ' , requestWorker() ... done
[08:07:47.634] | : . ' , eraseGlobalEnvironment() ...
[08:07:47.634] | : . ' , eraseGlobalEnvironment() ... done
[08:07:47.634] | : . ' , launchFuture() ...
[08:07:47.635] | : . ' , ; cluster node index: 1
[08:07:47.635] | : . ' , ; getFutureData() ...
[08:07:47.635] | : . ' , ; ` getFutureCore() ...
[08:07:47.635] | : . ' , ; ` | Packages needed by the future expression (n = 0): <none>
[08:07:47.635] | : . ' , ; ` getFutureCore() ... done
[08:07:47.635] | : . ' , ; ` getFutureCapture() ...
[08:07:47.635] | : . ' , ; ` getFutureCapture() ... done
[08:07:47.636] | : . ' , ; ` getFutureContext() ...
[08:07:47.636] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:47.636] | : . ' , ; ` | : Getting stack without first backend: [n=0] 
[08:07:47.636] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:47.636] | : . ' , ; ` | Packages needed by future backend (n = 0): <none>
[08:07:47.636] | : . ' , ; ` getFutureContext() ... done
[08:07:47.636] | : . ' , ; getFutureData() ... done
[08:07:47.637] | : . ' , ; FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'add', earlySignal = 0) ...
[08:07:47.637] | : . ' , ; ` Appended future to position #1
[08:07:47.637] | : . ' , ; ` Number of registered futures: 1
[08:07:47.637] | : . ' , ; FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'add', earlySignal = 0) ... done
[08:07:47.637] | : . ' , launchFuture() ... done
[08:07:47.638] | : . ' , ClusterFuture started
[08:07:47.638] | : . ' launchFuture() for ClusterFutureBackend ... done
[08:07:47.638] | : . Launching futures ... done
[08:07:47.638] | : . Future launched: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:47.638] | : Using ClusterFutureBackend ... done
[08:07:47.638] | run() for ‘Future’ (<unnamed-1>) ... done
[08:07:47.638] future(..., label = NULL) ... done
[08:07:47.638] future(..., label = NULL) ...
[08:07:47.638] | lazy: FALSE
[08:07:47.638] | stdout: TRUE
[08:07:47.639] | conditions: [n=1] ‘condition’
[08:07:47.639] | gc: FALSE
[08:07:47.639] | earlySignal: FALSE
[08:07:47.639] | getGlobalsAndPackages() ...
[08:07:47.639] | : Searching for globals ...
[08:07:47.643] | : . globals found: [3] ‘[[’, ‘X’, ‘i’
[08:07:47.643] | : Searching for globals ... done
[08:07:47.643] | : Resolving globals: FALSE
[08:07:47.643] | : Search for packages associated with the globals ...
[08:07:47.644] | : . Packages associated with globals: [1] ‘base’
[08:07:47.644] | : . Packages: [1] ‘base’
[08:07:47.644] | : Search for packages associated with the globals ... done
[08:07:47.644] | : Packages after dropping 'base': [0] 
[08:07:47.644] | : globals: [2] ‘X’, ‘i’
[08:07:47.644] | : packages: [0] 
[08:07:47.644] | getGlobalsAndPackages() ... done
[08:07:47.645] | run() for ‘Future’ (<unnamed-2>) ...
[08:07:47.645] | : state: ‘created’
[08:07:47.645] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:47.645] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:47.645] | : Using ClusterFutureBackend ...
[08:07:47.645] | : . Number of futures since start: 1 (1 created, 1 launched, 0 finished)
[08:07:47.645] | : . Launching futures ...
[08:07:47.645] | : . ' launchFuture() for ClusterFutureBackend ...
[08:07:47.646] | : . ' , Workers: [n=1]
[08:07:47.646] | : . ' , socket cluster with 1 nodes on host ‘localhost’
[08:07:47.646] | : . ' , FutureRegistry: ‘workers-381ebb526f9eb2d90230a3c7b34be202’
[08:07:47.646] | : . ' , requestWorker() ...
[08:07:47.646] | : . ' , ; requestNode() ...
[08:07:47.646] | : . ' , ; ` Number of workers: 1
[08:07:47.646] | : . ' , ; ` Polling for a free worker ...
[08:07:47.647] | : . ' , ; ` | FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[08:07:47.647] | : . ' , ; ` | : Listing all futures
[08:07:47.647] | : . ' , ; ` | : Number of registered futures: 1
[08:07:47.647] | : . ' , ; ` | FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[08:07:47.647] | : . ' , ; ` | Poll #1 (0): usedNodes() = 1, workers = 1
[08:07:47.657] | : . ' , ; ` | FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ...
[08:07:47.657] | : . ' , ; ` | : collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ...
[08:07:47.658] | : . ' , ; ` | : . resolved() for ClusterFuture (<unnamed-1>) ...
[08:07:47.658] | : . ' , ; ` | : . ' Cluster node socket connection: index=4, id=145
[08:07:47.659] | : . ' , ; ` | : . ' assertValidConnection() ...
[08:07:47.659] | : . ' , ; ` | : . ' , cluster node index: 1
[08:07:47.659] | : . ' , ; ` | : . ' assertValidConnection() ... done
[08:07:47.669] | : . ' , ; ` | : . ' socketSelect(list(<connection #4 (id=145)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:47.670] | : . ' , ; ` | : . resolved() for ClusterFuture (<unnamed-1>) ... done
[08:07:47.670] | : . ' , ; ` | : . Future at position #1 is not resolved
[08:07:47.670] | : . ' , ; ` | : collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ... done
[08:07:47.670] | : . ' , ; ` | : Indices of futures to drop: [n=0] <none>
[08:07:47.670] | : . ' , ; ` | FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ... done
[08:07:47.670] | : . ' , ; ` | Early signaling of 1 future candidates ...
[08:07:47.670] | : . ' , ; ` | Number of futures with early signaling requested: 0
[08:07:47.670] | : . ' , ; ` | Early signaling of 1 future candidates ... done
[08:07:47.671] | : . ' , ; ` | Number of registered futures: 1
[08:07:47.671] | : . ' , ; ` Polling for a free worker ... done
[08:07:47.671] | : . ' , ; ` FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[08:07:47.671] | : . ' , ; ` | Listing all futures
[08:07:47.671] | : . ' , ; ` | Number of registered futures: 1
[08:07:47.671] | : . ' , ; ` FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[08:07:47.671] | : . ' , ; ` Poll #2 (0.02 secs): usedNodes() = 1, workers = 1
[08:07:47.682] | : . ' , ; ` FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ...
[08:07:47.710] | : . ' , ; ` | collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ...
[08:07:47.710] | : . ' , ; ` | : resolved() for ClusterFuture (<unnamed-1>) ...
[08:07:47.711] | : . ' , ; ` | : . Cluster node socket connection: index=4, id=145
[08:07:47.711] | : . ' , ; ` | : . assertValidConnection() ...
[08:07:47.711] | : . ' , ; ` | : . ' cluster node index: 1
[08:07:47.712] | : . ' , ; ` | : . assertValidConnection() ... done
[08:07:47.722] | : . ' , ; ` | : . socketSelect(list(<connection #4 (id=145)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:47.722] | : . ' , ; ` | : resolved() for ClusterFuture (<unnamed-1>) ... done
[08:07:47.722] | : . ' , ; ` | : Future at position #1 is not resolved
[08:07:47.722] | : . ' , ; ` | collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ... done
[08:07:47.722] | : . ' , ; ` | Indices of futures to drop: [n=0] <none>
[08:07:47.723] | : . ' , ; ` FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ... done
[08:07:47.723] | : . ' , ; ` Early signaling of 1 future candidates ...
[08:07:47.723] | : . ' , ; ` Number of futures with early signaling requested: 0
[08:07:47.723] | : . ' , ; ` Early signaling of 1 future candidates ... done
[08:07:47.723] | : . ' , ; ` Number of registered futures: 1
[08:07:47.723] | : . ' , ; requestNode() ... done
[08:07:47.723] | : . ' , ; FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[08:07:47.723] | : . ' , ; ` Listing all futures
[08:07:47.724] | : . ' , ; ` Number of registered futures: 1
[08:07:47.724] | : . ' , ; FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[08:07:47.724] | : . ' , ; Poll #3 (0.08 secs): usedNodes() = 1, workers = 1
[08:07:47.734] | : . ' , ; FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ...
[08:07:47.734] | : . ' , ; ` collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ...
[08:07:47.735] | : . ' , ; ` | resolved() for ClusterFuture (<unnamed-1>) ...
[08:07:47.735] | : . ' , ; ` | : Cluster node socket connection: index=4, id=145
[08:07:47.735] | : . ' , ; ` | : assertValidConnection() ...
[08:07:47.735] | : . ' , ; ` | : . cluster node index: 1
[08:07:47.735] | : . ' , ; ` | : assertValidConnection() ... done
[08:07:47.736] | : . ' , ; ` | : receiveMessageFromWorker() for ClusterFuture ...
[08:07:47.736] | : . ' , ; ` | : . cluster node index: 1
[08:07:47.736] | : . ' , ; ` | : . [1] TRUE
[08:07:47.736] | : . ' , ; ` | : . received data:
[08:07:47.737] | : . ' , ; ` | : . List of 5
[08:07:47.737] | : . ' , ; ` | : .  $ type   : chr "VALUE"
[08:07:47.737] | : . ' , ; ` | : .  $ value  :List of 16
[08:07:47.737] | : . ' , ; ` | : .   ..$ value              : int 1
[08:07:47.737] | : . ' , ; ` | : .   ..$ visible            : logi TRUE
[08:07:47.737] | : . ' , ; ` | : .   ..$ stdout             : chr ""
[08:07:47.737] | : . ' , ; ` | : .   ..$ conditions         : list()
[08:07:47.737] | : . ' , ; ` | : .   ..$ rng                : logi FALSE
[08:07:47.737] | : . ' , ; ` | : .   ..$ seed               : NULL
[08:07:47.737] | : . ' , ; ` | : .   ..$ misuseGlobalEnv    : NULL
[08:07:47.737] | : . ' , ; ` | : .   ..$ misuseConnections  :List of 3
[08:07:47.737] | : . ' , ; ` | : .   .. ..$ added   : NULL
[08:07:47.737] | : . ' , ; ` | : .   .. ..$ removed : NULL
[08:07:47.737] | : . ' , ; ` | : .   .. ..$ replaced: NULL
[08:07:47.737] | : . ' , ; ` | : .   ..$ misuseDevices      : NULL
[08:07:47.737] | : . ' , ; ` | : .   ..$ misuseDefaultDevice: list()
[08:07:47.737] | : . ' , ; ` | : .   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:07:47"
[08:07:47.737] | : . ' , ; ` | : .   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:07:47"
[08:07:47.737] | : . ' , ; ` | : .   ..$ uuid               : chr [1:2] "8301de87e3d0c0a9d4bc2c0c635cd68f" "1"
[08:07:47.737] | : . ' , ; ` | : .   ..$ session_uuid       : chr "3b43c6d4156914f69d17c3395afdae9c"
[08:07:47.737] | : . ' , ; ` | : .   .. ..- attr(*, "source")=List of 5
[08:07:47.737] | : . ' , ; ` | : .   .. .. ..$ host  : Named chr "285a5f234941"
[08:07:47.737] | : . ' , ; ` | : .   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:07:47.737] | : . ' , ; ` | : .   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:07:47.737] | : . ' , ; ` | : .   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:47.737] | : . ' , ; ` | : .   .. .. ..$ pid   : int 67168
[08:07:47.737] | : . ' , ; ` | : .   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:07:47"
[08:07:47.737] | : . ' , ; ` | : .   .. .. ..$ random: int 2147483647
[08:07:47.737] | : . ' , ; ` | : .   ..$ r_info             :List of 4
[08:07:47.737] | : . ' , ; ` | : .   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:07:47.737] | : . ' , ; ` | : .   .. .. ..$ : int [1:3] 4 5 0
[08:07:47.737] | : . ' , ; ` | : .   .. ..$ os           : chr "unix"
[08:07:47.737] | : . ' , ; ` | : .   .. ..$ os_name      : chr "Linux"
[08:07:47.737] | : . ' , ; ` | : .   .. ..$ captures_utf8: logi TRUE
[08:07:47.737] | : . ' , ; ` | : .   ..$ version            : chr "1.8"
[08:07:47.737] | : . ' , ; ` | : .   ..- attr(*, "class")= chr "FutureResult"
[08:07:47.737] | : . ' , ; ` | : .  $ success: logi TRUE
[08:07:47.737] | : . ' , ; ` | : .  $ time   : 'proc_time' Named num [1:5] 0.048 0.001 0.049 0 0
[08:07:47.737] | : . ' , ; ` | : .   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:07:47.737] | : . ' , ; ` | : .  $ tag    : NULL
[08:07:47.750] | : . ' , ; ` | : . Received FutureResult
[08:07:47.750] | : . ' , ; ` | : . FutureResult:
[08:07:47.750] | : . ' , ; ` | : . value: ‘integer’
[08:07:47.750] | : . ' , ; ` | : . visible: TRUE
[08:07:47.750] | : . ' , ; ` | : . stdout: character
[08:07:47.750] | : . ' , ; ` | : . conditions: [n = 0] 
[08:07:47.750] | : . ' , ; ` | : . RNG used: FALSE
[08:07:47.750] | : . ' , ; ` | : . duration: 0.04735446 secs (started 2025-06-17 08:07:47.679492)
[08:07:47.750] | : . ' , ; ` | : . version: 1.8
[08:07:47.750] | : . ' , ; ` | : . FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'remove', earlySignal = 0) ...
[08:07:47.753] | : . ' , ; ` | : . ' Removed future from position #1
[08:07:47.753] | : . ' , ; ` | : . ' Number of registered futures: 0
[08:07:47.753] | : . ' , ; ` | : . FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'remove', earlySignal = 0) ... done
[08:07:47.753] | : . ' , ; ` | : . Erased future from future backend
[08:07:47.754] | : . ' , ; ` | : . result() for ClusterFuture ...
[08:07:47.754] | : . ' , ; ` | : . ' result already collected: FutureResult
[08:07:47.754] | : . ' , ; ` | : . result() for ClusterFuture ... done
[08:07:47.754] | : . ' , ; ` | : . signalConditions() ...
[08:07:47.754] | : . ' , ; ` | : . ' include = ‘immediateCondition’
[08:07:47.754] | : . ' , ; ` | : . ' exclude = 
[08:07:47.754] | : . ' , ; ` | : . ' resignal = FALSE
[08:07:47.754] | : . ' , ; ` | : . ' Number of conditions: 0
[08:07:47.754] | : . ' , ; ` | : . '  int 0
[08:07:47.755] | : . ' , ; ` | : . signalConditions() ... done
[08:07:47.755] | : . ' , ; ` | : receiveMessageFromWorker() for ClusterFuture ... done
[08:07:47.755] | : . ' , ; ` | : receiveMessageFromWorker() returned object of class FutureResult; resolved
[08:07:47.755] | : . ' , ; ` | resolved() for ClusterFuture (<unnamed-1>) ... done
[08:07:47.755] | : . ' , ; ` | assertFutureResult() ...
[08:07:47.755] | : . ' , ; ` | : Future uuid: 8301de87e3d0c0a9d4bc2c0c635cd68f[08:07:47.755] | : . ' , ; ` | : Future uuid: 1
[08:07:47.756] | : . ' , ; ` | : identical; success
[08:07:47.756] | : . ' , ; ` | assertFutureResult() ... done
[08:07:47.756] | : . ' , ; ` | Future at position #1 is resolved ...
[08:07:47.756] | : . ' , ; ` | : value() for ClusterFuture (<unnamed-1>) ...
[08:07:47.756] | : . ' , ; ` | : . result() for ClusterFuture ...
[08:07:47.757] | : . ' , ; ` | : . ' result already collected: FutureResult
[08:07:47.757] | : . ' , ; ` | : . result() for ClusterFuture ... done
[08:07:47.757] | : . ' , ; ` | : . result() for ClusterFuture ...
[08:07:47.757] | : . ' , ; ` | : . ' result already collected: FutureResult
[08:07:47.757] | : . ' , ; ` | : . result() for ClusterFuture ... done
[08:07:47.757] | : . ' , ; ` | : . signalConditions() ...
[08:07:47.757] | : . ' , ; ` | : . ' include = ‘immediateCondition’
[08:07:47.757] | : . ' , ; ` | : . ' exclude = 
[08:07:47.757] | : . ' , ; ` | : . ' resignal = FALSE
[08:07:47.757] | : . ' , ; ` | : . ' Number of conditions: 0
[08:07:47.757] | : . ' , ; ` | : . '  int 0
[08:07:47.758] | : . ' , ; ` | : . signalConditions() ... done
[08:07:47.758] | : . ' , ; ` | : . check for misuse ...
[08:07:47.758] | : . ' , ; ` | : . check for misuse ... done
[08:07:47.758] | : . ' , ; ` | : value() for ClusterFuture (<unnamed-1>) ... done
[08:07:47.758] | : . ' , ; ` | Future at position #1 is resolved ... done
[08:07:47.759] | : . ' , ; ` collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ... done
[08:07:47.759] | : . ' , ; ` Remove collected futures ...
[08:07:47.759] | : . ' , ; ` | Indices of futures to drop: [n=1] ‘1’
[08:07:47.759] | : . ' , ; ` Remove collected futures ... done
[08:07:47.759] | : . ' , ; FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ... done
[08:07:47.759] | : . ' , ; Early signaling of 1 future candidates ...
[08:07:47.759] | : . ' , ; Number of futures with early signaling requested: 0
[08:07:47.759] | : . ' , ; Early signaling of 1 future candidates ... done
[08:07:47.759] | : . ' , ; Number of registered futures: 1
[08:07:47.759] | : . ' , requestWorker() ... done
[08:07:47.760] | : . ' , FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[08:07:47.760] | : . ' , ; Listing all futures
[08:07:47.760] | : . ' , ; Number of registered futures: 0
[08:07:47.760] | : . ' , FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[08:07:47.760] | : . ' , Total time: 0.112936973571777
[08:07:47.760] | : . ' launchFuture() for ClusterFutureBackend ... done
[08:07:47.760] | : . ' FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[08:07:47.760] | : . ' , Listing all futures
[08:07:47.760] | : . ' , Number of registered futures: 0
[08:07:47.760] | : . ' FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[08:07:47.760] | : . ' avail: [n=1] ‘1’
[08:07:47.761] | : . ' Index of first available worker: 1
[08:07:47.761] | : . ' Validate that the worker is functional ...
[08:07:47.761] | : . ' , Worker is functional
[08:07:47.762] | : . ' , FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[08:07:47.762] | : . ' , ; Listing all futures
[08:07:47.762] | : . ' , ; Number of registered futures: 0
[08:07:47.762] | : . ' , FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[08:07:47.762] | : . ' Validate that the worker is functional ... done
[08:07:47.762] | : . Launching futures ... done
[08:07:47.762] | : . cluster node index: 1
[08:07:47.762] | : Using ClusterFutureBackend ... done
[08:07:47.762] | : eraseGlobalEnvironment() ...
[08:07:47.763] | : eraseGlobalEnvironment() ... done
[08:07:47.763] | : launchFuture() ...
[08:07:47.763] | : . cluster node index: 1
[08:07:47.763] | : . getFutureData() ...
[08:07:47.763] | : . ' getFutureCore() ...
[08:07:47.763] | : . ' , Packages needed by the future expression (n = 0): <none>
[08:07:47.763] | : . ' getFutureCore() ... done
[08:07:47.764] | : . ' getFutureCapture() ...
[08:07:47.764] | : . ' getFutureCapture() ... done
[08:07:47.764] | : . ' getFutureContext() ...
[08:07:47.764] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:47.764] | : . ' , ; Getting stack without first backend: [n=0] 
[08:07:47.764] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:47.764] | : . ' , Packages needed by future backend (n = 0): <none>
[08:07:47.764] | : . ' getFutureContext() ... done
[08:07:47.764] | : . getFutureData() ... done
[08:07:47.765] | : . FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'add', earlySignal = 0) ...
[08:07:47.765] | : . ' Appended future to position #1
[08:07:47.765] | : . ' Number of registered futures: 1
[08:07:47.765] | : . FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'add', earlySignal = 0) ... done
[08:07:47.765] | : launchFuture() ... done
[08:07:47.765] | : ClusterFuture started
[08:07:47.766] | run() for ‘Future’ (<unnamed-2>) ... done
[08:07:47.766] future(..., label = NULL) ... done
[08:07:47.766] Future launched: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’



[08:07:47.767] value() for list ...
[08:07:47.767] | recursive: 0
[08:07:47.767] | reduce: FALSE
[08:07:47.767] | length: 2

[08:07:47.767] | Number of remaining objects: 2
[08:07:47.767] | checking value #1:
[08:07:47.768] | 'obj' is ClusterFuture
[08:07:47.768] | ClusterFuture #1
[08:07:47.768] | signalConditionsASAP(ClusterFuture, pos=1) ...
[08:07:47.768] | : nx: 2
[08:07:47.768] | : relay: TRUE
[08:07:47.768] | : stdout: TRUE
[08:07:47.768] | : signal: TRUE
[08:07:47.768] | : resignal: FALSE
[08:07:47.768] | : force: TRUE
[08:07:47.768] | : relayed: [n=2] FALSE, FALSE
[08:07:47.768] | : queued futures: [n=2] FALSE, FALSE
[08:07:47.769] | : until=1
[08:07:47.769] | : relaying element #1
[08:07:47.769] | : value() for ClusterFuture (<unnamed-1>) ...
[08:07:47.769] | : . result() for ClusterFuture ...
[08:07:47.769] | : . ' result already collected: FutureResult
[08:07:47.769] | : . result() for ClusterFuture ... done
[08:07:47.769] | : . result() for ClusterFuture ...
[08:07:47.769] | : . ' result already collected: FutureResult
[08:07:47.769] | : . result() for ClusterFuture ... done
[08:07:47.771] | : . signalConditions() ...
[08:07:47.771] | : . ' include = ‘immediateCondition’
[08:07:47.771] | : . ' exclude = 
[08:07:47.771] | : . ' resignal = FALSE
[08:07:47.771] | : . ' Number of conditions: 0
[08:07:47.772] | : . '  int 0
[08:07:47.772] | : . signalConditions() ... done
[08:07:47.772] | : . relay stdout ...
[08:07:47.772] | : . relay stdout ... done
[08:07:47.772] | : . check for misuse ...
[08:07:47.772] | : . check for misuse ... done
[08:07:47.772] | : value() for ClusterFuture (<unnamed-1>) ... done
[08:07:47.773] | : result() for ClusterFuture ...
[08:07:47.773] | : . result already collected: FutureResult
[08:07:47.773] | : result() for ClusterFuture ... done
[08:07:47.773] | : signalConditions() ...
[08:07:47.773] | : . include = ‘immediateCondition’
[08:07:47.773] | : . exclude = 
[08:07:47.773] | : . resignal = FALSE
[08:07:47.773] | : . Number of conditions: 0
[08:07:47.773] | : .  int 0
[08:07:47.774] | : signalConditions() ... done
[08:07:47.774] | : result() for ClusterFuture ...
[08:07:47.774] | : . result already collected: FutureResult
[08:07:47.774] | : result() for ClusterFuture ... done
[08:07:47.774] | : signalConditions() ...
[08:07:47.774] | : . include = ‘condition’
[08:07:47.774] | : . exclude = ‘error’, ‘immediateCondition’
[08:07:47.774] | : . resignal = TRUE
[08:07:47.774] | : . Number of conditions: 0
[08:07:47.775] | : .  int 0
[08:07:47.775] | : signalConditions() ... done
[08:07:47.775] | : relayed: [n=2] TRUE, FALSE
[08:07:47.775] | : queued futures: [n=2] TRUE, FALSE
[08:07:47.775] | signalConditionsASAP(ClusterFuture, pos=1) ... done
[08:07:47.775] | value(<ClusterFuture>, ...) ...
[08:07:47.775] | value(<ClusterFuture>, ...) ... done
[08:07:47.776] | value() for ClusterFuture (<unnamed-1>) ...
[08:07:47.776] | : result() for ClusterFuture ...
[08:07:47.776] | : . result already collected: FutureResult
[08:07:47.776] | : result() for ClusterFuture ... done
[08:07:47.776] | : result() for ClusterFuture ...
[08:07:47.776] | : . result already collected: FutureResult
[08:07:47.776] | : result() for ClusterFuture ... done
[08:07:47.776] | : signalConditions() ...
[08:07:47.776] | : . include = ‘immediateCondition’
[08:07:47.776] | : . exclude = 
[08:07:47.776] | : . resignal = FALSE
[08:07:47.777] | : . Number of conditions: 0
[08:07:47.777] | : .  int 0
[08:07:47.777] | : signalConditions() ... done
[08:07:47.777] | : check for misuse ...
[08:07:47.777] | : check for misuse ... done
[08:07:47.777] | value() for ClusterFuture (<unnamed-1>) ... done
[08:07:47.777] | value: <integer>
[08:07:47.778] | signalConditionsASAP(ClusterFuture, pos=1) ...
[08:07:47.778] | : nx: 2
[08:07:47.778] | : relay: TRUE
[08:07:47.778] | : stdout: TRUE
[08:07:47.778] | : signal: TRUE
[08:07:47.778] | : resignal: FALSE
[08:07:47.778] | : force: TRUE
[08:07:47.778] | : relayed: [n=2] TRUE, FALSE
[08:07:47.778] | : queued futures: [n=2] TRUE, FALSE
[08:07:47.778] | : until=2
[08:07:47.778] | : relaying element #2
[08:07:47.779] | : relayed: [n=2] TRUE, FALSE
[08:07:47.779] | : queued futures: [n=2] TRUE, FALSE
[08:07:47.779] | signalConditionsASAP(ClusterFuture, pos=1) ... done
[08:07:47.779] | resolve() for ClusterFuture ...
[08:07:47.779] | resolve() for ClusterFuture ... done
[08:07:47.779] | length: 1 (resolved future 1)
[08:07:47.779] value() for list ... done
[08:07:47.779] checking value #2:
[08:07:47.779] 'obj' is ClusterFuture
[08:07:47.780] resolved() for ClusterFuture (<unnamed-2>) ...
[08:07:47.780] | Cluster node socket connection: index=4, id=145
[08:07:47.780] | assertValidConnection() ...
[08:07:47.780] | : cluster node index: 1
[08:07:47.780] | assertValidConnection() ... done
[08:07:47.791] | socketSelect(list(<connection #4 (id=145)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:47.791] resolved() for ClusterFuture (<unnamed-2>) ... done
[08:07:47.801] Number of remaining objects: 1
[08:07:47.801] checking value #2:
[08:07:47.801] 'obj' is ClusterFuture
[08:07:47.801] resolved() for ClusterFuture (<unnamed-2>) ...
[08:07:47.802] | Cluster node socket connection: index=4, id=145
[08:07:47.802] | assertValidConnection() ...
[08:07:47.802] | : cluster node index: 1
[08:07:47.802] | assertValidConnection() ... done
[08:07:47.809] | receiveMessageFromWorker() for ClusterFuture ...
[08:07:47.809] | : cluster node index: 1
[08:07:47.809] | : [1] TRUE
[08:07:47.809] | : received data:
[08:07:47.810] | : List of 5
[08:07:47.810] | :  $ type   : chr "VALUE"
[08:07:47.810] | :  $ value  :List of 16
[08:07:47.810] | :   ..$ value              : int 2
[08:07:47.810] | :   ..$ visible            : logi TRUE
[08:07:47.810] | :   ..$ stdout             : chr ""
[08:07:47.810] | :   ..$ conditions         : list()
[08:07:47.810] | :   ..$ rng                : logi FALSE
[08:07:47.810] | :   ..$ seed               : NULL
[08:07:47.810] | :   ..$ misuseGlobalEnv    : NULL
[08:07:47.810] | :   ..$ misuseConnections  :List of 3
[08:07:47.810] | :   .. ..$ added   : NULL
[08:07:47.810] | :   .. ..$ removed : NULL
[08:07:47.810] | :   .. ..$ replaced: NULL
[08:07:47.810] | :   ..$ misuseDevices      : NULL
[08:07:47.810] | :   ..$ misuseDefaultDevice: list()
[08:07:47.810] | :   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:07:47"
[08:07:47.810] | :   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:07:47"
[08:07:47.810] | :   ..$ uuid               : chr [1:2] "8301de87e3d0c0a9d4bc2c0c635cd68f" "2"
[08:07:47.810] | :   ..$ session_uuid       : chr "3b43c6d4156914f69d17c3395afdae9c"
[08:07:47.810] | :   .. ..- attr(*, "source")=List of 5
[08:07:47.810] | :   .. .. ..$ host  : Named chr "285a5f234941"
[08:07:47.810] | :   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:07:47.810] | :   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:07:47.810] | :   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:47.810] | :   .. .. ..$ pid   : int 67168
[08:07:47.810] | :   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:07:47"
[08:07:47.810] | :   .. .. ..$ random: int 2147483647
[08:07:47.810] | :   ..$ r_info             :List of 4
[08:07:47.810] | :   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:07:47.810] | :   .. .. ..$ : int [1:3] 4 5 0
[08:07:47.810] | :   .. ..$ os           : chr "unix"
[08:07:47.810] | :   .. ..$ os_name      : chr "Linux"
[08:07:47.810] | :   .. ..$ captures_utf8: logi TRUE
[08:07:47.810] | :   ..$ version            : chr "1.8"
[08:07:47.810] | :   ..- attr(*, "class")= chr "FutureResult"
[08:07:47.810] | :  $ success: logi TRUE
[08:07:47.810] | :  $ time   : 'proc_time' Named num [1:5] 0.002 0.001 0.003 0 0
[08:07:47.810] | :   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:07:47.810] | :  $ tag    : NULL
[08:07:47.822] | : Received FutureResult
[08:07:47.822] | : FutureResult:
[08:07:47.822] | : value: ‘integer’
[08:07:47.822] | : visible: TRUE
[08:07:47.822] | : stdout: character
[08:07:47.822] | : conditions: [n = 0] 
[08:07:47.822] | : RNG used: FALSE
[08:07:47.822] | : duration: 0.002464533 secs (started 2025-06-17 08:07:47.806401)
[08:07:47.822] | : version: 1.8
[08:07:47.822] | : FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'remove', earlySignal = 0) ...
[08:07:47.822] | : . Removed future from position #1
[08:07:47.823] | : . Number of registered futures: 0
[08:07:47.823] | : FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'remove', earlySignal = 0) ... done
[08:07:47.823] | : Erased future from future backend
[08:07:47.823] | : result() for ClusterFuture ...
[08:07:47.823] | : . result already collected: FutureResult
[08:07:47.823] | : result() for ClusterFuture ... done
[08:07:47.823] | : signalConditions() ...
[08:07:47.823] | : . include = ‘immediateCondition’
[08:07:47.823] | : . exclude = 
[08:07:47.824] | : . resignal = FALSE
[08:07:47.824] | : . Number of conditions: 0
[08:07:47.824] | : .  int 0
[08:07:47.824] | : signalConditions() ... done
[08:07:47.824] | receiveMessageFromWorker() for ClusterFuture ... done
[08:07:47.824] | receiveMessageFromWorker() returned object of class FutureResult; resolved
[08:07:47.824] resolved() for ClusterFuture (<unnamed-2>) ... done
[08:07:47.824] assertFutureResult() ...
[08:07:47.825] | Future uuid: 8301de87e3d0c0a9d4bc2c0c635cd68f[08:07:47.825] | Future uuid: 2
[08:07:47.825] | identical; success
[08:07:47.825] assertFutureResult() ... done
[08:07:47.825] ClusterFuture #2
[08:07:47.825] signalConditionsASAP(ClusterFuture, pos=2) ...
[08:07:47.825] | nx: 2
[08:07:47.825] | relay: TRUE
[08:07:47.825] | stdout: TRUE
[08:07:47.825] | signal: TRUE
[08:07:47.825] | resignal: FALSE
[08:07:47.825] | force: TRUE
[08:07:47.826] | relayed: [n=2] TRUE, FALSE
[08:07:47.826] | queued futures: [n=2] TRUE, FALSE
[08:07:47.826] | until=2
[08:07:47.826] | relaying element #2
[08:07:47.826] | value() for ClusterFuture (<unnamed-2>) ...
[08:07:47.826] | : result() for ClusterFuture ...
[08:07:47.826] | : . result already collected: FutureResult
[08:07:47.826] | : result() for ClusterFuture ... done
[08:07:47.826] | : result() for ClusterFuture ...
[08:07:47.826] | : . result already collected: FutureResult
[08:07:47.827] | : result() for ClusterFuture ... done
[08:07:47.827] | : signalConditions() ...
[08:07:47.827] | : . include = ‘immediateCondition’
[08:07:47.827] | : . exclude = 
[08:07:47.827] | : . resignal = FALSE
[08:07:47.827] | : . Number of conditions: 0
[08:07:47.827] | : .  int 0
[08:07:47.827] | : signalConditions() ... done
[08:07:47.828] | : relay stdout ...
[08:07:47.828] | : relay stdout ... done
[08:07:47.828] | : check for misuse ...
[08:07:47.828] | : check for misuse ... done
[08:07:47.828] | value() for ClusterFuture (<unnamed-2>) ... done
[08:07:47.828] | result() for ClusterFuture ...
[08:07:47.828] | : result already collected: FutureResult
[08:07:47.828] | result() for ClusterFuture ... done
[08:07:47.828] | signalConditions() ...
[08:07:47.828] | : include = ‘immediateCondition’
[08:07:47.829] | : exclude = 
[08:07:47.829] | : resignal = FALSE
[08:07:47.829] | : Number of conditions: 0
[08:07:47.829] | :  int 0
[08:07:47.829] | signalConditions() ... done
[08:07:47.829] | result() for ClusterFuture ...
[08:07:47.829] | : result already collected: FutureResult
[08:07:47.830] | result() for ClusterFuture ... done
[08:07:47.830] | signalConditions() ...
[08:07:47.830] | : include = ‘condition’
[08:07:47.830] | : exclude = ‘error’, ‘immediateCondition’
[08:07:47.830] | : resignal = TRUE
[08:07:47.830] | : Number of conditions: 0
[08:07:47.830] | :  int 0
[08:07:47.830] | signalConditions() ... done
[08:07:47.831] | relayed: [n=2] TRUE, TRUE
[08:07:47.831] | queued futures: [n=2] TRUE, TRUE
[08:07:47.831] signalConditionsASAP(ClusterFuture, pos=2) ... done
[08:07:47.831] value(<ClusterFuture>, ...) ...
[08:07:47.831] value(<ClusterFuture>, ...) ... done
[08:07:47.831] value() for ClusterFuture (<unnamed-2>) ...
[08:07:47.831] | result() for ClusterFuture ...
[08:07:47.831] | : result already collected: FutureResult
[08:07:47.831] | result() for ClusterFuture ... done
[08:07:47.831] | result() for ClusterFuture ...
[08:07:47.831] | : result already collected: FutureResult
[08:07:47.832] | result() for ClusterFuture ... done
[08:07:47.832] | signalConditions() ...
[08:07:47.832] | : include = ‘immediateCondition’
[08:07:47.832] | : exclude = 
[08:07:47.832] | : resignal = FALSE
[08:07:47.832] | : Number of conditions: 0
[08:07:47.832] | :  int 0
[08:07:47.832] | signalConditions() ... done
[08:07:47.833] | check for misuse ...
[08:07:47.833] | check for misuse ... done
[08:07:47.833] value() for ClusterFuture (<unnamed-2>) ... done
[08:07:47.833] value: <integer>
[08:07:47.833] signalConditionsASAP(ClusterFuture, pos=2) ...
[08:07:47.833] | nx: 2
[08:07:47.833] | relay: TRUE
[08:07:47.833] | stdout: TRUE
[08:07:47.833] | signal: TRUE
[08:07:47.833] | resignal: FALSE
[08:07:47.833] | force: TRUE
[08:07:47.834] | relayed: [n=2] TRUE, TRUE
[08:07:47.834] | queued futures: [n=2] TRUE, TRUE
[08:07:47.834] | until=2
[08:07:47.834] | relayed: [n=2] TRUE, TRUE
[08:07:47.834] | queued futures: [n=2] TRUE, TRUE
[08:07:47.834] signalConditionsASAP(ClusterFuture, pos=2) ... done
[08:07:47.834] resolve() for ClusterFuture ...
[08:07:47.834] resolve() for ClusterFuture ... done
[08:07:47.834] length: 0 (resolved future 2)

[08:07:47.835] Relaying remaining futures ...
[08:07:47.835] | signalConditionsASAP(NULL, pos=0) ...
[08:07:47.835] | : nx: 2
[08:07:47.835] | : relay: TRUE
[08:07:47.835] | : stdout: TRUE
[08:07:47.835] | : signal: TRUE
[08:07:47.835] | : resignal: FALSE
[08:07:47.835] | : force: TRUE
[08:07:47.835] | : relayed: [n=2] TRUE, TRUE
[08:07:47.835] | : queued futures: [n=2] TRUE, TRUE
 - flush all
[08:07:47.835] | : relayed: [n=2] TRUE, TRUE
[08:07:47.836] | : queued futures: [n=2] TRUE, TRUE
[08:07:47.836] | signalConditionsASAP(NULL, pos=0) ... done
[08:07:47.836] Relaying remaining futures ... done

Iteration #2
[08:07:48.019] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:48.020] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:07:48.020] | : all.equal() for FutureStrategyList ...
[08:07:48.020] | : . New stack:
[08:07:48.020] | : . List of 1
[08:07:48.020] | : .  $ :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:48.020] | : .     envir = parent.frame())  
[08:07:48.020] | : .   ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:48.020] | : .   ..- attr(*, "init")= logi TRUE
[08:07:48.020] | : .   ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:48.020] | : .     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:48.020] | : .   .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.020] | : .   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.020] | : .   ..- attr(*, "tweaks")=List of 1
[08:07:48.020] | : .   .. ..$ workers:List of 1
[08:07:48.020] | : .   .. .. ..$ :List of 3
[08:07:48.020] | : .   .. .. .. ..$ con : 'sockconn' int 4
[08:07:48.020] | : .   .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:48.020] | : .   .. .. .. ..$ host: chr "localhost"
[08:07:48.020] | : .   .. .. .. ..$ rank: num 0
[08:07:48.020] | : .   .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:48.020] | : .   .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:48.020] | : .   ..- attr(*, "call")= language plan(cluster, workers = cl)
[08:07:48.020] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:48.026] | : . Old stack:
[08:07:48.026] | : . List of 1
[08:07:48.026] | : .  $ :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:48.026] | : .     envir = parent.frame())  
[08:07:48.026] | : .   ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:48.026] | : .   ..- attr(*, "init")= chr "done"
[08:07:48.026] | : .   ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:48.026] | : .     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:48.026] | : .   .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.026] | : .   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.026] | : .   ..- attr(*, "tweaks")=List of 1
[08:07:48.026] | : .   .. ..$ workers:List of 1
[08:07:48.026] | : .   .. .. ..$ :List of 3
[08:07:48.026] | : .   .. .. .. ..$ con : 'sockconn' int 4
[08:07:48.026] | : .   .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:48.026] | : .   .. .. .. ..$ host: chr "localhost"
[08:07:48.026] | : .   .. .. .. ..$ rank: num 0
[08:07:48.026] | : .   .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:48.026] | : .   .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:48.026] | : .   ..- attr(*, "call")= language plan(cluster, workers = cl)
[08:07:48.026] | : .   ..- attr(*, "backend")=Classes 'ClusterFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5586c55a6d18> 
[08:07:48.026] | : .   .. ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:48.026] | : .     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:48.026] | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.026] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:48.032] | : . Not identical
[08:07:48.032] | : . all.equal() for future ...
[08:07:48.032] | : . ' List of 2
[08:07:48.032] | : . '  $ target :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:48.032] | : . '     envir = parent.frame())  
[08:07:48.032] | : . '   ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:48.032] | : . '   ..- attr(*, "init")= logi TRUE
[08:07:48.032] | : . '   ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:48.032] | : . '     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:48.032] | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.032] | : . '   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.032] | : . '   ..- attr(*, "tweaks")=List of 1
[08:07:48.032] | : . '   .. ..$ workers:List of 1
[08:07:48.032] | : . '   .. .. ..$ :List of 3
[08:07:48.032] | : . '   .. .. .. ..$ con : 'sockconn' int 4
[08:07:48.032] | : . '   .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:48.032] | : . '   .. .. .. ..$ host: chr "localhost"
[08:07:48.032] | : . '   .. .. .. ..$ rank: num 0
[08:07:48.032] | : . '   .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:48.032] | : . '   .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:48.032] | : . '   ..- attr(*, "call")= language plan(cluster, workers = cl)
[08:07:48.032] | : . '  $ current:function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:48.032] | : . '     envir = parent.frame())  
[08:07:48.032] | : . '   ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:48.032] | : . '   ..- attr(*, "init")= chr "done"
[08:07:48.032] | : . '   ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:48.032] | : . '     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:48.032] | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.032] | : . '   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.032] | : . '   ..- attr(*, "tweaks")=List of 1
[08:07:48.032] | : . '   .. ..$ workers:List of 1
[08:07:48.032] | : . '   .. .. ..$ :List of 3
[08:07:48.032] | : . '   .. .. .. ..$ con : 'sockconn' int 4
[08:07:48.032] | : . '   .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:48.032] | : . '   .. .. .. ..$ host: chr "localhost"
[08:07:48.032] | : . '   .. .. .. ..$ rank: num 0
[08:07:48.032] | : . '   .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:48.032] | : . '   .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:48.032] | : . '   ..- attr(*, "call")= language plan(cluster, workers = cl)
[08:07:48.032] | : . '   ..- attr(*, "backend")=Classes 'ClusterFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5586c55a6d18> 
[08:07:48.032] | : . '   .. ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:48.032] | : . '     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:48.032] | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.045] | : . ' Formals differ
[08:07:48.045] | : . all.equal() for future ... done
[08:07:48.045] | : . Future strategies differ at level 1
[08:07:48.045] | : all.equal() for FutureStrategyList ... done
[08:07:48.045] | : plan(): Setting new future backend stack:
[08:07:48.045] | : List of future strategies:
[08:07:48.045] | : 1. cluster:
[08:07:48.045] | :    - args: function (..., workers = "<socket cluster with 1 nodes on host ‘localhost’>", envir = parent.frame())
[08:07:48.045] | :    - tweaked: TRUE
[08:07:48.045] | :    - call: plan(cluster, workers = cl)
[08:07:48.046] | : List of 1
[08:07:48.046] | :  $ :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:48.046] | :     envir = parent.frame())  
[08:07:48.046] | :   ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:48.046] | :   ..- attr(*, "init")= logi TRUE
[08:07:48.046] | :   ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:48.046] | :     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:48.046] | :   .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.046] | :   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.046] | :   ..- attr(*, "tweaks")=List of 1
[08:07:48.046] | :   .. ..$ workers:List of 1
[08:07:48.046] | :   .. .. ..$ :List of 3
[08:07:48.046] | :   .. .. .. ..$ con : 'sockconn' int 4
[08:07:48.046] | :   .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:48.046] | :   .. .. .. ..$ host: chr "localhost"
[08:07:48.046] | :   .. .. .. ..$ rank: num 0
[08:07:48.046] | :   .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:48.046] | :   .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:48.046] | :   ..- attr(*, "call")= language plan(cluster, workers = cl)
[08:07:48.046] | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:48.051] | : plan(): plan_cleanup(‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ...
[08:07:48.051] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:48.051] | : . ' Getting current ("next") strategy: ‘FutureStrategy’, ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[08:07:48.051] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:48.052] | : . stopWorkers() for ClusterFutureBackend ...
[08:07:48.052] | : . ' Interrupt active futures ...
[08:07:48.052] | : . ' , Number of futures: 0
[08:07:48.053] | : . ' Interrupt active futures ... done
[08:07:48.053] | : . ' Clear future registry ...
[08:07:48.053] | : . ' Clear future registry ... done
[08:07:48.053] | : . ' Stop cluster workers ...
[08:07:48.053] | : . ' , Stopping existing cluster ...
[08:07:48.053] | : . ' , ; No pre-existing cluster. Skipping
[08:07:48.054] | : . ' , Stopping existing cluster ... done
[08:07:48.054] | : . ' Stop cluster workers ... done
[08:07:48.054] | : . stopWorkers() for ClusterFutureBackend ... done
[08:07:48.054] | : . Legacy shutdown of cluster workers ...
[08:07:48.054] | : . ' Stopping existing cluster ...
[08:07:48.054] | : . ' , No pre-existing cluster. Skipping
[08:07:48.054] | : . ' Stopping existing cluster ... done
[08:07:48.054] | : . Legacy shutdown of cluster workers ... done
[08:07:48.054] | : plan(): plan_cleanup(‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[08:07:48.055] | : plan(): plan_init() of ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ...
[08:07:48.055] | : . function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:48.055] | : .     envir = parent.frame())  
[08:07:48.055] | : .  - attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:48.055] | : .  - attr(*, "init")= logi TRUE
[08:07:48.055] | : .  - attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:48.055] | : .     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:48.055] | : .   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.055] | : .  - attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.055] | : .  - attr(*, "tweaks")=List of 1
[08:07:48.055] | : .   ..$ workers:List of 1
[08:07:48.055] | : .   .. ..$ :List of 3
[08:07:48.055] | : .   .. .. ..$ con : 'sockconn' int 4
[08:07:48.055] | : .   .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:48.055] | : .   .. .. ..$ host: chr "localhost"
[08:07:48.055] | : .   .. .. ..$ rank: num 0
[08:07:48.055] | : .   .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:48.055] | : .   .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:48.055] | : .  - attr(*, "call")= language plan(cluster, workers = cl)
[08:07:48.062] | : . init: TRUE
[08:07:48.062] | : . makeFutureBackend(<tweaked>) ...
[08:07:48.062] | : . ' Backend function: <‘NULL’>
[08:07:48.062] | : . ' Evaluator tweak arguments: [n=1]
[08:07:48.062] | : . ' List of 1
[08:07:48.062] | : . '  $ workers:List of 1
[08:07:48.062] | : . '   ..$ :List of 3
[08:07:48.062] | : . '   .. ..$ con : 'sockconn' int 4
[08:07:48.062] | : . '   .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:48.062] | : . '   .. ..$ host: chr "localhost"
[08:07:48.062] | : . '   .. ..$ rank: num 0
[08:07:48.062] | : . '   .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:48.062] | : . '   ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:48.065] | : . ' Evaluator formal arguments: [n=1]
[08:07:48.065] | : . ' List of 1
[08:07:48.065] | : . '  $ workers:List of 1
[08:07:48.065] | : . '   ..$ :List of 3
[08:07:48.065] | : . '   .. ..$ con : 'sockconn' int 4
[08:07:48.065] | : . '   .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:48.065] | : . '   .. ..$ host: chr "localhost"
[08:07:48.065] | : . '   .. ..$ rank: num 0
[08:07:48.065] | : . '   .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:48.065] | : . '   ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:48.067] | : . ' Backend factory arguments: [n=1]
[08:07:48.068] | : . ' Dotted pair list of 1
[08:07:48.068] | : . '  $ workers:List of 1
[08:07:48.068] | : . '   ..$ :List of 3
[08:07:48.068] | : . '   .. ..$ con : 'sockconn' int 4
[08:07:48.068] | : . '   .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:48.068] | : . '   .. ..$ host: chr "localhost"
[08:07:48.068] | : . '   .. ..$ rank: num 0
[08:07:48.068] | : . '   .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:48.068] | : . '   ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:48.098] | : . ' ClusterFutureBackend(..., persistent = FALSE, gc = TRUE, earlySignal = TRUE) ...
[08:07:48.098] | : . ' , Stopping existing cluster ...
[08:07:48.098] | : . ' , ; No pre-existing cluster. Skipping
[08:07:48.098] | : . ' , Stopping existing cluster ... done
[08:07:48.098] | : . ' , Number of workers: 1
[08:07:48.098] | : . ' , Generated workers UUID
[08:07:48.098] | : . ' , Workers UUID: ‘381ebb526f9eb2d90230a3c7b34be202’
[08:07:48.099] | : . ' ClusterFutureBackend(..., persistent = FALSE, gc = TRUE, earlySignal = TRUE) ... done
[08:07:48.099] | : . ' Backend: <‘ClusterFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:48.099] | : . makeFutureBackend(<tweaked>) ... done
[08:07:48.099] | : plan(): plan_init() of ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ... done
[08:07:48.099] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:48.099] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:48.099] | : plan(): nbrOfWorkers() = 1
[08:07:48.099] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[08:07:48.100] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:48.100] future(..., label = NULL) ...
[08:07:48.100] | lazy: FALSE
[08:07:48.100] | stdout: TRUE
[08:07:48.100] | conditions: [n=1] ‘condition’
[08:07:48.100] | gc: FALSE
[08:07:48.100] | earlySignal: FALSE
[08:07:48.100] | getGlobalsAndPackages() ...
[08:07:48.100] | : Searching for globals ...
[08:07:48.104] | : . globals found: [3] ‘[[’, ‘X’, ‘i’
[08:07:48.104] | : Searching for globals ... done
[08:07:48.104] | : Resolving globals: FALSE
[08:07:48.104] | : Search for packages associated with the globals ...
[08:07:48.104] | : . Packages associated with globals: [1] ‘base’
[08:07:48.105] | : . Packages: [1] ‘base’
[08:07:48.105] | : Search for packages associated with the globals ... done
[08:07:48.105] | : Packages after dropping 'base': [0] 
[08:07:48.105] | : globals: [2] ‘X’, ‘i’
[08:07:48.105] | : packages: [0] 
[08:07:48.105] | getGlobalsAndPackages() ... done
[08:07:48.105] | run() for ‘Future’ (<unnamed-3>) ...
[08:07:48.106] | : state: ‘created’
[08:07:48.106] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:48.106] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:48.106] | : Using ClusterFutureBackend ...
[08:07:48.106] | : . Number of futures since start: 0 (0 created, 0 launched, 0 finished)
[08:07:48.106] | : . Launching futures ...
[08:07:48.106] | : . ' launchFuture() for ClusterFutureBackend ...
[08:07:48.106] | : . ' , Workers: [n=1]
[08:07:48.106] | : . ' , socket cluster with 1 nodes on host ‘localhost’
[08:07:48.107] | : . ' , FutureRegistry: ‘workers-381ebb526f9eb2d90230a3c7b34be202’
[08:07:48.107] | : . ' , requestWorker() ...
[08:07:48.107] | : . ' , ; requestNode() ...
[08:07:48.107] | : . ' , ; ` Number of workers: 1
[08:07:48.107] | : . ' , ; ` Polling for a free worker ...
[08:07:48.107] | : . ' , ; ` | FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[08:07:48.107] | : . ' , ; ` | : Listing all futures
[08:07:48.107] | : . ' , ; ` | : Number of registered futures: 0
[08:07:48.108] | : . ' , ; ` | FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[08:07:48.108] | : . ' , ; ` | Total time: 0
[08:07:48.108] | : . ' , ; ` Polling for a free worker ... done
[08:07:48.108] | : . ' , ; ` FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[08:07:48.108] | : . ' , ; ` | Listing all futures
[08:07:48.108] | : . ' , ; ` | Number of registered futures: 0
[08:07:48.108] | : . ' , ; ` FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[08:07:48.108] | : . ' , ; ` avail: [n=1] ‘1’
[08:07:48.108] | : . ' , ; ` Index of first available worker: 1
[08:07:48.108] | : . ' , ; ` Validate that the worker is functional ...
[08:07:48.162] | : . ' , ; ` | Worker is functional
[08:07:48.162] | : . ' , ; ` | FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[08:07:48.162] | : . ' , ; ` | : Listing all futures
[08:07:48.162] | : . ' , ; ` | : Number of registered futures: 0
[08:07:48.162] | : . ' , ; ` | FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[08:07:48.162] | : . ' , ; ` Validate that the worker is functional ... done
[08:07:48.163] | : . ' , ; requestNode() ... done
[08:07:48.163] | : . ' , ; cluster node index: 1
[08:07:48.163] | : . ' , requestWorker() ... done
[08:07:48.163] | : . ' , eraseGlobalEnvironment() ...
[08:07:48.163] | : . ' , eraseGlobalEnvironment() ... done
[08:07:48.163] | : . ' , launchFuture() ...
[08:07:48.164] | : . ' , ; cluster node index: 1
[08:07:48.164] | : . ' , ; getFutureData() ...
[08:07:48.164] | : . ' , ; ` getFutureCore() ...
[08:07:48.164] | : . ' , ; ` | Packages needed by the future expression (n = 0): <none>
[08:07:48.164] | : . ' , ; ` getFutureCore() ... done
[08:07:48.164] | : . ' , ; ` getFutureCapture() ...
[08:07:48.164] | : . ' , ; ` getFutureCapture() ... done
[08:07:48.164] | : . ' , ; ` getFutureContext() ...
[08:07:48.164] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:48.165] | : . ' , ; ` | : Getting stack without first backend: [n=0] 
[08:07:48.165] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:48.165] | : . ' , ; ` | Packages needed by future backend (n = 0): <none>
[08:07:48.165] | : . ' , ; ` getFutureContext() ... done
[08:07:48.165] | : . ' , ; getFutureData() ... done
[08:07:48.165] | : . ' , ; FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'add', earlySignal = 0) ...
[08:07:48.166] | : . ' , ; ` Appended future to position #1
[08:07:48.166] | : . ' , ; ` Number of registered futures: 1
[08:07:48.166] | : . ' , ; FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'add', earlySignal = 0) ... done
[08:07:48.166] | : . ' , launchFuture() ... done
[08:07:48.166] | : . ' , ClusterFuture started
[08:07:48.166] | : . ' launchFuture() for ClusterFutureBackend ... done
[08:07:48.166] | : . Launching futures ... done
[08:07:48.168] | : . Future launched: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:48.168] | : Using ClusterFutureBackend ... done
[08:07:48.168] | run() for ‘Future’ (<unnamed-3>) ... done
[08:07:48.168] future(..., label = NULL) ... done
[08:07:48.169] future(..., label = NULL) ...
[08:07:48.169] | lazy: FALSE
[08:07:48.169] | stdout: TRUE
[08:07:48.169] | conditions: [n=1] ‘condition’
[08:07:48.169] | gc: FALSE
[08:07:48.169] | earlySignal: FALSE
[08:07:48.169] | getGlobalsAndPackages() ...
[08:07:48.169] | : Searching for globals ...
[08:07:48.173] | : . globals found: [3] ‘[[’, ‘X’, ‘i’
[08:07:48.173] | : Searching for globals ... done
[08:07:48.173] | : Resolving globals: FALSE
[08:07:48.174] | : Search for packages associated with the globals ...
[08:07:48.174] | : . Packages associated with globals: [1] ‘base’
[08:07:48.174] | : . Packages: [1] ‘base’
[08:07:48.174] | : Search for packages associated with the globals ... done
[08:07:48.174] | : Packages after dropping 'base': [0] 
[08:07:48.174] | : globals: [2] ‘X’, ‘i’
[08:07:48.175] | : packages: [0] 
[08:07:48.175] | getGlobalsAndPackages() ... done
[08:07:48.175] | run() for ‘Future’ (<unnamed-4>) ...
[08:07:48.175] | : state: ‘created’
[08:07:48.175] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:48.175] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:48.175] | : Using ClusterFutureBackend ...
[08:07:48.175] | : . Number of futures since start: 1 (1 created, 1 launched, 0 finished)
[08:07:48.176] | : . Launching futures ...
[08:07:48.176] | : . ' launchFuture() for ClusterFutureBackend ...
[08:07:48.176] | : . ' , Workers: [n=1]
[08:07:48.176] | : . ' , socket cluster with 1 nodes on host ‘localhost’
[08:07:48.176] | : . ' , FutureRegistry: ‘workers-381ebb526f9eb2d90230a3c7b34be202’
[08:07:48.176] | : . ' , requestWorker() ...
[08:07:48.176] | : . ' , ; requestNode() ...
[08:07:48.177] | : . ' , ; ` Number of workers: 1
[08:07:48.177] | : . ' , ; ` Polling for a free worker ...
[08:07:48.177] | : . ' , ; ` | FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[08:07:48.177] | : . ' , ; ` | : Listing all futures
[08:07:48.177] | : . ' , ; ` | : Number of registered futures: 1
[08:07:48.177] | : . ' , ; ` | FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[08:07:48.177] | : . ' , ; ` | Poll #1 (0): usedNodes() = 1, workers = 1
[08:07:48.187] | : . ' , ; ` | FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ...
[08:07:48.188] | : . ' , ; ` | : collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ...
[08:07:48.188] | : . ' , ; ` | : . resolved() for ClusterFuture (<unnamed-3>) ...
[08:07:48.188] | : . ' , ; ` | : . ' Cluster node socket connection: index=4, id=190
[08:07:48.188] | : . ' , ; ` | : . ' assertValidConnection() ...
[08:07:48.188] | : . ' , ; ` | : . ' , cluster node index: 1
[08:07:48.189] | : . ' , ; ` | : . ' assertValidConnection() ... done
[08:07:48.199] | : . ' , ; ` | : . ' socketSelect(list(<connection #4 (id=190)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:48.199] | : . ' , ; ` | : . resolved() for ClusterFuture (<unnamed-3>) ... done
[08:07:48.199] | : . ' , ; ` | : . Future at position #1 is not resolved
[08:07:48.200] | : . ' , ; ` | : collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ... done
[08:07:48.200] | : . ' , ; ` | : Indices of futures to drop: [n=0] <none>
[08:07:48.200] | : . ' , ; ` | FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ... done
[08:07:48.200] | : . ' , ; ` | Early signaling of 1 future candidates ...
[08:07:48.200] | : . ' , ; ` | Number of futures with early signaling requested: 0
[08:07:48.200] | : . ' , ; ` | Early signaling of 1 future candidates ... done
[08:07:48.200] | : . ' , ; ` | Number of registered futures: 1
[08:07:48.200] | : . ' , ; ` Polling for a free worker ... done
[08:07:48.200] | : . ' , ; ` FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[08:07:48.201] | : . ' , ; ` | Listing all futures
[08:07:48.201] | : . ' , ; ` | Number of registered futures: 1
[08:07:48.201] | : . ' , ; ` FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[08:07:48.201] | : . ' , ; ` Poll #2 (0.02 secs): usedNodes() = 1, workers = 1
[08:07:48.211] | : . ' , ; ` FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ...
[08:07:48.211] | : . ' , ; ` | collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ...
[08:07:48.212] | : . ' , ; ` | : resolved() for ClusterFuture (<unnamed-3>) ...
[08:07:48.212] | : . ' , ; ` | : . Cluster node socket connection: index=4, id=190
[08:07:48.212] | : . ' , ; ` | : . assertValidConnection() ...
[08:07:48.212] | : . ' , ; ` | : . ' cluster node index: 1
[08:07:48.212] | : . ' , ; ` | : . assertValidConnection() ... done
[08:07:48.223] | : . ' , ; ` | : . socketSelect(list(<connection #4 (id=190)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:48.223] | : . ' , ; ` | : resolved() for ClusterFuture (<unnamed-3>) ... done
[08:07:48.223] | : . ' , ; ` | : Future at position #1 is not resolved
[08:07:48.223] | : . ' , ; ` | collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ... done
[08:07:48.223] | : . ' , ; ` | Indices of futures to drop: [n=0] <none>
[08:07:48.223] | : . ' , ; ` FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ... done
[08:07:48.223] | : . ' , ; ` Early signaling of 1 future candidates ...
[08:07:48.224] | : . ' , ; ` Number of futures with early signaling requested: 0
[08:07:48.224] | : . ' , ; ` Early signaling of 1 future candidates ... done
[08:07:48.224] | : . ' , ; ` Number of registered futures: 1
[08:07:48.224] | : . ' , ; requestNode() ... done
[08:07:48.224] | : . ' , ; FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[08:07:48.224] | : . ' , ; ` Listing all futures
[08:07:48.224] | : . ' , ; ` Number of registered futures: 1
[08:07:48.224] | : . ' , ; FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[08:07:48.224] | : . ' , ; Poll #3 (0.05 secs): usedNodes() = 1, workers = 1
[08:07:48.235] | : . ' , ; FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ...
[08:07:48.235] | : . ' , ; ` collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ...
[08:07:48.235] | : . ' , ; ` | resolved() for ClusterFuture (<unnamed-3>) ...
[08:07:48.236] | : . ' , ; ` | : Cluster node socket connection: index=4, id=190
[08:07:48.236] | : . ' , ; ` | : assertValidConnection() ...
[08:07:48.236] | : . ' , ; ` | : . cluster node index: 1
[08:07:48.236] | : . ' , ; ` | : assertValidConnection() ... done
[08:07:48.246] | : . ' , ; ` | : socketSelect(list(<connection #4 (id=190)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:48.246] | : . ' , ; ` | resolved() for ClusterFuture (<unnamed-3>) ... done
[08:07:48.247] | : . ' , ; ` | Future at position #1 is not resolved
[08:07:48.247] | : . ' , ; ` collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ... done
[08:07:48.247] | : . ' , ; ` Indices of futures to drop: [n=0] <none>
[08:07:48.247] | : . ' , ; FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ... done
[08:07:48.247] | : . ' , ; Early signaling of 1 future candidates ...
[08:07:48.247] | : . ' , ; Number of futures with early signaling requested: 0
[08:07:48.247] | : . ' , ; Early signaling of 1 future candidates ... done
[08:07:48.247] | : . ' , ; Number of registered futures: 1
[08:07:48.247] | : . ' , requestWorker() ... done
[08:07:48.248] | : . ' , FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[08:07:48.248] | : . ' , ; Listing all futures
[08:07:48.248] | : . ' , ; Number of registered futures: 1
[08:07:48.248] | : . ' , FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[08:07:48.248] | : . ' , Poll #4 (0.07 secs): usedNodes() = 1, workers = 1
[08:07:48.259] | : . ' , FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ...
[08:07:48.259] | : . ' , ; collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ...
[08:07:48.259] | : . ' , ; ` resolved() for ClusterFuture (<unnamed-3>) ...
[08:07:48.261] | : . ' , ; ` | Cluster node socket connection: index=4, id=190
[08:07:48.261] | : . ' , ; ` | assertValidConnection() ...
[08:07:48.261] | : . ' , ; ` | : cluster node index: 1
[08:07:48.262] | : . ' , ; ` | assertValidConnection() ... done
[08:07:48.262] | : . ' , ; ` | receiveMessageFromWorker() for ClusterFuture ...
[08:07:48.262] | : . ' , ; ` | : cluster node index: 1
[08:07:48.262] | : . ' , ; ` | : [1] TRUE
[08:07:48.262] | : . ' , ; ` | : received data:
[08:07:48.262] | : . ' , ; ` | : List of 5
[08:07:48.262] | : . ' , ; ` | :  $ type   : chr "VALUE"
[08:07:48.262] | : . ' , ; ` | :  $ value  :List of 16
[08:07:48.262] | : . ' , ; ` | :   ..$ value              : int 1
[08:07:48.262] | : . ' , ; ` | :   ..$ visible            : logi TRUE
[08:07:48.262] | : . ' , ; ` | :   ..$ stdout             : chr ""
[08:07:48.262] | : . ' , ; ` | :   ..$ conditions         : list()
[08:07:48.262] | : . ' , ; ` | :   ..$ rng                : logi FALSE
[08:07:48.262] | : . ' , ; ` | :   ..$ seed               : NULL
[08:07:48.262] | : . ' , ; ` | :   ..$ misuseGlobalEnv    : NULL
[08:07:48.262] | : . ' , ; ` | :   ..$ misuseConnections  :List of 3
[08:07:48.262] | : . ' , ; ` | :   .. ..$ added   : NULL
[08:07:48.262] | : . ' , ; ` | :   .. ..$ removed : NULL
[08:07:48.262] | : . ' , ; ` | :   .. ..$ replaced: NULL
[08:07:48.262] | : . ' , ; ` | :   ..$ misuseDevices      : NULL
[08:07:48.262] | : . ' , ; ` | :   ..$ misuseDefaultDevice: list()
[08:07:48.262] | : . ' , ; ` | :   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:07:48"
[08:07:48.262] | : . ' , ; ` | :   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:07:48"
[08:07:48.262] | : . ' , ; ` | :   ..$ uuid               : chr [1:2] "8301de87e3d0c0a9d4bc2c0c635cd68f" "3"
[08:07:48.262] | : . ' , ; ` | :   ..$ session_uuid       : chr "9bee3dd528bca90e96da6b0df05dfb91"
[08:07:48.262] | : . ' , ; ` | :   .. ..- attr(*, "source")=List of 5
[08:07:48.262] | : . ' , ; ` | :   .. .. ..$ host  : Named chr "285a5f234941"
[08:07:48.262] | : . ' , ; ` | :   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:07:48.262] | : . ' , ; ` | :   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:07:48.262] | : . ' , ; ` | :   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:48.262] | : . ' , ; ` | :   .. .. ..$ pid   : int 67188
[08:07:48.262] | : . ' , ; ` | :   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:07:48"
[08:07:48.262] | : . ' , ; ` | :   .. .. ..$ random: int 2147483647
[08:07:48.262] | : . ' , ; ` | :   ..$ r_info             :List of 4
[08:07:48.262] | : . ' , ; ` | :   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:07:48.262] | : . ' , ; ` | :   .. .. ..$ : int [1:3] 4 5 0
[08:07:48.262] | : . ' , ; ` | :   .. ..$ os           : chr "unix"
[08:07:48.262] | : . ' , ; ` | :   .. ..$ os_name      : chr "Linux"
[08:07:48.262] | : . ' , ; ` | :   .. ..$ captures_utf8: logi TRUE
[08:07:48.262] | : . ' , ; ` | :   ..$ version            : chr "1.8"
[08:07:48.262] | : . ' , ; ` | :   ..- attr(*, "class")= chr "FutureResult"
[08:07:48.262] | : . ' , ; ` | :  $ success: logi TRUE
[08:07:48.262] | : . ' , ; ` | :  $ time   : 'proc_time' Named num [1:5] 0.046 0.002 0.047 0 0
[08:07:48.262] | : . ' , ; ` | :   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:07:48.262] | : . ' , ; ` | :  $ tag    : NULL
[08:07:48.274] | : . ' , ; ` | : Received FutureResult
[08:07:48.274] | : . ' , ; ` | : FutureResult:
[08:07:48.274] | : . ' , ; ` | : value: ‘integer’
[08:07:48.274] | : . ' , ; ` | : visible: TRUE
[08:07:48.274] | : . ' , ; ` | : stdout: character
[08:07:48.274] | : . ' , ; ` | : conditions: [n = 0] 
[08:07:48.274] | : . ' , ; ` | : RNG used: FALSE
[08:07:48.274] | : . ' , ; ` | : duration: 0.04595423 secs (started 2025-06-17 08:07:48.207457)
[08:07:48.274] | : . ' , ; ` | : version: 1.8
[08:07:48.274] | : . ' , ; ` | : FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'remove', earlySignal = 0) ...
[08:07:48.274] | : . ' , ; ` | : . Removed future from position #1
[08:07:48.275] | : . ' , ; ` | : . Number of registered futures: 0
[08:07:48.275] | : . ' , ; ` | : FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'remove', earlySignal = 0) ... done
[08:07:48.275] | : . ' , ; ` | : Erased future from future backend
[08:07:48.275] | : . ' , ; ` | : result() for ClusterFuture ...
[08:07:48.275] | : . ' , ; ` | : . result already collected: FutureResult
[08:07:48.275] | : . ' , ; ` | : result() for ClusterFuture ... done
[08:07:48.275] | : . ' , ; ` | : signalConditions() ...
[08:07:48.275] | : . ' , ; ` | : . include = ‘immediateCondition’
[08:07:48.275] | : . ' , ; ` | : . exclude = 
[08:07:48.276] | : . ' , ; ` | : . resignal = FALSE
[08:07:48.276] | : . ' , ; ` | : . Number of conditions: 0
[08:07:48.276] | : . ' , ; ` | : .  int 0
[08:07:48.276] | : . ' , ; ` | : signalConditions() ... done
[08:07:48.276] | : . ' , ; ` | receiveMessageFromWorker() for ClusterFuture ... done
[08:07:48.276] | : . ' , ; ` | receiveMessageFromWorker() returned object of class FutureResult; resolved
[08:07:48.276] | : . ' , ; ` resolved() for ClusterFuture (<unnamed-3>) ... done
[08:07:48.277] | : . ' , ; ` assertFutureResult() ...
[08:07:48.277] | : . ' , ; ` | Future uuid: 8301de87e3d0c0a9d4bc2c0c635cd68f[08:07:48.277] | : . ' , ; ` | Future uuid: 3
[08:07:48.277] | : . ' , ; ` | identical; success
[08:07:48.277] | : . ' , ; ` assertFutureResult() ... done
[08:07:48.277] | : . ' , ; ` Future at position #1 is resolved ...
[08:07:48.277] | : . ' , ; ` | value() for ClusterFuture (<unnamed-3>) ...
[08:07:48.277] | : . ' , ; ` | : result() for ClusterFuture ...
[08:07:48.277] | : . ' , ; ` | : . result already collected: FutureResult
[08:07:48.277] | : . ' , ; ` | : result() for ClusterFuture ... done
[08:07:48.277] | : . ' , ; ` | : result() for ClusterFuture ...
[08:07:48.278] | : . ' , ; ` | : . result already collected: FutureResult
[08:07:48.278] | : . ' , ; ` | : result() for ClusterFuture ... done
[08:07:48.278] | : . ' , ; ` | : signalConditions() ...
[08:07:48.278] | : . ' , ; ` | : . include = ‘immediateCondition’
[08:07:48.278] | : . ' , ; ` | : . exclude = 
[08:07:48.278] | : . ' , ; ` | : . resignal = FALSE
[08:07:48.278] | : . ' , ; ` | : . Number of conditions: 0
[08:07:48.278] | : . ' , ; ` | : .  int 0
[08:07:48.279] | : . ' , ; ` | : signalConditions() ... done
[08:07:48.280] | : . ' , ; ` | : check for misuse ...
[08:07:48.281] | : . ' , ; ` | : check for misuse ... done
[08:07:48.281] | : . ' , ; ` | value() for ClusterFuture (<unnamed-3>) ... done
[08:07:48.281] | : . ' , ; ` Future at position #1 is resolved ... done
[08:07:48.281] | : . ' , ; collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ... done
[08:07:48.281] | : . ' , ; Remove collected futures ...
[08:07:48.281] | : . ' , ; ` Indices of futures to drop: [n=1] ‘1’
[08:07:48.281] | : . ' , ; Remove collected futures ... done
[08:07:48.281] | : . ' , FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ... done
[08:07:48.282] | : . ' , Early signaling of 1 future candidates ...
[08:07:48.282] | : . ' , Number of futures with early signaling requested: 0
[08:07:48.282] | : . ' , Early signaling of 1 future candidates ... done
[08:07:48.282] | : . ' , Number of registered futures: 1
[08:07:48.282] | : . ' launchFuture() for ClusterFutureBackend ... done
[08:07:48.282] | : . ' FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[08:07:48.282] | : . ' , Listing all futures
[08:07:48.282] | : . ' , Number of registered futures: 0
[08:07:48.282] | : . ' FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[08:07:48.282] | : . ' Total time: 0.10527515411377
[08:07:48.283] | : . Launching futures ... done
[08:07:48.283] | : . FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[08:07:48.283] | : . ' Listing all futures
[08:07:48.283] | : . ' Number of registered futures: 0
[08:07:48.283] | : . FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[08:07:48.283] | : . avail: [n=1] ‘1’
[08:07:48.283] | : . Index of first available worker: 1
[08:07:48.283] | : . Validate that the worker is functional ...
[08:07:48.325] | : . ' Worker is functional
[08:07:48.325] | : . ' FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[08:07:48.325] | : . ' , Listing all futures
[08:07:48.325] | : . ' , Number of registered futures: 0
[08:07:48.326] | : . ' FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[08:07:48.326] | : . Validate that the worker is functional ... done
[08:07:48.326] | : Using ClusterFutureBackend ... done
[08:07:48.326] | : cluster node index: 1
[08:07:48.326] | run() for ‘Future’ (<unnamed-4>) ... done
[08:07:48.326] | eraseGlobalEnvironment() ...
[08:07:48.327] | eraseGlobalEnvironment() ... done
[08:07:48.327] | launchFuture() ...
[08:07:48.327] | : cluster node index: 1
[08:07:48.327] | : getFutureData() ...
[08:07:48.327] | : . getFutureCore() ...
[08:07:48.327] | : . ' Packages needed by the future expression (n = 0): <none>
[08:07:48.327] | : . getFutureCore() ... done
[08:07:48.327] | : . getFutureCapture() ...
[08:07:48.327] | : . getFutureCapture() ... done
[08:07:48.328] | : . getFutureContext() ...
[08:07:48.328] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:48.328] | : . ' , Getting stack without first backend: [n=0] 
[08:07:48.328] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:48.328] | : . ' Packages needed by future backend (n = 0): <none>
[08:07:48.328] | : . getFutureContext() ... done
[08:07:48.328] | : getFutureData() ... done
[08:07:48.329] | : FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'add', earlySignal = 0) ...
[08:07:48.329] | : . Appended future to position #1
[08:07:48.329] | : . Number of registered futures: 1
[08:07:48.329] | : FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'add', earlySignal = 0) ... done
[08:07:48.329] | launchFuture() ... done
[08:07:48.329] | ClusterFuture started
[08:07:48.330] future(..., label = NULL) ... done

[08:07:48.330] Future launched: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’



[08:07:48.330] value() for list ...
[08:07:48.330] | recursive: 0
[08:07:48.330] | reduce: FALSE
[08:07:48.331] | length: 2

[08:07:48.331] | Number of remaining objects: 2
[08:07:48.331] | checking value #1:
[08:07:48.331] | 'obj' is ClusterFuture
[08:07:48.331] | ClusterFuture #1
[08:07:48.331] | signalConditionsASAP(ClusterFuture, pos=1) ...
[08:07:48.331] | : nx: 2
[08:07:48.331] | : relay: TRUE
[08:07:48.331] | : stdout: TRUE
[08:07:48.332] | : signal: TRUE
[08:07:48.332] | : resignal: FALSE
[08:07:48.332] | : force: TRUE
[08:07:48.332] | : relayed: [n=2] FALSE, FALSE
[08:07:48.332] | : queued futures: [n=2] FALSE, FALSE
[08:07:48.332] | : until=1
[08:07:48.332] | : relaying element #1
[08:07:48.332] | : value() for ClusterFuture (<unnamed-3>) ...
[08:07:48.332] | : . result() for ClusterFuture ...
[08:07:48.332] | : . ' result already collected: FutureResult
[08:07:48.333] | : . result() for ClusterFuture ... done
[08:07:48.333] | : . result() for ClusterFuture ...
[08:07:48.333] | : . ' result already collected: FutureResult
[08:07:48.333] | : . result() for ClusterFuture ... done
[08:07:48.333] | : . signalConditions() ...
[08:07:48.333] | : . ' include = ‘immediateCondition’
[08:07:48.333] | : . ' exclude = 
[08:07:48.333] | : . ' resignal = FALSE
[08:07:48.333] | : . ' Number of conditions: 0
[08:07:48.333] | : . '  int 0
[08:07:48.334] | : . signalConditions() ... done
[08:07:48.334] | : . relay stdout ...
[08:07:48.334] | : . relay stdout ... done
[08:07:48.334] | : . check for misuse ...
[08:07:48.334] | : . check for misuse ... done
[08:07:48.335] | : value() for ClusterFuture (<unnamed-3>) ... done
[08:07:48.335] | : result() for ClusterFuture ...
[08:07:48.335] | : . result already collected: FutureResult
[08:07:48.335] | : result() for ClusterFuture ... done
[08:07:48.335] | : signalConditions() ...
[08:07:48.335] | : . include = ‘immediateCondition’
[08:07:48.335] | : . exclude = 
[08:07:48.335] | : . resignal = FALSE
[08:07:48.335] | : . Number of conditions: 0
[08:07:48.336] | : .  int 0
[08:07:48.336] | : signalConditions() ... done
[08:07:48.336] | : result() for ClusterFuture ...
[08:07:48.336] | : . result already collected: FutureResult
[08:07:48.336] | : result() for ClusterFuture ... done
[08:07:48.336] | : signalConditions() ...
[08:07:48.336] | : . include = ‘condition’
[08:07:48.337] | : . exclude = ‘error’, ‘immediateCondition’
[08:07:48.337] | : . resignal = TRUE
[08:07:48.337] | : . Number of conditions: 0
[08:07:48.337] | : .  int 0
[08:07:48.337] | : signalConditions() ... done
[08:07:48.337] | : relayed: [n=2] TRUE, FALSE
[08:07:48.338] | : queued futures: [n=2] TRUE, FALSE
[08:07:48.338] | signalConditionsASAP(ClusterFuture, pos=1) ... done
[08:07:48.338] | value(<ClusterFuture>, ...) ...
[08:07:48.338] | value(<ClusterFuture>, ...) ... done
[08:07:48.338] | value() for ClusterFuture (<unnamed-3>) ...
[08:07:48.338] | : result() for ClusterFuture ...
[08:07:48.338] | : . result already collected: FutureResult
[08:07:48.338] | : result() for ClusterFuture ... done
[08:07:48.338] | : result() for ClusterFuture ...
[08:07:48.339] | : . result already collected: FutureResult
[08:07:48.339] | : result() for ClusterFuture ... done
[08:07:48.339] | : signalConditions() ...
[08:07:48.339] | : . include = ‘immediateCondition’
[08:07:48.339] | : . exclude = 
[08:07:48.339] | : . resignal = FALSE
[08:07:48.339] | : . Number of conditions: 0
[08:07:48.339] | : .  int 0
[08:07:48.340] | : signalConditions() ... done
[08:07:48.340] | : check for misuse ...
[08:07:48.340] | : check for misuse ... done
[08:07:48.340] | value() for ClusterFuture (<unnamed-3>) ... done
[08:07:48.340] | value: <integer>
[08:07:48.340] | signalConditionsASAP(ClusterFuture, pos=1) ...
[08:07:48.340] | : nx: 2
[08:07:48.340] | : relay: TRUE
[08:07:48.341] | : stdout: TRUE
[08:07:48.341] | : signal: TRUE
[08:07:48.341] | : resignal: FALSE
[08:07:48.341] | : force: TRUE
[08:07:48.341] | : relayed: [n=2] TRUE, FALSE
[08:07:48.341] | : queued futures: [n=2] TRUE, FALSE
[08:07:48.341] | : until=2
[08:07:48.341] | : relaying element #2
[08:07:48.343] | : relayed: [n=2] TRUE, FALSE
[08:07:48.343] | : queued futures: [n=2] TRUE, FALSE
[08:07:48.344] | signalConditionsASAP(ClusterFuture, pos=1) ... done
[08:07:48.344] | resolve() for ClusterFuture ...
[08:07:48.344] | resolve() for ClusterFuture ... done
[08:07:48.344] | length: 1 (resolved future 1)
[08:07:48.344] value() for list ... done
[08:07:48.344] checking value #2:
[08:07:48.344] 'obj' is ClusterFuture
[08:07:48.344] resolved() for ClusterFuture (<unnamed-4>) ...
[08:07:48.345] | Cluster node socket connection: index=4, id=190
[08:07:48.345] | assertValidConnection() ...
[08:07:48.345] | : cluster node index: 1
[08:07:48.345] | assertValidConnection() ... done
[08:07:48.355] | socketSelect(list(<connection #4 (id=190)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:48.356] resolved() for ClusterFuture (<unnamed-4>) ... done
[08:07:48.366] Number of remaining objects: 1
[08:07:48.366] checking value #2:
[08:07:48.366] 'obj' is ClusterFuture
[08:07:48.366] resolved() for ClusterFuture (<unnamed-4>) ...
[08:07:48.367] | Cluster node socket connection: index=4, id=190
[08:07:48.367] | assertValidConnection() ...
[08:07:48.367] | : cluster node index: 1
[08:07:48.367] | assertValidConnection() ... done
[08:07:48.373] | receiveMessageFromWorker() for ClusterFuture ...
[08:07:48.373] | : cluster node index: 1
[08:07:48.374] | : [1] TRUE
[08:07:48.374] | : received data:
[08:07:48.374] | : List of 5
[08:07:48.374] | :  $ type   : chr "VALUE"
[08:07:48.374] | :  $ value  :List of 16
[08:07:48.374] | :   ..$ value              : int 2
[08:07:48.374] | :   ..$ visible            : logi TRUE
[08:07:48.374] | :   ..$ stdout             : chr ""
[08:07:48.374] | :   ..$ conditions         : list()
[08:07:48.374] | :   ..$ rng                : logi FALSE
[08:07:48.374] | :   ..$ seed               : NULL
[08:07:48.374] | :   ..$ misuseGlobalEnv    : NULL
[08:07:48.374] | :   ..$ misuseConnections  :List of 3
[08:07:48.374] | :   .. ..$ added   : NULL
[08:07:48.374] | :   .. ..$ removed : NULL
[08:07:48.374] | :   .. ..$ replaced: NULL
[08:07:48.374] | :   ..$ misuseDevices      : NULL
[08:07:48.374] | :   ..$ misuseDefaultDevice: list()
[08:07:48.374] | :   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:07:48"
[08:07:48.374] | :   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:07:48"
[08:07:48.374] | :   ..$ uuid               : chr [1:2] "8301de87e3d0c0a9d4bc2c0c635cd68f" "4"
[08:07:48.374] | :   ..$ session_uuid       : chr "9bee3dd528bca90e96da6b0df05dfb91"
[08:07:48.374] | :   .. ..- attr(*, "source")=List of 5
[08:07:48.374] | :   .. .. ..$ host  : Named chr "285a5f234941"
[08:07:48.374] | :   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:07:48.374] | :   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:07:48.374] | :   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:48.374] | :   .. .. ..$ pid   : int 67188
[08:07:48.374] | :   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:07:48"
[08:07:48.374] | :   .. .. ..$ random: int 2147483647
[08:07:48.374] | :   ..$ r_info             :List of 4
[08:07:48.374] | :   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:07:48.374] | :   .. .. ..$ : int [1:3] 4 5 0
[08:07:48.374] | :   .. ..$ os           : chr "unix"
[08:07:48.374] | :   .. ..$ os_name      : chr "Linux"
[08:07:48.374] | :   .. ..$ captures_utf8: logi TRUE
[08:07:48.374] | :   ..$ version            : chr "1.8"
[08:07:48.374] | :   ..- attr(*, "class")= chr "FutureResult"
[08:07:48.374] | :  $ success: logi TRUE
[08:07:48.374] | :  $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[08:07:48.374] | :   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:07:48.374] | :  $ tag    : NULL
[08:07:48.385] | : Received FutureResult
[08:07:48.385] | : FutureResult:
[08:07:48.385] | : value: ‘integer’
[08:07:48.385] | : visible: TRUE
[08:07:48.385] | : stdout: character
[08:07:48.385] | : conditions: [n = 0] 
[08:07:48.385] | : RNG used: FALSE
[08:07:48.385] | : duration: 0.002664566 secs (started 2025-06-17 08:07:48.370607)
[08:07:48.385] | : version: 1.8
[08:07:48.386] | : FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'remove', earlySignal = 0) ...
[08:07:48.386] | : . Removed future from position #1
[08:07:48.386] | : . Number of registered futures: 0
[08:07:48.386] | : FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'remove', earlySignal = 0) ... done
[08:07:48.386] | : Erased future from future backend
[08:07:48.386] | : result() for ClusterFuture ...
[08:07:48.387] | : . result already collected: FutureResult
[08:07:48.387] | : result() for ClusterFuture ... done
[08:07:48.387] | : signalConditions() ...
[08:07:48.387] | : . include = ‘immediateCondition’
[08:07:48.387] | : . exclude = 
[08:07:48.387] | : . resignal = FALSE
[08:07:48.387] | : . Number of conditions: 0
[08:07:48.387] | : .  int 0
[08:07:48.390] | : signalConditions() ... done
[08:07:48.390] | receiveMessageFromWorker() for ClusterFuture ... done
[08:07:48.390] | receiveMessageFromWorker() returned object of class FutureResult; resolved
[08:07:48.390] resolved() for ClusterFuture (<unnamed-4>) ... done
[08:07:48.390] assertFutureResult() ...
[08:07:48.390] | Future uuid: 8301de87e3d0c0a9d4bc2c0c635cd68f[08:07:48.390] | Future uuid: 4
[08:07:48.390] | identical; success
[08:07:48.390] assertFutureResult() ... done
[08:07:48.390] ClusterFuture #2
[08:07:48.390] signalConditionsASAP(ClusterFuture, pos=2) ...
[08:07:48.391] | nx: 2
[08:07:48.391] | relay: TRUE
[08:07:48.391] | stdout: TRUE
[08:07:48.391] | signal: TRUE
[08:07:48.391] | resignal: FALSE
[08:07:48.391] | force: TRUE
[08:07:48.391] | relayed: [n=2] TRUE, FALSE
[08:07:48.391] | queued futures: [n=2] TRUE, FALSE
[08:07:48.391] | until=2
[08:07:48.391] | relaying element #2
[08:07:48.392] | value() for ClusterFuture (<unnamed-4>) ...
[08:07:48.392] | : result() for ClusterFuture ...
[08:07:48.392] | : . result already collected: FutureResult
[08:07:48.392] | : result() for ClusterFuture ... done
[08:07:48.392] | : result() for ClusterFuture ...
[08:07:48.392] | : . result already collected: FutureResult
[08:07:48.392] | : result() for ClusterFuture ... done
[08:07:48.392] | : signalConditions() ...
[08:07:48.392] | : . include = ‘immediateCondition’
[08:07:48.392] | : . exclude = 
[08:07:48.393] | : . resignal = FALSE
[08:07:48.393] | : . Number of conditions: 0
[08:07:48.393] | : .  int 0
[08:07:48.393] | : signalConditions() ... done
[08:07:48.393] | : relay stdout ...
[08:07:48.393] | : relay stdout ... done
[08:07:48.393] | : check for misuse ...
[08:07:48.394] | : check for misuse ... done
[08:07:48.394] | value() for ClusterFuture (<unnamed-4>) ... done
[08:07:48.394] | result() for ClusterFuture ...
[08:07:48.394] | : result already collected: FutureResult
[08:07:48.394] | result() for ClusterFuture ... done
[08:07:48.394] | signalConditions() ...
[08:07:48.394] | : include = ‘immediateCondition’
[08:07:48.394] | : exclude = 
[08:07:48.394] | : resignal = FALSE
[08:07:48.394] | : Number of conditions: 0
[08:07:48.395] | :  int 0
[08:07:48.395] | signalConditions() ... done
[08:07:48.395] | result() for ClusterFuture ...
[08:07:48.395] | : result already collected: FutureResult
[08:07:48.395] | result() for ClusterFuture ... done
[08:07:48.395] | signalConditions() ...
[08:07:48.395] | : include = ‘condition’
[08:07:48.396] | : exclude = ‘error’, ‘immediateCondition’
[08:07:48.396] | : resignal = TRUE
[08:07:48.396] | : Number of conditions: 0
[08:07:48.396] | :  int 0
[08:07:48.396] | signalConditions() ... done
[08:07:48.396] | relayed: [n=2] TRUE, TRUE
[08:07:48.396] | queued futures: [n=2] TRUE, TRUE
[08:07:48.397] signalConditionsASAP(ClusterFuture, pos=2) ... done
[08:07:48.397] value(<ClusterFuture>, ...) ...
[08:07:48.397] value(<ClusterFuture>, ...) ... done
[08:07:48.397] value() for ClusterFuture (<unnamed-4>) ...
[08:07:48.397] | result() for ClusterFuture ...
[08:07:48.397] | : result already collected: FutureResult
[08:07:48.397] | result() for ClusterFuture ... done
[08:07:48.397] | result() for ClusterFuture ...
[08:07:48.397] | : result already collected: FutureResult
[08:07:48.397] | result() for ClusterFuture ... done
[08:07:48.397] | signalConditions() ...
[08:07:48.398] | : include = ‘immediateCondition’
[08:07:48.398] | : exclude = 
[08:07:48.398] | : resignal = FALSE
[08:07:48.398] | : Number of conditions: 0
[08:07:48.398] | :  int 0
[08:07:48.398] | signalConditions() ... done
[08:07:48.398] | check for misuse ...
[08:07:48.399] | check for misuse ... done
[08:07:48.399] value() for ClusterFuture (<unnamed-4>) ... done
[08:07:48.399] value: <integer>
[08:07:48.399] signalConditionsASAP(ClusterFuture, pos=2) ...
[08:07:48.399] | nx: 2
[08:07:48.399] | relay: TRUE
[08:07:48.399] | stdout: TRUE
[08:07:48.399] | signal: TRUE
[08:07:48.399] | resignal: FALSE
[08:07:48.399] | force: TRUE
[08:07:48.399] | relayed: [n=2] TRUE, TRUE
[08:07:48.400] | queued futures: [n=2] TRUE, TRUE
[08:07:48.400] | until=2
[08:07:48.400] | relayed: [n=2] TRUE, TRUE
[08:07:48.400] | queued futures: [n=2] TRUE, TRUE
[08:07:48.400] signalConditionsASAP(ClusterFuture, pos=2) ... done
[08:07:48.400] resolve() for ClusterFuture ...
[08:07:48.400] resolve() for ClusterFuture ... done
[08:07:48.400] length: 0 (resolved future 2)

[08:07:48.400] Relaying remaining futures ...
[08:07:48.401] | signalConditionsASAP(NULL, pos=0) ...
[08:07:48.401] | : nx: 2
[08:07:48.401] | : relay: TRUE
[08:07:48.401] | : stdout: TRUE
[08:07:48.401] | : signal: TRUE
[08:07:48.401] | : resignal: FALSE
[08:07:48.401] | : force: TRUE
[08:07:48.401] | : relayed: [n=2] TRUE, TRUE
[08:07:48.401] | : queued futures: [n=2] TRUE, TRUE
 - flush all
[08:07:48.401] | : relayed: [n=2] TRUE, TRUE
[08:07:48.402] | : queued futures: [n=2] TRUE, TRUE
[08:07:48.402] | signalConditionsASAP(NULL, pos=0) ... done
[08:07:48.402] Relaying remaining futures ... done

Iteration #3
[08:07:48.583] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:48.583] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:07:48.584] | : all.equal() for FutureStrategyList ...
[08:07:48.584] | : . New stack:
[08:07:48.584] | : . List of 1
[08:07:48.584] | : .  $ :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:48.584] | : .     envir = parent.frame())  
[08:07:48.584] | : .   ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:48.584] | : .   ..- attr(*, "init")= logi TRUE
[08:07:48.584] | : .   ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:48.584] | : .     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:48.584] | : .   .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.584] | : .   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.584] | : .   ..- attr(*, "tweaks")=List of 1
[08:07:48.584] | : .   .. ..$ workers:List of 1
[08:07:48.584] | : .   .. .. ..$ :List of 3
[08:07:48.584] | : .   .. .. .. ..$ con : 'sockconn' int 4
[08:07:48.584] | : .   .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:48.584] | : .   .. .. .. ..$ host: chr "localhost"
[08:07:48.584] | : .   .. .. .. ..$ rank: num 0
[08:07:48.584] | : .   .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:48.584] | : .   .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:48.584] | : .   ..- attr(*, "call")= language plan(cluster, workers = cl)
[08:07:48.584] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:48.621] | : . Old stack:
[08:07:48.621] | : . List of 1
[08:07:48.621] | : .  $ :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:48.621] | : .     envir = parent.frame())  
[08:07:48.621] | : .   ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:48.621] | : .   ..- attr(*, "init")= chr "done"
[08:07:48.621] | : .   ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:48.621] | : .     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:48.621] | : .   .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.621] | : .   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.621] | : .   ..- attr(*, "tweaks")=List of 1
[08:07:48.621] | : .   .. ..$ workers:List of 1
[08:07:48.621] | : .   .. .. ..$ :List of 3
[08:07:48.621] | : .   .. .. .. ..$ con : 'sockconn' int 4
[08:07:48.621] | : .   .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:48.621] | : .   .. .. .. ..$ host: chr "localhost"
[08:07:48.621] | : .   .. .. .. ..$ rank: num 0
[08:07:48.621] | : .   .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:48.621] | : .   .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:48.621] | : .   ..- attr(*, "call")= language plan(cluster, workers = cl)
[08:07:48.621] | : .   ..- attr(*, "backend")=Classes 'ClusterFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5586c4078e90> 
[08:07:48.621] | : .   .. ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:48.621] | : .     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:48.621] | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.621] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:48.627] | : . Not identical
[08:07:48.627] | : . all.equal() for future ...
[08:07:48.627] | : . ' List of 2
[08:07:48.627] | : . '  $ target :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:48.627] | : . '     envir = parent.frame())  
[08:07:48.627] | : . '   ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:48.627] | : . '   ..- attr(*, "init")= logi TRUE
[08:07:48.627] | : . '   ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:48.627] | : . '     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:48.627] | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.627] | : . '   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.627] | : . '   ..- attr(*, "tweaks")=List of 1
[08:07:48.627] | : . '   .. ..$ workers:List of 1
[08:07:48.627] | : . '   .. .. ..$ :List of 3
[08:07:48.627] | : . '   .. .. .. ..$ con : 'sockconn' int 4
[08:07:48.627] | : . '   .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:48.627] | : . '   .. .. .. ..$ host: chr "localhost"
[08:07:48.627] | : . '   .. .. .. ..$ rank: num 0
[08:07:48.627] | : . '   .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:48.627] | : . '   .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:48.627] | : . '   ..- attr(*, "call")= language plan(cluster, workers = cl)
[08:07:48.627] | : . '  $ current:function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:48.627] | : . '     envir = parent.frame())  
[08:07:48.627] | : . '   ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:48.627] | : . '   ..- attr(*, "init")= chr "done"
[08:07:48.627] | : . '   ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:48.627] | : . '     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:48.627] | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.627] | : . '   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.627] | : . '   ..- attr(*, "tweaks")=List of 1
[08:07:48.627] | : . '   .. ..$ workers:List of 1
[08:07:48.627] | : . '   .. .. ..$ :List of 3
[08:07:48.627] | : . '   .. .. .. ..$ con : 'sockconn' int 4
[08:07:48.627] | : . '   .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:48.627] | : . '   .. .. .. ..$ host: chr "localhost"
[08:07:48.627] | : . '   .. .. .. ..$ rank: num 0
[08:07:48.627] | : . '   .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:48.627] | : . '   .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:48.627] | : . '   ..- attr(*, "call")= language plan(cluster, workers = cl)
[08:07:48.627] | : . '   ..- attr(*, "backend")=Classes 'ClusterFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5586c4078e90> 
[08:07:48.627] | : . '   .. ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:48.627] | : . '     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:48.627] | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.637] | : . ' Formals differ
[08:07:48.637] | : . all.equal() for future ... done
[08:07:48.637] | : . Future strategies differ at level 1
[08:07:48.638] | : all.equal() for FutureStrategyList ... done
[08:07:48.638] | : plan(): Setting new future backend stack:
[08:07:48.638] | : List of future strategies:
[08:07:48.638] | : 1. cluster:
[08:07:48.638] | :    - args: function (..., workers = "<socket cluster with 1 nodes on host ‘localhost’>", envir = parent.frame())
[08:07:48.638] | :    - tweaked: TRUE
[08:07:48.638] | :    - call: plan(cluster, workers = cl)
[08:07:48.639] | : List of 1
[08:07:48.639] | :  $ :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:48.639] | :     envir = parent.frame())  
[08:07:48.639] | :   ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:48.639] | :   ..- attr(*, "init")= logi TRUE
[08:07:48.639] | :   ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:48.639] | :     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:48.639] | :   .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.639] | :   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.639] | :   ..- attr(*, "tweaks")=List of 1
[08:07:48.639] | :   .. ..$ workers:List of 1
[08:07:48.639] | :   .. .. ..$ :List of 3
[08:07:48.639] | :   .. .. .. ..$ con : 'sockconn' int 4
[08:07:48.639] | :   .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:48.639] | :   .. .. .. ..$ host: chr "localhost"
[08:07:48.639] | :   .. .. .. ..$ rank: num 0
[08:07:48.639] | :   .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:48.639] | :   .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:48.639] | :   ..- attr(*, "call")= language plan(cluster, workers = cl)
[08:07:48.639] | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:48.644] | : plan(): plan_cleanup(‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ...
[08:07:48.644] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:48.644] | : . ' Getting current ("next") strategy: ‘FutureStrategy’, ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[08:07:48.644] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:48.644] | : . stopWorkers() for ClusterFutureBackend ...
[08:07:48.644] | : . ' Interrupt active futures ...
[08:07:48.645] | : . ' , Number of futures: 0
[08:07:48.645] | : . ' Interrupt active futures ... done
[08:07:48.645] | : . ' Clear future registry ...
[08:07:48.645] | : . ' Clear future registry ... done
[08:07:48.645] | : . ' Stop cluster workers ...
[08:07:48.646] | : . ' , Stopping existing cluster ...
[08:07:48.646] | : . ' , ; No pre-existing cluster. Skipping
[08:07:48.646] | : . ' , Stopping existing cluster ... done
[08:07:48.646] | : . ' Stop cluster workers ... done
[08:07:48.646] | : . stopWorkers() for ClusterFutureBackend ... done
[08:07:48.646] | : . Legacy shutdown of cluster workers ...
[08:07:48.646] | : . ' Stopping existing cluster ...
[08:07:48.646] | : . ' , No pre-existing cluster. Skipping
[08:07:48.646] | : . ' Stopping existing cluster ... done
[08:07:48.646] | : . Legacy shutdown of cluster workers ... done
[08:07:48.646] | : plan(): plan_cleanup(‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[08:07:48.647] | : plan(): plan_init() of ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ...
[08:07:48.647] | : . function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:48.647] | : .     envir = parent.frame())  
[08:07:48.647] | : .  - attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:48.647] | : .  - attr(*, "init")= logi TRUE
[08:07:48.647] | : .  - attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:48.647] | : .     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:48.647] | : .   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.647] | : .  - attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.647] | : .  - attr(*, "tweaks")=List of 1
[08:07:48.647] | : .   ..$ workers:List of 1
[08:07:48.647] | : .   .. ..$ :List of 3
[08:07:48.647] | : .   .. .. ..$ con : 'sockconn' int 4
[08:07:48.647] | : .   .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:48.647] | : .   .. .. ..$ host: chr "localhost"
[08:07:48.647] | : .   .. .. ..$ rank: num 0
[08:07:48.647] | : .   .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:48.647] | : .   .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:48.647] | : .  - attr(*, "call")= language plan(cluster, workers = cl)
[08:07:48.651] | : . init: TRUE
[08:07:48.651] | : . makeFutureBackend(<tweaked>) ...
[08:07:48.651] | : . ' Backend function: <‘NULL’>
[08:07:48.651] | : . ' Evaluator tweak arguments: [n=1]
[08:07:48.651] | : . ' List of 1
[08:07:48.651] | : . '  $ workers:List of 1
[08:07:48.651] | : . '   ..$ :List of 3
[08:07:48.651] | : . '   .. ..$ con : 'sockconn' int 4
[08:07:48.651] | : . '   .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:48.651] | : . '   .. ..$ host: chr "localhost"
[08:07:48.651] | : . '   .. ..$ rank: num 0
[08:07:48.651] | : . '   .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:48.651] | : . '   ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:48.654] | : . ' Evaluator formal arguments: [n=1]
[08:07:48.654] | : . ' List of 1
[08:07:48.654] | : . '  $ workers:List of 1
[08:07:48.654] | : . '   ..$ :List of 3
[08:07:48.654] | : . '   .. ..$ con : 'sockconn' int 4
[08:07:48.654] | : . '   .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:48.654] | : . '   .. ..$ host: chr "localhost"
[08:07:48.654] | : . '   .. ..$ rank: num 0
[08:07:48.654] | : . '   .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:48.654] | : . '   ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:48.656] | : . ' Backend factory arguments: [n=1]
[08:07:48.656] | : . ' Dotted pair list of 1
[08:07:48.656] | : . '  $ workers:List of 1
[08:07:48.656] | : . '   ..$ :List of 3
[08:07:48.656] | : . '   .. ..$ con : 'sockconn' int 4
[08:07:48.656] | : . '   .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:48.656] | : . '   .. ..$ host: chr "localhost"
[08:07:48.656] | : . '   .. ..$ rank: num 0
[08:07:48.656] | : . '   .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:48.656] | : . '   ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:48.660] | : . ' ClusterFutureBackend(..., persistent = FALSE, gc = TRUE, earlySignal = TRUE) ...
[08:07:48.660] | : . ' , Stopping existing cluster ...
[08:07:48.660] | : . ' , ; No pre-existing cluster. Skipping
[08:07:48.660] | : . ' , Stopping existing cluster ... done
[08:07:48.660] | : . ' , Number of workers: 1
[08:07:48.660] | : . ' , Generated workers UUID
[08:07:48.660] | : . ' , Workers UUID: ‘381ebb526f9eb2d90230a3c7b34be202’
[08:07:48.661] | : . ' ClusterFutureBackend(..., persistent = FALSE, gc = TRUE, earlySignal = TRUE) ... done
[08:07:48.661] | : . ' Backend: <‘ClusterFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:48.661] | : . makeFutureBackend(<tweaked>) ... done
[08:07:48.661] | : plan(): plan_init() of ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ... done
[08:07:48.661] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:48.661] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:48.661] | : plan(): nbrOfWorkers() = 1
[08:07:48.661] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[08:07:48.661] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:48.661] future(..., label = NULL) ...
[08:07:48.662] | lazy: FALSE
[08:07:48.662] | stdout: TRUE
[08:07:48.662] | conditions: [n=1] ‘condition’
[08:07:48.662] | gc: FALSE
[08:07:48.662] | earlySignal: FALSE
[08:07:48.662] | getGlobalsAndPackages() ...
[08:07:48.662] | : Searching for globals ...
[08:07:48.666] | : . globals found: [3] ‘[[’, ‘X’, ‘i’
[08:07:48.666] | : Searching for globals ... done
[08:07:48.666] | : Resolving globals: FALSE
[08:07:48.666] | : Search for packages associated with the globals ...
[08:07:48.666] | : . Packages associated with globals: [1] ‘base’
[08:07:48.666] | : . Packages: [1] ‘base’
[08:07:48.667] | : Search for packages associated with the globals ... done
[08:07:48.667] | : Packages after dropping 'base': [0] 
[08:07:48.667] | : globals: [2] ‘X’, ‘i’
[08:07:48.667] | : packages: [0] 
[08:07:48.667] | getGlobalsAndPackages() ... done
[08:07:48.667] | run() for ‘Future’ (<unnamed-5>) ...
[08:07:48.667] | : state: ‘created’
[08:07:48.667] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:48.668] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:48.668] | : Using ClusterFutureBackend ...
[08:07:48.668] | : . Number of futures since start: 0 (0 created, 0 launched, 0 finished)
[08:07:48.668] | : . Launching futures ...
[08:07:48.668] | : . ' launchFuture() for ClusterFutureBackend ...
[08:07:48.668] | : . ' , Workers: [n=1]
[08:07:48.668] | : . ' , socket cluster with 1 nodes on host ‘localhost’
[08:07:48.668] | : . ' , FutureRegistry: ‘workers-381ebb526f9eb2d90230a3c7b34be202’
[08:07:48.669] | : . ' , requestWorker() ...
[08:07:48.669] | : . ' , ; requestNode() ...
[08:07:48.669] | : . ' , ; ` Number of workers: 1
[08:07:48.669] | : . ' , ; ` Polling for a free worker ...
[08:07:48.669] | : . ' , ; ` | FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[08:07:48.669] | : . ' , ; ` | : Listing all futures
[08:07:48.669] | : . ' , ; ` | : Number of registered futures: 0
[08:07:48.669] | : . ' , ; ` | FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[08:07:48.669] | : . ' , ; ` | Total time: 0
[08:07:48.669] | : . ' , ; ` Polling for a free worker ... done
[08:07:48.669] | : . ' , ; ` FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[08:07:48.670] | : . ' , ; ` | Listing all futures
[08:07:48.670] | : . ' , ; ` | Number of registered futures: 0
[08:07:48.670] | : . ' , ; ` FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[08:07:48.670] | : . ' , ; ` avail: [n=1] ‘1’
[08:07:48.670] | : . ' , ; ` Index of first available worker: 1
[08:07:48.670] | : . ' , ; ` Validate that the worker is functional ...
[08:07:48.724] | : . ' , ; ` | Worker is functional
[08:07:48.724] | : . ' , ; ` | FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[08:07:48.724] | : . ' , ; ` | : Listing all futures
[08:07:48.724] | : . ' , ; ` | : Number of registered futures: 0
[08:07:48.724] | : . ' , ; ` | FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[08:07:48.724] | : . ' , ; ` Validate that the worker is functional ... done
[08:07:48.724] | : . ' , ; requestNode() ... done
[08:07:48.725] | : . ' , ; cluster node index: 1
[08:07:48.725] | : . ' , requestWorker() ... done
[08:07:48.725] | : . ' , eraseGlobalEnvironment() ...
[08:07:48.725] | : . ' , eraseGlobalEnvironment() ... done
[08:07:48.725] | : . ' , launchFuture() ...
[08:07:48.725] | : . ' , ; cluster node index: 1
[08:07:48.726] | : . ' , ; getFutureData() ...
[08:07:48.726] | : . ' , ; ` getFutureCore() ...
[08:07:48.726] | : . ' , ; ` | Packages needed by the future expression (n = 0): <none>
[08:07:48.726] | : . ' , ; ` getFutureCore() ... done
[08:07:48.726] | : . ' , ; ` getFutureCapture() ...
[08:07:48.726] | : . ' , ; ` getFutureCapture() ... done
[08:07:48.726] | : . ' , ; ` getFutureContext() ...
[08:07:48.726] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:48.726] | : . ' , ; ` | : Getting stack without first backend: [n=0] 
[08:07:48.727] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:48.727] | : . ' , ; ` | Packages needed by future backend (n = 0): <none>
[08:07:48.727] | : . ' , ; ` getFutureContext() ... done
[08:07:48.727] | : . ' , ; getFutureData() ... done
[08:07:48.727] | : . ' , ; FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'add', earlySignal = 0) ...
[08:07:48.728] | : . ' , ; ` Appended future to position #1
[08:07:48.728] | : . ' , ; ` Number of registered futures: 1
[08:07:48.728] | : . ' , ; FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'add', earlySignal = 0) ... done
[08:07:48.728] | : . ' , launchFuture() ... done
[08:07:48.728] | : . ' , ClusterFuture started
[08:07:48.728] | : . ' launchFuture() for ClusterFutureBackend ... done
[08:07:48.728] | : . Launching futures ... done
[08:07:48.728] | : . Future launched: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:48.728] | : Using ClusterFutureBackend ... done
[08:07:48.729] | run() for ‘Future’ (<unnamed-5>) ... done
[08:07:48.729] future(..., label = NULL) ... done
[08:07:48.729] future(..., label = NULL) ...
[08:07:48.729] | lazy: FALSE
[08:07:48.729] | stdout: TRUE
[08:07:48.729] | conditions: [n=1] ‘condition’
[08:07:48.729] | gc: FALSE
[08:07:48.729] | earlySignal: FALSE
[08:07:48.729] | getGlobalsAndPackages() ...
[08:07:48.729] | : Searching for globals ...
[08:07:48.735] | : . globals found: [3] ‘[[’, ‘X’, ‘i’
[08:07:48.736] | : Searching for globals ... done
[08:07:48.736] | : Resolving globals: FALSE
[08:07:48.736] | : Search for packages associated with the globals ...
[08:07:48.736] | : . Packages associated with globals: [1] ‘base’
[08:07:48.736] | : . Packages: [1] ‘base’
[08:07:48.736] | : Search for packages associated with the globals ... done
[08:07:48.737] | : Packages after dropping 'base': [0] 
[08:07:48.737] | : globals: [2] ‘X’, ‘i’
[08:07:48.737] | : packages: [0] 
[08:07:48.737] | getGlobalsAndPackages() ... done
[08:07:48.737] | run() for ‘Future’ (<unnamed-6>) ...
[08:07:48.737] | : state: ‘created’
[08:07:48.737] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:48.737] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:48.738] | : Using ClusterFutureBackend ...
[08:07:48.738] | : . Number of futures since start: 1 (1 created, 1 launched, 0 finished)
[08:07:48.738] | : . Launching futures ...
[08:07:48.738] | : . ' launchFuture() for ClusterFutureBackend ...
[08:07:48.738] | : . ' , Workers: [n=1]
[08:07:48.738] | : . ' , socket cluster with 1 nodes on host ‘localhost’
[08:07:48.738] | : . ' , FutureRegistry: ‘workers-381ebb526f9eb2d90230a3c7b34be202’
[08:07:48.739] | : . ' , requestWorker() ...
[08:07:48.739] | : . ' , ; requestNode() ...
[08:07:48.739] | : . ' , ; ` Number of workers: 1
[08:07:48.739] | : . ' , ; ` Polling for a free worker ...
[08:07:48.739] | : . ' , ; ` | FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[08:07:48.739] | : . ' , ; ` | : Listing all futures
[08:07:48.739] | : . ' , ; ` | : Number of registered futures: 1
[08:07:48.739] | : . ' , ; ` | FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[08:07:48.739] | : . ' , ; ` | Poll #1 (0): usedNodes() = 1, workers = 1
[08:07:48.750] | : . ' , ; ` | FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ...
[08:07:48.750] | : . ' , ; ` | : collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ...
[08:07:48.750] | : . ' , ; ` | : . resolved() for ClusterFuture (<unnamed-5>) ...
[08:07:48.750] | : . ' , ; ` | : . ' Cluster node socket connection: index=4, id=237
[08:07:48.750] | : . ' , ; ` | : . ' assertValidConnection() ...
[08:07:48.751] | : . ' , ; ` | : . ' , cluster node index: 1
[08:07:48.751] | : . ' , ; ` | : . ' assertValidConnection() ... done
[08:07:48.761] | : . ' , ; ` | : . ' socketSelect(list(<connection #4 (id=237)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:48.761] | : . ' , ; ` | : . resolved() for ClusterFuture (<unnamed-5>) ... done
[08:07:48.761] | : . ' , ; ` | : . Future at position #1 is not resolved
[08:07:48.762] | : . ' , ; ` | : collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ... done
[08:07:48.762] | : . ' , ; ` | : Indices of futures to drop: [n=0] <none>
[08:07:48.762] | : . ' , ; ` | FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ... done
[08:07:48.762] | : . ' , ; ` | Early signaling of 1 future candidates ...
[08:07:48.762] | : . ' , ; ` | Number of futures with early signaling requested: 0
[08:07:48.762] | : . ' , ; ` | Early signaling of 1 future candidates ... done
[08:07:48.762] | : . ' , ; ` | Number of registered futures: 1
[08:07:48.762] | : . ' , ; ` Polling for a free worker ... done
[08:07:48.762] | : . ' , ; ` FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[08:07:48.763] | : . ' , ; ` | Listing all futures
[08:07:48.763] | : . ' , ; ` | Number of registered futures: 1
[08:07:48.763] | : . ' , ; ` FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[08:07:48.763] | : . ' , ; ` Poll #2 (0.02 secs): usedNodes() = 1, workers = 1
[08:07:48.773] | : . ' , ; ` FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ...
[08:07:48.773] | : . ' , ; ` | collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ...
[08:07:48.774] | : . ' , ; ` | : resolved() for ClusterFuture (<unnamed-5>) ...
[08:07:48.774] | : . ' , ; ` | : . Cluster node socket connection: index=4, id=237
[08:07:48.774] | : . ' , ; ` | : . assertValidConnection() ...
[08:07:48.774] | : . ' , ; ` | : . ' cluster node index: 1
[08:07:48.774] | : . ' , ; ` | : . assertValidConnection() ... done
[08:07:48.785] | : . ' , ; ` | : . socketSelect(list(<connection #4 (id=237)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:48.785] | : . ' , ; ` | : resolved() for ClusterFuture (<unnamed-5>) ... done
[08:07:48.785] | : . ' , ; ` | : Future at position #1 is not resolved
[08:07:48.785] | : . ' , ; ` | collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ... done
[08:07:48.785] | : . ' , ; ` | Indices of futures to drop: [n=0] <none>
[08:07:48.785] | : . ' , ; ` FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ... done
[08:07:48.785] | : . ' , ; ` Early signaling of 1 future candidates ...
[08:07:48.785] | : . ' , ; ` Number of futures with early signaling requested: 0
[08:07:48.786] | : . ' , ; ` Early signaling of 1 future candidates ... done
[08:07:48.786] | : . ' , ; ` Number of registered futures: 1
[08:07:48.786] | : . ' , ; requestNode() ... done
[08:07:48.786] | : . ' , ; FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[08:07:48.786] | : . ' , ; ` Listing all futures
[08:07:48.786] | : . ' , ; ` Number of registered futures: 1
[08:07:48.786] | : . ' , ; FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[08:07:48.786] | : . ' , ; Poll #3 (0.05 secs): usedNodes() = 1, workers = 1
[08:07:48.797] | : . ' , ; FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ...
[08:07:48.797] | : . ' , ; ` collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ...
[08:07:48.797] | : . ' , ; ` | resolved() for ClusterFuture (<unnamed-5>) ...
[08:07:48.797] | : . ' , ; ` | : Cluster node socket connection: index=4, id=237
[08:07:48.798] | : . ' , ; ` | : assertValidConnection() ...
[08:07:48.798] | : . ' , ; ` | : . cluster node index: 1
[08:07:48.798] | : . ' , ; ` | : assertValidConnection() ... done
[08:07:48.808] | : . ' , ; ` | : socketSelect(list(<connection #4 (id=237)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:48.808] | : . ' , ; ` | resolved() for ClusterFuture (<unnamed-5>) ... done
[08:07:48.809] | : . ' , ; ` | Future at position #1 is not resolved
[08:07:48.809] | : . ' , ; ` collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ... done
[08:07:48.809] | : . ' , ; ` Indices of futures to drop: [n=0] <none>
[08:07:48.809] | : . ' , ; FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ... done
[08:07:48.809] | : . ' , ; Early signaling of 1 future candidates ...
[08:07:48.809] | : . ' , ; Number of futures with early signaling requested: 0
[08:07:48.809] | : . ' , ; Early signaling of 1 future candidates ... done
[08:07:48.809] | : . ' , ; Number of registered futures: 1
[08:07:48.809] | : . ' , requestWorker() ... done
[08:07:48.810] | : . ' , FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[08:07:48.810] | : . ' , ; Listing all futures
[08:07:48.810] | : . ' , ; Number of registered futures: 1
[08:07:48.810] | : . ' , FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[08:07:48.810] | : . ' , Poll #4 (0.07 secs): usedNodes() = 1, workers = 1
[08:07:48.821] | : . ' , FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ...
[08:07:48.821] | : . ' , ; collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ...
[08:07:48.821] | : . ' , ; ` resolved() for ClusterFuture (<unnamed-5>) ...
[08:07:48.821] | : . ' , ; ` | Cluster node socket connection: index=4, id=237
[08:07:48.822] | : . ' , ; ` | assertValidConnection() ...
[08:07:48.822] | : . ' , ; ` | : cluster node index: 1
[08:07:48.822] | : . ' , ; ` | assertValidConnection() ... done
[08:07:48.822] | : . ' , ; ` | receiveMessageFromWorker() for ClusterFuture ...
[08:07:48.822] | : . ' , ; ` | : cluster node index: 1
[08:07:48.822] | : . ' , ; ` | : [1] TRUE
[08:07:48.823] | : . ' , ; ` | : received data:
[08:07:48.823] | : . ' , ; ` | : List of 5
[08:07:48.823] | : . ' , ; ` | :  $ type   : chr "VALUE"
[08:07:48.823] | : . ' , ; ` | :  $ value  :List of 16
[08:07:48.823] | : . ' , ; ` | :   ..$ value              : int 1
[08:07:48.823] | : . ' , ; ` | :   ..$ visible            : logi TRUE
[08:07:48.823] | : . ' , ; ` | :   ..$ stdout             : chr ""
[08:07:48.823] | : . ' , ; ` | :   ..$ conditions         : list()
[08:07:48.823] | : . ' , ; ` | :   ..$ rng                : logi FALSE
[08:07:48.823] | : . ' , ; ` | :   ..$ seed               : NULL
[08:07:48.823] | : . ' , ; ` | :   ..$ misuseGlobalEnv    : NULL
[08:07:48.823] | : . ' , ; ` | :   ..$ misuseConnections  :List of 3
[08:07:48.823] | : . ' , ; ` | :   .. ..$ added   : NULL
[08:07:48.823] | : . ' , ; ` | :   .. ..$ removed : NULL
[08:07:48.823] | : . ' , ; ` | :   .. ..$ replaced: NULL
[08:07:48.823] | : . ' , ; ` | :   ..$ misuseDevices      : NULL
[08:07:48.823] | : . ' , ; ` | :   ..$ misuseDefaultDevice: list()
[08:07:48.823] | : . ' , ; ` | :   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:07:48"
[08:07:48.823] | : . ' , ; ` | :   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:07:48"
[08:07:48.823] | : . ' , ; ` | :   ..$ uuid               : chr [1:2] "8301de87e3d0c0a9d4bc2c0c635cd68f" "5"
[08:07:48.823] | : . ' , ; ` | :   ..$ session_uuid       : chr "267a646fbb2fecb96c4b5f8e6f419e16"
[08:07:48.823] | : . ' , ; ` | :   .. ..- attr(*, "source")=List of 5
[08:07:48.823] | : . ' , ; ` | :   .. .. ..$ host  : Named chr "285a5f234941"
[08:07:48.823] | : . ' , ; ` | :   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:07:48.823] | : . ' , ; ` | :   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:07:48.823] | : . ' , ; ` | :   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:48.823] | : . ' , ; ` | :   .. .. ..$ pid   : int 67208
[08:07:48.823] | : . ' , ; ` | :   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:07:48"
[08:07:48.823] | : . ' , ; ` | :   .. .. ..$ random: int 2147483647
[08:07:48.823] | : . ' , ; ` | :   ..$ r_info             :List of 4
[08:07:48.823] | : . ' , ; ` | :   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:07:48.823] | : . ' , ; ` | :   .. .. ..$ : int [1:3] 4 5 0
[08:07:48.823] | : . ' , ; ` | :   .. ..$ os           : chr "unix"
[08:07:48.823] | : . ' , ; ` | :   .. ..$ os_name      : chr "Linux"
[08:07:48.823] | : . ' , ; ` | :   .. ..$ captures_utf8: logi TRUE
[08:07:48.823] | : . ' , ; ` | :   ..$ version            : chr "1.8"
[08:07:48.823] | : . ' , ; ` | :   ..- attr(*, "class")= chr "FutureResult"
[08:07:48.823] | : . ' , ; ` | :  $ success: logi TRUE
[08:07:48.823] | : . ' , ; ` | :  $ time   : 'proc_time' Named num [1:5] 0.047 0.002 0.047 0 0
[08:07:48.823] | : . ' , ; ` | :   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:07:48.823] | : . ' , ; ` | :  $ tag    : NULL
[08:07:48.837] | : . ' , ; ` | : Received FutureResult
[08:07:48.837] | : . ' , ; ` | : FutureResult:
[08:07:48.837] | : . ' , ; ` | : value: ‘integer’
[08:07:48.837] | : . ' , ; ` | : visible: TRUE
[08:07:48.837] | : . ' , ; ` | : stdout: character
[08:07:48.837] | : . ' , ; ` | : conditions: [n = 0] 
[08:07:48.837] | : . ' , ; ` | : RNG used: FALSE
[08:07:48.837] | : . ' , ; ` | : duration: 0.04590964 secs (started 2025-06-17 08:07:48.769504)
[08:07:48.837] | : . ' , ; ` | : version: 1.8
[08:07:48.837] | : . ' , ; ` | : FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'remove', earlySignal = 0) ...
[08:07:48.837] | : . ' , ; ` | : . Removed future from position #1
[08:07:48.837] | : . ' , ; ` | : . Number of registered futures: 0
[08:07:48.838] | : . ' , ; ` | : FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'remove', earlySignal = 0) ... done
[08:07:48.838] | : . ' , ; ` | : Erased future from future backend
[08:07:48.838] | : . ' , ; ` | : result() for ClusterFuture ...
[08:07:48.838] | : . ' , ; ` | : . result already collected: FutureResult
[08:07:48.838] | : . ' , ; ` | : result() for ClusterFuture ... done
[08:07:48.838] | : . ' , ; ` | : signalConditions() ...
[08:07:48.838] | : . ' , ; ` | : . include = ‘immediateCondition’
[08:07:48.838] | : . ' , ; ` | : . exclude = 
[08:07:48.838] | : . ' , ; ` | : . resignal = FALSE
[08:07:48.839] | : . ' , ; ` | : . Number of conditions: 0
[08:07:48.839] | : . ' , ; ` | : .  int 0
[08:07:48.839] | : . ' , ; ` | : signalConditions() ... done
[08:07:48.839] | : . ' , ; ` | receiveMessageFromWorker() for ClusterFuture ... done
[08:07:48.839] | : . ' , ; ` | receiveMessageFromWorker() returned object of class FutureResult; resolved
[08:07:48.839] | : . ' , ; ` resolved() for ClusterFuture (<unnamed-5>) ... done
[08:07:48.839] | : . ' , ; ` assertFutureResult() ...
[08:07:48.840] | : . ' , ; ` | Future uuid: 8301de87e3d0c0a9d4bc2c0c635cd68f[08:07:48.840] | : . ' , ; ` | Future uuid: 5
[08:07:48.840] | : . ' , ; ` | identical; success
[08:07:48.840] | : . ' , ; ` assertFutureResult() ... done
[08:07:48.840] | : . ' , ; ` Future at position #1 is resolved ...
[08:07:48.840] | : . ' , ; ` | value() for ClusterFuture (<unnamed-5>) ...
[08:07:48.840] | : . ' , ; ` | : result() for ClusterFuture ...
[08:07:48.840] | : . ' , ; ` | : . result already collected: FutureResult
[08:07:48.840] | : . ' , ; ` | : result() for ClusterFuture ... done
[08:07:48.840] | : . ' , ; ` | : result() for ClusterFuture ...
[08:07:48.841] | : . ' , ; ` | : . result already collected: FutureResult
[08:07:48.841] | : . ' , ; ` | : result() for ClusterFuture ... done
[08:07:48.841] | : . ' , ; ` | : signalConditions() ...
[08:07:48.841] | : . ' , ; ` | : . include = ‘immediateCondition’
[08:07:48.841] | : . ' , ; ` | : . exclude = 
[08:07:48.841] | : . ' , ; ` | : . resignal = FALSE
[08:07:48.841] | : . ' , ; ` | : . Number of conditions: 0
[08:07:48.841] | : . ' , ; ` | : .  int 0
[08:07:48.842] | : . ' , ; ` | : signalConditions() ... done
[08:07:48.842] | : . ' , ; ` | : check for misuse ...
[08:07:48.842] | : . ' , ; ` | : check for misuse ... done
[08:07:48.842] | : . ' , ; ` | value() for ClusterFuture (<unnamed-5>) ... done
[08:07:48.842] | : . ' , ; ` Future at position #1 is resolved ... done
[08:07:48.842] | : . ' , ; collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ... done
[08:07:48.842] | : . ' , ; Remove collected futures ...
[08:07:48.843] | : . ' , ; ` Indices of futures to drop: [n=1] ‘1’
[08:07:48.843] | : . ' , ; Remove collected futures ... done
[08:07:48.843] | : . ' , FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ... done
[08:07:48.843] | : . ' , Early signaling of 1 future candidates ...
[08:07:48.843] | : . ' , Number of futures with early signaling requested: 0
[08:07:48.843] | : . ' , Early signaling of 1 future candidates ... done
[08:07:48.843] | : . ' , Number of registered futures: 1
[08:07:48.843] | : . ' launchFuture() for ClusterFutureBackend ... done
[08:07:48.843] | : . ' FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[08:07:48.843] | : . ' , Listing all futures
[08:07:48.844] | : . ' , Number of registered futures: 0
[08:07:48.844] | : . ' FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[08:07:48.844] | : . ' Total time: 0.104385137557983
[08:07:48.844] | : . Launching futures ... done
[08:07:48.844] | : . FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[08:07:48.844] | : . ' Listing all futures
[08:07:48.844] | : . ' Number of registered futures: 0
[08:07:48.844] | : . FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[08:07:48.844] | : . avail: [n=1] ‘1’
[08:07:48.844] | : . Index of first available worker: 1
[08:07:48.845] | : . Validate that the worker is functional ...
[08:07:48.886] | : . ' Worker is functional
[08:07:48.886] | : . ' FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[08:07:48.886] | : . ' , Listing all futures
[08:07:48.886] | : . ' , Number of registered futures: 0
[08:07:48.886] | : . ' FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[08:07:48.886] | : . Validate that the worker is functional ... done
[08:07:48.886] | : Using ClusterFutureBackend ... done
[08:07:48.887] | : cluster node index: 1
[08:07:48.887] | run() for ‘Future’ (<unnamed-6>) ... done
[08:07:48.887] | eraseGlobalEnvironment() ...
[08:07:48.887] | eraseGlobalEnvironment() ... done
[08:07:48.887] | launchFuture() ...
[08:07:48.887] | : cluster node index: 1
[08:07:48.888] | : getFutureData() ...
[08:07:48.888] | : . getFutureCore() ...
[08:07:48.888] | : . ' Packages needed by the future expression (n = 0): <none>
[08:07:48.888] | : . getFutureCore() ... done
[08:07:48.888] | : . getFutureCapture() ...
[08:07:48.888] | : . getFutureCapture() ... done
[08:07:48.888] | : . getFutureContext() ...
[08:07:48.888] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:48.890] | : . ' , Getting stack without first backend: [n=0] 
[08:07:48.890] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:48.890] | : . ' Packages needed by future backend (n = 0): <none>
[08:07:48.890] | : . getFutureContext() ... done
[08:07:48.890] | : getFutureData() ... done
[08:07:48.891] | : FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'add', earlySignal = 0) ...
[08:07:48.891] | : . Appended future to position #1
[08:07:48.891] | : . Number of registered futures: 1
[08:07:48.891] | : FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'add', earlySignal = 0) ... done
[08:07:48.891] | launchFuture() ... done
[08:07:48.891] | ClusterFuture started
[08:07:48.892] future(..., label = NULL) ... done

[08:07:48.892] Future launched: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’



[08:07:48.892] value() for list ...
[08:07:48.892] | recursive: 0
[08:07:48.892] | reduce: FALSE
[08:07:48.892] | length: 2

[08:07:48.893] | Number of remaining objects: 2
[08:07:48.893] | checking value #1:
[08:07:48.893] | 'obj' is ClusterFuture
[08:07:48.893] | ClusterFuture #1
[08:07:48.893] | signalConditionsASAP(ClusterFuture, pos=1) ...
[08:07:48.893] | : nx: 2
[08:07:48.893] | : relay: TRUE
[08:07:48.893] | : stdout: TRUE
[08:07:48.893] | : signal: TRUE
[08:07:48.893] | : resignal: FALSE
[08:07:48.894] | : force: TRUE
[08:07:48.894] | : relayed: [n=2] FALSE, FALSE
[08:07:48.894] | : queued futures: [n=2] FALSE, FALSE
[08:07:48.894] | : until=1
[08:07:48.894] | : relaying element #1
[08:07:48.894] | : value() for ClusterFuture (<unnamed-5>) ...
[08:07:48.894] | : . result() for ClusterFuture ...
[08:07:48.894] | : . ' result already collected: FutureResult
[08:07:48.894] | : . result() for ClusterFuture ... done
[08:07:48.895] | : . result() for ClusterFuture ...
[08:07:48.895] | : . ' result already collected: FutureResult
[08:07:48.895] | : . result() for ClusterFuture ... done
[08:07:48.895] | : . signalConditions() ...
[08:07:48.895] | : . ' include = ‘immediateCondition’
[08:07:48.895] | : . ' exclude = 
[08:07:48.895] | : . ' resignal = FALSE
[08:07:48.895] | : . ' Number of conditions: 0
[08:07:48.895] | : . '  int 0
[08:07:48.896] | : . signalConditions() ... done
[08:07:48.896] | : . relay stdout ...
[08:07:48.896] | : . relay stdout ... done
[08:07:48.896] | : . check for misuse ...
[08:07:48.896] | : . check for misuse ... done
[08:07:48.896] | : value() for ClusterFuture (<unnamed-5>) ... done
[08:07:48.896] | : result() for ClusterFuture ...
[08:07:48.896] | : . result already collected: FutureResult
[08:07:48.897] | : result() for ClusterFuture ... done
[08:07:48.897] | : signalConditions() ...
[08:07:48.897] | : . include = ‘immediateCondition’
[08:07:48.897] | : . exclude = 
[08:07:48.897] | : . resignal = FALSE
[08:07:48.897] | : . Number of conditions: 0
[08:07:48.897] | : .  int 0
[08:07:48.897] | : signalConditions() ... done
[08:07:48.898] | : result() for ClusterFuture ...
[08:07:48.898] | : . result already collected: FutureResult
[08:07:48.898] | : result() for ClusterFuture ... done
[08:07:48.898] | : signalConditions() ...
[08:07:48.898] | : . include = ‘condition’
[08:07:48.898] | : . exclude = ‘error’, ‘immediateCondition’
[08:07:48.898] | : . resignal = TRUE
[08:07:48.898] | : . Number of conditions: 0
[08:07:48.898] | : .  int 0
[08:07:48.899] | : signalConditions() ... done
[08:07:48.899] | : relayed: [n=2] TRUE, FALSE
[08:07:48.899] | : queued futures: [n=2] TRUE, FALSE
[08:07:48.899] | signalConditionsASAP(ClusterFuture, pos=1) ... done
[08:07:48.899] | value(<ClusterFuture>, ...) ...
[08:07:48.899] | value(<ClusterFuture>, ...) ... done
[08:07:48.899] | value() for ClusterFuture (<unnamed-5>) ...
[08:07:48.899] | : result() for ClusterFuture ...
[08:07:48.900] | : . result already collected: FutureResult
[08:07:48.900] | : result() for ClusterFuture ... done
[08:07:48.900] | : result() for ClusterFuture ...
[08:07:48.900] | : . result already collected: FutureResult
[08:07:48.900] | : result() for ClusterFuture ... done
[08:07:48.900] | : signalConditions() ...
[08:07:48.900] | : . include = ‘immediateCondition’
[08:07:48.900] | : . exclude = 
[08:07:48.900] | : . resignal = FALSE
[08:07:48.900] | : . Number of conditions: 0
[08:07:48.901] | : .  int 0
[08:07:48.901] | : signalConditions() ... done
[08:07:48.901] | : check for misuse ...
[08:07:48.901] | : check for misuse ... done
[08:07:48.901] | value() for ClusterFuture (<unnamed-5>) ... done
[08:07:48.901] | value: <integer>
[08:07:48.901] | signalConditionsASAP(ClusterFuture, pos=1) ...
[08:07:48.902] | : nx: 2
[08:07:48.902] | : relay: TRUE
[08:07:48.902] | : stdout: TRUE
[08:07:48.902] | : signal: TRUE
[08:07:48.902] | : resignal: FALSE
[08:07:48.902] | : force: TRUE
[08:07:48.902] | : relayed: [n=2] TRUE, FALSE
[08:07:48.902] | : queued futures: [n=2] TRUE, FALSE
[08:07:48.902] | : until=2
[08:07:48.902] | : relaying element #2
[08:07:48.902] | : relayed: [n=2] TRUE, FALSE
[08:07:48.903] | : queued futures: [n=2] TRUE, FALSE
[08:07:48.903] | signalConditionsASAP(ClusterFuture, pos=1) ... done
[08:07:48.903] | resolve() for ClusterFuture ...
[08:07:48.903] | resolve() for ClusterFuture ... done
[08:07:48.903] | length: 1 (resolved future 1)
[08:07:48.903] value() for list ... done
[08:07:48.903] checking value #2:
[08:07:48.903] 'obj' is ClusterFuture
[08:07:48.903] resolved() for ClusterFuture (<unnamed-6>) ...
[08:07:48.904] | Cluster node socket connection: index=4, id=237
[08:07:48.904] | assertValidConnection() ...
[08:07:48.904] | : cluster node index: 1
[08:07:48.904] | assertValidConnection() ... done
[08:07:48.914] | socketSelect(list(<connection #4 (id=237)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:48.915] resolved() for ClusterFuture (<unnamed-6>) ... done
[08:07:48.925] Number of remaining objects: 1
[08:07:48.925] checking value #2:
[08:07:48.925] 'obj' is ClusterFuture
[08:07:48.925] resolved() for ClusterFuture (<unnamed-6>) ...
[08:07:48.926] | Cluster node socket connection: index=4, id=237
[08:07:48.926] | assertValidConnection() ...
[08:07:48.926] | : cluster node index: 1
[08:07:48.926] | assertValidConnection() ... done
[08:07:48.935] | receiveMessageFromWorker() for ClusterFuture ...
[08:07:48.935] | : cluster node index: 1
[08:07:48.935] | : [1] TRUE
[08:07:48.936] | : received data:
[08:07:48.936] | : List of 5
[08:07:48.936] | :  $ type   : chr "VALUE"
[08:07:48.936] | :  $ value  :List of 16
[08:07:48.936] | :   ..$ value              : int 2
[08:07:48.936] | :   ..$ visible            : logi TRUE
[08:07:48.936] | :   ..$ stdout             : chr ""
[08:07:48.936] | :   ..$ conditions         : list()
[08:07:48.936] | :   ..$ rng                : logi FALSE
[08:07:48.936] | :   ..$ seed               : NULL
[08:07:48.936] | :   ..$ misuseGlobalEnv    : NULL
[08:07:48.936] | :   ..$ misuseConnections  :List of 3
[08:07:48.936] | :   .. ..$ added   : NULL
[08:07:48.936] | :   .. ..$ removed : NULL
[08:07:48.936] | :   .. ..$ replaced: NULL
[08:07:48.936] | :   ..$ misuseDevices      : NULL
[08:07:48.936] | :   ..$ misuseDefaultDevice: list()
[08:07:48.936] | :   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:07:48"
[08:07:48.936] | :   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:07:48"
[08:07:48.936] | :   ..$ uuid               : chr [1:2] "8301de87e3d0c0a9d4bc2c0c635cd68f" "6"
[08:07:48.936] | :   ..$ session_uuid       : chr "267a646fbb2fecb96c4b5f8e6f419e16"
[08:07:48.936] | :   .. ..- attr(*, "source")=List of 5
[08:07:48.936] | :   .. .. ..$ host  : Named chr "285a5f234941"
[08:07:48.936] | :   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:07:48.936] | :   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:07:48.936] | :   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:48.936] | :   .. .. ..$ pid   : int 67208
[08:07:48.936] | :   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:07:48"
[08:07:48.936] | :   .. .. ..$ random: int 2147483647
[08:07:48.936] | :   ..$ r_info             :List of 4
[08:07:48.936] | :   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:07:48.936] | :   .. .. ..$ : int [1:3] 4 5 0
[08:07:48.936] | :   .. ..$ os           : chr "unix"
[08:07:48.936] | :   .. ..$ os_name      : chr "Linux"
[08:07:48.936] | :   .. ..$ captures_utf8: logi TRUE
[08:07:48.936] | :   ..$ version            : chr "1.8"
[08:07:48.936] | :   ..- attr(*, "class")= chr "FutureResult"
[08:07:48.936] | :  $ success: logi TRUE
[08:07:48.936] | :  $ time   : 'proc_time' Named num [1:5] 0.002 0.001 0.003 0 0
[08:07:48.936] | :   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:07:48.936] | :  $ tag    : NULL
[08:07:48.947] | : Received FutureResult
[08:07:48.948] | : FutureResult:
[08:07:48.948] | : value: ‘integer’
[08:07:48.948] | : visible: TRUE
[08:07:48.948] | : stdout: character
[08:07:48.948] | : conditions: [n = 0] 
[08:07:48.948] | : RNG used: FALSE
[08:07:48.948] | : duration: 0.002548933 secs (started 2025-06-17 08:07:48.932336)
[08:07:48.948] | : version: 1.8
[08:07:48.948] | : FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'remove', earlySignal = 0) ...
[08:07:48.948] | : . Removed future from position #1
[08:07:48.948] | : . Number of registered futures: 0
[08:07:48.948] | : FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'remove', earlySignal = 0) ... done
[08:07:48.948] | : Erased future from future backend
[08:07:48.949] | : result() for ClusterFuture ...
[08:07:48.949] | : . result already collected: FutureResult
[08:07:48.949] | : result() for ClusterFuture ... done
[08:07:48.949] | : signalConditions() ...
[08:07:48.949] | : . include = ‘immediateCondition’
[08:07:48.949] | : . exclude = 
[08:07:48.949] | : . resignal = FALSE
[08:07:48.949] | : . Number of conditions: 0
[08:07:48.949] | : .  int 0
[08:07:48.950] | : signalConditions() ... done
[08:07:48.950] | receiveMessageFromWorker() for ClusterFuture ... done
[08:07:48.950] | receiveMessageFromWorker() returned object of class FutureResult; resolved
[08:07:48.950] resolved() for ClusterFuture (<unnamed-6>) ... done
[08:07:48.950] assertFutureResult() ...
[08:07:48.950] | Future uuid: 8301de87e3d0c0a9d4bc2c0c635cd68f[08:07:48.950] | Future uuid: 6
[08:07:48.950] | identical; success
[08:07:48.950] assertFutureResult() ... done
[08:07:48.950] ClusterFuture #2
[08:07:48.951] signalConditionsASAP(ClusterFuture, pos=2) ...
[08:07:48.951] | nx: 2
[08:07:48.951] | relay: TRUE
[08:07:48.951] | stdout: TRUE
[08:07:48.951] | signal: TRUE
[08:07:48.951] | resignal: FALSE
[08:07:48.951] | force: TRUE
[08:07:48.951] | relayed: [n=2] TRUE, FALSE
[08:07:48.951] | queued futures: [n=2] TRUE, FALSE
[08:07:48.951] | until=2
[08:07:48.951] | relaying element #2
[08:07:48.951] | value() for ClusterFuture (<unnamed-6>) ...
[08:07:48.952] | : result() for ClusterFuture ...
[08:07:48.952] | : . result already collected: FutureResult
[08:07:48.952] | : result() for ClusterFuture ... done
[08:07:48.952] | : result() for ClusterFuture ...
[08:07:48.952] | : . result already collected: FutureResult
[08:07:48.952] | : result() for ClusterFuture ... done
[08:07:48.952] | : signalConditions() ...
[08:07:48.952] | : . include = ‘immediateCondition’
[08:07:48.952] | : . exclude = 
[08:07:48.952] | : . resignal = FALSE
[08:07:48.953] | : . Number of conditions: 0
[08:07:48.953] | : .  int 0
[08:07:48.953] | : signalConditions() ... done
[08:07:48.953] | : relay stdout ...
[08:07:48.953] | : relay stdout ... done
[08:07:48.953] | : check for misuse ...
[08:07:48.953] | : check for misuse ... done
[08:07:48.954] | value() for ClusterFuture (<unnamed-6>) ... done
[08:07:48.954] | result() for ClusterFuture ...
[08:07:48.954] | : result already collected: FutureResult
[08:07:48.954] | result() for ClusterFuture ... done
[08:07:48.954] | signalConditions() ...
[08:07:48.954] | : include = ‘immediateCondition’
[08:07:48.954] | : exclude = 
[08:07:48.954] | : resignal = FALSE
[08:07:48.954] | : Number of conditions: 0
[08:07:48.954] | :  int 0
[08:07:48.955] | signalConditions() ... done
[08:07:48.955] | result() for ClusterFuture ...
[08:07:48.955] | : result already collected: FutureResult
[08:07:48.955] | result() for ClusterFuture ... done
[08:07:48.955] | signalConditions() ...
[08:07:48.955] | : include = ‘condition’
[08:07:48.955] | : exclude = ‘error’, ‘immediateCondition’
[08:07:48.955] | : resignal = TRUE
[08:07:48.955] | : Number of conditions: 0
[08:07:48.956] | :  int 0
[08:07:48.956] | signalConditions() ... done
[08:07:48.956] | relayed: [n=2] TRUE, TRUE
[08:07:48.956] | queued futures: [n=2] TRUE, TRUE
[08:07:48.956] signalConditionsASAP(ClusterFuture, pos=2) ... done
[08:07:48.956] value(<ClusterFuture>, ...) ...
[08:07:48.956] value(<ClusterFuture>, ...) ... done
[08:07:48.957] value() for ClusterFuture (<unnamed-6>) ...
[08:07:48.957] | result() for ClusterFuture ...
[08:07:48.957] | : result already collected: FutureResult
[08:07:48.957] | result() for ClusterFuture ... done
[08:07:48.957] | result() for ClusterFuture ...
[08:07:48.957] | : result already collected: FutureResult
[08:07:48.957] | result() for ClusterFuture ... done
[08:07:48.957] | signalConditions() ...
[08:07:48.957] | : include = ‘immediateCondition’
[08:07:48.957] | : exclude = 
[08:07:48.957] | : resignal = FALSE
[08:07:48.958] | : Number of conditions: 0
[08:07:48.958] | :  int 0
[08:07:48.959] | signalConditions() ... done
[08:07:48.959] | check for misuse ...
[08:07:48.959] | check for misuse ... done
[08:07:48.959] value() for ClusterFuture (<unnamed-6>) ... done
[08:07:48.959] value: <integer>
[08:07:48.959] signalConditionsASAP(ClusterFuture, pos=2) ...
[08:07:48.959] | nx: 2
[08:07:48.960] | relay: TRUE
[08:07:48.960] | stdout: TRUE
[08:07:48.960] | signal: TRUE
[08:07:48.960] | resignal: FALSE
[08:07:48.960] | force: TRUE
[08:07:48.960] | relayed: [n=2] TRUE, TRUE
[08:07:48.960] | queued futures: [n=2] TRUE, TRUE
[08:07:48.960] | until=2
[08:07:48.960] | relayed: [n=2] TRUE, TRUE
[08:07:48.960] | queued futures: [n=2] TRUE, TRUE
[08:07:48.960] signalConditionsASAP(ClusterFuture, pos=2) ... done
[08:07:48.961] resolve() for ClusterFuture ...
[08:07:48.961] resolve() for ClusterFuture ... done
[08:07:48.961] length: 0 (resolved future 2)

[08:07:48.961] Relaying remaining futures ...
[08:07:48.961] | signalConditionsASAP(NULL, pos=0) ...
[08:07:48.961] | : nx: 2
[08:07:48.961] | : relay: TRUE
[08:07:48.961] | : stdout: TRUE
[08:07:48.961] | : signal: TRUE
[08:07:48.961] | : resignal: FALSE
[08:07:48.962] | : force: TRUE
[08:07:48.962] | : relayed: [n=2] TRUE, TRUE
[08:07:48.962] | : queued futures: [n=2] TRUE, TRUE
 - flush all
[08:07:48.962] | : relayed: [n=2] TRUE, TRUE
[08:07:48.962] | : queued futures: [n=2] TRUE, TRUE
[08:07:48.962] | signalConditionsASAP(NULL, pos=0) ... done
[08:07:48.962] Relaying remaining futures ... done


> plan(sequential)
[08:07:48.970] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:48.970] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:07:48.971] | : all.equal() for FutureStrategyList ...
[08:07:48.971] | : . New stack:
[08:07:48.971] | : . List of 1
[08:07:48.971] | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:48.971] | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:48.971] | : .   ..- attr(*, "init")= logi TRUE
[08:07:48.971] | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:48.971] | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:48.971] | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:48.971] | : .   ..- attr(*, "call")= language plan(sequential)
[08:07:48.971] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:48.973] | : . Old stack:
[08:07:48.974] | : . List of 1
[08:07:48.974] | : .  $ :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:48.974] | : .     envir = parent.frame())  
[08:07:48.974] | : .   ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:48.974] | : .   ..- attr(*, "init")= chr "done"
[08:07:48.974] | : .   ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:48.974] | : .     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:48.974] | : .   .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.974] | : .   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.974] | : .   ..- attr(*, "tweaks")=List of 1
[08:07:48.974] | : .   .. ..$ workers:List of 1
[08:07:48.974] | : .   .. .. ..$ :List of 3
[08:07:48.974] | : .   .. .. .. ..$ con : 'sockconn' int 4
[08:07:48.974] | : .   .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:48.974] | : .   .. .. .. ..$ host: chr "localhost"
[08:07:48.974] | : .   .. .. .. ..$ rank: num 0
[08:07:48.974] | : .   .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:48.974] | : .   .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:48.974] | : .   ..- attr(*, "call")= language plan(cluster, workers = cl)
[08:07:48.974] | : .   ..- attr(*, "backend")=Classes 'ClusterFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5586c470abc0> 
[08:07:48.974] | : .   .. ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:48.974] | : .     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:48.974] | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.974] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:48.979] | : . Not identical
[08:07:48.979] | : . all.equal() for future ...
[08:07:48.979] | : . ' List of 2
[08:07:48.979] | : . '  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:48.979] | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:48.979] | : . '   ..- attr(*, "init")= logi TRUE
[08:07:48.979] | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:48.979] | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:48.979] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:48.979] | : . '   ..- attr(*, "call")= language plan(sequential)
[08:07:48.979] | : . '  $ current:function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:48.979] | : . '     envir = parent.frame())  
[08:07:48.979] | : . '   ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:48.979] | : . '   ..- attr(*, "init")= chr "done"
[08:07:48.979] | : . '   ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:48.979] | : . '     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:48.979] | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.979] | : . '   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.979] | : . '   ..- attr(*, "tweaks")=List of 1
[08:07:48.979] | : . '   .. ..$ workers:List of 1
[08:07:48.979] | : . '   .. .. ..$ :List of 3
[08:07:48.979] | : . '   .. .. .. ..$ con : 'sockconn' int 4
[08:07:48.979] | : . '   .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:48.979] | : . '   .. .. .. ..$ host: chr "localhost"
[08:07:48.979] | : . '   .. .. .. ..$ rank: num 0
[08:07:48.979] | : . '   .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:48.979] | : . '   .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:48.979] | : . '   ..- attr(*, "call")= language plan(cluster, workers = cl)
[08:07:48.979] | : . '   ..- attr(*, "backend")=Classes 'ClusterFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5586c470abc0> 
[08:07:48.979] | : . '   .. ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:48.979] | : . '     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:48.979] | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:48.988] | : . ' Formals differ
[08:07:48.988] | : . all.equal() for future ... done
[08:07:48.988] | : . Future strategies differ at level 1
[08:07:48.988] | : all.equal() for FutureStrategyList ... done
[08:07:48.988] | : plan(): Setting new future backend stack:
[08:07:48.988] | : List of future strategies:
[08:07:48.988] | : 1. sequential:
[08:07:48.988] | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:48.988] | :    - tweaked: FALSE
[08:07:48.988] | :    - call: plan(sequential)
[08:07:48.989] | : List of 1
[08:07:48.989] | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:48.989] | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:48.989] | :   ..- attr(*, "init")= logi TRUE
[08:07:48.989] | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:48.989] | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:48.989] | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:48.989] | :   ..- attr(*, "call")= language plan(sequential)
[08:07:48.989] | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:48.991] | : plan(): plan_cleanup(‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ...
[08:07:48.991] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:48.992] | : . ' Getting current ("next") strategy: ‘FutureStrategy’, ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[08:07:48.992] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:48.992] | : . stopWorkers() for ClusterFutureBackend ...
[08:07:48.992] | : . ' Interrupt active futures ...
[08:07:48.992] | : . ' , Number of futures: 0
[08:07:48.992] | : . ' Interrupt active futures ... done
[08:07:48.993] | : . ' Clear future registry ...
[08:07:48.993] | : . ' Clear future registry ... done
[08:07:48.993] | : . ' Stop cluster workers ...
[08:07:48.993] | : . ' , Stopping existing cluster ...
[08:07:48.993] | : . ' , ; No pre-existing cluster. Skipping
[08:07:48.993] | : . ' , Stopping existing cluster ... done
[08:07:48.993] | : . ' Stop cluster workers ... done
[08:07:48.994] | : . stopWorkers() for ClusterFutureBackend ... done
[08:07:48.994] | : . Legacy shutdown of cluster workers ...
[08:07:48.994] | : . ' Stopping existing cluster ...
[08:07:48.994] | : . ' , No pre-existing cluster. Skipping
[08:07:48.994] | : . ' Stopping existing cluster ... done
[08:07:48.994] | : . Legacy shutdown of cluster workers ... done
[08:07:48.994] | : plan(): plan_cleanup(‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[08:07:48.994] | : plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:07:48.994] | : . function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:48.994] | : .  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:48.994] | : .  - attr(*, "init")= logi TRUE
[08:07:48.994] | : .  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:48.994] | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:48.994] | : .  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:48.994] | : .  - attr(*, "call")= language plan(sequential)
[08:07:48.996] | : . init: TRUE
[08:07:48.996] | : . makeFutureBackend(<sequential>) ...
[08:07:48.996] | : . ' Backend function: <‘NULL’>
[08:07:48.997] | : . ' Evaluator tweak arguments: [n=0]
[08:07:48.997] | : . '  list()
[08:07:48.997] | : . ' Evaluator formal arguments: [n=2]
[08:07:48.997] | : . '  list()
[08:07:48.997] | : . ' Backend factory arguments: [n=2]
[08:07:48.997] | : . ' Dotted pair list of 2
[08:07:48.997] | : . '  $ gc         : logi FALSE
[08:07:48.997] | : . '  $ earlySignal: logi FALSE
[08:07:48.998] | : . ' Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:48.998] | : . makeFutureBackend(<sequential>) ... done
[08:07:48.999] | : plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:07:48.999] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:48.999] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:48.999] | : plan(): nbrOfWorkers() = 1
[08:07:48.999] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[08:07:48.999] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done

> message("all.equal() for cluster backend ... done")
all.equal() for cluster backend ... done
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=0.7s, sys.self=0.02s, elapsed=2s, user.child=0.003s, sys.child=0.004s
Test ‘cluster-connection-clashes’ ... success
> 
