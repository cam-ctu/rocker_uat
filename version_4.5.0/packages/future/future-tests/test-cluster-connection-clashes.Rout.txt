
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script incl/testme/test-cluster-connection-clashes.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future:::testme("cluster-connection-clashes")
Test ‘cluster-connection-clashes’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future/testme/test-cluster-connection-clashes.R’

> library(future)
[10:52:26.039] Option 'future.startup.script': TRUE
[10:52:26.039] Future startup scripts considered: ‘.future.R’, ‘~/.future.R’
[10:52:26.039] Future startup scripts found: <none>

> message("all.equal() for connection ...")
all.equal() for connection ...

> con1 <- rawConnection(raw())

> close(con1)

> con2 <- rawConnection(raw())

> close(con2)

> stopifnot(!isTRUE(all.equal(con1, con2)))

> message("all.equal() for connection ... done")
all.equal() for connection ... done

> message("all.equal() for cluster backend ...")
all.equal() for cluster backend ...

> for (kk in 1:3) {
+     message("Iteration #", kk)
+     cl <- parallel::makeCluster(1)
+     plan(cluster, workers = cl)
+     fs <- lapply(1:2, FU .... [TRUNCATED] 
Iteration #1
[10:52:26.226] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:26.227] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:52:26.228] |  :  all.equal() for FutureStrategyList ...
[10:52:26.228] |  :  .  New stack:
[10:52:26.228] |  :  .  List of 1
[10:52:26.228] |  :  .   $ :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[10:52:26.228] |  :  .      envir = parent.frame())  
[10:52:26.228] |  :  .    ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[10:52:26.228] |  :  .    ..- attr(*, "init")= logi TRUE
[10:52:26.228] |  :  .    ..- attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:52:26.228] |  :  .      interrupts = FALSE, persistent = FALSE, ...)  
[10:52:26.228] |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:26.228] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:26.228] |  :  .    ..- attr(*, "tweaks")=List of 1
[10:52:26.228] |  :  .    .. ..$ workers:List of 1
[10:52:26.228] |  :  .    .. .. ..$ :List of 3
[10:52:26.228] |  :  .    .. .. .. ..$ con : 'sockconn' int 4
[10:52:26.228] |  :  .    .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[10:52:26.228] |  :  .    .. .. .. ..$ host: chr "localhost"
[10:52:26.228] |  :  .    .. .. .. ..$ rank: num 0
[10:52:26.228] |  :  .    .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[10:52:26.228] |  :  .    .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[10:52:26.228] |  :  .    ..- attr(*, "call")= language plan(cluster, workers = cl)
[10:52:26.228] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:26.238] |  :  .  Old stack:
[10:52:26.238] |  :  .  List of 1
[10:52:26.238] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:26.238] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:26.238] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:26.238] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:26.238] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:26.238] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:52:26.238] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:26.240] |  :  .  Not identical
[10:52:26.240] |  :  .  all.equal() for future ...
[10:52:26.240] |  :  .  |  List of 2
[10:52:26.240] |  :  .  |   $ target :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[10:52:26.240] |  :  .  |      envir = parent.frame())  
[10:52:26.240] |  :  .  |    ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[10:52:26.240] |  :  .  |    ..- attr(*, "init")= logi TRUE
[10:52:26.240] |  :  .  |    ..- attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:52:26.240] |  :  .  |      interrupts = FALSE, persistent = FALSE, ...)  
[10:52:26.240] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:26.240] |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:26.240] |  :  .  |    ..- attr(*, "tweaks")=List of 1
[10:52:26.240] |  :  .  |    .. ..$ workers:List of 1
[10:52:26.240] |  :  .  |    .. .. ..$ :List of 3
[10:52:26.240] |  :  .  |    .. .. .. ..$ con : 'sockconn' int 4
[10:52:26.240] |  :  .  |    .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[10:52:26.240] |  :  .  |    .. .. .. ..$ host: chr "localhost"
[10:52:26.240] |  :  .  |    .. .. .. ..$ rank: num 0
[10:52:26.240] |  :  .  |    .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[10:52:26.240] |  :  .  |    .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[10:52:26.240] |  :  .  |    ..- attr(*, "call")= language plan(cluster, workers = cl)
[10:52:26.240] |  :  .  |   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:26.240] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:26.240] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:26.240] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:26.240] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:26.240] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:26.247] |  :  .  |  Formals differ
[10:52:26.247] |  :  .  all.equal() for future ... done
[10:52:26.247] |  :  .  Future strategies differ at level 1
[10:52:26.247] |  :  all.equal() for FutureStrategyList ... done
[10:52:26.247] |  :  plan(): Setting new future strategy stack:
[10:52:26.247] |  :  List of future strategies:
[10:52:26.247] |  :  1. cluster:
[10:52:26.247] |  :     - args: function (..., workers = "<socket cluster with 1 nodes on host ‘localhost’>", envir = parent.frame())
[10:52:26.247] |  :     - tweaked: TRUE
[10:52:26.247] |  :     - call: plan(cluster, workers = cl)
[10:52:26.248] |  :  List of 1
[10:52:26.248] |  :   $ :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[10:52:26.248] |  :      envir = parent.frame())  
[10:52:26.248] |  :    ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[10:52:26.248] |  :    ..- attr(*, "init")= logi TRUE
[10:52:26.248] |  :    ..- attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:52:26.248] |  :      interrupts = FALSE, persistent = FALSE, ...)  
[10:52:26.248] |  :    .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:26.248] |  :    ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:26.248] |  :    ..- attr(*, "tweaks")=List of 1
[10:52:26.248] |  :    .. ..$ workers:List of 1
[10:52:26.248] |  :    .. .. ..$ :List of 3
[10:52:26.248] |  :    .. .. .. ..$ con : 'sockconn' int 4
[10:52:26.248] |  :    .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[10:52:26.248] |  :    .. .. .. ..$ host: chr "localhost"
[10:52:26.248] |  :    .. .. .. ..$ rank: num 0
[10:52:26.248] |  :    .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[10:52:26.248] |  :    .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[10:52:26.248] |  :    ..- attr(*, "call")= language plan(cluster, workers = cl)
[10:52:26.248] |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:26.253] |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:52:26.253] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:26.253] |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:26.253] |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:26.254] |  :  .  Legacy shutdown of cluster workers ...
[10:52:26.254] |  :  .  |  Stopping existing cluster ...
[10:52:26.254] |  :  .  |  :  No pre-existing cluster. Skipping
[10:52:26.254] |  :  .  |  Stopping existing cluster ... done
[10:52:26.254] |  :  .  Legacy shutdown of cluster workers ... done
[10:52:26.254] |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:52:26.254] |  :  plan(): plan_init() of ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ...
[10:52:26.254] |  :  .  function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[10:52:26.254] |  :  .      envir = parent.frame())  
[10:52:26.254] |  :  .   - attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[10:52:26.254] |  :  .   - attr(*, "init")= logi TRUE
[10:52:26.254] |  :  .   - attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:52:26.254] |  :  .      interrupts = FALSE, persistent = FALSE, ...)  
[10:52:26.254] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:26.254] |  :  .   - attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:26.254] |  :  .   - attr(*, "tweaks")=List of 1
[10:52:26.254] |  :  .    ..$ workers:List of 1
[10:52:26.254] |  :  .    .. ..$ :List of 3
[10:52:26.254] |  :  .    .. .. ..$ con : 'sockconn' int 4
[10:52:26.254] |  :  .    .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[10:52:26.254] |  :  .    .. .. ..$ host: chr "localhost"
[10:52:26.254] |  :  .    .. .. ..$ rank: num 0
[10:52:26.254] |  :  .    .. .. ..- attr(*, "class")= chr "SOCKnode"
[10:52:26.254] |  :  .    .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[10:52:26.254] |  :  .   - attr(*, "call")= language plan(cluster, workers = cl)
[10:52:26.259] |  :  .  init: TRUE
[10:52:26.259] |  :  .  makeFutureBackend(<tweaked>) ...
[10:52:26.259] |  :  .  |  Backend function: <‘NULL’>
[10:52:26.259] |  :  .  |  ClusterFutureBackend(..., persistent = FALSE, gc = TRUE, earlySignal = TRUE) ...
[10:52:26.259] |  :  .  |  :  Stopping existing cluster ...
[10:52:26.260] |  :  .  |  :  .  No pre-existing cluster. Skipping
[10:52:26.261] |  :  .  |  :  Stopping existing cluster ... done
[10:52:26.261] |  :  .  |  :  Number of workers: 1
[10:52:26.261] |  :  .  |  :  Generated workers UUID
[10:52:26.261] |  :  .  |  :  Workers UUID: ‘381ebb526f9eb2d90230a3c7b34be202’
[10:52:26.262] |  :  .  |  ClusterFutureBackend(..., persistent = FALSE, gc = TRUE, earlySignal = TRUE) ... done
[10:52:26.262] |  :  .  |  Backend: <‘ClusterFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:26.262] |  :  .  makeFutureBackend(<tweaked>) ... done
[10:52:26.262] |  :  plan(): plan_init() of ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ... done
[10:52:26.262] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:26.262] |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:52:26.262] |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:26.262] |  :  plan(): nbrOfWorkers() = 1
[10:52:26.263] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:52:26.263] plan(<tweaked>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:26.263] getGlobalsAndPackages() ...
[10:52:26.263] |  Searching for globals ...
[10:52:26.270] |  :  globals found: [3] ‘[[’, ‘X’, ‘i’
[10:52:26.270] |  Searching for globals ... DONE
[10:52:26.270] |  Resolving globals: FALSE
[10:52:26.270] |  Search for packages associated with the globals ...
[10:52:26.270] |  :  Packages associated with globals: [1] ‘base’
[10:52:26.271] |  :  Packages: [1] ‘base’
[10:52:26.271] |  Search for packages associated with the globals ... DONE
[10:52:26.271] |  Packages after dropping 'base': [0] 
[10:52:26.271] |  globals: [2] ‘X’, ‘i’
[10:52:26.271] |  packages: [0] 
[10:52:26.271] getGlobalsAndPackages() ... done
[10:52:26.272] run() for Future (‘Future’) ...
[10:52:26.272] |  state: ‘created’
[10:52:26.272] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:26.272] |  plan(<tweaked>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:26.272] |  Using ClusterFutureBackend ...
[10:52:26.273] |  :  Launching futures ...
[10:52:26.273] |  :  .  launchFuture() for ClusterFutureBackend ...
[10:52:26.273] |  :  .  |  Workers: [n=1]
[10:52:26.273] |  :  .  |  socket cluster with 1 nodes on host ‘localhost’
[10:52:26.273] |  :  .  |  FutureRegistry: ‘workers-381ebb526f9eb2d90230a3c7b34be202’
[10:52:26.273] |  :  .  |  requestWorker() ...
[10:52:26.273] |  :  .  |  :  requestNode() ...
[10:52:26.274] |  :  .  |  :  .  Number of workers: 1
[10:52:26.274] |  :  .  |  :  .  Polling for a free worker ...
[10:52:26.274] |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[10:52:26.274] |  :  .  |  :  .  |  :  Created empty registry ‘workers-381ebb526f9eb2d90230a3c7b34be202’
[10:52:26.274] |  :  .  |  :  .  |  :  Listing all futures
[10:52:26.274] |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:52:26.274] |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[10:52:26.274] |  :  .  |  :  .  |  Total time: 0
[10:52:26.274] |  :  .  |  :  .  Polling for a free worker ... done
[10:52:26.274] |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[10:52:26.275] |  :  .  |  :  .  |  Listing all futures
[10:52:26.275] |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:26.275] |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[10:52:26.275] |  :  .  |  :  .  Index of first available worker: 1
[10:52:26.275] |  :  .  |  :  .  Validate that the worker is functional ...
[10:52:26.328] |  :  .  |  :  .  |  Worker is functional
[10:52:26.328] |  :  .  |  :  .  requestNode() ... done
[10:52:26.328] |  :  .  |  :  .  cluster node index: 1
[10:52:26.329] |  :  .  |  :  requestWorker() ... done
[10:52:26.329] |  :  .  |  :  eraseGlobalEnvironment() ...
[10:52:26.329] |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:52:26.329] |  :  .  |  :  launchFuture() ...
[10:52:26.330] |  :  .  |  :  .  cluster node index: 1
[10:52:26.330] |  :  .  |  :  .  getFutureData() ...
[10:52:26.330] |  :  .  |  :  .  |  getFutureCore() ...
[10:52:26.330] |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:52:26.330] |  :  .  |  :  .  |  getFutureCore() ... done
[10:52:26.330] |  :  .  |  :  .  |  getFutureCapture() ...
[10:52:26.330] |  :  .  |  :  .  |  getFutureCapture() ... done
[10:52:26.331] |  :  .  |  :  .  |  getFutureContext() ...
[10:52:26.331] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:26.331] |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:52:26.331] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:26.331] |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:52:26.331] |  :  .  |  :  .  |  getFutureContext() ... done
[10:52:26.331] |  :  .  |  :  .  getFutureData() ... done
[10:52:26.332] |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'add', earlySignal = 0) ...
[10:52:26.332] |  :  .  |  :  .  |  Appended future to position #1
[10:52:26.332] |  :  .  |  :  .  |  Number of registered futures: 1
[10:52:26.332] |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'add', earlySignal = 0) ... done
[10:52:26.332] |  :  .  |  :  launchFuture() ... done
[10:52:26.332] |  :  .  |  :  ClusterFuture started
[10:52:26.332] |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:52:26.332] |  :  .  Launching futures ... done
[10:52:26.333] |  :  .  Future launched: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:26.333] |  :  Using ClusterFutureBackend ... done
[10:52:26.333] |  run() for Future (‘ClusterFuture’) ... done
[10:52:26.333] |  getGlobalsAndPackages() ...
[10:52:26.333] |  :  Searching for globals ...
[10:52:26.334] |  :  .  globals found: [3] ‘[[’, ‘X’, ‘i’
[10:52:26.334] |  :  Searching for globals ... DONE
[10:52:26.334] |  :  Resolving globals: FALSE
[10:52:26.334] |  :  Search for packages associated with the globals ...
[10:52:26.335] |  :  .  Packages associated with globals: [1] ‘base’
[10:52:26.335] |  :  .  Packages: [1] ‘base’
[10:52:26.335] |  :  Search for packages associated with the globals ... DONE
[10:52:26.335] |  :  Packages after dropping 'base': [0] 
[10:52:26.335] |  :  globals: [2] ‘X’, ‘i’
[10:52:26.335] |  :  packages: [0] 
[10:52:26.335] |  getGlobalsAndPackages() ... done
[10:52:26.336] |  run() for Future (‘Future’) ...
[10:52:26.336] |  :  state: ‘created’
[10:52:26.336] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:26.336] |  :  plan(<tweaked>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:26.336] |  :  Using ClusterFutureBackend ...
[10:52:26.336] |  :  .  Launching futures ...
[10:52:26.336] |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:52:26.336] |  :  .  |  :  Workers: [n=1]
[10:52:26.336] |  :  .  |  :  socket cluster with 1 nodes on host ‘localhost’
[10:52:26.337] |  :  .  |  :  FutureRegistry: ‘workers-381ebb526f9eb2d90230a3c7b34be202’
[10:52:26.337] |  :  .  |  :  requestWorker() ...
[10:52:26.337] |  :  .  |  :  .  requestNode() ...
[10:52:26.337] |  :  .  |  :  .  |  Number of workers: 1
[10:52:26.337] |  :  .  |  :  .  |  Polling for a free worker ...
[10:52:26.337] |  :  .  |  :  .  |  :  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[10:52:26.337] |  :  .  |  :  .  |  :  .  Listing all futures
[10:52:26.337] |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:52:26.337] |  :  .  |  :  .  |  :  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[10:52:26.338] |  :  .  |  :  .  |  :  Poll #1 (0): usedNodes() = 1, workers = 1
[10:52:26.348] |  :  .  |  :  .  |  :  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ...
[10:52:26.348] |  :  .  |  :  .  |  :  .  collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ...
[10:52:26.348] |  :  .  |  :  .  |  :  .  |  isFutureResolved() ...
[10:52:26.349] |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:52:26.349] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:26.349] |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:52:26.360] |  :  .  |  :  .  |  :  .  |  isFutureResolved() ... done
[10:52:26.360] |  :  .  |  :  .  |  :  .  |  Future at position #1 is not resolved
[10:52:26.360] |  :  .  |  :  .  |  :  .  collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ... done
[10:52:26.360] |  :  .  |  :  .  |  :  .  Early signaling of 1 future candidates ...
[10:52:26.360] |  :  .  |  :  .  |  :  .  Number of futures with early signaling requested: 0
[10:52:26.360] |  :  .  |  :  .  |  :  .  Early signaling of 1 future candidates ... done
[10:52:26.360] |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:52:26.361] |  :  .  |  :  .  |  :  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ... done
[10:52:26.361] |  :  .  |  :  .  |  :  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[10:52:26.361] |  :  .  |  :  .  |  :  .  Listing all futures
[10:52:26.361] |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:52:26.361] |  :  .  |  :  .  |  :  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[10:52:26.361] |  :  .  |  :  .  |  :  Poll #2 (0.02 secs): usedNodes() = 1, workers = 1
[10:52:26.372] |  :  .  |  :  .  |  :  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ...
[10:52:26.400] |  :  .  |  :  .  |  :  .  collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ...
[10:52:26.400] |  :  .  |  :  .  |  :  .  |  isFutureResolved() ...
[10:52:26.400] |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:52:26.400] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:26.401] |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:52:26.411] |  :  .  |  :  .  |  :  .  |  isFutureResolved() ... done
[10:52:26.411] |  :  .  |  :  .  |  :  .  |  Future at position #1 is not resolved
[10:52:26.411] |  :  .  |  :  .  |  :  .  collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ... done
[10:52:26.411] |  :  .  |  :  .  |  :  .  Early signaling of 1 future candidates ...
[10:52:26.411] |  :  .  |  :  .  |  :  .  Number of futures with early signaling requested: 0
[10:52:26.411] |  :  .  |  :  .  |  :  .  Early signaling of 1 future candidates ... done
[10:52:26.412] |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:52:26.412] |  :  .  |  :  .  |  :  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ... done
[10:52:26.412] |  :  .  |  :  .  |  :  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[10:52:26.412] |  :  .  |  :  .  |  :  .  Listing all futures
[10:52:26.412] |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:52:26.412] |  :  .  |  :  .  |  :  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[10:52:26.412] |  :  .  |  :  .  |  :  Poll #3 (0.07 secs): usedNodes() = 1, workers = 1
[10:52:26.423] |  :  .  |  :  .  |  :  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ...
[10:52:26.423] |  :  .  |  :  .  |  :  .  collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ...
[10:52:26.423] |  :  .  |  :  .  |  :  .  |  isFutureResolved() ...
[10:52:26.423] |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:52:26.423] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:26.424] |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:52:26.429] |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:52:26.429] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:26.429] |  :  .  |  :  .  |  :  .  |  :  .  [1] TRUE
[10:52:26.429] |  :  .  |  :  .  |  :  .  |  :  .  received data:
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .  List of 5
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .   $ type   : chr "VALUE"
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .   $ value  :List of 13
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .    ..$ value            : int 1
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .    ..$ stdout           : chr ""
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .    ..$ conditions       : list()
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ added   : NULL
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ removed : NULL
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ replaced: NULL
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:26"
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:26"
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .    ..$ session_uuid     : chr "b575b5f5cd56b152a7d3b2a456c648b9"
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ pid   : int 68114
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:26"
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .    ..$ r_info           :List of 4
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .   $ success: logi TRUE
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.054 0.002 0.056 0 0
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:26.430] |  :  .  |  :  .  |  :  .  |  :  .   $ tag    : NULL
[10:52:26.442] |  :  .  |  :  .  |  :  .  |  :  .  Received FutureResult
[10:52:26.442] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'remove', earlySignal = 0) ...
[10:52:26.445] |  :  .  |  :  .  |  :  .  |  :  .  |  Removed future from position #1
[10:52:26.445] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:26.445] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'remove', earlySignal = 0) ... done
[10:52:26.445] |  :  .  |  :  .  |  :  .  |  :  .  Erased future from future backend
[10:52:26.445] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:26.445] |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:26.445] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:26.446] |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:26.446] |  :  .  |  :  .  |  :  .  |  isFutureResolved() ... done
[10:52:26.446] |  :  .  |  :  .  |  :  .  |  Future at position #1 is resolved ...
[10:52:26.446] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:52:26.446] |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:52:26.447] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:52:26.447] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:52:26.447] |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:52:26.447] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:52:26.447] |  :  .  |  :  .  |  :  .  |  Future at position #1 is resolved ... done
[10:52:26.447] |  :  .  |  :  .  |  :  .  collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ... done
[10:52:26.447] |  :  .  |  :  .  |  :  .  Early signaling of 1 future candidates ...
[10:52:26.447] |  :  .  |  :  .  |  :  .  Number of futures with early signaling requested: 0
[10:52:26.447] |  :  .  |  :  .  |  :  .  Early signaling of 1 future candidates ... done
[10:52:26.447] |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:52:26.447] |  :  .  |  :  .  |  :  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ... done
[10:52:26.448] |  :  .  |  :  .  |  :  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[10:52:26.448] |  :  .  |  :  .  |  :  .  Listing all futures
[10:52:26.448] |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:52:26.448] |  :  .  |  :  .  |  :  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[10:52:26.448] |  :  .  |  :  .  |  :  Total time: 0.110406875610352
[10:52:26.448] |  :  .  |  :  .  |  Polling for a free worker ... done
[10:52:26.448] |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[10:52:26.448] |  :  .  |  :  .  |  :  Listing all futures
[10:52:26.448] |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:52:26.448] |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[10:52:26.449] |  :  .  |  :  .  |  Index of first available worker: 1
[10:52:26.449] |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:52:26.449] |  :  .  |  :  .  |  :  Worker is functional
[10:52:26.449] |  :  .  |  :  .  |  requestNode() ... done
[10:52:26.450] |  :  .  |  :  .  |  cluster node index: 1
[10:52:26.450] |  :  .  |  :  .  requestWorker() ... done
[10:52:26.450] |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:52:26.450] |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:52:26.450] |  :  .  |  :  .  launchFuture() ...
[10:52:26.450] |  :  .  |  :  .  |  cluster node index: 1
[10:52:26.450] |  :  .  |  :  .  |  getFutureData() ...
[10:52:26.451] |  :  .  |  :  .  |  :  getFutureCore() ...
[10:52:26.451] |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:26.451] |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:52:26.451] |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:52:26.451] |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:52:26.451] |  :  .  |  :  .  |  :  getFutureContext() ...
[10:52:26.451] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:26.451] |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:26.451] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:26.451] |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:26.452] |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:52:26.452] |  :  .  |  :  .  |  getFutureData() ... done
[10:52:26.452] |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'add', earlySignal = 0) ...
[10:52:26.452] |  :  .  |  :  .  |  :  Appended future to position #1
[10:52:26.452] |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:52:26.452] |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'add', earlySignal = 0) ... done
[10:52:26.452] |  :  .  |  :  .  launchFuture() ... done
[10:52:26.452] |  :  .  |  :  .  ClusterFuture started
[10:52:26.453] |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:52:26.453] |  :  .  |  Launching futures ... done
[10:52:26.453] |  :  .  |  Future launched: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:26.453] |  :  .  Using ClusterFutureBackend ... done
[10:52:26.453] |  :  run() for Future (‘ClusterFuture’) ... done
[10:52:26.454] |  :  value() on list ...
[10:52:26.454] |  :  .  recursive: 0
[10:52:26.454] |  :  .  length: 2
[10:52:26.454] |  :  .  
[10:52:26.454] |  :  .  Number of remaining objects: 2
[10:52:26.454] |  :  .  checking value #1 ...
[10:52:26.454] |  :  .  |  'obj' is ClusterFuture
[10:52:26.454] |  :  .  |  ClusterFuture #1
[10:52:26.455] |  :  .  |  signalConditionsASAP(ClusterFuture, pos=1) ...
[10:52:26.455] |  :  .  |  :  nx: 2
[10:52:26.455] |  :  .  |  :  relay: TRUE
[10:52:26.456] |  :  .  |  :  stdout: TRUE
[10:52:26.456] |  :  .  |  :  signal: TRUE
[10:52:26.456] |  :  .  |  :  resignal: FALSE
[10:52:26.456] |  :  .  |  :  force: TRUE
[10:52:26.456] |  :  .  |  :  relayed: [n=2] FALSE, FALSE
[10:52:26.456] |  :  .  |  :  queued futures: [n=2] FALSE, FALSE
[10:52:26.457] |  :  .  |  :  until=1
[10:52:26.457] |  :  .  |  :  relaying element #1
[10:52:26.457] |  :  .  |  :  result() for ClusterFuture ...
[10:52:26.457] |  :  .  |  :  .  result already collected: FutureResult
[10:52:26.457] |  :  .  |  :  result() for ClusterFuture ... done
[10:52:26.457] |  :  .  |  :  result() for ClusterFuture ...
[10:52:26.457] |  :  .  |  :  .  result already collected: FutureResult
[10:52:26.457] |  :  .  |  :  result() for ClusterFuture ... done
[10:52:26.457] |  :  .  |  :  result() for ClusterFuture ...
[10:52:26.457] |  :  .  |  :  .  result already collected: FutureResult
[10:52:26.457] |  :  .  |  :  result() for ClusterFuture ... done
[10:52:26.458] |  :  .  |  :  result() for ClusterFuture ...
[10:52:26.458] |  :  .  |  :  .  result already collected: FutureResult
[10:52:26.458] |  :  .  |  :  result() for ClusterFuture ... done
[10:52:26.458] |  :  .  |  :  relayed: [n=2] TRUE, FALSE
[10:52:26.458] |  :  .  |  :  queued futures: [n=2] TRUE, FALSE
[10:52:26.458] |  :  .  |  signalConditionsASAP(ClusterFuture, pos=1) ... done
[10:52:26.458] |  :  .  |  value(<ClusterFuture>, ...) ...
[10:52:26.458] |  :  .  |  :  result() for ClusterFuture ...
[10:52:26.458] |  :  .  |  :  .  result already collected: FutureResult
[10:52:26.458] |  :  .  |  :  result() for ClusterFuture ... done
[10:52:26.458] |  :  .  |  :  result() for ClusterFuture ...
[10:52:26.459] |  :  .  |  :  .  result already collected: FutureResult
[10:52:26.459] |  :  .  |  :  result() for ClusterFuture ... done
[10:52:26.459] |  :  .  |  :  value: <integer>
[10:52:26.459] |  :  .  |  value(<ClusterFuture>, ...) ... done
[10:52:26.459] |  :  .  |  signalConditionsASAP(ClusterFuture, pos=1) ...
[10:52:26.459] |  :  .  |  :  nx: 2
[10:52:26.459] |  :  .  |  :  relay: TRUE
[10:52:26.459] |  :  .  |  :  stdout: TRUE
[10:52:26.459] |  :  .  |  :  signal: TRUE
[10:52:26.459] |  :  .  |  :  resignal: FALSE
[10:52:26.459] |  :  .  |  :  force: TRUE
[10:52:26.459] |  :  .  |  :  relayed: [n=2] TRUE, FALSE
[10:52:26.460] |  :  .  |  :  queued futures: [n=2] TRUE, FALSE
[10:52:26.460] |  :  .  |  :  until=2
[10:52:26.460] |  :  .  |  :  relaying element #2
[10:52:26.460] |  :  .  |  :  relayed: [n=2] TRUE, FALSE
[10:52:26.460] |  :  .  |  :  queued futures: [n=2] TRUE, FALSE
[10:52:26.460] |  :  .  |  signalConditionsASAP(NULL, pos=1) ... done
[10:52:26.460] |  :  .  |  length: 1 (resolved future 1)
[10:52:26.460] |  :  .  checking value #1 ... done
[10:52:26.460] |  :  .  checking value #2 ...
[10:52:26.461] |  :  .  |  'obj' is ClusterFuture
[10:52:26.461] |  :  .  |  isFutureResolved() ...
[10:52:26.461] |  :  .  |  :  assertValidConnection() ...
[10:52:26.461] |  :  .  |  :  .  cluster node index: 1
[10:52:26.461] |  :  .  |  :  assertValidConnection() ... done
[10:52:26.472] |  :  .  |  isFutureResolved() ... done
[10:52:26.472] |  :  .  checking value #2 ... done
[10:52:26.482] |  :  .  Number of remaining objects: 1
[10:52:26.482] |  :  .  checking value #2 ...
[10:52:26.482] |  :  .  |  'obj' is ClusterFuture
[10:52:26.482] |  :  .  |  isFutureResolved() ...
[10:52:26.483] |  :  .  |  :  assertValidConnection() ...
[10:52:26.483] |  :  .  |  :  .  cluster node index: 1
[10:52:26.483] |  :  .  |  :  assertValidConnection() ... done
[10:52:26.493] |  :  .  |  isFutureResolved() ... done
[10:52:26.494] |  :  .  checking value #2 ... done
[10:52:26.504] |  :  .  Number of remaining objects: 1
[10:52:26.504] |  :  .  checking value #2 ...
[10:52:26.504] |  :  .  |  'obj' is ClusterFuture
[10:52:26.504] |  :  .  |  isFutureResolved() ...
[10:52:26.504] |  :  .  |  :  assertValidConnection() ...
[10:52:26.505] |  :  .  |  :  .  cluster node index: 1
[10:52:26.505] |  :  .  |  :  assertValidConnection() ... done
[10:52:26.505] |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:52:26.505] |  :  .  |  :  .  cluster node index: 1
[10:52:26.505] |  :  .  |  :  .  [1] TRUE
[10:52:26.505] |  :  .  |  :  .  received data:
[10:52:26.506] |  :  .  |  :  .  List of 5
[10:52:26.506] |  :  .  |  :  .   $ type   : chr "VALUE"
[10:52:26.506] |  :  .  |  :  .   $ value  :List of 13
[10:52:26.506] |  :  .  |  :  .    ..$ value            : int 2
[10:52:26.506] |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:52:26.506] |  :  .  |  :  .    ..$ stdout           : chr ""
[10:52:26.506] |  :  .  |  :  .    ..$ conditions       : list()
[10:52:26.506] |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:52:26.506] |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:52:26.506] |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:52:26.506] |  :  .  |  :  .    .. ..$ added   : NULL
[10:52:26.506] |  :  .  |  :  .    .. ..$ removed : NULL
[10:52:26.506] |  :  .  |  :  .    .. ..$ replaced: NULL
[10:52:26.506] |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:52:26.506] |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:26"
[10:52:26.506] |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:26"
[10:52:26.506] |  :  .  |  :  .    ..$ session_uuid     : chr "b575b5f5cd56b152a7d3b2a456c648b9"
[10:52:26.506] |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:52:26.506] |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:26.506] |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:26.506] |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:26.506] |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:26.506] |  :  .  |  :  .    .. .. ..$ pid   : int 68114
[10:52:26.506] |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:26"
[10:52:26.506] |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:52:26.506] |  :  .  |  :  .    ..$ r_info           :List of 4
[10:52:26.506] |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:26.506] |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:52:26.506] |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:52:26.506] |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:52:26.506] |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:52:26.506] |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:52:26.506] |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:52:26.506] |  :  .  |  :  .   $ success: logi TRUE
[10:52:26.506] |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.002 0 0.003 0 0
[10:52:26.506] |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:26.506] |  :  .  |  :  .   $ tag    : NULL
[10:52:26.515] |  :  .  |  :  .  Received FutureResult
[10:52:26.515] |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'remove', earlySignal = 0) ...
[10:52:26.516] |  :  .  |  :  .  |  Removed future from position #1
[10:52:26.516] |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:26.516] |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'remove', earlySignal = 0) ... done
[10:52:26.516] |  :  .  |  :  .  Erased future from future backend
[10:52:26.516] |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:26.516] |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:26.516] |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:26.516] |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:26.516] |  :  .  |  isFutureResolved() ... done
[10:52:26.516] |  :  .  |  ClusterFuture #2
[10:52:26.517] |  :  .  |  signalConditionsASAP(ClusterFuture, pos=2) ...
[10:52:26.518] |  :  .  |  :  nx: 2
[10:52:26.518] |  :  .  |  :  relay: TRUE
[10:52:26.518] |  :  .  |  :  stdout: TRUE
[10:52:26.518] |  :  .  |  :  signal: TRUE
[10:52:26.518] |  :  .  |  :  resignal: FALSE
[10:52:26.518] |  :  .  |  :  force: TRUE
[10:52:26.518] |  :  .  |  :  relayed: [n=2] TRUE, FALSE
[10:52:26.518] |  :  .  |  :  queued futures: [n=2] TRUE, FALSE
[10:52:26.518] |  :  .  |  :  until=2
[10:52:26.519] |  :  .  |  :  relaying element #2
[10:52:26.519] |  :  .  |  :  result() for ClusterFuture ...
[10:52:26.519] |  :  .  |  :  .  result already collected: FutureResult
[10:52:26.519] |  :  .  |  :  result() for ClusterFuture ... done
[10:52:26.519] |  :  .  |  :  result() for ClusterFuture ...
[10:52:26.519] |  :  .  |  :  .  result already collected: FutureResult
[10:52:26.519] |  :  .  |  :  result() for ClusterFuture ... done
[10:52:26.519] |  :  .  |  :  result() for ClusterFuture ...
[10:52:26.519] |  :  .  |  :  .  result already collected: FutureResult
[10:52:26.519] |  :  .  |  :  result() for ClusterFuture ... done
[10:52:26.520] |  :  .  |  :  result() for ClusterFuture ...
[10:52:26.520] |  :  .  |  :  .  result already collected: FutureResult
[10:52:26.520] |  :  .  |  :  result() for ClusterFuture ... done
[10:52:26.520] |  :  .  |  :  relayed: [n=2] TRUE, TRUE
[10:52:26.520] |  :  .  |  :  queued futures: [n=2] TRUE, TRUE
[10:52:26.520] |  :  .  |  signalConditionsASAP(ClusterFuture, pos=2) ... done
[10:52:26.520] |  :  .  |  value(<ClusterFuture>, ...) ...
[10:52:26.520] |  :  .  |  :  result() for ClusterFuture ...
[10:52:26.520] |  :  .  |  :  .  result already collected: FutureResult
[10:52:26.520] |  :  .  |  :  result() for ClusterFuture ... done
[10:52:26.520] |  :  .  |  :  result() for ClusterFuture ...
[10:52:26.521] |  :  .  |  :  .  result already collected: FutureResult
[10:52:26.521] |  :  .  |  :  result() for ClusterFuture ... done
[10:52:26.521] |  :  .  |  :  value: <integer>
[10:52:26.521] |  :  .  |  value(<ClusterFuture>, ...) ... done
[10:52:26.521] |  :  .  |  signalConditionsASAP(ClusterFuture, pos=2) ...
[10:52:26.521] |  :  .  |  :  nx: 2
[10:52:26.521] |  :  .  |  :  relay: TRUE
[10:52:26.521] |  :  .  |  :  stdout: TRUE
[10:52:26.521] |  :  .  |  :  signal: TRUE
[10:52:26.521] |  :  .  |  :  resignal: FALSE
[10:52:26.521] |  :  .  |  :  force: TRUE
[10:52:26.521] |  :  .  |  :  relayed: [n=2] TRUE, TRUE
[10:52:26.522] |  :  .  |  :  queued futures: [n=2] TRUE, TRUE
[10:52:26.522] |  :  .  |  :  until=2
[10:52:26.522] |  :  .  |  :  relayed: [n=2] TRUE, TRUE
[10:52:26.522] |  :  .  |  :  queued futures: [n=2] TRUE, TRUE
[10:52:26.522] |  :  .  |  signalConditionsASAP(ClusterFuture, pos=2) ... done
[10:52:26.522] |  :  .  |  length: 0 (resolved future 2)
[10:52:26.522] |  :  .  checking value #2 ... done
[10:52:26.522] |  :  .  Relaying remaining futures ...
[10:52:26.522] |  :  .  |  signalConditionsASAP(NULL, pos=0) ...
[10:52:26.522] |  :  .  |  :  nx: 2
[10:52:26.522] |  :  .  |  :  relay: TRUE
[10:52:26.523] |  :  .  |  :  stdout: TRUE
[10:52:26.523] |  :  .  |  :  signal: TRUE
[10:52:26.523] |  :  .  |  :  resignal: FALSE
[10:52:26.523] |  :  .  |  :  force: TRUE
[10:52:26.523] |  :  .  |  :  relayed: [n=2] TRUE, TRUE
[10:52:26.523] |  :  .  |  :  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:52:26.523] |  :  .  |  :  relayed: [n=2] TRUE, TRUE
[10:52:26.523] |  :  .  |  :  queued futures: [n=2] TRUE, TRUE
[10:52:26.523] |  :  .  |  signalConditionsASAP(NULL, pos=0) ... done
[10:52:26.523] |  :  .  Relaying remaining futures ... done
[10:52:26.523] |  :  value() on list ... done
Iteration #2
[10:52:26.708] |  :  plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:26.709] |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:52:26.709] |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:26.709] |  :  .  |  :  New stack:
[10:52:26.709] |  :  .  |  :  List of 1
[10:52:26.709] |  :  .  |  :   $ :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[10:52:26.709] |  :  .  |  :      envir = parent.frame())  
[10:52:26.709] |  :  .  |  :    ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[10:52:26.709] |  :  .  |  :    ..- attr(*, "init")= logi TRUE
[10:52:26.709] |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:52:26.709] |  :  .  |  :      interrupts = FALSE, persistent = FALSE, ...)  
[10:52:26.709] |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:26.709] |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:26.709] |  :  .  |  :    ..- attr(*, "tweaks")=List of 1
[10:52:26.709] |  :  .  |  :    .. ..$ workers:List of 1
[10:52:26.709] |  :  .  |  :    .. .. ..$ :List of 3
[10:52:26.709] |  :  .  |  :    .. .. .. ..$ con : 'sockconn' int 4
[10:52:26.709] |  :  .  |  :    .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[10:52:26.709] |  :  .  |  :    .. .. .. ..$ host: chr "localhost"
[10:52:26.709] |  :  .  |  :    .. .. .. ..$ rank: num 0
[10:52:26.709] |  :  .  |  :    .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[10:52:26.709] |  :  .  |  :    .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[10:52:26.709] |  :  .  |  :    ..- attr(*, "call")= language plan(cluster, workers = cl)
[10:52:26.709] |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:26.715] |  :  .  |  :  Old stack:
[10:52:26.715] |  :  .  |  :  List of 1
[10:52:26.715] |  :  .  |  :   $ :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[10:52:26.715] |  :  .  |  :      envir = parent.frame())  
[10:52:26.715] |  :  .  |  :    ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[10:52:26.715] |  :  .  |  :    ..- attr(*, "init")= chr "done"
[10:52:26.715] |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:52:26.715] |  :  .  |  :      interrupts = FALSE, persistent = FALSE, ...)  
[10:52:26.715] |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:26.715] |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:26.715] |  :  .  |  :    ..- attr(*, "tweaks")=List of 1
[10:52:26.715] |  :  .  |  :    .. ..$ workers:List of 1
[10:52:26.715] |  :  .  |  :    .. .. ..$ :List of 3
[10:52:26.715] |  :  .  |  :    .. .. .. ..$ con : 'sockconn' int 4
[10:52:26.715] |  :  .  |  :    .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[10:52:26.715] |  :  .  |  :    .. .. .. ..$ host: chr "localhost"
[10:52:26.715] |  :  .  |  :    .. .. .. ..$ rank: num 0
[10:52:26.715] |  :  .  |  :    .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[10:52:26.715] |  :  .  |  :    .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[10:52:26.715] |  :  .  |  :    ..- attr(*, "call")= language plan(cluster, workers = cl)
[10:52:26.715] |  :  .  |  :    ..- attr(*, "backend")=Classes 'ClusterFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55d586b7dde8> 
[10:52:26.715] |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:52:26.715] |  :  .  |  :      interrupts = FALSE, persistent = FALSE, ...)  
[10:52:26.715] |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:26.715] |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:26.720] |  :  .  |  :  Not identical
[10:52:26.720] |  :  .  |  :  all.equal() for future ...
[10:52:26.721] |  :  .  |  :  .  List of 2
[10:52:26.721] |  :  .  |  :  .   $ target :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[10:52:26.721] |  :  .  |  :  .      envir = parent.frame())  
[10:52:26.721] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[10:52:26.721] |  :  .  |  :  .    ..- attr(*, "init")= logi TRUE
[10:52:26.721] |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:52:26.721] |  :  .  |  :  .      interrupts = FALSE, persistent = FALSE, ...)  
[10:52:26.721] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:26.721] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:26.721] |  :  .  |  :  .    ..- attr(*, "tweaks")=List of 1
[10:52:26.721] |  :  .  |  :  .    .. ..$ workers:List of 1
[10:52:26.721] |  :  .  |  :  .    .. .. ..$ :List of 3
[10:52:26.721] |  :  .  |  :  .    .. .. .. ..$ con : 'sockconn' int 4
[10:52:26.721] |  :  .  |  :  .    .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[10:52:26.721] |  :  .  |  :  .    .. .. .. ..$ host: chr "localhost"
[10:52:26.721] |  :  .  |  :  .    .. .. .. ..$ rank: num 0
[10:52:26.721] |  :  .  |  :  .    .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[10:52:26.721] |  :  .  |  :  .    .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[10:52:26.721] |  :  .  |  :  .    ..- attr(*, "call")= language plan(cluster, workers = cl)
[10:52:26.721] |  :  .  |  :  .   $ current:function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[10:52:26.721] |  :  .  |  :  .      envir = parent.frame())  
[10:52:26.721] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[10:52:26.721] |  :  .  |  :  .    ..- attr(*, "init")= chr "done"
[10:52:26.721] |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:52:26.721] |  :  .  |  :  .      interrupts = FALSE, persistent = FALSE, ...)  
[10:52:26.721] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:26.721] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:26.721] |  :  .  |  :  .    ..- attr(*, "tweaks")=List of 1
[10:52:26.721] |  :  .  |  :  .    .. ..$ workers:List of 1
[10:52:26.721] |  :  .  |  :  .    .. .. ..$ :List of 3
[10:52:26.721] |  :  .  |  :  .    .. .. .. ..$ con : 'sockconn' int 4
[10:52:26.721] |  :  .  |  :  .    .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[10:52:26.721] |  :  .  |  :  .    .. .. .. ..$ host: chr "localhost"
[10:52:26.721] |  :  .  |  :  .    .. .. .. ..$ rank: num 0
[10:52:26.721] |  :  .  |  :  .    .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[10:52:26.721] |  :  .  |  :  .    .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[10:52:26.721] |  :  .  |  :  .    ..- attr(*, "call")= language plan(cluster, workers = cl)
[10:52:26.721] |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'ClusterFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55d586b7dde8> 
[10:52:26.721] |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:52:26.721] |  :  .  |  :  .      interrupts = FALSE, persistent = FALSE, ...)  
[10:52:26.721] |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:26.733] |  :  .  |  :  .  Formals differ
[10:52:26.733] |  :  .  |  :  all.equal() for future ... done
[10:52:26.733] |  :  .  |  :  Future strategies differ at level 1
[10:52:26.733] |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:26.733] |  :  .  |  plan(): Setting new future strategy stack:
[10:52:26.733] |  :  .  |  List of future strategies:
[10:52:26.733] |  :  .  |  1. cluster:
[10:52:26.733] |  :  .  |     - args: function (..., workers = "<socket cluster with 1 nodes on host ‘localhost’>", envir = parent.frame())
[10:52:26.733] |  :  .  |     - tweaked: TRUE
[10:52:26.733] |  :  .  |     - call: plan(cluster, workers = cl)
[10:52:26.734] |  :  .  |  List of 1
[10:52:26.734] |  :  .  |   $ :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[10:52:26.734] |  :  .  |      envir = parent.frame())  
[10:52:26.734] |  :  .  |    ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[10:52:26.734] |  :  .  |    ..- attr(*, "init")= logi TRUE
[10:52:26.734] |  :  .  |    ..- attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:52:26.734] |  :  .  |      interrupts = FALSE, persistent = FALSE, ...)  
[10:52:26.734] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:26.734] |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:26.734] |  :  .  |    ..- attr(*, "tweaks")=List of 1
[10:52:26.734] |  :  .  |    .. ..$ workers:List of 1
[10:52:26.734] |  :  .  |    .. .. ..$ :List of 3
[10:52:26.734] |  :  .  |    .. .. .. ..$ con : 'sockconn' int 4
[10:52:26.734] |  :  .  |    .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[10:52:26.734] |  :  .  |    .. .. .. ..$ host: chr "localhost"
[10:52:26.734] |  :  .  |    .. .. .. ..$ rank: num 0
[10:52:26.734] |  :  .  |    .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[10:52:26.734] |  :  .  |    .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[10:52:26.734] |  :  .  |    ..- attr(*, "call")= language plan(cluster, workers = cl)
[10:52:26.734] |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:26.739] |  :  .  |  plan(): plan_cleanup(‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:52:26.739] |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:26.739] |  :  .  |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:52:26.739] |  :  .  |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:26.739] |  :  .  |  :  stopWorkers() for ClusterFutureBackend ...
[10:52:26.739] |  :  .  |  :  .  Interrupt active futures ...
[10:52:26.740] |  :  .  |  :  .  |  Number of futures: 0
[10:52:26.740] |  :  .  |  :  .  Interrupt active futures ... done
[10:52:26.740] |  :  .  |  :  .  Clear future registry ...
[10:52:26.741] |  :  .  |  :  .  Clear future registry ... done
[10:52:26.741] |  :  .  |  :  .  Stop cluster workers ...
[10:52:26.741] |  :  .  |  :  .  |  Stopping existing cluster ...
[10:52:26.741] |  :  .  |  :  .  |  :  No pre-existing cluster. Skipping
[10:52:26.741] |  :  .  |  :  .  |  Stopping existing cluster ... done
[10:52:26.741] |  :  .  |  :  .  Stop cluster workers ... done
[10:52:26.742] |  :  .  |  :  stopWorkers() for ClusterFutureBackend ... done
[10:52:26.742] |  :  .  |  :  Legacy shutdown of cluster workers ...
[10:52:26.742] |  :  .  |  :  .  Stopping existing cluster ...
[10:52:26.742] |  :  .  |  :  .  |  No pre-existing cluster. Skipping
[10:52:26.742] |  :  .  |  :  .  Stopping existing cluster ... done
[10:52:26.742] |  :  .  |  :  Legacy shutdown of cluster workers ... done
[10:52:26.742] |  :  .  |  plan(): plan_cleanup(‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:52:26.742] |  :  .  |  plan(): plan_init() of ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ...
[10:52:26.742] |  :  .  |  :  function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[10:52:26.742] |  :  .  |  :      envir = parent.frame())  
[10:52:26.742] |  :  .  |  :   - attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[10:52:26.742] |  :  .  |  :   - attr(*, "init")= logi TRUE
[10:52:26.742] |  :  .  |  :   - attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:52:26.742] |  :  .  |  :      interrupts = FALSE, persistent = FALSE, ...)  
[10:52:26.742] |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:26.742] |  :  .  |  :   - attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:26.742] |  :  .  |  :   - attr(*, "tweaks")=List of 1
[10:52:26.742] |  :  .  |  :    ..$ workers:List of 1
[10:52:26.742] |  :  .  |  :    .. ..$ :List of 3
[10:52:26.742] |  :  .  |  :    .. .. ..$ con : 'sockconn' int 4
[10:52:26.742] |  :  .  |  :    .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[10:52:26.742] |  :  .  |  :    .. .. ..$ host: chr "localhost"
[10:52:26.742] |  :  .  |  :    .. .. ..$ rank: num 0
[10:52:26.742] |  :  .  |  :    .. .. ..- attr(*, "class")= chr "SOCKnode"
[10:52:26.742] |  :  .  |  :    .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[10:52:26.742] |  :  .  |  :   - attr(*, "call")= language plan(cluster, workers = cl)
[10:52:26.748] |  :  .  |  :  init: TRUE
[10:52:26.748] |  :  .  |  :  makeFutureBackend(<tweaked>) ...
[10:52:26.748] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:52:26.773] |  :  .  |  :  .  ClusterFutureBackend(..., persistent = FALSE, gc = TRUE, earlySignal = TRUE) ...
[10:52:26.773] |  :  .  |  :  .  |  Stopping existing cluster ...
[10:52:26.773] |  :  .  |  :  .  |  :  No pre-existing cluster. Skipping
[10:52:26.773] |  :  .  |  :  .  |  Stopping existing cluster ... done
[10:52:26.773] |  :  .  |  :  .  |  Number of workers: 1
[10:52:26.774] |  :  .  |  :  .  |  Generated workers UUID
[10:52:26.774] |  :  .  |  :  .  |  Workers UUID: ‘381ebb526f9eb2d90230a3c7b34be202’
[10:52:26.774] |  :  .  |  :  .  ClusterFutureBackend(..., persistent = FALSE, gc = TRUE, earlySignal = TRUE) ... done
[10:52:26.774] |  :  .  |  :  .  Backend: <‘ClusterFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:26.774] |  :  .  |  :  makeFutureBackend(<tweaked>) ... done
[10:52:26.774] |  :  .  |  plan(): plan_init() of ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ... done
[10:52:26.774] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:26.774] |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:52:26.775] |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:26.775] |  :  .  |  plan(): nbrOfWorkers() = 1
[10:52:26.775] |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:52:26.775] |  :  plan(<tweaked>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:26.775] |  :  getGlobalsAndPackages() ...
[10:52:26.775] |  :  .  Searching for globals ...
[10:52:26.776] |  :  .  |  globals found: [3] ‘[[’, ‘X’, ‘i’
[10:52:26.776] |  :  .  Searching for globals ... DONE
[10:52:26.776] |  :  .  Resolving globals: FALSE
[10:52:26.776] |  :  .  Search for packages associated with the globals ...
[10:52:26.776] |  :  .  |  Packages associated with globals: [1] ‘base’
[10:52:26.777] |  :  .  |  Packages: [1] ‘base’
[10:52:26.777] |  :  .  Search for packages associated with the globals ... DONE
[10:52:26.777] |  :  .  Packages after dropping 'base': [0] 
[10:52:26.777] |  :  .  globals: [2] ‘X’, ‘i’
[10:52:26.777] |  :  .  packages: [0] 
[10:52:26.777] |  :  getGlobalsAndPackages() ... done
[10:52:26.777] |  :  run() for Future (‘Future’) ...
[10:52:26.777] |  :  .  state: ‘created’
[10:52:26.778] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:26.778] |  :  .  plan(<tweaked>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:26.778] |  :  .  Using ClusterFutureBackend ...
[10:52:26.778] |  :  .  |  Launching futures ...
[10:52:26.778] |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:52:26.778] |  :  .  |  :  .  Workers: [n=1]
[10:52:26.778] |  :  .  |  :  .  socket cluster with 1 nodes on host ‘localhost’
[10:52:26.778] |  :  .  |  :  .  FutureRegistry: ‘workers-381ebb526f9eb2d90230a3c7b34be202’
[10:52:26.779] |  :  .  |  :  .  requestWorker() ...
[10:52:26.779] |  :  .  |  :  .  |  requestNode() ...
[10:52:26.779] |  :  .  |  :  .  |  :  Number of workers: 1
[10:52:26.779] |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:52:26.779] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[10:52:26.779] |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:52:26.779] |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:26.779] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[10:52:26.779] |  :  .  |  :  .  |  :  .  Total time: 0
[10:52:26.779] |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:52:26.779] |  :  .  |  :  .  |  :  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[10:52:26.780] |  :  .  |  :  .  |  :  .  Listing all futures
[10:52:26.780] |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:52:26.780] |  :  .  |  :  .  |  :  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[10:52:26.780] |  :  .  |  :  .  |  :  Index of first available worker: 1
[10:52:26.780] |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:52:26.835] |  :  .  |  :  .  |  :  .  Worker is functional
[10:52:26.835] |  :  .  |  :  .  |  :  requestNode() ... done
[10:52:26.835] |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:26.835] |  :  .  |  :  .  |  requestWorker() ... done
[10:52:26.835] |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:52:26.836] |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:52:26.836] |  :  .  |  :  .  |  launchFuture() ...
[10:52:26.836] |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:26.836] |  :  .  |  :  .  |  :  getFutureData() ...
[10:52:26.836] |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:52:26.836] |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:52:26.836] |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:52:26.836] |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:52:26.836] |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:52:26.837] |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:52:26.837] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:26.837] |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:52:26.837] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:26.837] |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:52:26.837] |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:52:26.837] |  :  .  |  :  .  |  :  getFutureData() ... done
[10:52:26.838] |  :  .  |  :  .  |  :  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'add', earlySignal = 0) ...
[10:52:26.838] |  :  .  |  :  .  |  :  .  Appended future to position #1
[10:52:26.838] |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:52:26.838] |  :  .  |  :  .  |  :  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'add', earlySignal = 0) ... done
[10:52:26.838] |  :  .  |  :  .  |  launchFuture() ... done
[10:52:26.838] |  :  .  |  :  .  |  ClusterFuture started
[10:52:26.838] |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:52:26.838] |  :  .  |  :  Launching futures ... done
[10:52:26.838] |  :  .  |  :  Future launched: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:26.838] |  :  .  |  Using ClusterFutureBackend ... done
[10:52:26.839] |  :  .  run() for Future (‘ClusterFuture’) ... done
[10:52:26.839] |  :  .  getGlobalsAndPackages() ...
[10:52:26.839] |  :  .  |  Searching for globals ...
[10:52:26.840] |  :  .  |  :  globals found: [3] ‘[[’, ‘X’, ‘i’
[10:52:26.840] |  :  .  |  Searching for globals ... DONE
[10:52:26.840] |  :  .  |  Resolving globals: FALSE
[10:52:26.840] |  :  .  |  Search for packages associated with the globals ...
[10:52:26.840] |  :  .  |  :  Packages associated with globals: [1] ‘base’
[10:52:26.841] |  :  .  |  :  Packages: [1] ‘base’
[10:52:26.841] |  :  .  |  Search for packages associated with the globals ... DONE
[10:52:26.841] |  :  .  |  Packages after dropping 'base': [0] 
[10:52:26.841] |  :  .  |  globals: [2] ‘X’, ‘i’
[10:52:26.841] |  :  .  |  packages: [0] 
[10:52:26.841] |  :  .  getGlobalsAndPackages() ... done
[10:52:26.841] |  :  .  run() for Future (‘Future’) ...
[10:52:26.841] |  :  .  |  state: ‘created’
[10:52:26.842] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:26.842] |  :  .  |  plan(<tweaked>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:26.842] |  :  .  |  Using ClusterFutureBackend ...
[10:52:26.842] |  :  .  |  :  Launching futures ...
[10:52:26.842] |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:52:26.842] |  :  .  |  :  .  |  Workers: [n=1]
[10:52:26.842] |  :  .  |  :  .  |  socket cluster with 1 nodes on host ‘localhost’
[10:52:26.842] |  :  .  |  :  .  |  FutureRegistry: ‘workers-381ebb526f9eb2d90230a3c7b34be202’
[10:52:26.843] |  :  .  |  :  .  |  requestWorker() ...
[10:52:26.843] |  :  .  |  :  .  |  :  requestNode() ...
[10:52:26.843] |  :  .  |  :  .  |  :  .  Number of workers: 1
[10:52:26.843] |  :  .  |  :  .  |  :  .  Polling for a free worker ...
[10:52:26.843] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[10:52:26.843] |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:52:26.843] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:52:26.843] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[10:52:26.843] |  :  .  |  :  .  |  :  .  |  Poll #1 (0): usedNodes() = 1, workers = 1
[10:52:26.853] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ...
[10:52:26.854] |  :  .  |  :  .  |  :  .  |  :  collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ...
[10:52:26.854] |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:52:26.854] |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:52:26.854] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:26.855] |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:52:26.865] |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:52:26.865] |  :  .  |  :  .  |  :  .  |  :  .  Future at position #1 is not resolved
[10:52:26.865] |  :  .  |  :  .  |  :  .  |  :  collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ... done
[10:52:26.865] |  :  .  |  :  .  |  :  .  |  :  Early signaling of 1 future candidates ...
[10:52:26.865] |  :  .  |  :  .  |  :  .  |  :  Number of futures with early signaling requested: 0
[10:52:26.866] |  :  .  |  :  .  |  :  .  |  :  Early signaling of 1 future candidates ... done
[10:52:26.866] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:52:26.866] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ... done
[10:52:26.866] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[10:52:26.866] |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:52:26.866] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:52:26.866] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[10:52:26.866] |  :  .  |  :  .  |  :  .  |  Poll #2 (0.02 secs): usedNodes() = 1, workers = 1
[10:52:26.877] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ...
[10:52:26.877] |  :  .  |  :  .  |  :  .  |  :  collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ...
[10:52:26.877] |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:52:26.877] |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:52:26.877] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:26.878] |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:52:26.888] |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:52:26.888] |  :  .  |  :  .  |  :  .  |  :  .  Future at position #1 is not resolved
[10:52:26.888] |  :  .  |  :  .  |  :  .  |  :  collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ... done
[10:52:26.888] |  :  .  |  :  .  |  :  .  |  :  Early signaling of 1 future candidates ...
[10:52:26.888] |  :  .  |  :  .  |  :  .  |  :  Number of futures with early signaling requested: 0
[10:52:26.888] |  :  .  |  :  .  |  :  .  |  :  Early signaling of 1 future candidates ... done
[10:52:26.889] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:52:26.889] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ... done
[10:52:26.889] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[10:52:26.889] |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:52:26.889] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:52:26.889] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[10:52:26.889] |  :  .  |  :  .  |  :  .  |  Poll #3 (0.05 secs): usedNodes() = 1, workers = 1
[10:52:26.900] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ...
[10:52:26.900] |  :  .  |  :  .  |  :  .  |  :  collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ...
[10:52:26.900] |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:52:26.900] |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:52:26.900] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:26.901] |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:52:26.911] |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:52:26.911] |  :  .  |  :  .  |  :  .  |  :  .  Future at position #1 is not resolved
[10:52:26.911] |  :  .  |  :  .  |  :  .  |  :  collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ... done
[10:52:26.911] |  :  .  |  :  .  |  :  .  |  :  Early signaling of 1 future candidates ...
[10:52:26.911] |  :  .  |  :  .  |  :  .  |  :  Number of futures with early signaling requested: 0
[10:52:26.911] |  :  .  |  :  .  |  :  .  |  :  Early signaling of 1 future candidates ... done
[10:52:26.912] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:52:26.912] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ... done
[10:52:26.912] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[10:52:26.912] |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:52:26.912] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:52:26.912] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[10:52:26.912] |  :  .  |  :  .  |  :  .  |  Poll #4 (0.07 secs): usedNodes() = 1, workers = 1
[10:52:26.923] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ...
[10:52:26.923] |  :  .  |  :  .  |  :  .  |  :  collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ...
[10:52:26.923] |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:52:26.923] |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:52:26.924] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:26.924] |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:52:26.925] |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:52:26.925] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:26.925] |  :  .  |  :  .  |  :  .  |  :  .  |  :  [1] TRUE
[10:52:26.925] |  :  .  |  :  .  |  :  .  |  :  .  |  :  received data:
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  List of 5
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ type   : chr "VALUE"
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ value  :List of 13
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ value            : int 1
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ visible          : logi TRUE
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ stdout           : chr ""
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ conditions       : list()
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ rng              : logi FALSE
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseConnections:List of 3
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ added   : NULL
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ removed : NULL
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ replaced: NULL
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseDevices    : NULL
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:26"
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:26"
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ session_uuid     : chr "06afb10cb3547eefe2a67694cb7d74ee"
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ pid   : int 68134
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:26"
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ r_info           :List of 4
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os           : chr "unix"
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ version          : chr "1.8"
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ success: logi TRUE
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.043 0.003 0.047 0 0
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:26.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ tag    : NULL
[10:52:26.938] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Received FutureResult
[10:52:26.938] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'remove', earlySignal = 0) ...
[10:52:26.938] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Removed future from position #1
[10:52:26.938] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:52:26.938] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'remove', earlySignal = 0) ... done
[10:52:26.938] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Erased future from future backend
[10:52:26.938] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:52:26.938] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:52:26.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:52:26.939] |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:26.939] |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:52:26.939] |  :  .  |  :  .  |  :  .  |  :  .  Future at position #1 is resolved ...
[10:52:26.939] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:26.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:52:26.939] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:52:26.939] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:26.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:52:26.939] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:52:26.940] |  :  .  |  :  .  |  :  .  |  :  .  Future at position #1 is resolved ... done
[10:52:26.940] |  :  .  |  :  .  |  :  .  |  :  collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ... done
[10:52:26.940] |  :  .  |  :  .  |  :  .  |  :  Early signaling of 1 future candidates ...
[10:52:26.940] |  :  .  |  :  .  |  :  .  |  :  Number of futures with early signaling requested: 0
[10:52:26.940] |  :  .  |  :  .  |  :  .  |  :  Early signaling of 1 future candidates ... done
[10:52:26.940] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:52:26.940] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ... done
[10:52:26.940] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[10:52:26.940] |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:52:26.940] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:52:26.941] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[10:52:26.941] |  :  .  |  :  .  |  :  .  |  Total time: 0.0973384380340576
[10:52:26.941] |  :  .  |  :  .  |  :  .  Polling for a free worker ... done
[10:52:26.941] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[10:52:26.941] |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:52:26.941] |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:26.941] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[10:52:26.941] |  :  .  |  :  .  |  :  .  Index of first available worker: 1
[10:52:26.941] |  :  .  |  :  .  |  :  .  Validate that the worker is functional ...
[10:52:26.942] |  :  .  |  :  .  |  :  .  |  Worker is functional
[10:52:26.942] |  :  .  |  :  .  |  :  .  requestNode() ... done
[10:52:26.943] |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:26.943] |  :  .  |  :  .  |  :  requestWorker() ... done
[10:52:26.943] |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ...
[10:52:26.943] |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:52:26.943] |  :  .  |  :  .  |  :  launchFuture() ...
[10:52:26.943] |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:26.943] |  :  .  |  :  .  |  :  .  getFutureData() ...
[10:52:26.943] |  :  .  |  :  .  |  :  .  |  getFutureCore() ...
[10:52:26.944] |  :  .  |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:52:26.944] |  :  .  |  :  .  |  :  .  |  getFutureCore() ... done
[10:52:26.944] |  :  .  |  :  .  |  :  .  |  getFutureCapture() ...
[10:52:26.944] |  :  .  |  :  .  |  :  .  |  getFutureCapture() ... done
[10:52:26.944] |  :  .  |  :  .  |  :  .  |  getFutureContext() ...
[10:52:26.944] |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:26.944] |  :  .  |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:52:26.944] |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:26.944] |  :  .  |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:52:26.944] |  :  .  |  :  .  |  :  .  |  getFutureContext() ... done
[10:52:26.945] |  :  .  |  :  .  |  :  .  getFutureData() ... done
[10:52:26.945] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'add', earlySignal = 0) ...
[10:52:26.945] |  :  .  |  :  .  |  :  .  |  Appended future to position #1
[10:52:26.945] |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:52:26.945] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'add', earlySignal = 0) ... done
[10:52:26.945] |  :  .  |  :  .  |  :  launchFuture() ... done
[10:52:26.945] |  :  .  |  :  .  |  :  ClusterFuture started
[10:52:26.945] |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:52:26.946] |  :  .  |  :  .  Launching futures ... done
[10:52:26.946] |  :  .  |  :  .  Future launched: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:26.946] |  :  .  |  :  Using ClusterFutureBackend ... done
[10:52:26.946] |  :  .  |  run() for Future (‘ClusterFuture’) ... done
[10:52:26.946] |  :  .  |  value() on list ...
[10:52:26.946] |  :  .  |  :  recursive: 0
[10:52:26.946] |  :  .  |  :  length: 2
[10:52:26.946] |  :  .  |  :  
[10:52:26.946] |  :  .  |  :  Number of remaining objects: 2
[10:52:26.946] |  :  .  |  :  checking value #1 ...
[10:52:26.947] |  :  .  |  :  .  'obj' is ClusterFuture
[10:52:26.947] |  :  .  |  :  .  ClusterFuture #1
[10:52:26.947] |  :  .  |  :  .  signalConditionsASAP(ClusterFuture, pos=1) ...
[10:52:26.947] |  :  .  |  :  .  |  nx: 2
[10:52:26.947] |  :  .  |  :  .  |  relay: TRUE
[10:52:26.947] |  :  .  |  :  .  |  stdout: TRUE
[10:52:26.947] |  :  .  |  :  .  |  signal: TRUE
[10:52:26.947] |  :  .  |  :  .  |  resignal: FALSE
[10:52:26.947] |  :  .  |  :  .  |  force: TRUE
[10:52:26.947] |  :  .  |  :  .  |  relayed: [n=2] FALSE, FALSE
[10:52:26.947] |  :  .  |  :  .  |  queued futures: [n=2] FALSE, FALSE
[10:52:26.948] |  :  .  |  :  .  |  until=1
[10:52:26.948] |  :  .  |  :  .  |  relaying element #1
[10:52:26.948] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:26.948] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:52:26.948] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:52:26.948] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:26.948] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:52:26.948] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:52:26.948] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:26.948] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:52:26.948] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:52:26.949] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:26.949] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:52:26.949] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:52:26.949] |  :  .  |  :  .  |  relayed: [n=2] TRUE, FALSE
[10:52:26.949] |  :  .  |  :  .  |  queued futures: [n=2] TRUE, FALSE
[10:52:26.949] |  :  .  |  :  .  signalConditionsASAP(ClusterFuture, pos=1) ... done
[10:52:26.949] |  :  .  |  :  .  value(<ClusterFuture>, ...) ...
[10:52:26.949] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:26.949] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:52:26.949] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:52:26.949] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:26.950] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:52:26.950] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:52:26.950] |  :  .  |  :  .  |  value: <integer>
[10:52:26.950] |  :  .  |  :  .  value(<ClusterFuture>, ...) ... done
[10:52:26.950] |  :  .  |  :  .  signalConditionsASAP(ClusterFuture, pos=1) ...
[10:52:26.950] |  :  .  |  :  .  |  nx: 2
[10:52:26.950] |  :  .  |  :  .  |  relay: TRUE
[10:52:26.950] |  :  .  |  :  .  |  stdout: TRUE
[10:52:26.950] |  :  .  |  :  .  |  signal: TRUE
[10:52:26.950] |  :  .  |  :  .  |  resignal: FALSE
[10:52:26.950] |  :  .  |  :  .  |  force: TRUE
[10:52:26.950] |  :  .  |  :  .  |  relayed: [n=2] TRUE, FALSE
[10:52:26.951] |  :  .  |  :  .  |  queued futures: [n=2] TRUE, FALSE
[10:52:26.952] |  :  .  |  :  .  |  until=2
[10:52:26.952] |  :  .  |  :  .  |  relaying element #2
[10:52:26.952] |  :  .  |  :  .  |  relayed: [n=2] TRUE, FALSE
[10:52:26.952] |  :  .  |  :  .  |  queued futures: [n=2] TRUE, FALSE
[10:52:26.952] |  :  .  |  :  .  signalConditionsASAP(NULL, pos=1) ... done
[10:52:26.952] |  :  .  |  :  .  length: 1 (resolved future 1)
[10:52:26.952] |  :  .  |  :  checking value #1 ... done
[10:52:26.952] |  :  .  |  :  checking value #2 ...
[10:52:26.952] |  :  .  |  :  .  'obj' is ClusterFuture
[10:52:26.953] |  :  .  |  :  .  isFutureResolved() ...
[10:52:26.953] |  :  .  |  :  .  |  assertValidConnection() ...
[10:52:26.953] |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:26.953] |  :  .  |  :  .  |  assertValidConnection() ... done
[10:52:26.964] |  :  .  |  :  .  isFutureResolved() ... done
[10:52:26.964] |  :  .  |  :  checking value #2 ... done
[10:52:26.974] |  :  .  |  :  Number of remaining objects: 1
[10:52:26.974] |  :  .  |  :  checking value #2 ...
[10:52:26.974] |  :  .  |  :  .  'obj' is ClusterFuture
[10:52:26.974] |  :  .  |  :  .  isFutureResolved() ...
[10:52:26.975] |  :  .  |  :  .  |  assertValidConnection() ...
[10:52:26.975] |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:26.975] |  :  .  |  :  .  |  assertValidConnection() ... done
[10:52:26.985] |  :  .  |  :  .  isFutureResolved() ... done
[10:52:26.985] |  :  .  |  :  checking value #2 ... done
[10:52:26.995] |  :  .  |  :  Number of remaining objects: 1
[10:52:26.996] |  :  .  |  :  checking value #2 ...
[10:52:26.996] |  :  .  |  :  .  'obj' is ClusterFuture
[10:52:26.996] |  :  .  |  :  .  isFutureResolved() ...
[10:52:26.996] |  :  .  |  :  .  |  assertValidConnection() ...
[10:52:26.996] |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:26.997] |  :  .  |  :  .  |  assertValidConnection() ... done
[10:52:26.997] |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:52:26.997] |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:26.997] |  :  .  |  :  .  |  :  [1] TRUE
[10:52:26.997] |  :  .  |  :  .  |  :  received data:
[10:52:26.997] |  :  .  |  :  .  |  :  List of 5
[10:52:26.997] |  :  .  |  :  .  |  :   $ type   : chr "VALUE"
[10:52:26.997] |  :  .  |  :  .  |  :   $ value  :List of 13
[10:52:26.997] |  :  .  |  :  .  |  :    ..$ value            : int 2
[10:52:26.997] |  :  .  |  :  .  |  :    ..$ visible          : logi TRUE
[10:52:26.997] |  :  .  |  :  .  |  :    ..$ stdout           : chr ""
[10:52:26.997] |  :  .  |  :  .  |  :    ..$ conditions       : list()
[10:52:26.997] |  :  .  |  :  .  |  :    ..$ rng              : logi FALSE
[10:52:26.997] |  :  .  |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:52:26.997] |  :  .  |  :  .  |  :    ..$ misuseConnections:List of 3
[10:52:26.997] |  :  .  |  :  .  |  :    .. ..$ added   : NULL
[10:52:26.997] |  :  .  |  :  .  |  :    .. ..$ removed : NULL
[10:52:26.997] |  :  .  |  :  .  |  :    .. ..$ replaced: NULL
[10:52:26.997] |  :  .  |  :  .  |  :    ..$ misuseDevices    : NULL
[10:52:26.997] |  :  .  |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:26"
[10:52:26.997] |  :  .  |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:26"
[10:52:26.997] |  :  .  |  :  .  |  :    ..$ session_uuid     : chr "06afb10cb3547eefe2a67694cb7d74ee"
[10:52:26.997] |  :  .  |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:52:26.997] |  :  .  |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:26.997] |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:26.997] |  :  .  |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:26.997] |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:26.997] |  :  .  |  :  .  |  :    .. .. ..$ pid   : int 68134
[10:52:26.997] |  :  .  |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:26"
[10:52:26.997] |  :  .  |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:52:26.997] |  :  .  |  :  .  |  :    ..$ r_info           :List of 4
[10:52:26.997] |  :  .  |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:26.997] |  :  .  |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:52:26.997] |  :  .  |  :  .  |  :    .. ..$ os           : chr "unix"
[10:52:26.997] |  :  .  |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:52:26.997] |  :  .  |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:52:26.997] |  :  .  |  :  .  |  :    ..$ version          : chr "1.8"
[10:52:26.997] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:52:26.997] |  :  .  |  :  .  |  :   $ success: logi TRUE
[10:52:26.997] |  :  .  |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:52:26.997] |  :  .  |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:26.997] |  :  .  |  :  .  |  :   $ tag    : NULL
[10:52:27.007] |  :  .  |  :  .  |  :  Received FutureResult
[10:52:27.007] |  :  .  |  :  .  |  :  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'remove', earlySignal = 0) ...
[10:52:27.007] |  :  .  |  :  .  |  :  .  Removed future from position #1
[10:52:27.007] |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:52:27.008] |  :  .  |  :  .  |  :  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'remove', earlySignal = 0) ... done
[10:52:27.008] |  :  .  |  :  .  |  :  Erased future from future backend
[10:52:27.008] |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:52:27.008] |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:52:27.008] |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:52:27.008] |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:27.008] |  :  .  |  :  .  isFutureResolved() ... done
[10:52:27.008] |  :  .  |  :  .  ClusterFuture #2
[10:52:27.008] |  :  .  |  :  .  signalConditionsASAP(ClusterFuture, pos=2) ...
[10:52:27.008] |  :  .  |  :  .  |  nx: 2
[10:52:27.008] |  :  .  |  :  .  |  relay: TRUE
[10:52:27.009] |  :  .  |  :  .  |  stdout: TRUE
[10:52:27.009] |  :  .  |  :  .  |  signal: TRUE
[10:52:27.009] |  :  .  |  :  .  |  resignal: FALSE
[10:52:27.009] |  :  .  |  :  .  |  force: TRUE
[10:52:27.009] |  :  .  |  :  .  |  relayed: [n=2] TRUE, FALSE
[10:52:27.009] |  :  .  |  :  .  |  queued futures: [n=2] TRUE, FALSE
[10:52:27.009] |  :  .  |  :  .  |  until=2
[10:52:27.009] |  :  .  |  :  .  |  relaying element #2
[10:52:27.009] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:27.009] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:52:27.009] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:52:27.009] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:27.010] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:52:27.010] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:52:27.010] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:27.010] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:52:27.010] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:52:27.010] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:27.010] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:52:27.010] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:52:27.010] |  :  .  |  :  .  |  relayed: [n=2] TRUE, TRUE
[10:52:27.010] |  :  .  |  :  .  |  queued futures: [n=2] TRUE, TRUE
[10:52:27.011] |  :  .  |  :  .  signalConditionsASAP(ClusterFuture, pos=2) ... done
[10:52:27.011] |  :  .  |  :  .  value(<ClusterFuture>, ...) ...
[10:52:27.012] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:27.012] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:52:27.012] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:52:27.012] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:27.012] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:52:27.012] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:52:27.012] |  :  .  |  :  .  |  value: <integer>
[10:52:27.013] |  :  .  |  :  .  value(<ClusterFuture>, ...) ... done
[10:52:27.013] |  :  .  |  :  .  signalConditionsASAP(ClusterFuture, pos=2) ...
[10:52:27.013] |  :  .  |  :  .  |  nx: 2
[10:52:27.013] |  :  .  |  :  .  |  relay: TRUE
[10:52:27.013] |  :  .  |  :  .  |  stdout: TRUE
[10:52:27.013] |  :  .  |  :  .  |  signal: TRUE
[10:52:27.013] |  :  .  |  :  .  |  resignal: FALSE
[10:52:27.013] |  :  .  |  :  .  |  force: TRUE
[10:52:27.013] |  :  .  |  :  .  |  relayed: [n=2] TRUE, TRUE
[10:52:27.013] |  :  .  |  :  .  |  queued futures: [n=2] TRUE, TRUE
[10:52:27.013] |  :  .  |  :  .  |  until=2
[10:52:27.013] |  :  .  |  :  .  |  relayed: [n=2] TRUE, TRUE
[10:52:27.014] |  :  .  |  :  .  |  queued futures: [n=2] TRUE, TRUE
[10:52:27.014] |  :  .  |  :  .  signalConditionsASAP(ClusterFuture, pos=2) ... done
[10:52:27.014] |  :  .  |  :  .  length: 0 (resolved future 2)
[10:52:27.014] |  :  .  |  :  checking value #2 ... done
[10:52:27.014] |  :  .  |  :  Relaying remaining futures ...
[10:52:27.014] |  :  .  |  :  .  signalConditionsASAP(NULL, pos=0) ...
[10:52:27.014] |  :  .  |  :  .  |  nx: 2
[10:52:27.014] |  :  .  |  :  .  |  relay: TRUE
[10:52:27.014] |  :  .  |  :  .  |  stdout: TRUE
[10:52:27.014] |  :  .  |  :  .  |  signal: TRUE
[10:52:27.014] |  :  .  |  :  .  |  resignal: FALSE
[10:52:27.015] |  :  .  |  :  .  |  force: TRUE
[10:52:27.015] |  :  .  |  :  .  |  relayed: [n=2] TRUE, TRUE
[10:52:27.015] |  :  .  |  :  .  |  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:52:27.015] |  :  .  |  :  .  |  relayed: [n=2] TRUE, TRUE
[10:52:27.015] |  :  .  |  :  .  |  queued futures: [n=2] TRUE, TRUE
[10:52:27.015] |  :  .  |  :  .  signalConditionsASAP(NULL, pos=0) ... done
[10:52:27.015] |  :  .  |  :  Relaying remaining futures ... done
[10:52:27.015] |  :  .  |  value() on list ... done
Iteration #3
[10:52:27.199] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:27.200] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:52:27.200] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:27.200] |  :  .  |  :  .  |  New stack:
[10:52:27.200] |  :  .  |  :  .  |  List of 1
[10:52:27.200] |  :  .  |  :  .  |   $ :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[10:52:27.200] |  :  .  |  :  .  |      envir = parent.frame())  
[10:52:27.200] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[10:52:27.200] |  :  .  |  :  .  |    ..- attr(*, "init")= logi TRUE
[10:52:27.200] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:52:27.200] |  :  .  |  :  .  |      interrupts = FALSE, persistent = FALSE, ...)  
[10:52:27.200] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:27.200] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:27.200] |  :  .  |  :  .  |    ..- attr(*, "tweaks")=List of 1
[10:52:27.200] |  :  .  |  :  .  |    .. ..$ workers:List of 1
[10:52:27.200] |  :  .  |  :  .  |    .. .. ..$ :List of 3
[10:52:27.200] |  :  .  |  :  .  |    .. .. .. ..$ con : 'sockconn' int 4
[10:52:27.200] |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[10:52:27.200] |  :  .  |  :  .  |    .. .. .. ..$ host: chr "localhost"
[10:52:27.200] |  :  .  |  :  .  |    .. .. .. ..$ rank: num 0
[10:52:27.200] |  :  .  |  :  .  |    .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[10:52:27.200] |  :  .  |  :  .  |    .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[10:52:27.200] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(cluster, workers = cl)
[10:52:27.200] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:27.206] |  :  .  |  :  .  |  Old stack:
[10:52:27.206] |  :  .  |  :  .  |  List of 1
[10:52:27.206] |  :  .  |  :  .  |   $ :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[10:52:27.206] |  :  .  |  :  .  |      envir = parent.frame())  
[10:52:27.206] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[10:52:27.206] |  :  .  |  :  .  |    ..- attr(*, "init")= chr "done"
[10:52:27.206] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:52:27.206] |  :  .  |  :  .  |      interrupts = FALSE, persistent = FALSE, ...)  
[10:52:27.206] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:27.206] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:27.206] |  :  .  |  :  .  |    ..- attr(*, "tweaks")=List of 1
[10:52:27.206] |  :  .  |  :  .  |    .. ..$ workers:List of 1
[10:52:27.206] |  :  .  |  :  .  |    .. .. ..$ :List of 3
[10:52:27.206] |  :  .  |  :  .  |    .. .. .. ..$ con : 'sockconn' int 4
[10:52:27.206] |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[10:52:27.206] |  :  .  |  :  .  |    .. .. .. ..$ host: chr "localhost"
[10:52:27.206] |  :  .  |  :  .  |    .. .. .. ..$ rank: num 0
[10:52:27.206] |  :  .  |  :  .  |    .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[10:52:27.206] |  :  .  |  :  .  |    .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[10:52:27.206] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(cluster, workers = cl)
[10:52:27.206] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'ClusterFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55d5877eda90> 
[10:52:27.206] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:52:27.206] |  :  .  |  :  .  |      interrupts = FALSE, persistent = FALSE, ...)  
[10:52:27.206] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:27.206] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:27.212] |  :  .  |  :  .  |  Not identical
[10:52:27.212] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:27.212] |  :  .  |  :  .  |  :  List of 2
[10:52:27.212] |  :  .  |  :  .  |  :   $ target :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[10:52:27.212] |  :  .  |  :  .  |  :      envir = parent.frame())  
[10:52:27.212] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[10:52:27.212] |  :  .  |  :  .  |  :    ..- attr(*, "init")= logi TRUE
[10:52:27.212] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:52:27.212] |  :  .  |  :  .  |  :      interrupts = FALSE, persistent = FALSE, ...)  
[10:52:27.212] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:27.212] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:27.212] |  :  .  |  :  .  |  :    ..- attr(*, "tweaks")=List of 1
[10:52:27.212] |  :  .  |  :  .  |  :    .. ..$ workers:List of 1
[10:52:27.212] |  :  .  |  :  .  |  :    .. .. ..$ :List of 3
[10:52:27.212] |  :  .  |  :  .  |  :    .. .. .. ..$ con : 'sockconn' int 4
[10:52:27.212] |  :  .  |  :  .  |  :    .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[10:52:27.212] |  :  .  |  :  .  |  :    .. .. .. ..$ host: chr "localhost"
[10:52:27.212] |  :  .  |  :  .  |  :    .. .. .. ..$ rank: num 0
[10:52:27.212] |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[10:52:27.212] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[10:52:27.212] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(cluster, workers = cl)
[10:52:27.212] |  :  .  |  :  .  |  :   $ current:function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[10:52:27.212] |  :  .  |  :  .  |  :      envir = parent.frame())  
[10:52:27.212] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[10:52:27.212] |  :  .  |  :  .  |  :    ..- attr(*, "init")= chr "done"
[10:52:27.212] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:52:27.212] |  :  .  |  :  .  |  :      interrupts = FALSE, persistent = FALSE, ...)  
[10:52:27.212] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:27.212] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:27.212] |  :  .  |  :  .  |  :    ..- attr(*, "tweaks")=List of 1
[10:52:27.212] |  :  .  |  :  .  |  :    .. ..$ workers:List of 1
[10:52:27.212] |  :  .  |  :  .  |  :    .. .. ..$ :List of 3
[10:52:27.212] |  :  .  |  :  .  |  :    .. .. .. ..$ con : 'sockconn' int 4
[10:52:27.212] |  :  .  |  :  .  |  :    .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[10:52:27.212] |  :  .  |  :  .  |  :    .. .. .. ..$ host: chr "localhost"
[10:52:27.212] |  :  .  |  :  .  |  :    .. .. .. ..$ rank: num 0
[10:52:27.212] |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[10:52:27.212] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[10:52:27.212] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(cluster, workers = cl)
[10:52:27.212] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'ClusterFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55d5877eda90> 
[10:52:27.212] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:52:27.212] |  :  .  |  :  .  |  :      interrupts = FALSE, persistent = FALSE, ...)  
[10:52:27.212] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:27.224] |  :  .  |  :  .  |  :  Formals differ
[10:52:27.224] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:27.224] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:52:27.225] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:27.225] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:52:27.225] |  :  .  |  :  .  List of future strategies:
[10:52:27.225] |  :  .  |  :  .  1. cluster:
[10:52:27.225] |  :  .  |  :  .     - args: function (..., workers = "<socket cluster with 1 nodes on host ‘localhost’>", envir = parent.frame())
[10:52:27.225] |  :  .  |  :  .     - tweaked: TRUE
[10:52:27.225] |  :  .  |  :  .     - call: plan(cluster, workers = cl)
[10:52:27.225] |  :  .  |  :  .  List of 1
[10:52:27.225] |  :  .  |  :  .   $ :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[10:52:27.225] |  :  .  |  :  .      envir = parent.frame())  
[10:52:27.225] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[10:52:27.225] |  :  .  |  :  .    ..- attr(*, "init")= logi TRUE
[10:52:27.225] |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:52:27.225] |  :  .  |  :  .      interrupts = FALSE, persistent = FALSE, ...)  
[10:52:27.225] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:27.225] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:27.225] |  :  .  |  :  .    ..- attr(*, "tweaks")=List of 1
[10:52:27.225] |  :  .  |  :  .    .. ..$ workers:List of 1
[10:52:27.225] |  :  .  |  :  .    .. .. ..$ :List of 3
[10:52:27.225] |  :  .  |  :  .    .. .. .. ..$ con : 'sockconn' int 4
[10:52:27.225] |  :  .  |  :  .    .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[10:52:27.225] |  :  .  |  :  .    .. .. .. ..$ host: chr "localhost"
[10:52:27.225] |  :  .  |  :  .    .. .. .. ..$ rank: num 0
[10:52:27.225] |  :  .  |  :  .    .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[10:52:27.225] |  :  .  |  :  .    .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[10:52:27.225] |  :  .  |  :  .    ..- attr(*, "call")= language plan(cluster, workers = cl)
[10:52:27.225] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:27.230] |  :  .  |  :  .  plan(): plan_cleanup(‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:52:27.230] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:27.230] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:52:27.230] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:27.230] |  :  .  |  :  .  |  stopWorkers() for ClusterFutureBackend ...
[10:52:27.231] |  :  .  |  :  .  |  :  Interrupt active futures ...
[10:52:27.231] |  :  .  |  :  .  |  :  .  Number of futures: 0
[10:52:27.231] |  :  .  |  :  .  |  :  Interrupt active futures ... done
[10:52:27.231] |  :  .  |  :  .  |  :  Clear future registry ...
[10:52:27.232] |  :  .  |  :  .  |  :  Clear future registry ... done
[10:52:27.232] |  :  .  |  :  .  |  :  Stop cluster workers ...
[10:52:27.232] |  :  .  |  :  .  |  :  .  Stopping existing cluster ...
[10:52:27.232] |  :  .  |  :  .  |  :  .  |  No pre-existing cluster. Skipping
[10:52:27.232] |  :  .  |  :  .  |  :  .  Stopping existing cluster ... done
[10:52:27.232] |  :  .  |  :  .  |  :  Stop cluster workers ... done
[10:52:27.232] |  :  .  |  :  .  |  stopWorkers() for ClusterFutureBackend ... done
[10:52:27.232] |  :  .  |  :  .  |  Legacy shutdown of cluster workers ...
[10:52:27.232] |  :  .  |  :  .  |  :  Stopping existing cluster ...
[10:52:27.232] |  :  .  |  :  .  |  :  .  No pre-existing cluster. Skipping
[10:52:27.233] |  :  .  |  :  .  |  :  Stopping existing cluster ... done
[10:52:27.233] |  :  .  |  :  .  |  Legacy shutdown of cluster workers ... done
[10:52:27.233] |  :  .  |  :  .  plan(): plan_cleanup(‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:52:27.233] |  :  .  |  :  .  plan(): plan_init() of ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ...
[10:52:27.233] |  :  .  |  :  .  |  function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[10:52:27.233] |  :  .  |  :  .  |      envir = parent.frame())  
[10:52:27.233] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[10:52:27.233] |  :  .  |  :  .  |   - attr(*, "init")= logi TRUE
[10:52:27.233] |  :  .  |  :  .  |   - attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:52:27.233] |  :  .  |  :  .  |      interrupts = FALSE, persistent = FALSE, ...)  
[10:52:27.233] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:27.233] |  :  .  |  :  .  |   - attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:27.233] |  :  .  |  :  .  |   - attr(*, "tweaks")=List of 1
[10:52:27.233] |  :  .  |  :  .  |    ..$ workers:List of 1
[10:52:27.233] |  :  .  |  :  .  |    .. ..$ :List of 3
[10:52:27.233] |  :  .  |  :  .  |    .. .. ..$ con : 'sockconn' int 4
[10:52:27.233] |  :  .  |  :  .  |    .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[10:52:27.233] |  :  .  |  :  .  |    .. .. ..$ host: chr "localhost"
[10:52:27.233] |  :  .  |  :  .  |    .. .. ..$ rank: num 0
[10:52:27.233] |  :  .  |  :  .  |    .. .. ..- attr(*, "class")= chr "SOCKnode"
[10:52:27.233] |  :  .  |  :  .  |    .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[10:52:27.233] |  :  .  |  :  .  |   - attr(*, "call")= language plan(cluster, workers = cl)
[10:52:27.238] |  :  .  |  :  .  |  init: TRUE
[10:52:27.238] |  :  .  |  :  .  |  makeFutureBackend(<tweaked>) ...
[10:52:27.239] |  :  .  |  :  .  |  :  Backend function: <‘NULL’>
[10:52:27.239] |  :  .  |  :  .  |  :  ClusterFutureBackend(..., persistent = FALSE, gc = TRUE, earlySignal = TRUE) ...
[10:52:27.239] |  :  .  |  :  .  |  :  .  Stopping existing cluster ...
[10:52:27.239] |  :  .  |  :  .  |  :  .  |  No pre-existing cluster. Skipping
[10:52:27.239] |  :  .  |  :  .  |  :  .  Stopping existing cluster ... done
[10:52:27.239] |  :  .  |  :  .  |  :  .  Number of workers: 1
[10:52:27.239] |  :  .  |  :  .  |  :  .  Generated workers UUID
[10:52:27.239] |  :  .  |  :  .  |  :  .  Workers UUID: ‘381ebb526f9eb2d90230a3c7b34be202’
[10:52:27.239] |  :  .  |  :  .  |  :  ClusterFutureBackend(..., persistent = FALSE, gc = TRUE, earlySignal = TRUE) ... done
[10:52:27.239] |  :  .  |  :  .  |  :  Backend: <‘ClusterFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:27.240] |  :  .  |  :  .  |  makeFutureBackend(<tweaked>) ... done
[10:52:27.240] |  :  .  |  :  .  plan(): plan_init() of ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ... done
[10:52:27.240] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:27.240] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:52:27.240] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:27.240] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:52:27.240] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:52:27.240] |  :  .  |  plan(<tweaked>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:27.240] |  :  .  |  getGlobalsAndPackages() ...
[10:52:27.240] |  :  .  |  :  Searching for globals ...
[10:52:27.241] |  :  .  |  :  .  globals found: [3] ‘[[’, ‘X’, ‘i’
[10:52:27.241] |  :  .  |  :  Searching for globals ... DONE
[10:52:27.242] |  :  .  |  :  Resolving globals: FALSE
[10:52:27.242] |  :  .  |  :  Search for packages associated with the globals ...
[10:52:27.242] |  :  .  |  :  .  Packages associated with globals: [1] ‘base’
[10:52:27.242] |  :  .  |  :  .  Packages: [1] ‘base’
[10:52:27.242] |  :  .  |  :  Search for packages associated with the globals ... DONE
[10:52:27.242] |  :  .  |  :  Packages after dropping 'base': [0] 
[10:52:27.242] |  :  .  |  :  globals: [2] ‘X’, ‘i’
[10:52:27.242] |  :  .  |  :  packages: [0] 
[10:52:27.243] |  :  .  |  getGlobalsAndPackages() ... done
[10:52:27.243] |  :  .  |  run() for Future (‘Future’) ...
[10:52:27.243] |  :  .  |  :  state: ‘created’
[10:52:27.243] |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:27.243] |  :  .  |  :  plan(<tweaked>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:27.243] |  :  .  |  :  Using ClusterFutureBackend ...
[10:52:27.243] |  :  .  |  :  .  Launching futures ...
[10:52:27.243] |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:52:27.243] |  :  .  |  :  .  |  :  Workers: [n=1]
[10:52:27.244] |  :  .  |  :  .  |  :  socket cluster with 1 nodes on host ‘localhost’
[10:52:27.244] |  :  .  |  :  .  |  :  FutureRegistry: ‘workers-381ebb526f9eb2d90230a3c7b34be202’
[10:52:27.244] |  :  .  |  :  .  |  :  requestWorker() ...
[10:52:27.244] |  :  .  |  :  .  |  :  .  requestNode() ...
[10:52:27.244] |  :  .  |  :  .  |  :  .  |  Number of workers: 1
[10:52:27.244] |  :  .  |  :  .  |  :  .  |  Polling for a free worker ...
[10:52:27.244] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[10:52:27.244] |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:52:27.244] |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:52:27.245] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[10:52:27.245] |  :  .  |  :  .  |  :  .  |  :  Total time: 0
[10:52:27.245] |  :  .  |  :  .  |  :  .  |  Polling for a free worker ... done
[10:52:27.245] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[10:52:27.245] |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:52:27.245] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:52:27.245] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[10:52:27.245] |  :  .  |  :  .  |  :  .  |  Index of first available worker: 1
[10:52:27.245] |  :  .  |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:52:27.299] |  :  .  |  :  .  |  :  .  |  :  Worker is functional
[10:52:27.299] |  :  .  |  :  .  |  :  .  |  requestNode() ... done
[10:52:27.299] |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:52:27.299] |  :  .  |  :  .  |  :  .  requestWorker() ... done
[10:52:27.299] |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:52:27.300] |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:52:27.300] |  :  .  |  :  .  |  :  .  launchFuture() ...
[10:52:27.300] |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:52:27.300] |  :  .  |  :  .  |  :  .  |  getFutureData() ...
[10:52:27.300] |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ...
[10:52:27.300] |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:27.300] |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:52:27.301] |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:52:27.301] |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:52:27.301] |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ...
[10:52:27.301] |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:27.301] |  :  .  |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:27.301] |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:27.301] |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:27.301] |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:52:27.301] |  :  .  |  :  .  |  :  .  |  getFutureData() ... done
[10:52:27.302] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'add', earlySignal = 0) ...
[10:52:27.302] |  :  .  |  :  .  |  :  .  |  :  Appended future to position #1
[10:52:27.302] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:52:27.302] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'add', earlySignal = 0) ... done
[10:52:27.302] |  :  .  |  :  .  |  :  .  launchFuture() ... done
[10:52:27.302] |  :  .  |  :  .  |  :  .  ClusterFuture started
[10:52:27.302] |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:52:27.302] |  :  .  |  :  .  |  Launching futures ... done
[10:52:27.303] |  :  .  |  :  .  |  Future launched: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:27.303] |  :  .  |  :  .  Using ClusterFutureBackend ... done
[10:52:27.303] |  :  .  |  :  run() for Future (‘ClusterFuture’) ... done
[10:52:27.303] |  :  .  |  :  getGlobalsAndPackages() ...
[10:52:27.303] |  :  .  |  :  .  Searching for globals ...
[10:52:27.304] |  :  .  |  :  .  |  globals found: [3] ‘[[’, ‘X’, ‘i’
[10:52:27.304] |  :  .  |  :  .  Searching for globals ... DONE
[10:52:27.304] |  :  .  |  :  .  Resolving globals: FALSE
[10:52:27.304] |  :  .  |  :  .  Search for packages associated with the globals ...
[10:52:27.304] |  :  .  |  :  .  |  Packages associated with globals: [1] ‘base’
[10:52:27.305] |  :  .  |  :  .  |  Packages: [1] ‘base’
[10:52:27.305] |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:52:27.305] |  :  .  |  :  .  Packages after dropping 'base': [0] 
[10:52:27.305] |  :  .  |  :  .  globals: [2] ‘X’, ‘i’
[10:52:27.305] |  :  .  |  :  .  packages: [0] 
[10:52:27.305] |  :  .  |  :  getGlobalsAndPackages() ... done
[10:52:27.306] |  :  .  |  :  run() for Future (‘Future’) ...
[10:52:27.306] |  :  .  |  :  .  state: ‘created’
[10:52:27.306] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:27.306] |  :  .  |  :  .  plan(<tweaked>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:27.306] |  :  .  |  :  .  Using ClusterFutureBackend ...
[10:52:27.306] |  :  .  |  :  .  |  Launching futures ...
[10:52:27.306] |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:52:27.306] |  :  .  |  :  .  |  :  .  Workers: [n=1]
[10:52:27.306] |  :  .  |  :  .  |  :  .  socket cluster with 1 nodes on host ‘localhost’
[10:52:27.307] |  :  .  |  :  .  |  :  .  FutureRegistry: ‘workers-381ebb526f9eb2d90230a3c7b34be202’
[10:52:27.307] |  :  .  |  :  .  |  :  .  requestWorker() ...
[10:52:27.307] |  :  .  |  :  .  |  :  .  |  requestNode() ...
[10:52:27.307] |  :  .  |  :  .  |  :  .  |  :  Number of workers: 1
[10:52:27.307] |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:52:27.307] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[10:52:27.307] |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:52:27.307] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:52:27.307] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[10:52:27.308] |  :  .  |  :  .  |  :  .  |  :  .  Poll #1 (0): usedNodes() = 1, workers = 1
[10:52:27.318] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ...
[10:52:27.318] |  :  .  |  :  .  |  :  .  |  :  .  |  collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ...
[10:52:27.318] |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:52:27.320] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:52:27.320] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:52:27.321] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:52:27.331] |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:52:27.331] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Future at position #1 is not resolved
[10:52:27.331] |  :  .  |  :  .  |  :  .  |  :  .  |  collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ... done
[10:52:27.331] |  :  .  |  :  .  |  :  .  |  :  .  |  Early signaling of 1 future candidates ...
[10:52:27.331] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of futures with early signaling requested: 0
[10:52:27.332] |  :  .  |  :  .  |  :  .  |  :  .  |  Early signaling of 1 future candidates ... done
[10:52:27.332] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:52:27.332] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ... done
[10:52:27.332] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[10:52:27.332] |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:52:27.332] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:52:27.332] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[10:52:27.332] |  :  .  |  :  .  |  :  .  |  :  .  Poll #2 (0.02 secs): usedNodes() = 1, workers = 1
[10:52:27.343] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ...
[10:52:27.343] |  :  .  |  :  .  |  :  .  |  :  .  |  collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ...
[10:52:27.343] |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:52:27.343] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:52:27.343] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:52:27.344] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:52:27.354] |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:52:27.354] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Future at position #1 is not resolved
[10:52:27.354] |  :  .  |  :  .  |  :  .  |  :  .  |  collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ... done
[10:52:27.354] |  :  .  |  :  .  |  :  .  |  :  .  |  Early signaling of 1 future candidates ...
[10:52:27.354] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of futures with early signaling requested: 0
[10:52:27.354] |  :  .  |  :  .  |  :  .  |  :  .  |  Early signaling of 1 future candidates ... done
[10:52:27.355] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:52:27.355] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ... done
[10:52:27.355] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[10:52:27.355] |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:52:27.355] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:52:27.355] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[10:52:27.355] |  :  .  |  :  .  |  :  .  |  :  .  Poll #3 (0.05 secs): usedNodes() = 1, workers = 1
[10:52:27.366] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ...
[10:52:27.366] |  :  .  |  :  .  |  :  .  |  :  .  |  collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ...
[10:52:27.366] |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:52:27.366] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:52:27.367] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:52:27.367] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:52:27.377] |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:52:27.377] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Future at position #1 is not resolved
[10:52:27.377] |  :  .  |  :  .  |  :  .  |  :  .  |  collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ... done
[10:52:27.377] |  :  .  |  :  .  |  :  .  |  :  .  |  Early signaling of 1 future candidates ...
[10:52:27.378] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of futures with early signaling requested: 0
[10:52:27.378] |  :  .  |  :  .  |  :  .  |  :  .  |  Early signaling of 1 future candidates ... done
[10:52:27.378] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:52:27.378] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ... done
[10:52:27.378] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[10:52:27.378] |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:52:27.378] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:52:27.378] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[10:52:27.378] |  :  .  |  :  .  |  :  .  |  :  .  Poll #4 (0.07 secs): usedNodes() = 1, workers = 1
[10:52:27.389] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ...
[10:52:27.389] |  :  .  |  :  .  |  :  .  |  :  .  |  collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ...
[10:52:27.389] |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:52:27.390] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:52:27.390] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:52:27.390] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:52:27.390] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:52:27.390] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:52:27.390] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  [1] TRUE
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  received data:
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  List of 5
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ type   : chr "VALUE"
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ value  :List of 13
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ value            : int 1
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ visible          : logi TRUE
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ stdout           : chr ""
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ conditions       : list()
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ rng              : logi FALSE
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseConnections:List of 3
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ added   : NULL
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ removed : NULL
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ replaced: NULL
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseDevices    : NULL
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:27"
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:27"
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ session_uuid     : chr "2990c9225a45df345ef29e50409306c6"
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ pid   : int 68154
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:27"
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ random: int 2147483647
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ r_info           :List of 4
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os           : chr "unix"
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ version          : chr "1.8"
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ success: logi TRUE
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.045 0.002 0.048 0 0
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:27.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ tag    : NULL
[10:52:27.401] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Received FutureResult
[10:52:27.401] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'remove', earlySignal = 0) ...
[10:52:27.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Removed future from position #1
[10:52:27.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:52:27.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'remove', earlySignal = 0) ... done
[10:52:27.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Erased future from future backend
[10:52:27.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:27.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:52:27.404] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:52:27.404] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:27.404] |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:52:27.404] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Future at position #1 is resolved ...
[10:52:27.404] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:27.404] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:27.404] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:27.404] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:27.404] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:27.404] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:27.405] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Future at position #1 is resolved ... done
[10:52:27.405] |  :  .  |  :  .  |  :  .  |  :  .  |  collectValues('workers-381ebb526f9eb2d90230a3c7b34be202', firstOnly = TRUE) ... done
[10:52:27.405] |  :  .  |  :  .  |  :  .  |  :  .  |  Early signaling of 1 future candidates ...
[10:52:27.405] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of futures with early signaling requested: 0
[10:52:27.405] |  :  .  |  :  .  |  :  .  |  :  .  |  Early signaling of 1 future candidates ... done
[10:52:27.405] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:52:27.405] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'collect-first', earlySignal = 1) ... done
[10:52:27.405] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[10:52:27.405] |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:52:27.405] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:27.406] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[10:52:27.406] |  :  .  |  :  .  |  :  .  |  :  .  Total time: 0.0980250835418701
[10:52:27.406] |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:52:27.406] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ...
[10:52:27.406] |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:52:27.406] |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:52:27.406] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'list', earlySignal = 0) ... done
[10:52:27.406] |  :  .  |  :  .  |  :  .  |  :  Index of first available worker: 1
[10:52:27.406] |  :  .  |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:52:27.407] |  :  .  |  :  .  |  :  .  |  :  .  Worker is functional
[10:52:27.407] |  :  .  |  :  .  |  :  .  |  :  requestNode() ... done
[10:52:27.407] |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:27.408] |  :  .  |  :  .  |  :  .  |  requestWorker() ... done
[10:52:27.408] |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:52:27.408] |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:52:27.408] |  :  .  |  :  .  |  :  .  |  launchFuture() ...
[10:52:27.408] |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:27.408] |  :  .  |  :  .  |  :  .  |  :  getFutureData() ...
[10:52:27.408] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:52:27.409] |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:52:27.409] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:52:27.409] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:52:27.409] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:52:27.409] |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:52:27.409] |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:27.409] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:52:27.409] |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:27.409] |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:52:27.409] |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:52:27.410] |  :  .  |  :  .  |  :  .  |  :  getFutureData() ... done
[10:52:27.410] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'add', earlySignal = 0) ...
[10:52:27.410] |  :  .  |  :  .  |  :  .  |  :  .  Appended future to position #1
[10:52:27.410] |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:52:27.410] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'add', earlySignal = 0) ... done
[10:52:27.410] |  :  .  |  :  .  |  :  .  |  launchFuture() ... done
[10:52:27.410] |  :  .  |  :  .  |  :  .  |  ClusterFuture started
[10:52:27.410] |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:52:27.411] |  :  .  |  :  .  |  :  Launching futures ... done
[10:52:27.411] |  :  .  |  :  .  |  :  Future launched: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:27.411] |  :  .  |  :  .  |  Using ClusterFutureBackend ... done
[10:52:27.411] |  :  .  |  :  .  run() for Future (‘ClusterFuture’) ... done
[10:52:27.411] |  :  .  |  :  .  value() on list ...
[10:52:27.411] |  :  .  |  :  .  |  recursive: 0
[10:52:27.411] |  :  .  |  :  .  |  length: 2
[10:52:27.411] |  :  .  |  :  .  |  
[10:52:27.411] |  :  .  |  :  .  |  Number of remaining objects: 2
[10:52:27.411] |  :  .  |  :  .  |  checking value #1 ...
[10:52:27.412] |  :  .  |  :  .  |  :  'obj' is ClusterFuture
[10:52:27.412] |  :  .  |  :  .  |  :  ClusterFuture #1
[10:52:27.412] |  :  .  |  :  .  |  :  signalConditionsASAP(ClusterFuture, pos=1) ...
[10:52:27.412] |  :  .  |  :  .  |  :  .  nx: 2
[10:52:27.412] |  :  .  |  :  .  |  :  .  relay: TRUE
[10:52:27.412] |  :  .  |  :  .  |  :  .  stdout: TRUE
[10:52:27.412] |  :  .  |  :  .  |  :  .  signal: TRUE
[10:52:27.412] |  :  .  |  :  .  |  :  .  resignal: FALSE
[10:52:27.412] |  :  .  |  :  .  |  :  .  force: TRUE
[10:52:27.412] |  :  .  |  :  .  |  :  .  relayed: [n=2] FALSE, FALSE
[10:52:27.412] |  :  .  |  :  .  |  :  .  queued futures: [n=2] FALSE, FALSE
[10:52:27.412] |  :  .  |  :  .  |  :  .  until=1
[10:52:27.413] |  :  .  |  :  .  |  :  .  relaying element #1
[10:52:27.413] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:27.413] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:27.413] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:27.413] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:27.413] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:27.413] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:27.413] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:27.413] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:27.413] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:27.414] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:27.414] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:27.414] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:27.414] |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, FALSE
[10:52:27.414] |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, FALSE
[10:52:27.414] |  :  .  |  :  .  |  :  signalConditionsASAP(ClusterFuture, pos=1) ... done
[10:52:27.414] |  :  .  |  :  .  |  :  value(<ClusterFuture>, ...) ...
[10:52:27.414] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:27.414] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:27.414] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:27.414] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:27.415] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:27.415] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:27.415] |  :  .  |  :  .  |  :  .  value: <integer>
[10:52:27.415] |  :  .  |  :  .  |  :  value(<ClusterFuture>, ...) ... done
[10:52:27.415] |  :  .  |  :  .  |  :  signalConditionsASAP(ClusterFuture, pos=1) ...
[10:52:27.415] |  :  .  |  :  .  |  :  .  nx: 2
[10:52:27.415] |  :  .  |  :  .  |  :  .  relay: TRUE
[10:52:27.415] |  :  .  |  :  .  |  :  .  stdout: TRUE
[10:52:27.415] |  :  .  |  :  .  |  :  .  signal: TRUE
[10:52:27.415] |  :  .  |  :  .  |  :  .  resignal: FALSE
[10:52:27.415] |  :  .  |  :  .  |  :  .  force: TRUE
[10:52:27.416] |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, FALSE
[10:52:27.416] |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, FALSE
[10:52:27.416] |  :  .  |  :  .  |  :  .  until=2
[10:52:27.416] |  :  .  |  :  .  |  :  .  relaying element #2
[10:52:27.416] |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, FALSE
[10:52:27.416] |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, FALSE
[10:52:27.416] |  :  .  |  :  .  |  :  signalConditionsASAP(NULL, pos=1) ... done
[10:52:27.416] |  :  .  |  :  .  |  :  length: 1 (resolved future 1)
[10:52:27.416] |  :  .  |  :  .  |  checking value #1 ... done
[10:52:27.416] |  :  .  |  :  .  |  checking value #2 ...
[10:52:27.416] |  :  .  |  :  .  |  :  'obj' is ClusterFuture
[10:52:27.417] |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:52:27.417] |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:52:27.417] |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:52:27.417] |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:52:27.428] |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:52:27.428] |  :  .  |  :  .  |  checking value #2 ... done
[10:52:27.438] |  :  .  |  :  .  |  Number of remaining objects: 1
[10:52:27.438] |  :  .  |  :  .  |  checking value #2 ...
[10:52:27.438] |  :  .  |  :  .  |  :  'obj' is ClusterFuture
[10:52:27.438] |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:52:27.439] |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:52:27.439] |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:52:27.439] |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:52:27.449] |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:52:27.449] |  :  .  |  :  .  |  checking value #2 ... done
[10:52:27.460] |  :  .  |  :  .  |  Number of remaining objects: 1
[10:52:27.460] |  :  .  |  :  .  |  checking value #2 ...
[10:52:27.460] |  :  .  |  :  .  |  :  'obj' is ClusterFuture
[10:52:27.460] |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:52:27.460] |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:52:27.461] |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:52:27.461] |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:52:27.461] |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:52:27.461] |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:52:27.461] |  :  .  |  :  .  |  :  .  |  [1] TRUE
[10:52:27.461] |  :  .  |  :  .  |  :  .  |  received data:
[10:52:27.461] |  :  .  |  :  .  |  :  .  |  List of 5
[10:52:27.461] |  :  .  |  :  .  |  :  .  |   $ type   : chr "VALUE"
[10:52:27.461] |  :  .  |  :  .  |  :  .  |   $ value  :List of 13
[10:52:27.461] |  :  .  |  :  .  |  :  .  |    ..$ value            : int 2
[10:52:27.461] |  :  .  |  :  .  |  :  .  |    ..$ visible          : logi TRUE
[10:52:27.461] |  :  .  |  :  .  |  :  .  |    ..$ stdout           : chr ""
[10:52:27.461] |  :  .  |  :  .  |  :  .  |    ..$ conditions       : list()
[10:52:27.461] |  :  .  |  :  .  |  :  .  |    ..$ rng              : logi FALSE
[10:52:27.461] |  :  .  |  :  .  |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:52:27.461] |  :  .  |  :  .  |  :  .  |    ..$ misuseConnections:List of 3
[10:52:27.461] |  :  .  |  :  .  |  :  .  |    .. ..$ added   : NULL
[10:52:27.461] |  :  .  |  :  .  |  :  .  |    .. ..$ removed : NULL
[10:52:27.461] |  :  .  |  :  .  |  :  .  |    .. ..$ replaced: NULL
[10:52:27.461] |  :  .  |  :  .  |  :  .  |    ..$ misuseDevices    : NULL
[10:52:27.461] |  :  .  |  :  .  |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:27"
[10:52:27.461] |  :  .  |  :  .  |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:27"
[10:52:27.461] |  :  .  |  :  .  |  :  .  |    ..$ session_uuid     : chr "2990c9225a45df345ef29e50409306c6"
[10:52:27.461] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:52:27.461] |  :  .  |  :  .  |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:27.461] |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:27.461] |  :  .  |  :  .  |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:27.461] |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:27.461] |  :  .  |  :  .  |  :  .  |    .. .. ..$ pid   : int 68154
[10:52:27.461] |  :  .  |  :  .  |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:27"
[10:52:27.461] |  :  .  |  :  .  |  :  .  |    .. .. ..$ random: int 2147483647
[10:52:27.461] |  :  .  |  :  .  |  :  .  |    ..$ r_info           :List of 4
[10:52:27.461] |  :  .  |  :  .  |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:27.461] |  :  .  |  :  .  |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:52:27.461] |  :  .  |  :  .  |  :  .  |    .. ..$ os           : chr "unix"
[10:52:27.461] |  :  .  |  :  .  |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:52:27.461] |  :  .  |  :  .  |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:52:27.461] |  :  .  |  :  .  |  :  .  |    ..$ version          : chr "1.8"
[10:52:27.461] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:52:27.461] |  :  .  |  :  .  |  :  .  |   $ success: logi TRUE
[10:52:27.461] |  :  .  |  :  .  |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.003 0.001 0.003 0 0
[10:52:27.461] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:27.461] |  :  .  |  :  .  |  :  .  |   $ tag    : NULL
[10:52:27.474] |  :  .  |  :  .  |  :  .  |  Received FutureResult
[10:52:27.474] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'remove', earlySignal = 0) ...
[10:52:27.474] |  :  .  |  :  .  |  :  .  |  :  Removed future from position #1
[10:52:27.474] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:52:27.474] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-381ebb526f9eb2d90230a3c7b34be202', action = 'remove', earlySignal = 0) ... done
[10:52:27.474] |  :  .  |  :  .  |  :  .  |  Erased future from future backend
[10:52:27.474] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:27.474] |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:52:27.474] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:52:27.475] |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:27.475] |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:52:27.475] |  :  .  |  :  .  |  :  ClusterFuture #2
[10:52:27.475] |  :  .  |  :  .  |  :  signalConditionsASAP(ClusterFuture, pos=2) ...
[10:52:27.475] |  :  .  |  :  .  |  :  .  nx: 2
[10:52:27.475] |  :  .  |  :  .  |  :  .  relay: TRUE
[10:52:27.475] |  :  .  |  :  .  |  :  .  stdout: TRUE
[10:52:27.475] |  :  .  |  :  .  |  :  .  signal: TRUE
[10:52:27.475] |  :  .  |  :  .  |  :  .  resignal: FALSE
[10:52:27.475] |  :  .  |  :  .  |  :  .  force: TRUE
[10:52:27.475] |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, FALSE
[10:52:27.475] |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, FALSE
[10:52:27.476] |  :  .  |  :  .  |  :  .  until=2
[10:52:27.476] |  :  .  |  :  .  |  :  .  relaying element #2
[10:52:27.476] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:27.476] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:27.476] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:27.476] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:27.476] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:27.476] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:27.476] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:27.476] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:27.477] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:27.477] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:27.477] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:27.477] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:27.477] |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, TRUE
[10:52:27.477] |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, TRUE
[10:52:27.477] |  :  .  |  :  .  |  :  signalConditionsASAP(ClusterFuture, pos=2) ... done
[10:52:27.477] |  :  .  |  :  .  |  :  value(<ClusterFuture>, ...) ...
[10:52:27.477] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:27.477] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:27.477] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:27.478] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:27.478] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:27.478] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:27.478] |  :  .  |  :  .  |  :  .  value: <integer>
[10:52:27.478] |  :  .  |  :  .  |  :  value(<ClusterFuture>, ...) ... done
[10:52:27.478] |  :  .  |  :  .  |  :  signalConditionsASAP(ClusterFuture, pos=2) ...
[10:52:27.478] |  :  .  |  :  .  |  :  .  nx: 2
[10:52:27.478] |  :  .  |  :  .  |  :  .  relay: TRUE
[10:52:27.478] |  :  .  |  :  .  |  :  .  stdout: TRUE
[10:52:27.478] |  :  .  |  :  .  |  :  .  signal: TRUE
[10:52:27.478] |  :  .  |  :  .  |  :  .  resignal: FALSE
[10:52:27.479] |  :  .  |  :  .  |  :  .  force: TRUE
[10:52:27.479] |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, TRUE
[10:52:27.479] |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, TRUE
[10:52:27.479] |  :  .  |  :  .  |  :  .  until=2
[10:52:27.479] |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, TRUE
[10:52:27.479] |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, TRUE
[10:52:27.479] |  :  .  |  :  .  |  :  signalConditionsASAP(ClusterFuture, pos=2) ... done
[10:52:27.479] |  :  .  |  :  .  |  :  length: 0 (resolved future 2)
[10:52:27.479] |  :  .  |  :  .  |  checking value #2 ... done
[10:52:27.479] |  :  .  |  :  .  |  Relaying remaining futures ...
[10:52:27.479] |  :  .  |  :  .  |  :  signalConditionsASAP(NULL, pos=0) ...
[10:52:27.480] |  :  .  |  :  .  |  :  .  nx: 2
[10:52:27.480] |  :  .  |  :  .  |  :  .  relay: TRUE
[10:52:27.480] |  :  .  |  :  .  |  :  .  stdout: TRUE
[10:52:27.480] |  :  .  |  :  .  |  :  .  signal: TRUE
[10:52:27.480] |  :  .  |  :  .  |  :  .  resignal: FALSE
[10:52:27.480] |  :  .  |  :  .  |  :  .  force: TRUE
[10:52:27.480] |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, TRUE
[10:52:27.480] |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:52:27.480] |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, TRUE
[10:52:27.480] |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, TRUE
[10:52:27.480] |  :  .  |  :  .  |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:52:27.481] |  :  .  |  :  .  |  Relaying remaining futures ... done
[10:52:27.481] |  :  .  |  :  .  value() on list ... done

> plan(sequential)
[10:52:27.489] |  :  .  |  :  .  plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:27.489] |  :  .  |  :  .  |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:52:27.489] |  :  .  |  :  .  |  :  all.equal() for FutureStrategyList ...
[10:52:27.489] |  :  .  |  :  .  |  :  .  New stack:
[10:52:27.490] |  :  .  |  :  .  |  :  .  List of 1
[10:52:27.490] |  :  .  |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:27.490] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:27.490] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:27.490] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:27.490] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:27.490] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:52:27.490] |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:27.520] |  :  .  |  :  .  |  :  .  Old stack:
[10:52:27.520] |  :  .  |  :  .  |  :  .  List of 1
[10:52:27.520] |  :  .  |  :  .  |  :  .   $ :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[10:52:27.520] |  :  .  |  :  .  |  :  .      envir = parent.frame())  
[10:52:27.520] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[10:52:27.520] |  :  .  |  :  .  |  :  .    ..- attr(*, "init")= chr "done"
[10:52:27.520] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:52:27.520] |  :  .  |  :  .  |  :  .      interrupts = FALSE, persistent = FALSE, ...)  
[10:52:27.520] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:27.520] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:27.520] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweaks")=List of 1
[10:52:27.520] |  :  .  |  :  .  |  :  .    .. ..$ workers:List of 1
[10:52:27.520] |  :  .  |  :  .  |  :  .    .. .. ..$ :List of 3
[10:52:27.520] |  :  .  |  :  .  |  :  .    .. .. .. ..$ con : 'sockconn' int 4
[10:52:27.520] |  :  .  |  :  .  |  :  .    .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[10:52:27.520] |  :  .  |  :  .  |  :  .    .. .. .. ..$ host: chr "localhost"
[10:52:27.520] |  :  .  |  :  .  |  :  .    .. .. .. ..$ rank: num 0
[10:52:27.520] |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[10:52:27.520] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[10:52:27.520] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(cluster, workers = cl)
[10:52:27.520] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'ClusterFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55d58537d658> 
[10:52:27.520] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:52:27.520] |  :  .  |  :  .  |  :  .      interrupts = FALSE, persistent = FALSE, ...)  
[10:52:27.520] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:27.520] |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:27.526] |  :  .  |  :  .  |  :  .  Not identical
[10:52:27.526] |  :  .  |  :  .  |  :  .  all.equal() for future ...
[10:52:27.526] |  :  .  |  :  .  |  :  .  |  List of 2
[10:52:27.526] |  :  .  |  :  .  |  :  .  |   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:27.526] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:27.526] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:27.526] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:27.526] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:27.526] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:27.526] |  :  .  |  :  .  |  :  .  |   $ current:function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[10:52:27.526] |  :  .  |  :  .  |  :  .  |      envir = parent.frame())  
[10:52:27.526] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[10:52:27.526] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "init")= chr "done"
[10:52:27.526] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:52:27.526] |  :  .  |  :  .  |  :  .  |      interrupts = FALSE, persistent = FALSE, ...)  
[10:52:27.526] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:27.526] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:27.526] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweaks")=List of 1
[10:52:27.526] |  :  .  |  :  .  |  :  .  |    .. ..$ workers:List of 1
[10:52:27.526] |  :  .  |  :  .  |  :  .  |    .. .. ..$ :List of 3
[10:52:27.526] |  :  .  |  :  .  |  :  .  |    .. .. .. ..$ con : 'sockconn' int 4
[10:52:27.526] |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[10:52:27.526] |  :  .  |  :  .  |  :  .  |    .. .. .. ..$ host: chr "localhost"
[10:52:27.526] |  :  .  |  :  .  |  :  .  |    .. .. .. ..$ rank: num 0
[10:52:27.526] |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[10:52:27.526] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[10:52:27.526] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(cluster, workers = cl)
[10:52:27.526] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'ClusterFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55d58537d658> 
[10:52:27.526] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:52:27.526] |  :  .  |  :  .  |  :  .  |      interrupts = FALSE, persistent = FALSE, ...)  
[10:52:27.526] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:52:27.534] |  :  .  |  :  .  |  :  .  |  Formals differ
[10:52:27.534] |  :  .  |  :  .  |  :  .  all.equal() for future ... done
[10:52:27.534] |  :  .  |  :  .  |  :  .  Future strategies differ at level 1
[10:52:27.534] |  :  .  |  :  .  |  :  all.equal() for FutureStrategyList ... done
[10:52:27.534] |  :  .  |  :  .  |  :  plan(): Setting new future strategy stack:
[10:52:27.534] |  :  .  |  :  .  |  :  List of future strategies:
[10:52:27.534] |  :  .  |  :  .  |  :  1. sequential:
[10:52:27.534] |  :  .  |  :  .  |  :     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:27.534] |  :  .  |  :  .  |  :     - tweaked: FALSE
[10:52:27.534] |  :  .  |  :  .  |  :     - call: plan(sequential)
[10:52:27.535] |  :  .  |  :  .  |  :  List of 1
[10:52:27.535] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:27.535] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:27.535] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:27.535] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:27.535] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:27.535] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:27.535] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:27.537] |  :  .  |  :  .  |  :  plan(): plan_cleanup(‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:52:27.537] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:27.537] |  :  .  |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:52:27.537] |  :  .  |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:27.537] |  :  .  |  :  .  |  :  .  stopWorkers() for ClusterFutureBackend ...
[10:52:27.537] |  :  .  |  :  .  |  :  .  |  Interrupt active futures ...
[10:52:27.538] |  :  .  |  :  .  |  :  .  |  :  Number of futures: 0
[10:52:27.538] |  :  .  |  :  .  |  :  .  |  Interrupt active futures ... done
[10:52:27.538] |  :  .  |  :  .  |  :  .  |  Clear future registry ...
[10:52:27.538] |  :  .  |  :  .  |  :  .  |  Clear future registry ... done
[10:52:27.538] |  :  .  |  :  .  |  :  .  |  Stop cluster workers ...
[10:52:27.539] |  :  .  |  :  .  |  :  .  |  :  Stopping existing cluster ...
[10:52:27.539] |  :  .  |  :  .  |  :  .  |  :  .  No pre-existing cluster. Skipping
[10:52:27.539] |  :  .  |  :  .  |  :  .  |  :  Stopping existing cluster ... done
[10:52:27.539] |  :  .  |  :  .  |  :  .  |  Stop cluster workers ... done
[10:52:27.539] |  :  .  |  :  .  |  :  .  stopWorkers() for ClusterFutureBackend ... done
[10:52:27.539] |  :  .  |  :  .  |  :  .  Legacy shutdown of cluster workers ...
[10:52:27.539] |  :  .  |  :  .  |  :  .  |  Stopping existing cluster ...
[10:52:27.539] |  :  .  |  :  .  |  :  .  |  :  No pre-existing cluster. Skipping
[10:52:27.539] |  :  .  |  :  .  |  :  .  |  Stopping existing cluster ... done
[10:52:27.539] |  :  .  |  :  .  |  :  .  Legacy shutdown of cluster workers ... done
[10:52:27.539] |  :  .  |  :  .  |  :  plan(): plan_cleanup(‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:52:27.540] |  :  .  |  :  .  |  :  plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[10:52:27.540] |  :  .  |  :  .  |  :  .  function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:27.540] |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:27.540] |  :  .  |  :  .  |  :  .   - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:27.540] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:27.540] |  :  .  |  :  .  |  :  .   - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:27.540] |  :  .  |  :  .  |  :  .   - attr(*, "call")= language plan(sequential)
[10:52:27.542] |  :  .  |  :  .  |  :  .  init: NULL
[10:52:27.542] |  :  .  |  :  .  |  :  plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[10:52:27.542] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:27.543] |  :  .  |  :  .  |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:27.543] |  :  .  |  :  .  |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:27.543] |  :  .  |  :  .  |  :  Backend function: <‘NULL’>
[10:52:27.543] |  :  .  |  :  .  |  :  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:27.543] |  :  .  |  :  .  |  :  plan(): nbrOfWorkers() = 1
[10:52:27.543] |  :  .  |  :  .  |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:52:27.543] |  :  .  |  :  .  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done

> message("all.equal() for cluster backend ... done")
all.equal() for cluster backend ... done
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=0.5s, sys.self=0.02s, elapsed=2s, user.child=0.002s, sys.child=0.006s
Test ‘cluster-connection-clashes’ ... success
> 
