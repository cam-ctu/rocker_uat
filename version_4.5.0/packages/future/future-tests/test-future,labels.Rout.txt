
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script incl/testme/test-future,labels.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future:::testme("future,labels")
Test ‘future,labels’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future/testme/test-future,labels.R’

> library(future)
[10:52:38.294] Option 'future.startup.script': TRUE
[10:52:38.294] Future startup scripts considered: ‘.future.R’, ‘~/.future.R’
[10:52:38.294] Future startup scripts found: <none>

> message("*** Futures - labels ...")
*** Futures - labels ...

> strategies <- supportedStrategies()

> for (strategy in strategies) {
+     message(sprintf("- plan('%s') ...", strategy))
+     plan(strategy)
+     for (label in list(NULL, sprintf("str ..." ... [TRUNCATED] 
- plan('sequential') ...
[10:52:38.308] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.308] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:52:38.308] |  :  all.equal() for FutureStrategyList ...
[10:52:38.308] |  :  .  New stack:
[10:52:38.309] |  :  .  List of 1
[10:52:38.309] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.309] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.309] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.309] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.309] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.309] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:38.309] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.312] |  :  .  Old stack:
[10:52:38.312] |  :  .  List of 1
[10:52:38.312] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.312] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.312] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.312] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.312] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.312] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:52:38.312] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.315] |  :  .  Not identical
[10:52:38.315] |  :  .  all.equal() for future ...
[10:52:38.315] |  :  .  |  List of 2
[10:52:38.315] |  :  .  |   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.315] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.315] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.315] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.315] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.315] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:38.315] |  :  .  |   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.315] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.315] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.315] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.315] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.315] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:38.319] |  :  .  all.equal() for future ... done
[10:52:38.319] |  :  all.equal() for FutureStrategyList ... done
[10:52:38.319] |  :  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:38.319] |  :  List of future strategies:
[10:52:38.319] |  :  1. sequential:
[10:52:38.319] |  :     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:38.319] |  :     - tweaked: FALSE
[10:52:38.319] |  :     - call: plan(sequential)
[10:52:38.320] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:52:38.320] plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.321] getGlobalsAndPackages() ...
[10:52:38.321] |  Searching for globals ...
[10:52:38.326] |  :  globals found: [0] 
[10:52:38.326] |  Searching for globals ... DONE
[10:52:38.326] |  globals: [0] <none>
[10:52:38.326] |  packages: [0] <none>
[10:52:38.327] getGlobalsAndPackages() ... done
[10:52:38.327] run() for Future (‘Future’) ...
[10:52:38.327] |  state: ‘created’
[10:52:38.327] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.328] |  :  makeFutureBackend(<sequential>) ...
[10:52:38.328] |  :  .  Backend function: <‘NULL’>
[10:52:38.328] |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:38.328] |  :  makeFutureBackend(<sequential>) ... done
[10:52:38.328] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.328] |  Using SequentialFutureBackend ...
[10:52:38.328] |  :  Launching futures ...
[10:52:38.329] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:38.329] |  :  .  |  getFutureData() ...
[10:52:38.329] |  :  .  |  :  getFutureCore() ...
[10:52:38.329] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:38.329] |  :  .  |  :  getFutureCore() ... done
[10:52:38.329] |  :  .  |  :  getFutureCapture() ...
[10:52:38.329] |  :  .  |  :  getFutureCapture() ... done
[10:52:38.330] |  :  .  |  :  getFutureContext() ...
[10:52:38.330] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.330] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:38.330] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.330] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:38.330] |  :  .  |  :  getFutureContext() ... done
[10:52:38.330] |  :  .  |  getFutureData() ... done
[10:52:38.331] |  :  .  |  attachPackages() ...
[10:52:38.331] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:38.332] |  :  .  |  attachPackages() ... DONE
[10:52:38.332] |  :  .  |  attachPackages() ...
[10:52:38.332] |  :  .  |  :  packages: [n=0] 
[10:52:38.332] |  :  .  |  attachPackages() ... DONE
[10:52:38.332] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.332] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:38.333] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.333] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:38.333] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:38.333] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:38.333] |  :  .  |  :  .  |  New stack:
[10:52:38.333] |  :  .  |  :  .  |  List of 1
[10:52:38.333] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.333] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.333] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.333] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.333] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.333] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.333] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.337] |  :  .  |  :  .  |  Old stack:
[10:52:38.337] |  :  .  |  :  .  |  List of 1
[10:52:38.337] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.337] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.337] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.337] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.337] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.337] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:38.337] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c825519a70> 
[10:52:38.337] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.337] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.337] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.341] |  :  .  |  :  .  |  Not identical
[10:52:38.341] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:38.341] |  :  .  |  :  .  |  :  List of 2
[10:52:38.341] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.341] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.341] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.341] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.341] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.341] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.341] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.341] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.341] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.341] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.341] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.341] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:38.341] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c825519a70> 
[10:52:38.341] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.341] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.345] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:38.346] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:38.346] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:38.346] |  :  .  |  :  .  List of future strategies:
[10:52:38.346] |  :  .  |  :  .  1. sequential:
[10:52:38.346] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:38.346] |  :  .  |  :  .     - tweaked: FALSE
[10:52:38.346] |  :  .  |  :  .     - call: plan(sequential)
[10:52:38.346] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:38.346] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:38.348] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:38.349] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:38.349] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:38.349] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:38.349] |  :  .  |  :  .  |  :  New stack:
[10:52:38.349] |  :  .  |  :  .  |  :  List of 1
[10:52:38.349] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.349] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.349] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.349] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.349] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.349] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:38.349] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c825519a70> 
[10:52:38.349] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.349] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.349] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.352] |  :  .  |  :  .  |  :  Old stack:
[10:52:38.352] |  :  .  |  :  .  |  :  List of 1
[10:52:38.352] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.352] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.352] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.352] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.352] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.352] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:38.352] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c825519a70> 
[10:52:38.352] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.352] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.352] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.355] |  :  .  |  :  .  |  :  Identical
[10:52:38.355] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:38.355] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:38.355] |  :  .  |  :  .  |  List of future strategies:
[10:52:38.355] |  :  .  |  :  .  |  1. sequential:
[10:52:38.355] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:38.355] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:38.355] |  :  .  |  :  .  |     - call: plan(sequential)
[10:52:38.355] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:38.355] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:38.355] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:38.356] |  :  .  |  SequentialFuture started (and completed)
[10:52:38.356] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:38.356] |  :  Launching futures ... done
[10:52:38.356] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:38.356] |  Using SequentialFutureBackend ... done
[10:52:38.356] run() for Future (‘SequentialFuture’) ... done
SequentialFuture:
Label: NULL
Expression:
[1] 42
Lazy evaluation: FALSE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Globals: <none>
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: TRUE
Value: 39 bytes of class ‘numeric’
Early signaling: FALSE
Owner process: 312d9d716ed6c53550527b9727f32039
Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:38.359] getGlobalsAndPackages() ...
[10:52:38.359] |  Searching for globals ...
[10:52:38.361] |  :  globals found: [1] ‘{’
[10:52:38.361] |  Searching for globals ... DONE
[10:52:38.361] |  Resolving globals: FALSE
[10:52:38.361] |  Search for packages associated with the globals ...
[10:52:38.361] |  :  Packages associated with globals: [1] ‘base’
[10:52:38.361] |  :  Packages: [1] ‘base’
[10:52:38.362] |  Search for packages associated with the globals ... DONE
[10:52:38.362] |  Packages after dropping 'base': [0] 
[10:52:38.362] |  globals: [0] 
[10:52:38.362] |  packages: [0] 
[10:52:38.362] getGlobalsAndPackages() ... done
[10:52:38.362] run() for Future (‘Future’) ...
[10:52:38.362] |  state: ‘created’
[10:52:38.362] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.362] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.363] |  Using SequentialFutureBackend ...
[10:52:38.363] |  :  Launching futures ...
[10:52:38.363] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:38.363] |  :  .  |  getFutureData() ...
[10:52:38.363] |  :  .  |  :  getFutureCore() ...
[10:52:38.363] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:38.363] |  :  .  |  :  getFutureCore() ... done
[10:52:38.363] |  :  .  |  :  getFutureCapture() ...
[10:52:38.363] |  :  .  |  :  getFutureCapture() ... done
[10:52:38.363] |  :  .  |  :  getFutureContext() ...
[10:52:38.364] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.364] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:38.364] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.364] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:38.364] |  :  .  |  :  getFutureContext() ... done
[10:52:38.364] |  :  .  |  getFutureData() ... done
[10:52:38.364] |  :  .  |  attachPackages() ...
[10:52:38.364] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:38.364] |  :  .  |  attachPackages() ... DONE
[10:52:38.364] |  :  .  |  attachPackages() ...
[10:52:38.365] |  :  .  |  :  packages: [n=0] 
[10:52:38.365] |  :  .  |  attachPackages() ... DONE
[10:52:38.365] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.365] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:38.365] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.365] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:38.366] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:38.366] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:38.366] |  :  .  |  :  .  |  New stack:
[10:52:38.366] |  :  .  |  :  .  |  List of 1
[10:52:38.366] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.366] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.366] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.366] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.366] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.366] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.366] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.368] |  :  .  |  :  .  |  Old stack:
[10:52:38.368] |  :  .  |  :  .  |  List of 1
[10:52:38.368] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.368] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.368] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.368] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.368] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.368] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:38.368] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c825519a70> 
[10:52:38.368] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.368] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.368] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.371] |  :  .  |  :  .  |  Not identical
[10:52:38.371] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:38.371] |  :  .  |  :  .  |  :  List of 2
[10:52:38.371] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.371] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.371] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.371] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.371] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.371] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.371] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.371] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.371] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.371] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.371] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.371] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:38.371] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c825519a70> 
[10:52:38.371] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.371] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.375] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:38.375] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:38.376] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:38.376] |  :  .  |  :  .  List of future strategies:
[10:52:38.376] |  :  .  |  :  .  1. sequential:
[10:52:38.376] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:38.376] |  :  .  |  :  .     - tweaked: FALSE
[10:52:38.376] |  :  .  |  :  .     - call: plan(sequential)
[10:52:38.376] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:38.376] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:38.377] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:38.378] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:38.378] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:38.378] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:38.378] |  :  .  |  :  .  |  :  New stack:
[10:52:38.378] |  :  .  |  :  .  |  :  List of 1
[10:52:38.378] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.378] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.378] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.378] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.378] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.378] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:38.378] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c825519a70> 
[10:52:38.378] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.378] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.378] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.382] |  :  .  |  :  .  |  :  Old stack:
[10:52:38.382] |  :  .  |  :  .  |  :  List of 1
[10:52:38.382] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.382] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.382] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.382] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.382] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.382] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:38.382] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c825519a70> 
[10:52:38.382] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.382] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.382] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.385] |  :  .  |  :  .  |  :  Identical
[10:52:38.385] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:38.385] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:38.385] |  :  .  |  :  .  |  List of future strategies:
[10:52:38.385] |  :  .  |  :  .  |  1. sequential:
[10:52:38.385] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:38.385] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:38.385] |  :  .  |  :  .  |     - call: plan(sequential)
[10:52:38.385] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:38.385] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:38.385] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:38.386] |  :  .  |  SequentialFuture started (and completed)
[10:52:38.386] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:38.386] |  :  Launching futures ... done
[10:52:38.386] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:38.386] |  Using SequentialFutureBackend ... done
[10:52:38.386] run() for Future (‘SequentialFuture’) ... done
SequentialFuture:
Label: NULL
Expression:
{
    42
}
Lazy evaluation: FALSE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Globals: <none>
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: TRUE
Value: 39 bytes of class ‘numeric’
Early signaling: FALSE
Owner process: 312d9d716ed6c53550527b9727f32039
Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:38.387] getGlobalsAndPackages() ...
[10:52:38.387] |  Searching for globals ...
[10:52:38.387] |  :  globals found: [0] 
[10:52:38.387] |  Searching for globals ... DONE
[10:52:38.387] |  globals: [0] <none>
[10:52:38.387] |  packages: [0] <none>
[10:52:38.387] getGlobalsAndPackages() ... done
[10:52:38.388] run() for Future (‘Future’) ...
[10:52:38.388] |  state: ‘created’
[10:52:38.388] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.388] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.388] |  Using SequentialFutureBackend ...
[10:52:38.388] |  :  Launching futures ...
[10:52:38.388] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:38.388] |  :  .  |  getFutureData() ...
[10:52:38.388] |  :  .  |  :  getFutureCore() ...
[10:52:38.389] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:38.389] |  :  .  |  :  getFutureCore() ... done
[10:52:38.389] |  :  .  |  :  getFutureCapture() ...
[10:52:38.389] |  :  .  |  :  getFutureCapture() ... done
[10:52:38.389] |  :  .  |  :  getFutureContext() ...
[10:52:38.389] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.389] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:38.389] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.389] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:38.389] |  :  .  |  :  getFutureContext() ... done
[10:52:38.389] |  :  .  |  getFutureData() ... done
[10:52:38.390] |  :  .  |  attachPackages() ...
[10:52:38.390] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:38.390] |  :  .  |  attachPackages() ... DONE
[10:52:38.390] |  :  .  |  attachPackages() ...
[10:52:38.390] |  :  .  |  :  packages: [n=0] 
[10:52:38.390] |  :  .  |  attachPackages() ... DONE
[10:52:38.390] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.390] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:38.391] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.391] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:38.391] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:38.391] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:38.391] |  :  .  |  :  .  |  New stack:
[10:52:38.391] |  :  .  |  :  .  |  List of 1
[10:52:38.391] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.391] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.391] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.391] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.391] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.391] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.391] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.393] |  :  .  |  :  .  |  Old stack:
[10:52:38.393] |  :  .  |  :  .  |  List of 1
[10:52:38.393] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.393] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.393] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.393] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.393] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.393] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:38.393] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c825519a70> 
[10:52:38.393] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.393] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.393] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.396] |  :  .  |  :  .  |  Not identical
[10:52:38.396] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:38.396] |  :  .  |  :  .  |  :  List of 2
[10:52:38.396] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.396] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.396] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.396] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.396] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.396] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.396] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.396] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.396] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.396] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.396] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.396] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:38.396] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c825519a70> 
[10:52:38.396] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.396] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.401] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:38.402] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:38.402] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:38.402] |  :  .  |  :  .  List of future strategies:
[10:52:38.402] |  :  .  |  :  .  1. sequential:
[10:52:38.402] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:38.402] |  :  .  |  :  .     - tweaked: FALSE
[10:52:38.402] |  :  .  |  :  .     - call: plan(sequential)
[10:52:38.402] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:38.402] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:38.404] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:38.404] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:38.404] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:38.404] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:38.404] |  :  .  |  :  .  |  :  New stack:
[10:52:38.404] |  :  .  |  :  .  |  :  List of 1
[10:52:38.404] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.404] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.404] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.404] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.404] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.404] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:38.404] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c825519a70> 
[10:52:38.404] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.404] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.404] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.407] |  :  .  |  :  .  |  :  Old stack:
[10:52:38.407] |  :  .  |  :  .  |  :  List of 1
[10:52:38.407] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.407] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.407] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.407] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.407] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.407] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:38.407] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c825519a70> 
[10:52:38.407] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.407] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.407] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.410] |  :  .  |  :  .  |  :  Identical
[10:52:38.410] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:38.410] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:38.410] |  :  .  |  :  .  |  List of future strategies:
[10:52:38.410] |  :  .  |  :  .  |  1. sequential:
[10:52:38.410] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:38.410] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:38.410] |  :  .  |  :  .  |     - call: plan(sequential)
[10:52:38.410] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:38.410] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:38.411] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:38.411] |  :  .  |  SequentialFuture started (and completed)
[10:52:38.411] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:38.411] |  :  Launching futures ... done
[10:52:38.411] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:38.411] |  Using SequentialFutureBackend ... done
[10:52:38.411] run() for Future (‘SequentialFuture’) ... done
SequentialFuture:
Label: ‘strategy = sequential’
Expression:
[1] 42
Lazy evaluation: FALSE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Globals: <none>
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: TRUE
Value: 39 bytes of class ‘numeric’
Early signaling: FALSE
Owner process: 312d9d716ed6c53550527b9727f32039
Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:38.412] getGlobalsAndPackages() ...
[10:52:38.412] |  Searching for globals ...
[10:52:38.413] |  :  globals found: [1] ‘{’
[10:52:38.413] |  Searching for globals ... DONE
[10:52:38.413] |  Resolving globals: FALSE
[10:52:38.413] |  Search for packages associated with the globals ...
[10:52:38.413] |  :  Packages associated with globals: [1] ‘base’
[10:52:38.413] |  :  Packages: [1] ‘base’
[10:52:38.413] |  Search for packages associated with the globals ... DONE
[10:52:38.413] |  Packages after dropping 'base': [0] 
[10:52:38.414] |  globals: [0] 
[10:52:38.414] |  packages: [0] 
[10:52:38.414] getGlobalsAndPackages() ... done
[10:52:38.414] run() for Future (‘Future’) ...
[10:52:38.414] |  state: ‘created’
[10:52:38.414] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.414] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.414] |  Using SequentialFutureBackend ...
[10:52:38.414] |  :  Launching futures ...
[10:52:38.414] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:38.415] |  :  .  |  getFutureData() ...
[10:52:38.415] |  :  .  |  :  getFutureCore() ...
[10:52:38.415] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:38.415] |  :  .  |  :  getFutureCore() ... done
[10:52:38.415] |  :  .  |  :  getFutureCapture() ...
[10:52:38.415] |  :  .  |  :  getFutureCapture() ... done
[10:52:38.415] |  :  .  |  :  getFutureContext() ...
[10:52:38.415] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.415] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:38.415] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.415] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:38.416] |  :  .  |  :  getFutureContext() ... done
[10:52:38.416] |  :  .  |  getFutureData() ... done
[10:52:38.416] |  :  .  |  attachPackages() ...
[10:52:38.416] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:38.416] |  :  .  |  attachPackages() ... DONE
[10:52:38.416] |  :  .  |  attachPackages() ...
[10:52:38.416] |  :  .  |  :  packages: [n=0] 
[10:52:38.416] |  :  .  |  attachPackages() ... DONE
[10:52:38.417] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.417] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:38.417] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.417] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:38.417] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:38.417] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:38.417] |  :  .  |  :  .  |  New stack:
[10:52:38.417] |  :  .  |  :  .  |  List of 1
[10:52:38.417] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.417] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.417] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.417] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.417] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.417] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.417] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.420] |  :  .  |  :  .  |  Old stack:
[10:52:38.420] |  :  .  |  :  .  |  List of 1
[10:52:38.420] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.420] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.420] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.420] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.420] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.420] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:38.420] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c825519a70> 
[10:52:38.420] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.420] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.420] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.423] |  :  .  |  :  .  |  Not identical
[10:52:38.423] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:38.423] |  :  .  |  :  .  |  :  List of 2
[10:52:38.423] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.423] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.423] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.423] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.423] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.423] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.423] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.423] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.423] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.423] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.423] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.423] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:38.423] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c825519a70> 
[10:52:38.423] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.423] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.428] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:38.428] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:38.428] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:38.428] |  :  .  |  :  .  List of future strategies:
[10:52:38.428] |  :  .  |  :  .  1. sequential:
[10:52:38.428] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:38.428] |  :  .  |  :  .     - tweaked: FALSE
[10:52:38.428] |  :  .  |  :  .     - call: plan(sequential)
[10:52:38.428] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:38.428] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:38.430] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:38.430] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:38.430] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:38.430] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:38.430] |  :  .  |  :  .  |  :  New stack:
[10:52:38.430] |  :  .  |  :  .  |  :  List of 1
[10:52:38.430] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.430] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.430] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.430] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.430] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.430] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:38.430] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c825519a70> 
[10:52:38.430] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.430] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.430] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.433] |  :  .  |  :  .  |  :  Old stack:
[10:52:38.433] |  :  .  |  :  .  |  :  List of 1
[10:52:38.433] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.433] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.433] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.433] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.433] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.433] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:38.433] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c825519a70> 
[10:52:38.433] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.433] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.433] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.436] |  :  .  |  :  .  |  :  Identical
[10:52:38.436] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:38.436] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:38.436] |  :  .  |  :  .  |  List of future strategies:
[10:52:38.436] |  :  .  |  :  .  |  1. sequential:
[10:52:38.436] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:38.436] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:38.436] |  :  .  |  :  .  |     - call: plan(sequential)
[10:52:38.437] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:38.437] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:38.437] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:38.437] |  :  .  |  SequentialFuture started (and completed)
[10:52:38.437] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:38.437] |  :  Launching futures ... done
[10:52:38.437] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:38.437] |  Using SequentialFutureBackend ... done
[10:52:38.437] run() for Future (‘SequentialFuture’) ... done
SequentialFuture:
Label: ‘strategy = sequential’
Expression:
{
    42
}
Lazy evaluation: FALSE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Globals: <none>
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: TRUE
Value: 39 bytes of class ‘numeric’
Early signaling: FALSE
Owner process: 312d9d716ed6c53550527b9727f32039
Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
- plan('sequential') ... DONE
- plan('multicore') ...
[10:52:38.438] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.438] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:52:38.439] |  :  all.equal() for FutureStrategyList ...
[10:52:38.439] |  :  .  New stack:
[10:52:38.439] |  :  .  List of 1
[10:52:38.439] |  :  .   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:38.439] |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:38.439] |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:38.439] |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.439] |  :  .      ...)  
[10:52:38.439] |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.439] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.439] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:38.439] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.442] |  :  .  Old stack:
[10:52:38.442] |  :  .  List of 1
[10:52:38.442] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.442] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.442] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.442] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.442] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.442] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:52:38.442] |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c825519a70> 
[10:52:38.442] |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.442] |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.442] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.444] |  :  .  Not identical
[10:52:38.445] |  :  .  all.equal() for future ...
[10:52:38.445] |  :  .  |  List of 2
[10:52:38.445] |  :  .  |   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:38.445] |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:38.445] |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:38.445] |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.445] |  :  .  |      ...)  
[10:52:38.445] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.445] |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.445] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:38.445] |  :  .  |   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.445] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.445] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.445] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.445] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.445] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:38.445] |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c825519a70> 
[10:52:38.445] |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.445] |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.449] |  :  .  |  Formals differ
[10:52:38.449] |  :  .  all.equal() for future ... done
[10:52:38.449] |  :  .  Future strategies differ at level 1
[10:52:38.449] |  :  all.equal() for FutureStrategyList ... done
[10:52:38.449] |  :  plan(): Setting new future strategy stack:
[10:52:38.449] |  :  List of future strategies:
[10:52:38.449] |  :  1. multicore:
[10:52:38.449] |  :     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:38.449] |  :     - tweaked: FALSE
[10:52:38.449] |  :     - call: plan(strategy)
[10:52:38.450] |  :  List of 1
[10:52:38.450] |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:38.450] |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:38.450] |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:38.450] |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.450] |  :      ...)  
[10:52:38.450] |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.450] |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.450] |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:38.450] |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.452] |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:52:38.452] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.452] |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:38.452] |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.452] |  :  .  Legacy shutdown of cluster workers ...
[10:52:38.452] |  :  .  |  Stopping existing cluster ...
[10:52:38.453] |  :  .  |  :  No pre-existing cluster. Skipping
[10:52:38.453] |  :  .  |  Stopping existing cluster ... done
[10:52:38.453] |  :  .  Legacy shutdown of cluster workers ... done
[10:52:38.453] |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:52:38.453] |  :  plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ...
[10:52:38.453] |  :  .  function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:38.453] |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:38.453] |  :  .   - attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:38.453] |  :  .   - attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.453] |  :  .      ...)  
[10:52:38.453] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.453] |  :  .   - attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.453] |  :  .   - attr(*, "call")= language plan(strategy)
[10:52:38.455] |  :  .  init: NULL
[10:52:38.455] |  :  plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ... done
[10:52:38.455] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.455] |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:38.455] |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.455] |  :  Backend function: <‘NULL’>
[10:52:38.457] |  :  Backend: <‘MulticoreFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:38.457] |  :  plan(): nbrOfWorkers() = 2
[10:52:38.457] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:52:38.457] plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.457] getGlobalsAndPackages() ...
[10:52:38.457] |  Searching for globals ...
[10:52:38.458] |  :  globals found: [0] 
[10:52:38.458] |  Searching for globals ... DONE
[10:52:38.458] |  globals: [0] <none>
[10:52:38.458] |  packages: [0] <none>
[10:52:38.458] getGlobalsAndPackages() ... done
[10:52:38.458] run() for Future (‘Future’) ...
[10:52:38.458] |  state: ‘created’
[10:52:38.459] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.459] |  :  makeFutureBackend(<multicore>) ...
[10:52:38.459] |  :  .  Backend function: <‘NULL’>
[10:52:38.469] |  :  .  Backend: <‘MulticoreFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:38.469] |  :  makeFutureBackend(<multicore>) ... done
[10:52:38.470] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.470] |  Using MulticoreFutureBackend ...
[10:52:38.470] |  :  Launching futures ...
[10:52:38.470] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:38.470] |  :  .  |  getFutureData() ...
[10:52:38.470] |  :  .  |  :  getFutureCore() ...
[10:52:38.470] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:38.470] |  :  .  |  :  getFutureCore() ... done
[10:52:38.471] |  :  .  |  :  getFutureCapture() ...
[10:52:38.471] |  :  .  |  :  getFutureCapture() ... done
[10:52:38.471] |  :  .  |  :  getFutureContext() ...
[10:52:38.471] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.471] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:38.471] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.471] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:38.471] |  :  .  |  :  getFutureContext() ... done
[10:52:38.472] |  :  .  |  getFutureData() ... done
[10:52:38.472] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:38.472] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:38.475] |  :  .  |  MulticoreFuture started
[10:52:38.475] |  :  .  |  attachPackages() ...
[10:52:38.475] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:38.476] |  :  Launching futures ... done
[10:52:38.475] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:38.476] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:38.476] |  :  .  |  attachPackages() ... DONE
[10:52:38.476] |  Using MulticoreFutureBackend ... done
[10:52:38.476] |  :  .  |  attachPackages() ...
[10:52:38.476] run() for Future (‘MulticoreFuture’) ... done
[10:52:38.476] |  :  .  |  :  packages: [n=0] 
MulticoreFuture:
Label: NULL
Expression:
[1][10:52:38.476] |  :  .  |  attachPackages() ... DONE
 42
Lazy evaluation: FALSE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Globals: <none>
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:52:38.477] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.477] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:38.478] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.478] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:38.479] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:38.479] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:38.479] |  :  .  |  :  .  |  New stack:
[10:52:38.479] |  :  .  |  :  .  |  List of 1
[10:52:38.479] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.479] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.479] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.479] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.479] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.479] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.479] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.483] |  :  .  |  :  .  |  Old stack:
[10:52:38.489] readImmediateCondition() ...
[10:52:38.489]   - path: ‘/tmp/Rtmp3zGbkB/.future/immediateConditions’
[10:52:38.489]  - Number of RDS files: 0
[10:52:38.489] readImmediateCondition() ... DONE
Resolved: FALSE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: 312d9d716ed6c53550527b9727f32039
Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:38.491] result() for MulticoreFuture ...
[10:52:38.483] |  :  .  |  :  .  |  List of 1
[10:52:38.483] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:38.483] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:38.483] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:38.483] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.483] |  :  .  |  :  .  |      ...)  
[10:52:38.483] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.483] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.483] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:38.483] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c824b96ab8> 
[10:52:38.483] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.483] |  :  .  |  :  .  |      ...)  
[10:52:38.483] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.483] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.491] |  :  .  |  :  .  |  Not identical
[10:52:38.491] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:38.492] |  :  .  |  :  .  |  :  List of 2
[10:52:38.492] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.492] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.492] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.492] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.492] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.492] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.492] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:38.492] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:38.492] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:38.492] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.492] |  :  .  |  :  .  |  :      ...)  
[10:52:38.492] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.492] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.492] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:38.492] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c824b96ab8> 
[10:52:38.492] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.492] |  :  .  |  :  .  |  :      ...)  
[10:52:38.492] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.499] |  :  .  |  :  .  |  :  Formals differ
[10:52:38.499] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:38.500] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:52:38.500] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:38.500] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:52:38.500] |  :  .  |  :  .  List of future strategies:
[10:52:38.500] |  :  .  |  :  .  1. sequential:
[10:52:38.500] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:38.500] |  :  .  |  :  .     - tweaked: FALSE
[10:52:38.500] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.501] |  :  .  |  :  .  List of 1
[10:52:38.501] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.501] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.501] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.501] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.501] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.501] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.501] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.504] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:38.504] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:38.504] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.505] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:38.505] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.505] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:52:38.505] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:38.505] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:52:38.506] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:38.506] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:38.508] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:38.509] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:38.509] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:38.509] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:38.509] |  :  .  |  :  .  |  :  New stack:
[10:52:38.509] |  :  .  |  :  .  |  :  List of 1
[10:52:38.509] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:38.509] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:38.509] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:38.509] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.509] |  :  .  |  :  .  |  :      ...)  
[10:52:38.509] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.509] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.509] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:38.509] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c824b96ab8> 
[10:52:38.509] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.509] |  :  .  |  :  .  |  :      ...)  
[10:52:38.509] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.509] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.513] |  :  .  |  :  .  |  :  Old stack:
[10:52:38.513] |  :  .  |  :  .  |  :  List of 1
[10:52:38.513] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.513] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.513] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.513] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.513] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.513] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.513] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.515] |  :  .  |  :  .  |  :  Not identical
[10:52:38.515] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:52:38.515] |  :  .  |  :  .  |  :  .  List of 2
[10:52:38.515] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:38.515] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:38.515] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:38.515] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.515] |  :  .  |  :  .  |  :  .      ...)  
[10:52:38.515] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.515] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.515] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:38.515] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c824b96ab8> 
[10:52:38.515] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.515] |  :  .  |  :  .  |  :  .      ...)  
[10:52:38.515] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.515] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.515] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.515] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.515] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.515] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.515] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.521] |  :  .  |  :  .  |  :  .  Formals differ
[10:52:38.521] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:52:38.521] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:52:38.521] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:38.521] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:52:38.521] |  :  .  |  :  .  |  List of future strategies:
[10:52:38.521] |  :  .  |  :  .  |  1. multicore:
[10:52:38.521] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:38.521] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:38.521] |  :  .  |  :  .  |     - call: plan(strategy)
[10:52:38.522] |  :  .  |  :  .  |  List of 1
[10:52:38.522] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:38.522] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:38.522] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:38.522] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.522] |  :  .  |  :  .  |      ...)  
[10:52:38.522] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.522] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.522] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:38.522] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c824b96ab8> 
[10:52:38.522] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.522] |  :  .  |  :  .  |      ...)  
[10:52:38.522] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.522] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.525] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:38.525] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:38.525] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.525] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:38.525] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.525] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:52:38.525] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:38.525] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:38.526] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:38.526] |  readImmediateCondition() ...
[10:52:38.526] |    - path: ‘/tmp/Rtmp3zGbkB/.future/immediateConditions’
[10:52:38.526] |   - Number of RDS files: 0
[10:52:38.527] |  readImmediateCondition() ... DONE
[10:52:38.530] |  result() for MulticoreFuture ...
[10:52:38.530] |  result() for MulticoreFuture ... done
[10:52:38.530] result() for MulticoreFuture ... done
[10:52:38.531] result() for MulticoreFuture ...
[10:52:38.531] result() for MulticoreFuture ... done
[10:52:38.531] getGlobalsAndPackages() ...
[10:52:38.531] |  Searching for globals ...
[10:52:38.532] |  :  globals found: [1] ‘{’
[10:52:38.532] |  Searching for globals ... DONE
[10:52:38.533] |  Resolving globals: FALSE
[10:52:38.535] |  Search for packages associated with the globals ...
[10:52:38.535] |  :  Packages associated with globals: [1] ‘base’
[10:52:38.535] |  :  Packages: [1] ‘base’
[10:52:38.535] |  Search for packages associated with the globals ... DONE
[10:52:38.536] |  Packages after dropping 'base': [0] 
[10:52:38.536] |  globals: [0] 
[10:52:38.536] |  packages: [0] 
[10:52:38.536] getGlobalsAndPackages() ... done
[10:52:38.536] run() for Future (‘Future’) ...
[10:52:38.537] |  state: ‘created’
[10:52:38.537] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.537] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.537] |  Using MulticoreFutureBackend ...
[10:52:38.537] |  :  Launching futures ...
[10:52:38.537] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:38.538] |  :  .  |  getFutureData() ...
[10:52:38.538] |  :  .  |  :  getFutureCore() ...
[10:52:38.538] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:38.538] |  :  .  |  :  getFutureCore() ... done
[10:52:38.538] |  :  .  |  :  getFutureCapture() ...
[10:52:38.538] |  :  .  |  :  getFutureCapture() ... done
[10:52:38.538] |  :  .  |  :  getFutureContext() ...
[10:52:38.538] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.539] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:38.539] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.539] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:38.539] |  :  .  |  :  getFutureContext() ... done
[10:52:38.539] |  :  .  |  getFutureData() ... done
[10:52:38.539] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:38.540] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:38.542] |  :  .  |  MulticoreFuture started
[10:52:38.542] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:38.542] |  :  Launching futures ... done
[10:52:38.542] |  :  .  |  attachPackages() ...
[10:52:38.542] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:38.543] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:38.543] |  Using MulticoreFutureBackend ... done
[10:52:38.543] run() for Future (‘MulticoreFuture’) ... done
[10:52:38.543] |  :  .  |  attachPackages() ... DONE
[10:52:38.543] |  :  .  |  attachPackages() ...
[10:52:38.543] |  :  .  |  :  packages: [n=0] 
[10:52:38.543] |  :  .  |  attachPackages() ... DONE
MulticoreFuture:
Label: NULL
Expression:
{
    42
}
Lazy evaluation: FALSE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Globals: <none>
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:52:38.544] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.544] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:38.545] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.545] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:38.546] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:38.546] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:38.546] |  :  .  |  :  .  |  New stack:
[10:52:38.546] |  :  .  |  :  .  |  List of 1
[10:52:38.546] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.546] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.546] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.546] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.546] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.546] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.546] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.552] |  :  .  |  :  .  |  Old stack:
[10:52:38.554] readImmediateCondition() ...
[10:52:38.555]   - path: ‘/tmp/Rtmp3zGbkB/.future/immediateConditions’
[10:52:38.555]  - Number of RDS files: 0
[10:52:38.555] readImmediateCondition() ... DONE
Resolved: FALSE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: 312d9d716ed6c53550527b9727f32039
Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:38.555] result() for MulticoreFuture ...
[10:52:38.552] |  :  .  |  :  .  |  List of 1
[10:52:38.552] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:38.552] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:38.552] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:38.552] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.552] |  :  .  |  :  .  |      ...)  
[10:52:38.552] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.552] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.552] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:38.552] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c824b96ab8> 
[10:52:38.552] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.552] |  :  .  |  :  .  |      ...)  
[10:52:38.552] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.552] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.558] |  :  .  |  :  .  |  Not identical
[10:52:38.558] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:38.558] |  :  .  |  :  .  |  :  List of 2
[10:52:38.558] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.558] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.558] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.558] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.558] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.558] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.558] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:38.558] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:38.558] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:38.558] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.558] |  :  .  |  :  .  |  :      ...)  
[10:52:38.558] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.558] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.558] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:38.558] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c824b96ab8> 
[10:52:38.558] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.558] |  :  .  |  :  .  |  :      ...)  
[10:52:38.558] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.568] |  :  .  |  :  .  |  :  Formals differ
[10:52:38.568] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:38.568] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:52:38.568] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:38.568] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:52:38.569] |  :  .  |  :  .  List of future strategies:
[10:52:38.569] |  :  .  |  :  .  1. sequential:
[10:52:38.569] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:38.569] |  :  .  |  :  .     - tweaked: FALSE
[10:52:38.569] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.570] |  :  .  |  :  .  List of 1
[10:52:38.570] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.570] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.570] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.570] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.570] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.570] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.570] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.574] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:38.574] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:38.574] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.577] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:38.577] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.577] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:52:38.578] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:38.579] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:52:38.579] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:38.580] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:38.584] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:38.584] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:38.584] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:38.584] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:38.585] |  :  .  |  :  .  |  :  New stack:
[10:52:38.585] |  :  .  |  :  .  |  :  List of 1
[10:52:38.585] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:38.585] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:38.585] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:38.585] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.585] |  :  .  |  :  .  |  :      ...)  
[10:52:38.585] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.585] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.585] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:38.585] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c824b96ab8> 
[10:52:38.585] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.585] |  :  .  |  :  .  |  :      ...)  
[10:52:38.585] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.585] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.588] |  :  .  |  :  .  |  :  Old stack:
[10:52:38.588] |  :  .  |  :  .  |  :  List of 1
[10:52:38.588] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.588] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.588] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.588] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.588] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.588] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.588] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.590] |  :  .  |  :  .  |  :  Not identical
[10:52:38.591] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:52:38.591] |  :  .  |  :  .  |  :  .  List of 2
[10:52:38.591] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:38.591] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:38.591] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:38.591] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.591] |  :  .  |  :  .  |  :  .      ...)  
[10:52:38.591] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.591] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.591] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:38.591] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c824b96ab8> 
[10:52:38.591] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.591] |  :  .  |  :  .  |  :  .      ...)  
[10:52:38.591] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.591] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.591] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.591] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.591] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.591] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.591] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.595] |  :  .  |  :  .  |  :  .  Formals differ
[10:52:38.595] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:52:38.596] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:52:38.596] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:38.596] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:52:38.596] |  :  .  |  :  .  |  List of future strategies:
[10:52:38.596] |  :  .  |  :  .  |  1. multicore:
[10:52:38.596] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:38.596] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:38.596] |  :  .  |  :  .  |     - call: plan(strategy)
[10:52:38.596] |  :  .  |  :  .  |  List of 1
[10:52:38.596] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:38.596] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:38.596] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:38.596] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.596] |  :  .  |  :  .  |      ...)  
[10:52:38.596] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.596] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.596] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:38.596] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c824b96ab8> 
[10:52:38.596] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.596] |  :  .  |  :  .  |      ...)  
[10:52:38.596] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.596] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.599] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:38.599] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:38.600] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.600] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:38.600] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.600] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:52:38.600] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:38.600] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:38.600] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:38.601] |  readImmediateCondition() ...
[10:52:38.601] |    - path: ‘/tmp/Rtmp3zGbkB/.future/immediateConditions’
[10:52:38.601] |   - Number of RDS files: 0
[10:52:38.601] |  readImmediateCondition() ... DONE
[10:52:38.602] |  result() for MulticoreFuture ...
[10:52:38.602] |  result() for MulticoreFuture ... done
[10:52:38.602] result() for MulticoreFuture ... done
[10:52:38.602] result() for MulticoreFuture ...
[10:52:38.602] result() for MulticoreFuture ... done
[10:52:38.603] getGlobalsAndPackages() ...
[10:52:38.603] |  Searching for globals ...
[10:52:38.603] |  :  globals found: [0] 
[10:52:38.604] |  Searching for globals ... DONE
[10:52:38.604] |  globals: [0] <none>
[10:52:38.604] |  packages: [0] <none>
[10:52:38.604] getGlobalsAndPackages() ... done
[10:52:38.604] run() for Future (‘Future’) ...
[10:52:38.604] |  state: ‘created’
[10:52:38.604] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.605] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.605] |  Using MulticoreFutureBackend ...
[10:52:38.605] |  :  Launching futures ...
[10:52:38.605] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:38.605] |  :  .  |  getFutureData() ...
[10:52:38.605] |  :  .  |  :  getFutureCore() ...
[10:52:38.606] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:38.606] |  :  .  |  :  getFutureCore() ... done
[10:52:38.606] |  :  .  |  :  getFutureCapture() ...
[10:52:38.606] |  :  .  |  :  getFutureCapture() ... done
[10:52:38.606] |  :  .  |  :  getFutureContext() ...
[10:52:38.606] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.606] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:38.607] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.607] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:38.607] |  :  .  |  :  getFutureContext() ... done
[10:52:38.607] |  :  .  |  getFutureData() ... done
[10:52:38.607] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:38.607] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:38.609] |  :  .  |  MulticoreFuture started
[10:52:38.610] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:38.610] |  :  Launching futures ... done
[10:52:38.610] |  :  .  |  attachPackages() ...
[10:52:38.610] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:38.610] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:38.610] |  Using MulticoreFutureBackend ... done
[10:52:38.610] run() for Future (‘MulticoreFuture’) ... done
MulticoreFuture:
Label: ‘strategy = multicore’
Expression:
[1][10:52:38.610] |  :  .  |  attachPackages() ... DONE
 42
Lazy evaluation: FALSE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
[10:52:38.611] |  :  .  |  attachPackages() ...
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Globals: <none>
Packages: <none>
[10:52:38.611] |  :  .  |  :  packages: [n=0] 
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:52:38.611] |  :  .  |  attachPackages() ... DONE
[10:52:38.612] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.612] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:38.612] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.613] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:38.613] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:38.613] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:38.614] |  :  .  |  :  .  |  New stack:
[10:52:38.614] |  :  .  |  :  .  |  List of 1
[10:52:38.614] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.614] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.614] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.614] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.614] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.614] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.614] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.618] |  :  .  |  :  .  |  Old stack:
[10:52:38.621] readImmediateCondition() ...
[10:52:38.621]   - path: ‘/tmp/Rtmp3zGbkB/.future/immediateConditions’
[10:52:38.622]  - Number of RDS files: 0
[10:52:38.622] readImmediateCondition() ... DONE
Resolved: FALSE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: 312d9d716ed6c53550527b9727f32039
Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:38.622] result() for MulticoreFuture ...
[10:52:38.618] |  :  .  |  :  .  |  List of 1
[10:52:38.618] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:38.618] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:38.618] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:38.618] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.618] |  :  .  |  :  .  |      ...)  
[10:52:38.618] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.618] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.618] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:38.618] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c824b96ab8> 
[10:52:38.618] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.618] |  :  .  |  :  .  |      ...)  
[10:52:38.618] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.618] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.623] |  :  .  |  :  .  |  Not identical
[10:52:38.623] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:38.624] |  :  .  |  :  .  |  :  List of 2
[10:52:38.624] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.624] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.624] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.624] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.624] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.624] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.624] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:38.624] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:38.624] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:38.624] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.624] |  :  .  |  :  .  |  :      ...)  
[10:52:38.624] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.624] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.624] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:38.624] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c824b96ab8> 
[10:52:38.624] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.624] |  :  .  |  :  .  |  :      ...)  
[10:52:38.624] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.634] |  :  .  |  :  .  |  :  Formals differ
[10:52:38.634] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:38.635] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:52:38.635] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:38.635] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:52:38.635] |  :  .  |  :  .  List of future strategies:
[10:52:38.635] |  :  .  |  :  .  1. sequential:
[10:52:38.635] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:38.635] |  :  .  |  :  .     - tweaked: FALSE
[10:52:38.635] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.636] |  :  .  |  :  .  List of 1
[10:52:38.636] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.636] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.636] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.636] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.636] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.636] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.636] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.639] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:38.639] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:38.640] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.640] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:38.640] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.640] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:52:38.640] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:38.641] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:52:38.641] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:38.641] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:38.644] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:38.644] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:38.644] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:38.644] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:38.644] |  :  .  |  :  .  |  :  New stack:
[10:52:38.644] |  :  .  |  :  .  |  :  List of 1
[10:52:38.644] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:38.644] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:38.644] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:38.644] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.644] |  :  .  |  :  .  |  :      ...)  
[10:52:38.644] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.644] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.644] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:38.644] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c824b96ab8> 
[10:52:38.644] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.644] |  :  .  |  :  .  |  :      ...)  
[10:52:38.644] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.644] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.648] |  :  .  |  :  .  |  :  Old stack:
[10:52:38.648] |  :  .  |  :  .  |  :  List of 1
[10:52:38.648] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.648] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.648] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.648] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.648] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.648] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.648] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.650] |  :  .  |  :  .  |  :  Not identical
[10:52:38.650] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:52:38.650] |  :  .  |  :  .  |  :  .  List of 2
[10:52:38.650] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:38.650] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:38.650] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:38.650] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.650] |  :  .  |  :  .  |  :  .      ...)  
[10:52:38.650] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.650] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.650] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:38.650] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c824b96ab8> 
[10:52:38.650] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.650] |  :  .  |  :  .  |  :  .      ...)  
[10:52:38.650] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.650] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.650] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.650] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.650] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.650] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.650] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.656] |  :  .  |  :  .  |  :  .  Formals differ
[10:52:38.656] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:52:38.656] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:52:38.656] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:38.656] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:52:38.656] |  :  .  |  :  .  |  List of future strategies:
[10:52:38.656] |  :  .  |  :  .  |  1. multicore:
[10:52:38.656] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:38.656] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:38.656] |  :  .  |  :  .  |     - call: plan(strategy)
[10:52:38.657] |  :  .  |  :  .  |  List of 1
[10:52:38.657] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:38.657] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:38.657] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:38.657] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.657] |  :  .  |  :  .  |      ...)  
[10:52:38.657] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.657] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.657] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:38.657] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c824b96ab8> 
[10:52:38.657] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.657] |  :  .  |  :  .  |      ...)  
[10:52:38.657] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.657] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.660] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:38.660] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:38.660] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.660] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:38.660] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.660] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:52:38.660] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:38.661] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:38.661] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:38.661] |  readImmediateCondition() ...
[10:52:38.661] |    - path: ‘/tmp/Rtmp3zGbkB/.future/immediateConditions’
[10:52:38.661] |   - Number of RDS files: 0
[10:52:38.662] |  readImmediateCondition() ... DONE
[10:52:38.662] |  result() for MulticoreFuture ...
[10:52:38.662] |  result() for MulticoreFuture ... done
[10:52:38.662] result() for MulticoreFuture ... done
[10:52:38.662] result() for MulticoreFuture ...
[10:52:38.662] result() for MulticoreFuture ... done
[10:52:38.663] getGlobalsAndPackages() ...
[10:52:38.663] |  Searching for globals ...
[10:52:38.664] |  :  globals found: [1] ‘{’
[10:52:38.664] |  Searching for globals ... DONE
[10:52:38.664] |  Resolving globals: FALSE
[10:52:38.665] |  Search for packages associated with the globals ...
[10:52:38.665] |  :  Packages associated with globals: [1] ‘base’
[10:52:38.665] |  :  Packages: [1] ‘base’
[10:52:38.665] |  Search for packages associated with the globals ... DONE
[10:52:38.665] |  Packages after dropping 'base': [0] 
[10:52:38.666] |  globals: [0] 
[10:52:38.666] |  packages: [0] 
[10:52:38.666] getGlobalsAndPackages() ... done
[10:52:38.666] run() for Future (‘Future’) ...
[10:52:38.666] |  state: ‘created’
[10:52:38.667] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.667] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.667] |  Using MulticoreFutureBackend ...
[10:52:38.667] |  :  Launching futures ...
[10:52:38.667] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:38.667] |  :  .  |  getFutureData() ...
[10:52:38.667] |  :  .  |  :  getFutureCore() ...
[10:52:38.667] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:38.668] |  :  .  |  :  getFutureCore() ... done
[10:52:38.668] |  :  .  |  :  getFutureCapture() ...
[10:52:38.668] |  :  .  |  :  getFutureCapture() ... done
[10:52:38.668] |  :  .  |  :  getFutureContext() ...
[10:52:38.668] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.668] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:38.668] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.668] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:38.669] |  :  .  |  :  getFutureContext() ... done
[10:52:38.669] |  :  .  |  getFutureData() ... done
[10:52:38.669] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:38.669] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:38.671] |  :  .  |  MulticoreFuture started
[10:52:38.671] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:38.671] |  :  Launching futures ... done
[10:52:38.671] |  :  .  |  attachPackages() ...
[10:52:38.672] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:38.672] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:38.672] |  Using MulticoreFutureBackend ... done
[10:52:38.672] run() for Future (‘MulticoreFuture’) ... done
[10:52:38.672] |  :  .  |  attachPackages() ... DONE
[10:52:38.672] |  :  .  |  attachPackages() ...
[10:52:38.672] |  :  .  |  :  packages: [n=0] 
[10:52:38.673] |  :  .  |  attachPackages() ... DONE
MulticoreFuture:
Label: ‘strategy = multicore’
Expression:
{
    42
}
Lazy evaluation: FALSE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Globals: <none>
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:52:38.673] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.674] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:38.674] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.674] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:38.675] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:38.675] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:38.675] |  :  .  |  :  .  |  New stack:
[10:52:38.675] |  :  .  |  :  .  |  List of 1
[10:52:38.675] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.675] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.675] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.675] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.675] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.675] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.675] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.683] |  :  .  |  :  .  |  Old stack:
[10:52:38.683] readImmediateCondition() ...
[10:52:38.684]   - path: ‘/tmp/Rtmp3zGbkB/.future/immediateConditions’
[10:52:38.684]  - Number of RDS files: 0
[10:52:38.684] readImmediateCondition() ... DONE
Resolved: FALSE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: 312d9d716ed6c53550527b9727f32039
Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:38.684] result() for MulticoreFuture ...
[10:52:38.683] |  :  .  |  :  .  |  List of 1
[10:52:38.683] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:38.683] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:38.683] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:38.683] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.683] |  :  .  |  :  .  |      ...)  
[10:52:38.683] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.683] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.683] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:38.683] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c824b96ab8> 
[10:52:38.683] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.683] |  :  .  |  :  .  |      ...)  
[10:52:38.683] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.683] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.688] |  :  .  |  :  .  |  Not identical
[10:52:38.688] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:38.688] |  :  .  |  :  .  |  :  List of 2
[10:52:38.688] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.688] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.688] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.688] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.688] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.688] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.688] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:38.688] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:38.688] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:38.688] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.688] |  :  .  |  :  .  |  :      ...)  
[10:52:38.688] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.688] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.688] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:38.688] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c824b96ab8> 
[10:52:38.688] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.688] |  :  .  |  :  .  |  :      ...)  
[10:52:38.688] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.695] |  :  .  |  :  .  |  :  Formals differ
[10:52:38.695] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:38.696] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:52:38.696] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:38.696] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:52:38.696] |  :  .  |  :  .  List of future strategies:
[10:52:38.696] |  :  .  |  :  .  1. sequential:
[10:52:38.696] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:38.696] |  :  .  |  :  .     - tweaked: FALSE
[10:52:38.696] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.697] |  :  .  |  :  .  List of 1
[10:52:38.697] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.697] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.697] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.697] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.697] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.697] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.697] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.700] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:38.700] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:38.700] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.701] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:38.701] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.701] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:52:38.701] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:38.702] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:52:38.702] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:38.702] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:38.705] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:38.705] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:38.705] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:38.705] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:38.705] |  :  .  |  :  .  |  :  New stack:
[10:52:38.705] |  :  .  |  :  .  |  :  List of 1
[10:52:38.705] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:38.705] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:38.705] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:38.705] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.705] |  :  .  |  :  .  |  :      ...)  
[10:52:38.705] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.705] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.705] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:38.705] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c824b96ab8> 
[10:52:38.705] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.705] |  :  .  |  :  .  |  :      ...)  
[10:52:38.705] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.705] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.709] |  :  .  |  :  .  |  :  Old stack:
[10:52:38.710] |  :  .  |  :  .  |  :  List of 1
[10:52:38.710] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.710] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.710] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.710] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.710] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.710] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.710] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.713] |  :  .  |  :  .  |  :  Not identical
[10:52:38.713] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:52:38.713] |  :  .  |  :  .  |  :  .  List of 2
[10:52:38.713] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:38.713] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:38.713] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:38.713] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.713] |  :  .  |  :  .  |  :  .      ...)  
[10:52:38.713] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.713] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.713] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:38.713] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c824b96ab8> 
[10:52:38.713] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.713] |  :  .  |  :  .  |  :  .      ...)  
[10:52:38.713] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.713] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.713] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:38.713] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:38.713] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.713] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:38.713] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:38.717] |  :  .  |  :  .  |  :  .  Formals differ
[10:52:38.717] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:52:38.717] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:52:38.717] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:38.718] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:52:38.718] |  :  .  |  :  .  |  List of future strategies:
[10:52:38.718] |  :  .  |  :  .  |  1. multicore:
[10:52:38.718] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:38.718] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:38.718] |  :  .  |  :  .  |     - call: plan(strategy)
[10:52:38.718] |  :  .  |  :  .  |  List of 1
[10:52:38.718] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:38.718] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:38.718] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:38.718] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.718] |  :  .  |  :  .  |      ...)  
[10:52:38.718] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.718] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.718] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:38.718] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c824b96ab8> 
[10:52:38.718] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.718] |  :  .  |  :  .  |      ...)  
[10:52:38.718] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.718] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.721] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:38.721] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:38.721] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.721] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:38.721] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.722] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:52:38.722] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:38.722] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:38.722] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:38.722] |  readImmediateCondition() ...
[10:52:38.723] |    - path: ‘/tmp/Rtmp3zGbkB/.future/immediateConditions’
[10:52:38.723] |   - Number of RDS files: 0
[10:52:38.723] |  readImmediateCondition() ... DONE
[10:52:38.723] |  result() for MulticoreFuture ...
[10:52:38.723] |  result() for MulticoreFuture ... done
[10:52:38.724] result() for MulticoreFuture ... done
[10:52:38.724] result() for MulticoreFuture ...
[10:52:38.724] result() for MulticoreFuture ... done
- plan('multicore') ... DONE
- plan('multisession') ...
[10:52:38.724] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.725] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:52:38.726] |  :  all.equal() for FutureStrategyList ...
[10:52:38.727] |  :  .  New stack:
[10:52:38.727] |  :  .  List of 1
[10:52:38.727] |  :  .   $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:52:38.727] |  :  .      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.727] |  :  .    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:52:38.727] |  :  .    ..- attr(*, "init")= logi TRUE
[10:52:38.727] |  :  .    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:52:38.727] |  :  .    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:38.727] |  :  .    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:38.727] |  :  .    ..- attr(*, "untweakable")= chr "persistent"
[10:52:38.727] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:38.727] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.731] |  :  .  Old stack:
[10:52:38.731] |  :  .  List of 1
[10:52:38.731] |  :  .   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:38.731] |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:38.731] |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:38.731] |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.731] |  :  .      ...)  
[10:52:38.731] |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.731] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.731] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:38.731] |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c824b96ab8> 
[10:52:38.731] |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.731] |  :  .      ...)  
[10:52:38.731] |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.731] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.735] |  :  .  Not identical
[10:52:38.735] |  :  .  all.equal() for future ...
[10:52:38.735] |  :  .  |  List of 2
[10:52:38.735] |  :  .  |   $ target :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:52:38.735] |  :  .  |      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.735] |  :  .  |    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:52:38.735] |  :  .  |    ..- attr(*, "init")= logi TRUE
[10:52:38.735] |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:52:38.735] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:38.735] |  :  .  |    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:38.735] |  :  .  |    ..- attr(*, "untweakable")= chr "persistent"
[10:52:38.735] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:38.735] |  :  .  |   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:38.735] |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:38.735] |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:38.735] |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.735] |  :  .  |      ...)  
[10:52:38.735] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.735] |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.735] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:38.735] |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55c824b96ab8> 
[10:52:38.735] |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:38.735] |  :  .  |      ...)  
[10:52:38.735] |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:38.742] |  :  .  |  Formals differ
[10:52:38.742] |  :  .  all.equal() for future ... done
[10:52:38.742] |  :  .  Future strategies differ at level 1
[10:52:38.743] |  :  all.equal() for FutureStrategyList ... done
[10:52:38.743] |  :  plan(): Setting new future strategy stack:
[10:52:38.743] |  :  List of future strategies:
[10:52:38.743] |  :  1. multisession:
[10:52:38.743] |  :     - args: function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:38.743] |  :     - tweaked: FALSE
[10:52:38.743] |  :     - call: plan(strategy)
[10:52:38.743] |  :  List of 1
[10:52:38.743] |  :   $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:52:38.743] |  :      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.743] |  :    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:52:38.743] |  :    ..- attr(*, "init")= logi TRUE
[10:52:38.743] |  :    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:52:38.743] |  :    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:38.743] |  :    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:38.743] |  :    ..- attr(*, "untweakable")= chr "persistent"
[10:52:38.743] |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:38.743] |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:38.747] |  :  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:52:38.747] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:38.747] |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:38.747] |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:38.748] |  :  .  Legacy shutdown of cluster workers ...
[10:52:38.748] |  :  .  |  Stopping existing cluster ...
[10:52:38.748] |  :  .  |  :  No pre-existing cluster. Skipping
[10:52:38.749] |  :  .  |  Stopping existing cluster ... done
[10:52:38.749] |  :  .  Legacy shutdown of cluster workers ... done
[10:52:38.749] |  :  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:52:38.749] |  :  plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ...
[10:52:38.749] |  :  .  function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:52:38.749] |  :  .      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:38.749] |  :  .   - attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:52:38.749] |  :  .   - attr(*, "init")= logi TRUE
[10:52:38.749] |  :  .   - attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:52:38.749] |  :  .    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:38.749] |  :  .   - attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:38.749] |  :  .   - attr(*, "untweakable")= chr "persistent"
[10:52:38.749] |  :  .   - attr(*, "call")= language plan(strategy)
[10:52:38.753] |  :  .  init: TRUE
[10:52:38.753] |  :  .  makeFutureBackend(<multisession>) ...
[10:52:38.753] |  :  .  |  Backend function: <‘NULL’>
[10:52:38.755] |  :  .  |  ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ...
[10:52:38.755] |  :  .  |  :  workers: 2
[10:52:38.755] |  :  .  |  :  getCluster() ...
[10:52:38.755] |  :  .  |  :  getCluster() ... done
[10:52:38.755] |  :  .  |  :  Stopping existing cluster ...
[10:52:38.755] |  :  .  |  :  .  No pre-existing cluster. Skipping
[10:52:38.755] |  :  .  |  :  Stopping existing cluster ... done
[10:52:38.756] |  :  .  |  :  Starting new cluster ...
[10:52:38.756] |  :  .  |  :  .  makeCluster(workers, ...) ...
[10:52:38.756] |  :  .  |  :  .  |  Arguments:
[10:52:38.756] |  :  .  |  :  .  |  List of 2
[10:52:38.756] |  :  .  |  :  .  |   $             : int 2
[10:52:38.756] |  :  .  |  :  .  |   $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[10:52:39.251] |  :  .  |  :  .  |  Generated cluster UUID
[10:52:39.251] |  :  .  |  :  .  |  Cluster UUID: ‘b764c133d8854d37c81ec22973e93637’
[10:52:39.252] |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:39.254] |  :  .  |  :  .  makeCluster(workers, ...) ... done
[10:52:39.254] |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:39.256] |  :  .  |  :  Starting new cluster ... done
[10:52:39.256] |  :  .  |  :  Number of workers: 2
[10:52:39.256] |  :  .  |  :  Workers UUID: ‘b764c133d8854d37c81ec22973e93637’
[10:52:39.256] |  :  .  |  ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ... done
[10:52:39.256] |  :  .  |  Backend: <‘MultisessionFutureBackend’, ‘ClusterFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:39.256] |  :  .  makeFutureBackend(<multisession>) ... done
[10:52:39.256] |  :  plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ... done
[10:52:39.257] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:39.257] |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:52:39.257] |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:39.257] |  :  plan(): nbrOfWorkers() = 2
[10:52:39.257] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:52:39.257] plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:39.257] getGlobalsAndPackages() ...
[10:52:39.257] |  Searching for globals ...
[10:52:39.258] |  :  globals found: [0] 
[10:52:39.258] |  Searching for globals ... DONE
[10:52:39.258] |  globals: [0] <none>
[10:52:39.258] |  packages: [0] <none>
[10:52:39.258] getGlobalsAndPackages() ... done
[10:52:39.258] run() for Future (‘Future’) ...
[10:52:39.259] |  state: ‘created’
[10:52:39.259] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:39.259] |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:39.259] |  Using MultisessionFutureBackend ...
[10:52:39.259] |  :  Launching futures ...
[10:52:39.259] |  :  .  launchFuture() for ClusterFutureBackend ...
[10:52:39.260] |  :  .  |  Workers: [n=2]
[10:52:39.260] |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:39.261] |  :  .  |  FutureRegistry: ‘workers-b764c133d8854d37c81ec22973e93637’
[10:52:39.261] |  :  .  |  requestWorker() ...
[10:52:39.261] |  :  .  |  :  requestNode() ...
[10:52:39.261] |  :  .  |  :  .  Number of workers: 2
[10:52:39.261] |  :  .  |  :  .  Polling for a free worker ...
[10:52:39.262] |  :  .  |  :  .  |  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'list', earlySignal = 0) ...
[10:52:39.262] |  :  .  |  :  .  |  :  Created empty registry ‘workers-b764c133d8854d37c81ec22973e93637’
[10:52:39.262] |  :  .  |  :  .  |  :  Listing all futures
[10:52:39.262] |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:52:39.262] |  :  .  |  :  .  |  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'list', earlySignal = 0) ... done
[10:52:39.262] |  :  .  |  :  .  |  Total time: 0
[10:52:39.262] |  :  .  |  :  .  Polling for a free worker ... done
[10:52:39.262] |  :  .  |  :  .  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'list', earlySignal = 0) ...
[10:52:39.262] |  :  .  |  :  .  |  Listing all futures
[10:52:39.262] |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:39.262] |  :  .  |  :  .  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'list', earlySignal = 0) ... done
[10:52:39.263] |  :  .  |  :  .  Index of first available worker: 1
[10:52:39.263] |  :  .  |  :  .  Validate that the worker is functional ...
[10:52:39.325] |  :  .  |  :  .  |  Worker is functional
[10:52:39.325] |  :  .  |  :  .  requestNode() ... done
[10:52:39.326] |  :  .  |  :  .  cluster node index: 1
[10:52:39.326] |  :  .  |  :  requestWorker() ... done
[10:52:39.326] |  :  .  |  :  eraseGlobalEnvironment() ...
[10:52:39.327] |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:52:39.327] |  :  .  |  :  launchFuture() ...
[10:52:39.327] |  :  .  |  :  .  cluster node index: 1
[10:52:39.327] |  :  .  |  :  .  getFutureData() ...
[10:52:39.327] |  :  .  |  :  .  |  getFutureCore() ...
[10:52:39.328] |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:52:39.328] |  :  .  |  :  .  |  getFutureCore() ... done
[10:52:39.328] |  :  .  |  :  .  |  getFutureCapture() ...
[10:52:39.328] |  :  .  |  :  .  |  getFutureCapture() ... done
[10:52:39.328] |  :  .  |  :  .  |  getFutureContext() ...
[10:52:39.328] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:39.328] |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:52:39.329] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:39.329] |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:52:39.329] |  :  .  |  :  .  |  getFutureContext() ... done
[10:52:39.329] |  :  .  |  :  .  getFutureData() ... done
[10:52:39.330] |  :  .  |  :  .  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'add', earlySignal = 0) ...
[10:52:39.330] |  :  .  |  :  .  |  Appended future to position #1
[10:52:39.330] |  :  .  |  :  .  |  Number of registered futures: 1
[10:52:39.330] |  :  .  |  :  .  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'add', earlySignal = 0) ... done
[10:52:39.330] |  :  .  |  :  launchFuture() ... done
[10:52:39.330] |  :  .  |  :  MultisessionFuture started
[10:52:39.331] |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:52:39.331] |  :  .  Launching futures ... done
[10:52:39.331] |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:39.331] |  :  Using MultisessionFutureBackend ... done
[10:52:39.331] |  run() for Future (‘MultisessionFuture’) ... done
MultisessionFuture:
Label: NULL
Expression:
[1] 42
Lazy evaluation: FALSE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Globals: <none>
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:52:39.332] |  isFutureResolved() ...
[10:52:39.333] |  :  assertValidConnection() ...
[10:52:39.333] |  :  .  cluster node index: 1
[10:52:39.333] |  :  assertValidConnection() ... done
[10:52:39.344] |  isFutureResolved() ... done
Resolved: FALSE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: 312d9d716ed6c53550527b9727f32039
Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:39.344] |  result() for ClusterFuture ...
[10:52:39.344] |  :  assertValidConnection() ...
[10:52:39.344] |  :  .  cluster node index: 1
[10:52:39.345] |  :  assertValidConnection() ... done
[10:52:39.345] |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:52:39.345] |  :  .  cluster node index: 1
[10:52:39.419] |  :  .  [1] TRUE
[10:52:39.420] |  :  .  received data:
[10:52:39.420] |  :  .  List of 5
[10:52:39.420] |  :  .   $ type   : chr "VALUE"
[10:52:39.420] |  :  .   $ value  :List of 13
[10:52:39.420] |  :  .    ..$ value            : num 42
[10:52:39.420] |  :  .    ..$ visible          : logi TRUE
[10:52:39.420] |  :  .    ..$ stdout           : chr ""
[10:52:39.420] |  :  .    ..$ conditions       : list()
[10:52:39.420] |  :  .    ..$ rng              : logi FALSE
[10:52:39.420] |  :  .    ..$ misuseGlobalEnv  : NULL
[10:52:39.420] |  :  .    ..$ misuseConnections:List of 3
[10:52:39.420] |  :  .    .. ..$ added   : NULL
[10:52:39.420] |  :  .    .. ..$ removed : NULL
[10:52:39.420] |  :  .    .. ..$ replaced: NULL
[10:52:39.420] |  :  .    ..$ misuseDevices    : NULL
[10:52:39.420] |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:39"
[10:52:39.420] |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:39"
[10:52:39.420] |  :  .    ..$ session_uuid     : chr "6d4ddb46ee7ea80bbc03cd497184242a"
[10:52:39.420] |  :  .    .. ..- attr(*, "source")=List of 5
[10:52:39.420] |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:39.420] |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:39.420] |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:39.420] |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:39.420] |  :  .    .. .. ..$ pid   : int 68932
[10:52:39.420] |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:39"
[10:52:39.420] |  :  .    .. .. ..$ random: int 2147483647
[10:52:39.420] |  :  .    ..$ r_info           :List of 4
[10:52:39.420] |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:39.420] |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:52:39.420] |  :  .    .. ..$ os           : chr "unix"
[10:52:39.420] |  :  .    .. ..$ os_name      : chr "Linux"
[10:52:39.420] |  :  .    .. ..$ captures_utf8: logi TRUE
[10:52:39.420] |  :  .    ..$ version          : chr "1.8"
[10:52:39.420] |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:52:39.420] |  :  .   $ success: logi TRUE
[10:52:39.420] |  :  .   $ time   : 'proc_time' Named num [1:5] 0.044 0.006 0.049 0 0
[10:52:39.420] |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:39.420] |  :  .   $ tag    : NULL
[10:52:39.433] |  :  .  Received FutureResult
[10:52:39.433] |  :  .  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'remove', earlySignal = 0) ...
[10:52:39.434] |  :  .  |  Removed future from position #1
[10:52:39.434] |  :  .  |  Number of registered futures: 0
[10:52:39.434] |  :  .  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'remove', earlySignal = 0) ... done
[10:52:39.434] |  :  .  Erased future from future backend
[10:52:39.434] |  :  .  result() for ClusterFuture ...
[10:52:39.434] |  :  .  |  result already collected: FutureResult
[10:52:39.434] |  :  .  result() for ClusterFuture ... done
[10:52:39.434] |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:39.435] |  result() for ClusterFuture ... done
[10:52:39.435] |  result() for ClusterFuture ...
[10:52:39.435] |  :  result already collected: FutureResult
[10:52:39.435] |  result() for ClusterFuture ... done
[10:52:39.435] |  getGlobalsAndPackages() ...
[10:52:39.435] |  :  Searching for globals ...
[10:52:39.436] |  :  .  globals found: [1] ‘{’
[10:52:39.436] |  :  Searching for globals ... DONE
[10:52:39.437] |  :  Resolving globals: FALSE
[10:52:39.437] |  :  Search for packages associated with the globals ...
[10:52:39.437] |  :  .  Packages associated with globals: [1] ‘base’
[10:52:39.437] |  :  .  Packages: [1] ‘base’
[10:52:39.437] |  :  Search for packages associated with the globals ... DONE
[10:52:39.438] |  :  Packages after dropping 'base': [0] 
[10:52:39.438] |  :  globals: [0] 
[10:52:39.438] |  :  packages: [0] 
[10:52:39.438] |  getGlobalsAndPackages() ... done
[10:52:39.438] |  run() for Future (‘Future’) ...
[10:52:39.438] |  :  state: ‘created’
[10:52:39.438] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:39.439] |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:39.439] |  :  Using MultisessionFutureBackend ...
[10:52:39.439] |  :  .  Launching futures ...
[10:52:39.439] |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:52:39.439] |  :  .  |  :  Workers: [n=2]
[10:52:39.439] |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:39.441] |  :  .  |  :  FutureRegistry: ‘workers-b764c133d8854d37c81ec22973e93637’
[10:52:39.441] |  :  .  |  :  requestWorker() ...
[10:52:39.442] |  :  .  |  :  .  requestNode() ...
[10:52:39.442] |  :  .  |  :  .  |  Number of workers: 2
[10:52:39.442] |  :  .  |  :  .  |  Polling for a free worker ...
[10:52:39.442] |  :  .  |  :  .  |  :  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'list', earlySignal = 0) ...
[10:52:39.442] |  :  .  |  :  .  |  :  .  Listing all futures
[10:52:39.442] |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:52:39.442] |  :  .  |  :  .  |  :  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'list', earlySignal = 0) ... done
[10:52:39.442] |  :  .  |  :  .  |  :  Total time: 0
[10:52:39.443] |  :  .  |  :  .  |  Polling for a free worker ... done
[10:52:39.443] |  :  .  |  :  .  |  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'list', earlySignal = 0) ...
[10:52:39.443] |  :  .  |  :  .  |  :  Listing all futures
[10:52:39.443] |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:52:39.443] |  :  .  |  :  .  |  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'list', earlySignal = 0) ... done
[10:52:39.443] |  :  .  |  :  .  |  Index of first available worker: 1
[10:52:39.443] |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:52:39.483] |  :  .  |  :  .  |  :  Worker is functional
[10:52:39.483] |  :  .  |  :  .  |  requestNode() ... done
[10:52:39.483] |  :  .  |  :  .  |  cluster node index: 1
[10:52:39.483] |  :  .  |  :  .  requestWorker() ... done
[10:52:39.483] |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:52:39.484] |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:52:39.484] |  :  .  |  :  .  launchFuture() ...
[10:52:39.484] |  :  .  |  :  .  |  cluster node index: 1
[10:52:39.484] |  :  .  |  :  .  |  getFutureData() ...
[10:52:39.484] |  :  .  |  :  .  |  :  getFutureCore() ...
[10:52:39.484] |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:39.485] |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:52:39.485] |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:52:39.485] |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:52:39.485] |  :  .  |  :  .  |  :  getFutureContext() ...
[10:52:39.485] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:39.485] |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:39.485] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:39.486] |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:39.486] |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:52:39.486] |  :  .  |  :  .  |  getFutureData() ... done
[10:52:39.486] |  :  .  |  :  .  |  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'add', earlySignal = 0) ...
[10:52:39.486] |  :  .  |  :  .  |  :  Appended future to position #1
[10:52:39.486] |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:52:39.487] |  :  .  |  :  .  |  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'add', earlySignal = 0) ... done
[10:52:39.487] |  :  .  |  :  .  launchFuture() ... done
[10:52:39.487] |  :  .  |  :  .  MultisessionFuture started
[10:52:39.487] |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:52:39.487] |  :  .  |  Launching futures ... done
[10:52:39.487] |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:39.487] |  :  .  Using MultisessionFutureBackend ... done
[10:52:39.487] |  :  run() for Future (‘MultisessionFuture’) ... done
MultisessionFuture:
Label: NULL
Expression:
{
    42
}
Lazy evaluation: FALSE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Globals: <none>
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:52:39.488] |  :  isFutureResolved() ...
[10:52:39.489] |  :  .  assertValidConnection() ...
[10:52:39.489] |  :  .  |  cluster node index: 1
[10:52:39.489] |  :  .  assertValidConnection() ... done
[10:52:39.500] |  :  isFutureResolved() ... done
Resolved: FALSE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: 312d9d716ed6c53550527b9727f32039
Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:39.500] |  :  result() for ClusterFuture ...
[10:52:39.500] |  :  .  assertValidConnection() ...
[10:52:39.500] |  :  .  |  cluster node index: 1
[10:52:39.501] |  :  .  assertValidConnection() ... done
[10:52:39.501] |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:52:39.501] |  :  .  |  cluster node index: 1
[10:52:39.530] |  :  .  |  [1] TRUE
[10:52:39.531] |  :  .  |  received data:
[10:52:39.531] |  :  .  |  List of 5
[10:52:39.531] |  :  .  |   $ type   : chr "VALUE"
[10:52:39.531] |  :  .  |   $ value  :List of 13
[10:52:39.531] |  :  .  |    ..$ value            : num 42
[10:52:39.531] |  :  .  |    ..$ visible          : logi TRUE
[10:52:39.531] |  :  .  |    ..$ stdout           : chr ""
[10:52:39.531] |  :  .  |    ..$ conditions       : list()
[10:52:39.531] |  :  .  |    ..$ rng              : logi FALSE
[10:52:39.531] |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:52:39.531] |  :  .  |    ..$ misuseConnections:List of 3
[10:52:39.531] |  :  .  |    .. ..$ added   : NULL
[10:52:39.531] |  :  .  |    .. ..$ removed : NULL
[10:52:39.531] |  :  .  |    .. ..$ replaced: NULL
[10:52:39.531] |  :  .  |    ..$ misuseDevices    : NULL
[10:52:39.531] |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:39"
[10:52:39.531] |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:39"
[10:52:39.531] |  :  .  |    ..$ session_uuid     : chr "6d4ddb46ee7ea80bbc03cd497184242a"
[10:52:39.531] |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:52:39.531] |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:39.531] |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:39.531] |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:39.531] |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:39.531] |  :  .  |    .. .. ..$ pid   : int 68932
[10:52:39.531] |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:39"
[10:52:39.531] |  :  .  |    .. .. ..$ random: int 2147483647
[10:52:39.531] |  :  .  |    ..$ r_info           :List of 4
[10:52:39.531] |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:39.531] |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:52:39.531] |  :  .  |    .. ..$ os           : chr "unix"
[10:52:39.531] |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:52:39.531] |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:52:39.531] |  :  .  |    ..$ version          : chr "1.8"
[10:52:39.531] |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:52:39.531] |  :  .  |   $ success: logi TRUE
[10:52:39.531] |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.002 0 0.003 0 0
[10:52:39.531] |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:39.531] |  :  .  |   $ tag    : NULL
[10:52:39.544] |  :  .  |  Received FutureResult
[10:52:39.544] |  :  .  |  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'remove', earlySignal = 0) ...
[10:52:39.544] |  :  .  |  :  Removed future from position #1
[10:52:39.544] |  :  .  |  :  Number of registered futures: 0
[10:52:39.545] |  :  .  |  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'remove', earlySignal = 0) ... done
[10:52:39.545] |  :  .  |  Erased future from future backend
[10:52:39.545] |  :  .  |  result() for ClusterFuture ...
[10:52:39.545] |  :  .  |  :  result already collected: FutureResult
[10:52:39.545] |  :  .  |  result() for ClusterFuture ... done
[10:52:39.545] |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:39.545] |  :  result() for ClusterFuture ... done
[10:52:39.545] |  :  result() for ClusterFuture ...
[10:52:39.545] |  :  .  result already collected: FutureResult
[10:52:39.546] |  :  result() for ClusterFuture ... done
[10:52:39.546] |  :  getGlobalsAndPackages() ...
[10:52:39.546] |  :  .  Searching for globals ...
[10:52:39.546] |  :  .  |  globals found: [0] 
[10:52:39.547] |  :  .  Searching for globals ... DONE
[10:52:39.547] |  :  .  globals: [0] <none>
[10:52:39.547] |  :  .  packages: [0] <none>
[10:52:39.547] |  :  getGlobalsAndPackages() ... done
[10:52:39.547] |  :  run() for Future (‘Future’) ...
[10:52:39.547] |  :  .  state: ‘created’
[10:52:39.547] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:39.548] |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:39.548] |  :  .  Using MultisessionFutureBackend ...
[10:52:39.548] |  :  .  |  Launching futures ...
[10:52:39.548] |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:52:39.548] |  :  .  |  :  .  Workers: [n=2]
[10:52:39.548] |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:39.550] |  :  .  |  :  .  FutureRegistry: ‘workers-b764c133d8854d37c81ec22973e93637’
[10:52:39.550] |  :  .  |  :  .  requestWorker() ...
[10:52:39.550] |  :  .  |  :  .  |  requestNode() ...
[10:52:39.551] |  :  .  |  :  .  |  :  Number of workers: 2
[10:52:39.551] |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:52:39.551] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'list', earlySignal = 0) ...
[10:52:39.551] |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:52:39.551] |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:39.551] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'list', earlySignal = 0) ... done
[10:52:39.551] |  :  .  |  :  .  |  :  .  Total time: 0
[10:52:39.551] |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:52:39.552] |  :  .  |  :  .  |  :  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'list', earlySignal = 0) ...
[10:52:39.554] |  :  .  |  :  .  |  :  .  Listing all futures
[10:52:39.554] |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:52:39.554] |  :  .  |  :  .  |  :  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'list', earlySignal = 0) ... done
[10:52:39.554] |  :  .  |  :  .  |  :  Index of first available worker: 1
[10:52:39.554] |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:52:39.632] |  :  .  |  :  .  |  :  .  Worker is functional
[10:52:39.632] |  :  .  |  :  .  |  :  requestNode() ... done
[10:52:39.633] |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:39.633] |  :  .  |  :  .  |  requestWorker() ... done
[10:52:39.633] |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:52:39.633] |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:52:39.633] |  :  .  |  :  .  |  launchFuture() ...
[10:52:39.633] |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:39.634] |  :  .  |  :  .  |  :  getFutureData() ...
[10:52:39.634] |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:52:39.634] |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:52:39.634] |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:52:39.634] |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:52:39.634] |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:52:39.634] |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:52:39.634] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:39.634] |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:52:39.634] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:39.635] |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:52:39.635] |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:52:39.635] |  :  .  |  :  .  |  :  getFutureData() ... done
[10:52:39.635] |  :  .  |  :  .  |  :  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'add', earlySignal = 0) ...
[10:52:39.635] |  :  .  |  :  .  |  :  .  Appended future to position #1
[10:52:39.635] |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:52:39.635] |  :  .  |  :  .  |  :  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'add', earlySignal = 0) ... done
[10:52:39.635] |  :  .  |  :  .  |  launchFuture() ... done
[10:52:39.636] |  :  .  |  :  .  |  MultisessionFuture started
[10:52:39.636] |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:52:39.636] |  :  .  |  :  Launching futures ... done
[10:52:39.636] |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:39.636] |  :  .  |  Using MultisessionFutureBackend ... done
[10:52:39.636] |  :  .  run() for Future (‘MultisessionFuture’) ... done
MultisessionFuture:
Label: ‘strategy = multisession’
Expression:
[1] 42
Lazy evaluation: FALSE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Globals: <none>
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:52:39.636] |  :  .  isFutureResolved() ...
[10:52:39.637] |  :  .  |  assertValidConnection() ...
[10:52:39.637] |  :  .  |  :  cluster node index: 1
[10:52:39.637] |  :  .  |  assertValidConnection() ... done
[10:52:39.648] |  :  .  isFutureResolved() ... done
Resolved: FALSE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: 312d9d716ed6c53550527b9727f32039
Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:39.648] |  :  .  result() for ClusterFuture ...
[10:52:39.648] |  :  .  |  assertValidConnection() ...
[10:52:39.648] |  :  .  |  :  cluster node index: 1
[10:52:39.648] |  :  .  |  assertValidConnection() ... done
[10:52:39.648] |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:52:39.649] |  :  .  |  :  cluster node index: 1
[10:52:39.679] |  :  .  |  :  [1] TRUE
[10:52:39.679] |  :  .  |  :  received data:
[10:52:39.680] |  :  .  |  :  List of 5
[10:52:39.680] |  :  .  |  :   $ type   : chr "VALUE"
[10:52:39.680] |  :  .  |  :   $ value  :List of 13
[10:52:39.680] |  :  .  |  :    ..$ value            : num 42
[10:52:39.680] |  :  .  |  :    ..$ visible          : logi TRUE
[10:52:39.680] |  :  .  |  :    ..$ stdout           : chr ""
[10:52:39.680] |  :  .  |  :    ..$ conditions       : list()
[10:52:39.680] |  :  .  |  :    ..$ rng              : logi FALSE
[10:52:39.680] |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:52:39.680] |  :  .  |  :    ..$ misuseConnections:List of 3
[10:52:39.680] |  :  .  |  :    .. ..$ added   : NULL
[10:52:39.680] |  :  .  |  :    .. ..$ removed : NULL
[10:52:39.680] |  :  .  |  :    .. ..$ replaced: NULL
[10:52:39.680] |  :  .  |  :    ..$ misuseDevices    : NULL
[10:52:39.680] |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:39"
[10:52:39.680] |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:39"
[10:52:39.680] |  :  .  |  :    ..$ session_uuid     : chr "6d4ddb46ee7ea80bbc03cd497184242a"
[10:52:39.680] |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:52:39.680] |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:39.680] |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:39.680] |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:39.680] |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:39.680] |  :  .  |  :    .. .. ..$ pid   : int 68932
[10:52:39.680] |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:39"
[10:52:39.680] |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:52:39.680] |  :  .  |  :    ..$ r_info           :List of 4
[10:52:39.680] |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:39.680] |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:52:39.680] |  :  .  |  :    .. ..$ os           : chr "unix"
[10:52:39.680] |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:52:39.680] |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:52:39.680] |  :  .  |  :    ..$ version          : chr "1.8"
[10:52:39.680] |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:52:39.680] |  :  .  |  :   $ success: logi TRUE
[10:52:39.680] |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:52:39.680] |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:39.680] |  :  .  |  :   $ tag    : NULL
[10:52:39.690] |  :  .  |  :  Received FutureResult
[10:52:39.690] |  :  .  |  :  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'remove', earlySignal = 0) ...
[10:52:39.690] |  :  .  |  :  .  Removed future from position #1
[10:52:39.690] |  :  .  |  :  .  Number of registered futures: 0
[10:52:39.690] |  :  .  |  :  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'remove', earlySignal = 0) ... done
[10:52:39.690] |  :  .  |  :  Erased future from future backend
[10:52:39.691] |  :  .  |  :  result() for ClusterFuture ...
[10:52:39.691] |  :  .  |  :  .  result already collected: FutureResult
[10:52:39.691] |  :  .  |  :  result() for ClusterFuture ... done
[10:52:39.691] |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:39.691] |  :  .  result() for ClusterFuture ... done
[10:52:39.691] |  :  .  result() for ClusterFuture ...
[10:52:39.691] |  :  .  |  result already collected: FutureResult
[10:52:39.691] |  :  .  result() for ClusterFuture ... done
[10:52:39.691] |  :  .  getGlobalsAndPackages() ...
[10:52:39.692] |  :  .  |  Searching for globals ...
[10:52:39.692] |  :  .  |  :  globals found: [1] ‘{’
[10:52:39.692] |  :  .  |  Searching for globals ... DONE
[10:52:39.693] |  :  .  |  Resolving globals: FALSE
[10:52:39.693] |  :  .  |  Search for packages associated with the globals ...
[10:52:39.693] |  :  .  |  :  Packages associated with globals: [1] ‘base’
[10:52:39.693] |  :  .  |  :  Packages: [1] ‘base’
[10:52:39.693] |  :  .  |  Search for packages associated with the globals ... DONE
[10:52:39.693] |  :  .  |  Packages after dropping 'base': [0] 
[10:52:39.693] |  :  .  |  globals: [0] 
[10:52:39.693] |  :  .  |  packages: [0] 
[10:52:39.694] |  :  .  getGlobalsAndPackages() ... done
[10:52:39.694] |  :  .  run() for Future (‘Future’) ...
[10:52:39.694] |  :  .  |  state: ‘created’
[10:52:39.694] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:39.694] |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:39.694] |  :  .  |  Using MultisessionFutureBackend ...
[10:52:39.694] |  :  .  |  :  Launching futures ...
[10:52:39.694] |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:52:39.695] |  :  .  |  :  .  |  Workers: [n=2]
[10:52:39.695] |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:39.696] |  :  .  |  :  .  |  FutureRegistry: ‘workers-b764c133d8854d37c81ec22973e93637’
[10:52:39.696] |  :  .  |  :  .  |  requestWorker() ...
[10:52:39.696] |  :  .  |  :  .  |  :  requestNode() ...
[10:52:39.696] |  :  .  |  :  .  |  :  .  Number of workers: 2
[10:52:39.697] |  :  .  |  :  .  |  :  .  Polling for a free worker ...
[10:52:39.697] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'list', earlySignal = 0) ...
[10:52:39.697] |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:52:39.697] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:52:39.697] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'list', earlySignal = 0) ... done
[10:52:39.697] |  :  .  |  :  .  |  :  .  |  Total time: 0
[10:52:39.697] |  :  .  |  :  .  |  :  .  Polling for a free worker ... done
[10:52:39.697] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'list', earlySignal = 0) ...
[10:52:39.697] |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:52:39.697] |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:39.697] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'list', earlySignal = 0) ... done
[10:52:39.698] |  :  .  |  :  .  |  :  .  Index of first available worker: 1
[10:52:39.698] |  :  .  |  :  .  |  :  .  Validate that the worker is functional ...
[10:52:39.775] |  :  .  |  :  .  |  :  .  |  Worker is functional
[10:52:39.775] |  :  .  |  :  .  |  :  .  requestNode() ... done
[10:52:39.776] |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:39.776] |  :  .  |  :  .  |  :  requestWorker() ... done
[10:52:39.776] |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ...
[10:52:39.776] |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:52:39.776] |  :  .  |  :  .  |  :  launchFuture() ...
[10:52:39.776] |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:39.777] |  :  .  |  :  .  |  :  .  getFutureData() ...
[10:52:39.777] |  :  .  |  :  .  |  :  .  |  getFutureCore() ...
[10:52:39.777] |  :  .  |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:52:39.777] |  :  .  |  :  .  |  :  .  |  getFutureCore() ... done
[10:52:39.777] |  :  .  |  :  .  |  :  .  |  getFutureCapture() ...
[10:52:39.777] |  :  .  |  :  .  |  :  .  |  getFutureCapture() ... done
[10:52:39.777] |  :  .  |  :  .  |  :  .  |  getFutureContext() ...
[10:52:39.777] |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:39.777] |  :  .  |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:52:39.777] |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:39.778] |  :  .  |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:52:39.778] |  :  .  |  :  .  |  :  .  |  getFutureContext() ... done
[10:52:39.778] |  :  .  |  :  .  |  :  .  getFutureData() ... done
[10:52:39.778] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'add', earlySignal = 0) ...
[10:52:39.778] |  :  .  |  :  .  |  :  .  |  Appended future to position #1
[10:52:39.778] |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:52:39.778] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'add', earlySignal = 0) ... done
[10:52:39.779] |  :  .  |  :  .  |  :  launchFuture() ... done
[10:52:39.779] |  :  .  |  :  .  |  :  MultisessionFuture started
[10:52:39.779] |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:52:39.779] |  :  .  |  :  .  Launching futures ... done
[10:52:39.779] |  :  .  |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:39.779] |  :  .  |  :  Using MultisessionFutureBackend ... done
[10:52:39.779] |  :  .  |  run() for Future (‘MultisessionFuture’) ... done
MultisessionFuture:
Label: ‘strategy = multisession’
Expression:
{
    42
}
Lazy evaluation: FALSE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Globals: <none>
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:52:39.780] |  :  .  |  isFutureResolved() ...
[10:52:39.780] |  :  .  |  :  assertValidConnection() ...
[10:52:39.780] |  :  .  |  :  .  cluster node index: 1
[10:52:39.780] |  :  .  |  :  assertValidConnection() ... done
[10:52:39.791] |  :  .  |  isFutureResolved() ... done
Resolved: FALSE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: 312d9d716ed6c53550527b9727f32039
Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:39.791] |  :  .  |  result() for ClusterFuture ...
[10:52:39.791] |  :  .  |  :  assertValidConnection() ...
[10:52:39.791] |  :  .  |  :  .  cluster node index: 1
[10:52:39.792] |  :  .  |  :  assertValidConnection() ... done
[10:52:39.792] |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:52:39.792] |  :  .  |  :  .  cluster node index: 1
[10:52:39.822] |  :  .  |  :  .  [1] TRUE
[10:52:39.822] |  :  .  |  :  .  received data:
[10:52:39.823] |  :  .  |  :  .  List of 5
[10:52:39.823] |  :  .  |  :  .   $ type   : chr "VALUE"
[10:52:39.823] |  :  .  |  :  .   $ value  :List of 13
[10:52:39.823] |  :  .  |  :  .    ..$ value            : num 42
[10:52:39.823] |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:52:39.823] |  :  .  |  :  .    ..$ stdout           : chr ""
[10:52:39.823] |  :  .  |  :  .    ..$ conditions       : list()
[10:52:39.823] |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:52:39.823] |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:52:39.823] |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:52:39.823] |  :  .  |  :  .    .. ..$ added   : NULL
[10:52:39.823] |  :  .  |  :  .    .. ..$ removed : NULL
[10:52:39.823] |  :  .  |  :  .    .. ..$ replaced: NULL
[10:52:39.823] |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:52:39.823] |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:39"
[10:52:39.823] |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:39"
[10:52:39.823] |  :  .  |  :  .    ..$ session_uuid     : chr "6d4ddb46ee7ea80bbc03cd497184242a"
[10:52:39.823] |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:52:39.823] |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:39.823] |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:39.823] |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:39.823] |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:39.823] |  :  .  |  :  .    .. .. ..$ pid   : int 68932
[10:52:39.823] |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:39"
[10:52:39.823] |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:52:39.823] |  :  .  |  :  .    ..$ r_info           :List of 4
[10:52:39.823] |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:39.823] |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:52:39.823] |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:52:39.823] |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:52:39.823] |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:52:39.823] |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:52:39.823] |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:52:39.823] |  :  .  |  :  .   $ success: logi TRUE
[10:52:39.823] |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:52:39.823] |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:39.823] |  :  .  |  :  .   $ tag    : NULL
[10:52:39.833] |  :  .  |  :  .  Received FutureResult
[10:52:39.833] |  :  .  |  :  .  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'remove', earlySignal = 0) ...
[10:52:39.833] |  :  .  |  :  .  |  Removed future from position #1
[10:52:39.833] |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:39.833] |  :  .  |  :  .  FutureRegistry('workers-b764c133d8854d37c81ec22973e93637', action = 'remove', earlySignal = 0) ... done
[10:52:39.833] |  :  .  |  :  .  Erased future from future backend
[10:52:39.833] |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:39.833] |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:39.834] |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:39.834] |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:39.834] |  :  .  |  result() for ClusterFuture ... done
[10:52:39.834] |  :  .  |  result() for ClusterFuture ...
[10:52:39.834] |  :  .  |  :  result already collected: FutureResult
[10:52:39.834] |  :  .  |  result() for ClusterFuture ... done
- plan('multisession') ... DONE

> message("*** Futures - labels ... DONE")
*** Futures - labels ... DONE
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=0.6s, sys.self=0.06s, elapsed=2s, user.child=0.3s, sys.child=0.4s
Test ‘future,labels’ ... success
> 
