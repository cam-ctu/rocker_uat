
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script inst/testme/test-futureCall.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future:::testme("futureCall")
Test ‘futureCall’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future/testme/test-futureCall.R’

> library(future)
[08:08:14.054] Option 'future.startup.script': TRUE
[08:08:14.055] Future startup scripts considered: ‘.future.R’, ‘~/.future.R’
[08:08:14.055] Future startup scripts found: <none>

> options(future.debug = FALSE)

> message("*** futureCall() ...")
*** futureCall() ...

> message("- futureCall() - sequential + lazy ...")
- futureCall() - sequential + lazy ...

> f1 <- future(do.call(rnorm, args = list(n = 100)), 
+     seed = NULL, lazy = TRUE)

> f2 <- futureCall(rnorm, args = list(n = 100), seed = NULL, 
+     lazy = TRUE)

> set.seed(42)

> v0 <- rnorm(n = 100)

> str(list(v0 = v0))
List of 1
 $ v0: num [1:100] 1.371 -0.565 0.363 0.633 0.404 ...

> set.seed(42)

> v1 <- value(f1)

> str(list(v1 = v1))
List of 1
 $ v1: num [1:100] 1.371 -0.565 0.363 0.633 0.404 ...

> set.seed(42)

> v2 <- value(f2)

> str(list(v2 = v2))
List of 1
 $ v2: num [1:100] 1.371 -0.565 0.363 0.633 0.404 ...

> stopifnot(all.equal(v1, v0))

> stopifnot(all.equal(v1, v2))

> message("- futureCall() - sequential + lazy ... DONE")
- futureCall() - sequential + lazy ... DONE

> message("- futureCall() - mix of strategies, cores, lazy and globals ...")
- futureCall() - mix of strategies, cores, lazy and globals ...

> a <- 3

> args <- list(x = 42, y = 12)

> v0 <- do.call(function(x, y) a * (x - y), args = args)

> for (cores in 1:availCores) {
+     message(sprintf("Testing with %d cores ...", cores))
+     options(mc.cores = cores)
+     strategies <- support .... [TRUNCATED] 
Testing with 1 cores ...
- plan('sequential') ...
- futureCall() #1
SequentialFuture:
Label: <unnamed-3>
Expression:
do.call(what = FUN, args = args)
Globals: 2 objects totaling 13.38 KiB (function ‘FUN’ of 474 bytes, list ‘args’ of 114 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: FALSE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘finished’
Resolved: TRUE
Unique identifier: 8649a00576220ed7f3e78247a0811741-3
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
Value: 39 bytes of class ‘numeric’
Duration: 0.002191067 secs (started 2025-06-17 08:08:14.162911)
Worker process: 8649a00576220ed7f3e78247a0811741
List of 5
 $ strategy: chr "sequential"
 $ globals : logi FALSE
 $ lazy    : logi FALSE
 $ v0      : num 90
 $ res1    : num 90
- futureCall() #2
SequentialFuture:
Label: <unnamed-4>
Expression:
do.call(what = FUN, args = args)
Globals: 3 objects totaling 12.94 KiB (function ‘FUN’ of 345 bytes, list ‘args’ of 114 bytes, numeric ‘a’ of 39 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: FALSE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘finished’
Resolved: TRUE
Unique identifier: 8649a00576220ed7f3e78247a0811741-4
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
Value: 39 bytes of class ‘numeric’
Duration: 0.002117395 secs (started 2025-06-17 08:08:14.170078)
Worker process: 8649a00576220ed7f3e78247a0811741
List of 5
 $ strategy: chr "sequential"
 $ globals : logi FALSE
 $ lazy    : logi FALSE
 $ v0      : num 90
 $ res2    : num 90
- futureCall() #3
SequentialFuture:
Label: <unnamed-5>
Expression:
do.call(what = FUN, args = args)
Globals: 3 objects totaling 800 bytes (function ‘FUN’ of 345 bytes, list ‘args’ of 114 bytes, numeric ‘a’ of 39 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: FALSE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘finished’
Resolved: TRUE
Unique identifier: 8649a00576220ed7f3e78247a0811741-5
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
Value: 39 bytes of class ‘numeric’
Duration: 0.002092361 secs (started 2025-06-17 08:08:14.176276)
Worker process: 8649a00576220ed7f3e78247a0811741
List of 5
 $ strategy: chr "sequential"
 $ globals : logi FALSE
 $ lazy    : logi FALSE
 $ v0      : num 90
 $ res3    : num 90
- futureCall() #4
truth: 2
[1] 2
List of 4
 $ strategy: chr "sequential"
 $ globals : logi FALSE
 $ lazy    : logi FALSE
 $ v4      : num 2
future.globals.keepWhere=TRUE
future.globals.globalsOf.locals=TRUE
Warning in rm(list = c("v1", "v2", "v3", "v4")) : object 'v4' not found
- futureCall() #1
SequentialFuture:
Label: <unnamed-7>
Expression:
do.call(what = FUN, args = args)
Globals: 3 objects totaling 12.95 KiB (function ‘FUN’ of 345 bytes, list ‘args’ of 114 bytes, numeric ‘a’ of 39 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: FALSE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘finished’
Resolved: TRUE
Unique identifier: 8649a00576220ed7f3e78247a0811741-7
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
Value: 39 bytes of class ‘numeric’
Duration: 0.003282785 secs (started 2025-06-17 08:08:14.197449)
Worker process: 8649a00576220ed7f3e78247a0811741
List of 5
 $ strategy: chr "sequential"
 $ globals : logi TRUE
 $ lazy    : logi FALSE
 $ v0      : num 90
 $ res1    : num 90
- futureCall() #2
SequentialFuture:
Label: <unnamed-8>
Expression:
do.call(what = FUN, args = args)
Globals: 3 objects totaling 12.94 KiB (function ‘FUN’ of 345 bytes, list ‘args’ of 114 bytes, numeric ‘a’ of 39 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: FALSE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘finished’
Resolved: TRUE
Unique identifier: 8649a00576220ed7f3e78247a0811741-8
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
Value: 39 bytes of class ‘numeric’
Duration: 0.002052069 secs (started 2025-06-17 08:08:14.20479)
Worker process: 8649a00576220ed7f3e78247a0811741
List of 5
 $ strategy: chr "sequential"
 $ globals : logi TRUE
 $ lazy    : logi FALSE
 $ v0      : num 90
 $ res2    : num 90
- futureCall() #3
SequentialFuture:
Label: <unnamed-9>
Expression:
do.call(what = FUN, args = args)
Globals: 3 objects totaling 800 bytes (function ‘FUN’ of 345 bytes, list ‘args’ of 114 bytes, numeric ‘a’ of 39 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: FALSE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘finished’
Resolved: TRUE
Unique identifier: 8649a00576220ed7f3e78247a0811741-9
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
Value: 39 bytes of class ‘numeric’
Duration: 0.002072573 secs (started 2025-06-17 08:08:14.210817)
Worker process: 8649a00576220ed7f3e78247a0811741
List of 5
 $ strategy: chr "sequential"
 $ globals : logi TRUE
 $ lazy    : logi FALSE
 $ v0      : num 90
 $ res3    : num 90
- futureCall() #4
truth: 2
[1] 2
List of 4
 $ strategy: chr "sequential"
 $ globals : logi TRUE
 $ lazy    : logi FALSE
 $ v4      : num 2
future.globals.keepWhere=TRUE
future.globals.globalsOf.locals=TRUE
Warning in rm(list = c("v1", "v2", "v3", "v4")) : object 'v4' not found
- futureCall() #1
Future:
Label: <unnamed-11>
Expression:
do.call(what = FUN, args = args)
Globals: 2 objects totaling 7.75 KiB (function ‘FUN’ of 474 bytes, list ‘args’ of 114 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: TRUE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘created’
Resolved: FALSE
Unique identifier: 8649a00576220ed7f3e78247a0811741-11
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘Future’, ‘environment’
Value: <not collected>
Conditions captured: <none>
List of 5
 $ strategy: chr "sequential"
 $ globals : logi FALSE
 $ lazy    : logi TRUE
 $ v0      : num 90
 $ res1    :List of 2
  ..$ message: chr "object 'a' not found"
  ..$ call   : language (function (x, y)  a * (x - y))(x = 42, y = 12)
  ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
- futureCall() #2
Future:
Label: <unnamed-12>
Expression:
do.call(what = FUN, args = args)
Globals: 3 objects totaling 7.31 KiB (function ‘FUN’ of 345 bytes, list ‘args’ of 114 bytes, numeric ‘a’ of 39 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: TRUE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘created’
Resolved: FALSE
Unique identifier: 8649a00576220ed7f3e78247a0811741-12
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘Future’, ‘environment’
Value: <not collected>
Conditions captured: <none>
List of 5
 $ strategy: chr "sequential"
 $ globals : logi FALSE
 $ lazy    : logi TRUE
 $ v0      : num 90
 $ res2    : num 90
- futureCall() #3
Future:
Label: <unnamed-13>
Expression:
do.call(what = FUN, args = args)
Globals: 3 objects totaling 800 bytes (function ‘FUN’ of 345 bytes, list ‘args’ of 114 bytes, numeric ‘a’ of 39 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: TRUE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘created’
Resolved: FALSE
Unique identifier: 8649a00576220ed7f3e78247a0811741-13
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘Future’, ‘environment’
Value: <not collected>
Conditions captured: <none>
List of 5
 $ strategy: chr "sequential"
 $ globals : logi FALSE
 $ lazy    : logi TRUE
 $ v0      : num 90
 $ res3    : num 90
- futureCall() #4
truth: 2
<simpleError in (function () a)(): object 'a' not found>
List of 4
 $ strategy: chr "sequential"
 $ globals : logi FALSE
 $ lazy    : logi TRUE
 $ v4      :List of 2
  ..$ message: chr "object 'a' not found"
  ..$ call   : language (function ()  a)()
  ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
future.globals.keepWhere=TRUE
future.globals.globalsOf.locals=TRUE
Warning in rm(list = c("v1", "v2", "v3", "v4")) : object 'v1' not found
Warning in rm(list = c("v1", "v2", "v3", "v4")) : object 'v4' not found
- futureCall() #1
Future:
Label: <unnamed-15>
Expression:
do.call(what = FUN, args = args)
Globals: 3 objects totaling 7.32 KiB (function ‘FUN’ of 345 bytes, list ‘args’ of 114 bytes, numeric ‘a’ of 39 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: TRUE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘created’
Resolved: FALSE
Unique identifier: 8649a00576220ed7f3e78247a0811741-15
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘Future’, ‘environment’
Value: <not collected>
Conditions captured: <none>
List of 5
 $ strategy: chr "sequential"
 $ globals : logi TRUE
 $ lazy    : logi TRUE
 $ v0      : num 90
 $ res1    : num 90
- futureCall() #2
Future:
Label: <unnamed-16>
Expression:
do.call(what = FUN, args = args)
Globals: 3 objects totaling 7.31 KiB (function ‘FUN’ of 345 bytes, list ‘args’ of 114 bytes, numeric ‘a’ of 39 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: TRUE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘created’
Resolved: FALSE
Unique identifier: 8649a00576220ed7f3e78247a0811741-16
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘Future’, ‘environment’
Value: <not collected>
Conditions captured: <none>
List of 5
 $ strategy: chr "sequential"
 $ globals : logi TRUE
 $ lazy    : logi TRUE
 $ v0      : num 90
 $ res2    : num 90
- futureCall() #3
Future:
Label: <unnamed-17>
Expression:
do.call(what = FUN, args = args)
Globals: 3 objects totaling 800 bytes (function ‘FUN’ of 345 bytes, list ‘args’ of 114 bytes, numeric ‘a’ of 39 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: TRUE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘created’
Resolved: FALSE
Unique identifier: 8649a00576220ed7f3e78247a0811741-17
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘Future’, ‘environment’
Value: <not collected>
Conditions captured: <none>
List of 5
 $ strategy: chr "sequential"
 $ globals : logi TRUE
 $ lazy    : logi TRUE
 $ v0      : num 90
 $ res3    : num 90
- futureCall() #4
truth: 2
[1] 2
List of 4
 $ strategy: chr "sequential"
 $ globals : logi TRUE
 $ lazy    : logi TRUE
 $ v4      : num 2
future.globals.keepWhere=TRUE
future.globals.globalsOf.locals=TRUE
Warning in rm(list = c("v1", "v2", "v3", "v4")) : object 'v4' not found
Testing with 1 cores ... DONE
Testing with 2 cores ...
- plan('multicore') ...
- futureCall() #1
MulticoreFuture:
Label: <unnamed-19>
Expression:
do.call(what = FUN, args = args)
Globals: 2 objects totaling 11.01 KiB (function ‘FUN’ of 474 bytes, list ‘args’ of 114 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: FALSE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘running’
Resolved: TRUE
Unique identifier: 8649a00576220ed7f3e78247a0811741-19
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
Value: <not collected>
Conditions captured: <none>
List of 5
 $ strategy: chr "multicore"
 $ globals : logi FALSE
 $ lazy    : logi FALSE
 $ v0      : num 90
 $ res1    : num 90
- futureCall() #2
MulticoreFuture:
Label: <unnamed-20>
Expression:
do.call(what = FUN, args = args)
Globals: 3 objects totaling 10.65 KiB (function ‘FUN’ of 345 bytes, list ‘args’ of 114 bytes, numeric ‘a’ of 39 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: FALSE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘running’
Resolved: TRUE
Unique identifier: 8649a00576220ed7f3e78247a0811741-20
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
Value: <not collected>
Conditions captured: <none>
List of 5
 $ strategy: chr "multicore"
 $ globals : logi FALSE
 $ lazy    : logi FALSE
 $ v0      : num 90
 $ res2    : num 90
- futureCall() #3
MulticoreFuture:
Label: <unnamed-21>
Expression:
do.call(what = FUN, args = args)
Globals: 3 objects totaling 800 bytes (function ‘FUN’ of 345 bytes, list ‘args’ of 114 bytes, numeric ‘a’ of 39 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: FALSE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘running’
Resolved: TRUE
Unique identifier: 8649a00576220ed7f3e78247a0811741-21
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
Value: <not collected>
Conditions captured: <none>
List of 5
 $ strategy: chr "multicore"
 $ globals : logi FALSE
 $ lazy    : logi FALSE
 $ v0      : num 90
 $ res3    : num 90
- futureCall() #4
truth: 2
[1] 2
List of 4
 $ strategy: chr "multicore"
 $ globals : logi FALSE
 $ lazy    : logi FALSE
 $ v4      : num 2
future.globals.keepWhere=TRUE
future.globals.globalsOf.locals=TRUE
Warning in rm(list = c("v1", "v2", "v3", "v4")) : object 'v4' not found
- futureCall() #1
MulticoreFuture:
Label: <unnamed-23>
Expression:
do.call(what = FUN, args = args)
Globals: 3 objects totaling 10.66 KiB (function ‘FUN’ of 345 bytes, list ‘args’ of 114 bytes, numeric ‘a’ of 39 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: FALSE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘running’
Resolved: TRUE
Unique identifier: 8649a00576220ed7f3e78247a0811741-23
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
Value: <not collected>
Conditions captured: <none>
List of 5
 $ strategy: chr "multicore"
 $ globals : logi TRUE
 $ lazy    : logi FALSE
 $ v0      : num 90
 $ res1    : num 90
- futureCall() #2
MulticoreFuture:
Label: <unnamed-24>
Expression:
do.call(what = FUN, args = args)
Globals: 3 objects totaling 10.65 KiB (function ‘FUN’ of 345 bytes, list ‘args’ of 114 bytes, numeric ‘a’ of 39 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: FALSE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘running’
Resolved: TRUE
Unique identifier: 8649a00576220ed7f3e78247a0811741-24
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
Value: <not collected>
Conditions captured: <none>
List of 5
 $ strategy: chr "multicore"
 $ globals : logi TRUE
 $ lazy    : logi FALSE
 $ v0      : num 90
 $ res2    : num 90
- futureCall() #3
MulticoreFuture:
Label: <unnamed-25>
Expression:
do.call(what = FUN, args = args)
Globals: 3 objects totaling 800 bytes (function ‘FUN’ of 345 bytes, list ‘args’ of 114 bytes, numeric ‘a’ of 39 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: FALSE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘running’
Resolved: TRUE
Unique identifier: 8649a00576220ed7f3e78247a0811741-25
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
Value: <not collected>
Conditions captured: <none>
List of 5
 $ strategy: chr "multicore"
 $ globals : logi TRUE
 $ lazy    : logi FALSE
 $ v0      : num 90
 $ res3    : num 90
- futureCall() #4
truth: 2
[1] 2
List of 4
 $ strategy: chr "multicore"
 $ globals : logi TRUE
 $ lazy    : logi FALSE
 $ v4      : num 2
future.globals.keepWhere=TRUE
future.globals.globalsOf.locals=TRUE
Warning in rm(list = c("v1", "v2", "v3", "v4")) : object 'v4' not found
- futureCall() #1
Future:
Label: <unnamed-27>
Expression:
do.call(what = FUN, args = args)
Globals: 2 objects totaling 7.75 KiB (function ‘FUN’ of 474 bytes, list ‘args’ of 114 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: TRUE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘created’
Resolved: FALSE
Unique identifier: 8649a00576220ed7f3e78247a0811741-27
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘Future’, ‘environment’
Value: <not collected>
Conditions captured: <none>
List of 5
 $ strategy: chr "multicore"
 $ globals : logi FALSE
 $ lazy    : logi TRUE
 $ v0      : num 90
 $ res1    :List of 2
  ..$ message: chr "object 'a' not found"
  ..$ call   : language (function (x, y)  a * (x - y))(x = 42, y = 12)
  ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
- futureCall() #2
Future:
Label: <unnamed-28>
Expression:
do.call(what = FUN, args = args)
Globals: 3 objects totaling 7.31 KiB (function ‘FUN’ of 345 bytes, list ‘args’ of 114 bytes, numeric ‘a’ of 39 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: TRUE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘created’
Resolved: FALSE
Unique identifier: 8649a00576220ed7f3e78247a0811741-28
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘Future’, ‘environment’
Value: <not collected>
Conditions captured: <none>
List of 5
 $ strategy: chr "multicore"
 $ globals : logi FALSE
 $ lazy    : logi TRUE
 $ v0      : num 90
 $ res2    : num 90
- futureCall() #3
Future:
Label: <unnamed-29>
Expression:
do.call(what = FUN, args = args)
Globals: 3 objects totaling 800 bytes (function ‘FUN’ of 345 bytes, list ‘args’ of 114 bytes, numeric ‘a’ of 39 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: TRUE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘created’
Resolved: FALSE
Unique identifier: 8649a00576220ed7f3e78247a0811741-29
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘Future’, ‘environment’
Value: <not collected>
Conditions captured: <none>
List of 5
 $ strategy: chr "multicore"
 $ globals : logi FALSE
 $ lazy    : logi TRUE
 $ v0      : num 90
 $ res3    : num 90
- futureCall() #4
truth: 2
<simpleError in (function () a)(): object 'a' not found>
List of 4
 $ strategy: chr "multicore"
 $ globals : logi FALSE
 $ lazy    : logi TRUE
 $ v4      :List of 2
  ..$ message: chr "object 'a' not found"
  ..$ call   : language (function ()  a)()
  ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
future.globals.keepWhere=TRUE
future.globals.globalsOf.locals=TRUE
Warning in rm(list = c("v1", "v2", "v3", "v4")) : object 'v1' not found
Warning in rm(list = c("v1", "v2", "v3", "v4")) : object 'v4' not found
- futureCall() #1
Future:
Label: <unnamed-31>
Expression:
do.call(what = FUN, args = args)
Globals: 3 objects totaling 7.32 KiB (function ‘FUN’ of 345 bytes, list ‘args’ of 114 bytes, numeric ‘a’ of 39 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: TRUE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘created’
Resolved: FALSE
Unique identifier: 8649a00576220ed7f3e78247a0811741-31
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘Future’, ‘environment’
Value: <not collected>
Conditions captured: <none>
List of 5
 $ strategy: chr "multicore"
 $ globals : logi TRUE
 $ lazy    : logi TRUE
 $ v0      : num 90
 $ res1    : num 90
- futureCall() #2
Future:
Label: <unnamed-32>
Expression:
do.call(what = FUN, args = args)
Globals: 3 objects totaling 7.31 KiB (function ‘FUN’ of 345 bytes, list ‘args’ of 114 bytes, numeric ‘a’ of 39 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: TRUE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘created’
Resolved: FALSE
Unique identifier: 8649a00576220ed7f3e78247a0811741-32
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘Future’, ‘environment’
Value: <not collected>
Conditions captured: <none>
List of 5
 $ strategy: chr "multicore"
 $ globals : logi TRUE
 $ lazy    : logi TRUE
 $ v0      : num 90
 $ res2    : num 90
- futureCall() #3
Future:
Label: <unnamed-33>
Expression:
do.call(what = FUN, args = args)
Globals: 3 objects totaling 800 bytes (function ‘FUN’ of 345 bytes, list ‘args’ of 114 bytes, numeric ‘a’ of 39 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: TRUE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘created’
Resolved: FALSE
Unique identifier: 8649a00576220ed7f3e78247a0811741-33
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘Future’, ‘environment’
Value: <not collected>
Conditions captured: <none>
List of 5
 $ strategy: chr "multicore"
 $ globals : logi TRUE
 $ lazy    : logi TRUE
 $ v0      : num 90
 $ res3    : num 90
- futureCall() #4
truth: 2
[1] 2
List of 4
 $ strategy: chr "multicore"
 $ globals : logi TRUE
 $ lazy    : logi TRUE
 $ v4      : num 2
future.globals.keepWhere=TRUE
future.globals.globalsOf.locals=TRUE
Warning in rm(list = c("v1", "v2", "v3", "v4")) : object 'v4' not found
- plan('multisession') ...
- futureCall() #1
MultisessionFuture:
Label: <unnamed-35>
Expression:
do.call(what = FUN, args = args)
Globals: 2 objects totaling 510.45 KiB (function ‘FUN’ of 474 bytes, list ‘args’ of 114 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: FALSE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘running’
Resolved: FALSE
Unique identifier: 8649a00576220ed7f3e78247a0811741-35
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
Value: <not collected>
Conditions captured: <none>
List of 5
 $ strategy: chr "multisession"
 $ globals : logi FALSE
 $ lazy    : logi FALSE
 $ v0      : num 90
 $ res1    :List of 2
  ..$ message: chr "object 'a' not found"
  ..$ call   : language (function (x, y)  a * (x - y))(x = 42, y = 12)
  ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
- futureCall() #2
MultisessionFuture:
Label: <unnamed-36>
Expression:
do.call(what = FUN, args = args)
Globals: 3 objects totaling 510.06 KiB (function ‘FUN’ of 345 bytes, list ‘args’ of 114 bytes, numeric ‘a’ of 39 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: FALSE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘running’
Resolved: FALSE
Unique identifier: 8649a00576220ed7f3e78247a0811741-36
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
Value: <not collected>
Conditions captured: <none>
List of 5
 $ strategy: chr "multisession"
 $ globals : logi FALSE
 $ lazy    : logi FALSE
 $ v0      : num 90
 $ res2    : num 90
- futureCall() #3
MultisessionFuture:
Label: <unnamed-37>
Expression:
do.call(what = FUN, args = args)
Globals: 3 objects totaling 800 bytes (function ‘FUN’ of 345 bytes, list ‘args’ of 114 bytes, numeric ‘a’ of 39 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: FALSE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘running’
Resolved: FALSE
Unique identifier: 8649a00576220ed7f3e78247a0811741-37
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
Value: <not collected>
Conditions captured: <none>
List of 5
 $ strategy: chr "multisession"
 $ globals : logi FALSE
 $ lazy    : logi FALSE
 $ v0      : num 90
 $ res3    : num 90
- futureCall() #4
truth: 2
[1] 2
List of 4
 $ strategy: chr "multisession"
 $ globals : logi FALSE
 $ lazy    : logi FALSE
 $ v4      : num 2
future.globals.keepWhere=TRUE
future.globals.globalsOf.locals=TRUE
Warning in rm(list = c("v1", "v2", "v3", "v4")) : object 'v1' not found
Warning in rm(list = c("v1", "v2", "v3", "v4")) : object 'v4' not found
- futureCall() #1
MultisessionFuture:
Label: <unnamed-39>
Expression:
do.call(what = FUN, args = args)
Globals: 3 objects totaling 510.07 KiB (function ‘FUN’ of 345 bytes, list ‘args’ of 114 bytes, numeric ‘a’ of 39 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: FALSE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘running’
Resolved: FALSE
Unique identifier: 8649a00576220ed7f3e78247a0811741-39
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
Value: <not collected>
Conditions captured: <none>
List of 5
 $ strategy: chr "multisession"
 $ globals : logi TRUE
 $ lazy    : logi FALSE
 $ v0      : num 90
 $ res1    : num 90
- futureCall() #2
MultisessionFuture:
Label: <unnamed-40>
Expression:
do.call(what = FUN, args = args)
Globals: 3 objects totaling 510.06 KiB (function ‘FUN’ of 345 bytes, list ‘args’ of 114 bytes, numeric ‘a’ of 39 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: FALSE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘running’
Resolved: FALSE
Unique identifier: 8649a00576220ed7f3e78247a0811741-40
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
Value: <not collected>
Conditions captured: <none>
List of 5
 $ strategy: chr "multisession"
 $ globals : logi TRUE
 $ lazy    : logi FALSE
 $ v0      : num 90
 $ res2    : num 90
- futureCall() #3
MultisessionFuture:
Label: <unnamed-41>
Expression:
do.call(what = FUN, args = args)
Globals: 3 objects totaling 800 bytes (function ‘FUN’ of 345 bytes, list ‘args’ of 114 bytes, numeric ‘a’ of 39 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: FALSE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘running’
Resolved: FALSE
Unique identifier: 8649a00576220ed7f3e78247a0811741-41
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
Value: <not collected>
Conditions captured: <none>
List of 5
 $ strategy: chr "multisession"
 $ globals : logi TRUE
 $ lazy    : logi FALSE
 $ v0      : num 90
 $ res3    : num 90
- futureCall() #4
truth: 2
[1] 2
List of 4
 $ strategy: chr "multisession"
 $ globals : logi TRUE
 $ lazy    : logi FALSE
 $ v4      : num 2
future.globals.keepWhere=TRUE
future.globals.globalsOf.locals=TRUE
Warning in rm(list = c("v1", "v2", "v3", "v4")) : object 'v4' not found
- futureCall() #1
Future:
Label: <unnamed-43>
Expression:
do.call(what = FUN, args = args)
Globals: 2 objects totaling 7.75 KiB (function ‘FUN’ of 474 bytes, list ‘args’ of 114 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: TRUE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘created’
Resolved: FALSE
Unique identifier: 8649a00576220ed7f3e78247a0811741-43
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘Future’, ‘environment’
Value: <not collected>
Conditions captured: <none>
List of 5
 $ strategy: chr "multisession"
 $ globals : logi FALSE
 $ lazy    : logi TRUE
 $ v0      : num 90
 $ res1    :List of 2
  ..$ message: chr "object 'a' not found"
  ..$ call   : language (function (x, y)  a * (x - y))(x = 42, y = 12)
  ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
- futureCall() #2
Future:
Label: <unnamed-44>
Expression:
do.call(what = FUN, args = args)
Globals: 3 objects totaling 7.31 KiB (function ‘FUN’ of 345 bytes, list ‘args’ of 114 bytes, numeric ‘a’ of 39 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: TRUE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘created’
Resolved: FALSE
Unique identifier: 8649a00576220ed7f3e78247a0811741-44
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘Future’, ‘environment’
Value: <not collected>
Conditions captured: <none>
List of 5
 $ strategy: chr "multisession"
 $ globals : logi FALSE
 $ lazy    : logi TRUE
 $ v0      : num 90
 $ res2    : num 90
- futureCall() #3
Future:
Label: <unnamed-45>
Expression:
do.call(what = FUN, args = args)
Globals: 3 objects totaling 800 bytes (function ‘FUN’ of 345 bytes, list ‘args’ of 114 bytes, numeric ‘a’ of 39 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: TRUE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘created’
Resolved: FALSE
Unique identifier: 8649a00576220ed7f3e78247a0811741-45
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘Future’, ‘environment’
Value: <not collected>
Conditions captured: <none>
List of 5
 $ strategy: chr "multisession"
 $ globals : logi FALSE
 $ lazy    : logi TRUE
 $ v0      : num 90
 $ res3    : num 90
- futureCall() #4
truth: 2
<simpleError in (function () a)(): object 'a' not found>
List of 4
 $ strategy: chr "multisession"
 $ globals : logi FALSE
 $ lazy    : logi TRUE
 $ v4      :List of 2
  ..$ message: chr "object 'a' not found"
  ..$ call   : language (function ()  a)()
  ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
future.globals.keepWhere=TRUE
future.globals.globalsOf.locals=TRUE
Warning in rm(list = c("v1", "v2", "v3", "v4")) : object 'v1' not found
Warning in rm(list = c("v1", "v2", "v3", "v4")) : object 'v4' not found
- futureCall() #1
Future:
Label: <unnamed-47>
Expression:
do.call(what = FUN, args = args)
Globals: 3 objects totaling 7.32 KiB (function ‘FUN’ of 345 bytes, list ‘args’ of 114 bytes, numeric ‘a’ of 39 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: TRUE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘created’
Resolved: FALSE
Unique identifier: 8649a00576220ed7f3e78247a0811741-47
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘Future’, ‘environment’
Value: <not collected>
Conditions captured: <none>
List of 5
 $ strategy: chr "multisession"
 $ globals : logi TRUE
 $ lazy    : logi TRUE
 $ v0      : num 90
 $ res1    : num 90
- futureCall() #2
Future:
Label: <unnamed-48>
Expression:
do.call(what = FUN, args = args)
Globals: 3 objects totaling 7.31 KiB (function ‘FUN’ of 345 bytes, list ‘args’ of 114 bytes, numeric ‘a’ of 39 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: TRUE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘created’
Resolved: FALSE
Unique identifier: 8649a00576220ed7f3e78247a0811741-48
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘Future’, ‘environment’
Value: <not collected>
Conditions captured: <none>
List of 5
 $ strategy: chr "multisession"
 $ globals : logi TRUE
 $ lazy    : logi TRUE
 $ v0      : num 90
 $ res2    : num 90
- futureCall() #3
Future:
Label: <unnamed-49>
Expression:
do.call(what = FUN, args = args)
Globals: 3 objects totaling 800 bytes (function ‘FUN’ of 345 bytes, list ‘args’ of 114 bytes, numeric ‘a’ of 39 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: TRUE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘created’
Resolved: FALSE
Unique identifier: 8649a00576220ed7f3e78247a0811741-49
Owner process: 8649a00576220ed7f3e78247a0811741
Class: ‘Future’, ‘environment’
Value: <not collected>
Conditions captured: <none>
List of 5
 $ strategy: chr "multisession"
 $ globals : logi TRUE
 $ lazy    : logi TRUE
 $ v0      : num 90
 $ res3    : num 90
- futureCall() #4
truth: 2
[1] 2
List of 4
 $ strategy: chr "multisession"
 $ globals : logi TRUE
 $ lazy    : logi TRUE
 $ v4      : num 2
future.globals.keepWhere=TRUE
future.globals.globalsOf.locals=TRUE
Warning in rm(list = c("v1", "v2", "v3", "v4")) : object 'v4' not found
Testing with 2 cores ... DONE

> message("- futureCall() - mix of strategies, cores, lazy and globals ... DONE")
- futureCall() - mix of strategies, cores, lazy and globals ... DONE

> message("- futureCall() - bug fixes")
- futureCall() - bug fixes

> plan(sequential)

> plan(cluster, workers = 1)

> fcn <- function() a

> v <- tryCatch(local({
+     abc <- 42
+     f <- futureCall(fcn, args = list(), globals = "abc")
+     value(f)
+ }), error = identity)

> stopifnot(!is.null(v))

> print(v)
<simpleError in (function () a)(): object 'a' not found>

> stopifnot(inherits(v, "error"))

> message("*** futureCall() ... DONE")
*** futureCall() ... DONE
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=2s, sys.self=0.1s, elapsed=4s, user.child=0.3s, sys.child=0.4s
Test ‘futureCall’ ... success
> 
