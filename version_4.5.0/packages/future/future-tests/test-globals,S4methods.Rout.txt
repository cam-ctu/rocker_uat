
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script incl/testme/test-globals,S4methods.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future:::testme("globals,S4methods")
Test ‘globals,S4methods’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future/testme/test-globals,S4methods.R’

> library(future)
[10:53:22.242] Option 'future.startup.script': TRUE
[10:53:22.242] Future startup scripts considered: ‘.future.R’, ‘~/.future.R’
[10:53:22.243] Future startup scripts found: <none>

> library(methods)

> message("*** Globals - S4 methods ...")
*** Globals - S4 methods ...

> setGeneric("my_fcn", function(x) standardGeneric("my_fcn"))
[1] "my_fcn"

> setMethod("my_fcn", signature(x = "numeric"), function(x) {
+     -x
+ })

> org_my_fcn <- my_fcn

> truth <- my_fcn(3)

> for (strategy in supportedStrategies()) {
+     message("Type of future: ", strategy)
+     plan(strategy)
+     f <- future({
+         my_fcn
+    .... [TRUNCATED] 
Type of future: sequential
[10:53:22.262] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:22.263] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:53:22.263] |  :  all.equal() for FutureStrategyList ...
[10:53:22.263] |  :  .  New stack:
[10:53:22.263] |  :  .  List of 1
[10:53:22.263] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.263] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.263] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.263] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.263] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.263] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:22.263] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.267] |  :  .  Old stack:
[10:53:22.267] |  :  .  List of 1
[10:53:22.267] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.267] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.267] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.267] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.267] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.267] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:53:22.267] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.269] |  :  .  Not identical
[10:53:22.269] |  :  .  all.equal() for future ...
[10:53:22.269] |  :  .  |  List of 2
[10:53:22.269] |  :  .  |   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.269] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.269] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.269] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.269] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.269] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:22.269] |  :  .  |   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.269] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.269] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.269] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.269] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.269] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:22.273] |  :  .  all.equal() for future ... done
[10:53:22.273] |  :  all.equal() for FutureStrategyList ... done
[10:53:22.273] |  :  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:22.273] |  :  List of future strategies:
[10:53:22.273] |  :  1. sequential:
[10:53:22.273] |  :     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:22.273] |  :     - tweaked: FALSE
[10:53:22.273] |  :     - call: plan(sequential)
[10:53:22.274] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:53:22.274] plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:22.275] getGlobalsAndPackages() ...
[10:53:22.275] |  Searching for globals ...
[10:53:22.283] |  :  globals found: [3] ‘{’, ‘my_fcn’, ‘standardGeneric’
[10:53:22.283] |  Searching for globals ... DONE
[10:53:22.283] |  Resolving globals: FALSE
[10:53:22.283] |  Search for packages associated with the globals ...
[10:53:22.283] |  :  Packages associated with globals: [1] ‘base’
[10:53:22.284] |  :  Packages: [1] ‘base’
[10:53:22.284] |  Search for packages associated with the globals ... DONE
[10:53:22.284] |  Packages after dropping 'base': [0] 
[10:53:22.284] |  globals: [1] ‘my_fcn’
[10:53:22.284] |  packages: [0] 
[10:53:22.284] getGlobalsAndPackages() ... done
[10:53:22.285] run() for Future (‘Future’) ...
[10:53:22.285] |  state: ‘created’
[10:53:22.285] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:22.286] |  :  makeFutureBackend(<sequential>) ...
[10:53:22.286] |  :  .  Backend function: <‘NULL’>
[10:53:22.286] |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:22.286] |  :  makeFutureBackend(<sequential>) ... done
[10:53:22.286] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:22.286] |  Using SequentialFutureBackend ...
[10:53:22.286] |  :  Launching futures ...
[10:53:22.287] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:22.287] |  :  .  |  getFutureData() ...
[10:53:22.287] |  :  .  |  :  getFutureCore() ...
[10:53:22.287] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:22.287] |  :  .  |  :  getFutureCore() ... done
[10:53:22.287] |  :  .  |  :  getFutureCapture() ...
[10:53:22.287] |  :  .  |  :  getFutureCapture() ... done
[10:53:22.288] |  :  .  |  :  getFutureContext() ...
[10:53:22.288] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:22.288] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:22.288] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:22.288] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:22.288] |  :  .  |  :  getFutureContext() ... done
[10:53:22.288] |  :  .  |  getFutureData() ... done
[10:53:22.289] |  :  .  |  attachPackages() ...
[10:53:22.289] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:22.290] |  :  .  |  attachPackages() ... DONE
[10:53:22.290] |  :  .  |  attachPackages() ...
[10:53:22.290] |  :  .  |  :  packages: [n=0] 
[10:53:22.290] |  :  .  |  attachPackages() ... DONE
[10:53:22.290] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:22.290] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:22.291] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:22.291] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:22.291] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:22.291] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:22.291] |  :  .  |  :  .  |  New stack:
[10:53:22.291] |  :  .  |  :  .  |  List of 1
[10:53:22.291] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.291] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.291] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.291] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.291] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.291] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:22.291] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.294] |  :  .  |  :  .  |  Old stack:
[10:53:22.294] |  :  .  |  :  .  |  List of 1
[10:53:22.294] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.294] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.294] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.294] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.294] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.294] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:22.294] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5577e93be260> 
[10:53:22.294] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.294] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.294] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.297] |  :  .  |  :  .  |  Not identical
[10:53:22.297] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:22.297] |  :  .  |  :  .  |  :  List of 2
[10:53:22.297] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.297] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.297] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.297] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.297] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.297] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:22.297] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.297] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.297] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.297] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.297] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.297] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:22.297] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5577e93be260> 
[10:53:22.297] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.297] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.302] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:22.302] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:22.302] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:22.302] |  :  .  |  :  .  List of future strategies:
[10:53:22.302] |  :  .  |  :  .  1. sequential:
[10:53:22.302] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:22.302] |  :  .  |  :  .     - tweaked: FALSE
[10:53:22.302] |  :  .  |  :  .     - call: plan(sequential)
[10:53:22.302] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:22.302] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:22.303] |  :  .  |  assign_globals() ...
[10:53:22.303] |  :  .  |  List of 1
[10:53:22.303] |  :  .  |   $ my_fcn:Formal class 'standardGeneric' [package "methods"] with 8 slots
[10:53:22.303] |  :  .  |    .. ..@ .Data     :function (x)  
[10:53:22.303] |  :  .  |    .. ..@ generic   : chr "my_fcn"
[10:53:22.303] |  :  .  |    .. .. ..- attr(*, "package")= chr ".GlobalEnv"
[10:53:22.303] |  :  .  |    .. ..@ package   : chr ".GlobalEnv"
[10:53:22.303] |  :  .  |    .. ..@ group     : list()
[10:53:22.303] |  :  .  |    .. ..@ valueClass: chr(0) 
[10:53:22.303] |  :  .  |    .. ..@ signature : chr "x"
[10:53:22.303] |  :  .  |    .. ..@ default   : NULL
[10:53:22.303] |  :  .  |    .. ..@ skeleton  : language (function (x)  stop(gettextf("invalid call in method dispatch to '%s' (no default method)",  ...
[10:53:22.303] |  :  .  |   - attr(*, "where")=List of 1
[10:53:22.303] |  :  .  |    ..$ my_fcn:<environment: R_EmptyEnv> 
[10:53:22.303] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:22.303] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:53:22.303] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:22.303] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:22.310] |  :  .  |  - reassign environment for ‘my_fcn’ [where=emptyenv()]
[10:53:22.310] |  :  .  |  - copied ‘my_fcn’ to environment
[10:53:22.310] |  :  .  |  assign_globals() ... done
[10:53:22.312] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:22.312] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:22.312] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:22.312] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:22.312] |  :  .  |  :  .  |  :  New stack:
[10:53:22.313] |  :  .  |  :  .  |  :  List of 1
[10:53:22.313] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.313] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.313] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.313] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.313] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.313] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:22.313] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5577e93be260> 
[10:53:22.313] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.313] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.313] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.315] |  :  .  |  :  .  |  :  Old stack:
[10:53:22.316] |  :  .  |  :  .  |  :  List of 1
[10:53:22.316] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.316] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.316] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.316] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.316] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.316] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:22.316] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5577e93be260> 
[10:53:22.316] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.316] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.316] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.318] |  :  .  |  :  .  |  :  Identical
[10:53:22.318] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:22.319] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:22.319] |  :  .  |  :  .  |  List of future strategies:
[10:53:22.319] |  :  .  |  :  .  |  1. sequential:
[10:53:22.319] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:22.319] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:22.319] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:22.319] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:22.319] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:22.319] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:22.320] |  :  .  |  SequentialFuture started (and completed)
[10:53:22.320] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:22.320] |  :  Launching futures ... done
[10:53:22.320] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:22.320] |  Using SequentialFutureBackend ... done
[10:53:22.320] run() for Future (‘SequentialFuture’) ... done
new("standardGeneric", .Data = function (x) 
standardGeneric("my_fcn"), generic = "my_fcn", package = ".GlobalEnv", 
    group = list(), valueClass = character(0), signature = "x", 
    default = NULL, skeleton = (function (x) 
    stop(gettextf("invalid call in method dispatch to '%s' (no default method)", 
        "my_fcn"), domain = NA))(x))
attr(,"generic")
[1] "my_fcn"
attr(,"generic")attr(,"package")
[1] ".GlobalEnv"
attr(,"package")
[1] ".GlobalEnv"
attr(,"group")
list()
attr(,"valueClass")
character(0)
attr(,"signature")
[1] "x"
attr(,"default")
`\001NULL\001`
attr(,"skeleton")
(function (x) 
stop(gettextf("invalid call in method dispatch to '%s' (no default method)", 
    "my_fcn"), domain = NA))(x)
attr(,"class")
[1] "standardGeneric"
attr(,"class")attr(,"package")
[1] "methods"
[10:53:22.321] getGlobalsAndPackages() ...
[10:53:22.321] |  Searching for globals ...
[10:53:22.322] |  :  globals found: [3] ‘{’, ‘my_fcn’, ‘standardGeneric’
[10:53:22.322] |  Searching for globals ... DONE
[10:53:22.323] |  Resolving globals: FALSE
[10:53:22.323] |  Search for packages associated with the globals ...
[10:53:22.323] |  :  Packages associated with globals: [1] ‘base’
[10:53:22.323] |  :  Packages: [1] ‘base’
[10:53:22.323] |  Search for packages associated with the globals ... DONE
[10:53:22.323] |  Packages after dropping 'base': [0] 
[10:53:22.323] |  globals: [1] ‘my_fcn’
[10:53:22.323] |  packages: [0] 
[10:53:22.324] getGlobalsAndPackages() ... done
[10:53:22.324] run() for Future (‘Future’) ...
[10:53:22.324] |  state: ‘created’
[10:53:22.324] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:22.324] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:22.324] |  Using SequentialFutureBackend ...
[10:53:22.324] |  :  Launching futures ...
[10:53:22.324] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:22.325] |  :  .  |  getFutureData() ...
[10:53:22.325] |  :  .  |  :  getFutureCore() ...
[10:53:22.325] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:22.325] |  :  .  |  :  getFutureCore() ... done
[10:53:22.325] |  :  .  |  :  getFutureCapture() ...
[10:53:22.325] |  :  .  |  :  getFutureCapture() ... done
[10:53:22.325] |  :  .  |  :  getFutureContext() ...
[10:53:22.325] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:22.325] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:22.325] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:22.326] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:22.326] |  :  .  |  :  getFutureContext() ... done
[10:53:22.326] |  :  .  |  getFutureData() ... done
[10:53:22.326] |  :  .  |  attachPackages() ...
[10:53:22.326] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:22.326] |  :  .  |  attachPackages() ... DONE
[10:53:22.328] |  :  .  |  attachPackages() ...
[10:53:22.328] |  :  .  |  :  packages: [n=0] 
[10:53:22.328] |  :  .  |  attachPackages() ... DONE
[10:53:22.328] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:22.328] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:22.328] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:22.329] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:22.329] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:22.329] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:22.329] |  :  .  |  :  .  |  New stack:
[10:53:22.329] |  :  .  |  :  .  |  List of 1
[10:53:22.329] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.329] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.329] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.329] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.329] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.329] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:22.329] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.331] |  :  .  |  :  .  |  Old stack:
[10:53:22.331] |  :  .  |  :  .  |  List of 1
[10:53:22.331] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.331] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.331] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.331] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.331] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.331] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:22.331] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5577e93be260> 
[10:53:22.331] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.331] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.331] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.334] |  :  .  |  :  .  |  Not identical
[10:53:22.334] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:22.334] |  :  .  |  :  .  |  :  List of 2
[10:53:22.334] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.334] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.334] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.334] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.334] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.334] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:22.334] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.334] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.334] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.334] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.334] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.334] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:22.334] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5577e93be260> 
[10:53:22.334] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.334] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.339] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:22.339] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:22.339] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:22.339] |  :  .  |  :  .  List of future strategies:
[10:53:22.339] |  :  .  |  :  .  1. sequential:
[10:53:22.339] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:22.339] |  :  .  |  :  .     - tweaked: FALSE
[10:53:22.339] |  :  .  |  :  .     - call: plan(sequential)
[10:53:22.340] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:22.340] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:22.340] |  :  .  |  assign_globals() ...
[10:53:22.340] |  :  .  |  List of 1
[10:53:22.340] |  :  .  |   $ my_fcn:Formal class 'standardGeneric' [package "methods"] with 8 slots
[10:53:22.340] |  :  .  |    .. ..@ .Data     :function (x)  
[10:53:22.340] |  :  .  |    .. ..@ generic   : chr "my_fcn"
[10:53:22.340] |  :  .  |    .. .. ..- attr(*, "package")= chr ".GlobalEnv"
[10:53:22.340] |  :  .  |    .. ..@ package   : chr ".GlobalEnv"
[10:53:22.340] |  :  .  |    .. ..@ group     : list()
[10:53:22.340] |  :  .  |    .. ..@ valueClass: chr(0) 
[10:53:22.340] |  :  .  |    .. ..@ signature : chr "x"
[10:53:22.340] |  :  .  |    .. ..@ default   : NULL
[10:53:22.340] |  :  .  |    .. ..@ skeleton  : language (function (x)  stop(gettextf("invalid call in method dispatch to '%s' (no default method)",  ...
[10:53:22.340] |  :  .  |   - attr(*, "where")=List of 1
[10:53:22.340] |  :  .  |    ..$ my_fcn:<environment: R_EmptyEnv> 
[10:53:22.340] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:22.340] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:53:22.340] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:22.340] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:22.345] |  :  .  |  - reassign environment for ‘my_fcn’ [where=emptyenv()]
[10:53:22.345] |  :  .  |  - copied ‘my_fcn’ to environment
[10:53:22.345] |  :  .  |  assign_globals() ... done
[10:53:22.349] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:22.349] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:22.349] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:22.349] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:22.349] |  :  .  |  :  .  |  :  New stack:
[10:53:22.349] |  :  .  |  :  .  |  :  List of 1
[10:53:22.349] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.349] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.349] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.349] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.349] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.349] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:22.349] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5577e93be260> 
[10:53:22.349] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.349] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.349] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.352] |  :  .  |  :  .  |  :  Old stack:
[10:53:22.352] |  :  .  |  :  .  |  :  List of 1
[10:53:22.352] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.352] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.352] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.352] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.352] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.352] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:22.352] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5577e93be260> 
[10:53:22.352] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.352] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.352] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.355] |  :  .  |  :  .  |  :  Identical
[10:53:22.355] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:22.355] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:22.355] |  :  .  |  :  .  |  List of future strategies:
[10:53:22.355] |  :  .  |  :  .  |  1. sequential:
[10:53:22.355] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:22.355] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:22.355] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:22.356] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:22.356] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:22.356] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:22.356] |  :  .  |  SequentialFuture started (and completed)
[10:53:22.356] |  :  .  |  signalConditions() ...
[10:53:22.356] |  :  .  |  :  include = ‘immediateCondition’
[10:53:22.356] |  :  .  |  :  exclude = 
[10:53:22.356] |  :  .  |  :  resignal = FALSE
[10:53:22.357] |  :  .  |  :  Number of conditions: 1
[10:53:22.357] |  :  .  |  signalConditions() ... done
[10:53:22.357] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:22.357] |  :  Launching futures ... done
[10:53:22.357] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:22.357] |  Using SequentialFutureBackend ... done
[10:53:22.357] run() for Future (‘SequentialFuture’) ... done
[10:53:22.357] signalConditions() ...
[10:53:22.357] |  include = ‘immediateCondition’
[10:53:22.357] |  exclude = 
[10:53:22.357] |  resignal = FALSE
[10:53:22.358] |  Number of conditions: 1
[10:53:22.358] signalConditions() ... done
[10:53:22.358] Future state: ‘finished’
[10:53:22.358] signalConditions() ...
[10:53:22.358] |  include = ‘condition’
[10:53:22.358] |  exclude = ‘immediateCondition’
[10:53:22.358] |  resignal = TRUE
[10:53:22.358] |  Number of conditions: 1
[10:53:22.358] |  Condition #1: ‘simpleError’, ‘error’, ‘condition’
[10:53:22.358] signalConditions() ... done
<simpleError: unable to find an inherited method for function ‘my_fcn’ for signature ‘x = "numeric"’>
future.globals.keepWhere=FALSE
[10:53:22.359] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:22.359] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:53:22.359] |  :  all.equal() for FutureStrategyList ...
[10:53:22.359] |  :  .  New stack:
[10:53:22.359] |  :  .  List of 1
[10:53:22.359] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.359] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.359] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.359] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.359] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.359] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:53:22.359] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.361] |  :  .  Old stack:
[10:53:22.361] |  :  .  List of 1
[10:53:22.361] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.361] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.361] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.361] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.361] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.361] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:53:22.361] |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5577e93be260> 
[10:53:22.361] |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.361] |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.361] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.364] |  :  .  Not identical
[10:53:22.364] |  :  .  all.equal() for future ...
[10:53:22.364] |  :  .  |  List of 2
[10:53:22.364] |  :  .  |   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.364] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.364] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.364] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.364] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.364] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:22.364] |  :  .  |   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.364] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.364] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.364] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.364] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.364] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:22.364] |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5577e93be260> 
[10:53:22.364] |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.364] |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.370] |  :  .  all.equal() for future ... done
[10:53:22.370] |  :  all.equal() for FutureStrategyList ... done
[10:53:22.370] |  :  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:22.370] |  :  List of future strategies:
[10:53:22.370] |  :  1. sequential:
[10:53:22.370] |  :     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:22.370] |  :     - tweaked: FALSE
[10:53:22.370] |  :     - call: plan(sequential)
[10:53:22.370] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:53:22.370] plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
Type of future: multicore
[10:53:22.371] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:22.371] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:53:22.371] |  :  all.equal() for FutureStrategyList ...
[10:53:22.371] |  :  .  New stack:
[10:53:22.371] |  :  .  List of 1
[10:53:22.371] |  :  .   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:22.371] |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:22.371] |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:22.371] |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:22.371] |  :  .      ...)  
[10:53:22.371] |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.371] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.371] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:22.371] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.373] |  :  .  Old stack:
[10:53:22.373] |  :  .  List of 1
[10:53:22.373] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.373] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.373] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.373] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.373] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.373] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:53:22.373] |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5577e93be260> 
[10:53:22.373] |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.373] |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.373] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.376] |  :  .  Not identical
[10:53:22.376] |  :  .  all.equal() for future ...
[10:53:22.376] |  :  .  |  List of 2
[10:53:22.376] |  :  .  |   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:22.376] |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:22.376] |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:22.376] |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:22.376] |  :  .  |      ...)  
[10:53:22.376] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.376] |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.376] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:22.376] |  :  .  |   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.376] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.376] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.376] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.376] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.376] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:22.376] |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5577e93be260> 
[10:53:22.376] |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.376] |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.380] |  :  .  |  Formals differ
[10:53:22.380] |  :  .  all.equal() for future ... done
[10:53:22.380] |  :  .  Future strategies differ at level 1
[10:53:22.381] |  :  all.equal() for FutureStrategyList ... done
[10:53:22.381] |  :  plan(): Setting new future strategy stack:
[10:53:22.381] |  :  List of future strategies:
[10:53:22.381] |  :  1. multicore:
[10:53:22.381] |  :     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:22.381] |  :     - tweaked: FALSE
[10:53:22.381] |  :     - call: plan(strategy)
[10:53:22.381] |  :  List of 1
[10:53:22.381] |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:22.381] |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:22.381] |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:22.381] |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:22.381] |  :      ...)  
[10:53:22.381] |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.381] |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.381] |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:22.381] |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.384] |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:53:22.384] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:22.384] |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:22.384] |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:22.384] |  :  .  Legacy shutdown of cluster workers ...
[10:53:22.385] |  :  .  |  Stopping existing cluster ...
[10:53:22.385] |  :  .  |  :  No pre-existing cluster. Skipping
[10:53:22.385] |  :  .  |  Stopping existing cluster ... done
[10:53:22.385] |  :  .  Legacy shutdown of cluster workers ... done
[10:53:22.385] |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:53:22.385] |  :  plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ...
[10:53:22.385] |  :  .  function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:22.385] |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:22.385] |  :  .   - attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:22.385] |  :  .   - attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:22.385] |  :  .      ...)  
[10:53:22.385] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.385] |  :  .   - attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.385] |  :  .   - attr(*, "call")= language plan(strategy)
[10:53:22.387] |  :  .  init: NULL
[10:53:22.387] |  :  plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ... done
[10:53:22.387] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:22.387] |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:22.387] |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:22.388] |  :  Backend function: <‘NULL’>
[10:53:22.389] |  :  Backend: <‘MulticoreFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:22.389] |  :  plan(): nbrOfWorkers() = 2
[10:53:22.389] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:53:22.389] plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:22.390] getGlobalsAndPackages() ...
[10:53:22.390] |  Searching for globals ...
[10:53:22.391] |  :  globals found: [3] ‘{’, ‘my_fcn’, ‘standardGeneric’
[10:53:22.391] |  Searching for globals ... DONE
[10:53:22.391] |  Resolving globals: FALSE
[10:53:22.391] |  Search for packages associated with the globals ...
[10:53:22.391] |  :  Packages associated with globals: [1] ‘base’
[10:53:22.392] |  :  Packages: [1] ‘base’
[10:53:22.392] |  Search for packages associated with the globals ... DONE
[10:53:22.392] |  Packages after dropping 'base': [0] 
[10:53:22.392] |  globals: [1] ‘my_fcn’
[10:53:22.392] |  packages: [0] 
[10:53:22.392] getGlobalsAndPackages() ... done
[10:53:22.392] run() for Future (‘Future’) ...
[10:53:22.392] |  state: ‘created’
[10:53:22.393] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:22.393] |  :  makeFutureBackend(<multicore>) ...
[10:53:22.393] |  :  .  Backend function: <‘NULL’>
[10:53:22.403] |  :  .  Backend: <‘MulticoreFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:22.404] |  :  makeFutureBackend(<multicore>) ... done
[10:53:22.404] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:22.404] |  Using MulticoreFutureBackend ...
[10:53:22.404] |  :  Launching futures ...
[10:53:22.404] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:22.404] |  :  .  |  getFutureData() ...
[10:53:22.404] |  :  .  |  :  getFutureCore() ...
[10:53:22.404] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:22.405] |  :  .  |  :  getFutureCore() ... done
[10:53:22.405] |  :  .  |  :  getFutureCapture() ...
[10:53:22.405] |  :  .  |  :  getFutureCapture() ... done
[10:53:22.405] |  :  .  |  :  getFutureContext() ...
[10:53:22.405] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:22.405] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:22.405] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:22.405] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:22.405] |  :  .  |  :  getFutureContext() ... done
[10:53:22.406] |  :  .  |  getFutureData() ... done
[10:53:22.406] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:22.406] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:22.409] |  :  .  |  MulticoreFuture started
[10:53:22.409] |  :  .  |  attachPackages() ...
[10:53:22.409] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:22.410] |  :  Launching futures ... done
[10:53:22.409] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:22.410] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:22.410] |  :  .  |  attachPackages() ... DONE
[10:53:22.410] |  Using MulticoreFutureBackend ... done
[10:53:22.410] |  :  .  |  attachPackages() ...
[10:53:22.410] run() for Future (‘MulticoreFuture’) ... done
[10:53:22.410] |  :  .  |  :  packages: [n=0] 
[10:53:22.411] |  :  .  |  attachPackages() ... DONE
[10:53:22.411] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:22.412] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:22.412] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:22.412] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:22.413] result() for MulticoreFuture ...
[10:53:22.413] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:22.413] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:22.413] |  :  .  |  :  .  |  New stack:
[10:53:22.413] |  :  .  |  :  .  |  List of 1
[10:53:22.413] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.413] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.413] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.413] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.413] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.413] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:22.413] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.417] |  :  .  |  :  .  |  Old stack:
[10:53:22.417] |  :  .  |  :  .  |  List of 1
[10:53:22.417] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:22.417] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:22.417] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:22.417] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:22.417] |  :  .  |  :  .  |      ...)  
[10:53:22.417] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.417] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.417] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:22.417] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5577e93efc80> 
[10:53:22.417] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:22.417] |  :  .  |  :  .  |      ...)  
[10:53:22.417] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.417] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.422] |  :  .  |  :  .  |  Not identical
[10:53:22.422] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:22.423] |  :  .  |  :  .  |  :  List of 2
[10:53:22.423] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.423] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.423] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.423] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.423] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.423] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:22.423] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:22.423] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:22.423] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:22.423] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:22.423] |  :  .  |  :  .  |  :      ...)  
[10:53:22.423] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.423] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.423] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:22.423] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5577e93efc80> 
[10:53:22.423] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:22.423] |  :  .  |  :  .  |  :      ...)  
[10:53:22.423] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.430] |  :  .  |  :  .  |  :  Formals differ
[10:53:22.430] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:22.430] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:22.430] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:22.430] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:22.431] |  :  .  |  :  .  List of future strategies:
[10:53:22.431] |  :  .  |  :  .  1. sequential:
[10:53:22.431] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:22.431] |  :  .  |  :  .     - tweaked: FALSE
[10:53:22.431] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:22.431] |  :  .  |  :  .  List of 1
[10:53:22.431] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.431] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.431] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.431] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.431] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.431] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:22.431] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.438] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:22.439] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:22.439] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:22.439] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:22.439] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:22.439] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:22.440] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:22.440] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:22.440] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:22.440] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:22.441] |  :  .  |  assign_globals() ...
[10:53:22.441] |  :  .  |  List of 1
[10:53:22.441] |  :  .  |   $ my_fcn:Formal class 'standardGeneric' [package "methods"] with 8 slots
[10:53:22.441] |  :  .  |    .. ..@ .Data     :function (x)  
[10:53:22.441] |  :  .  |    .. ..@ generic   : chr "my_fcn"
[10:53:22.441] |  :  .  |    .. .. ..- attr(*, "package")= chr ".GlobalEnv"
[10:53:22.441] |  :  .  |    .. ..@ package   : chr ".GlobalEnv"
[10:53:22.441] |  :  .  |    .. ..@ group     : list()
[10:53:22.441] |  :  .  |    .. ..@ valueClass: chr(0) 
[10:53:22.441] |  :  .  |    .. ..@ signature : chr "x"
[10:53:22.441] |  :  .  |    .. ..@ default   : NULL
[10:53:22.441] |  :  .  |    .. ..@ skeleton  : language (function (x)  stop(gettextf("invalid call in method dispatch to '%s' (no default method)",  ...
[10:53:22.441] |  :  .  |   - attr(*, "where")=List of 1
[10:53:22.441] |  :  .  |    ..$ my_fcn:<environment: R_EmptyEnv> 
[10:53:22.441] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:22.441] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:53:22.441] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:22.441] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:22.447] |  :  .  |  - reassign environment for ‘my_fcn’ [where=emptyenv()]
[10:53:22.447] |  :  .  |  - copied ‘my_fcn’ to environment
[10:53:22.447] |  :  .  |  assign_globals() ... done
[10:53:22.449] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:22.449] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:22.449] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:22.449] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:22.449] |  :  .  |  :  .  |  :  New stack:
[10:53:22.450] |  :  .  |  :  .  |  :  List of 1
[10:53:22.450] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:22.450] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:22.450] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:22.450] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:22.450] |  :  .  |  :  .  |  :      ...)  
[10:53:22.450] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.450] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.450] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:22.450] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5577e93efc80> 
[10:53:22.450] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:22.450] |  :  .  |  :  .  |  :      ...)  
[10:53:22.450] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.450] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.453] |  :  .  |  :  .  |  :  Old stack:
[10:53:22.453] |  :  .  |  :  .  |  :  List of 1
[10:53:22.453] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.453] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.453] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.453] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.453] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.453] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:22.453] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.455] |  :  .  |  :  .  |  :  Not identical
[10:53:22.455] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:22.455] |  :  .  |  :  .  |  :  .  List of 2
[10:53:22.455] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:22.455] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:22.455] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:22.455] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:22.455] |  :  .  |  :  .  |  :  .      ...)  
[10:53:22.455] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.455] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.455] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:22.455] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5577e93efc80> 
[10:53:22.455] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:22.455] |  :  .  |  :  .  |  :  .      ...)  
[10:53:22.455] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.455] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.455] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.455] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.455] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.455] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.455] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:22.461] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:22.461] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:22.461] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:22.461] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:22.462] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:22.462] |  :  .  |  :  .  |  List of future strategies:
[10:53:22.462] |  :  .  |  :  .  |  1. multicore:
[10:53:22.462] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:22.462] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:22.462] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:22.462] |  :  .  |  :  .  |  List of 1
[10:53:22.462] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:22.462] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:22.462] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:22.462] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:22.462] |  :  .  |  :  .  |      ...)  
[10:53:22.462] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.462] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.462] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:22.462] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5577e93efc80> 
[10:53:22.462] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:22.462] |  :  .  |  :  .  |      ...)  
[10:53:22.462] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.462] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.465] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:22.465] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:22.465] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:22.465] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:22.466] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:22.466] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:22.466] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:22.466] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:22.466] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:22.467] |  readImmediateCondition() ...
[10:53:22.467] |    - path: ‘/tmp/RtmpukcHOz/.future/immediateConditions’
[10:53:22.468] |   - Number of RDS files: 0
[10:53:22.468] |  readImmediateCondition() ... DONE
[10:53:22.471] |  result() for MulticoreFuture ...
[10:53:22.471] |  result() for MulticoreFuture ... done
[10:53:22.472] result() for MulticoreFuture ... done
[10:53:22.472] result() for MulticoreFuture ...
[10:53:22.472] result() for MulticoreFuture ... done
new("standardGeneric", .Data = function (x) 
standardGeneric("my_fcn"), generic = "my_fcn", package = ".GlobalEnv", 
    group = list(), valueClass = character(0), signature = "x", 
    default = NULL, skeleton = (function (x) 
    stop(gettextf("invalid call in method dispatch to '%s' (no default method)", 
        "my_fcn"), domain = NA))(x))
attr(,"generic")
[1] "my_fcn"
attr(,"generic")attr(,"package")
[1] ".GlobalEnv"
attr(,"package")
[1] ".GlobalEnv"
attr(,"group")
list()
attr(,"valueClass")
character(0)
attr(,"signature")
[1] "x"
attr(,"default")
`\001NULL\001`
attr(,"skeleton")
(function (x) 
stop(gettextf("invalid call in method dispatch to '%s' (no default method)", 
    "my_fcn"), domain = NA))(x)
attr(,"class")
[1] "standardGeneric"
attr(,"class")attr(,"package")
[1] "methods"
[10:53:22.472] getGlobalsAndPackages() ...
[10:53:22.472] |  Searching for globals ...
[10:53:22.474] |  :  globals found: [3] ‘{’, ‘my_fcn’, ‘standardGeneric’
[10:53:22.475] |  Searching for globals ... DONE
[10:53:22.475] |  Resolving globals: FALSE
[10:53:22.475] |  Search for packages associated with the globals ...
[10:53:22.475] |  :  Packages associated with globals: [1] ‘base’
[10:53:22.476] |  :  Packages: [1] ‘base’
[10:53:22.476] |  Search for packages associated with the globals ... DONE
[10:53:22.476] |  Packages after dropping 'base': [0] 
[10:53:22.476] |  globals: [1] ‘my_fcn’
[10:53:22.476] |  packages: [0] 
[10:53:22.476] getGlobalsAndPackages() ... done
[10:53:22.477] run() for Future (‘Future’) ...
[10:53:22.477] |  state: ‘created’
[10:53:22.477] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:22.477] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:22.477] |  Using MulticoreFutureBackend ...
[10:53:22.477] |  :  Launching futures ...
[10:53:22.477] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:22.478] |  :  .  |  getFutureData() ...
[10:53:22.478] |  :  .  |  :  getFutureCore() ...
[10:53:22.478] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:22.478] |  :  .  |  :  getFutureCore() ... done
[10:53:22.478] |  :  .  |  :  getFutureCapture() ...
[10:53:22.478] |  :  .  |  :  getFutureCapture() ... done
[10:53:22.478] |  :  .  |  :  getFutureContext() ...
[10:53:22.478] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:22.479] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:22.479] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:22.479] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:22.479] |  :  .  |  :  getFutureContext() ... done
[10:53:22.479] |  :  .  |  getFutureData() ... done
[10:53:22.479] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:22.480] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:22.481] |  :  .  |  MulticoreFuture started
[10:53:22.482] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:22.482] |  :  Launching futures ... done
[10:53:22.482] |  :  .  |  attachPackages() ...
[10:53:22.482] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:22.482] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:22.482] |  Using MulticoreFutureBackend ... done
[10:53:22.482] run() for Future (‘MulticoreFuture’) ... done
[10:53:22.483] |  :  .  |  attachPackages() ... DONE
[10:53:22.483] result() for MulticoreFuture ...
[10:53:22.483] |  :  .  |  attachPackages() ...
[10:53:22.483] |  :  .  |  :  packages: [n=0] 
[10:53:22.483] |  :  .  |  attachPackages() ... DONE
[10:53:22.484] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:22.484] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:22.484] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:22.485] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:22.485] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:22.486] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:22.486] |  :  .  |  :  .  |  New stack:
[10:53:22.486] |  :  .  |  :  .  |  List of 1
[10:53:22.486] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.486] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.486] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.486] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.486] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.486] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:22.486] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.495] |  :  .  |  :  .  |  Old stack:
[10:53:22.495] |  :  .  |  :  .  |  List of 1
[10:53:22.495] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:22.495] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:22.495] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:22.495] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:22.495] |  :  .  |  :  .  |      ...)  
[10:53:22.495] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.495] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.495] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:22.495] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5577e93efc80> 
[10:53:22.495] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:22.495] |  :  .  |  :  .  |      ...)  
[10:53:22.495] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.495] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.500] |  :  .  |  :  .  |  Not identical
[10:53:22.500] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:22.501] |  :  .  |  :  .  |  :  List of 2
[10:53:22.501] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.501] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.501] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.501] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.501] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.501] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:22.501] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:22.501] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:22.501] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:22.501] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:22.501] |  :  .  |  :  .  |  :      ...)  
[10:53:22.501] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.501] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.501] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:22.501] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5577e93efc80> 
[10:53:22.501] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:22.501] |  :  .  |  :  .  |  :      ...)  
[10:53:22.501] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.508] |  :  .  |  :  .  |  :  Formals differ
[10:53:22.508] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:22.508] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:22.508] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:22.508] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:22.508] |  :  .  |  :  .  List of future strategies:
[10:53:22.508] |  :  .  |  :  .  1. sequential:
[10:53:22.508] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:22.508] |  :  .  |  :  .     - tweaked: FALSE
[10:53:22.508] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:22.509] |  :  .  |  :  .  List of 1
[10:53:22.509] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.509] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.509] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.509] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.509] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.509] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:22.509] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.512] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:22.512] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:22.513] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:22.513] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:22.513] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:22.513] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:22.513] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:22.514] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:22.514] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:22.514] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:22.514] |  :  .  |  assign_globals() ...
[10:53:22.514] |  :  .  |  List of 1
[10:53:22.514] |  :  .  |   $ my_fcn:Formal class 'standardGeneric' [package "methods"] with 8 slots
[10:53:22.514] |  :  .  |    .. ..@ .Data     :function (x)  
[10:53:22.514] |  :  .  |    .. ..@ generic   : chr "my_fcn"
[10:53:22.514] |  :  .  |    .. .. ..- attr(*, "package")= chr ".GlobalEnv"
[10:53:22.514] |  :  .  |    .. ..@ package   : chr ".GlobalEnv"
[10:53:22.514] |  :  .  |    .. ..@ group     : list()
[10:53:22.514] |  :  .  |    .. ..@ valueClass: chr(0) 
[10:53:22.514] |  :  .  |    .. ..@ signature : chr "x"
[10:53:22.514] |  :  .  |    .. ..@ default   : NULL
[10:53:22.514] |  :  .  |    .. ..@ skeleton  : language (function (x)  stop(gettextf("invalid call in method dispatch to '%s' (no default method)",  ...
[10:53:22.514] |  :  .  |   - attr(*, "where")=List of 1
[10:53:22.514] |  :  .  |    ..$ my_fcn:<environment: R_EmptyEnv> 
[10:53:22.514] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:22.514] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:53:22.514] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:22.514] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:22.522] |  :  .  |  - reassign environment for ‘my_fcn’ [where=emptyenv()]
[10:53:22.522] |  :  .  |  - copied ‘my_fcn’ to environment
[10:53:22.522] |  :  .  |  assign_globals() ... done
[10:53:22.524] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:22.525] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:22.525] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:22.525] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:22.525] |  :  .  |  :  .  |  :  New stack:
[10:53:22.525] |  :  .  |  :  .  |  :  List of 1
[10:53:22.525] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:22.525] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:22.525] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:22.525] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:22.525] |  :  .  |  :  .  |  :      ...)  
[10:53:22.525] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.525] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.525] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:22.525] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5577e93efc80> 
[10:53:22.525] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:22.525] |  :  .  |  :  .  |  :      ...)  
[10:53:22.525] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.525] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.528] |  :  .  |  :  .  |  :  Old stack:
[10:53:22.528] |  :  .  |  :  .  |  :  List of 1
[10:53:22.528] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.528] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.528] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.528] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.528] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.528] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:22.528] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.530] |  :  .  |  :  .  |  :  Not identical
[10:53:22.530] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:22.530] |  :  .  |  :  .  |  :  .  List of 2
[10:53:22.530] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:22.530] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:22.530] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:22.530] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:22.530] |  :  .  |  :  .  |  :  .      ...)  
[10:53:22.530] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.530] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.530] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:22.530] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5577e93efc80> 
[10:53:22.530] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:22.530] |  :  .  |  :  .  |  :  .      ...)  
[10:53:22.530] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.530] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.530] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.530] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.530] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.530] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.530] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:22.535] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:22.535] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:22.535] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:22.535] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:22.535] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:22.535] |  :  .  |  :  .  |  List of future strategies:
[10:53:22.535] |  :  .  |  :  .  |  1. multicore:
[10:53:22.535] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:22.535] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:22.535] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:22.536] |  :  .  |  :  .  |  List of 1
[10:53:22.536] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:22.536] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:22.536] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:22.536] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:22.536] |  :  .  |  :  .  |      ...)  
[10:53:22.536] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.536] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.536] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:22.536] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5577e93efc80> 
[10:53:22.536] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:22.536] |  :  .  |  :  .  |      ...)  
[10:53:22.536] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.536] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.540] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:22.540] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:22.540] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:22.540] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:22.540] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:22.540] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:22.540] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:22.540] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:22.541] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:22.541] |  readImmediateCondition() ...
[10:53:22.542] |    - path: ‘/tmp/RtmpukcHOz/.future/immediateConditions’
[10:53:22.542] |   - Number of RDS files: 0
[10:53:22.542] |  readImmediateCondition() ... DONE
[10:53:22.542] |  result() for MulticoreFuture ...
[10:53:22.542] |  result() for MulticoreFuture ... done
[10:53:22.542] |  signalConditions() ...
[10:53:22.543] |  :  include = ‘immediateCondition’
[10:53:22.543] |  :  exclude = 
[10:53:22.543] |  :  resignal = FALSE
[10:53:22.543] |  :  Number of conditions: 1
[10:53:22.543] |  signalConditions() ... done
[10:53:22.543] result() for MulticoreFuture ... done
[10:53:22.543] result() for MulticoreFuture ...
[10:53:22.544] result() for MulticoreFuture ... done
[10:53:22.544] signalConditions() ...
[10:53:22.544] |  include = ‘immediateCondition’
[10:53:22.544] |  exclude = 
[10:53:22.544] |  resignal = FALSE
[10:53:22.544] |  Number of conditions: 1
[10:53:22.544] signalConditions() ... done
[10:53:22.544] Future state: ‘finished’
[10:53:22.545] result() for MulticoreFuture ...
[10:53:22.547] result() for MulticoreFuture ... done
[10:53:22.547] signalConditions() ...
[10:53:22.547] |  include = ‘condition’
[10:53:22.547] |  exclude = ‘immediateCondition’
[10:53:22.548] |  resignal = TRUE
[10:53:22.548] |  Number of conditions: 1
[10:53:22.548] |  Condition #1: ‘simpleError’, ‘error’, ‘condition’
[10:53:22.548] signalConditions() ... done
<simpleError: unable to find an inherited method for function ‘my_fcn’ for signature ‘x = "numeric"’>
future.globals.keepWhere=FALSE
[10:53:22.548] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:22.549] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:53:22.549] |  :  all.equal() for FutureStrategyList ...
[10:53:22.549] |  :  .  New stack:
[10:53:22.549] |  :  .  List of 1
[10:53:22.549] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.549] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.549] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.549] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.549] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.549] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:53:22.549] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.552] |  :  .  Old stack:
[10:53:22.553] |  :  .  List of 1
[10:53:22.553] |  :  .   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:22.553] |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:22.553] |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:22.553] |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:22.553] |  :  .      ...)  
[10:53:22.553] |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.553] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.553] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:22.553] |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5577e93efc80> 
[10:53:22.553] |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:22.553] |  :  .      ...)  
[10:53:22.553] |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.553] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.556] |  :  .  Not identical
[10:53:22.556] |  :  .  all.equal() for future ...
[10:53:22.557] |  :  .  |  List of 2
[10:53:22.557] |  :  .  |   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.557] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.557] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.557] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.557] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.557] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:22.557] |  :  .  |   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:22.557] |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:22.557] |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:22.557] |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:22.557] |  :  .  |      ...)  
[10:53:22.557] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.557] |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.557] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:22.557] |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5577e93efc80> 
[10:53:22.557] |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:22.557] |  :  .  |      ...)  
[10:53:22.557] |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:22.562] |  :  .  |  Formals differ
[10:53:22.562] |  :  .  all.equal() for future ... done
[10:53:22.562] |  :  .  Future strategies differ at level 1
[10:53:22.563] |  :  all.equal() for FutureStrategyList ... done
[10:53:22.563] |  :  plan(): Setting new future strategy stack:
[10:53:22.563] |  :  List of future strategies:
[10:53:22.563] |  :  1. sequential:
[10:53:22.563] |  :     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:22.563] |  :     - tweaked: FALSE
[10:53:22.563] |  :     - call: plan(sequential)
[10:53:22.563] |  :  List of 1
[10:53:22.563] |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.563] |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.563] |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.563] |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.563] |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.563] |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:22.563] |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.566] |  :  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:53:22.566] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:22.566] |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:22.566] |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:22.567] |  :  .  Legacy shutdown of cluster workers ...
[10:53:22.567] |  :  .  |  Stopping existing cluster ...
[10:53:22.568] |  :  .  |  :  No pre-existing cluster. Skipping
[10:53:22.568] |  :  .  |  Stopping existing cluster ... done
[10:53:22.568] |  :  .  Legacy shutdown of cluster workers ... done
[10:53:22.568] |  :  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:53:22.568] |  :  plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[10:53:22.568] |  :  .  function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.568] |  :  .   - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.568] |  :  .   - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.568] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.568] |  :  .   - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.568] |  :  .   - attr(*, "call")= language plan(sequential)
[10:53:22.571] |  :  .  init: NULL
[10:53:22.571] |  :  plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[10:53:22.571] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:22.571] |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:22.571] |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:22.571] |  :  Backend function: <‘NULL’>
[10:53:22.572] |  :  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:22.572] |  :  plan(): nbrOfWorkers() = 1
[10:53:22.572] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:53:22.572] plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
Type of future: multisession
[10:53:22.572] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:22.572] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:53:22.573] |  :  all.equal() for FutureStrategyList ...
[10:53:22.573] |  :  .  New stack:
[10:53:22.573] |  :  .  List of 1
[10:53:22.573] |  :  .   $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:53:22.573] |  :  .      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.573] |  :  .    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:53:22.573] |  :  .    ..- attr(*, "init")= logi TRUE
[10:53:22.573] |  :  .    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:53:22.573] |  :  .    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:22.573] |  :  .    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:22.573] |  :  .    ..- attr(*, "untweakable")= chr "persistent"
[10:53:22.573] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:22.573] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.575] |  :  .  Old stack:
[10:53:22.576] |  :  .  List of 1
[10:53:22.576] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.576] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.576] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.576] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.576] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.576] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:53:22.576] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.578] |  :  .  Not identical
[10:53:22.578] |  :  .  all.equal() for future ...
[10:53:22.578] |  :  .  |  List of 2
[10:53:22.578] |  :  .  |   $ target :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:53:22.578] |  :  .  |      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.578] |  :  .  |    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:53:22.578] |  :  .  |    ..- attr(*, "init")= logi TRUE
[10:53:22.578] |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:53:22.578] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:22.578] |  :  .  |    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:22.578] |  :  .  |    ..- attr(*, "untweakable")= chr "persistent"
[10:53:22.578] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:22.578] |  :  .  |   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.578] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:22.578] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:22.578] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.578] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:22.578] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:22.582] |  :  .  |  Formals differ
[10:53:22.582] |  :  .  all.equal() for future ... done
[10:53:22.582] |  :  .  Future strategies differ at level 1
[10:53:22.582] |  :  all.equal() for FutureStrategyList ... done
[10:53:22.582] |  :  plan(): Setting new future strategy stack:
[10:53:22.582] |  :  List of future strategies:
[10:53:22.582] |  :  1. multisession:
[10:53:22.582] |  :     - args: function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:22.582] |  :     - tweaked: FALSE
[10:53:22.582] |  :     - call: plan(strategy)
[10:53:22.583] |  :  List of 1
[10:53:22.583] |  :   $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:53:22.583] |  :      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.583] |  :    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:53:22.583] |  :    ..- attr(*, "init")= logi TRUE
[10:53:22.583] |  :    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:53:22.583] |  :    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:22.583] |  :    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:22.583] |  :    ..- attr(*, "untweakable")= chr "persistent"
[10:53:22.583] |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:22.583] |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:22.585] |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:53:22.586] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:22.587] |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:22.587] |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:22.587] |  :  .  Legacy shutdown of cluster workers ...
[10:53:22.587] |  :  .  |  Stopping existing cluster ...
[10:53:22.587] |  :  .  |  :  No pre-existing cluster. Skipping
[10:53:22.587] |  :  .  |  Stopping existing cluster ... done
[10:53:22.587] |  :  .  Legacy shutdown of cluster workers ... done
[10:53:22.587] |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:53:22.587] |  :  plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ...
[10:53:22.588] |  :  .  function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:53:22.588] |  :  .      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:22.588] |  :  .   - attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:53:22.588] |  :  .   - attr(*, "init")= logi TRUE
[10:53:22.588] |  :  .   - attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:53:22.588] |  :  .    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:22.588] |  :  .   - attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:22.588] |  :  .   - attr(*, "untweakable")= chr "persistent"
[10:53:22.588] |  :  .   - attr(*, "call")= language plan(strategy)
[10:53:22.590] |  :  .  init: TRUE
[10:53:22.590] |  :  .  makeFutureBackend(<multisession>) ...
[10:53:22.590] |  :  .  |  Backend function: <‘NULL’>
[10:53:22.592] |  :  .  |  ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ...
[10:53:22.592] |  :  .  |  :  workers: 2
[10:53:22.592] |  :  .  |  :  getCluster() ...
[10:53:22.592] |  :  .  |  :  getCluster() ... done
[10:53:22.592] |  :  .  |  :  Stopping existing cluster ...
[10:53:22.592] |  :  .  |  :  .  No pre-existing cluster. Skipping
[10:53:22.592] |  :  .  |  :  Stopping existing cluster ... done
[10:53:22.592] |  :  .  |  :  Starting new cluster ...
[10:53:22.592] |  :  .  |  :  .  makeCluster(workers, ...) ...
[10:53:22.593] |  :  .  |  :  .  |  Arguments:
[10:53:22.593] |  :  .  |  :  .  |  List of 2
[10:53:22.593] |  :  .  |  :  .  |   $             : int 2
[10:53:22.593] |  :  .  |  :  .  |   $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[10:53:23.096] |  :  .  |  :  .  |  Generated cluster UUID
[10:53:23.096] |  :  .  |  :  .  |  Cluster UUID: ‘e516d1f2ecea3970800550f4042fe18d’
[10:53:23.096] |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:23.099] |  :  .  |  :  .  makeCluster(workers, ...) ... done
[10:53:23.099] |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:23.101] |  :  .  |  :  Starting new cluster ... done
[10:53:23.101] |  :  .  |  :  Number of workers: 2
[10:53:23.101] |  :  .  |  :  Workers UUID: ‘e516d1f2ecea3970800550f4042fe18d’
[10:53:23.101] |  :  .  |  ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ... done
[10:53:23.101] |  :  .  |  Backend: <‘MultisessionFutureBackend’, ‘ClusterFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:23.101] |  :  .  makeFutureBackend(<multisession>) ... done
[10:53:23.101] |  :  plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ... done
[10:53:23.101] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:23.102] |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:53:23.102] |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:23.102] |  :  plan(): nbrOfWorkers() = 2
[10:53:23.102] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:53:23.102] plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:23.102] getGlobalsAndPackages() ...
[10:53:23.102] |  Searching for globals ...
[10:53:23.104] |  :  globals found: [3] ‘{’, ‘my_fcn’, ‘standardGeneric’
[10:53:23.104] |  Searching for globals ... DONE
[10:53:23.104] |  Resolving globals: FALSE
[10:53:23.104] |  Search for packages associated with the globals ...
[10:53:23.104] |  :  Packages associated with globals: [1] ‘base’
[10:53:23.104] |  :  Packages: [1] ‘base’
[10:53:23.104] |  Search for packages associated with the globals ... DONE
[10:53:23.105] |  Packages after dropping 'base': [0] 
[10:53:23.105] |  globals: [1] ‘my_fcn’
[10:53:23.105] |  packages: [0] 
[10:53:23.105] getGlobalsAndPackages() ... done
[10:53:23.105] run() for Future (‘Future’) ...
[10:53:23.105] |  state: ‘created’
[10:53:23.105] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:23.105] |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:23.106] |  Using MultisessionFutureBackend ...
[10:53:23.106] |  :  Launching futures ...
[10:53:23.106] |  :  .  launchFuture() for ClusterFutureBackend ...
[10:53:23.106] |  :  .  |  Workers: [n=2]
[10:53:23.106] |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:23.108] |  :  .  |  FutureRegistry: ‘workers-e516d1f2ecea3970800550f4042fe18d’
[10:53:23.108] |  :  .  |  requestWorker() ...
[10:53:23.108] |  :  .  |  :  requestNode() ...
[10:53:23.108] |  :  .  |  :  .  Number of workers: 2
[10:53:23.108] |  :  .  |  :  .  Polling for a free worker ...
[10:53:23.108] |  :  .  |  :  .  |  FutureRegistry('workers-e516d1f2ecea3970800550f4042fe18d', action = 'list', earlySignal = 0) ...
[10:53:23.108] |  :  .  |  :  .  |  :  Created empty registry ‘workers-e516d1f2ecea3970800550f4042fe18d’
[10:53:23.108] |  :  .  |  :  .  |  :  Listing all futures
[10:53:23.109] |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:53:23.109] |  :  .  |  :  .  |  FutureRegistry('workers-e516d1f2ecea3970800550f4042fe18d', action = 'list', earlySignal = 0) ... done
[10:53:23.109] |  :  .  |  :  .  |  Total time: 0
[10:53:23.109] |  :  .  |  :  .  Polling for a free worker ... done
[10:53:23.109] |  :  .  |  :  .  FutureRegistry('workers-e516d1f2ecea3970800550f4042fe18d', action = 'list', earlySignal = 0) ...
[10:53:23.109] |  :  .  |  :  .  |  Listing all futures
[10:53:23.109] |  :  .  |  :  .  |  Number of registered futures: 0
[10:53:23.109] |  :  .  |  :  .  FutureRegistry('workers-e516d1f2ecea3970800550f4042fe18d', action = 'list', earlySignal = 0) ... done
[10:53:23.109] |  :  .  |  :  .  Index of first available worker: 1
[10:53:23.109] |  :  .  |  :  .  Validate that the worker is functional ...
[10:53:23.172] |  :  .  |  :  .  |  Worker is functional
[10:53:23.172] |  :  .  |  :  .  requestNode() ... done
[10:53:23.172] |  :  .  |  :  .  cluster node index: 1
[10:53:23.172] |  :  .  |  :  requestWorker() ... done
[10:53:23.173] |  :  .  |  :  eraseGlobalEnvironment() ...
[10:53:23.173] |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:53:23.174] |  :  .  |  :  launchFuture() ...
[10:53:23.174] |  :  .  |  :  .  cluster node index: 1
[10:53:23.174] |  :  .  |  :  .  getFutureData() ...
[10:53:23.174] |  :  .  |  :  .  |  getFutureCore() ...
[10:53:23.174] |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:53:23.174] |  :  .  |  :  .  |  getFutureCore() ... done
[10:53:23.174] |  :  .  |  :  .  |  getFutureCapture() ...
[10:53:23.175] |  :  .  |  :  .  |  getFutureCapture() ... done
[10:53:23.175] |  :  .  |  :  .  |  getFutureContext() ...
[10:53:23.175] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:23.175] |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:53:23.175] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:23.175] |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:53:23.175] |  :  .  |  :  .  |  getFutureContext() ... done
[10:53:23.176] |  :  .  |  :  .  getFutureData() ... done
[10:53:23.176] |  :  .  |  :  .  FutureRegistry('workers-e516d1f2ecea3970800550f4042fe18d', action = 'add', earlySignal = 0) ...
[10:53:23.176] |  :  .  |  :  .  |  Appended future to position #1
[10:53:23.176] |  :  .  |  :  .  |  Number of registered futures: 1
[10:53:23.176] |  :  .  |  :  .  FutureRegistry('workers-e516d1f2ecea3970800550f4042fe18d', action = 'add', earlySignal = 0) ... done
[10:53:23.177] |  :  .  |  :  launchFuture() ... done
[10:53:23.177] |  :  .  |  :  MultisessionFuture started
[10:53:23.177] |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:53:23.177] |  :  .  Launching futures ... done
[10:53:23.177] |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:23.177] |  :  Using MultisessionFutureBackend ... done
[10:53:23.177] |  run() for Future (‘MultisessionFuture’) ... done
[10:53:23.178] |  result() for ClusterFuture ...
[10:53:23.178] |  :  assertValidConnection() ...
[10:53:23.178] |  :  .  cluster node index: 1
[10:53:23.179] |  :  assertValidConnection() ... done
[10:53:23.179] |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:53:23.179] |  :  .  cluster node index: 1
[10:53:23.266] |  :  .  [1] TRUE
[10:53:23.267] |  :  .  received data:
[10:53:23.267] |  :  .  List of 5
[10:53:23.267] |  :  .   $ type   : chr "VALUE"
[10:53:23.267] |  :  .   $ value  :List of 13
[10:53:23.267] |  :  .    ..$ value            :Formal class 'standardGeneric' [package "methods"] with 8 slots
[10:53:23.267] |  :  .    .. .. ..@ .Data     :function (x)  
[10:53:23.267] |  :  .    .. .. ..@ generic   : chr "my_fcn"
[10:53:23.267] |  :  .    .. .. .. ..- attr(*, "package")= chr ".GlobalEnv"
[10:53:23.267] |  :  .    .. .. ..@ package   : chr ".GlobalEnv"
[10:53:23.267] |  :  .    .. .. ..@ group     : list()
[10:53:23.267] |  :  .    .. .. ..@ valueClass: chr(0) 
[10:53:23.267] |  :  .    .. .. ..@ signature : chr "x"
[10:53:23.267] |  :  .    .. .. ..@ default   : NULL
[10:53:23.267] |  :  .    .. .. ..@ skeleton  : language (function (x)  stop(gettextf("invalid call in method dispatch to '%s' (no default method)",  ...
[10:53:23.267] |  :  .    ..$ visible          : logi TRUE
[10:53:23.267] |  :  .    ..$ stdout           : chr ""
[10:53:23.267] |  :  .    ..$ conditions       : list()
[10:53:23.267] |  :  .    ..$ rng              : logi FALSE
[10:53:23.267] |  :  .    ..$ misuseGlobalEnv  : NULL
[10:53:23.267] |  :  .    ..$ misuseConnections:List of 3
[10:53:23.267] |  :  .    .. ..$ added   : NULL
[10:53:23.267] |  :  .    .. ..$ removed : NULL
[10:53:23.267] |  :  .    .. ..$ replaced: NULL
[10:53:23.267] |  :  .    ..$ misuseDevices    : NULL
[10:53:23.267] |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:23"
[10:53:23.267] |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:23"
[10:53:23.267] |  :  .    ..$ session_uuid     : chr "d14d76147d31ddd07ba98793797eef92"
[10:53:23.267] |  :  .    .. ..- attr(*, "source")=List of 5
[10:53:23.267] |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:23.267] |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:23.267] |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:23.267] |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:23.267] |  :  .    .. .. ..$ pid   : int 71242
[10:53:23.267] |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:23"
[10:53:23.267] |  :  .    .. .. ..$ random: int 2147483647
[10:53:23.267] |  :  .    ..$ r_info           :List of 4
[10:53:23.267] |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:23.267] |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:53:23.267] |  :  .    .. ..$ os           : chr "unix"
[10:53:23.267] |  :  .    .. ..$ os_name      : chr "Linux"
[10:53:23.267] |  :  .    .. ..$ captures_utf8: logi TRUE
[10:53:23.267] |  :  .    ..$ version          : chr "1.8"
[10:53:23.267] |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:53:23.267] |  :  .   $ success: logi TRUE
[10:53:23.267] |  :  .   $ time   : 'proc_time' Named num [1:5] 0.044 0.006 0.049 0 0
[10:53:23.267] |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:23.267] |  :  .   $ tag    : NULL
[10:53:23.284] |  :  .  Received FutureResult
[10:53:23.284] |  :  .  FutureRegistry('workers-e516d1f2ecea3970800550f4042fe18d', action = 'remove', earlySignal = 0) ...
[10:53:23.284] |  :  .  |  Removed future from position #1
[10:53:23.284] |  :  .  |  Number of registered futures: 0
[10:53:23.284] |  :  .  FutureRegistry('workers-e516d1f2ecea3970800550f4042fe18d', action = 'remove', earlySignal = 0) ... done
[10:53:23.284] |  :  .  Erased future from future backend
[10:53:23.284] |  :  .  result() for ClusterFuture ...
[10:53:23.285] |  :  .  |  result already collected: FutureResult
[10:53:23.285] |  :  .  result() for ClusterFuture ... done
[10:53:23.285] |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:23.285] |  result() for ClusterFuture ... done
[10:53:23.285] |  result() for ClusterFuture ...
[10:53:23.285] |  :  result already collected: FutureResult
[10:53:23.285] |  result() for ClusterFuture ... done
new("standardGeneric", .Data = function (x) 
standardGeneric("my_fcn"), generic = "my_fcn", package = ".GlobalEnv", 
    group = list(), valueClass = character(0), signature = "x", 
    default = NULL, skeleton = (function (x) 
    stop(gettextf("invalid call in method dispatch to '%s' (no default method)", 
        "my_fcn"), domain = NA))(x))
attr(,"generic")
[1] "my_fcn"
attr(,"generic")attr(,"package")
[1] ".GlobalEnv"
attr(,"package")
[1] ".GlobalEnv"
attr(,"group")
list()
attr(,"valueClass")
character(0)
attr(,"signature")
[1] "x"
attr(,"default")
`\001NULL\001`
attr(,"skeleton")
(function (x) 
stop(gettextf("invalid call in method dispatch to '%s' (no default method)", 
    "my_fcn"), domain = NA))(x)
attr(,"class")
[1] "standardGeneric"
attr(,"class")attr(,"package")
[1] "methods"
[10:53:23.286] |  getGlobalsAndPackages() ...
[10:53:23.286] |  :  Searching for globals ...
[10:53:23.288] |  :  .  globals found: [3] ‘{’, ‘my_fcn’, ‘standardGeneric’
[10:53:23.288] |  :  Searching for globals ... DONE
[10:53:23.288] |  :  Resolving globals: FALSE
[10:53:23.288] |  :  Search for packages associated with the globals ...
[10:53:23.288] |  :  .  Packages associated with globals: [1] ‘base’
[10:53:23.289] |  :  .  Packages: [1] ‘base’
[10:53:23.289] |  :  Search for packages associated with the globals ... DONE
[10:53:23.289] |  :  Packages after dropping 'base': [0] 
[10:53:23.289] |  :  globals: [1] ‘my_fcn’
[10:53:23.289] |  :  packages: [0] 
[10:53:23.289] |  getGlobalsAndPackages() ... done
[10:53:23.290] |  run() for Future (‘Future’) ...
[10:53:23.290] |  :  state: ‘created’
[10:53:23.290] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:23.290] |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:23.290] |  :  Using MultisessionFutureBackend ...
[10:53:23.290] |  :  .  Launching futures ...
[10:53:23.290] |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:53:23.291] |  :  .  |  :  Workers: [n=2]
[10:53:23.291] |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:23.293] |  :  .  |  :  FutureRegistry: ‘workers-e516d1f2ecea3970800550f4042fe18d’
[10:53:23.293] |  :  .  |  :  requestWorker() ...
[10:53:23.293] |  :  .  |  :  .  requestNode() ...
[10:53:23.293] |  :  .  |  :  .  |  Number of workers: 2
[10:53:23.293] |  :  .  |  :  .  |  Polling for a free worker ...
[10:53:23.293] |  :  .  |  :  .  |  :  FutureRegistry('workers-e516d1f2ecea3970800550f4042fe18d', action = 'list', earlySignal = 0) ...
[10:53:23.293] |  :  .  |  :  .  |  :  .  Listing all futures
[10:53:23.294] |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:53:23.294] |  :  .  |  :  .  |  :  FutureRegistry('workers-e516d1f2ecea3970800550f4042fe18d', action = 'list', earlySignal = 0) ... done
[10:53:23.294] |  :  .  |  :  .  |  :  Total time: 0
[10:53:23.294] |  :  .  |  :  .  |  Polling for a free worker ... done
[10:53:23.294] |  :  .  |  :  .  |  FutureRegistry('workers-e516d1f2ecea3970800550f4042fe18d', action = 'list', earlySignal = 0) ...
[10:53:23.294] |  :  .  |  :  .  |  :  Listing all futures
[10:53:23.294] |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:53:23.294] |  :  .  |  :  .  |  FutureRegistry('workers-e516d1f2ecea3970800550f4042fe18d', action = 'list', earlySignal = 0) ... done
[10:53:23.295] |  :  .  |  :  .  |  Index of first available worker: 1
[10:53:23.295] |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:53:23.334] |  :  .  |  :  .  |  :  Worker is functional
[10:53:23.334] |  :  .  |  :  .  |  requestNode() ... done
[10:53:23.334] |  :  .  |  :  .  |  cluster node index: 1
[10:53:23.334] |  :  .  |  :  .  requestWorker() ... done
[10:53:23.335] |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:53:23.335] |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:53:23.335] |  :  .  |  :  .  launchFuture() ...
[10:53:23.335] |  :  .  |  :  .  |  cluster node index: 1
[10:53:23.335] |  :  .  |  :  .  |  getFutureData() ...
[10:53:23.335] |  :  .  |  :  .  |  :  getFutureCore() ...
[10:53:23.336] |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:23.336] |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:53:23.336] |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:53:23.336] |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:53:23.336] |  :  .  |  :  .  |  :  getFutureContext() ...
[10:53:23.336] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:23.336] |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:23.337] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:23.337] |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:23.337] |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:53:23.337] |  :  .  |  :  .  |  getFutureData() ... done
[10:53:23.337] |  :  .  |  :  .  |  FutureRegistry('workers-e516d1f2ecea3970800550f4042fe18d', action = 'add', earlySignal = 0) ...
[10:53:23.337] |  :  .  |  :  .  |  :  Appended future to position #1
[10:53:23.338] |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:53:23.338] |  :  .  |  :  .  |  FutureRegistry('workers-e516d1f2ecea3970800550f4042fe18d', action = 'add', earlySignal = 0) ... done
[10:53:23.338] |  :  .  |  :  .  launchFuture() ... done
[10:53:23.338] |  :  .  |  :  .  MultisessionFuture started
[10:53:23.338] |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:53:23.338] |  :  .  |  Launching futures ... done
[10:53:23.338] |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:23.338] |  :  .  Using MultisessionFutureBackend ... done
[10:53:23.339] |  :  run() for Future (‘MultisessionFuture’) ... done
[10:53:23.339] |  :  result() for ClusterFuture ...
[10:53:23.339] |  :  .  assertValidConnection() ...
[10:53:23.339] |  :  .  |  cluster node index: 1
[10:53:23.339] |  :  .  assertValidConnection() ... done
[10:53:23.340] |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:53:23.340] |  :  .  |  cluster node index: 1
[10:53:23.383] |  :  .  |  [1] TRUE
[10:53:23.383] |  :  .  |  received data:
[10:53:23.383] |  :  .  |  List of 5
[10:53:23.383] |  :  .  |   $ type   : chr "VALUE"
[10:53:23.383] |  :  .  |   $ value  :List of 13
[10:53:23.383] |  :  .  |    ..$ value            : NULL
[10:53:23.383] |  :  .  |    ..$ visible          : logi TRUE
[10:53:23.383] |  :  .  |    ..$ stdout           : chr ""
[10:53:23.383] |  :  .  |    ..$ conditions       :List of 1
[10:53:23.383] |  :  .  |    .. ..$ :List of 5
[10:53:23.383] |  :  .  |    .. .. ..$ condition:List of 2
[10:53:23.383] |  :  .  |    .. .. .. ..$ message: chr "unable to find an inherited method for function ‘my_fcn’ for signature ‘x = \"numeric\"’"
[10:53:23.383] |  :  .  |    .. .. .. ..$ call   : NULL
[10:53:23.383] |  :  .  |    .. .. .. ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
[10:53:23.383] |  :  .  |    .. .. ..$ calls    :List of 11
[10:53:23.383] |  :  .  |    .. .. .. ..$ : language eval(expr, envir = globalenv())
[10:53:23.383] |  :  .  |    .. .. .. ..$ : language eval(expr, envir = globalenv())
[10:53:23.383] |  :  .  |    .. .. .. ..$ : language local({     { ...
[10:53:23.383] |  :  .  |    .. .. .. ..$ : language eval.parent(substitute(eval(quote(expr), envir)))
[10:53:23.383] |  :  .  |    .. .. .. ..$ : language eval(expr, p)
[10:53:23.383] |  :  .  |    .. .. .. ..$ : language eval(expr, p)
[10:53:23.383] |  :  .  |    .. .. .. ..$ : language eval(quote({     { ...
[10:53:23.383] |  :  .  |    .. .. .. ..$ : language eval(quote({     { ...
[10:53:23.383] |  :  .  |    .. .. .. ..$ : language my_fcn(3)
[10:53:23.383] |  :  .  |    .. .. .. ..$ : language (function (classes, fdef, mtable)  { ...
[10:53:23.383] |  :  .  |    .. .. .. ..$ : language stop(gettextf("unable to find an inherited method for function %s for signature %s",      sQuote(fdef@generic), s| __truncated__
[10:53:23.383] |  :  .  |    .. .. ..$ session  :List of 6
[10:53:23.383] |  :  .  |    .. .. .. ..$ r         :List of 14
[10:53:23.383] |  :  .  |    .. .. .. .. ..$ platform      : chr "x86_64-pc-linux-gnu"
[10:53:23.383] |  :  .  |    .. .. .. .. ..$ arch          : chr "x86_64"
[10:53:23.383] |  :  .  |    .. .. .. .. ..$ os            : chr "linux-gnu"
[10:53:23.383] |  :  .  |    .. .. .. .. ..$ system        : chr "x86_64, linux-gnu"
[10:53:23.383] |  :  .  |    .. .. .. .. ..$ status        : chr ""
[10:53:23.383] |  :  .  |    .. .. .. .. ..$ major         : chr "4"
[10:53:23.383] |  :  .  |    .. .. .. .. ..$ minor         : chr "5.0"
[10:53:23.383] |  :  .  |    .. .. .. .. ..$ year          : chr "2025"
[10:53:23.383] |  :  .  |    .. .. .. .. ..$ month         : chr "04"
[10:53:23.383] |  :  .  |    .. .. .. .. ..$ day           : chr "11"
[10:53:23.383] |  :  .  |    .. .. .. .. ..$ svn rev       : chr "88135"
[10:53:23.383] |  :  .  |    .. .. .. .. ..$ language      : chr "R"
[10:53:23.383] |  :  .  |    .. .. .. .. ..$ version.string: chr "R version 4.5.0 (2025-04-11)"
[10:53:23.383] |  :  .  |    .. .. .. .. ..$ nickname      : chr "How About a Twenty-Six"
[10:53:23.383] |  :  .  |    .. .. .. ..$ locale    : chr "LC_CTYPE=en_US.UTF-8;LC_NUMERIC=C;LC_TIME=en_US.UTF-8;LC_COLLATE=en_US.UTF-8;LC_MONETARY=en_US.UTF-8;LC_MESSAGE"| __truncated__
[10:53:23.383] |  :  .  |    .. .. .. ..$ rngkind   : chr [1:3] "Mersenne-Twister" "Inversion" "Rejection"
[10:53:23.383] |  :  .  |    .. .. .. ..$ namespaces: chr [1:16] "compiler" "parallelly" "graphics" "tools" ...
[10:53:23.383] |  :  .  |    .. .. .. ..$ search    : chr [1:10] ".GlobalEnv" "package:future" "package:stats" "package:graphics" ...
[10:53:23.383] |  :  .  |    .. .. .. ..$ system    : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:23.383] |  :  .  |    .. .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:23.383] |  :  .  |    .. .. ..$ timestamp: POSIXct[1:1], format: "2025-05-06 10:53:23"
[10:53:23.383] |  :  .  |    .. .. ..$ signaled : int 0
[10:53:23.383] |  :  .  |    ..$ rng              : logi FALSE
[10:53:23.383] |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:53:23.383] |  :  .  |    ..$ misuseConnections:List of 3
[10:53:23.383] |  :  .  |    .. ..$ added   : NULL
[10:53:23.383] |  :  .  |    .. ..$ removed : NULL
[10:53:23.383] |  :  .  |    .. ..$ replaced: NULL
[10:53:23.383] |  :  .  |    ..$ misuseDevices    : NULL
[10:53:23.383] |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:23"
[10:53:23.383] |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:23"
[10:53:23.383] |  :  .  |    ..$ session_uuid     : chr "d14d76147d31ddd07ba98793797eef92"
[10:53:23.383] |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:53:23.383] |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:23.383] |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:23.383] |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:23.383] |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:23.383] |  :  .  |    .. .. ..$ pid   : int 71242
[10:53:23.383] |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:23"
[10:53:23.383] |  :  .  |    .. .. ..$ random: int 2147483647
[10:53:23.383] |  :  .  |    ..$ r_info           :List of 4
[10:53:23.383] |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:23.383] |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:53:23.383] |  :  .  |    .. ..$ os           : chr "unix"
[10:53:23.383] |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:53:23.383] |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:53:23.383] |  :  .  |    ..$ version          : chr "1.8"
[10:53:23.383] |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:53:23.383] |  :  .  |   $ success: logi TRUE
[10:53:23.383] |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.005 0 0.005 0 0
[10:53:23.383] |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:23.383] |  :  .  |   $ tag    : NULL
[10:53:23.411] |  :  .  |  Received FutureResult
[10:53:23.411] |  :  .  |  FutureRegistry('workers-e516d1f2ecea3970800550f4042fe18d', action = 'remove', earlySignal = 0) ...
[10:53:23.411] |  :  .  |  :  Removed future from position #1
[10:53:23.411] |  :  .  |  :  Number of registered futures: 0
[10:53:23.411] |  :  .  |  FutureRegistry('workers-e516d1f2ecea3970800550f4042fe18d', action = 'remove', earlySignal = 0) ... done
[10:53:23.411] |  :  .  |  Erased future from future backend
[10:53:23.411] |  :  .  |  result() for ClusterFuture ...
[10:53:23.412] |  :  .  |  :  result already collected: FutureResult
[10:53:23.412] |  :  .  |  result() for ClusterFuture ... done
[10:53:23.412] |  :  .  |  signalConditions() ...
[10:53:23.412] |  :  .  |  :  include = ‘immediateCondition’
[10:53:23.412] |  :  .  |  :  exclude = 
[10:53:23.412] |  :  .  |  :  resignal = FALSE
[10:53:23.412] |  :  .  |  :  Number of conditions: 1
[10:53:23.412] |  :  .  |  signalConditions() ... done
[10:53:23.412] |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:23.412] |  :  result() for ClusterFuture ... done
[10:53:23.412] |  :  result() for ClusterFuture ...
[10:53:23.413] |  :  .  result already collected: FutureResult
[10:53:23.413] |  :  result() for ClusterFuture ... done
[10:53:23.413] |  :  signalConditions() ...
[10:53:23.413] |  :  .  include = ‘immediateCondition’
[10:53:23.413] |  :  .  exclude = 
[10:53:23.413] |  :  .  resignal = FALSE
[10:53:23.413] |  :  .  Number of conditions: 1
[10:53:23.413] |  :  signalConditions() ... done
[10:53:23.413] |  :  Future state: ‘finished’
[10:53:23.413] |  :  result() for ClusterFuture ...
[10:53:23.414] |  :  .  result already collected: FutureResult
[10:53:23.414] |  :  result() for ClusterFuture ... done
[10:53:23.414] |  :  signalConditions() ...
[10:53:23.414] |  :  .  include = ‘condition’
[10:53:23.414] |  :  .  exclude = ‘immediateCondition’
[10:53:23.414] |  :  .  resignal = TRUE
[10:53:23.414] |  :  .  Number of conditions: 1
[10:53:23.414] |  :  .  Condition #1: ‘simpleError’, ‘error’, ‘condition’
[10:53:23.414] |  :  signalConditions() ... done
<simpleError: unable to find an inherited method for function ‘my_fcn’ for signature ‘x = "numeric"’>
future.globals.keepWhere=FALSE
[10:53:23.414] |  :  plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:23.415] |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:53:23.415] |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:23.415] |  :  .  |  :  New stack:
[10:53:23.415] |  :  .  |  :  List of 1
[10:53:23.415] |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:23.415] |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:23.415] |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:23.415] |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:23.415] |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:23.415] |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:23.415] |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:23.417] |  :  .  |  :  Old stack:
[10:53:23.417] |  :  .  |  :  List of 1
[10:53:23.417] |  :  .  |  :   $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:53:23.417] |  :  .  |  :      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:23.417] |  :  .  |  :    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:53:23.417] |  :  .  |  :    ..- attr(*, "init")= chr "done"
[10:53:23.417] |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:53:23.417] |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:23.417] |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:23.417] |  :  .  |  :    ..- attr(*, "untweakable")= chr "persistent"
[10:53:23.417] |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:23.417] |  :  .  |  :    ..- attr(*, "backend")=Classes 'MultisessionFutureBackend', 'ClusterFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5577eaed1b48> 
[10:53:23.417] |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:53:23.417] |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:23.417] |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:23.421] |  :  .  |  :  Not identical
[10:53:23.421] |  :  .  |  :  all.equal() for future ...
[10:53:23.421] |  :  .  |  :  .  List of 2
[10:53:23.421] |  :  .  |  :  .   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:23.421] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:23.421] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:23.421] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:23.421] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:23.421] |  :  .  |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:53:23.421] |  :  .  |  :  .   $ current:function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:53:23.421] |  :  .  |  :  .      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:23.421] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:53:23.421] |  :  .  |  :  .    ..- attr(*, "init")= chr "done"
[10:53:23.421] |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:53:23.421] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:23.421] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:23.421] |  :  .  |  :  .    ..- attr(*, "untweakable")= chr "persistent"
[10:53:23.421] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:23.421] |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MultisessionFutureBackend', 'ClusterFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5577eaed1b48> 
[10:53:23.421] |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:53:23.421] |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:23.426] |  :  .  |  :  .  Formals differ
[10:53:23.426] |  :  .  |  :  all.equal() for future ... done
[10:53:23.426] |  :  .  |  :  Future strategies differ at level 1
[10:53:23.426] |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:23.426] |  :  .  |  plan(): Setting new future strategy stack:
[10:53:23.426] |  :  .  |  List of future strategies:
[10:53:23.426] |  :  .  |  1. sequential:
[10:53:23.426] |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:23.426] |  :  .  |     - tweaked: FALSE
[10:53:23.426] |  :  .  |     - call: plan(sequential)
[10:53:23.427] |  :  .  |  List of 1
[10:53:23.427] |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:23.427] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:23.427] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:23.427] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:23.427] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:23.427] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:23.427] |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:23.429] |  :  .  |  plan(): plan_cleanup(‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:53:23.429] |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:23.429] |  :  .  |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:53:23.429] |  :  .  |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:23.430] |  :  .  |  :  stopWorkers() for MultisessionFutureBackend ...
[10:53:23.430] |  :  .  |  :  .  Interrupt active futures ...
[10:53:23.430] |  :  .  |  :  .  |  Number of futures: 0
[10:53:23.430] |  :  .  |  :  .  Interrupt active futures ... done
[10:53:23.430] |  :  .  |  :  .  Clear future registry ...
[10:53:23.431] |  :  .  |  :  .  Clear future registry ... done
[10:53:23.431] |  :  .  |  :  .  Stop cluster workers ...
[10:53:23.431] |  :  .  |  :  .  |  Stopping existing cluster ...
[10:53:23.431] |  :  .  |  :  .  |  :  Cluster to shut down:
[10:53:23.431] |  :  .  |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:23.453] |  :  .  |  :  .  |  :  Stopped cluster: ‘NULL’
[10:53:23.453] |  :  .  |  :  .  |  Stopping existing cluster ... done
[10:53:23.453] |  :  .  |  :  .  Stop cluster workers ... done
[10:53:23.453] |  :  .  |  :  stopWorkers() for MultisessionFutureBackend ... done
[10:53:23.453] |  :  .  |  :  Legacy shutdown of cluster workers ...
[10:53:23.453] |  :  .  |  :  .  Stopping existing cluster ...
[10:53:23.454] |  :  .  |  :  .  |  No pre-existing cluster. Skipping
[10:53:23.454] |  :  .  |  :  .  Stopping existing cluster ... done
[10:53:23.454] |  :  .  |  :  Legacy shutdown of cluster workers ... done
[10:53:23.454] |  :  .  |  plan(): plan_cleanup(‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:53:23.454] |  :  .  |  plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[10:53:23.454] |  :  .  |  :  function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:23.454] |  :  .  |  :   - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:23.454] |  :  .  |  :   - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:23.454] |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:23.454] |  :  .  |  :   - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:23.454] |  :  .  |  :   - attr(*, "call")= language plan(sequential)
[10:53:23.456] |  :  .  |  :  init: NULL
[10:53:23.456] |  :  .  |  plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[10:53:23.456] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:23.457] |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:23.457] |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:23.457] |  :  .  |  Backend function: <‘NULL’>
[10:53:23.457] |  :  .  |  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:23.457] |  :  .  |  plan(): nbrOfWorkers() = 1
[10:53:23.457] |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:53:23.457] |  :  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done

> message("*** Globals - S4 methods ... DONE")
*** Globals - S4 methods ... DONE
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=0.5s, sys.self=0.05s, elapsed=1s, user.child=0.3s, sys.child=0.4s
Test ‘globals,S4methods’ ... success
> 
