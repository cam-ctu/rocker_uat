
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script inst/testme/test-globals,formulas.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future:::testme("globals,formulas")
Test ‘globals,formulas’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future/testme/test-globals,formulas.R’

> library(future)
[08:08:34.676] Option 'future.startup.script': TRUE
[08:08:34.676] Future startup scripts considered: ‘.future.R’, ‘~/.future.R’
[08:08:34.676] Future startup scripts found: <none>

> library(datasets)

> library(stats)

> message("*** Globals - formulas ...")
*** Globals - formulas ...

> ctl <- c(4.17, 5.58, 5.18, 6.11, 4.5, 4.61, 5.17, 
+     4.53, 5.33, 5.14)

> trt <- c(4.81, 4.17, 4.41, 3.59, 5.87, 3.83, 6.03, 
+     4.89, 4.32, 4.69)

> group <- gl(2, 10, 20, labels = c("Ctl", "Trt"))

> weight <- c(ctl, trt)

> ctl <- trt <- NULL

> fit_i <- lm(weight ~ group - 1)

> print(fit_i)

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  


> x <- c(1, 1, 2, 2, 2)

> tbl_ii <- xtabs(~x)

> print(tbl_ii)
x
1 2 
2 3 

> exprs <- list(a = substitute({
+     lm(dist ~ . - 1, data = cars)
+ }), b = substitute({
+     lm(dist ~ . + 0, data = cars)
+ }), c = substitute({ .... [TRUNCATED] 

> map <- function(.x, .f, ...) {
+     if (inherits(.f, "formula")) {
+         expr <- .f[[-1]]
+         .f <- eval(bquote(function(...) {
+         .... [TRUNCATED] 

> inner_function <- function(x) {
+     x + 1
+ }

> outer_function <- function(x) {
+     map(1:2, ~inner_function(.x))
+ }

> y_iv <- outer_function(1)

> str(y_iv)
List of 2
 $ : num [1:2] 2 3
 $ : num [1:2] 2 3

> for (cores in 1:availCores) {
+     message(sprintf("Testing with %d cores ...", cores))
+     options(mc.cores = cores)
+     message("availableCor ..." ... [TRUNCATED] 
Testing with 1 cores ...
availableCores(): 1
- plan('sequential') ...
[08:08:34.718] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:34.719] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:08:34.719] | : all.equal() for FutureStrategyList ...
[08:08:34.719] | : . New stack:
[08:08:34.719] | : . List of 1
[08:08:34.719] | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.719] | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.719] | : .   ..- attr(*, "init")= logi TRUE
[08:08:34.719] | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.719] | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.719] | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.719] | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:34.719] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:34.722] | : . Old stack:
[08:08:34.722] | : . List of 1
[08:08:34.722] | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.722] | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.722] | : .   ..- attr(*, "init")= logi TRUE
[08:08:34.722] | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.722] | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.722] | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.722] | : .   ..- attr(*, "call")= language plan(sequential)
[08:08:34.722] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:34.724] | : . Not identical
[08:08:34.724] | : . all.equal() for future ...
[08:08:34.724] | : . ' List of 2
[08:08:34.724] | : . '  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.724] | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.724] | : . '   ..- attr(*, "init")= logi TRUE
[08:08:34.724] | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.724] | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.724] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.724] | : . '   ..- attr(*, "call")= language plan(strategy)
[08:08:34.724] | : . '  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.724] | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.724] | : . '   ..- attr(*, "init")= logi TRUE
[08:08:34.724] | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.724] | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.724] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.724] | : . '   ..- attr(*, "call")= language plan(sequential)
[08:08:34.729] | : . all.equal() for future ... done
[08:08:34.729] | : all.equal() for FutureStrategyList ... done
[08:08:34.729] | : plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:34.729] | : List of future strategies:
[08:08:34.729] | : 1. sequential:
[08:08:34.729] | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:34.729] | :    - tweaked: FALSE
[08:08:34.729] | :    - call: plan(sequential)
[08:08:34.730] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[08:08:34.730] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
- lm(<formula>) ...
[08:08:34.730] future(..., label = NULL) ...
[08:08:34.730] | lazy: FALSE
[08:08:34.730] | stdout: TRUE
[08:08:34.730] | conditions: [n=1] ‘condition’
[08:08:34.730] | gc: FALSE
[08:08:34.730] | earlySignal: FALSE
[08:08:34.731] | getGlobalsAndPackages() ...
[08:08:34.731] | : Searching for globals ...
[08:08:34.749] | : . globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[08:08:34.750] | : Searching for globals ... done
[08:08:34.750] | : Resolving globals: FALSE
[08:08:34.750] | : Search for packages associated with the globals ...
[08:08:34.750] | : . Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:34.751] | : . Packages: [2] ‘base’, ‘stats’
[08:08:34.751] | : Search for packages associated with the globals ... done
[08:08:34.751] | : Packages after dropping 'base': [1] ‘stats’
[08:08:34.751] | : Packages after dropping non-attached packages: [1] ‘stats’
[08:08:34.751] | : globals: [2] ‘weight’, ‘group’
[08:08:34.751] | : packages: [1] ‘stats’
[08:08:34.751] | getGlobalsAndPackages() ... done
[08:08:34.752] | run() for ‘Future’ (<unnamed-1>) ...
[08:08:34.752] | : state: ‘created’
[08:08:34.752] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:34.752] | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:34.752] | : . ' function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.752] | : . '  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.752] | : . '  - attr(*, "init")= logi TRUE
[08:08:34.752] | : . '  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.752] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.752] | : . '  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.752] | : . '  - attr(*, "call")= language plan(sequential)
[08:08:34.755] | : . ' init: TRUE
[08:08:34.756] | : . ' makeFutureBackend(<sequential>) ...
[08:08:34.756] | : . ' , Backend function: <‘NULL’>
[08:08:34.756] | : . ' , Evaluator tweak arguments: [n=0]
[08:08:34.756] | : . ' ,  list()
[08:08:34.756] | : . ' , Evaluator formal arguments: [n=2]
[08:08:34.756] | : . ' ,  list()
[08:08:34.757] | : . ' , Backend factory arguments: [n=2]
[08:08:34.757] | : . ' , Dotted pair list of 2
[08:08:34.757] | : . ' ,  $ gc         : logi FALSE
[08:08:34.757] | : . ' ,  $ earlySignal: logi FALSE
[08:08:34.758] | : . ' , Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:34.758] | : . ' makeFutureBackend(<sequential>) ... done
[08:08:34.758] | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:34.758] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:34.758] | : Using SequentialFutureBackend ...
[08:08:34.758] | : . Number of futures since start: 0 (0 created, 0 launched, 0 finished)
[08:08:34.759] | : . Launching futures ...
[08:08:34.759] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:34.759] | : . ' , getFutureData() ...
[08:08:34.759] | : . ' , ; getFutureCore() ...
[08:08:34.759] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘stats’
[08:08:34.759] | : . ' , ; getFutureCore() ... done
[08:08:34.759] | : . ' , ; getFutureCapture() ...
[08:08:34.760] | : . ' , ; getFutureCapture() ... done
[08:08:34.760] | : . ' , ; getFutureContext() ...
[08:08:34.760] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:34.760] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:34.760] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:34.760] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:34.760] | : . ' , ; getFutureContext() ... done
[08:08:34.760] | : . ' , getFutureData() ... done
[08:08:34.763] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:34.763] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:34.763] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:34.763] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:34.764] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:34.764] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:34.764] | : . ' , ; ` | New stack:
[08:08:34.764] | : . ' , ; ` | List of 1
[08:08:34.764] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.764] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.764] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:34.764] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.764] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.764] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.764] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:34.764] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:34.766] | : . ' , ; ` | Old stack:
[08:08:34.766] | : . ' , ; ` | List of 1
[08:08:34.766] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.766] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.766] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:34.766] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.766] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.766] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.766] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:34.766] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:34.766] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.766] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.766] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:34.769] | : . ' , ; ` | Not identical
[08:08:34.770] | : . ' , ; ` | all.equal() for future ...
[08:08:34.770] | : . ' , ; ` | : List of 2
[08:08:34.770] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.770] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.770] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:34.770] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.770] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.770] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.770] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:34.770] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.770] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.770] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:34.770] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.770] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.770] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.770] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:34.770] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:34.770] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.770] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.775] | : . ' , ; ` | all.equal() for future ... done
[08:08:34.775] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:34.775] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:34.775] | : . ' , ; ` List of future strategies:
[08:08:34.775] | : . ' , ; ` 1. sequential:
[08:08:34.775] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:34.775] | : . ' , ; `    - tweaked: FALSE
[08:08:34.775] | : . ' , ; `    - call: plan(sequential)
[08:08:34.775] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:34.776] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:34.776] | : . ' , assign_globals() ...
[08:08:34.777] | : . ' , List of 2
[08:08:34.777] | : . ' ,  $ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[08:08:34.777] | : . ' ,  $ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[08:08:34.777] | : . ' ,  - attr(*, "where")=List of 2
[08:08:34.777] | : . ' ,   ..$ weight:<environment: R_GlobalEnv> 
[08:08:34.777] | : . ' ,   ..$ group :<environment: R_GlobalEnv> 
[08:08:34.777] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:34.777] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:34.777] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:34.777] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:34.780] | : . ' , - copied ‘weight’ to environment
[08:08:34.780] | : . ' , - copied ‘group’ to environment
[08:08:34.780] | : . ' , assign_globals() ... done
[08:08:34.783] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:34.783] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:34.783] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:34.783] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:34.783] | : . ' , ; ` | : New stack:
[08:08:34.783] | : . ' , ; ` | : List of 1
[08:08:34.783] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.783] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.783] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:34.783] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.783] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.783] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.783] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:34.783] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:34.783] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.783] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.783] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:34.786] | : . ' , ; ` | : Old stack:
[08:08:34.787] | : . ' , ; ` | : List of 1
[08:08:34.787] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.787] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.787] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:34.787] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.787] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.787] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.787] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:34.787] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:34.787] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.787] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.787] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:34.790] | : . ' , ; ` | : Identical
[08:08:34.790] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:34.790] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:34.790] | : . ' , ; ` | List of future strategies:
[08:08:34.790] | : . ' , ; ` | 1. sequential:
[08:08:34.790] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:34.790] | : . ' , ; ` |    - tweaked: FALSE
[08:08:34.790] | : . ' , ; ` |    - call: plan(sequential)
[08:08:34.790] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:34.790] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:34.790] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:34.793] | : . ' , SequentialFuture started (and completed)
[08:08:34.794] | : . ' , signalConditions() ...
[08:08:34.794] | : . ' , ; include = ‘immediateCondition’
[08:08:34.794] | : . ' , ; exclude = 
[08:08:34.794] | : . ' , ; resignal = FALSE
[08:08:34.794] | : . ' , ; Number of conditions: 6
[08:08:34.794] | : . ' , ;  int 6
[08:08:34.795] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.795] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.795] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.795] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.795] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.795] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.795] | : . ' , signalConditions() ... done
[08:08:34.795] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:34.796] | : . Launching futures ... done
[08:08:34.796] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:34.796] | : Using SequentialFutureBackend ... done
[08:08:34.796] | run() for ‘Future’ (<unnamed-1>) ... done
[08:08:34.796] future(..., label = NULL) ... done
[08:08:34.797] value() for SequentialFuture (<unnamed-1>) ...
[08:08:34.797] | signalConditions() ...
[08:08:34.798] | : include = ‘immediateCondition’
[08:08:34.798] | : exclude = 
[08:08:34.798] | : resignal = FALSE
[08:08:34.798] | : Number of conditions: 6
[08:08:34.798] | :  int 6
[08:08:34.798] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.798] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.798] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.799] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.799] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.799] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.799] | signalConditions() ... done
[08:08:34.799] | relay stdout ...
[08:08:34.799] | relay stdout ... done
[08:08:34.799] | check for misuse ...
[08:08:34.799] | check for misuse ... done
[08:08:34.799] | relay conditions ...
[08:08:34.799] | : Future state: ‘finished’
[08:08:34.800] | : signalConditions() ...
[08:08:34.800] | : . include = ‘condition’
[08:08:34.800] | : . exclude = ‘immediateCondition’
[08:08:34.800] | : . resignal = TRUE
[08:08:34.800] | : . Number of conditions: 6
[08:08:34.800] | : .  int 6
[08:08:34.800] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.801] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:34.762] | : . ' , attachPackages() ...
[08:08:34.801] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.801] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:34.762] | : . ' , ; packages: [n=1] ‘future’
[08:08:34.801] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.801] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:34.762] | : . ' , attachPackages() ... done
[08:08:34.801] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.801] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:34.762] | : . ' , attachPackages() ...
[08:08:34.801] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.801] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:34.762] | : . ' , ; packages: [n=1] ‘stats’
[08:08:34.802] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.802] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:34.762] | : . ' , attachPackages() ... done
[08:08:34.802] | : signalConditions() ... done
[08:08:34.802] | relay conditions ... done
[08:08:34.802] value() for SequentialFuture (<unnamed-1>) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[08:08:34.804] future(..., label = NULL) ...
[08:08:34.804] | lazy: TRUE
[08:08:34.804] | stdout: TRUE
[08:08:34.804] | conditions: [n=1] ‘condition’
[08:08:34.804] | gc: FALSE
[08:08:34.804] | earlySignal: FALSE
[08:08:34.804] | getGlobalsAndPackages() ...
[08:08:34.804] | : Searching for globals ...
[08:08:34.816] | : . globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[08:08:34.816] | : Searching for globals ... done
[08:08:34.816] | : Resolving globals: FALSE
[08:08:34.817] | : Search for packages associated with the globals ...
[08:08:34.817] | : . Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:34.817] | : . Packages: [2] ‘base’, ‘stats’
[08:08:34.817] | : Search for packages associated with the globals ... done
[08:08:34.817] | : Packages after dropping 'base': [1] ‘stats’
[08:08:34.817] | : Packages after dropping non-attached packages: [1] ‘stats’
[08:08:34.818] | : globals: [2] ‘weight’, ‘group’
[08:08:34.818] | : packages: [1] ‘stats’
[08:08:34.818] | getGlobalsAndPackages() ... done
[08:08:34.818] future(..., label = NULL) ... done
[08:08:34.818] value() for Future (<unnamed-2>) ...
[08:08:34.818] | run() for ‘Future’ (<unnamed-2>) ...
[08:08:34.819] | : state: ‘created’
[08:08:34.819] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:34.819] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:34.819] | : Using SequentialFutureBackend ...
[08:08:34.819] | : . Number of futures since start: 1 (1 created, 1 launched, 1 finished)
[08:08:34.819] | : . Launching futures ...
[08:08:34.819] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:34.819] | : . ' , getFutureData() ...
[08:08:34.819] | : . ' , ; getFutureCore() ...
[08:08:34.820] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘stats’
[08:08:34.820] | : . ' , ; getFutureCore() ... done
[08:08:34.820] | : . ' , ; getFutureCapture() ...
[08:08:34.820] | : . ' , ; getFutureCapture() ... done
[08:08:34.820] | : . ' , ; getFutureContext() ...
[08:08:34.820] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:34.820] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:34.820] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:34.820] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:34.821] | : . ' , ; getFutureContext() ... done
[08:08:34.821] | : . ' , getFutureData() ... done
[08:08:34.822] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:34.822] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:34.822] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:34.822] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:34.822] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:34.823] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:34.823] | : . ' , ; ` | New stack:
[08:08:34.823] | : . ' , ; ` | List of 1
[08:08:34.823] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.823] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.823] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:34.823] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.823] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.823] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.823] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:34.823] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:34.825] | : . ' , ; ` | Old stack:
[08:08:34.825] | : . ' , ; ` | List of 1
[08:08:34.825] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.825] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.825] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:34.825] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.825] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.825] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.825] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:34.825] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:34.825] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.825] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.825] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:34.828] | : . ' , ; ` | Not identical
[08:08:34.828] | : . ' , ; ` | all.equal() for future ...
[08:08:34.828] | : . ' , ; ` | : List of 2
[08:08:34.828] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.828] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.828] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:34.828] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.828] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.828] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.828] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:34.828] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.828] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.828] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:34.828] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.828] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.828] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.828] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:34.828] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:34.828] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.828] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.834] | : . ' , ; ` | all.equal() for future ... done
[08:08:34.834] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:34.834] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:34.835] | : . ' , ; ` List of future strategies:
[08:08:34.835] | : . ' , ; ` 1. sequential:
[08:08:34.835] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:34.835] | : . ' , ; `    - tweaked: FALSE
[08:08:34.835] | : . ' , ; `    - call: plan(sequential)
[08:08:34.835] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:34.835] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:34.835] | : . ' , assign_globals() ...
[08:08:34.835] | : . ' , List of 2
[08:08:34.835] | : . ' ,  $ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[08:08:34.835] | : . ' ,  $ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[08:08:34.835] | : . ' ,  - attr(*, "where")=List of 2
[08:08:34.835] | : . ' ,   ..$ weight:<environment: R_GlobalEnv> 
[08:08:34.835] | : . ' ,   ..$ group :<environment: R_GlobalEnv> 
[08:08:34.835] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:34.835] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:34.835] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:34.835] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:34.838] | : . ' , - copied ‘weight’ to environment
[08:08:34.838] | : . ' , - copied ‘group’ to environment
[08:08:34.839] | : . ' , assign_globals() ... done
[08:08:34.841] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:34.841] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:34.841] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:34.841] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:34.841] | : . ' , ; ` | : New stack:
[08:08:34.841] | : . ' , ; ` | : List of 1
[08:08:34.841] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.841] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.841] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:34.841] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.841] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.841] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.841] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:34.841] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:34.841] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.841] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.841] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:34.844] | : . ' , ; ` | : Old stack:
[08:08:34.844] | : . ' , ; ` | : List of 1
[08:08:34.844] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.844] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.844] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:34.844] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.844] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.844] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.844] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:34.844] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:34.844] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.844] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.844] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:34.847] | : . ' , ; ` | : Identical
[08:08:34.847] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:34.847] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:34.848] | : . ' , ; ` | List of future strategies:
[08:08:34.848] | : . ' , ; ` | 1. sequential:
[08:08:34.848] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:34.848] | : . ' , ; ` |    - tweaked: FALSE
[08:08:34.848] | : . ' , ; ` |    - call: plan(sequential)
[08:08:34.848] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:34.848] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:34.848] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:34.849] | : . ' , SequentialFuture started (and completed)
[08:08:34.850] | : . ' , signalConditions() ...
[08:08:34.850] | : . ' , ; include = ‘immediateCondition’
[08:08:34.850] | : . ' , ; exclude = 
[08:08:34.850] | : . ' , ; resignal = FALSE
[08:08:34.851] | : . ' , ; Number of conditions: 6
[08:08:34.851] | : . ' , ;  int 6
[08:08:34.851] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.851] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.851] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.852] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.852] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.852] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.852] | : . ' , signalConditions() ... done
[08:08:34.852] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:34.852] | : . Launching futures ... done
[08:08:34.852] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:34.852] | : Using SequentialFutureBackend ... done
[08:08:34.852] | run() for ‘Future’ (<unnamed-2>) ... done
[08:08:34.853] | signalConditions() ...
[08:08:34.853] | : include = ‘immediateCondition’
[08:08:34.853] | : exclude = 
[08:08:34.853] | : resignal = FALSE
[08:08:34.853] | : Number of conditions: 6
[08:08:34.853] | :  int 6
[08:08:34.853] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.854] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.854] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.854] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.854] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.854] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.854] | signalConditions() ... done
[08:08:34.854] | relay stdout ...
[08:08:34.854] | relay stdout ... done
[08:08:34.854] | check for misuse ...
[08:08:34.855] | check for misuse ... done
[08:08:34.855] | relay conditions ...
[08:08:34.855] | : Future state: ‘finished’
[08:08:34.855] | : signalConditions() ...
[08:08:34.855] | : . include = ‘condition’
[08:08:34.855] | : . exclude = ‘immediateCondition’
[08:08:34.855] | : . resignal = TRUE
[08:08:34.855] | : . Number of conditions: 6
[08:08:34.855] | : .  int 6
[08:08:34.856] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.856] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:34.821] | : . ' , attachPackages() ...
[08:08:34.856] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.856] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:34.821] | : . ' , ; packages: [n=1] ‘future’
[08:08:34.856] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.856] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:34.821] | : . ' , attachPackages() ... done
[08:08:34.857] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.857] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:34.821] | : . ' , attachPackages() ...
[08:08:34.857] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.857] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:34.821] | : . ' , ; packages: [n=1] ‘stats’
[08:08:34.857] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.857] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:34.822] | : . ' , attachPackages() ... done
[08:08:34.857] | : signalConditions() ... done
[08:08:34.857] | relay conditions ... done
[08:08:34.858] value() for Future (<unnamed-2>) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[08:08:34.860] future(..., label = NULL) ...
[08:08:34.860] | lazy: FALSE
[08:08:34.860] | stdout: TRUE
[08:08:34.860] | conditions: [n=1] ‘condition’
[08:08:34.860] | gc: FALSE
[08:08:34.860] | earlySignal: FALSE
[08:08:34.860] | getGlobalsAndPackages() ...
[08:08:34.861] | : Searching for globals ...
[08:08:34.873] | : . globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[08:08:34.874] | : Searching for globals ... done
[08:08:34.874] | : Resolving globals: FALSE
[08:08:34.874] | : Search for packages associated with the globals ...
[08:08:34.874] | : . Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:34.874] | : . Packages: [2] ‘base’, ‘stats’
[08:08:34.874] | : Search for packages associated with the globals ... done
[08:08:34.875] | : Packages after dropping 'base': [1] ‘stats’
[08:08:34.875] | : Packages after dropping non-attached packages: [1] ‘stats’
[08:08:34.875] | : globals: [2] ‘weight’, ‘group’
[08:08:34.875] | : packages: [1] ‘stats’
[08:08:34.875] | getGlobalsAndPackages() ... done
[08:08:34.875] | run() for ‘Future’ (<unnamed-3>) ...
[08:08:34.875] | : state: ‘created’
[08:08:34.876] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:34.876] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:34.876] | : Using SequentialFutureBackend ...
[08:08:34.876] | : . Number of futures since start: 2 (2 created, 2 launched, 2 finished)
[08:08:34.876] | : . Launching futures ...
[08:08:34.876] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:34.876] | : . ' , getFutureData() ...
[08:08:34.876] | : . ' , ; getFutureCore() ...
[08:08:34.876] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘stats’
[08:08:34.877] | : . ' , ; getFutureCore() ... done
[08:08:34.877] | : . ' , ; getFutureCapture() ...
[08:08:34.877] | : . ' , ; getFutureCapture() ... done
[08:08:34.877] | : . ' , ; getFutureContext() ...
[08:08:34.877] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:34.877] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:34.877] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:34.877] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:34.877] | : . ' , ; getFutureContext() ... done
[08:08:34.877] | : . ' , getFutureData() ... done
[08:08:34.879] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:34.879] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:34.879] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:34.879] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:34.879] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:34.879] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:34.880] | : . ' , ; ` | New stack:
[08:08:34.880] | : . ' , ; ` | List of 1
[08:08:34.880] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.880] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.880] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:34.880] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.880] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.880] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.880] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:34.880] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:34.882] | : . ' , ; ` | Old stack:
[08:08:34.882] | : . ' , ; ` | List of 1
[08:08:34.882] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.882] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.882] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:34.882] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.882] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.882] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.882] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:34.882] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:34.882] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.882] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.882] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:34.886] | : . ' , ; ` | Not identical
[08:08:34.886] | : . ' , ; ` | all.equal() for future ...
[08:08:34.886] | : . ' , ; ` | : List of 2
[08:08:34.886] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.886] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.886] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:34.886] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.886] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.886] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.886] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:34.886] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.886] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.886] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:34.886] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.886] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.886] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.886] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:34.886] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:34.886] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.886] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.891] | : . ' , ; ` | all.equal() for future ... done
[08:08:34.891] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:34.891] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:34.892] | : . ' , ; ` List of future strategies:
[08:08:34.892] | : . ' , ; ` 1. sequential:
[08:08:34.892] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:34.892] | : . ' , ; `    - tweaked: FALSE
[08:08:34.892] | : . ' , ; `    - call: plan(sequential)
[08:08:34.892] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:34.892] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:34.892] | : . ' , assign_globals() ...
[08:08:34.892] | : . ' , List of 2
[08:08:34.892] | : . ' ,  $ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[08:08:34.892] | : . ' ,  $ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[08:08:34.892] | : . ' ,  - attr(*, "where")=List of 2
[08:08:34.892] | : . ' ,   ..$ weight:<environment: R_GlobalEnv> 
[08:08:34.892] | : . ' ,   ..$ group :<environment: R_GlobalEnv> 
[08:08:34.892] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:34.892] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:34.892] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:34.892] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:34.895] | : . ' , - copied ‘weight’ to environment
[08:08:34.896] | : . ' , - copied ‘group’ to environment
[08:08:34.896] | : . ' , assign_globals() ... done
[08:08:34.898] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:34.898] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:34.898] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:34.898] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:34.898] | : . ' , ; ` | : New stack:
[08:08:34.898] | : . ' , ; ` | : List of 1
[08:08:34.898] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.898] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.898] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:34.898] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.898] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.898] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.898] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:34.898] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:34.898] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.898] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.898] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:34.901] | : . ' , ; ` | : Old stack:
[08:08:34.902] | : . ' , ; ` | : List of 1
[08:08:34.902] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.902] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.902] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:34.902] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.902] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.902] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.902] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:34.902] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:34.902] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.902] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.902] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:34.906] | : . ' , ; ` | : Identical
[08:08:34.906] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:34.906] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:34.906] | : . ' , ; ` | List of future strategies:
[08:08:34.906] | : . ' , ; ` | 1. sequential:
[08:08:34.906] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:34.906] | : . ' , ; ` |    - tweaked: FALSE
[08:08:34.906] | : . ' , ; ` |    - call: plan(sequential)
[08:08:34.906] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:34.906] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:34.907] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:34.907] | : . ' , SequentialFuture started (and completed)
[08:08:34.907] | : . ' , signalConditions() ...
[08:08:34.907] | : . ' , ; include = ‘immediateCondition’
[08:08:34.907] | : . ' , ; exclude = 
[08:08:34.907] | : . ' , ; resignal = FALSE
[08:08:34.907] | : . ' , ; Number of conditions: 6
[08:08:34.907] | : . ' , ;  int 6
[08:08:34.908] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.908] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.908] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.908] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.908] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.908] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.909] | : . ' , signalConditions() ... done
[08:08:34.909] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:34.909] | : . Launching futures ... done
[08:08:34.909] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:34.909] | : Using SequentialFutureBackend ... done
[08:08:34.909] | run() for ‘Future’ (<unnamed-3>) ... done
[08:08:34.909] future(..., label = NULL) ... done
[08:08:34.909] value() for SequentialFuture (<unnamed-3>) ...
[08:08:34.909] | signalConditions() ...
[08:08:34.909] | : include = ‘immediateCondition’
[08:08:34.910] | : exclude = 
[08:08:34.910] | : resignal = FALSE
[08:08:34.910] | : Number of conditions: 6
[08:08:34.910] | :  int 6
[08:08:34.910] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.910] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.910] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.911] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.911] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.911] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.911] | signalConditions() ... done
[08:08:34.911] | relay stdout ...
[08:08:34.911] | relay stdout ... done
[08:08:34.911] | check for misuse ...
[08:08:34.911] | check for misuse ... done
[08:08:34.911] | relay conditions ...
[08:08:34.911] | : Future state: ‘finished’
[08:08:34.912] | : signalConditions() ...
[08:08:34.912] | : . include = ‘condition’
[08:08:34.912] | : . exclude = ‘immediateCondition’
[08:08:34.912] | : . resignal = TRUE
[08:08:34.912] | : . Number of conditions: 6
[08:08:34.912] | : .  int 6
[08:08:34.912] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.912] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:34.878] | : . ' , attachPackages() ...
[08:08:34.913] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.913] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:34.878] | : . ' , ; packages: [n=1] ‘future’
[08:08:34.913] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.913] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:34.878] | : . ' , attachPackages() ... done
[08:08:34.913] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.913] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:34.878] | : . ' , attachPackages() ...
[08:08:34.913] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.913] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:34.878] | : . ' , ; packages: [n=1] ‘stats’
[08:08:34.914] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.914] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:34.878] | : . ' , attachPackages() ... done
[08:08:34.914] | : signalConditions() ... done
[08:08:34.914] | relay conditions ... done
[08:08:34.914] value() for SequentialFuture (<unnamed-3>) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[08:08:34.916] future(..., label = NULL) ...
[08:08:34.916] | lazy: FALSE
[08:08:34.916] | stdout: TRUE
[08:08:34.916] | conditions: [n=1] ‘condition’
[08:08:34.916] | gc: FALSE
[08:08:34.916] | earlySignal: FALSE
[08:08:34.916] | getGlobalsAndPackages() ...
[08:08:34.916] | : Searching for globals ...
[08:08:34.928] | : . globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[08:08:34.928] | : Searching for globals ... done
[08:08:34.929] | : Resolving globals: FALSE
[08:08:34.929] | : Search for packages associated with the globals ...
[08:08:34.929] | : . Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:34.929] | : . Packages: [2] ‘base’, ‘stats’
[08:08:34.929] | : Search for packages associated with the globals ... done
[08:08:34.929] | : Packages after dropping 'base': [1] ‘stats’
[08:08:34.930] | : Packages after dropping non-attached packages: [1] ‘stats’
[08:08:34.930] | : globals: [2] ‘weight’, ‘group’
[08:08:34.930] | : packages: [1] ‘stats’
[08:08:34.930] | getGlobalsAndPackages() ... done
[08:08:34.930] | run() for ‘Future’ (<unnamed-4>) ...
[08:08:34.930] | : state: ‘created’
[08:08:34.930] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:34.930] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:34.931] | : Using SequentialFutureBackend ...
[08:08:34.931] | : . Number of futures since start: 3 (3 created, 3 launched, 3 finished)
[08:08:34.931] | : . Launching futures ...
[08:08:34.931] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:34.931] | : . ' , getFutureData() ...
[08:08:34.931] | : . ' , ; getFutureCore() ...
[08:08:34.931] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘stats’
[08:08:34.931] | : . ' , ; getFutureCore() ... done
[08:08:34.931] | : . ' , ; getFutureCapture() ...
[08:08:34.931] | : . ' , ; getFutureCapture() ... done
[08:08:34.932] | : . ' , ; getFutureContext() ...
[08:08:34.932] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:34.932] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:34.932] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:34.932] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:34.932] | : . ' , ; getFutureContext() ... done
[08:08:34.932] | : . ' , getFutureData() ... done
[08:08:34.933] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:34.934] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:34.934] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:34.934] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:34.934] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:34.934] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:34.934] | : . ' , ; ` | New stack:
[08:08:34.935] | : . ' , ; ` | List of 1
[08:08:34.935] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.935] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.935] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:34.935] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.935] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.935] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.935] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:34.935] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:34.938] | : . ' , ; ` | Old stack:
[08:08:34.938] | : . ' , ; ` | List of 1
[08:08:34.938] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.938] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.938] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:34.938] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.938] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.938] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.938] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:34.938] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:34.938] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.938] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.938] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:34.941] | : . ' , ; ` | Not identical
[08:08:34.941] | : . ' , ; ` | all.equal() for future ...
[08:08:34.941] | : . ' , ; ` | : List of 2
[08:08:34.941] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.941] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.941] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:34.941] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.941] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.941] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.941] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:34.941] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.941] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.941] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:34.941] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.941] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.941] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.941] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:34.941] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:34.941] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.941] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.946] | : . ' , ; ` | all.equal() for future ... done
[08:08:34.946] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:34.946] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:34.946] | : . ' , ; ` List of future strategies:
[08:08:34.946] | : . ' , ; ` 1. sequential:
[08:08:34.946] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:34.946] | : . ' , ; `    - tweaked: FALSE
[08:08:34.946] | : . ' , ; `    - call: plan(sequential)
[08:08:34.947] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:34.947] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:34.947] | : . ' , assign_globals() ...
[08:08:34.947] | : . ' , List of 2
[08:08:34.947] | : . ' ,  $ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[08:08:34.947] | : . ' ,  $ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[08:08:34.947] | : . ' ,  - attr(*, "where")=List of 2
[08:08:34.947] | : . ' ,   ..$ weight:<environment: R_GlobalEnv> 
[08:08:34.947] | : . ' ,   ..$ group :<environment: R_GlobalEnv> 
[08:08:34.947] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:34.947] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:34.947] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:34.947] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:34.950] | : . ' , - copied ‘weight’ to environment
[08:08:34.950] | : . ' , - copied ‘group’ to environment
[08:08:34.950] | : . ' , assign_globals() ... done
[08:08:34.953] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:34.953] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:34.953] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:34.953] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:34.953] | : . ' , ; ` | : New stack:
[08:08:34.953] | : . ' , ; ` | : List of 1
[08:08:34.953] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.953] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.953] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:34.953] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.953] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.953] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.953] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:34.953] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:34.953] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.953] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.953] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:34.957] | : . ' , ; ` | : Old stack:
[08:08:34.957] | : . ' , ; ` | : List of 1
[08:08:34.957] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.957] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.957] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:34.957] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.957] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.957] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.957] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:34.957] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:34.957] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.957] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.957] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:34.960] | : . ' , ; ` | : Identical
[08:08:34.960] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:34.960] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:34.960] | : . ' , ; ` | List of future strategies:
[08:08:34.960] | : . ' , ; ` | 1. sequential:
[08:08:34.960] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:34.960] | : . ' , ; ` |    - tweaked: FALSE
[08:08:34.960] | : . ' , ; ` |    - call: plan(sequential)
[08:08:34.960] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:34.960] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:34.961] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:34.961] | : . ' , SequentialFuture started (and completed)
[08:08:34.961] | : . ' , signalConditions() ...
[08:08:34.961] | : . ' , ; include = ‘immediateCondition’
[08:08:34.961] | : . ' , ; exclude = 
[08:08:34.961] | : . ' , ; resignal = FALSE
[08:08:34.961] | : . ' , ; Number of conditions: 6
[08:08:34.961] | : . ' , ;  int 6
[08:08:34.962] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.962] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.962] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.962] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.962] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.962] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.962] | : . ' , signalConditions() ... done
[08:08:34.963] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:34.963] | : . Launching futures ... done
[08:08:34.963] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:34.963] | : Using SequentialFutureBackend ... done
[08:08:34.963] | run() for ‘Future’ (<unnamed-4>) ... done
[08:08:34.963] future(..., label = NULL) ... done
[08:08:34.963] value() for SequentialFuture (<unnamed-4>) ...
[08:08:34.963] | signalConditions() ...
[08:08:34.963] | : include = ‘immediateCondition’
[08:08:34.964] | : exclude = 
[08:08:34.964] | : resignal = FALSE
[08:08:34.964] | : Number of conditions: 6
[08:08:34.964] | :  int 6
[08:08:34.964] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.964] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.964] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.964] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.965] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.965] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.965] | signalConditions() ... done
[08:08:34.965] | relay stdout ...
[08:08:34.965] | relay stdout ... done
[08:08:34.965] | check for misuse ...
[08:08:34.965] | check for misuse ... done
[08:08:34.965] | relay conditions ...
[08:08:34.965] | : Future state: ‘finished’
[08:08:34.966] | : signalConditions() ...
[08:08:34.966] | : . include = ‘condition’
[08:08:34.966] | : . exclude = ‘immediateCondition’
[08:08:34.966] | : . resignal = TRUE
[08:08:34.966] | : . Number of conditions: 6
[08:08:34.966] | : .  int 6
[08:08:34.966] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.966] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:34.932] | : . ' , attachPackages() ...
[08:08:34.967] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.967] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:34.933] | : . ' , ; packages: [n=1] ‘future’
[08:08:34.967] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.967] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:34.933] | : . ' , attachPackages() ... done
[08:08:34.967] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.967] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:34.933] | : . ' , attachPackages() ...
[08:08:34.967] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.967] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:34.933] | : . ' , ; packages: [n=1] ‘stats’
[08:08:34.967] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:34.968] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:34.933] | : . ' , attachPackages() ... done
[08:08:34.968] | : signalConditions() ... done
[08:08:34.968] | relay conditions ... done
[08:08:34.968] value() for SequentialFuture (<unnamed-4>) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[08:08:34.970] future(..., label = NULL) ...
[08:08:34.970] | lazy: TRUE
[08:08:34.971] | stdout: TRUE
[08:08:34.971] | conditions: [n=1] ‘condition’
[08:08:34.971] | gc: FALSE
[08:08:34.971] | earlySignal: FALSE
[08:08:34.971] | getGlobalsAndPackages() ...
[08:08:34.971] | : Searching for globals ...
[08:08:34.983] | : . globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[08:08:34.983] | : Searching for globals ... done
[08:08:34.983] | : Resolving globals: FALSE
[08:08:34.983] | : Search for packages associated with the globals ...
[08:08:34.983] | : . Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:34.984] | : . Packages: [2] ‘base’, ‘stats’
[08:08:34.984] | : Search for packages associated with the globals ... done
[08:08:34.984] | : Packages after dropping 'base': [1] ‘stats’
[08:08:34.984] | : Packages after dropping non-attached packages: [1] ‘stats’
[08:08:34.984] | : globals: [2] ‘weight’, ‘group’
[08:08:34.984] | : packages: [1] ‘stats’
[08:08:34.984] | getGlobalsAndPackages() ... done
[08:08:34.984] future(..., label = NULL) ... done
[08:08:34.985] value() for Future (<unnamed-5>) ...
[08:08:34.985] | run() for ‘Future’ (<unnamed-5>) ...
[08:08:34.985] | : state: ‘created’
[08:08:34.985] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:34.985] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:34.985] | : Using SequentialFutureBackend ...
[08:08:34.985] | : . Number of futures since start: 4 (4 created, 4 launched, 4 finished)
[08:08:34.985] | : . Launching futures ...
[08:08:34.985] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:34.986] | : . ' , getFutureData() ...
[08:08:34.986] | : . ' , ; getFutureCore() ...
[08:08:34.986] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘stats’
[08:08:34.986] | : . ' , ; getFutureCore() ... done
[08:08:34.986] | : . ' , ; getFutureCapture() ...
[08:08:34.986] | : . ' , ; getFutureCapture() ... done
[08:08:34.986] | : . ' , ; getFutureContext() ...
[08:08:34.986] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:34.986] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:34.986] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:34.987] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:34.987] | : . ' , ; getFutureContext() ... done
[08:08:34.987] | : . ' , getFutureData() ... done
[08:08:34.988] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:34.988] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:34.988] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:34.988] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:34.989] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:34.989] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:34.989] | : . ' , ; ` | New stack:
[08:08:34.989] | : . ' , ; ` | List of 1
[08:08:34.989] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.989] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.989] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:34.989] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.989] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.989] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.989] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:34.989] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:34.991] | : . ' , ; ` | Old stack:
[08:08:34.991] | : . ' , ; ` | List of 1
[08:08:34.991] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.991] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.991] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:34.991] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.991] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.991] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.991] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:34.991] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:34.991] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.991] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.991] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:34.994] | : . ' , ; ` | Not identical
[08:08:34.995] | : . ' , ; ` | all.equal() for future ...
[08:08:34.995] | : . ' , ; ` | : List of 2
[08:08:34.995] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.995] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.995] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:34.995] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.995] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.995] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.995] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:34.995] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:34.995] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:34.995] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:34.995] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.995] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.995] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:34.995] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:34.995] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:34.995] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:34.995] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.000] | : . ' , ; ` | all.equal() for future ... done
[08:08:35.001] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:35.001] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:35.001] | : . ' , ; ` List of future strategies:
[08:08:35.001] | : . ' , ; ` 1. sequential:
[08:08:35.001] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:35.001] | : . ' , ; `    - tweaked: FALSE
[08:08:35.001] | : . ' , ; `    - call: plan(sequential)
[08:08:35.001] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:35.001] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.002] | : . ' , assign_globals() ...
[08:08:35.002] | : . ' , List of 2
[08:08:35.002] | : . ' ,  $ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[08:08:35.002] | : . ' ,  $ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[08:08:35.002] | : . ' ,  - attr(*, "where")=List of 2
[08:08:35.002] | : . ' ,   ..$ weight:<environment: R_GlobalEnv> 
[08:08:35.002] | : . ' ,   ..$ group :<environment: R_GlobalEnv> 
[08:08:35.002] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:35.002] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:35.002] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:35.002] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:35.005] | : . ' , - copied ‘weight’ to environment
[08:08:35.005] | : . ' , - copied ‘group’ to environment
[08:08:35.005] | : . ' , assign_globals() ... done
[08:08:35.007] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.007] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.007] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:35.007] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:35.007] | : . ' , ; ` | : New stack:
[08:08:35.007] | : . ' , ; ` | : List of 1
[08:08:35.007] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.007] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.007] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.007] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.007] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.007] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.007] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:35.007] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.007] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.007] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.007] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.011] | : . ' , ; ` | : Old stack:
[08:08:35.011] | : . ' , ; ` | : List of 1
[08:08:35.011] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.011] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.011] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.011] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.011] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.011] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.011] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:35.011] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.011] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.011] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.011] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.014] | : . ' , ; ` | : Identical
[08:08:35.014] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:35.014] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:35.014] | : . ' , ; ` | List of future strategies:
[08:08:35.014] | : . ' , ; ` | 1. sequential:
[08:08:35.014] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:35.014] | : . ' , ; ` |    - tweaked: FALSE
[08:08:35.014] | : . ' , ; ` |    - call: plan(sequential)
[08:08:35.014] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:35.014] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.014] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.015] | : . ' , SequentialFuture started (and completed)
[08:08:35.015] | : . ' , signalConditions() ...
[08:08:35.015] | : . ' , ; include = ‘immediateCondition’
[08:08:35.015] | : . ' , ; exclude = 
[08:08:35.015] | : . ' , ; resignal = FALSE
[08:08:35.041] | : . ' , ; Number of conditions: 6
[08:08:35.041] | : . ' , ;  int 6
[08:08:35.042] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.042] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.042] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.042] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.042] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.042] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.042] | : . ' , signalConditions() ... done
[08:08:35.043] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:35.043] | : . Launching futures ... done
[08:08:35.043] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:35.043] | : Using SequentialFutureBackend ... done
[08:08:35.043] | run() for ‘Future’ (<unnamed-5>) ... done
[08:08:35.043] | signalConditions() ...
[08:08:35.043] | : include = ‘immediateCondition’
[08:08:35.043] | : exclude = 
[08:08:35.044] | : resignal = FALSE
[08:08:35.044] | : Number of conditions: 6
[08:08:35.044] | :  int 6
[08:08:35.044] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.044] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.044] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.044] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.045] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.045] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.045] | signalConditions() ... done
[08:08:35.045] | relay stdout ...
[08:08:35.045] | relay stdout ... done
[08:08:35.045] | check for misuse ...
[08:08:35.045] | check for misuse ... done
[08:08:35.045] | relay conditions ...
[08:08:35.045] | : Future state: ‘finished’
[08:08:35.045] | : signalConditions() ...
[08:08:35.046] | : . include = ‘condition’
[08:08:35.046] | : . exclude = ‘immediateCondition’
[08:08:35.046] | : . resignal = TRUE
[08:08:35.046] | : . Number of conditions: 6
[08:08:35.046] | : .  int 6
[08:08:35.046] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.046] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:34.987] | : . ' , attachPackages() ...
[08:08:35.047] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.047] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:34.987] | : . ' , ; packages: [n=1] ‘future’
[08:08:35.047] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.047] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:34.987] | : . ' , attachPackages() ... done
[08:08:35.047] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.047] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:34.987] | : . ' , attachPackages() ...
[08:08:35.047] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.047] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:34.988] | : . ' , ; packages: [n=1] ‘stats’
[08:08:35.048] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.048] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:34.988] | : . ' , attachPackages() ... done
[08:08:35.048] | : signalConditions() ... done
[08:08:35.048] | relay conditions ... done
[08:08:35.048] value() for Future (<unnamed-5>) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

- Globals - one-side formulas, e.g. xtabs(~ x) ...
[08:08:35.050] future(..., label = NULL) ...
[08:08:35.050] | lazy: FALSE
[08:08:35.050] | stdout: TRUE
[08:08:35.050] | conditions: [n=1] ‘condition’
[08:08:35.050] | gc: FALSE
[08:08:35.050] | earlySignal: FALSE
[08:08:35.050] | getGlobalsAndPackages() ...
[08:08:35.050] | : Searching for globals ...
[08:08:35.058] | : . globals found: [4] ‘{’, ‘xtabs’, ‘x’, ‘~’
[08:08:35.058] | : Searching for globals ... done
[08:08:35.058] | : Resolving globals: FALSE
[08:08:35.058] | : Search for packages associated with the globals ...
[08:08:35.059] | : . Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:35.060] | : . Packages: [2] ‘base’, ‘stats’
[08:08:35.060] | : Search for packages associated with the globals ... done
[08:08:35.060] | : Packages after dropping 'base': [1] ‘stats’
[08:08:35.060] | : Packages after dropping non-attached packages: [1] ‘stats’
[08:08:35.060] | : globals: [1] ‘x’
[08:08:35.060] | : packages: [1] ‘stats’
[08:08:35.061] | getGlobalsAndPackages() ... done
[08:08:35.061] | run() for ‘Future’ (<unnamed-6>) ...
[08:08:35.061] | : state: ‘created’
[08:08:35.061] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.061] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.061] | : Using SequentialFutureBackend ...
[08:08:35.061] | : . Number of futures since start: 5 (5 created, 5 launched, 5 finished)
[08:08:35.061] | : . Launching futures ...
[08:08:35.062] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:35.062] | : . ' , getFutureData() ...
[08:08:35.062] | : . ' , ; getFutureCore() ...
[08:08:35.062] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘stats’
[08:08:35.062] | : . ' , ; getFutureCore() ... done
[08:08:35.062] | : . ' , ; getFutureCapture() ...
[08:08:35.062] | : . ' , ; getFutureCapture() ... done
[08:08:35.062] | : . ' , ; getFutureContext() ...
[08:08:35.062] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.063] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:35.063] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.063] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:35.063] | : . ' , ; getFutureContext() ... done
[08:08:35.063] | : . ' , getFutureData() ... done
[08:08:35.064] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.064] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:35.065] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.065] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.065] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:35.065] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:35.065] | : . ' , ; ` | New stack:
[08:08:35.065] | : . ' , ; ` | List of 1
[08:08:35.065] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.065] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.065] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:35.065] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.065] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.065] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.065] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.065] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.068] | : . ' , ; ` | Old stack:
[08:08:35.068] | : . ' , ; ` | List of 1
[08:08:35.068] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.068] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.068] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:35.068] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.068] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.068] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.068] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:35.068] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.068] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.068] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.068] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.071] | : . ' , ; ` | Not identical
[08:08:35.071] | : . ' , ; ` | all.equal() for future ...
[08:08:35.072] | : . ' , ; ` | : List of 2
[08:08:35.072] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.072] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.072] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:35.072] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.072] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.072] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.072] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.072] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.072] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.072] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.072] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.072] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.072] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.072] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:35.072] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.072] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.072] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.077] | : . ' , ; ` | all.equal() for future ... done
[08:08:35.077] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:35.077] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:35.077] | : . ' , ; ` List of future strategies:
[08:08:35.077] | : . ' , ; ` 1. sequential:
[08:08:35.077] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:35.077] | : . ' , ; `    - tweaked: FALSE
[08:08:35.077] | : . ' , ; `    - call: plan(sequential)
[08:08:35.078] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:35.078] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.078] | : . ' , assign_globals() ...
[08:08:35.078] | : . ' , List of 1
[08:08:35.078] | : . ' ,  $ x: num [1:5] 1 1 2 2 2
[08:08:35.078] | : . ' ,  - attr(*, "where")=List of 1
[08:08:35.078] | : . ' ,   ..$ x:<environment: R_GlobalEnv> 
[08:08:35.078] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:35.078] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:35.078] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:35.078] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:35.082] | : . ' , - copied ‘x’ to environment
[08:08:35.082] | : . ' , assign_globals() ... done
[08:08:35.084] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.084] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.084] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:35.084] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:35.084] | : . ' , ; ` | : New stack:
[08:08:35.084] | : . ' , ; ` | : List of 1
[08:08:35.084] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.084] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.084] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.084] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.084] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.084] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.084] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:35.084] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.084] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.084] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.084] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.087] | : . ' , ; ` | : Old stack:
[08:08:35.088] | : . ' , ; ` | : List of 1
[08:08:35.088] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.088] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.088] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.088] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.088] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.088] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.088] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:35.088] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.088] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.088] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.088] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.091] | : . ' , ; ` | : Identical
[08:08:35.091] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:35.091] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:35.091] | : . ' , ; ` | List of future strategies:
[08:08:35.091] | : . ' , ; ` | 1. sequential:
[08:08:35.091] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:35.091] | : . ' , ; ` |    - tweaked: FALSE
[08:08:35.091] | : . ' , ; ` |    - call: plan(sequential)
[08:08:35.091] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:35.091] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.092] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.092] | : . ' , SequentialFuture started (and completed)
[08:08:35.092] | : . ' , signalConditions() ...
[08:08:35.092] | : . ' , ; include = ‘immediateCondition’
[08:08:35.092] | : . ' , ; exclude = 
[08:08:35.092] | : . ' , ; resignal = FALSE
[08:08:35.092] | : . ' , ; Number of conditions: 6
[08:08:35.093] | : . ' , ;  int 6
[08:08:35.093] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.093] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.093] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.093] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.093] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.093] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.094] | : . ' , signalConditions() ... done
[08:08:35.094] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:35.094] | : . Launching futures ... done
[08:08:35.094] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:35.094] | : Using SequentialFutureBackend ... done
[08:08:35.094] | run() for ‘Future’ (<unnamed-6>) ... done
[08:08:35.094] future(..., label = NULL) ... done
[08:08:35.094] value() for SequentialFuture (<unnamed-6>) ...
[08:08:35.094] | signalConditions() ...
[08:08:35.095] | : include = ‘immediateCondition’
[08:08:35.095] | : exclude = 
[08:08:35.095] | : resignal = FALSE
[08:08:35.095] | : Number of conditions: 6
[08:08:35.095] | :  int 6
[08:08:35.095] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.095] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.095] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.096] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.096] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.096] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.096] | signalConditions() ... done
[08:08:35.096] | relay stdout ...
[08:08:35.096] | relay stdout ... done
[08:08:35.096] | check for misuse ...
[08:08:35.096] | check for misuse ... done
[08:08:35.096] | relay conditions ...
[08:08:35.096] | : Future state: ‘finished’
[08:08:35.097] | : signalConditions() ...
[08:08:35.097] | : . include = ‘condition’
[08:08:35.097] | : . exclude = ‘immediateCondition’
[08:08:35.097] | : . resignal = TRUE
[08:08:35.097] | : . Number of conditions: 6
[08:08:35.097] | : .  int 6
[08:08:35.097] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.098] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.063] | : . ' , attachPackages() ...
[08:08:35.098] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.098] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.063] | : . ' , ; packages: [n=1] ‘future’
[08:08:35.098] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.098] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.064] | : . ' , attachPackages() ... done
[08:08:35.098] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.098] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.064] | : . ' , attachPackages() ...
[08:08:35.099] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.099] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.064] | : . ' , ; packages: [n=1] ‘stats’
[08:08:35.099] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.100] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.064] | : . ' , attachPackages() ... done
[08:08:35.100] | : signalConditions() ... done
[08:08:35.100] | relay conditions ... done
[08:08:35.100] value() for SequentialFuture (<unnamed-6>) ... done
x
1 2 
2 3 
[08:08:35.101] future(..., label = NULL) ...
[08:08:35.101] | lazy: FALSE
[08:08:35.101] | stdout: TRUE
[08:08:35.101] | conditions: [n=1] ‘condition’
[08:08:35.101] | gc: FALSE
[08:08:35.101] | earlySignal: FALSE
[08:08:35.101] | getGlobalsAndPackages() ...
[08:08:35.101] | : Searching for globals ...
[08:08:35.109] | : . globals found: [4] ‘{’, ‘xtabs’, ‘x’, ‘~’
[08:08:35.109] | : Searching for globals ... done
[08:08:35.109] | : Resolving globals: FALSE
[08:08:35.109] | : Search for packages associated with the globals ...
[08:08:35.109] | : . Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:35.109] | : . Packages: [2] ‘base’, ‘stats’
[08:08:35.109] | : Search for packages associated with the globals ... done
[08:08:35.110] | : Packages after dropping 'base': [1] ‘stats’
[08:08:35.110] | : Packages after dropping non-attached packages: [1] ‘stats’
[08:08:35.110] | : globals: [1] ‘x’
[08:08:35.110] | : packages: [1] ‘stats’
[08:08:35.110] | getGlobalsAndPackages() ... done
[08:08:35.110] | run() for ‘Future’ (<unnamed-7>) ...
[08:08:35.110] | : state: ‘created’
[08:08:35.111] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.111] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.111] | : Using SequentialFutureBackend ...
[08:08:35.111] | : . Number of futures since start: 6 (6 created, 6 launched, 6 finished)
[08:08:35.111] | : . Launching futures ...
[08:08:35.111] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:35.111] | : . ' , getFutureData() ...
[08:08:35.111] | : . ' , ; getFutureCore() ...
[08:08:35.112] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘stats’
[08:08:35.112] | : . ' , ; getFutureCore() ... done
[08:08:35.112] | : . ' , ; getFutureCapture() ...
[08:08:35.112] | : . ' , ; getFutureCapture() ... done
[08:08:35.112] | : . ' , ; getFutureContext() ...
[08:08:35.112] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.112] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:35.112] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.113] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:35.113] | : . ' , ; getFutureContext() ... done
[08:08:35.113] | : . ' , getFutureData() ... done
[08:08:35.114] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.114] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:35.114] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.115] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.115] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:35.115] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:35.115] | : . ' , ; ` | New stack:
[08:08:35.115] | : . ' , ; ` | List of 1
[08:08:35.115] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.115] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.115] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:35.115] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.115] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.115] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.115] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.115] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.118] | : . ' , ; ` | Old stack:
[08:08:35.118] | : . ' , ; ` | List of 1
[08:08:35.118] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.118] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.118] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:35.118] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.118] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.118] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.118] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:35.118] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.118] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.118] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.118] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.121] | : . ' , ; ` | Not identical
[08:08:35.122] | : . ' , ; ` | all.equal() for future ...
[08:08:35.122] | : . ' , ; ` | : List of 2
[08:08:35.122] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.122] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.122] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:35.122] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.122] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.122] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.122] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.122] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.122] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.122] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.122] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.122] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.122] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.122] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:35.122] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.122] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.122] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.127] | : . ' , ; ` | all.equal() for future ... done
[08:08:35.127] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:35.127] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:35.127] | : . ' , ; ` List of future strategies:
[08:08:35.127] | : . ' , ; ` 1. sequential:
[08:08:35.127] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:35.127] | : . ' , ; `    - tweaked: FALSE
[08:08:35.127] | : . ' , ; `    - call: plan(sequential)
[08:08:35.127] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:35.127] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.128] | : . ' , assign_globals() ...
[08:08:35.128] | : . ' , List of 1
[08:08:35.128] | : . ' ,  $ x: num [1:5] 1 1 2 2 2
[08:08:35.128] | : . ' ,  - attr(*, "where")=List of 1
[08:08:35.128] | : . ' ,   ..$ x:<environment: R_GlobalEnv> 
[08:08:35.128] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:35.128] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:35.128] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:35.128] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:35.130] | : . ' , - copied ‘x’ to environment
[08:08:35.130] | : . ' , assign_globals() ... done
[08:08:35.132] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.132] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.132] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:35.132] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:35.132] | : . ' , ; ` | : New stack:
[08:08:35.132] | : . ' , ; ` | : List of 1
[08:08:35.132] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.132] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.132] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.132] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.132] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.132] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.132] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:35.132] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.132] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.132] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.132] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.137] | : . ' , ; ` | : Old stack:
[08:08:35.137] | : . ' , ; ` | : List of 1
[08:08:35.137] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.137] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.137] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.137] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.137] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.137] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.137] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:35.137] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.137] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.137] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.137] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.140] | : . ' , ; ` | : Identical
[08:08:35.140] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:35.140] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:35.140] | : . ' , ; ` | List of future strategies:
[08:08:35.140] | : . ' , ; ` | 1. sequential:
[08:08:35.140] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:35.140] | : . ' , ; ` |    - tweaked: FALSE
[08:08:35.140] | : . ' , ; ` |    - call: plan(sequential)
[08:08:35.141] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:35.141] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.141] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.141] | : . ' , SequentialFuture started (and completed)
[08:08:35.141] | : . ' , signalConditions() ...
[08:08:35.141] | : . ' , ; include = ‘immediateCondition’
[08:08:35.141] | : . ' , ; exclude = 
[08:08:35.142] | : . ' , ; resignal = FALSE
[08:08:35.142] | : . ' , ; Number of conditions: 6
[08:08:35.142] | : . ' , ;  int 6
[08:08:35.142] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.142] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.142] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.142] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.143] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.143] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.143] | : . ' , signalConditions() ... done
[08:08:35.143] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:35.143] | : . Launching futures ... done
[08:08:35.143] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:35.143] | : Using SequentialFutureBackend ... done
[08:08:35.143] | run() for ‘Future’ (<unnamed-7>) ... done
[08:08:35.143] future(..., label = NULL) ... done
[08:08:35.144] value() for SequentialFuture (<unnamed-7>) ...
[08:08:35.144] | signalConditions() ...
[08:08:35.144] | : include = ‘immediateCondition’
[08:08:35.144] | : exclude = 
[08:08:35.144] | : resignal = FALSE
[08:08:35.144] | : Number of conditions: 6
[08:08:35.144] | :  int 6
[08:08:35.144] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.145] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.145] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.145] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.145] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.145] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.145] | signalConditions() ... done
[08:08:35.145] | relay stdout ...
[08:08:35.145] | relay stdout ... done
[08:08:35.145] | check for misuse ...
[08:08:35.146] | check for misuse ... done
[08:08:35.146] | relay conditions ...
[08:08:35.146] | : Future state: ‘finished’
[08:08:35.146] | : signalConditions() ...
[08:08:35.146] | : . include = ‘condition’
[08:08:35.146] | : . exclude = ‘immediateCondition’
[08:08:35.146] | : . resignal = TRUE
[08:08:35.146] | : . Number of conditions: 6
[08:08:35.146] | : .  int 6
[08:08:35.147] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.147] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.113] | : . ' , attachPackages() ...
[08:08:35.147] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.147] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.113] | : . ' , ; packages: [n=1] ‘future’
[08:08:35.147] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.147] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.113] | : . ' , attachPackages() ... done
[08:08:35.147] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.147] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.113] | : . ' , attachPackages() ...
[08:08:35.148] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.148] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.114] | : . ' , ; packages: [n=1] ‘stats’
[08:08:35.148] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.148] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.114] | : . ' , attachPackages() ... done
[08:08:35.148] | : signalConditions() ... done
[08:08:35.148] | relay conditions ... done
[08:08:35.148] value() for SequentialFuture (<unnamed-7>) ... done
x
1 2 
2 3 
- Globals - lm(<formula>, data = cars) ...
- Globals - lm(<formula #1 (‘a’)>, data = cars) ...

Call:
lm(formula = dist ~ . - 1, data = cars)

Coefficients:
speed  
2.909  

[08:08:35.150] future(..., label = NULL) ...
[08:08:35.150] | lazy: FALSE
[08:08:35.150] | stdout: TRUE
[08:08:35.150] | conditions: [n=1] ‘condition’
[08:08:35.150] | gc: FALSE
[08:08:35.150] | earlySignal: FALSE
[08:08:35.151] | getGlobalsAndPackages() ...
[08:08:35.151] | : Searching for globals ...
[08:08:35.164] | : . globals found: [7] ‘{’, ‘lm’, ‘dist’, ‘-’, ‘.’, ‘~’, ‘cars’
[08:08:35.164] | : Searching for globals ... done
[08:08:35.164] | : Resolving globals: FALSE
[08:08:35.164] | : Search for packages associated with the globals ...
[08:08:35.164] | : . Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:35.165] | : . Packages: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:35.165] | : Search for packages associated with the globals ... done
[08:08:35.165] | : Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[08:08:35.165] | : Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[08:08:35.165] | : globals: [0] 
[08:08:35.165] | : packages: [2] ‘stats’, ‘datasets’
[08:08:35.165] | getGlobalsAndPackages() ... done
[08:08:35.166] | run() for ‘Future’ (<unnamed-8>) ...
[08:08:35.166] | : state: ‘created’
[08:08:35.166] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.166] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.166] | : Using SequentialFutureBackend ...
[08:08:35.166] | : . Number of futures since start: 7 (7 created, 7 launched, 7 finished)
[08:08:35.166] | : . Launching futures ...
[08:08:35.166] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:35.166] | : . ' , getFutureData() ...
[08:08:35.167] | : . ' , ; getFutureCore() ...
[08:08:35.167] | : . ' , ; ` Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[08:08:35.167] | : . ' , ; getFutureCore() ... done
[08:08:35.167] | : . ' , ; getFutureCapture() ...
[08:08:35.167] | : . ' , ; getFutureCapture() ... done
[08:08:35.167] | : . ' , ; getFutureContext() ...
[08:08:35.167] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.167] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:35.167] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.167] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:35.168] | : . ' , ; getFutureContext() ... done
[08:08:35.168] | : . ' , getFutureData() ... done
[08:08:35.169] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.169] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:35.169] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.169] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.170] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:35.170] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:35.170] | : . ' , ; ` | New stack:
[08:08:35.171] | : . ' , ; ` | List of 1
[08:08:35.171] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.171] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.171] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:35.171] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.171] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.171] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.171] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.171] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.173] | : . ' , ; ` | Old stack:
[08:08:35.173] | : . ' , ; ` | List of 1
[08:08:35.173] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.173] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.173] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:35.173] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.173] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.173] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.173] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:35.173] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.173] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.173] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.173] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.176] | : . ' , ; ` | Not identical
[08:08:35.177] | : . ' , ; ` | all.equal() for future ...
[08:08:35.177] | : . ' , ; ` | : List of 2
[08:08:35.177] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.177] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.177] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:35.177] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.177] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.177] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.177] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.177] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.177] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.177] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.177] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.177] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.177] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.177] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:35.177] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.177] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.177] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.182] | : . ' , ; ` | all.equal() for future ... done
[08:08:35.182] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:35.182] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:35.182] | : . ' , ; ` List of future strategies:
[08:08:35.182] | : . ' , ; ` 1. sequential:
[08:08:35.182] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:35.182] | : . ' , ; `    - tweaked: FALSE
[08:08:35.182] | : . ' , ; `    - call: plan(sequential)
[08:08:35.182] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:35.182] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.184] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.184] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.185] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:35.185] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:35.185] | : . ' , ; ` | : New stack:
[08:08:35.185] | : . ' , ; ` | : List of 1
[08:08:35.185] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.185] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.185] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.185] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.185] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.185] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.185] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:35.185] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.185] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.185] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.185] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.189] | : . ' , ; ` | : Old stack:
[08:08:35.189] | : . ' , ; ` | : List of 1
[08:08:35.189] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.189] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.189] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.189] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.189] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.189] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.189] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:35.189] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.189] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.189] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.189] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.192] | : . ' , ; ` | : Identical
[08:08:35.192] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:35.192] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:35.192] | : . ' , ; ` | List of future strategies:
[08:08:35.192] | : . ' , ; ` | 1. sequential:
[08:08:35.192] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:35.192] | : . ' , ; ` |    - tweaked: FALSE
[08:08:35.192] | : . ' , ; ` |    - call: plan(sequential)
[08:08:35.193] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:35.193] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.193] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.193] | : . ' , SequentialFuture started (and completed)
[08:08:35.193] | : . ' , signalConditions() ...
[08:08:35.193] | : . ' , ; include = ‘immediateCondition’
[08:08:35.194] | : . ' , ; exclude = 
[08:08:35.194] | : . ' , ; resignal = FALSE
[08:08:35.194] | : . ' , ; Number of conditions: 6
[08:08:35.194] | : . ' , ;  int 6
[08:08:35.194] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.194] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.194] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.195] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.195] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.195] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.195] | : . ' , signalConditions() ... done
[08:08:35.195] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:35.195] | : . Launching futures ... done
[08:08:35.195] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:35.195] | : Using SequentialFutureBackend ... done
[08:08:35.195] | run() for ‘Future’ (<unnamed-8>) ... done
[08:08:35.195] future(..., label = NULL) ... done
[08:08:35.196] value() for SequentialFuture (<unnamed-8>) ...
[08:08:35.196] | signalConditions() ...
[08:08:35.196] | : include = ‘immediateCondition’
[08:08:35.196] | : exclude = 
[08:08:35.196] | : resignal = FALSE
[08:08:35.196] | : Number of conditions: 6
[08:08:35.196] | :  int 6
[08:08:35.197] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.197] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.197] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.197] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.197] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.197] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.197] | signalConditions() ... done
[08:08:35.197] | relay stdout ...
[08:08:35.197] | relay stdout ... done
[08:08:35.197] | check for misuse ...
[08:08:35.198] | check for misuse ... done
[08:08:35.198] | relay conditions ...
[08:08:35.198] | : Future state: ‘finished’
[08:08:35.198] | : signalConditions() ...
[08:08:35.198] | : . include = ‘condition’
[08:08:35.198] | : . exclude = ‘immediateCondition’
[08:08:35.198] | : . resignal = TRUE
[08:08:35.198] | : . Number of conditions: 6
[08:08:35.198] | : .  int 6
[08:08:35.199] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.199] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.168] | : . ' , attachPackages() ...
[08:08:35.199] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.199] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.168] | : . ' , ; packages: [n=1] ‘future’
[08:08:35.199] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.199] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.168] | : . ' , attachPackages() ... done
[08:08:35.199] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.200] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.168] | : . ' , attachPackages() ...
[08:08:35.200] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.200] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.168] | : . ' , ; packages: [n=2] ‘stats’, ‘datasets’
[08:08:35.200] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.200] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.169] | : . ' , attachPackages() ... done
[08:08:35.200] | : signalConditions() ... done
[08:08:35.200] | relay conditions ... done
[08:08:35.200] value() for SequentialFuture (<unnamed-8>) ... done

Call:
lm(formula = dist ~ . - 1, data = cars)

Coefficients:
speed  
2.909  

- Globals - lm(<formula #2 (‘b’)>, data = cars) ...

Call:
lm(formula = dist ~ . + 0, data = cars)

Coefficients:
speed  
2.909  

[08:08:35.202] future(..., label = NULL) ...
[08:08:35.202] | lazy: FALSE
[08:08:35.203] | stdout: TRUE
[08:08:35.203] | conditions: [n=1] ‘condition’
[08:08:35.203] | gc: FALSE
[08:08:35.203] | earlySignal: FALSE
[08:08:35.203] | getGlobalsAndPackages() ...
[08:08:35.203] | : Searching for globals ...
[08:08:35.216] | : . globals found: [7] ‘{’, ‘lm’, ‘dist’, ‘+’, ‘.’, ‘~’, ‘cars’
[08:08:35.216] | : Searching for globals ... done
[08:08:35.216] | : Resolving globals: FALSE
[08:08:35.216] | : Search for packages associated with the globals ...
[08:08:35.216] | : . Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:35.217] | : . Packages: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:35.217] | : Search for packages associated with the globals ... done
[08:08:35.217] | : Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[08:08:35.217] | : Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[08:08:35.217] | : globals: [0] 
[08:08:35.217] | : packages: [2] ‘stats’, ‘datasets’
[08:08:35.217] | getGlobalsAndPackages() ... done
[08:08:35.217] | run() for ‘Future’ (<unnamed-9>) ...
[08:08:35.218] | : state: ‘created’
[08:08:35.218] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.218] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.218] | : Using SequentialFutureBackend ...
[08:08:35.218] | : . Number of futures since start: 8 (8 created, 8 launched, 8 finished)
[08:08:35.218] | : . Launching futures ...
[08:08:35.218] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:35.218] | : . ' , getFutureData() ...
[08:08:35.218] | : . ' , ; getFutureCore() ...
[08:08:35.219] | : . ' , ; ` Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[08:08:35.219] | : . ' , ; getFutureCore() ... done
[08:08:35.219] | : . ' , ; getFutureCapture() ...
[08:08:35.219] | : . ' , ; getFutureCapture() ... done
[08:08:35.219] | : . ' , ; getFutureContext() ...
[08:08:35.219] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.219] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:35.219] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.219] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:35.219] | : . ' , ; getFutureContext() ... done
[08:08:35.220] | : . ' , getFutureData() ... done
[08:08:35.222] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.222] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:35.222] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.222] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.222] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:35.222] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:35.222] | : . ' , ; ` | New stack:
[08:08:35.223] | : . ' , ; ` | List of 1
[08:08:35.223] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.223] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.223] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:35.223] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.223] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.223] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.223] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.223] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.225] | : . ' , ; ` | Old stack:
[08:08:35.225] | : . ' , ; ` | List of 1
[08:08:35.225] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.225] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.225] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:35.225] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.225] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.225] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.225] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:35.225] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.225] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.225] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.225] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.228] | : . ' , ; ` | Not identical
[08:08:35.228] | : . ' , ; ` | all.equal() for future ...
[08:08:35.228] | : . ' , ; ` | : List of 2
[08:08:35.228] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.228] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.228] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:35.228] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.228] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.228] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.228] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.228] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.228] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.228] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.228] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.228] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.228] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.228] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:35.228] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.228] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.228] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.233] | : . ' , ; ` | all.equal() for future ... done
[08:08:35.233] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:35.233] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:35.233] | : . ' , ; ` List of future strategies:
[08:08:35.233] | : . ' , ; ` 1. sequential:
[08:08:35.233] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:35.233] | : . ' , ; `    - tweaked: FALSE
[08:08:35.233] | : . ' , ; `    - call: plan(sequential)
[08:08:35.234] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:35.234] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.236] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.236] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.236] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:35.236] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:35.236] | : . ' , ; ` | : New stack:
[08:08:35.236] | : . ' , ; ` | : List of 1
[08:08:35.236] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.236] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.236] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.236] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.236] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.236] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.236] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:35.236] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.236] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.236] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.236] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.240] | : . ' , ; ` | : Old stack:
[08:08:35.240] | : . ' , ; ` | : List of 1
[08:08:35.240] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.240] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.240] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.240] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.240] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.240] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.240] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:35.240] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.240] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.240] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.240] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.244] | : . ' , ; ` | : Identical
[08:08:35.244] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:35.244] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:35.244] | : . ' , ; ` | List of future strategies:
[08:08:35.244] | : . ' , ; ` | 1. sequential:
[08:08:35.244] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:35.244] | : . ' , ; ` |    - tweaked: FALSE
[08:08:35.244] | : . ' , ; ` |    - call: plan(sequential)
[08:08:35.244] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:35.244] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.244] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.245] | : . ' , SequentialFuture started (and completed)
[08:08:35.245] | : . ' , signalConditions() ...
[08:08:35.245] | : . ' , ; include = ‘immediateCondition’
[08:08:35.245] | : . ' , ; exclude = 
[08:08:35.245] | : . ' , ; resignal = FALSE
[08:08:35.245] | : . ' , ; Number of conditions: 6
[08:08:35.245] | : . ' , ;  int 6
[08:08:35.246] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.246] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.246] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.246] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.246] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.246] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.246] | : . ' , signalConditions() ... done
[08:08:35.246] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:35.247] | : . Launching futures ... done
[08:08:35.247] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:35.247] | : Using SequentialFutureBackend ... done
[08:08:35.247] | run() for ‘Future’ (<unnamed-9>) ... done
[08:08:35.247] future(..., label = NULL) ... done
[08:08:35.247] value() for SequentialFuture (<unnamed-9>) ...
[08:08:35.247] | signalConditions() ...
[08:08:35.247] | : include = ‘immediateCondition’
[08:08:35.247] | : exclude = 
[08:08:35.247] | : resignal = FALSE
[08:08:35.248] | : Number of conditions: 6
[08:08:35.248] | :  int 6
[08:08:35.248] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.248] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.248] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.248] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.248] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.249] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.249] | signalConditions() ... done
[08:08:35.249] | relay stdout ...
[08:08:35.249] | relay stdout ... done
[08:08:35.249] | check for misuse ...
[08:08:35.249] | check for misuse ... done
[08:08:35.249] | relay conditions ...
[08:08:35.249] | : Future state: ‘finished’
[08:08:35.249] | : signalConditions() ...
[08:08:35.249] | : . include = ‘condition’
[08:08:35.250] | : . exclude = ‘immediateCondition’
[08:08:35.250] | : . resignal = TRUE
[08:08:35.250] | : . Number of conditions: 6
[08:08:35.250] | : .  int 6
[08:08:35.250] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.250] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.220] | : . ' , attachPackages() ...
[08:08:35.250] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.251] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.220] | : . ' , ; packages: [n=1] ‘future’
[08:08:35.251] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.251] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.220] | : . ' , attachPackages() ... done
[08:08:35.251] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.251] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.220] | : . ' , attachPackages() ...
[08:08:35.251] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.251] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.221] | : . ' , ; packages: [n=2] ‘stats’, ‘datasets’
[08:08:35.251] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.251] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.221] | : . ' , attachPackages() ... done
[08:08:35.252] | : signalConditions() ... done
[08:08:35.252] | relay conditions ... done
[08:08:35.252] value() for SequentialFuture (<unnamed-9>) ... done

Call:
lm(formula = dist ~ . + 0, data = cars)

Coefficients:
speed  
2.909  

- Globals - lm(<formula #3 (‘c’)>, data = cars) ...

Call:
lm(formula = dist ~ speed + speed^2, data = cars)

Coefficients:
(Intercept)        speed  
    -17.579        3.932  

[08:08:35.254] future(..., label = NULL) ...
[08:08:35.254] | lazy: FALSE
[08:08:35.254] | stdout: TRUE
[08:08:35.254] | conditions: [n=1] ‘condition’
[08:08:35.254] | gc: FALSE
[08:08:35.254] | earlySignal: FALSE
[08:08:35.254] | getGlobalsAndPackages() ...
[08:08:35.254] | : Searching for globals ...
[08:08:35.271] | : . globals found: [8] ‘{’, ‘lm’, ‘dist’, ‘+’, ‘speed’, ‘^’, ‘~’, ‘cars’
[08:08:35.271] | : Searching for globals ... done
[08:08:35.271] | : Resolving globals: FALSE
[08:08:35.271] | : Search for packages associated with the globals ...
[08:08:35.272] | : . Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:35.272] | : . Packages: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:35.272] | : Search for packages associated with the globals ... done
[08:08:35.272] | : Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[08:08:35.272] | : Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[08:08:35.272] | : globals: [0] 
[08:08:35.272] | : packages: [2] ‘stats’, ‘datasets’
[08:08:35.273] | getGlobalsAndPackages() ... done
[08:08:35.273] | run() for ‘Future’ (<unnamed-10>) ...
[08:08:35.273] | : state: ‘created’
[08:08:35.273] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.273] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.273] | : Using SequentialFutureBackend ...
[08:08:35.273] | : . Number of futures since start: 9 (9 created, 9 launched, 9 finished)
[08:08:35.273] | : . Launching futures ...
[08:08:35.274] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:35.274] | : . ' , getFutureData() ...
[08:08:35.274] | : . ' , ; getFutureCore() ...
[08:08:35.274] | : . ' , ; ` Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[08:08:35.274] | : . ' , ; getFutureCore() ... done
[08:08:35.274] | : . ' , ; getFutureCapture() ...
[08:08:35.274] | : . ' , ; getFutureCapture() ... done
[08:08:35.274] | : . ' , ; getFutureContext() ...
[08:08:35.274] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.274] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:35.275] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.275] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:35.275] | : . ' , ; getFutureContext() ... done
[08:08:35.275] | : . ' , getFutureData() ... done
[08:08:35.276] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.276] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:35.276] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.277] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.277] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:35.277] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:35.277] | : . ' , ; ` | New stack:
[08:08:35.277] | : . ' , ; ` | List of 1
[08:08:35.277] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.277] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.277] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:35.277] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.277] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.277] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.277] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.277] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.279] | : . ' , ; ` | Old stack:
[08:08:35.280] | : . ' , ; ` | List of 1
[08:08:35.280] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.280] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.280] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:35.280] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.280] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.280] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.280] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:35.280] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.280] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.280] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.280] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.283] | : . ' , ; ` | Not identical
[08:08:35.283] | : . ' , ; ` | all.equal() for future ...
[08:08:35.283] | : . ' , ; ` | : List of 2
[08:08:35.283] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.283] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.283] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:35.283] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.283] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.283] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.283] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.283] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.283] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.283] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.283] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.283] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.283] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.283] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:35.283] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.283] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.283] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.289] | : . ' , ; ` | all.equal() for future ... done
[08:08:35.289] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:35.289] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:35.289] | : . ' , ; ` List of future strategies:
[08:08:35.289] | : . ' , ; ` 1. sequential:
[08:08:35.289] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:35.289] | : . ' , ; `    - tweaked: FALSE
[08:08:35.289] | : . ' , ; `    - call: plan(sequential)
[08:08:35.290] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:35.290] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.292] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.292] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.292] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:35.292] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:35.292] | : . ' , ; ` | : New stack:
[08:08:35.292] | : . ' , ; ` | : List of 1
[08:08:35.292] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.292] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.292] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.292] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.292] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.292] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.292] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:35.292] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.292] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.292] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.292] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.295] | : . ' , ; ` | : Old stack:
[08:08:35.295] | : . ' , ; ` | : List of 1
[08:08:35.295] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.295] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.295] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.295] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.295] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.295] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.295] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:35.295] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.295] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.295] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.295] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.298] | : . ' , ; ` | : Identical
[08:08:35.298] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:35.299] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:35.299] | : . ' , ; ` | List of future strategies:
[08:08:35.299] | : . ' , ; ` | 1. sequential:
[08:08:35.299] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:35.299] | : . ' , ; ` |    - tweaked: FALSE
[08:08:35.299] | : . ' , ; ` |    - call: plan(sequential)
[08:08:35.299] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:35.299] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.299] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.300] | : . ' , SequentialFuture started (and completed)
[08:08:35.300] | : . ' , signalConditions() ...
[08:08:35.300] | : . ' , ; include = ‘immediateCondition’
[08:08:35.300] | : . ' , ; exclude = 
[08:08:35.300] | : . ' , ; resignal = FALSE
[08:08:35.300] | : . ' , ; Number of conditions: 6
[08:08:35.300] | : . ' , ;  int 6
[08:08:35.301] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.301] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.301] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.301] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.301] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.301] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.301] | : . ' , signalConditions() ... done
[08:08:35.301] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:35.301] | : . Launching futures ... done
[08:08:35.302] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:35.302] | : Using SequentialFutureBackend ... done
[08:08:35.302] | run() for ‘Future’ (<unnamed-10>) ... done
[08:08:35.302] future(..., label = NULL) ... done
[08:08:35.302] value() for SequentialFuture (<unnamed-10>) ...
[08:08:35.302] | signalConditions() ...
[08:08:35.302] | : include = ‘immediateCondition’
[08:08:35.302] | : exclude = 
[08:08:35.302] | : resignal = FALSE
[08:08:35.302] | : Number of conditions: 6
[08:08:35.303] | :  int 6
[08:08:35.303] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.303] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.304] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.304] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.304] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.304] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.304] | signalConditions() ... done
[08:08:35.304] | relay stdout ...
[08:08:35.305] | relay stdout ... done
[08:08:35.305] | check for misuse ...
[08:08:35.305] | check for misuse ... done
[08:08:35.305] | relay conditions ...
[08:08:35.305] | : Future state: ‘finished’
[08:08:35.305] | : signalConditions() ...
[08:08:35.305] | : . include = ‘condition’
[08:08:35.305] | : . exclude = ‘immediateCondition’
[08:08:35.305] | : . resignal = TRUE
[08:08:35.305] | : . Number of conditions: 6
[08:08:35.306] | : .  int 6
[08:08:35.306] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.306] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.275] | : . ' , attachPackages() ...
[08:08:35.306] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.306] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.275] | : . ' , ; packages: [n=1] ‘future’
[08:08:35.306] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.307] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.275] | : . ' , attachPackages() ... done
[08:08:35.307] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.307] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.276] | : . ' , attachPackages() ...
[08:08:35.307] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.307] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.276] | : . ' , ; packages: [n=2] ‘stats’, ‘datasets’
[08:08:35.307] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.307] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.276] | : . ' , attachPackages() ... done
[08:08:35.307] | : signalConditions() ... done
[08:08:35.307] | relay conditions ... done
[08:08:35.308] value() for SequentialFuture (<unnamed-10>) ... done

Call:
lm(formula = dist ~ speed + speed^2, data = cars)

Coefficients:
(Intercept)        speed  
    -17.579        3.932  

- Globals - lm(<formula #4 (‘d’)>, data = cars) ...

Call:
lm(formula = dist ~ speed + I(speed^2), data = cars)

Coefficients:
(Intercept)        speed   I(speed^2)  
    2.47014      0.91329      0.09996  

[08:08:35.310] future(..., label = NULL) ...
[08:08:35.310] | lazy: FALSE
[08:08:35.310] | stdout: TRUE
[08:08:35.310] | conditions: [n=1] ‘condition’
[08:08:35.310] | gc: FALSE
[08:08:35.310] | earlySignal: FALSE
[08:08:35.310] | getGlobalsAndPackages() ...
[08:08:35.310] | : Searching for globals ...
[08:08:35.328] | : . globals found: [9] ‘{’, ‘lm’, ‘dist’, ‘+’, ‘speed’, ‘I’, ‘^’, ‘~’, ‘cars’
[08:08:35.328] | : Searching for globals ... done
[08:08:35.328] | : Resolving globals: FALSE
[08:08:35.328] | : Search for packages associated with the globals ...
[08:08:35.329] | : . Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:35.329] | : . Packages: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:35.329] | : Search for packages associated with the globals ... done
[08:08:35.329] | : Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[08:08:35.329] | : Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[08:08:35.330] | : globals: [0] 
[08:08:35.330] | : packages: [2] ‘stats’, ‘datasets’
[08:08:35.330] | getGlobalsAndPackages() ... done
[08:08:35.330] | run() for ‘Future’ (<unnamed-11>) ...
[08:08:35.330] | : state: ‘created’
[08:08:35.330] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.330] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.330] | : Using SequentialFutureBackend ...
[08:08:35.331] | : . Number of futures since start: 10 (10 created, 10 launched, 10 finished)
[08:08:35.331] | : . Launching futures ...
[08:08:35.331] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:35.331] | : . ' , getFutureData() ...
[08:08:35.331] | : . ' , ; getFutureCore() ...
[08:08:35.331] | : . ' , ; ` Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[08:08:35.331] | : . ' , ; getFutureCore() ... done
[08:08:35.331] | : . ' , ; getFutureCapture() ...
[08:08:35.331] | : . ' , ; getFutureCapture() ... done
[08:08:35.331] | : . ' , ; getFutureContext() ...
[08:08:35.332] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.332] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:35.332] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.332] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:35.332] | : . ' , ; getFutureContext() ... done
[08:08:35.332] | : . ' , getFutureData() ... done
[08:08:35.334] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.334] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:35.334] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.335] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.335] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:35.335] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:35.335] | : . ' , ; ` | New stack:
[08:08:35.335] | : . ' , ; ` | List of 1
[08:08:35.335] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.335] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.335] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:35.335] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.335] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.335] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.335] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.335] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.337] | : . ' , ; ` | Old stack:
[08:08:35.338] | : . ' , ; ` | List of 1
[08:08:35.338] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.338] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.338] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:35.338] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.338] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.338] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.338] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:35.338] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.338] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.338] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.338] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.341] | : . ' , ; ` | Not identical
[08:08:35.341] | : . ' , ; ` | all.equal() for future ...
[08:08:35.341] | : . ' , ; ` | : List of 2
[08:08:35.341] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.341] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.341] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:35.341] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.341] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.341] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.341] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.341] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.341] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.341] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.341] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.341] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.341] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.341] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:35.341] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.341] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.341] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.346] | : . ' , ; ` | all.equal() for future ... done
[08:08:35.346] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:35.346] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:35.346] | : . ' , ; ` List of future strategies:
[08:08:35.346] | : . ' , ; ` 1. sequential:
[08:08:35.346] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:35.346] | : . ' , ; `    - tweaked: FALSE
[08:08:35.346] | : . ' , ; `    - call: plan(sequential)
[08:08:35.346] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:35.346] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.348] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.349] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.349] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:35.349] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:35.350] | : . ' , ; ` | : New stack:
[08:08:35.350] | : . ' , ; ` | : List of 1
[08:08:35.350] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.350] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.350] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.350] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.350] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.350] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.350] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:35.350] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.350] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.350] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.350] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.353] | : . ' , ; ` | : Old stack:
[08:08:35.353] | : . ' , ; ` | : List of 1
[08:08:35.353] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.353] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.353] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.353] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.353] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.353] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.353] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:35.353] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.353] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.353] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.353] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.356] | : . ' , ; ` | : Identical
[08:08:35.356] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:35.356] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:35.356] | : . ' , ; ` | List of future strategies:
[08:08:35.356] | : . ' , ; ` | 1. sequential:
[08:08:35.356] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:35.356] | : . ' , ; ` |    - tweaked: FALSE
[08:08:35.356] | : . ' , ; ` |    - call: plan(sequential)
[08:08:35.357] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:35.357] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.357] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.357] | : . ' , SequentialFuture started (and completed)
[08:08:35.357] | : . ' , signalConditions() ...
[08:08:35.357] | : . ' , ; include = ‘immediateCondition’
[08:08:35.357] | : . ' , ; exclude = 
[08:08:35.358] | : . ' , ; resignal = FALSE
[08:08:35.358] | : . ' , ; Number of conditions: 6
[08:08:35.358] | : . ' , ;  int 6
[08:08:35.358] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.358] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.358] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.358] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.359] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.359] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.359] | : . ' , signalConditions() ... done
[08:08:35.359] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:35.359] | : . Launching futures ... done
[08:08:35.359] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:35.359] | : Using SequentialFutureBackend ... done
[08:08:35.359] | run() for ‘Future’ (<unnamed-11>) ... done
[08:08:35.359] future(..., label = NULL) ... done
[08:08:35.359] value() for SequentialFuture (<unnamed-11>) ...
[08:08:35.360] | signalConditions() ...
[08:08:35.360] | : include = ‘immediateCondition’
[08:08:35.360] | : exclude = 
[08:08:35.360] | : resignal = FALSE
[08:08:35.360] | : Number of conditions: 6
[08:08:35.360] | :  int 6
[08:08:35.360] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.361] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.361] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.361] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.361] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.361] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.361] | signalConditions() ... done
[08:08:35.361] | relay stdout ...
[08:08:35.361] | relay stdout ... done
[08:08:35.361] | check for misuse ...
[08:08:35.361] | check for misuse ... done
[08:08:35.362] | relay conditions ...
[08:08:35.362] | : Future state: ‘finished’
[08:08:35.362] | : signalConditions() ...
[08:08:35.362] | : . include = ‘condition’
[08:08:35.362] | : . exclude = ‘immediateCondition’
[08:08:35.362] | : . resignal = TRUE
[08:08:35.362] | : . Number of conditions: 6
[08:08:35.362] | : .  int 6
[08:08:35.363] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.363] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.333] | : . ' , attachPackages() ...
[08:08:35.363] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.363] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.333] | : . ' , ; packages: [n=1] ‘future’
[08:08:35.363] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.363] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.333] | : . ' , attachPackages() ... done
[08:08:35.363] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.363] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.333] | : . ' , attachPackages() ...
[08:08:35.363] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.364] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.334] | : . ' , ; packages: [n=2] ‘stats’, ‘datasets’
[08:08:35.364] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.364] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.334] | : . ' , attachPackages() ... done
[08:08:35.364] | : signalConditions() ... done
[08:08:35.364] | relay conditions ... done
[08:08:35.364] value() for SequentialFuture (<unnamed-11>) ... done

Call:
lm(formula = dist ~ speed + I(speed^2), data = cars)

Coefficients:
(Intercept)        speed   I(speed^2)  
    2.47014      0.91329      0.09996  

- Globals - lm(<formula #5 (‘e’)>, data = cars) ...

Call:
lm(formula = dist ~ poly(speed, 2), data = cars)

Coefficients:
    (Intercept)  poly(speed, 2)1  poly(speed, 2)2  
          42.98           145.55            23.00  

[08:08:35.368] future(..., label = NULL) ...
[08:08:35.368] | lazy: FALSE
[08:08:35.368] | stdout: TRUE
[08:08:35.368] | conditions: [n=1] ‘condition’
[08:08:35.368] | gc: FALSE
[08:08:35.368] | earlySignal: FALSE
[08:08:35.368] | getGlobalsAndPackages() ...
[08:08:35.369] | : Searching for globals ...
[08:08:35.381] | : . globals found: [7] ‘{’, ‘lm’, ‘dist’, ‘poly’, ‘speed’, ‘~’, ‘cars’
[08:08:35.381] | : Searching for globals ... done
[08:08:35.381] | : Resolving globals: FALSE
[08:08:35.381] | : Search for packages associated with the globals ...
[08:08:35.382] | : . Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:35.382] | : . Packages: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:35.382] | : Search for packages associated with the globals ... done
[08:08:35.382] | : Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[08:08:35.382] | : Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[08:08:35.382] | : globals: [0] 
[08:08:35.383] | : packages: [2] ‘stats’, ‘datasets’
[08:08:35.383] | getGlobalsAndPackages() ... done
[08:08:35.383] | run() for ‘Future’ (<unnamed-12>) ...
[08:08:35.383] | : state: ‘created’
[08:08:35.383] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.383] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.383] | : Using SequentialFutureBackend ...
[08:08:35.383] | : . Number of futures since start: 11 (11 created, 11 launched, 11 finished)
[08:08:35.383] | : . Launching futures ...
[08:08:35.384] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:35.384] | : . ' , getFutureData() ...
[08:08:35.384] | : . ' , ; getFutureCore() ...
[08:08:35.384] | : . ' , ; ` Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[08:08:35.384] | : . ' , ; getFutureCore() ... done
[08:08:35.384] | : . ' , ; getFutureCapture() ...
[08:08:35.384] | : . ' , ; getFutureCapture() ... done
[08:08:35.384] | : . ' , ; getFutureContext() ...
[08:08:35.384] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.385] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:35.385] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.385] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:35.385] | : . ' , ; getFutureContext() ... done
[08:08:35.385] | : . ' , getFutureData() ... done
[08:08:35.386] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.386] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:35.386] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.387] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.387] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:35.387] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:35.387] | : . ' , ; ` | New stack:
[08:08:35.387] | : . ' , ; ` | List of 1
[08:08:35.387] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.387] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.387] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:35.387] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.387] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.387] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.387] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.387] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.389] | : . ' , ; ` | Old stack:
[08:08:35.390] | : . ' , ; ` | List of 1
[08:08:35.390] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.390] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.390] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:35.390] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.390] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.390] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.390] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:35.390] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.390] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.390] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.390] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.393] | : . ' , ; ` | Not identical
[08:08:35.393] | : . ' , ; ` | all.equal() for future ...
[08:08:35.393] | : . ' , ; ` | : List of 2
[08:08:35.393] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.393] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.393] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:35.393] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.393] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.393] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.393] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.393] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.393] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.393] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.393] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.393] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.393] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.393] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:35.393] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.393] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.393] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.399] | : . ' , ; ` | all.equal() for future ... done
[08:08:35.399] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:35.399] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:35.400] | : . ' , ; ` List of future strategies:
[08:08:35.400] | : . ' , ; ` 1. sequential:
[08:08:35.400] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:35.400] | : . ' , ; `    - tweaked: FALSE
[08:08:35.400] | : . ' , ; `    - call: plan(sequential)
[08:08:35.400] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:35.400] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.402] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.402] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.402] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:35.403] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:35.403] | : . ' , ; ` | : New stack:
[08:08:35.403] | : . ' , ; ` | : List of 1
[08:08:35.403] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.403] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.403] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.403] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.403] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.403] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.403] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:35.403] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.403] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.403] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.403] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.406] | : . ' , ; ` | : Old stack:
[08:08:35.406] | : . ' , ; ` | : List of 1
[08:08:35.406] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.406] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.406] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.406] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.406] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.406] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.406] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:35.406] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.406] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.406] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.406] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.409] | : . ' , ; ` | : Identical
[08:08:35.409] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:35.409] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:35.409] | : . ' , ; ` | List of future strategies:
[08:08:35.409] | : . ' , ; ` | 1. sequential:
[08:08:35.409] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:35.409] | : . ' , ; ` |    - tweaked: FALSE
[08:08:35.409] | : . ' , ; ` |    - call: plan(sequential)
[08:08:35.410] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:35.410] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.410] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.410] | : . ' , SequentialFuture started (and completed)
[08:08:35.410] | : . ' , signalConditions() ...
[08:08:35.410] | : . ' , ; include = ‘immediateCondition’
[08:08:35.410] | : . ' , ; exclude = 
[08:08:35.410] | : . ' , ; resignal = FALSE
[08:08:35.411] | : . ' , ; Number of conditions: 6
[08:08:35.411] | : . ' , ;  int 6
[08:08:35.411] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.411] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.411] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.411] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.411] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.412] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.412] | : . ' , signalConditions() ... done
[08:08:35.412] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:35.412] | : . Launching futures ... done
[08:08:35.412] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:35.412] | : Using SequentialFutureBackend ... done
[08:08:35.412] | run() for ‘Future’ (<unnamed-12>) ... done
[08:08:35.412] future(..., label = NULL) ... done
[08:08:35.412] value() for SequentialFuture (<unnamed-12>) ...
[08:08:35.412] | signalConditions() ...
[08:08:35.413] | : include = ‘immediateCondition’
[08:08:35.413] | : exclude = 
[08:08:35.413] | : resignal = FALSE
[08:08:35.413] | : Number of conditions: 6
[08:08:35.413] | :  int 6
[08:08:35.413] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.413] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.414] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.414] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.414] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.414] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.414] | signalConditions() ... done
[08:08:35.414] | relay stdout ...
[08:08:35.414] | relay stdout ... done
[08:08:35.414] | check for misuse ...
[08:08:35.414] | check for misuse ... done
[08:08:35.414] | relay conditions ...
[08:08:35.415] | : Future state: ‘finished’
[08:08:35.415] | : signalConditions() ...
[08:08:35.415] | : . include = ‘condition’
[08:08:35.416] | : . exclude = ‘immediateCondition’
[08:08:35.416] | : . resignal = TRUE
[08:08:35.416] | : . Number of conditions: 6
[08:08:35.416] | : .  int 6
[08:08:35.416] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.416] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.385] | : . ' , attachPackages() ...
[08:08:35.416] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.417] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.385] | : . ' , ; packages: [n=1] ‘future’
[08:08:35.417] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.417] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.385] | : . ' , attachPackages() ... done
[08:08:35.417] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.417] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.386] | : . ' , attachPackages() ...
[08:08:35.417] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.417] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.386] | : . ' , ; packages: [n=2] ‘stats’, ‘datasets’
[08:08:35.417] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.418] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.386] | : . ' , attachPackages() ... done
[08:08:35.418] | : signalConditions() ... done
[08:08:35.418] | relay conditions ... done
[08:08:35.418] value() for SequentialFuture (<unnamed-12>) ... done

Call:
lm(formula = dist ~ poly(speed, 2), data = cars)

Coefficients:
    (Intercept)  poly(speed, 2)1  poly(speed, 2)2  
          42.98           145.55            23.00  

- Globals - map(x, ~ expr) ...
[08:08:35.419] future(..., label = NULL) ...
[08:08:35.420] | lazy: FALSE
[08:08:35.420] | stdout: TRUE
[08:08:35.420] | conditions: [n=1] ‘condition’
[08:08:35.420] | gc: FALSE
[08:08:35.420] | earlySignal: FALSE
[08:08:35.420] | getGlobalsAndPackages() ...
[08:08:35.420] | : Searching for globals ...
[08:08:35.452] | : . globals found: [17] ‘{’, ‘outer_function’, ‘map’, ‘:’, ‘~’, ‘inner_function’, ‘.x’, ‘if’, ‘inherits’, ‘<-’, ‘[[’, ‘-’, ‘eval’, ‘bquote’, ‘lapply’, ‘.’, ‘+’
[08:08:35.452] | : Searching for globals ... done
[08:08:35.452] | : Resolving globals: FALSE
[08:08:35.452] | : Search for packages associated with the globals ...
[08:08:35.453] | : . Packages associated with globals: [1] ‘base’
[08:08:35.453] | : . Packages: [1] ‘base’
[08:08:35.453] | : Search for packages associated with the globals ... done
[08:08:35.453] | : Packages after dropping 'base': [0] 
[08:08:35.453] | : globals: [3] ‘outer_function’, ‘map’, ‘inner_function’
[08:08:35.454] | : packages: [0] 
[08:08:35.454] | getGlobalsAndPackages() ... done
[08:08:35.454] | run() for ‘Future’ (<unnamed-13>) ...
[08:08:35.454] | : state: ‘created’
[08:08:35.454] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.454] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.454] | : Using SequentialFutureBackend ...
[08:08:35.454] | : . Number of futures since start: 12 (12 created, 12 launched, 12 finished)
[08:08:35.455] | : . Launching futures ...
[08:08:35.455] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:35.455] | : . ' , getFutureData() ...
[08:08:35.455] | : . ' , ; getFutureCore() ...
[08:08:35.455] | : . ' , ; ` Packages needed by the future expression (n = 0): <none>
[08:08:35.455] | : . ' , ; getFutureCore() ... done
[08:08:35.455] | : . ' , ; getFutureCapture() ...
[08:08:35.455] | : . ' , ; getFutureCapture() ... done
[08:08:35.455] | : . ' , ; getFutureContext() ...
[08:08:35.455] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.456] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:35.456] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.456] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:35.456] | : . ' , ; getFutureContext() ... done
[08:08:35.456] | : . ' , getFutureData() ... done
[08:08:35.457] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.457] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:35.457] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.458] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.458] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:35.458] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:35.458] | : . ' , ; ` | New stack:
[08:08:35.458] | : . ' , ; ` | List of 1
[08:08:35.458] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.458] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.458] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:35.458] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.458] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.458] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.458] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.458] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.462] | : . ' , ; ` | Old stack:
[08:08:35.462] | : . ' , ; ` | List of 1
[08:08:35.462] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.462] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.462] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:35.462] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.462] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.462] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.462] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:35.462] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.462] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.462] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.462] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.465] | : . ' , ; ` | Not identical
[08:08:35.465] | : . ' , ; ` | all.equal() for future ...
[08:08:35.465] | : . ' , ; ` | : List of 2
[08:08:35.465] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.465] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.465] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:35.465] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.465] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.465] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.465] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.465] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.465] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.465] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.465] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.465] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.465] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.465] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:35.465] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.465] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.465] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.470] | : . ' , ; ` | all.equal() for future ... done
[08:08:35.470] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:35.470] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:35.470] | : . ' , ; ` List of future strategies:
[08:08:35.470] | : . ' , ; ` 1. sequential:
[08:08:35.470] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:35.470] | : . ' , ; `    - tweaked: FALSE
[08:08:35.470] | : . ' , ; `    - call: plan(sequential)
[08:08:35.471] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:35.471] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.471] | : . ' , assign_globals() ...
[08:08:35.471] | : . ' , List of 3
[08:08:35.471] | : . ' ,  $ outer_function:function (x)  
[08:08:35.471] | : . ' ,  $ map           :function (.x, .f, ...)  
[08:08:35.471] | : . ' ,  $ inner_function:function (x)  
[08:08:35.471] | : . ' ,  - attr(*, "where")=List of 3
[08:08:35.471] | : . ' ,   ..$ outer_function:<environment: R_GlobalEnv> 
[08:08:35.471] | : . ' ,   ..$ map           :<environment: R_GlobalEnv> 
[08:08:35.471] | : . ' ,   ..$ inner_function:<environment: R_GlobalEnv> 
[08:08:35.471] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:35.471] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:35.471] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:35.471] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:35.474] | : . ' , - reassign environment for ‘outer_function’ [where=globalenv()]
[08:08:35.474] | : . ' , - copied ‘outer_function’ to environment
[08:08:35.474] | : . ' , - reassign environment for ‘map’ [where=globalenv()]
[08:08:35.475] | : . ' , - copied ‘map’ to environment
[08:08:35.475] | : . ' , - reassign environment for ‘inner_function’ [where=globalenv()]
[08:08:35.475] | : . ' , - copied ‘inner_function’ to environment
[08:08:35.475] | : . ' , assign_globals() ... done
[08:08:35.481] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.481] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.482] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:35.482] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:35.482] | : . ' , ; ` | : New stack:
[08:08:35.482] | : . ' , ; ` | : List of 1
[08:08:35.482] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.482] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.482] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.482] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.482] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.482] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.482] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:35.482] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.482] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.482] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.482] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.485] | : . ' , ; ` | : Old stack:
[08:08:35.485] | : . ' , ; ` | : List of 1
[08:08:35.485] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.485] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.485] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.485] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.485] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.485] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.485] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:35.485] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.485] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.485] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.485] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.488] | : . ' , ; ` | : Identical
[08:08:35.488] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:35.488] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:35.488] | : . ' , ; ` | List of future strategies:
[08:08:35.488] | : . ' , ; ` | 1. sequential:
[08:08:35.488] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:35.488] | : . ' , ; ` |    - tweaked: FALSE
[08:08:35.488] | : . ' , ; ` |    - call: plan(sequential)
[08:08:35.489] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:35.489] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.489] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.489] | : . ' , SequentialFuture started (and completed)
[08:08:35.489] | : . ' , signalConditions() ...
[08:08:35.489] | : . ' , ; include = ‘immediateCondition’
[08:08:35.490] | : . ' , ; exclude = 
[08:08:35.490] | : . ' , ; resignal = FALSE
[08:08:35.490] | : . ' , ; Number of conditions: 6
[08:08:35.490] | : . ' , ;  int 6
[08:08:35.490] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.490] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.490] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.491] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.491] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.491] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.491] | : . ' , signalConditions() ... done
[08:08:35.491] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:35.491] | : . Launching futures ... done
[08:08:35.491] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:35.491] | : Using SequentialFutureBackend ... done
[08:08:35.491] | run() for ‘Future’ (<unnamed-13>) ... done
[08:08:35.491] future(..., label = NULL) ... done
[08:08:35.492] value() for SequentialFuture (<unnamed-13>) ...
[08:08:35.492] | signalConditions() ...
[08:08:35.492] | : include = ‘immediateCondition’
[08:08:35.492] | : exclude = 
[08:08:35.492] | : resignal = FALSE
[08:08:35.492] | : Number of conditions: 6
[08:08:35.492] | :  int 6
[08:08:35.493] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.493] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.493] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.494] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.494] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.494] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.494] | signalConditions() ... done
[08:08:35.494] | relay stdout ...
[08:08:35.494] | relay stdout ... done
[08:08:35.494] | check for misuse ...
[08:08:35.494] | check for misuse ... done
[08:08:35.494] | relay conditions ...
[08:08:35.495] | : Future state: ‘finished’
[08:08:35.495] | : signalConditions() ...
[08:08:35.495] | : . include = ‘condition’
[08:08:35.495] | : . exclude = ‘immediateCondition’
[08:08:35.495] | : . resignal = TRUE
[08:08:35.495] | : . Number of conditions: 6
[08:08:35.495] | : .  int 6
[08:08:35.496] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.496] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.456] | : . ' , attachPackages() ...
[08:08:35.496] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.496] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.456] | : . ' , ; packages: [n=1] ‘future’
[08:08:35.496] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.496] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.456] | : . ' , attachPackages() ... done
[08:08:35.496] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.496] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.457] | : . ' , attachPackages() ...
[08:08:35.497] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.497] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.457] | : . ' , ; packages: [n=0] 
[08:08:35.497] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.497] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.457] | : . ' , attachPackages() ... done
[08:08:35.497] | : signalConditions() ... done
[08:08:35.497] | relay conditions ... done
[08:08:35.497] value() for SequentialFuture (<unnamed-13>) ... done
List of 2
 $ : num [1:2] 2 3
 $ : num [1:2] 2 3
[08:08:35.498] future(..., label = NULL) ...
[08:08:35.498] | lazy: FALSE
[08:08:35.498] | stdout: TRUE
[08:08:35.499] | conditions: [n=1] ‘condition’
[08:08:35.499] | gc: FALSE
[08:08:35.499] | earlySignal: FALSE
[08:08:35.499] | getGlobalsAndPackages() ...
[08:08:35.499] | : Searching for globals ...
[08:08:35.532] | : . globals found: [17] ‘{’, ‘outer_function’, ‘map’, ‘:’, ‘~’, ‘inner_function’, ‘.x’, ‘if’, ‘inherits’, ‘<-’, ‘[[’, ‘-’, ‘eval’, ‘bquote’, ‘lapply’, ‘.’, ‘+’
[08:08:35.532] | : Searching for globals ... done
[08:08:35.532] | : Resolving globals: FALSE
[08:08:35.532] | : Search for packages associated with the globals ...
[08:08:35.533] | : . Packages associated with globals: [1] ‘base’
[08:08:35.533] | : . Packages: [1] ‘base’
[08:08:35.533] | : Search for packages associated with the globals ... done
[08:08:35.533] | : Packages after dropping 'base': [0] 
[08:08:35.534] | : globals: [3] ‘outer_function’, ‘map’, ‘inner_function’
[08:08:35.534] | : packages: [0] 
[08:08:35.534] | getGlobalsAndPackages() ... done
[08:08:35.534] | run() for ‘Future’ (<unnamed-14>) ...
[08:08:35.534] | : state: ‘created’
[08:08:35.534] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.534] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.534] | : Using SequentialFutureBackend ...
[08:08:35.534] | : . Number of futures since start: 13 (13 created, 13 launched, 13 finished)
[08:08:35.535] | : . Launching futures ...
[08:08:35.535] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:35.535] | : . ' , getFutureData() ...
[08:08:35.535] | : . ' , ; getFutureCore() ...
[08:08:35.535] | : . ' , ; ` Packages needed by the future expression (n = 0): <none>
[08:08:35.535] | : . ' , ; getFutureCore() ... done
[08:08:35.535] | : . ' , ; getFutureCapture() ...
[08:08:35.535] | : . ' , ; getFutureCapture() ... done
[08:08:35.535] | : . ' , ; getFutureContext() ...
[08:08:35.536] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.536] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:35.536] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.536] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:35.536] | : . ' , ; getFutureContext() ... done
[08:08:35.536] | : . ' , getFutureData() ... done
[08:08:35.537] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.537] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:35.538] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.538] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.538] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:35.538] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:35.538] | : . ' , ; ` | New stack:
[08:08:35.539] | : . ' , ; ` | List of 1
[08:08:35.539] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.539] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.539] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:35.539] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.539] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.539] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.539] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.539] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.542] | : . ' , ; ` | Old stack:
[08:08:35.542] | : . ' , ; ` | List of 1
[08:08:35.542] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.542] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.542] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:35.542] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.542] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.542] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.542] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:35.542] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.542] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.542] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.542] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.545] | : . ' , ; ` | Not identical
[08:08:35.545] | : . ' , ; ` | all.equal() for future ...
[08:08:35.545] | : . ' , ; ` | : List of 2
[08:08:35.545] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.545] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.545] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:35.545] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.545] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.545] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.545] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.545] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.545] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.545] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.545] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.545] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.545] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.545] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:35.545] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.545] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.545] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.550] | : . ' , ; ` | all.equal() for future ... done
[08:08:35.550] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:35.550] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:35.550] | : . ' , ; ` List of future strategies:
[08:08:35.550] | : . ' , ; ` 1. sequential:
[08:08:35.550] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:35.550] | : . ' , ; `    - tweaked: FALSE
[08:08:35.550] | : . ' , ; `    - call: plan(sequential)
[08:08:35.551] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:35.551] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.551] | : . ' , assign_globals() ...
[08:08:35.551] | : . ' , List of 3
[08:08:35.551] | : . ' ,  $ outer_function:function (x)  
[08:08:35.551] | : . ' ,  $ map           :function (.x, .f, ...)  
[08:08:35.551] | : . ' ,  $ inner_function:function (x)  
[08:08:35.551] | : . ' ,  - attr(*, "where")=List of 3
[08:08:35.551] | : . ' ,   ..$ outer_function:<environment: R_GlobalEnv> 
[08:08:35.551] | : . ' ,   ..$ map           :<environment: R_GlobalEnv> 
[08:08:35.551] | : . ' ,   ..$ inner_function:<environment: R_GlobalEnv> 
[08:08:35.551] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:35.551] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:35.551] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:35.551] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:35.554] | : . ' , - reassign environment for ‘outer_function’ [where=globalenv()]
[08:08:35.554] | : . ' , - copied ‘outer_function’ to environment
[08:08:35.554] | : . ' , - reassign environment for ‘map’ [where=globalenv()]
[08:08:35.555] | : . ' , - copied ‘map’ to environment
[08:08:35.555] | : . ' , - reassign environment for ‘inner_function’ [where=globalenv()]
[08:08:35.555] | : . ' , - copied ‘inner_function’ to environment
[08:08:35.556] | : . ' , assign_globals() ... done
[08:08:35.557] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.557] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.557] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:35.558] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:35.558] | : . ' , ; ` | : New stack:
[08:08:35.558] | : . ' , ; ` | : List of 1
[08:08:35.558] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.558] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.558] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.558] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.558] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.558] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.558] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:35.558] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.558] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.558] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.558] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.561] | : . ' , ; ` | : Old stack:
[08:08:35.561] | : . ' , ; ` | : List of 1
[08:08:35.561] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.561] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.561] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.561] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.561] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.561] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.561] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:35.561] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.561] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.561] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.561] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.564] | : . ' , ; ` | : Identical
[08:08:35.564] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:35.564] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:35.564] | : . ' , ; ` | List of future strategies:
[08:08:35.564] | : . ' , ; ` | 1. sequential:
[08:08:35.564] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:35.564] | : . ' , ; ` |    - tweaked: FALSE
[08:08:35.564] | : . ' , ; ` |    - call: plan(sequential)
[08:08:35.565] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:35.565] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.565] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.565] | : . ' , SequentialFuture started (and completed)
[08:08:35.565] | : . ' , signalConditions() ...
[08:08:35.565] | : . ' , ; include = ‘immediateCondition’
[08:08:35.565] | : . ' , ; exclude = 
[08:08:35.565] | : . ' , ; resignal = FALSE
[08:08:35.566] | : . ' , ; Number of conditions: 6
[08:08:35.566] | : . ' , ;  int 6
[08:08:35.566] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.566] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.566] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.566] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.566] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.567] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.567] | : . ' , signalConditions() ... done
[08:08:35.567] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:35.567] | : . Launching futures ... done
[08:08:35.567] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:35.567] | : Using SequentialFutureBackend ... done
[08:08:35.567] | run() for ‘Future’ (<unnamed-14>) ... done
[08:08:35.567] future(..., label = NULL) ... done
[08:08:35.567] value() for SequentialFuture (<unnamed-14>) ...
[08:08:35.568] | signalConditions() ...
[08:08:35.568] | : include = ‘immediateCondition’
[08:08:35.568] | : exclude = 
[08:08:35.568] | : resignal = FALSE
[08:08:35.568] | : Number of conditions: 6
[08:08:35.568] | :  int 6
[08:08:35.568] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.569] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.569] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.569] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.569] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.569] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.569] | signalConditions() ... done
[08:08:35.569] | relay stdout ...
[08:08:35.569] | relay stdout ... done
[08:08:35.569] | check for misuse ...
[08:08:35.569] | check for misuse ... done
[08:08:35.570] | relay conditions ...
[08:08:35.570] | : Future state: ‘finished’
[08:08:35.570] | : signalConditions() ...
[08:08:35.570] | : . include = ‘condition’
[08:08:35.570] | : . exclude = ‘immediateCondition’
[08:08:35.570] | : . resignal = TRUE
[08:08:35.570] | : . Number of conditions: 6
[08:08:35.570] | : .  int 6
[08:08:35.571] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.571] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.536] | : . ' , attachPackages() ...
[08:08:35.571] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.571] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.536] | : . ' , ; packages: [n=1] ‘future’
[08:08:35.571] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.571] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.537] | : . ' , attachPackages() ... done
[08:08:35.571] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.571] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.537] | : . ' , attachPackages() ...
[08:08:35.573] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.573] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.537] | : . ' , ; packages: [n=0] 
[08:08:35.573] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.573] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.537] | : . ' , attachPackages() ... done
[08:08:35.573] | : signalConditions() ... done
[08:08:35.573] | relay conditions ... done
[08:08:35.573] value() for SequentialFuture (<unnamed-14>) ... done
List of 2
 $ : num [1:2] 2 3
 $ : num [1:2] 2 3
Testing with 1 cores ... DONE
Testing with 2 cores ...
availableCores(): 2
- plan('multicore') ...
[08:08:35.577] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.577] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:08:35.577] | : all.equal() for FutureStrategyList ...
[08:08:35.577] | : . New stack:
[08:08:35.577] | : . List of 1
[08:08:35.577] | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:35.577] | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:35.577] | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:35.577] | : .   ..- attr(*, "init")= logi TRUE
[08:08:35.577] | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.577] | : .     ...)  
[08:08:35.577] | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.577] | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.577] | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:35.577] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.580] | : . Old stack:
[08:08:35.580] | : . List of 1
[08:08:35.580] | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.580] | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.580] | : .   ..- attr(*, "init")= chr "done"
[08:08:35.580] | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.580] | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.580] | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.580] | : .   ..- attr(*, "call")= language plan(sequential)
[08:08:35.580] | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.580] | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.580] | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.580] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.583] | : . Not identical
[08:08:35.583] | : . all.equal() for future ...
[08:08:35.583] | : . ' List of 2
[08:08:35.583] | : . '  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:35.583] | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:08:35.583] | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:35.583] | : . '   ..- attr(*, "init")= logi TRUE
[08:08:35.583] | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.583] | : . '     ...)  
[08:08:35.583] | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.583] | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.583] | : . '   ..- attr(*, "call")= language plan(strategy)
[08:08:35.583] | : . '  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.583] | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.583] | : . '   ..- attr(*, "init")= chr "done"
[08:08:35.583] | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.583] | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.583] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.583] | : . '   ..- attr(*, "call")= language plan(sequential)
[08:08:35.583] | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c22a7d0> 
[08:08:35.583] | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.583] | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.588] | : . ' Formals differ
[08:08:35.588] | : . all.equal() for future ... done
[08:08:35.588] | : . Future strategies differ at level 1
[08:08:35.589] | : all.equal() for FutureStrategyList ... done
[08:08:35.589] | : plan(): Setting new future backend stack:
[08:08:35.589] | : List of future strategies:
[08:08:35.589] | : 1. multicore:
[08:08:35.589] | :    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:35.589] | :    - tweaked: FALSE
[08:08:35.589] | :    - call: plan(strategy)
[08:08:35.589] | : List of 1
[08:08:35.589] | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:35.589] | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:35.589] | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:35.589] | :   ..- attr(*, "init")= logi TRUE
[08:08:35.589] | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.589] | :     ...)  
[08:08:35.589] | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.589] | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.589] | :   ..- attr(*, "call")= language plan(strategy)
[08:08:35.589] | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.593] | : plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ...
[08:08:35.593] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.593] | : . ' Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:35.594] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.594] | : . Legacy shutdown of cluster workers ...
[08:08:35.594] | : . ' Stopping existing cluster ...
[08:08:35.594] | : . ' , No pre-existing cluster. Skipping
[08:08:35.594] | : . ' Stopping existing cluster ... done
[08:08:35.594] | : . Legacy shutdown of cluster workers ... done
[08:08:35.594] | : plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[08:08:35.595] | : plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ...
[08:08:35.595] | : . function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:35.595] | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:35.595] | : .  - attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:35.595] | : .  - attr(*, "init")= logi TRUE
[08:08:35.595] | : .  - attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.595] | : .     ...)  
[08:08:35.595] | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.595] | : .  - attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.595] | : .  - attr(*, "call")= language plan(strategy)
[08:08:35.597] | : . init: TRUE
[08:08:35.597] | : . makeFutureBackend(<multicore>) ...
[08:08:35.597] | : . ' Backend function: <‘NULL’>
[08:08:35.597] | : . ' Evaluator tweak arguments: [n=0]
[08:08:35.597] | : . '  list()
[08:08:35.597] | : . ' Evaluator formal arguments: [n=3]
[08:08:35.597] | : . '  list()
[08:08:35.598] | : . ' Backend factory arguments: [n=3]
[08:08:35.598] | : . ' Dotted pair list of 3
[08:08:35.598] | : . '  $ workers    : language availableCores(constraints = "multicore")
[08:08:35.598] | : . '  $ gc         : logi FALSE
[08:08:35.598] | : . '  $ earlySignal: logi FALSE
[08:08:35.601] | : . ' Backend: <‘MulticoreFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:35.601] | : . makeFutureBackend(<multicore>) ... done
[08:08:35.601] | : plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ... done
[08:08:35.601] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.601] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.602] | : plan(): nbrOfWorkers() = 2
[08:08:35.602] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[08:08:35.602] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
- lm(<formula>) ...
[08:08:35.602] future(..., label = NULL) ...
[08:08:35.602] | lazy: FALSE
[08:08:35.602] | stdout: TRUE
[08:08:35.602] | conditions: [n=1] ‘condition’
[08:08:35.602] | gc: FALSE
[08:08:35.602] | earlySignal: FALSE
[08:08:35.602] | getGlobalsAndPackages() ...
[08:08:35.603] | : Searching for globals ...
[08:08:35.616] | : . globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[08:08:35.616] | : Searching for globals ... done
[08:08:35.616] | : Resolving globals: FALSE
[08:08:35.616] | : Search for packages associated with the globals ...
[08:08:35.617] | : . Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:35.617] | : . Packages: [2] ‘base’, ‘stats’
[08:08:35.617] | : Search for packages associated with the globals ... done
[08:08:35.617] | : Packages after dropping 'base': [1] ‘stats’
[08:08:35.617] | : Packages after dropping non-attached packages: [1] ‘stats’
[08:08:35.617] | : globals: [2] ‘weight’, ‘group’
[08:08:35.618] | : packages: [1] ‘stats’
[08:08:35.618] | getGlobalsAndPackages() ... done
[08:08:35.618] | run() for ‘Future’ (<unnamed-15>) ...
[08:08:35.618] | : state: ‘created’
[08:08:35.618] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.618] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.618] | : Using MulticoreFutureBackend ...
[08:08:35.618] | : . Number of futures since start: 0 (0 created, 0 launched, 0 finished)
[08:08:35.619] | : . Launching futures ...
[08:08:35.619] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:08:35.619] | : . ' , getFutureData() ...
[08:08:35.619] | : . ' , ; getFutureCore() ...
[08:08:35.619] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘stats’
[08:08:35.619] | : . ' , ; getFutureCore() ... done
[08:08:35.619] | : . ' , ; getFutureCapture() ...
[08:08:35.620] | : . ' , ; getFutureCapture() ... done
[08:08:35.620] | : . ' , ; getFutureContext() ...
[08:08:35.620] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.620] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:35.620] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.620] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:35.620] | : . ' , ; getFutureContext() ... done
[08:08:35.621] | : . ' , getFutureData() ... done
[08:08:35.621] | : . ' , requestCore(..., workers = 2) ...
[08:08:35.621] | : . ' , requestCore(..., workers = 2) ... done
[08:08:35.624] | : . ' , MulticoreFuture started
[08:08:35.624] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:08:35.625] | : . Launching futures ... done
[08:08:35.625] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:35.625] | : Using MulticoreFutureBackend ... done
[08:08:35.625] | run() for ‘Future’ (<unnamed-15>) ... done
[08:08:35.626] future(..., label = NULL) ... done
[08:08:35.626] value() for MulticoreFuture (<unnamed-15>) ...
[08:08:35.627] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.627] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:35.628] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.628] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.628] | result() for MulticoreFuture ...
[08:08:35.628] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:35.629] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:35.629] | : . ' , ; ` | New stack:
[08:08:35.629] | : . ' , ; ` | List of 1
[08:08:35.629] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.629] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.629] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:35.629] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.629] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.629] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.629] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.629] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.637] | : . ' , ; ` | Old stack:
[08:08:35.638] | : . ' , ; ` | List of 1
[08:08:35.638] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:35.638] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:35.638] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:35.638] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:35.638] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.638] | : . ' , ; ` |     ...)  
[08:08:35.638] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.638] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.638] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:35.638] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:35.638] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.638] | : . ' , ; ` |     ...)  
[08:08:35.638] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.638] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.645] | : . ' , ; ` | Not identical
[08:08:35.645] | : . ' , ; ` | all.equal() for future ...
[08:08:35.645] | : . ' , ; ` | : List of 2
[08:08:35.645] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.645] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.645] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:35.645] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.645] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.645] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.645] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.645] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:35.645] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:35.645] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:35.645] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.645] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.645] | : . ' , ; ` | :     ...)  
[08:08:35.645] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.645] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.645] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:35.645] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:35.645] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.645] | : . ' , ; ` | :     ...)  
[08:08:35.645] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.652] | : . ' , ; ` | : Formals differ
[08:08:35.653] | : . ' , ; ` | all.equal() for future ... done
[08:08:35.653] | : . ' , ; ` | Future strategies differ at level 1
[08:08:35.653] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:35.653] | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:35.653] | : . ' , ; ` List of future strategies:
[08:08:35.653] | : . ' , ; ` 1. sequential:
[08:08:35.653] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:35.653] | : . ' , ; `    - tweaked: FALSE
[08:08:35.653] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.654] | : . ' , ; ` List of 1
[08:08:35.654] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.654] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.654] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:35.654] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.654] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.654] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.654] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.654] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.657] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:35.657] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:35.657] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.657] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:35.657] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.657] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.657] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:08:35.657] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.657] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.657] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.657] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.659] | : . ' , ; ` | : init: TRUE
[08:08:35.659] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:08:35.661] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:08:35.661] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:08:35.661] | : . ' , ; ` | : .  list()
[08:08:35.661] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:08:35.662] | : . ' , ; ` | : .  list()
[08:08:35.662] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:08:35.662] | : . ' , ; ` | : . Dotted pair list of 2
[08:08:35.662] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:08:35.662] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:08:35.663] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:35.663] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:08:35.663] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:35.663] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.664] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:08:35.664] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:35.664] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.664] | : . ' , assign_globals() ...
[08:08:35.664] | : . ' , List of 2
[08:08:35.664] | : . ' ,  $ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[08:08:35.664] | : . ' ,  $ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[08:08:35.664] | : . ' ,  - attr(*, "where")=List of 2
[08:08:35.664] | : . ' ,   ..$ weight:<environment: R_GlobalEnv> 
[08:08:35.664] | : . ' ,   ..$ group :<environment: R_GlobalEnv> 
[08:08:35.664] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:35.664] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:35.664] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:35.664] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:35.667] | : . ' , - copied ‘weight’ to environment
[08:08:35.668] | : . ' , - copied ‘group’ to environment
[08:08:35.668] | : . ' , assign_globals() ... done
[08:08:35.671] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.671] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.671] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:35.671] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:35.671] | : . ' , ; ` | : New stack:
[08:08:35.671] | : . ' , ; ` | : List of 1
[08:08:35.671] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:35.671] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:35.671] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:35.671] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.671] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.671] | : . ' , ; ` | :     ...)  
[08:08:35.671] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.671] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.671] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:35.671] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:35.671] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.671] | : . ' , ; ` | :     ...)  
[08:08:35.671] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.671] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.674] | : . ' , ; ` | : Old stack:
[08:08:35.675] | : . ' , ; ` | : List of 1
[08:08:35.675] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.675] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.675] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.675] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.675] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.675] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.675] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.675] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d6407e8> 
[08:08:35.675] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.675] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.675] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.678] | : . ' , ; ` | : Not identical
[08:08:35.678] | : . ' , ; ` | : all.equal() for future ...
[08:08:35.679] | : . ' , ; ` | : . List of 2
[08:08:35.679] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:35.679] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:35.679] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:35.679] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:35.679] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.679] | : . ' , ; ` | : .     ...)  
[08:08:35.679] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.679] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.679] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:35.679] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:35.679] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.679] | : . ' , ; ` | : .     ...)  
[08:08:35.679] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.679] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.679] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.679] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:35.679] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.679] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.679] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.679] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.679] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d6407e8> 
[08:08:35.679] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.679] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.684] | : . ' , ; ` | : . Formals differ
[08:08:35.685] | : . ' , ; ` | : all.equal() for future ... done
[08:08:35.685] | : . ' , ; ` | : Future strategies differ at level 1
[08:08:35.685] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:35.685] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:08:35.685] | : . ' , ; ` | List of future strategies:
[08:08:35.685] | : . ' , ; ` | 1. multicore:
[08:08:35.685] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:35.685] | : . ' , ; ` |    - tweaked: FALSE
[08:08:35.685] | : . ' , ; ` |    - call: plan(strategy)
[08:08:35.685] | : . ' , ; ` | List of 1
[08:08:35.685] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:35.685] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:35.685] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:35.685] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:35.685] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.685] | : . ' , ; ` |     ...)  
[08:08:35.685] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.685] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.685] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:35.685] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:35.685] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.685] | : . ' , ; ` |     ...)  
[08:08:35.685] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.685] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.688] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:35.689] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:35.689] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.689] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.689] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:08:35.689] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:35.689] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.689] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.690] | : readImmediateCondition() ...
[08:08:35.691] | : . Path: ‘/tmp/Rtmp8aU2y3/.future/immediateConditions’
[08:08:35.691] | : . Number of RDS files: 0
[08:08:35.691] | : . Returned conditions set:
[08:08:35.691] | : .  list()
[08:08:35.692] | : readImmediateCondition() ... done
[08:08:35.692] | : result() for MulticoreFuture ...
[08:08:35.692] | : result() for MulticoreFuture ... done
[08:08:35.692] | : signalConditions() ...
[08:08:35.693] | : . include = ‘immediateCondition’
[08:08:35.693] | : . exclude = 
[08:08:35.693] | : . resignal = FALSE
[08:08:35.693] | : . Number of conditions: 6
[08:08:35.693] | : .  int 6
[08:08:35.694] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.694] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.696] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.696] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.697] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.697] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.697] | : signalConditions() ... done
[08:08:35.697] | result() for MulticoreFuture ... done
[08:08:35.697] | result() for MulticoreFuture ...
[08:08:35.698] | result() for MulticoreFuture ... done
[08:08:35.698] | signalConditions() ...
[08:08:35.698] | : include = ‘immediateCondition’
[08:08:35.698] | : exclude = 
[08:08:35.698] | : resignal = FALSE
[08:08:35.699] | : Number of conditions: 6
[08:08:35.699] | :  int 6
[08:08:35.700] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.700] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.700] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.700] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.701] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.701] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.701] | signalConditions() ... done
[08:08:35.701] | relay stdout ...
[08:08:35.701] | relay stdout ... done
[08:08:35.701] | check for misuse ...
[08:08:35.701] | check for misuse ... done
[08:08:35.702] | relay conditions ...
[08:08:35.702] | : Future state: ‘finished’
[08:08:35.702] | : result() for MulticoreFuture ...
[08:08:35.702] | : result() for MulticoreFuture ... done
[08:08:35.702] | : signalConditions() ...
[08:08:35.702] | : . include = ‘condition’
[08:08:35.702] | : . exclude = ‘immediateCondition’
[08:08:35.703] | : . resignal = TRUE
[08:08:35.703] | : . Number of conditions: 6
[08:08:35.703] | : .  int 6
[08:08:35.703] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.703] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.624] | : . ' , attachPackages() ...
[08:08:35.704] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.704] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.625] | : . ' , ; packages: [n=1] ‘future’
[08:08:35.704] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.704] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.625] | : . ' , attachPackages() ... done
[08:08:35.704] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.704] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.626] | : . ' , attachPackages() ...
[08:08:35.705] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.705] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.626] | : . ' , ; packages: [n=1] ‘stats’
[08:08:35.705] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.705] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.626] | : . ' , attachPackages() ... done
[08:08:35.705] | : signalConditions() ... done
[08:08:35.705] | relay conditions ... done
[08:08:35.705] value() for MulticoreFuture (<unnamed-15>) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[08:08:35.707] future(..., label = NULL) ...
[08:08:35.708] | lazy: TRUE
[08:08:35.708] | stdout: TRUE
[08:08:35.708] | conditions: [n=1] ‘condition’
[08:08:35.708] | gc: FALSE
[08:08:35.708] | earlySignal: FALSE
[08:08:35.708] | getGlobalsAndPackages() ...
[08:08:35.708] | : Searching for globals ...
[08:08:35.723] | : . globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[08:08:35.723] | : Searching for globals ... done
[08:08:35.724] | : Resolving globals: FALSE
[08:08:35.724] | : Search for packages associated with the globals ...
[08:08:35.724] | : . Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:35.724] | : . Packages: [2] ‘base’, ‘stats’
[08:08:35.724] | : Search for packages associated with the globals ... done
[08:08:35.725] | : Packages after dropping 'base': [1] ‘stats’
[08:08:35.725] | : Packages after dropping non-attached packages: [1] ‘stats’
[08:08:35.725] | : globals: [2] ‘weight’, ‘group’
[08:08:35.725] | : packages: [1] ‘stats’
[08:08:35.725] | getGlobalsAndPackages() ... done
[08:08:35.725] future(..., label = NULL) ... done
[08:08:35.725] value() for Future (<unnamed-16>) ...
[08:08:35.726] | run() for ‘Future’ (<unnamed-16>) ...
[08:08:35.726] | : state: ‘created’
[08:08:35.726] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.726] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.726] | : Using MulticoreFutureBackend ...
[08:08:35.726] | : . Number of futures since start: 1 (1 created, 1 launched, 1 finished)
[08:08:35.726] | : . Launching futures ...
[08:08:35.726] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:08:35.726] | : . ' , getFutureData() ...
[08:08:35.727] | : . ' , ; getFutureCore() ...
[08:08:35.727] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘stats’
[08:08:35.727] | : . ' , ; getFutureCore() ... done
[08:08:35.727] | : . ' , ; getFutureCapture() ...
[08:08:35.727] | : . ' , ; getFutureCapture() ... done
[08:08:35.727] | : . ' , ; getFutureContext() ...
[08:08:35.727] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.727] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:35.727] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.727] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:35.728] | : . ' , ; getFutureContext() ... done
[08:08:35.728] | : . ' , getFutureData() ... done
[08:08:35.728] | : . ' , requestCore(..., workers = 2) ...
[08:08:35.728] | : . ' , requestCore(..., workers = 2) ... done
[08:08:35.730] | : . ' , MulticoreFuture started
[08:08:35.730] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:08:35.731] | : . Launching futures ... done
[08:08:35.731] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:35.731] | : Using MulticoreFutureBackend ... done
[08:08:35.731] | run() for ‘Future’ (<unnamed-16>) ... done
[08:08:35.731] | result() for MulticoreFuture ...
[08:08:35.733] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.734] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:35.734] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.734] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.735] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:35.735] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:35.735] | : . ' , ; ` | New stack:
[08:08:35.735] | : . ' , ; ` | List of 1
[08:08:35.735] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.735] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.735] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:35.735] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.735] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.735] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.735] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.735] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.742] | : . ' , ; ` | Old stack:
[08:08:35.743] | : . ' , ; ` | List of 1
[08:08:35.743] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:35.743] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:35.743] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:35.743] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:35.743] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.743] | : . ' , ; ` |     ...)  
[08:08:35.743] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.743] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.743] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:35.743] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:35.743] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.743] | : . ' , ; ` |     ...)  
[08:08:35.743] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.743] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.750] | : . ' , ; ` | Not identical
[08:08:35.751] | : . ' , ; ` | all.equal() for future ...
[08:08:35.751] | : . ' , ; ` | : List of 2
[08:08:35.751] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.751] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.751] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:35.751] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.751] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.751] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.751] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.751] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:35.751] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:35.751] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:35.751] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.751] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.751] | : . ' , ; ` | :     ...)  
[08:08:35.751] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.751] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.751] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:35.751] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:35.751] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.751] | : . ' , ; ` | :     ...)  
[08:08:35.751] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.758] | : . ' , ; ` | : Formals differ
[08:08:35.759] | : . ' , ; ` | all.equal() for future ... done
[08:08:35.759] | : . ' , ; ` | Future strategies differ at level 1
[08:08:35.759] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:35.759] | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:35.759] | : . ' , ; ` List of future strategies:
[08:08:35.759] | : . ' , ; ` 1. sequential:
[08:08:35.759] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:35.759] | : . ' , ; `    - tweaked: FALSE
[08:08:35.759] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.760] | : . ' , ; ` List of 1
[08:08:35.760] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.760] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.760] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:35.760] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.760] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.760] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.760] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.760] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.763] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:35.763] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:35.763] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.763] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:35.763] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.763] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.763] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:08:35.763] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.763] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.763] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.763] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.765] | : . ' , ; ` | : init: TRUE
[08:08:35.765] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:08:35.765] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:08:35.766] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:08:35.766] | : . ' , ; ` | : .  list()
[08:08:35.766] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:08:35.766] | : . ' , ; ` | : .  list()
[08:08:35.766] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:08:35.766] | : . ' , ; ` | : . Dotted pair list of 2
[08:08:35.766] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:08:35.766] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:08:35.769] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:35.769] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:08:35.769] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:35.769] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.769] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:08:35.769] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:35.769] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.770] | : . ' , assign_globals() ...
[08:08:35.770] | : . ' , List of 2
[08:08:35.770] | : . ' ,  $ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[08:08:35.770] | : . ' ,  $ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[08:08:35.770] | : . ' ,  - attr(*, "where")=List of 2
[08:08:35.770] | : . ' ,   ..$ weight:<environment: R_GlobalEnv> 
[08:08:35.770] | : . ' ,   ..$ group :<environment: R_GlobalEnv> 
[08:08:35.770] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:35.770] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:35.770] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:35.770] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:35.773] | : . ' , - copied ‘weight’ to environment
[08:08:35.773] | : . ' , - copied ‘group’ to environment
[08:08:35.773] | : . ' , assign_globals() ... done
[08:08:35.776] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.777] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.777] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:35.777] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:35.777] | : . ' , ; ` | : New stack:
[08:08:35.777] | : . ' , ; ` | : List of 1
[08:08:35.777] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:35.777] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:35.777] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:35.777] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.777] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.777] | : . ' , ; ` | :     ...)  
[08:08:35.777] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.777] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.777] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:35.777] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:35.777] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.777] | : . ' , ; ` | :     ...)  
[08:08:35.777] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.777] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.780] | : . ' , ; ` | : Old stack:
[08:08:35.780] | : . ' , ; ` | : List of 1
[08:08:35.780] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.780] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.780] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.780] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.780] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.780] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.780] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.780] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94df88138> 
[08:08:35.780] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.780] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.780] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.783] | : . ' , ; ` | : Not identical
[08:08:35.783] | : . ' , ; ` | : all.equal() for future ...
[08:08:35.784] | : . ' , ; ` | : . List of 2
[08:08:35.784] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:35.784] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:35.784] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:35.784] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:35.784] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.784] | : . ' , ; ` | : .     ...)  
[08:08:35.784] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.784] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.784] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:35.784] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:35.784] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.784] | : . ' , ; ` | : .     ...)  
[08:08:35.784] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.784] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.784] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.784] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:35.784] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.784] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.784] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.784] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.784] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94df88138> 
[08:08:35.784] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.784] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.790] | : . ' , ; ` | : . Formals differ
[08:08:35.790] | : . ' , ; ` | : all.equal() for future ... done
[08:08:35.790] | : . ' , ; ` | : Future strategies differ at level 1
[08:08:35.790] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:35.791] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:08:35.791] | : . ' , ; ` | List of future strategies:
[08:08:35.791] | : . ' , ; ` | 1. multicore:
[08:08:35.791] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:35.791] | : . ' , ; ` |    - tweaked: FALSE
[08:08:35.791] | : . ' , ; ` |    - call: plan(strategy)
[08:08:35.791] | : . ' , ; ` | List of 1
[08:08:35.791] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:35.791] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:35.791] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:35.791] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:35.791] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.791] | : . ' , ; ` |     ...)  
[08:08:35.791] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.791] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.791] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:35.791] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:35.791] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.791] | : . ' , ; ` |     ...)  
[08:08:35.791] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.791] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.794] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:35.794] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:35.794] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.794] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.795] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:08:35.795] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:35.795] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.795] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.796] | : readImmediateCondition() ...
[08:08:35.796] | : . Path: ‘/tmp/Rtmp8aU2y3/.future/immediateConditions’
[08:08:35.796] | : . Number of RDS files: 0
[08:08:35.796] | : . Returned conditions set:
[08:08:35.796] | : .  list()
[08:08:35.797] | : readImmediateCondition() ... done
[08:08:35.797] | : result() for MulticoreFuture ...
[08:08:35.798] | : result() for MulticoreFuture ... done
[08:08:35.798] | : signalConditions() ...
[08:08:35.798] | : . include = ‘immediateCondition’
[08:08:35.798] | : . exclude = 
[08:08:35.798] | : . resignal = FALSE
[08:08:35.798] | : . Number of conditions: 6
[08:08:35.798] | : .  int 6
[08:08:35.799] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.799] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.799] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.800] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.800] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.800] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.800] | : signalConditions() ... done
[08:08:35.800] | result() for MulticoreFuture ... done
[08:08:35.800] | result() for MulticoreFuture ...
[08:08:35.800] | result() for MulticoreFuture ... done
[08:08:35.801] | signalConditions() ...
[08:08:35.801] | : include = ‘immediateCondition’
[08:08:35.801] | : exclude = 
[08:08:35.801] | : resignal = FALSE
[08:08:35.801] | : Number of conditions: 6
[08:08:35.801] | :  int 6
[08:08:35.804] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.804] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.804] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.804] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.805] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.805] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.805] | signalConditions() ... done
[08:08:35.805] | relay stdout ...
[08:08:35.805] | relay stdout ... done
[08:08:35.806] | check for misuse ...
[08:08:35.806] | check for misuse ... done
[08:08:35.806] | relay conditions ...
[08:08:35.806] | : Future state: ‘finished’
[08:08:35.806] | : result() for MulticoreFuture ...
[08:08:35.806] | : result() for MulticoreFuture ... done
[08:08:35.807] | : signalConditions() ...
[08:08:35.807] | : . include = ‘condition’
[08:08:35.807] | : . exclude = ‘immediateCondition’
[08:08:35.807] | : . resignal = TRUE
[08:08:35.807] | : . Number of conditions: 6
[08:08:35.807] | : .  int 6
[08:08:35.808] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.808] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.731] | : . ' , attachPackages() ...
[08:08:35.809] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.809] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.731] | : . ' , ; packages: [n=1] ‘future’
[08:08:35.809] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.809] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.732] | : . ' , attachPackages() ... done
[08:08:35.809] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.810] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.732] | : . ' , attachPackages() ...
[08:08:35.810] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.810] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.732] | : . ' , ; packages: [n=1] ‘stats’
[08:08:35.810] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.810] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.732] | : . ' , attachPackages() ... done
[08:08:35.810] | : signalConditions() ... done
[08:08:35.811] | relay conditions ... done
[08:08:35.811] value() for Future (<unnamed-16>) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[08:08:35.813] future(..., label = NULL) ...
[08:08:35.813] | lazy: FALSE
[08:08:35.813] | stdout: TRUE
[08:08:35.813] | conditions: [n=1] ‘condition’
[08:08:35.813] | gc: FALSE
[08:08:35.814] | earlySignal: FALSE
[08:08:35.814] | getGlobalsAndPackages() ...
[08:08:35.814] | : Searching for globals ...
[08:08:35.828] | : . globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[08:08:35.828] | : Searching for globals ... done
[08:08:35.828] | : Resolving globals: FALSE
[08:08:35.828] | : Search for packages associated with the globals ...
[08:08:35.828] | : . Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:35.829] | : . Packages: [2] ‘base’, ‘stats’
[08:08:35.829] | : Search for packages associated with the globals ... done
[08:08:35.829] | : Packages after dropping 'base': [1] ‘stats’
[08:08:35.829] | : Packages after dropping non-attached packages: [1] ‘stats’
[08:08:35.829] | : globals: [2] ‘weight’, ‘group’
[08:08:35.829] | : packages: [1] ‘stats’
[08:08:35.829] | getGlobalsAndPackages() ... done
[08:08:35.830] | run() for ‘Future’ (<unnamed-17>) ...
[08:08:35.830] | : state: ‘created’
[08:08:35.830] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.830] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.830] | : Using MulticoreFutureBackend ...
[08:08:35.830] | : . Number of futures since start: 2 (2 created, 2 launched, 2 finished)
[08:08:35.830] | : . Launching futures ...
[08:08:35.831] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:08:35.831] | : . ' , getFutureData() ...
[08:08:35.831] | : . ' , ; getFutureCore() ...
[08:08:35.831] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘stats’
[08:08:35.831] | : . ' , ; getFutureCore() ... done
[08:08:35.831] | : . ' , ; getFutureCapture() ...
[08:08:35.831] | : . ' , ; getFutureCapture() ... done
[08:08:35.831] | : . ' , ; getFutureContext() ...
[08:08:35.831] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.832] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:35.832] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.832] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:35.832] | : . ' , ; getFutureContext() ... done
[08:08:35.832] | : . ' , getFutureData() ... done
[08:08:35.832] | : . ' , requestCore(..., workers = 2) ...
[08:08:35.832] | : . ' , requestCore(..., workers = 2) ... done
[08:08:35.834] | : . ' , MulticoreFuture started
[08:08:35.835] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:08:35.835] | : . Launching futures ... done
[08:08:35.835] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:35.835] | : Using MulticoreFutureBackend ... done
[08:08:35.836] | run() for ‘Future’ (<unnamed-17>) ... done
[08:08:35.836] future(..., label = NULL) ... done
[08:08:35.836] value() for MulticoreFuture (<unnamed-17>) ...
[08:08:35.836] | result() for MulticoreFuture ...
[08:08:35.838] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.838] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:35.838] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.839] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.839] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:35.839] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:35.839] | : . ' , ; ` | New stack:
[08:08:35.840] | : . ' , ; ` | List of 1
[08:08:35.840] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.840] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.840] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:35.840] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.840] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.840] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.840] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.840] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.844] | : . ' , ; ` | Old stack:
[08:08:35.845] | : . ' , ; ` | List of 1
[08:08:35.845] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:35.845] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:35.845] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:35.845] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:35.845] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.845] | : . ' , ; ` |     ...)  
[08:08:35.845] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.845] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.845] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:35.845] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:35.845] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.845] | : . ' , ; ` |     ...)  
[08:08:35.845] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.845] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.854] | : . ' , ; ` | Not identical
[08:08:35.855] | : . ' , ; ` | all.equal() for future ...
[08:08:35.855] | : . ' , ; ` | : List of 2
[08:08:35.855] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.855] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.855] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:35.855] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.855] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.855] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.855] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.855] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:35.855] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:35.855] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:35.855] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.855] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.855] | : . ' , ; ` | :     ...)  
[08:08:35.855] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.855] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.855] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:35.855] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:35.855] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.855] | : . ' , ; ` | :     ...)  
[08:08:35.855] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.864] | : . ' , ; ` | : Formals differ
[08:08:35.864] | : . ' , ; ` | all.equal() for future ... done
[08:08:35.865] | : . ' , ; ` | Future strategies differ at level 1
[08:08:35.865] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:35.865] | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:35.865] | : . ' , ; ` List of future strategies:
[08:08:35.865] | : . ' , ; ` 1. sequential:
[08:08:35.865] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:35.865] | : . ' , ; `    - tweaked: FALSE
[08:08:35.865] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.866] | : . ' , ; ` List of 1
[08:08:35.866] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.866] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.866] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:35.866] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.866] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.866] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.866] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.866] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.869] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:35.869] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:35.869] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.869] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:35.870] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.870] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.870] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:08:35.870] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.870] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.870] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.870] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.872] | : . ' , ; ` | : init: TRUE
[08:08:35.872] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:08:35.872] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:08:35.872] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:08:35.872] | : . ' , ; ` | : .  list()
[08:08:35.872] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:08:35.873] | : . ' , ; ` | : .  list()
[08:08:35.873] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:08:35.873] | : . ' , ; ` | : . Dotted pair list of 2
[08:08:35.873] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:08:35.873] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:08:35.874] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:35.874] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:08:35.874] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:35.875] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.875] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:08:35.875] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:35.875] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.875] | : . ' , assign_globals() ...
[08:08:35.875] | : . ' , List of 2
[08:08:35.875] | : . ' ,  $ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[08:08:35.875] | : . ' ,  $ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[08:08:35.875] | : . ' ,  - attr(*, "where")=List of 2
[08:08:35.875] | : . ' ,   ..$ weight:<environment: R_GlobalEnv> 
[08:08:35.875] | : . ' ,   ..$ group :<environment: R_GlobalEnv> 
[08:08:35.875] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:35.875] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:35.875] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:35.875] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:35.880] | : . ' , - copied ‘weight’ to environment
[08:08:35.880] | : . ' , - copied ‘group’ to environment
[08:08:35.881] | : . ' , assign_globals() ... done
[08:08:35.884] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.884] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.884] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:35.884] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:35.884] | : . ' , ; ` | : New stack:
[08:08:35.884] | : . ' , ; ` | : List of 1
[08:08:35.884] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:35.884] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:35.884] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:35.884] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.884] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.884] | : . ' , ; ` | :     ...)  
[08:08:35.884] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.884] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.884] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:35.884] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:35.884] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.884] | : . ' , ; ` | :     ...)  
[08:08:35.884] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.884] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.888] | : . ' , ; ` | : Old stack:
[08:08:35.888] | : . ' , ; ` | : List of 1
[08:08:35.888] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.888] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.888] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.888] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.888] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.888] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.888] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.888] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94de62530> 
[08:08:35.888] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.888] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.888] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.891] | : . ' , ; ` | : Not identical
[08:08:35.891] | : . ' , ; ` | : all.equal() for future ...
[08:08:35.891] | : . ' , ; ` | : . List of 2
[08:08:35.891] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:35.891] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:35.891] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:35.891] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:35.891] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.891] | : . ' , ; ` | : .     ...)  
[08:08:35.891] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.891] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.891] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:35.891] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:35.891] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.891] | : . ' , ; ` | : .     ...)  
[08:08:35.891] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.891] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.891] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.891] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:35.891] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.891] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.891] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.891] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.891] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94de62530> 
[08:08:35.891] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.891] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.898] | : . ' , ; ` | : . Formals differ
[08:08:35.898] | : . ' , ; ` | : all.equal() for future ... done
[08:08:35.898] | : . ' , ; ` | : Future strategies differ at level 1
[08:08:35.899] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:35.899] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:08:35.899] | : . ' , ; ` | List of future strategies:
[08:08:35.899] | : . ' , ; ` | 1. multicore:
[08:08:35.899] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:35.899] | : . ' , ; ` |    - tweaked: FALSE
[08:08:35.899] | : . ' , ; ` |    - call: plan(strategy)
[08:08:35.899] | : . ' , ; ` | List of 1
[08:08:35.899] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:35.899] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:35.899] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:35.899] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:35.899] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.899] | : . ' , ; ` |     ...)  
[08:08:35.899] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.899] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.899] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:35.899] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:35.899] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.899] | : . ' , ; ` |     ...)  
[08:08:35.899] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.899] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.902] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:35.902] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:35.903] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.903] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.903] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:08:35.903] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:35.903] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.903] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.904] | : readImmediateCondition() ...
[08:08:35.904] | : . Path: ‘/tmp/Rtmp8aU2y3/.future/immediateConditions’
[08:08:35.904] | : . Number of RDS files: 0
[08:08:35.905] | : . Returned conditions set:
[08:08:35.905] | : .  list()
[08:08:35.905] | : readImmediateCondition() ... done
[08:08:35.906] | : result() for MulticoreFuture ...
[08:08:35.906] | : result() for MulticoreFuture ... done
[08:08:35.906] | : signalConditions() ...
[08:08:35.906] | : . include = ‘immediateCondition’
[08:08:35.906] | : . exclude = 
[08:08:35.906] | : . resignal = FALSE
[08:08:35.907] | : . Number of conditions: 6
[08:08:35.907] | : .  int 6
[08:08:35.907] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.907] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.908] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.908] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.908] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.908] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.908] | : signalConditions() ... done
[08:08:35.908] | result() for MulticoreFuture ... done
[08:08:35.909] | result() for MulticoreFuture ...
[08:08:35.909] | result() for MulticoreFuture ... done
[08:08:35.909] | signalConditions() ...
[08:08:35.909] | : include = ‘immediateCondition’
[08:08:35.909] | : exclude = 
[08:08:35.909] | : resignal = FALSE
[08:08:35.909] | : Number of conditions: 6
[08:08:35.909] | :  int 6
[08:08:35.910] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.910] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.910] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.910] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.911] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.911] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.911] | signalConditions() ... done
[08:08:35.911] | relay stdout ...
[08:08:35.911] | relay stdout ... done
[08:08:35.911] | check for misuse ...
[08:08:35.911] | check for misuse ... done
[08:08:35.912] | relay conditions ...
[08:08:35.912] | : Future state: ‘finished’
[08:08:35.912] | : result() for MulticoreFuture ...
[08:08:35.912] | : result() for MulticoreFuture ... done
[08:08:35.912] | : signalConditions() ...
[08:08:35.914] | : . include = ‘condition’
[08:08:35.914] | : . exclude = ‘immediateCondition’
[08:08:35.914] | : . resignal = TRUE
[08:08:35.915] | : . Number of conditions: 6
[08:08:35.915] | : .  int 6
[08:08:35.916] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.916] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.835] | : . ' , attachPackages() ...
[08:08:35.916] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.916] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.836] | : . ' , ; packages: [n=1] ‘future’
[08:08:35.916] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.917] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.836] | : . ' , attachPackages() ... done
[08:08:35.917] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.917] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.836] | : . ' , attachPackages() ...
[08:08:35.917] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.917] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.837] | : . ' , ; packages: [n=1] ‘stats’
[08:08:35.918] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:35.918] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.837] | : . ' , attachPackages() ... done
[08:08:35.918] | : signalConditions() ... done
[08:08:35.918] | relay conditions ... done
[08:08:35.918] value() for MulticoreFuture (<unnamed-17>) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[08:08:35.921] future(..., label = NULL) ...
[08:08:35.921] | lazy: FALSE
[08:08:35.922] | stdout: TRUE
[08:08:35.922] | conditions: [n=1] ‘condition’
[08:08:35.922] | gc: FALSE
[08:08:35.922] | earlySignal: FALSE
[08:08:35.922] | getGlobalsAndPackages() ...
[08:08:35.922] | : Searching for globals ...
[08:08:35.936] | : . globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[08:08:35.936] | : Searching for globals ... done
[08:08:35.937] | : Resolving globals: FALSE
[08:08:35.937] | : Search for packages associated with the globals ...
[08:08:35.937] | : . Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:35.937] | : . Packages: [2] ‘base’, ‘stats’
[08:08:35.937] | : Search for packages associated with the globals ... done
[08:08:35.938] | : Packages after dropping 'base': [1] ‘stats’
[08:08:35.938] | : Packages after dropping non-attached packages: [1] ‘stats’
[08:08:35.938] | : globals: [2] ‘weight’, ‘group’
[08:08:35.938] | : packages: [1] ‘stats’
[08:08:35.938] | getGlobalsAndPackages() ... done
[08:08:35.938] | run() for ‘Future’ (<unnamed-18>) ...
[08:08:35.938] | : state: ‘created’
[08:08:35.939] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.939] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.939] | : Using MulticoreFutureBackend ...
[08:08:35.939] | : . Number of futures since start: 3 (3 created, 3 launched, 3 finished)
[08:08:35.939] | : . Launching futures ...
[08:08:35.939] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:08:35.939] | : . ' , getFutureData() ...
[08:08:35.939] | : . ' , ; getFutureCore() ...
[08:08:35.939] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘stats’
[08:08:35.940] | : . ' , ; getFutureCore() ... done
[08:08:35.940] | : . ' , ; getFutureCapture() ...
[08:08:35.940] | : . ' , ; getFutureCapture() ... done
[08:08:35.940] | : . ' , ; getFutureContext() ...
[08:08:35.940] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.940] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:35.940] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.940] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:35.940] | : . ' , ; getFutureContext() ... done
[08:08:35.941] | : . ' , getFutureData() ... done
[08:08:35.941] | : . ' , requestCore(..., workers = 2) ...
[08:08:35.941] | : . ' , requestCore(..., workers = 2) ... done
[08:08:35.943] | : . ' , MulticoreFuture started
[08:08:35.943] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:08:35.943] | : . Launching futures ... done
[08:08:35.944] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:35.944] | : Using MulticoreFutureBackend ... done
[08:08:35.944] | run() for ‘Future’ (<unnamed-18>) ... done
[08:08:35.944] future(..., label = NULL) ... done
[08:08:35.945] value() for MulticoreFuture (<unnamed-18>) ...
[08:08:35.945] | result() for MulticoreFuture ...
[08:08:35.946] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.947] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:35.947] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.947] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.948] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:35.948] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:35.948] | : . ' , ; ` | New stack:
[08:08:35.948] | : . ' , ; ` | List of 1
[08:08:35.948] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.948] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.948] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:35.948] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.948] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.948] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.948] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.948] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.953] | : . ' , ; ` | Old stack:
[08:08:35.953] | : . ' , ; ` | List of 1
[08:08:35.953] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:35.953] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:35.953] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:35.953] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:35.953] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.953] | : . ' , ; ` |     ...)  
[08:08:35.953] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.953] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.953] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:35.953] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:35.953] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.953] | : . ' , ; ` |     ...)  
[08:08:35.953] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.953] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.959] | : . ' , ; ` | Not identical
[08:08:35.959] | : . ' , ; ` | all.equal() for future ...
[08:08:35.961] | : . ' , ; ` | : List of 2
[08:08:35.961] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.961] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.961] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:35.961] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.961] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.961] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.961] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.961] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:35.961] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:35.961] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:35.961] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.961] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.961] | : . ' , ; ` | :     ...)  
[08:08:35.961] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.961] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.961] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:35.961] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:35.961] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.961] | : . ' , ; ` | :     ...)  
[08:08:35.961] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.971] | : . ' , ; ` | : Formals differ
[08:08:35.971] | : . ' , ; ` | all.equal() for future ... done
[08:08:35.971] | : . ' , ; ` | Future strategies differ at level 1
[08:08:35.971] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:35.971] | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:35.972] | : . ' , ; ` List of future strategies:
[08:08:35.972] | : . ' , ; ` 1. sequential:
[08:08:35.972] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:35.972] | : . ' , ; `    - tweaked: FALSE
[08:08:35.972] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.972] | : . ' , ; ` List of 1
[08:08:35.972] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.972] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.972] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:35.972] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.972] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.972] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.972] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.972] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.975] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:35.976] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:35.976] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:35.976] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:35.976] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.976] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.976] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:08:35.976] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.976] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.976] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.976] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.978] | : . ' , ; ` | : init: TRUE
[08:08:35.978] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:08:35.978] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:08:35.978] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:08:35.978] | : . ' , ; ` | : .  list()
[08:08:35.979] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:08:35.979] | : . ' , ; ` | : .  list()
[08:08:35.979] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:08:35.979] | : . ' , ; ` | : . Dotted pair list of 2
[08:08:35.979] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:08:35.979] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:08:35.980] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:35.980] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:08:35.981] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:35.981] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:35.981] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:08:35.981] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:35.981] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:35.981] | : . ' , assign_globals() ...
[08:08:35.981] | : . ' , List of 2
[08:08:35.981] | : . ' ,  $ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[08:08:35.981] | : . ' ,  $ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[08:08:35.981] | : . ' ,  - attr(*, "where")=List of 2
[08:08:35.981] | : . ' ,   ..$ weight:<environment: R_GlobalEnv> 
[08:08:35.981] | : . ' ,   ..$ group :<environment: R_GlobalEnv> 
[08:08:35.981] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:35.981] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:35.981] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:35.981] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:35.986] | : . ' , - copied ‘weight’ to environment
[08:08:35.986] | : . ' , - copied ‘group’ to environment
[08:08:35.986] | : . ' , assign_globals() ... done
[08:08:35.989] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.989] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:35.990] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:35.990] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:35.990] | : . ' , ; ` | : New stack:
[08:08:35.990] | : . ' , ; ` | : List of 1
[08:08:35.990] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:35.990] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:35.990] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:35.990] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.990] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.990] | : . ' , ; ` | :     ...)  
[08:08:35.990] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.990] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.990] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:35.990] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:35.990] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.990] | : . ' , ; ` | :     ...)  
[08:08:35.990] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.990] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.993] | : . ' , ; ` | : Old stack:
[08:08:35.993] | : . ' , ; ` | : List of 1
[08:08:35.993] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.993] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.993] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:35.993] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.993] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.993] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.993] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.993] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d977df8> 
[08:08:35.993] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.993] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.993] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:35.996] | : . ' , ; ` | : Not identical
[08:08:35.996] | : . ' , ; ` | : all.equal() for future ...
[08:08:35.996] | : . ' , ; ` | : . List of 2
[08:08:35.996] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:35.996] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:35.996] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:35.996] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:35.996] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.996] | : . ' , ; ` | : .     ...)  
[08:08:35.996] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.996] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.996] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:35.996] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:35.996] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:35.996] | : . ' , ; ` | : .     ...)  
[08:08:35.996] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:35.996] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:35.996] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:35.996] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:35.996] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.996] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.996] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:35.996] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:35.996] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d977df8> 
[08:08:35.996] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:35.996] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.003] | : . ' , ; ` | : . Formals differ
[08:08:36.003] | : . ' , ; ` | : all.equal() for future ... done
[08:08:36.003] | : . ' , ; ` | : Future strategies differ at level 1
[08:08:36.004] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:36.004] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:08:36.004] | : . ' , ; ` | List of future strategies:
[08:08:36.004] | : . ' , ; ` | 1. multicore:
[08:08:36.004] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:36.004] | : . ' , ; ` |    - tweaked: FALSE
[08:08:36.004] | : . ' , ; ` |    - call: plan(strategy)
[08:08:36.004] | : . ' , ; ` | List of 1
[08:08:36.004] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.004] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.004] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.004] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:36.004] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.004] | : . ' , ; ` |     ...)  
[08:08:36.004] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.004] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.004] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:36.004] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.004] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.004] | : . ' , ; ` |     ...)  
[08:08:36.004] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.004] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.007] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:36.007] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:36.008] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.008] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.008] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:08:36.008] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:36.008] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:36.008] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:36.009] | : readImmediateCondition() ...
[08:08:36.009] | : . Path: ‘/tmp/Rtmp8aU2y3/.future/immediateConditions’
[08:08:36.009] | : . Number of RDS files: 0
[08:08:36.010] | : . Returned conditions set:
[08:08:36.010] | : .  list()
[08:08:36.010] | : readImmediateCondition() ... done
[08:08:36.011] | : result() for MulticoreFuture ...
[08:08:36.011] | : result() for MulticoreFuture ... done
[08:08:36.011] | : signalConditions() ...
[08:08:36.011] | : . include = ‘immediateCondition’
[08:08:36.011] | : . exclude = 
[08:08:36.011] | : . resignal = FALSE
[08:08:36.012] | : . Number of conditions: 6
[08:08:36.012] | : .  int 6
[08:08:36.012] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.012] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.013] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.013] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.013] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.013] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.013] | : signalConditions() ... done
[08:08:36.013] | result() for MulticoreFuture ... done
[08:08:36.014] | result() for MulticoreFuture ...
[08:08:36.014] | result() for MulticoreFuture ... done
[08:08:36.014] | signalConditions() ...
[08:08:36.014] | : include = ‘immediateCondition’
[08:08:36.014] | : exclude = 
[08:08:36.014] | : resignal = FALSE
[08:08:36.014] | : Number of conditions: 6
[08:08:36.014] | :  int 6
[08:08:36.015] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.015] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.015] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.015] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.016] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.016] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.016] | signalConditions() ... done
[08:08:36.016] | relay stdout ...
[08:08:36.016] | relay stdout ... done
[08:08:36.016] | check for misuse ...
[08:08:36.016] | check for misuse ... done
[08:08:36.017] | relay conditions ...
[08:08:36.017] | : Future state: ‘finished’
[08:08:36.017] | : result() for MulticoreFuture ...
[08:08:36.017] | : result() for MulticoreFuture ... done
[08:08:36.017] | : signalConditions() ...
[08:08:36.017] | : . include = ‘condition’
[08:08:36.017] | : . exclude = ‘immediateCondition’
[08:08:36.018] | : . resignal = TRUE
[08:08:36.018] | : . Number of conditions: 6
[08:08:36.018] | : .  int 6
[08:08:36.018] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.018] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.944] | : . ' , attachPackages() ...
[08:08:36.019] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.019] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.944] | : . ' , ; packages: [n=1] ‘future’
[08:08:36.019] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.019] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.945] | : . ' , attachPackages() ... done
[08:08:36.019] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.021] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.945] | : . ' , attachPackages() ...
[08:08:36.021] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.022] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.945] | : . ' , ; packages: [n=1] ‘stats’
[08:08:36.022] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.022] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:35.946] | : . ' , attachPackages() ... done
[08:08:36.022] | : signalConditions() ... done
[08:08:36.023] | relay conditions ... done
[08:08:36.023] value() for MulticoreFuture (<unnamed-18>) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[08:08:36.026] future(..., label = NULL) ...
[08:08:36.026] | lazy: TRUE
[08:08:36.026] | stdout: TRUE
[08:08:36.026] | conditions: [n=1] ‘condition’
[08:08:36.026] | gc: FALSE
[08:08:36.027] | earlySignal: FALSE
[08:08:36.027] | getGlobalsAndPackages() ...
[08:08:36.027] | : Searching for globals ...
[08:08:36.041] | : . globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[08:08:36.041] | : Searching for globals ... done
[08:08:36.041] | : Resolving globals: FALSE
[08:08:36.041] | : Search for packages associated with the globals ...
[08:08:36.042] | : . Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:36.042] | : . Packages: [2] ‘base’, ‘stats’
[08:08:36.042] | : Search for packages associated with the globals ... done
[08:08:36.042] | : Packages after dropping 'base': [1] ‘stats’
[08:08:36.042] | : Packages after dropping non-attached packages: [1] ‘stats’
[08:08:36.042] | : globals: [2] ‘weight’, ‘group’
[08:08:36.043] | : packages: [1] ‘stats’
[08:08:36.043] | getGlobalsAndPackages() ... done
[08:08:36.043] future(..., label = NULL) ... done
[08:08:36.043] value() for Future (<unnamed-19>) ...
[08:08:36.043] | run() for ‘Future’ (<unnamed-19>) ...
[08:08:36.043] | : state: ‘created’
[08:08:36.043] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.044] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.044] | : Using MulticoreFutureBackend ...
[08:08:36.044] | : . Number of futures since start: 4 (4 created, 4 launched, 4 finished)
[08:08:36.044] | : . Launching futures ...
[08:08:36.044] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:08:36.044] | : . ' , getFutureData() ...
[08:08:36.044] | : . ' , ; getFutureCore() ...
[08:08:36.044] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘stats’
[08:08:36.044] | : . ' , ; getFutureCore() ... done
[08:08:36.045] | : . ' , ; getFutureCapture() ...
[08:08:36.045] | : . ' , ; getFutureCapture() ... done
[08:08:36.045] | : . ' , ; getFutureContext() ...
[08:08:36.045] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.045] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:36.045] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.045] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:36.045] | : . ' , ; getFutureContext() ... done
[08:08:36.045] | : . ' , getFutureData() ... done
[08:08:36.046] | : . ' , requestCore(..., workers = 2) ...
[08:08:36.046] | : . ' , requestCore(..., workers = 2) ... done
[08:08:36.048] | : . ' , MulticoreFuture started
[08:08:36.048] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:08:36.048] | : . Launching futures ... done
[08:08:36.049] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:36.049] | : Using MulticoreFutureBackend ... done
[08:08:36.049] | run() for ‘Future’ (<unnamed-19>) ... done
[08:08:36.049] | result() for MulticoreFuture ...
[08:08:36.051] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.051] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:36.052] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.052] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:36.052] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:36.053] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:36.053] | : . ' , ; ` | New stack:
[08:08:36.053] | : . ' , ; ` | List of 1
[08:08:36.053] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.053] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.053] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:36.053] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.053] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.053] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.053] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.053] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.058] | : . ' , ; ` | Old stack:
[08:08:36.058] | : . ' , ; ` | List of 1
[08:08:36.058] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.058] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.058] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.058] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:36.058] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.058] | : . ' , ; ` |     ...)  
[08:08:36.058] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.058] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.058] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:36.058] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.058] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.058] | : . ' , ; ` |     ...)  
[08:08:36.058] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.058] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.063] | : . ' , ; ` | Not identical
[08:08:36.064] | : . ' , ; ` | all.equal() for future ...
[08:08:36.064] | : . ' , ; ` | : List of 2
[08:08:36.064] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.064] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.064] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:36.064] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.064] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.064] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.064] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.064] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.064] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.064] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.064] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:36.064] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.064] | : . ' , ; ` | :     ...)  
[08:08:36.064] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.064] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.064] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:36.064] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.064] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.064] | : . ' , ; ` | :     ...)  
[08:08:36.064] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.076] | : . ' , ; ` | : Formals differ
[08:08:36.076] | : . ' , ; ` | all.equal() for future ... done
[08:08:36.076] | : . ' , ; ` | Future strategies differ at level 1
[08:08:36.076] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:36.076] | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:36.076] | : . ' , ; ` List of future strategies:
[08:08:36.076] | : . ' , ; ` 1. sequential:
[08:08:36.076] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:36.076] | : . ' , ; `    - tweaked: FALSE
[08:08:36.076] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.077] | : . ' , ; ` List of 1
[08:08:36.077] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.077] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.077] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:36.077] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.077] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.077] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.077] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.077] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.080] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:36.081] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:36.081] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.081] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:36.081] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.081] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.081] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:08:36.081] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.081] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.081] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.081] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.083] | : . ' , ; ` | : init: TRUE
[08:08:36.083] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:08:36.083] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:08:36.083] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:08:36.083] | : . ' , ; ` | : .  list()
[08:08:36.084] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:08:36.084] | : . ' , ; ` | : .  list()
[08:08:36.084] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:08:36.084] | : . ' , ; ` | : . Dotted pair list of 2
[08:08:36.084] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:08:36.084] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:08:36.085] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:36.086] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:08:36.086] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:36.086] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.086] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:08:36.086] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:36.086] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:36.086] | : . ' , assign_globals() ...
[08:08:36.086] | : . ' , List of 2
[08:08:36.086] | : . ' ,  $ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[08:08:36.086] | : . ' ,  $ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[08:08:36.086] | : . ' ,  - attr(*, "where")=List of 2
[08:08:36.086] | : . ' ,   ..$ weight:<environment: R_GlobalEnv> 
[08:08:36.086] | : . ' ,   ..$ group :<environment: R_GlobalEnv> 
[08:08:36.086] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:36.086] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:36.086] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:36.086] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:36.091] | : . ' , - copied ‘weight’ to environment
[08:08:36.091] | : . ' , - copied ‘group’ to environment
[08:08:36.091] | : . ' , assign_globals() ... done
[08:08:36.095] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:36.095] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:36.095] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:36.095] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:36.095] | : . ' , ; ` | : New stack:
[08:08:36.095] | : . ' , ; ` | : List of 1
[08:08:36.095] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.095] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.095] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.095] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:36.095] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.095] | : . ' , ; ` | :     ...)  
[08:08:36.095] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.095] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.095] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:36.095] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.095] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.095] | : . ' , ; ` | :     ...)  
[08:08:36.095] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.095] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.099] | : . ' , ; ` | : Old stack:
[08:08:36.099] | : . ' , ; ` | : List of 1
[08:08:36.099] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.099] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.099] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:36.099] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.099] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.099] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.099] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.099] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d782680> 
[08:08:36.099] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.099] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.099] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.102] | : . ' , ; ` | : Not identical
[08:08:36.102] | : . ' , ; ` | : all.equal() for future ...
[08:08:36.102] | : . ' , ; ` | : . List of 2
[08:08:36.102] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.102] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.102] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.102] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:36.102] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.102] | : . ' , ; ` | : .     ...)  
[08:08:36.102] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.102] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.102] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:36.102] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.102] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.102] | : . ' , ; ` | : .     ...)  
[08:08:36.102] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.102] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.102] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.102] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:36.102] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.102] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.102] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.102] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.102] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d782680> 
[08:08:36.102] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.102] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.109] | : . ' , ; ` | : . Formals differ
[08:08:36.109] | : . ' , ; ` | : all.equal() for future ... done
[08:08:36.109] | : . ' , ; ` | : Future strategies differ at level 1
[08:08:36.109] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:36.109] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:08:36.109] | : . ' , ; ` | List of future strategies:
[08:08:36.109] | : . ' , ; ` | 1. multicore:
[08:08:36.109] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:36.109] | : . ' , ; ` |    - tweaked: FALSE
[08:08:36.109] | : . ' , ; ` |    - call: plan(strategy)
[08:08:36.110] | : . ' , ; ` | List of 1
[08:08:36.110] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.110] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.110] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.110] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:36.110] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.110] | : . ' , ; ` |     ...)  
[08:08:36.110] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.110] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.110] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:36.110] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.110] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.110] | : . ' , ; ` |     ...)  
[08:08:36.110] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.110] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.113] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:36.113] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:36.113] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.113] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.114] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:08:36.114] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:36.114] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:36.114] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:36.115] | : readImmediateCondition() ...
[08:08:36.115] | : . Path: ‘/tmp/Rtmp8aU2y3/.future/immediateConditions’
[08:08:36.115] | : . Number of RDS files: 0
[08:08:36.115] | : . Returned conditions set:
[08:08:36.115] | : .  list()
[08:08:36.116] | : readImmediateCondition() ... done
[08:08:36.116] | : result() for MulticoreFuture ...
[08:08:36.117] | : result() for MulticoreFuture ... done
[08:08:36.117] | : signalConditions() ...
[08:08:36.117] | : . include = ‘immediateCondition’
[08:08:36.117] | : . exclude = 
[08:08:36.117] | : . resignal = FALSE
[08:08:36.117] | : . Number of conditions: 6
[08:08:36.117] | : .  int 6
[08:08:36.118] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.118] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.118] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.119] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.119] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.119] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.119] | : signalConditions() ... done
[08:08:36.119] | result() for MulticoreFuture ... done
[08:08:36.119] | result() for MulticoreFuture ...
[08:08:36.120] | result() for MulticoreFuture ... done
[08:08:36.120] | signalConditions() ...
[08:08:36.120] | : include = ‘immediateCondition’
[08:08:36.120] | : exclude = 
[08:08:36.120] | : resignal = FALSE
[08:08:36.120] | : Number of conditions: 6
[08:08:36.120] | :  int 6
[08:08:36.121] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.121] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.121] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.121] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.121] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.122] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.122] | signalConditions() ... done
[08:08:36.122] | relay stdout ...
[08:08:36.122] | relay stdout ... done
[08:08:36.122] | check for misuse ...
[08:08:36.122] | check for misuse ... done
[08:08:36.122] | relay conditions ...
[08:08:36.123] | : Future state: ‘finished’
[08:08:36.123] | : result() for MulticoreFuture ...
[08:08:36.123] | : result() for MulticoreFuture ... done
[08:08:36.123] | : signalConditions() ...
[08:08:36.123] | : . include = ‘condition’
[08:08:36.123] | : . exclude = ‘immediateCondition’
[08:08:36.123] | : . resignal = TRUE
[08:08:36.123] | : . Number of conditions: 6
[08:08:36.124] | : .  int 6
[08:08:36.124] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.124] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.049] | : . ' , attachPackages() ...
[08:08:36.124] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.125] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.049] | : . ' , ; packages: [n=1] ‘future’
[08:08:36.125] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.125] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.049] | : . ' , attachPackages() ... done
[08:08:36.125] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.125] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.050] | : . ' , attachPackages() ...
[08:08:36.125] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.126] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.050] | : . ' , ; packages: [n=1] ‘stats’
[08:08:36.126] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.126] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.050] | : . ' , attachPackages() ... done
[08:08:36.126] | : signalConditions() ... done
[08:08:36.126] | relay conditions ... done
[08:08:36.126] value() for Future (<unnamed-19>) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

- Globals - one-side formulas, e.g. xtabs(~ x) ...
[08:08:36.131] future(..., label = NULL) ...
[08:08:36.132] | lazy: FALSE
[08:08:36.132] | stdout: TRUE
[08:08:36.132] | conditions: [n=1] ‘condition’
[08:08:36.132] | gc: FALSE
[08:08:36.132] | earlySignal: FALSE
[08:08:36.132] | getGlobalsAndPackages() ...
[08:08:36.132] | : Searching for globals ...
[08:08:36.142] | : . globals found: [4] ‘{’, ‘xtabs’, ‘x’, ‘~’
[08:08:36.142] | : Searching for globals ... done
[08:08:36.142] | : Resolving globals: FALSE
[08:08:36.142] | : Search for packages associated with the globals ...
[08:08:36.143] | : . Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:36.143] | : . Packages: [2] ‘base’, ‘stats’
[08:08:36.143] | : Search for packages associated with the globals ... done
[08:08:36.143] | : Packages after dropping 'base': [1] ‘stats’
[08:08:36.143] | : Packages after dropping non-attached packages: [1] ‘stats’
[08:08:36.143] | : globals: [1] ‘x’
[08:08:36.144] | : packages: [1] ‘stats’
[08:08:36.144] | getGlobalsAndPackages() ... done
[08:08:36.144] | run() for ‘Future’ (<unnamed-20>) ...
[08:08:36.144] | : state: ‘created’
[08:08:36.144] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.144] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.144] | : Using MulticoreFutureBackend ...
[08:08:36.145] | : . Number of futures since start: 5 (5 created, 5 launched, 5 finished)
[08:08:36.145] | : . Launching futures ...
[08:08:36.145] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:08:36.145] | : . ' , getFutureData() ...
[08:08:36.145] | : . ' , ; getFutureCore() ...
[08:08:36.145] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘stats’
[08:08:36.145] | : . ' , ; getFutureCore() ... done
[08:08:36.145] | : . ' , ; getFutureCapture() ...
[08:08:36.145] | : . ' , ; getFutureCapture() ... done
[08:08:36.146] | : . ' , ; getFutureContext() ...
[08:08:36.146] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.146] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:36.146] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.146] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:36.146] | : . ' , ; getFutureContext() ... done
[08:08:36.146] | : . ' , getFutureData() ... done
[08:08:36.146] | : . ' , requestCore(..., workers = 2) ...
[08:08:36.147] | : . ' , requestCore(..., workers = 2) ... done
[08:08:36.148] | : . ' , MulticoreFuture started
[08:08:36.149] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:08:36.149] | : . Launching futures ... done
[08:08:36.149] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:36.151] | : Using MulticoreFutureBackend ... done
[08:08:36.152] | run() for ‘Future’ (<unnamed-20>) ... done
[08:08:36.152] future(..., label = NULL) ... done
[08:08:36.153] value() for MulticoreFuture (<unnamed-20>) ...
[08:08:36.153] | result() for MulticoreFuture ...
[08:08:36.155] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.156] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:36.157] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.158] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:36.158] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:36.159] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:36.160] | : . ' , ; ` | New stack:
[08:08:36.160] | : . ' , ; ` | List of 1
[08:08:36.160] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.160] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.160] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:36.160] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.160] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.160] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.160] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.160] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.169] | : . ' , ; ` | Old stack:
[08:08:36.169] | : . ' , ; ` | List of 1
[08:08:36.169] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.169] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.169] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.169] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:36.169] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.169] | : . ' , ; ` |     ...)  
[08:08:36.169] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.169] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.169] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:36.169] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.169] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.169] | : . ' , ; ` |     ...)  
[08:08:36.169] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.169] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.175] | : . ' , ; ` | Not identical
[08:08:36.175] | : . ' , ; ` | all.equal() for future ...
[08:08:36.176] | : . ' , ; ` | : List of 2
[08:08:36.176] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.176] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.176] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:36.176] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.176] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.176] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.176] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.176] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.176] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.176] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.176] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:36.176] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.176] | : . ' , ; ` | :     ...)  
[08:08:36.176] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.176] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.176] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:36.176] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.176] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.176] | : . ' , ; ` | :     ...)  
[08:08:36.176] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.183] | : . ' , ; ` | : Formals differ
[08:08:36.183] | : . ' , ; ` | all.equal() for future ... done
[08:08:36.183] | : . ' , ; ` | Future strategies differ at level 1
[08:08:36.183] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:36.184] | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:36.184] | : . ' , ; ` List of future strategies:
[08:08:36.184] | : . ' , ; ` 1. sequential:
[08:08:36.184] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:36.184] | : . ' , ; `    - tweaked: FALSE
[08:08:36.184] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.184] | : . ' , ; ` List of 1
[08:08:36.184] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.184] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.184] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:36.184] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.184] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.184] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.184] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.184] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.189] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:36.189] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:36.189] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.189] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:36.189] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.189] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.189] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:08:36.189] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.189] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.189] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.189] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.192] | : . ' , ; ` | : init: TRUE
[08:08:36.192] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:08:36.192] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:08:36.192] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:08:36.192] | : . ' , ; ` | : .  list()
[08:08:36.192] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:08:36.192] | : . ' , ; ` | : .  list()
[08:08:36.193] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:08:36.193] | : . ' , ; ` | : . Dotted pair list of 2
[08:08:36.193] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:08:36.193] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:08:36.194] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:36.194] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:08:36.194] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:36.194] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.194] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:08:36.195] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:36.195] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:36.195] | : . ' , assign_globals() ...
[08:08:36.195] | : . ' , List of 1
[08:08:36.195] | : . ' ,  $ x: num [1:5] 1 1 2 2 2
[08:08:36.195] | : . ' ,  - attr(*, "where")=List of 1
[08:08:36.195] | : . ' ,   ..$ x:<environment: R_GlobalEnv> 
[08:08:36.195] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:36.195] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:36.195] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:36.195] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:36.198] | : . ' , - copied ‘x’ to environment
[08:08:36.198] | : . ' , assign_globals() ... done
[08:08:36.201] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:36.201] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:36.201] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:36.201] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:36.201] | : . ' , ; ` | : New stack:
[08:08:36.201] | : . ' , ; ` | : List of 1
[08:08:36.201] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.201] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.201] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.201] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:36.201] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.201] | : . ' , ; ` | :     ...)  
[08:08:36.201] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.201] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.201] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:36.201] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.201] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.201] | : . ' , ; ` | :     ...)  
[08:08:36.201] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.201] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.204] | : . ' , ; ` | : Old stack:
[08:08:36.205] | : . ' , ; ` | : List of 1
[08:08:36.205] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.205] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.205] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:36.205] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.205] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.205] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.205] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.205] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c6ed0d0> 
[08:08:36.205] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.205] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.205] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.209] | : . ' , ; ` | : Not identical
[08:08:36.209] | : . ' , ; ` | : all.equal() for future ...
[08:08:36.209] | : . ' , ; ` | : . List of 2
[08:08:36.209] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.209] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.209] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.209] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:36.209] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.209] | : . ' , ; ` | : .     ...)  
[08:08:36.209] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.209] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.209] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:36.209] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.209] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.209] | : . ' , ; ` | : .     ...)  
[08:08:36.209] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.209] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.209] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.209] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:36.209] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.209] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.209] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.209] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.209] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94c6ed0d0> 
[08:08:36.209] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.209] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.215] | : . ' , ; ` | : . Formals differ
[08:08:36.215] | : . ' , ; ` | : all.equal() for future ... done
[08:08:36.215] | : . ' , ; ` | : Future strategies differ at level 1
[08:08:36.215] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:36.215] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:08:36.215] | : . ' , ; ` | List of future strategies:
[08:08:36.215] | : . ' , ; ` | 1. multicore:
[08:08:36.215] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:36.215] | : . ' , ; ` |    - tweaked: FALSE
[08:08:36.215] | : . ' , ; ` |    - call: plan(strategy)
[08:08:36.216] | : . ' , ; ` | List of 1
[08:08:36.216] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.216] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.216] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.216] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:36.216] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.216] | : . ' , ; ` |     ...)  
[08:08:36.216] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.216] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.216] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:36.216] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.216] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.216] | : . ' , ; ` |     ...)  
[08:08:36.216] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.216] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.219] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:36.219] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:36.219] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.219] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.219] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:08:36.219] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:36.220] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:36.220] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:36.220] | : readImmediateCondition() ...
[08:08:36.221] | : . Path: ‘/tmp/Rtmp8aU2y3/.future/immediateConditions’
[08:08:36.221] | : . Number of RDS files: 0
[08:08:36.221] | : . Returned conditions set:
[08:08:36.222] | : .  list()
[08:08:36.222] | : readImmediateCondition() ... done
[08:08:36.223] | : result() for MulticoreFuture ...
[08:08:36.223] | : result() for MulticoreFuture ... done
[08:08:36.223] | : signalConditions() ...
[08:08:36.224] | : . include = ‘immediateCondition’
[08:08:36.224] | : . exclude = 
[08:08:36.224] | : . resignal = FALSE
[08:08:36.224] | : . Number of conditions: 6
[08:08:36.224] | : .  int 6
[08:08:36.225] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.225] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.226] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.226] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.226] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.226] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.226] | : signalConditions() ... done
[08:08:36.227] | result() for MulticoreFuture ... done
[08:08:36.227] | result() for MulticoreFuture ...
[08:08:36.227] | result() for MulticoreFuture ... done
[08:08:36.227] | signalConditions() ...
[08:08:36.227] | : include = ‘immediateCondition’
[08:08:36.228] | : exclude = 
[08:08:36.228] | : resignal = FALSE
[08:08:36.228] | : Number of conditions: 6
[08:08:36.228] | :  int 6
[08:08:36.228] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.229] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.229] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.229] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.229] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.229] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.229] | signalConditions() ... done
[08:08:36.229] | relay stdout ...
[08:08:36.230] | relay stdout ... done
[08:08:36.230] | check for misuse ...
[08:08:36.230] | check for misuse ... done
[08:08:36.230] | relay conditions ...
[08:08:36.230] | : Future state: ‘finished’
[08:08:36.230] | : result() for MulticoreFuture ...
[08:08:36.230] | : result() for MulticoreFuture ... done
[08:08:36.231] | : signalConditions() ...
[08:08:36.231] | : . include = ‘condition’
[08:08:36.231] | : . exclude = ‘immediateCondition’
[08:08:36.231] | : . resignal = TRUE
[08:08:36.231] | : . Number of conditions: 6
[08:08:36.231] | : .  int 6
[08:08:36.232] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.232] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.149] | : . ' , attachPackages() ...
[08:08:36.232] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.232] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.150] | : . ' , ; packages: [n=1] ‘future’
[08:08:36.232] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.232] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.152] | : . ' , attachPackages() ... done
[08:08:36.233] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.233] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.152] | : . ' , attachPackages() ...
[08:08:36.233] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.233] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.153] | : . ' , ; packages: [n=1] ‘stats’
[08:08:36.233] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.233] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.154] | : . ' , attachPackages() ... done
[08:08:36.233] | : signalConditions() ... done
[08:08:36.234] | relay conditions ... done
[08:08:36.234] value() for MulticoreFuture (<unnamed-20>) ... done
x
1 2 
2 3 
[08:08:36.235] future(..., label = NULL) ...
[08:08:36.235] | lazy: FALSE
[08:08:36.235] | stdout: TRUE
[08:08:36.235] | conditions: [n=1] ‘condition’
[08:08:36.235] | gc: FALSE
[08:08:36.235] | earlySignal: FALSE
[08:08:36.235] | getGlobalsAndPackages() ...
[08:08:36.235] | : Searching for globals ...
[08:08:36.246] | : . globals found: [4] ‘{’, ‘xtabs’, ‘x’, ‘~’
[08:08:36.246] | : Searching for globals ... done
[08:08:36.246] | : Resolving globals: FALSE
[08:08:36.246] | : Search for packages associated with the globals ...
[08:08:36.247] | : . Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:36.247] | : . Packages: [2] ‘base’, ‘stats’
[08:08:36.247] | : Search for packages associated with the globals ... done
[08:08:36.247] | : Packages after dropping 'base': [1] ‘stats’
[08:08:36.247] | : Packages after dropping non-attached packages: [1] ‘stats’
[08:08:36.247] | : globals: [1] ‘x’
[08:08:36.248] | : packages: [1] ‘stats’
[08:08:36.248] | getGlobalsAndPackages() ... done
[08:08:36.248] | run() for ‘Future’ (<unnamed-21>) ...
[08:08:36.248] | : state: ‘created’
[08:08:36.248] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.248] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.248] | : Using MulticoreFutureBackend ...
[08:08:36.249] | : . Number of futures since start: 6 (6 created, 6 launched, 6 finished)
[08:08:36.249] | : . Launching futures ...
[08:08:36.249] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:08:36.249] | : . ' , getFutureData() ...
[08:08:36.249] | : . ' , ; getFutureCore() ...
[08:08:36.249] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘stats’
[08:08:36.249] | : . ' , ; getFutureCore() ... done
[08:08:36.249] | : . ' , ; getFutureCapture() ...
[08:08:36.249] | : . ' , ; getFutureCapture() ... done
[08:08:36.250] | : . ' , ; getFutureContext() ...
[08:08:36.250] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.250] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:36.250] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.250] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:36.250] | : . ' , ; getFutureContext() ... done
[08:08:36.250] | : . ' , getFutureData() ... done
[08:08:36.250] | : . ' , requestCore(..., workers = 2) ...
[08:08:36.251] | : . ' , requestCore(..., workers = 2) ... done
[08:08:36.252] | : . ' , MulticoreFuture started
[08:08:36.253] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:08:36.253] | : . Launching futures ... done
[08:08:36.253] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:36.254] | : Using MulticoreFutureBackend ... done
[08:08:36.254] | run() for ‘Future’ (<unnamed-21>) ... done
[08:08:36.254] future(..., label = NULL) ... done
[08:08:36.255] value() for MulticoreFuture (<unnamed-21>) ...
[08:08:36.255] | result() for MulticoreFuture ...
[08:08:36.256] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.256] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:36.257] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.257] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:36.257] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:36.258] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:36.258] | : . ' , ; ` | New stack:
[08:08:36.258] | : . ' , ; ` | List of 1
[08:08:36.258] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.258] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.258] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:36.258] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.258] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.258] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.258] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.258] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.263] | : . ' , ; ` | Old stack:
[08:08:36.263] | : . ' , ; ` | List of 1
[08:08:36.263] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.263] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.263] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.263] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:36.263] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.263] | : . ' , ; ` |     ...)  
[08:08:36.263] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.263] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.263] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:36.263] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.263] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.263] | : . ' , ; ` |     ...)  
[08:08:36.263] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.263] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.269] | : . ' , ; ` | Not identical
[08:08:36.269] | : . ' , ; ` | all.equal() for future ...
[08:08:36.269] | : . ' , ; ` | : List of 2
[08:08:36.269] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.269] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.269] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:36.269] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.269] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.269] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.269] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.269] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.269] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.269] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.269] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:36.269] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.269] | : . ' , ; ` | :     ...)  
[08:08:36.269] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.269] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.269] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:36.269] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.269] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.269] | : . ' , ; ` | :     ...)  
[08:08:36.269] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.281] | : . ' , ; ` | : Formals differ
[08:08:36.281] | : . ' , ; ` | all.equal() for future ... done
[08:08:36.281] | : . ' , ; ` | Future strategies differ at level 1
[08:08:36.281] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:36.282] | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:36.282] | : . ' , ; ` List of future strategies:
[08:08:36.282] | : . ' , ; ` 1. sequential:
[08:08:36.282] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:36.282] | : . ' , ; `    - tweaked: FALSE
[08:08:36.282] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.282] | : . ' , ; ` List of 1
[08:08:36.282] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.282] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.282] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:36.282] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.282] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.282] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.282] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.282] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.286] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:36.286] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:36.286] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.286] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:36.286] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.286] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.286] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:08:36.286] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.286] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.286] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.286] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.288] | : . ' , ; ` | : init: TRUE
[08:08:36.289] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:08:36.289] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:08:36.289] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:08:36.289] | : . ' , ; ` | : .  list()
[08:08:36.289] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:08:36.289] | : . ' , ; ` | : .  list()
[08:08:36.289] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:08:36.290] | : . ' , ; ` | : . Dotted pair list of 2
[08:08:36.290] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:08:36.290] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:08:36.291] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:36.291] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:08:36.291] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:36.291] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.291] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:08:36.291] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:36.291] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:36.292] | : . ' , assign_globals() ...
[08:08:36.292] | : . ' , List of 1
[08:08:36.292] | : . ' ,  $ x: num [1:5] 1 1 2 2 2
[08:08:36.292] | : . ' ,  - attr(*, "where")=List of 1
[08:08:36.292] | : . ' ,   ..$ x:<environment: R_GlobalEnv> 
[08:08:36.292] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:36.292] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:36.292] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:36.292] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:36.295] | : . ' , - copied ‘x’ to environment
[08:08:36.296] | : . ' , assign_globals() ... done
[08:08:36.298] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:36.299] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:36.299] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:36.299] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:36.299] | : . ' , ; ` | : New stack:
[08:08:36.299] | : . ' , ; ` | : List of 1
[08:08:36.299] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.299] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.299] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.299] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:36.299] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.299] | : . ' , ; ` | :     ...)  
[08:08:36.299] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.299] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.299] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:36.299] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.299] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.299] | : . ' , ; ` | :     ...)  
[08:08:36.299] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.299] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.302] | : . ' , ; ` | : Old stack:
[08:08:36.302] | : . ' , ; ` | : List of 1
[08:08:36.302] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.302] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.302] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:36.302] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.302] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.302] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.302] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.302] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d79bd18> 
[08:08:36.302] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.302] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.302] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.306] | : . ' , ; ` | : Not identical
[08:08:36.306] | : . ' , ; ` | : all.equal() for future ...
[08:08:36.306] | : . ' , ; ` | : . List of 2
[08:08:36.306] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.306] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.306] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.306] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:36.306] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.306] | : . ' , ; ` | : .     ...)  
[08:08:36.306] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.306] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.306] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:36.306] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.306] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.306] | : . ' , ; ` | : .     ...)  
[08:08:36.306] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.306] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.306] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.306] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:36.306] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.306] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.306] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.306] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.306] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d79bd18> 
[08:08:36.306] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.306] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.312] | : . ' , ; ` | : . Formals differ
[08:08:36.312] | : . ' , ; ` | : all.equal() for future ... done
[08:08:36.313] | : . ' , ; ` | : Future strategies differ at level 1
[08:08:36.313] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:36.313] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:08:36.313] | : . ' , ; ` | List of future strategies:
[08:08:36.313] | : . ' , ; ` | 1. multicore:
[08:08:36.313] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:36.313] | : . ' , ; ` |    - tweaked: FALSE
[08:08:36.313] | : . ' , ; ` |    - call: plan(strategy)
[08:08:36.314] | : . ' , ; ` | List of 1
[08:08:36.314] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.314] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.314] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.314] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:36.314] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.314] | : . ' , ; ` |     ...)  
[08:08:36.314] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.314] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.314] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:36.314] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.314] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.314] | : . ' , ; ` |     ...)  
[08:08:36.314] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.314] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.317] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:36.317] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:36.317] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.318] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.318] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:08:36.318] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:36.318] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:36.318] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:36.319] | : readImmediateCondition() ...
[08:08:36.319] | : . Path: ‘/tmp/Rtmp8aU2y3/.future/immediateConditions’
[08:08:36.319] | : . Number of RDS files: 0
[08:08:36.319] | : . Returned conditions set:
[08:08:36.320] | : .  list()
[08:08:36.320] | : readImmediateCondition() ... done
[08:08:36.321] | : result() for MulticoreFuture ...
[08:08:36.321] | : result() for MulticoreFuture ... done
[08:08:36.321] | : signalConditions() ...
[08:08:36.321] | : . include = ‘immediateCondition’
[08:08:36.321] | : . exclude = 
[08:08:36.321] | : . resignal = FALSE
[08:08:36.322] | : . Number of conditions: 6
[08:08:36.322] | : .  int 6
[08:08:36.322] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.322] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.323] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.323] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.323] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.323] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.323] | : signalConditions() ... done
[08:08:36.323] | result() for MulticoreFuture ... done
[08:08:36.324] | result() for MulticoreFuture ...
[08:08:36.324] | result() for MulticoreFuture ... done
[08:08:36.324] | signalConditions() ...
[08:08:36.324] | : include = ‘immediateCondition’
[08:08:36.324] | : exclude = 
[08:08:36.324] | : resignal = FALSE
[08:08:36.324] | : Number of conditions: 6
[08:08:36.324] | :  int 6
[08:08:36.325] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.325] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.325] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.325] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.326] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.326] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.326] | signalConditions() ... done
[08:08:36.326] | relay stdout ...
[08:08:36.326] | relay stdout ... done
[08:08:36.326] | check for misuse ...
[08:08:36.326] | check for misuse ... done
[08:08:36.327] | relay conditions ...
[08:08:36.327] | : Future state: ‘finished’
[08:08:36.327] | : result() for MulticoreFuture ...
[08:08:36.327] | : result() for MulticoreFuture ... done
[08:08:36.327] | : signalConditions() ...
[08:08:36.327] | : . include = ‘condition’
[08:08:36.327] | : . exclude = ‘immediateCondition’
[08:08:36.327] | : . resignal = TRUE
[08:08:36.328] | : . Number of conditions: 6
[08:08:36.328] | : .  int 6
[08:08:36.328] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.328] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.253] | : . ' , attachPackages() ...
[08:08:36.329] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.329] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.254] | : . ' , ; packages: [n=1] ‘future’
[08:08:36.329] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.329] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.254] | : . ' , attachPackages() ... done
[08:08:36.329] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.329] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.255] | : . ' , attachPackages() ...
[08:08:36.330] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.330] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.255] | : . ' , ; packages: [n=1] ‘stats’
[08:08:36.330] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.330] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.255] | : . ' , attachPackages() ... done
[08:08:36.330] | : signalConditions() ... done
[08:08:36.332] | relay conditions ... done
[08:08:36.332] value() for MulticoreFuture (<unnamed-21>) ... done
x
1 2 
2 3 
- Globals - lm(<formula>, data = cars) ...
- Globals - lm(<formula #1 (‘a’)>, data = cars) ...

Call:
lm(formula = dist ~ . - 1, data = cars)

Coefficients:
speed  
2.909  

[08:08:36.335] future(..., label = NULL) ...
[08:08:36.335] | lazy: FALSE
[08:08:36.335] | stdout: TRUE
[08:08:36.336] | conditions: [n=1] ‘condition’
[08:08:36.336] | gc: FALSE
[08:08:36.336] | earlySignal: FALSE
[08:08:36.336] | getGlobalsAndPackages() ...
[08:08:36.336] | : Searching for globals ...
[08:08:36.352] | : . globals found: [7] ‘{’, ‘lm’, ‘dist’, ‘-’, ‘.’, ‘~’, ‘cars’
[08:08:36.352] | : Searching for globals ... done
[08:08:36.352] | : Resolving globals: FALSE
[08:08:36.353] | : Search for packages associated with the globals ...
[08:08:36.353] | : . Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:36.353] | : . Packages: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:36.353] | : Search for packages associated with the globals ... done
[08:08:36.354] | : Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[08:08:36.354] | : Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[08:08:36.354] | : globals: [0] 
[08:08:36.354] | : packages: [2] ‘stats’, ‘datasets’
[08:08:36.354] | getGlobalsAndPackages() ... done
[08:08:36.354] | run() for ‘Future’ (<unnamed-22>) ...
[08:08:36.355] | : state: ‘created’
[08:08:36.355] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.355] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.355] | : Using MulticoreFutureBackend ...
[08:08:36.355] | : . Number of futures since start: 7 (7 created, 7 launched, 7 finished)
[08:08:36.355] | : . Launching futures ...
[08:08:36.355] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:08:36.355] | : . ' , getFutureData() ...
[08:08:36.356] | : . ' , ; getFutureCore() ...
[08:08:36.356] | : . ' , ; ` Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[08:08:36.356] | : . ' , ; getFutureCore() ... done
[08:08:36.356] | : . ' , ; getFutureCapture() ...
[08:08:36.356] | : . ' , ; getFutureCapture() ... done
[08:08:36.356] | : . ' , ; getFutureContext() ...
[08:08:36.356] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.356] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:36.356] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.357] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:36.357] | : . ' , ; getFutureContext() ... done
[08:08:36.357] | : . ' , getFutureData() ... done
[08:08:36.357] | : . ' , requestCore(..., workers = 2) ...
[08:08:36.357] | : . ' , requestCore(..., workers = 2) ... done
[08:08:36.359] | : . ' , MulticoreFuture started
[08:08:36.360] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:08:36.360] | : . Launching futures ... done
[08:08:36.360] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:36.361] | : Using MulticoreFutureBackend ... done
[08:08:36.361] | run() for ‘Future’ (<unnamed-22>) ... done
[08:08:36.361] future(..., label = NULL) ... done
[08:08:36.361] value() for MulticoreFuture (<unnamed-22>) ...
[08:08:36.362] | result() for MulticoreFuture ...
[08:08:36.363] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.363] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:36.363] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.364] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:36.364] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:36.365] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:36.365] | : . ' , ; ` | New stack:
[08:08:36.365] | : . ' , ; ` | List of 1
[08:08:36.365] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.365] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.365] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:36.365] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.365] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.365] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.365] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.365] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.370] | : . ' , ; ` | Old stack:
[08:08:36.370] | : . ' , ; ` | List of 1
[08:08:36.370] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.370] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.370] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.370] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:36.370] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.370] | : . ' , ; ` |     ...)  
[08:08:36.370] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.370] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.370] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:36.370] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.370] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.370] | : . ' , ; ` |     ...)  
[08:08:36.370] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.370] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.375] | : . ' , ; ` | Not identical
[08:08:36.376] | : . ' , ; ` | all.equal() for future ...
[08:08:36.376] | : . ' , ; ` | : List of 2
[08:08:36.376] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.376] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.376] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:36.376] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.376] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.376] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.376] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.376] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.376] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.376] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.376] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:36.376] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.376] | : . ' , ; ` | :     ...)  
[08:08:36.376] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.376] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.376] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:36.376] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.376] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.376] | : . ' , ; ` | :     ...)  
[08:08:36.376] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.388] | : . ' , ; ` | : Formals differ
[08:08:36.388] | : . ' , ; ` | all.equal() for future ... done
[08:08:36.388] | : . ' , ; ` | Future strategies differ at level 1
[08:08:36.388] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:36.388] | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:36.388] | : . ' , ; ` List of future strategies:
[08:08:36.388] | : . ' , ; ` 1. sequential:
[08:08:36.388] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:36.388] | : . ' , ; `    - tweaked: FALSE
[08:08:36.388] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.389] | : . ' , ; ` List of 1
[08:08:36.389] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.389] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.389] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:36.389] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.389] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.389] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.389] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.389] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.392] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:36.392] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:36.393] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.393] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:36.393] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.393] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.393] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:08:36.393] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.393] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.393] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.393] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.395] | : . ' , ; ` | : init: TRUE
[08:08:36.395] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:08:36.395] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:08:36.395] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:08:36.395] | : . ' , ; ` | : .  list()
[08:08:36.396] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:08:36.396] | : . ' , ; ` | : .  list()
[08:08:36.396] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:08:36.396] | : . ' , ; ` | : . Dotted pair list of 2
[08:08:36.396] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:08:36.396] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:08:36.397] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:36.397] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:08:36.397] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:36.398] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.398] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:08:36.398] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:36.398] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:36.401] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:36.401] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:36.401] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:36.401] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:36.401] | : . ' , ; ` | : New stack:
[08:08:36.401] | : . ' , ; ` | : List of 1
[08:08:36.401] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.401] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.401] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.401] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:36.401] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.401] | : . ' , ; ` | :     ...)  
[08:08:36.401] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.401] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.401] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:36.401] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.401] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.401] | : . ' , ; ` | :     ...)  
[08:08:36.401] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.401] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.407] | : . ' , ; ` | : Old stack:
[08:08:36.407] | : . ' , ; ` | : List of 1
[08:08:36.407] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.407] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.407] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:36.407] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.407] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.407] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.407] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.407] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d70c318> 
[08:08:36.407] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.407] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.407] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.410] | : . ' , ; ` | : Not identical
[08:08:36.410] | : . ' , ; ` | : all.equal() for future ...
[08:08:36.410] | : . ' , ; ` | : . List of 2
[08:08:36.410] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.410] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.410] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.410] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:36.410] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.410] | : . ' , ; ` | : .     ...)  
[08:08:36.410] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.410] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.410] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:36.410] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.410] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.410] | : . ' , ; ` | : .     ...)  
[08:08:36.410] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.410] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.410] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.410] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:36.410] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.410] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.410] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.410] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.410] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d70c318> 
[08:08:36.410] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.410] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.416] | : . ' , ; ` | : . Formals differ
[08:08:36.416] | : . ' , ; ` | : all.equal() for future ... done
[08:08:36.416] | : . ' , ; ` | : Future strategies differ at level 1
[08:08:36.416] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:36.416] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:08:36.416] | : . ' , ; ` | List of future strategies:
[08:08:36.416] | : . ' , ; ` | 1. multicore:
[08:08:36.416] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:36.416] | : . ' , ; ` |    - tweaked: FALSE
[08:08:36.416] | : . ' , ; ` |    - call: plan(strategy)
[08:08:36.417] | : . ' , ; ` | List of 1
[08:08:36.417] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.417] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.417] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.417] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:36.417] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.417] | : . ' , ; ` |     ...)  
[08:08:36.417] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.417] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.417] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:36.417] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.417] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.417] | : . ' , ; ` |     ...)  
[08:08:36.417] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.417] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.421] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:36.421] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:36.421] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.421] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.421] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:08:36.422] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:36.422] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:36.422] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:36.422] | : readImmediateCondition() ...
[08:08:36.423] | : . Path: ‘/tmp/Rtmp8aU2y3/.future/immediateConditions’
[08:08:36.423] | : . Number of RDS files: 0
[08:08:36.423] | : . Returned conditions set:
[08:08:36.423] | : .  list()
[08:08:36.424] | : readImmediateCondition() ... done
[08:08:36.424] | : result() for MulticoreFuture ...
[08:08:36.425] | : result() for MulticoreFuture ... done
[08:08:36.425] | : signalConditions() ...
[08:08:36.425] | : . include = ‘immediateCondition’
[08:08:36.425] | : . exclude = 
[08:08:36.425] | : . resignal = FALSE
[08:08:36.425] | : . Number of conditions: 6
[08:08:36.425] | : .  int 6
[08:08:36.426] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.426] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.426] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.427] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.427] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.427] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.427] | : signalConditions() ... done
[08:08:36.427] | result() for MulticoreFuture ... done
[08:08:36.427] | result() for MulticoreFuture ...
[08:08:36.427] | result() for MulticoreFuture ... done
[08:08:36.428] | signalConditions() ...
[08:08:36.428] | : include = ‘immediateCondition’
[08:08:36.428] | : exclude = 
[08:08:36.428] | : resignal = FALSE
[08:08:36.428] | : Number of conditions: 6
[08:08:36.428] | :  int 6
[08:08:36.429] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.429] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.429] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.429] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.429] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.429] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.430] | signalConditions() ... done
[08:08:36.430] | relay stdout ...
[08:08:36.430] | relay stdout ... done
[08:08:36.430] | check for misuse ...
[08:08:36.430] | check for misuse ... done
[08:08:36.430] | relay conditions ...
[08:08:36.430] | : Future state: ‘finished’
[08:08:36.431] | : result() for MulticoreFuture ...
[08:08:36.431] | : result() for MulticoreFuture ... done
[08:08:36.431] | : signalConditions() ...
[08:08:36.431] | : . include = ‘condition’
[08:08:36.431] | : . exclude = ‘immediateCondition’
[08:08:36.431] | : . resignal = TRUE
[08:08:36.431] | : . Number of conditions: 6
[08:08:36.431] | : .  int 6
[08:08:36.432] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.432] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.360] | : . ' , attachPackages() ...
[08:08:36.432] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.432] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.361] | : . ' , ; packages: [n=1] ‘future’
[08:08:36.433] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.433] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.361] | : . ' , attachPackages() ... done
[08:08:36.433] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.433] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.361] | : . ' , attachPackages() ...
[08:08:36.433] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.433] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.362] | : . ' , ; packages: [n=2] ‘stats’, ‘datasets’
[08:08:36.434] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.434] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.362] | : . ' , attachPackages() ... done
[08:08:36.434] | : signalConditions() ... done
[08:08:36.434] | relay conditions ... done
[08:08:36.434] value() for MulticoreFuture (<unnamed-22>) ... done

Call:
lm(formula = dist ~ . - 1, data = cars)

Coefficients:
speed  
2.909  

- Globals - lm(<formula #2 (‘b’)>, data = cars) ...

Call:
lm(formula = dist ~ . + 0, data = cars)

Coefficients:
speed  
2.909  

[08:08:36.440] future(..., label = NULL) ...
[08:08:36.440] | lazy: FALSE
[08:08:36.440] | stdout: TRUE
[08:08:36.440] | conditions: [n=1] ‘condition’
[08:08:36.440] | gc: FALSE
[08:08:36.440] | earlySignal: FALSE
[08:08:36.440] | getGlobalsAndPackages() ...
[08:08:36.441] | : Searching for globals ...
[08:08:36.456] | : . globals found: [7] ‘{’, ‘lm’, ‘dist’, ‘+’, ‘.’, ‘~’, ‘cars’
[08:08:36.456] | : Searching for globals ... done
[08:08:36.456] | : Resolving globals: FALSE
[08:08:36.456] | : Search for packages associated with the globals ...
[08:08:36.457] | : . Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:36.457] | : . Packages: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:36.457] | : Search for packages associated with the globals ... done
[08:08:36.457] | : Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[08:08:36.457] | : Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[08:08:36.457] | : globals: [0] 
[08:08:36.458] | : packages: [2] ‘stats’, ‘datasets’
[08:08:36.458] | getGlobalsAndPackages() ... done
[08:08:36.458] | run() for ‘Future’ (<unnamed-23>) ...
[08:08:36.458] | : state: ‘created’
[08:08:36.458] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.458] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.458] | : Using MulticoreFutureBackend ...
[08:08:36.459] | : . Number of futures since start: 8 (8 created, 8 launched, 8 finished)
[08:08:36.459] | : . Launching futures ...
[08:08:36.459] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:08:36.459] | : . ' , getFutureData() ...
[08:08:36.459] | : . ' , ; getFutureCore() ...
[08:08:36.459] | : . ' , ; ` Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[08:08:36.459] | : . ' , ; getFutureCore() ... done
[08:08:36.459] | : . ' , ; getFutureCapture() ...
[08:08:36.459] | : . ' , ; getFutureCapture() ... done
[08:08:36.460] | : . ' , ; getFutureContext() ...
[08:08:36.460] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.460] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:36.460] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.460] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:36.460] | : . ' , ; getFutureContext() ... done
[08:08:36.460] | : . ' , getFutureData() ... done
[08:08:36.461] | : . ' , requestCore(..., workers = 2) ...
[08:08:36.461] | : . ' , requestCore(..., workers = 2) ... done
[08:08:36.463] | : . ' , MulticoreFuture started
[08:08:36.463] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:08:36.463] | : . Launching futures ... done
[08:08:36.464] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:36.464] | : Using MulticoreFutureBackend ... done
[08:08:36.464] | run() for ‘Future’ (<unnamed-23>) ... done
[08:08:36.464] future(..., label = NULL) ... done
[08:08:36.465] value() for MulticoreFuture (<unnamed-23>) ...
[08:08:36.465] | result() for MulticoreFuture ...
[08:08:36.466] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.466] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:36.467] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.467] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:36.468] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:36.468] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:36.468] | : . ' , ; ` | New stack:
[08:08:36.468] | : . ' , ; ` | List of 1
[08:08:36.468] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.468] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.468] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:36.468] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.468] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.468] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.468] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.468] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.473] | : . ' , ; ` | Old stack:
[08:08:36.473] | : . ' , ; ` | List of 1
[08:08:36.473] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.473] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.473] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.473] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:36.473] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.473] | : . ' , ; ` |     ...)  
[08:08:36.473] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.473] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.473] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:36.473] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.473] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.473] | : . ' , ; ` |     ...)  
[08:08:36.473] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.473] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.478] | : . ' , ; ` | Not identical
[08:08:36.479] | : . ' , ; ` | all.equal() for future ...
[08:08:36.479] | : . ' , ; ` | : List of 2
[08:08:36.479] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.479] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.479] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:36.479] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.479] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.479] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.479] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.479] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.479] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.479] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.479] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:36.479] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.479] | : . ' , ; ` | :     ...)  
[08:08:36.479] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.479] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.479] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:36.479] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.479] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.479] | : . ' , ; ` | :     ...)  
[08:08:36.479] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.491] | : . ' , ; ` | : Formals differ
[08:08:36.491] | : . ' , ; ` | all.equal() for future ... done
[08:08:36.491] | : . ' , ; ` | Future strategies differ at level 1
[08:08:36.491] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:36.492] | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:36.492] | : . ' , ; ` List of future strategies:
[08:08:36.492] | : . ' , ; ` 1. sequential:
[08:08:36.492] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:36.492] | : . ' , ; `    - tweaked: FALSE
[08:08:36.492] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.492] | : . ' , ; ` List of 1
[08:08:36.492] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.492] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.492] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:36.492] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.492] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.492] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.492] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.492] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.496] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:36.496] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:36.496] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.496] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:36.496] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.496] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.496] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:08:36.496] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.496] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.496] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.496] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.498] | : . ' , ; ` | : init: TRUE
[08:08:36.498] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:08:36.499] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:08:36.499] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:08:36.499] | : . ' , ; ` | : .  list()
[08:08:36.499] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:08:36.499] | : . ' , ; ` | : .  list()
[08:08:36.499] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:08:36.500] | : . ' , ; ` | : . Dotted pair list of 2
[08:08:36.500] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:08:36.500] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:08:36.501] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:36.501] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:08:36.501] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:36.501] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.501] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:08:36.501] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:36.501] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:36.504] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:36.505] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:36.505] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:36.505] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:36.505] | : . ' , ; ` | : New stack:
[08:08:36.505] | : . ' , ; ` | : List of 1
[08:08:36.505] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.505] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.505] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.505] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:36.505] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.505] | : . ' , ; ` | :     ...)  
[08:08:36.505] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.505] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.505] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:36.505] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.505] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.505] | : . ' , ; ` | :     ...)  
[08:08:36.505] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.505] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.510] | : . ' , ; ` | : Old stack:
[08:08:36.510] | : . ' , ; ` | : List of 1
[08:08:36.510] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.510] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.510] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:36.510] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.510] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.510] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.510] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.510] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d759ec8> 
[08:08:36.510] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.510] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.510] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.513] | : . ' , ; ` | : Not identical
[08:08:36.514] | : . ' , ; ` | : all.equal() for future ...
[08:08:36.514] | : . ' , ; ` | : . List of 2
[08:08:36.514] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.514] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.514] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.514] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:36.514] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.514] | : . ' , ; ` | : .     ...)  
[08:08:36.514] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.514] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.514] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:36.514] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.514] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.514] | : . ' , ; ` | : .     ...)  
[08:08:36.514] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.514] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.514] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.514] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:36.514] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.514] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.514] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.514] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.514] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d759ec8> 
[08:08:36.514] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.514] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.519] | : . ' , ; ` | : . Formals differ
[08:08:36.519] | : . ' , ; ` | : all.equal() for future ... done
[08:08:36.520] | : . ' , ; ` | : Future strategies differ at level 1
[08:08:36.520] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:36.520] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:08:36.520] | : . ' , ; ` | List of future strategies:
[08:08:36.520] | : . ' , ; ` | 1. multicore:
[08:08:36.520] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:36.520] | : . ' , ; ` |    - tweaked: FALSE
[08:08:36.520] | : . ' , ; ` |    - call: plan(strategy)
[08:08:36.520] | : . ' , ; ` | List of 1
[08:08:36.520] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.520] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.520] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.520] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:36.520] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.520] | : . ' , ; ` |     ...)  
[08:08:36.520] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.520] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.520] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:36.520] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.520] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.520] | : . ' , ; ` |     ...)  
[08:08:36.520] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.520] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.525] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:36.525] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:36.526] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.526] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.526] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:08:36.526] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:36.526] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:36.526] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:36.527] | : readImmediateCondition() ...
[08:08:36.527] | : . Path: ‘/tmp/Rtmp8aU2y3/.future/immediateConditions’
[08:08:36.528] | : . Number of RDS files: 0
[08:08:36.528] | : . Returned conditions set:
[08:08:36.528] | : .  list()
[08:08:36.529] | : readImmediateCondition() ... done
[08:08:36.529] | : result() for MulticoreFuture ...
[08:08:36.529] | : result() for MulticoreFuture ... done
[08:08:36.529] | : signalConditions() ...
[08:08:36.529] | : . include = ‘immediateCondition’
[08:08:36.530] | : . exclude = 
[08:08:36.530] | : . resignal = FALSE
[08:08:36.530] | : . Number of conditions: 6
[08:08:36.530] | : .  int 6
[08:08:36.531] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.531] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.531] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.531] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.531] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.532] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.532] | : signalConditions() ... done
[08:08:36.532] | result() for MulticoreFuture ... done
[08:08:36.532] | result() for MulticoreFuture ...
[08:08:36.532] | result() for MulticoreFuture ... done
[08:08:36.532] | signalConditions() ...
[08:08:36.532] | : include = ‘immediateCondition’
[08:08:36.533] | : exclude = 
[08:08:36.533] | : resignal = FALSE
[08:08:36.533] | : Number of conditions: 6
[08:08:36.533] | :  int 6
[08:08:36.533] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.534] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.534] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.534] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.534] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.534] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.534] | signalConditions() ... done
[08:08:36.534] | relay stdout ...
[08:08:36.535] | relay stdout ... done
[08:08:36.535] | check for misuse ...
[08:08:36.535] | check for misuse ... done
[08:08:36.535] | relay conditions ...
[08:08:36.535] | : Future state: ‘finished’
[08:08:36.535] | : result() for MulticoreFuture ...
[08:08:36.535] | : result() for MulticoreFuture ... done
[08:08:36.535] | : signalConditions() ...
[08:08:36.536] | : . include = ‘condition’
[08:08:36.536] | : . exclude = ‘immediateCondition’
[08:08:36.536] | : . resignal = TRUE
[08:08:36.536] | : . Number of conditions: 6
[08:08:36.536] | : .  int 6
[08:08:36.537] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.537] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.464] | : . ' , attachPackages() ...
[08:08:36.537] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.537] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.464] | : . ' , ; packages: [n=1] ‘future’
[08:08:36.537] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.537] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.465] | : . ' , attachPackages() ... done
[08:08:36.538] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.538] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.465] | : . ' , attachPackages() ...
[08:08:36.538] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.538] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.465] | : . ' , ; packages: [n=2] ‘stats’, ‘datasets’
[08:08:36.538] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.538] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.465] | : . ' , attachPackages() ... done
[08:08:36.539] | : signalConditions() ... done
[08:08:36.539] | relay conditions ... done
[08:08:36.539] value() for MulticoreFuture (<unnamed-23>) ... done

Call:
lm(formula = dist ~ . + 0, data = cars)

Coefficients:
speed  
2.909  

- Globals - lm(<formula #3 (‘c’)>, data = cars) ...

Call:
lm(formula = dist ~ speed + speed^2, data = cars)

Coefficients:
(Intercept)        speed  
    -17.579        3.932  

[08:08:36.545] future(..., label = NULL) ...
[08:08:36.545] | lazy: FALSE
[08:08:36.545] | stdout: TRUE
[08:08:36.545] | conditions: [n=1] ‘condition’
[08:08:36.545] | gc: FALSE
[08:08:36.546] | earlySignal: FALSE
[08:08:36.546] | getGlobalsAndPackages() ...
[08:08:36.546] | : Searching for globals ...
[08:08:36.566] | : . globals found: [8] ‘{’, ‘lm’, ‘dist’, ‘+’, ‘speed’, ‘^’, ‘~’, ‘cars’
[08:08:36.566] | : Searching for globals ... done
[08:08:36.567] | : Resolving globals: FALSE
[08:08:36.567] | : Search for packages associated with the globals ...
[08:08:36.567] | : . Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:36.567] | : . Packages: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:36.567] | : Search for packages associated with the globals ... done
[08:08:36.568] | : Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[08:08:36.568] | : Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[08:08:36.568] | : globals: [0] 
[08:08:36.568] | : packages: [2] ‘stats’, ‘datasets’
[08:08:36.568] | getGlobalsAndPackages() ... done
[08:08:36.568] | run() for ‘Future’ (<unnamed-24>) ...
[08:08:36.568] | : state: ‘created’
[08:08:36.569] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.569] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.569] | : Using MulticoreFutureBackend ...
[08:08:36.569] | : . Number of futures since start: 9 (9 created, 9 launched, 9 finished)
[08:08:36.569] | : . Launching futures ...
[08:08:36.569] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:08:36.569] | : . ' , getFutureData() ...
[08:08:36.569] | : . ' , ; getFutureCore() ...
[08:08:36.570] | : . ' , ; ` Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[08:08:36.570] | : . ' , ; getFutureCore() ... done
[08:08:36.570] | : . ' , ; getFutureCapture() ...
[08:08:36.570] | : . ' , ; getFutureCapture() ... done
[08:08:36.570] | : . ' , ; getFutureContext() ...
[08:08:36.570] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.570] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:36.570] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.570] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:36.570] | : . ' , ; getFutureContext() ... done
[08:08:36.571] | : . ' , getFutureData() ... done
[08:08:36.571] | : . ' , requestCore(..., workers = 2) ...
[08:08:36.571] | : . ' , requestCore(..., workers = 2) ... done
[08:08:36.573] | : . ' , MulticoreFuture started
[08:08:36.574] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:08:36.574] | : . Launching futures ... done
[08:08:36.574] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:36.574] | : Using MulticoreFutureBackend ... done
[08:08:36.574] | run() for ‘Future’ (<unnamed-24>) ... done
[08:08:36.575] future(..., label = NULL) ... done
[08:08:36.575] value() for MulticoreFuture (<unnamed-24>) ...
[08:08:36.575] | result() for MulticoreFuture ...
[08:08:36.577] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.577] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:36.577] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.577] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:36.578] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:36.578] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:36.578] | : . ' , ; ` | New stack:
[08:08:36.578] | : . ' , ; ` | List of 1
[08:08:36.578] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.578] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.578] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:36.578] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.578] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.578] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.578] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.578] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.583] | : . ' , ; ` | Old stack:
[08:08:36.584] | : . ' , ; ` | List of 1
[08:08:36.584] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.584] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.584] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.584] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:36.584] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.584] | : . ' , ; ` |     ...)  
[08:08:36.584] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.584] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.584] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:36.584] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.584] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.584] | : . ' , ; ` |     ...)  
[08:08:36.584] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.584] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.594] | : . ' , ; ` | Not identical
[08:08:36.594] | : . ' , ; ` | all.equal() for future ...
[08:08:36.594] | : . ' , ; ` | : List of 2
[08:08:36.594] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.594] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.594] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:36.594] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.594] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.594] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.594] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.594] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.594] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.594] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.594] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:36.594] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.594] | : . ' , ; ` | :     ...)  
[08:08:36.594] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.594] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.594] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:36.594] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.594] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.594] | : . ' , ; ` | :     ...)  
[08:08:36.594] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.602] | : . ' , ; ` | : Formals differ
[08:08:36.602] | : . ' , ; ` | all.equal() for future ... done
[08:08:36.602] | : . ' , ; ` | Future strategies differ at level 1
[08:08:36.602] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:36.603] | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:36.603] | : . ' , ; ` List of future strategies:
[08:08:36.603] | : . ' , ; ` 1. sequential:
[08:08:36.603] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:36.603] | : . ' , ; `    - tweaked: FALSE
[08:08:36.603] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.603] | : . ' , ; ` List of 1
[08:08:36.603] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.603] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.603] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:36.603] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.603] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.603] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.603] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.603] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.606] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:36.606] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:36.606] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.607] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:36.607] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.607] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.607] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:08:36.607] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.607] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.607] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.607] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.609] | : . ' , ; ` | : init: TRUE
[08:08:36.609] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:08:36.609] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:08:36.609] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:08:36.609] | : . ' , ; ` | : .  list()
[08:08:36.610] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:08:36.610] | : . ' , ; ` | : .  list()
[08:08:36.610] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:08:36.610] | : . ' , ; ` | : . Dotted pair list of 2
[08:08:36.610] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:08:36.610] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:08:36.612] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:36.613] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:08:36.613] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:36.613] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.613] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:08:36.613] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:36.613] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:36.616] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:36.616] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:36.616] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:36.617] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:36.617] | : . ' , ; ` | : New stack:
[08:08:36.617] | : . ' , ; ` | : List of 1
[08:08:36.617] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.617] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.617] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.617] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:36.617] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.617] | : . ' , ; ` | :     ...)  
[08:08:36.617] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.617] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.617] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:36.617] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.617] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.617] | : . ' , ; ` | :     ...)  
[08:08:36.617] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.617] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.620] | : . ' , ; ` | : Old stack:
[08:08:36.620] | : . ' , ; ` | : List of 1
[08:08:36.620] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.620] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.620] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:36.620] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.620] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.620] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.620] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.620] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94e0f5ee0> 
[08:08:36.620] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.620] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.620] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.623] | : . ' , ; ` | : Not identical
[08:08:36.623] | : . ' , ; ` | : all.equal() for future ...
[08:08:36.623] | : . ' , ; ` | : . List of 2
[08:08:36.623] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.623] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.623] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.623] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:36.623] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.623] | : . ' , ; ` | : .     ...)  
[08:08:36.623] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.623] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.623] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:36.623] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.623] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.623] | : . ' , ; ` | : .     ...)  
[08:08:36.623] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.623] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.623] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.623] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:36.623] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.623] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.623] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.623] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.623] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94e0f5ee0> 
[08:08:36.623] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.623] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.630] | : . ' , ; ` | : . Formals differ
[08:08:36.630] | : . ' , ; ` | : all.equal() for future ... done
[08:08:36.630] | : . ' , ; ` | : Future strategies differ at level 1
[08:08:36.630] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:36.630] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:08:36.630] | : . ' , ; ` | List of future strategies:
[08:08:36.630] | : . ' , ; ` | 1. multicore:
[08:08:36.630] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:36.630] | : . ' , ; ` |    - tweaked: FALSE
[08:08:36.630] | : . ' , ; ` |    - call: plan(strategy)
[08:08:36.631] | : . ' , ; ` | List of 1
[08:08:36.631] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.631] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.631] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.631] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:36.631] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.631] | : . ' , ; ` |     ...)  
[08:08:36.631] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.631] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.631] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:36.631] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.631] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.631] | : . ' , ; ` |     ...)  
[08:08:36.631] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.631] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.634] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:36.634] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:36.634] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.634] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.634] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:08:36.635] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:36.635] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:36.635] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:36.635] | : readImmediateCondition() ...
[08:08:36.636] | : . Path: ‘/tmp/Rtmp8aU2y3/.future/immediateConditions’
[08:08:36.636] | : . Number of RDS files: 0
[08:08:36.636] | : . Returned conditions set:
[08:08:36.636] | : .  list()
[08:08:36.637] | : readImmediateCondition() ... done
[08:08:36.637] | : result() for MulticoreFuture ...
[08:08:36.637] | : result() for MulticoreFuture ... done
[08:08:36.637] | : signalConditions() ...
[08:08:36.638] | : . include = ‘immediateCondition’
[08:08:36.638] | : . exclude = 
[08:08:36.638] | : . resignal = FALSE
[08:08:36.638] | : . Number of conditions: 6
[08:08:36.638] | : .  int 6
[08:08:36.639] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.639] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.639] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.639] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.639] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.640] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.640] | : signalConditions() ... done
[08:08:36.640] | result() for MulticoreFuture ... done
[08:08:36.640] | result() for MulticoreFuture ...
[08:08:36.640] | result() for MulticoreFuture ... done
[08:08:36.640] | signalConditions() ...
[08:08:36.640] | : include = ‘immediateCondition’
[08:08:36.641] | : exclude = 
[08:08:36.641] | : resignal = FALSE
[08:08:36.641] | : Number of conditions: 6
[08:08:36.641] | :  int 6
[08:08:36.643] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.643] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.644] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.644] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.644] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.644] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.645] | signalConditions() ... done
[08:08:36.645] | relay stdout ...
[08:08:36.645] | relay stdout ... done
[08:08:36.645] | check for misuse ...
[08:08:36.646] | check for misuse ... done
[08:08:36.646] | relay conditions ...
[08:08:36.646] | : Future state: ‘finished’
[08:08:36.646] | : result() for MulticoreFuture ...
[08:08:36.646] | : result() for MulticoreFuture ... done
[08:08:36.647] | : signalConditions() ...
[08:08:36.647] | : . include = ‘condition’
[08:08:36.647] | : . exclude = ‘immediateCondition’
[08:08:36.647] | : . resignal = TRUE
[08:08:36.647] | : . Number of conditions: 6
[08:08:36.647] | : .  int 6
[08:08:36.648] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.648] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.574] | : . ' , attachPackages() ...
[08:08:36.648] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.649] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.575] | : . ' , ; packages: [n=1] ‘future’
[08:08:36.649] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.649] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.575] | : . ' , attachPackages() ... done
[08:08:36.649] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.649] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.575] | : . ' , attachPackages() ...
[08:08:36.650] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.650] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.575] | : . ' , ; packages: [n=2] ‘stats’, ‘datasets’
[08:08:36.650] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.650] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.576] | : . ' , attachPackages() ... done
[08:08:36.651] | : signalConditions() ... done
[08:08:36.651] | relay conditions ... done
[08:08:36.651] value() for MulticoreFuture (<unnamed-24>) ... done

Call:
lm(formula = dist ~ speed + speed^2, data = cars)

Coefficients:
(Intercept)        speed  
    -17.579        3.932  

- Globals - lm(<formula #4 (‘d’)>, data = cars) ...

Call:
lm(formula = dist ~ speed + I(speed^2), data = cars)

Coefficients:
(Intercept)        speed   I(speed^2)  
    2.47014      0.91329      0.09996  

[08:08:36.654] future(..., label = NULL) ...
[08:08:36.654] | lazy: FALSE
[08:08:36.654] | stdout: TRUE
[08:08:36.654] | conditions: [n=1] ‘condition’
[08:08:36.655] | gc: FALSE
[08:08:36.655] | earlySignal: FALSE
[08:08:36.655] | getGlobalsAndPackages() ...
[08:08:36.655] | : Searching for globals ...
[08:08:36.674] | : . globals found: [9] ‘{’, ‘lm’, ‘dist’, ‘+’, ‘speed’, ‘I’, ‘^’, ‘~’, ‘cars’
[08:08:36.675] | : Searching for globals ... done
[08:08:36.675] | : Resolving globals: FALSE
[08:08:36.675] | : Search for packages associated with the globals ...
[08:08:36.675] | : . Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:36.676] | : . Packages: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:36.676] | : Search for packages associated with the globals ... done
[08:08:36.676] | : Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[08:08:36.676] | : Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[08:08:36.677] | : globals: [0] 
[08:08:36.677] | : packages: [2] ‘stats’, ‘datasets’
[08:08:36.677] | getGlobalsAndPackages() ... done
[08:08:36.677] | run() for ‘Future’ (<unnamed-25>) ...
[08:08:36.677] | : state: ‘created’
[08:08:36.678] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.678] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.678] | : Using MulticoreFutureBackend ...
[08:08:36.678] | : . Number of futures since start: 10 (10 created, 10 launched, 10 finished)
[08:08:36.678] | : . Launching futures ...
[08:08:36.678] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:08:36.678] | : . ' , getFutureData() ...
[08:08:36.678] | : . ' , ; getFutureCore() ...
[08:08:36.678] | : . ' , ; ` Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[08:08:36.679] | : . ' , ; getFutureCore() ... done
[08:08:36.679] | : . ' , ; getFutureCapture() ...
[08:08:36.679] | : . ' , ; getFutureCapture() ... done
[08:08:36.679] | : . ' , ; getFutureContext() ...
[08:08:36.679] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.679] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:36.679] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.679] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:36.679] | : . ' , ; getFutureContext() ... done
[08:08:36.680] | : . ' , getFutureData() ... done
[08:08:36.680] | : . ' , requestCore(..., workers = 2) ...
[08:08:36.680] | : . ' , requestCore(..., workers = 2) ... done
[08:08:36.682] | : . ' , MulticoreFuture started
[08:08:36.683] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:08:36.683] | : . Launching futures ... done
[08:08:36.684] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:36.685] | : Using MulticoreFutureBackend ... done
[08:08:36.685] | run() for ‘Future’ (<unnamed-25>) ... done
[08:08:36.686] future(..., label = NULL) ... done
[08:08:36.686] value() for MulticoreFuture (<unnamed-25>) ...
[08:08:36.686] | result() for MulticoreFuture ...
[08:08:36.688] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.688] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:36.689] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.689] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:36.689] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:36.690] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:36.690] | : . ' , ; ` | New stack:
[08:08:36.690] | : . ' , ; ` | List of 1
[08:08:36.690] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.690] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.690] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:36.690] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.690] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.690] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.690] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.690] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.695] | : . ' , ; ` | Old stack:
[08:08:36.696] | : . ' , ; ` | List of 1
[08:08:36.696] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.696] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.696] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.696] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:36.696] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.696] | : . ' , ; ` |     ...)  
[08:08:36.696] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.696] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.696] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:36.696] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.696] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.696] | : . ' , ; ` |     ...)  
[08:08:36.696] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.696] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.700] | : . ' , ; ` | Not identical
[08:08:36.701] | : . ' , ; ` | all.equal() for future ...
[08:08:36.701] | : . ' , ; ` | : List of 2
[08:08:36.701] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.701] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.701] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:36.701] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.701] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.701] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.701] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.701] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.701] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.701] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.701] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:36.701] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.701] | : . ' , ; ` | :     ...)  
[08:08:36.701] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.701] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.701] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:36.701] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.701] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.701] | : . ' , ; ` | :     ...)  
[08:08:36.701] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.710] | : . ' , ; ` | : Formals differ
[08:08:36.710] | : . ' , ; ` | all.equal() for future ... done
[08:08:36.710] | : . ' , ; ` | Future strategies differ at level 1
[08:08:36.710] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:36.710] | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:36.711] | : . ' , ; ` List of future strategies:
[08:08:36.711] | : . ' , ; ` 1. sequential:
[08:08:36.711] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:36.711] | : . ' , ; `    - tweaked: FALSE
[08:08:36.711] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.711] | : . ' , ; ` List of 1
[08:08:36.711] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.711] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.711] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:36.711] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.711] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.711] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.711] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.711] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.715] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:36.715] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:36.715] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.715] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:36.715] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.715] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.715] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:08:36.715] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.715] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.715] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.715] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.717] | : . ' , ; ` | : init: TRUE
[08:08:36.717] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:08:36.717] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:08:36.717] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:08:36.718] | : . ' , ; ` | : .  list()
[08:08:36.718] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:08:36.718] | : . ' , ; ` | : .  list()
[08:08:36.718] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:08:36.718] | : . ' , ; ` | : . Dotted pair list of 2
[08:08:36.718] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:08:36.718] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:08:36.719] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:36.720] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:08:36.720] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:36.720] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.720] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:08:36.720] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:36.720] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:36.723] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:36.723] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:36.723] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:36.724] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:36.724] | : . ' , ; ` | : New stack:
[08:08:36.724] | : . ' , ; ` | : List of 1
[08:08:36.724] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.724] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.724] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.724] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:36.724] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.724] | : . ' , ; ` | :     ...)  
[08:08:36.724] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.724] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.724] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:36.724] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.724] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.724] | : . ' , ; ` | :     ...)  
[08:08:36.724] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.724] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.727] | : . ' , ; ` | : Old stack:
[08:08:36.727] | : . ' , ; ` | : List of 1
[08:08:36.727] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.727] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.727] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:36.727] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.727] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.727] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.727] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.727] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94b92b1f8> 
[08:08:36.727] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.727] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.727] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.770] | : . ' , ; ` | : Not identical
[08:08:36.770] | : . ' , ; ` | : all.equal() for future ...
[08:08:36.770] | : . ' , ; ` | : . List of 2
[08:08:36.770] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.770] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.770] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.770] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:36.770] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.770] | : . ' , ; ` | : .     ...)  
[08:08:36.770] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.770] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.770] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:36.770] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.770] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.770] | : . ' , ; ` | : .     ...)  
[08:08:36.770] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.770] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.770] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.770] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:36.770] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.770] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.770] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.770] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.770] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94b92b1f8> 
[08:08:36.770] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.770] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.776] | : . ' , ; ` | : . Formals differ
[08:08:36.776] | : . ' , ; ` | : all.equal() for future ... done
[08:08:36.776] | : . ' , ; ` | : Future strategies differ at level 1
[08:08:36.776] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:36.776] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:08:36.776] | : . ' , ; ` | List of future strategies:
[08:08:36.776] | : . ' , ; ` | 1. multicore:
[08:08:36.776] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:36.776] | : . ' , ; ` |    - tweaked: FALSE
[08:08:36.776] | : . ' , ; ` |    - call: plan(strategy)
[08:08:36.777] | : . ' , ; ` | List of 1
[08:08:36.777] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.777] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.777] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.777] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:36.777] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.777] | : . ' , ; ` |     ...)  
[08:08:36.777] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.777] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.777] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:36.777] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.777] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.777] | : . ' , ; ` |     ...)  
[08:08:36.777] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.777] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.780] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:36.780] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:36.780] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.780] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.780] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:08:36.780] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:36.781] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:36.781] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:36.782] | : readImmediateCondition() ...
[08:08:36.782] | : . Path: ‘/tmp/Rtmp8aU2y3/.future/immediateConditions’
[08:08:36.782] | : . Number of RDS files: 0
[08:08:36.782] | : . Returned conditions set:
[08:08:36.783] | : .  list()
[08:08:36.783] | : readImmediateCondition() ... done
[08:08:36.784] | : result() for MulticoreFuture ...
[08:08:36.784] | : result() for MulticoreFuture ... done
[08:08:36.784] | : signalConditions() ...
[08:08:36.784] | : . include = ‘immediateCondition’
[08:08:36.784] | : . exclude = 
[08:08:36.784] | : . resignal = FALSE
[08:08:36.784] | : . Number of conditions: 6
[08:08:36.785] | : .  int 6
[08:08:36.785] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.785] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.786] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.786] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.786] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.786] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.786] | : signalConditions() ... done
[08:08:36.786] | result() for MulticoreFuture ... done
[08:08:36.787] | result() for MulticoreFuture ...
[08:08:36.787] | result() for MulticoreFuture ... done
[08:08:36.787] | signalConditions() ...
[08:08:36.787] | : include = ‘immediateCondition’
[08:08:36.787] | : exclude = 
[08:08:36.787] | : resignal = FALSE
[08:08:36.787] | : Number of conditions: 6
[08:08:36.788] | :  int 6
[08:08:36.788] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.788] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.788] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.788] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.789] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.789] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.789] | signalConditions() ... done
[08:08:36.789] | relay stdout ...
[08:08:36.789] | relay stdout ... done
[08:08:36.789] | check for misuse ...
[08:08:36.789] | check for misuse ... done
[08:08:36.790] | relay conditions ...
[08:08:36.790] | : Future state: ‘finished’
[08:08:36.790] | : result() for MulticoreFuture ...
[08:08:36.790] | : result() for MulticoreFuture ... done
[08:08:36.790] | : signalConditions() ...
[08:08:36.790] | : . include = ‘condition’
[08:08:36.790] | : . exclude = ‘immediateCondition’
[08:08:36.790] | : . resignal = TRUE
[08:08:36.791] | : . Number of conditions: 6
[08:08:36.791] | : .  int 6
[08:08:36.791] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.791] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.683] | : . ' , attachPackages() ...
[08:08:36.791] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.792] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.684] | : . ' , ; packages: [n=1] ‘future’
[08:08:36.792] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.792] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.685] | : . ' , attachPackages() ... done
[08:08:36.792] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.792] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.686] | : . ' , attachPackages() ...
[08:08:36.792] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.793] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.686] | : . ' , ; packages: [n=2] ‘stats’, ‘datasets’
[08:08:36.793] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.793] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.687] | : . ' , attachPackages() ... done
[08:08:36.793] | : signalConditions() ... done
[08:08:36.793] | relay conditions ... done
[08:08:36.793] value() for MulticoreFuture (<unnamed-25>) ... done

Call:
lm(formula = dist ~ speed + I(speed^2), data = cars)

Coefficients:
(Intercept)        speed   I(speed^2)  
    2.47014      0.91329      0.09996  

- Globals - lm(<formula #5 (‘e’)>, data = cars) ...

Call:
lm(formula = dist ~ poly(speed, 2), data = cars)

Coefficients:
    (Intercept)  poly(speed, 2)1  poly(speed, 2)2  
          42.98           145.55            23.00  

[08:08:36.797] future(..., label = NULL) ...
[08:08:36.797] | lazy: FALSE
[08:08:36.797] | stdout: TRUE
[08:08:36.797] | conditions: [n=1] ‘condition’
[08:08:36.797] | gc: FALSE
[08:08:36.797] | earlySignal: FALSE
[08:08:36.797] | getGlobalsAndPackages() ...
[08:08:36.798] | : Searching for globals ...
[08:08:36.814] | : . globals found: [7] ‘{’, ‘lm’, ‘dist’, ‘poly’, ‘speed’, ‘~’, ‘cars’
[08:08:36.814] | : Searching for globals ... done
[08:08:36.814] | : Resolving globals: FALSE
[08:08:36.814] | : Search for packages associated with the globals ...
[08:08:36.814] | : . Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:36.816] | : . Packages: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:36.816] | : Search for packages associated with the globals ... done
[08:08:36.816] | : Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[08:08:36.816] | : Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[08:08:36.816] | : globals: [0] 
[08:08:36.816] | : packages: [2] ‘stats’, ‘datasets’
[08:08:36.817] | getGlobalsAndPackages() ... done
[08:08:36.817] | run() for ‘Future’ (<unnamed-26>) ...
[08:08:36.817] | : state: ‘created’
[08:08:36.817] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.817] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.817] | : Using MulticoreFutureBackend ...
[08:08:36.817] | : . Number of futures since start: 11 (11 created, 11 launched, 11 finished)
[08:08:36.818] | : . Launching futures ...
[08:08:36.818] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:08:36.818] | : . ' , getFutureData() ...
[08:08:36.818] | : . ' , ; getFutureCore() ...
[08:08:36.818] | : . ' , ; ` Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[08:08:36.818] | : . ' , ; getFutureCore() ... done
[08:08:36.818] | : . ' , ; getFutureCapture() ...
[08:08:36.818] | : . ' , ; getFutureCapture() ... done
[08:08:36.818] | : . ' , ; getFutureContext() ...
[08:08:36.819] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.819] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:36.819] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.819] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:36.819] | : . ' , ; getFutureContext() ... done
[08:08:36.819] | : . ' , getFutureData() ... done
[08:08:36.819] | : . ' , requestCore(..., workers = 2) ...
[08:08:36.820] | : . ' , requestCore(..., workers = 2) ... done
[08:08:36.822] | : . ' , MulticoreFuture started
[08:08:36.823] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:08:36.823] | : . Launching futures ... done
[08:08:36.824] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:36.824] | : Using MulticoreFutureBackend ... done
[08:08:36.825] | run() for ‘Future’ (<unnamed-26>) ... done
[08:08:36.825] future(..., label = NULL) ... done
[08:08:36.825] value() for MulticoreFuture (<unnamed-26>) ...
[08:08:36.826] | result() for MulticoreFuture ...
[08:08:36.827] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.827] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:36.827] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.828] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:36.828] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:36.828] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:36.829] | : . ' , ; ` | New stack:
[08:08:36.829] | : . ' , ; ` | List of 1
[08:08:36.829] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.829] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.829] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:36.829] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.829] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.829] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.829] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.829] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.834] | : . ' , ; ` | Old stack:
[08:08:36.834] | : . ' , ; ` | List of 1
[08:08:36.834] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.834] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.834] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.834] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:36.834] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.834] | : . ' , ; ` |     ...)  
[08:08:36.834] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.834] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.834] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:36.834] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.834] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.834] | : . ' , ; ` |     ...)  
[08:08:36.834] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.834] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.839] | : . ' , ; ` | Not identical
[08:08:36.839] | : . ' , ; ` | all.equal() for future ...
[08:08:36.840] | : . ' , ; ` | : List of 2
[08:08:36.840] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.840] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.840] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:36.840] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.840] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.840] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.840] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.840] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.840] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.840] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.840] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:36.840] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.840] | : . ' , ; ` | :     ...)  
[08:08:36.840] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.840] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.840] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:36.840] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.840] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.840] | : . ' , ; ` | :     ...)  
[08:08:36.840] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.891] | : . ' , ; ` | : Formals differ
[08:08:36.891] | : . ' , ; ` | all.equal() for future ... done
[08:08:36.892] | : . ' , ; ` | Future strategies differ at level 1
[08:08:36.892] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:36.892] | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:36.892] | : . ' , ; ` List of future strategies:
[08:08:36.892] | : . ' , ; ` 1. sequential:
[08:08:36.892] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:36.892] | : . ' , ; `    - tweaked: FALSE
[08:08:36.892] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.892] | : . ' , ; ` List of 1
[08:08:36.892] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.892] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.892] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:36.892] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.892] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.892] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.892] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.892] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.895] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:36.895] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:36.895] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.895] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:36.895] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.895] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.895] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:08:36.895] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.895] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.895] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.895] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.897] | : . ' , ; ` | : init: TRUE
[08:08:36.897] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:08:36.897] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:08:36.898] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:08:36.898] | : . ' , ; ` | : .  list()
[08:08:36.898] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:08:36.898] | : . ' , ; ` | : .  list()
[08:08:36.898] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:08:36.898] | : . ' , ; ` | : . Dotted pair list of 2
[08:08:36.898] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:08:36.898] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:08:36.899] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:36.900] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:08:36.900] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:36.900] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.900] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:08:36.900] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:36.900] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:36.903] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:36.903] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:36.903] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:36.903] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:36.903] | : . ' , ; ` | : New stack:
[08:08:36.904] | : . ' , ; ` | : List of 1
[08:08:36.904] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.904] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.904] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.904] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:36.904] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.904] | : . ' , ; ` | :     ...)  
[08:08:36.904] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.904] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.904] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:36.904] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.904] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.904] | : . ' , ; ` | :     ...)  
[08:08:36.904] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.904] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.907] | : . ' , ; ` | : Old stack:
[08:08:36.907] | : . ' , ; ` | : List of 1
[08:08:36.907] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.907] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.907] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:36.907] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.907] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.907] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.907] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.907] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94dd82a68> 
[08:08:36.907] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.907] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.907] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.910] | : . ' , ; ` | : Not identical
[08:08:36.910] | : . ' , ; ` | : all.equal() for future ...
[08:08:36.910] | : . ' , ; ` | : . List of 2
[08:08:36.910] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.910] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.910] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.910] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:36.910] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.910] | : . ' , ; ` | : .     ...)  
[08:08:36.910] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.910] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.910] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:36.910] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.910] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.910] | : . ' , ; ` | : .     ...)  
[08:08:36.910] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.910] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:36.910] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:36.910] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:36.910] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.910] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.910] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.910] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:36.910] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94dd82a68> 
[08:08:36.910] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:36.910] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:36.917] | : . ' , ; ` | : . Formals differ
[08:08:36.918] | : . ' , ; ` | : all.equal() for future ... done
[08:08:36.918] | : . ' , ; ` | : Future strategies differ at level 1
[08:08:36.918] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:36.918] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:08:36.918] | : . ' , ; ` | List of future strategies:
[08:08:36.918] | : . ' , ; ` | 1. multicore:
[08:08:36.918] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:36.918] | : . ' , ; ` |    - tweaked: FALSE
[08:08:36.918] | : . ' , ; ` |    - call: plan(strategy)
[08:08:36.919] | : . ' , ; ` | List of 1
[08:08:36.919] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:36.919] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:36.919] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:36.919] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:36.919] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.919] | : . ' , ; ` |     ...)  
[08:08:36.919] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.919] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.919] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:36.919] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:36.919] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:36.919] | : . ' , ; ` |     ...)  
[08:08:36.919] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:36.919] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:36.923] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:36.923] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:36.923] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:36.923] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:36.923] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:08:36.923] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:36.924] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:36.924] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:36.924] | : readImmediateCondition() ...
[08:08:36.925] | : . Path: ‘/tmp/Rtmp8aU2y3/.future/immediateConditions’
[08:08:36.925] | : . Number of RDS files: 0
[08:08:36.925] | : . Returned conditions set:
[08:08:36.925] | : .  list()
[08:08:36.926] | : readImmediateCondition() ... done
[08:08:36.926] | : result() for MulticoreFuture ...
[08:08:36.927] | : result() for MulticoreFuture ... done
[08:08:36.927] | : signalConditions() ...
[08:08:36.927] | : . include = ‘immediateCondition’
[08:08:36.927] | : . exclude = 
[08:08:36.927] | : . resignal = FALSE
[08:08:36.927] | : . Number of conditions: 6
[08:08:36.927] | : .  int 6
[08:08:36.928] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.928] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.928] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.929] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.929] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.929] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.929] | : signalConditions() ... done
[08:08:36.929] | result() for MulticoreFuture ... done
[08:08:36.929] | result() for MulticoreFuture ...
[08:08:36.930] | result() for MulticoreFuture ... done
[08:08:36.930] | signalConditions() ...
[08:08:36.930] | : include = ‘immediateCondition’
[08:08:36.930] | : exclude = 
[08:08:36.930] | : resignal = FALSE
[08:08:36.930] | : Number of conditions: 6
[08:08:36.930] | :  int 6
[08:08:36.931] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.931] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.931] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.931] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.931] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.932] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.932] | signalConditions() ... done
[08:08:36.932] | relay stdout ...
[08:08:36.932] | relay stdout ... done
[08:08:36.932] | check for misuse ...
[08:08:36.932] | check for misuse ... done
[08:08:36.932] | relay conditions ...
[08:08:36.933] | : Future state: ‘finished’
[08:08:36.933] | : result() for MulticoreFuture ...
[08:08:36.933] | : result() for MulticoreFuture ... done
[08:08:36.933] | : signalConditions() ...
[08:08:36.933] | : . include = ‘condition’
[08:08:36.933] | : . exclude = ‘immediateCondition’
[08:08:36.933] | : . resignal = TRUE
[08:08:36.933] | : . Number of conditions: 6
[08:08:36.934] | : .  int 6
[08:08:36.934] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.934] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.823] | : . ' , attachPackages() ...
[08:08:36.934] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.934] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.824] | : . ' , ; packages: [n=1] ‘future’
[08:08:36.935] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.935] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.825] | : . ' , attachPackages() ... done
[08:08:36.935] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.935] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.825] | : . ' , attachPackages() ...
[08:08:36.935] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.935] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.825] | : . ' , ; packages: [n=2] ‘stats’, ‘datasets’
[08:08:36.936] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:36.936] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:36.826] | : . ' , attachPackages() ... done
[08:08:36.936] | : signalConditions() ... done
[08:08:36.936] | relay conditions ... done
[08:08:36.936] value() for MulticoreFuture (<unnamed-26>) ... done

Call:
lm(formula = dist ~ poly(speed, 2), data = cars)

Coefficients:
    (Intercept)  poly(speed, 2)1  poly(speed, 2)2  
          42.98           145.55            23.00  

- Globals - map(x, ~ expr) ...
[08:08:36.938] future(..., label = NULL) ...
[08:08:36.939] | lazy: FALSE
[08:08:36.939] | stdout: TRUE
[08:08:36.939] | conditions: [n=1] ‘condition’
[08:08:36.939] | gc: FALSE
[08:08:36.939] | earlySignal: FALSE
[08:08:36.939] | getGlobalsAndPackages() ...
[08:08:36.939] | : Searching for globals ...
[08:08:37.013] | : . globals found: [17] ‘{’, ‘outer_function’, ‘map’, ‘:’, ‘~’, ‘inner_function’, ‘.x’, ‘if’, ‘inherits’, ‘<-’, ‘[[’, ‘-’, ‘eval’, ‘bquote’, ‘lapply’, ‘.’, ‘+’
[08:08:37.013] | : Searching for globals ... done
[08:08:37.013] | : Resolving globals: FALSE
[08:08:37.013] | : Search for packages associated with the globals ...
[08:08:37.014] | : . Packages associated with globals: [1] ‘base’
[08:08:37.014] | : . Packages: [1] ‘base’
[08:08:37.014] | : Search for packages associated with the globals ... done
[08:08:37.014] | : Packages after dropping 'base': [0] 
[08:08:37.015] | : globals: [3] ‘outer_function’, ‘map’, ‘inner_function’
[08:08:37.015] | : packages: [0] 
[08:08:37.015] | getGlobalsAndPackages() ... done
[08:08:37.015] | run() for ‘Future’ (<unnamed-27>) ...
[08:08:37.015] | : state: ‘created’
[08:08:37.015] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:37.016] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:37.016] | : Using MulticoreFutureBackend ...
[08:08:37.016] | : . Number of futures since start: 12 (12 created, 12 launched, 12 finished)
[08:08:37.016] | : . Launching futures ...
[08:08:37.016] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:08:37.016] | : . ' , getFutureData() ...
[08:08:37.016] | : . ' , ; getFutureCore() ...
[08:08:37.017] | : . ' , ; ` Packages needed by the future expression (n = 0): <none>
[08:08:37.017] | : . ' , ; getFutureCore() ... done
[08:08:37.017] | : . ' , ; getFutureCapture() ...
[08:08:37.017] | : . ' , ; getFutureCapture() ... done
[08:08:37.017] | : . ' , ; getFutureContext() ...
[08:08:37.017] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:37.017] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:37.017] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:37.018] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:37.018] | : . ' , ; getFutureContext() ... done
[08:08:37.018] | : . ' , getFutureData() ... done
[08:08:37.018] | : . ' , requestCore(..., workers = 2) ...
[08:08:37.019] | : . ' , requestCore(..., workers = 2) ... done
[08:08:37.021] | : . ' , MulticoreFuture started
[08:08:37.021] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:08:37.021] | : . Launching futures ... done
[08:08:37.022] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:37.022] | : Using MulticoreFutureBackend ... done
[08:08:37.022] | run() for ‘Future’ (<unnamed-27>) ... done
[08:08:37.022] future(..., label = NULL) ... done
[08:08:37.022] value() for MulticoreFuture (<unnamed-27>) ...
[08:08:37.023] | result() for MulticoreFuture ...
[08:08:37.024] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:37.025] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:37.025] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:37.025] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:37.025] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:37.026] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:37.026] | : . ' , ; ` | New stack:
[08:08:37.026] | : . ' , ; ` | List of 1
[08:08:37.026] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:37.026] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:37.026] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:37.026] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:37.026] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:37.026] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:37.026] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:37.026] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:37.030] | : . ' , ; ` | Old stack:
[08:08:37.030] | : . ' , ; ` | List of 1
[08:08:37.030] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:37.030] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:37.030] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:37.030] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:37.030] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:37.030] | : . ' , ; ` |     ...)  
[08:08:37.030] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.030] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.030] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:37.030] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:37.030] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:37.030] | : . ' , ; ` |     ...)  
[08:08:37.030] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.030] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:37.035] | : . ' , ; ` | Not identical
[08:08:37.035] | : . ' , ; ` | all.equal() for future ...
[08:08:37.035] | : . ' , ; ` | : List of 2
[08:08:37.035] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:37.035] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:37.035] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:37.035] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:37.035] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:37.035] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:37.035] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:37.035] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:37.035] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:37.035] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:37.035] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:37.035] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:37.035] | : . ' , ; ` | :     ...)  
[08:08:37.035] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.035] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.035] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:37.035] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:37.035] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:37.035] | : . ' , ; ` | :     ...)  
[08:08:37.035] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.042] | : . ' , ; ` | : Formals differ
[08:08:37.042] | : . ' , ; ` | all.equal() for future ... done
[08:08:37.042] | : . ' , ; ` | Future strategies differ at level 1
[08:08:37.042] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:37.042] | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:37.042] | : . ' , ; ` List of future strategies:
[08:08:37.042] | : . ' , ; ` 1. sequential:
[08:08:37.042] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:37.042] | : . ' , ; `    - tweaked: FALSE
[08:08:37.042] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:37.043] | : . ' , ; ` List of 1
[08:08:37.043] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:37.043] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:37.043] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:37.043] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:37.043] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:37.043] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:37.043] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:37.043] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:37.046] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:37.046] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:37.047] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:37.047] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:37.047] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:37.047] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:37.047] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:08:37.047] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:37.047] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:37.047] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:37.047] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:37.050] | : . ' , ; ` | : init: TRUE
[08:08:37.050] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:08:37.050] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:08:37.050] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:08:37.050] | : . ' , ; ` | : .  list()
[08:08:37.050] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:08:37.051] | : . ' , ; ` | : .  list()
[08:08:37.051] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:08:37.051] | : . ' , ; ` | : . Dotted pair list of 2
[08:08:37.051] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:08:37.051] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:08:37.053] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:37.053] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:08:37.053] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:37.053] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:37.053] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:08:37.053] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:37.053] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:37.054] | : . ' , assign_globals() ...
[08:08:37.054] | : . ' , List of 3
[08:08:37.054] | : . ' ,  $ outer_function:function (x)  
[08:08:37.054] | : . ' ,  $ map           :function (.x, .f, ...)  
[08:08:37.054] | : . ' ,  $ inner_function:function (x)  
[08:08:37.054] | : . ' ,  - attr(*, "where")=List of 3
[08:08:37.054] | : . ' ,   ..$ outer_function:<environment: R_GlobalEnv> 
[08:08:37.054] | : . ' ,   ..$ map           :<environment: R_GlobalEnv> 
[08:08:37.054] | : . ' ,   ..$ inner_function:<environment: R_GlobalEnv> 
[08:08:37.054] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:37.054] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:37.054] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:37.054] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:37.058] | : . ' , - reassign environment for ‘outer_function’ [where=globalenv()]
[08:08:37.059] | : . ' , - copied ‘outer_function’ to environment
[08:08:37.059] | : . ' , - reassign environment for ‘map’ [where=globalenv()]
[08:08:37.059] | : . ' , - copied ‘map’ to environment
[08:08:37.059] | : . ' , - reassign environment for ‘inner_function’ [where=globalenv()]
[08:08:37.059] | : . ' , - copied ‘inner_function’ to environment
[08:08:37.059] | : . ' , assign_globals() ... done
[08:08:37.062] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:37.062] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:37.063] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:37.063] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:37.063] | : . ' , ; ` | : New stack:
[08:08:37.063] | : . ' , ; ` | : List of 1
[08:08:37.063] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:37.063] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:37.063] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:37.063] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:37.063] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:37.063] | : . ' , ; ` | :     ...)  
[08:08:37.063] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.063] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.063] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:37.063] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:37.063] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:37.063] | : . ' , ; ` | :     ...)  
[08:08:37.063] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.063] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:37.069] | : . ' , ; ` | : Old stack:
[08:08:37.069] | : . ' , ; ` | : List of 1
[08:08:37.069] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:37.069] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:37.069] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:37.069] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:37.069] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:37.069] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:37.069] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:37.069] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9501d8e10> 
[08:08:37.069] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:37.069] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:37.069] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:37.074] | : . ' , ; ` | : Not identical
[08:08:37.074] | : . ' , ; ` | : all.equal() for future ...
[08:08:37.074] | : . ' , ; ` | : . List of 2
[08:08:37.074] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:37.074] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:37.074] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:37.074] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:37.074] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:37.074] | : . ' , ; ` | : .     ...)  
[08:08:37.074] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.074] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.074] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:37.074] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:37.074] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:37.074] | : . ' , ; ` | : .     ...)  
[08:08:37.074] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.074] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:37.074] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:37.074] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:37.074] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:37.074] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:37.074] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:37.074] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:37.074] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f9501d8e10> 
[08:08:37.074] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:37.074] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:37.083] | : . ' , ; ` | : . Formals differ
[08:08:37.083] | : . ' , ; ` | : all.equal() for future ... done
[08:08:37.083] | : . ' , ; ` | : Future strategies differ at level 1
[08:08:37.083] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:37.083] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:08:37.084] | : . ' , ; ` | List of future strategies:
[08:08:37.084] | : . ' , ; ` | 1. multicore:
[08:08:37.084] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:37.084] | : . ' , ; ` |    - tweaked: FALSE
[08:08:37.084] | : . ' , ; ` |    - call: plan(strategy)
[08:08:37.084] | : . ' , ; ` | List of 1
[08:08:37.084] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:37.084] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:37.084] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:37.084] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:37.084] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:37.084] | : . ' , ; ` |     ...)  
[08:08:37.084] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.084] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.084] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:37.084] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:37.084] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:37.084] | : . ' , ; ` |     ...)  
[08:08:37.084] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.084] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:37.089] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:37.089] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:37.089] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:37.089] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:37.090] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:08:37.090] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:37.090] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:37.090] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:37.091] | : readImmediateCondition() ...
[08:08:37.091] | : . Path: ‘/tmp/Rtmp8aU2y3/.future/immediateConditions’
[08:08:37.091] | : . Number of RDS files: 0
[08:08:37.092] | : . Returned conditions set:
[08:08:37.092] | : .  list()
[08:08:37.092] | : readImmediateCondition() ... done
[08:08:37.093] | : result() for MulticoreFuture ...
[08:08:37.093] | : result() for MulticoreFuture ... done
[08:08:37.093] | : signalConditions() ...
[08:08:37.093] | : . include = ‘immediateCondition’
[08:08:37.093] | : . exclude = 
[08:08:37.093] | : . resignal = FALSE
[08:08:37.093] | : . Number of conditions: 6
[08:08:37.094] | : .  int 6
[08:08:37.094] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.094] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.094] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.095] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.095] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.095] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.095] | : signalConditions() ... done
[08:08:37.095] | result() for MulticoreFuture ... done
[08:08:37.095] | result() for MulticoreFuture ...
[08:08:37.095] | result() for MulticoreFuture ... done
[08:08:37.096] | signalConditions() ...
[08:08:37.096] | : include = ‘immediateCondition’
[08:08:37.096] | : exclude = 
[08:08:37.096] | : resignal = FALSE
[08:08:37.096] | : Number of conditions: 6
[08:08:37.096] | :  int 6
[08:08:37.097] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.097] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.097] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.097] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.097] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.097] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.098] | signalConditions() ... done
[08:08:37.098] | relay stdout ...
[08:08:37.098] | relay stdout ... done
[08:08:37.098] | check for misuse ...
[08:08:37.098] | check for misuse ... done
[08:08:37.098] | relay conditions ...
[08:08:37.098] | : Future state: ‘finished’
[08:08:37.098] | : result() for MulticoreFuture ...
[08:08:37.099] | : result() for MulticoreFuture ... done
[08:08:37.099] | : signalConditions() ...
[08:08:37.099] | : . include = ‘condition’
[08:08:37.099] | : . exclude = ‘immediateCondition’
[08:08:37.099] | : . resignal = TRUE
[08:08:37.099] | : . Number of conditions: 6
[08:08:37.099] | : .  int 6
[08:08:37.100] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.100] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:37.022] | : . ' , attachPackages() ...
[08:08:37.100] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.100] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:37.022] | : . ' , ; packages: [n=1] ‘future’
[08:08:37.101] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.101] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:37.023] | : . ' , attachPackages() ... done
[08:08:37.101] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.101] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:37.023] | : . ' , attachPackages() ...
[08:08:37.101] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.101] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:37.023] | : . ' , ; packages: [n=0] 
[08:08:37.101] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.102] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:37.023] | : . ' , attachPackages() ... done
[08:08:37.102] | : signalConditions() ... done
[08:08:37.102] | relay conditions ... done
[08:08:37.102] value() for MulticoreFuture (<unnamed-27>) ... done
List of 2
 $ : num [1:2] 2 3
 $ : num [1:2] 2 3
[08:08:37.104] future(..., label = NULL) ...
[08:08:37.104] | lazy: FALSE
[08:08:37.104] | stdout: TRUE
[08:08:37.104] | conditions: [n=1] ‘condition’
[08:08:37.104] | gc: FALSE
[08:08:37.104] | earlySignal: FALSE
[08:08:37.104] | getGlobalsAndPackages() ...
[08:08:37.105] | : Searching for globals ...
[08:08:37.148] | : . globals found: [17] ‘{’, ‘outer_function’, ‘map’, ‘:’, ‘~’, ‘inner_function’, ‘.x’, ‘if’, ‘inherits’, ‘<-’, ‘[[’, ‘-’, ‘eval’, ‘bquote’, ‘lapply’, ‘.’, ‘+’
[08:08:37.148] | : Searching for globals ... done
[08:08:37.148] | : Resolving globals: FALSE
[08:08:37.149] | : Search for packages associated with the globals ...
[08:08:37.149] | : . Packages associated with globals: [1] ‘base’
[08:08:37.150] | : . Packages: [1] ‘base’
[08:08:37.150] | : Search for packages associated with the globals ... done
[08:08:37.150] | : Packages after dropping 'base': [0] 
[08:08:37.150] | : globals: [3] ‘outer_function’, ‘map’, ‘inner_function’
[08:08:37.150] | : packages: [0] 
[08:08:37.150] | getGlobalsAndPackages() ... done
[08:08:37.151] | run() for ‘Future’ (<unnamed-28>) ...
[08:08:37.151] | : state: ‘created’
[08:08:37.151] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:37.151] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:37.151] | : Using MulticoreFutureBackend ...
[08:08:37.151] | : . Number of futures since start: 13 (13 created, 13 launched, 13 finished)
[08:08:37.152] | : . Launching futures ...
[08:08:37.152] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:08:37.152] | : . ' , getFutureData() ...
[08:08:37.152] | : . ' , ; getFutureCore() ...
[08:08:37.152] | : . ' , ; ` Packages needed by the future expression (n = 0): <none>
[08:08:37.152] | : . ' , ; getFutureCore() ... done
[08:08:37.152] | : . ' , ; getFutureCapture() ...
[08:08:37.153] | : . ' , ; getFutureCapture() ... done
[08:08:37.153] | : . ' , ; getFutureContext() ...
[08:08:37.153] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:37.153] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:37.153] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:37.153] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:37.153] | : . ' , ; getFutureContext() ... done
[08:08:37.153] | : . ' , getFutureData() ... done
[08:08:37.154] | : . ' , requestCore(..., workers = 2) ...
[08:08:37.154] | : . ' , requestCore(..., workers = 2) ... done
[08:08:37.156] | : . ' , MulticoreFuture started
[08:08:37.157] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:08:37.157] | : . Launching futures ... done
[08:08:37.157] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:37.157] | : Using MulticoreFutureBackend ... done
[08:08:37.157] | run() for ‘Future’ (<unnamed-28>) ... done
[08:08:37.158] future(..., label = NULL) ... done
[08:08:37.158] value() for MulticoreFuture (<unnamed-28>) ...
[08:08:37.158] | result() for MulticoreFuture ...
[08:08:37.160] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:37.160] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:37.160] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:37.160] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:37.161] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:37.161] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:37.161] | : . ' , ; ` | New stack:
[08:08:37.161] | : . ' , ; ` | List of 1
[08:08:37.161] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:37.161] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:37.161] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:37.161] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:37.161] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:37.161] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:37.161] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:37.161] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:37.166] | : . ' , ; ` | Old stack:
[08:08:37.166] | : . ' , ; ` | List of 1
[08:08:37.166] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:37.166] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:37.166] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:37.166] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:37.166] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:37.166] | : . ' , ; ` |     ...)  
[08:08:37.166] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.166] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.166] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:37.166] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:37.166] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:37.166] | : . ' , ; ` |     ...)  
[08:08:37.166] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.166] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:37.171] | : . ' , ; ` | Not identical
[08:08:37.171] | : . ' , ; ` | all.equal() for future ...
[08:08:37.171] | : . ' , ; ` | : List of 2
[08:08:37.171] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:37.171] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:37.171] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:37.171] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:37.171] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:37.171] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:37.171] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:37.171] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:37.171] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:37.171] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:37.171] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:37.171] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:37.171] | : . ' , ; ` | :     ...)  
[08:08:37.171] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.171] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.171] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:37.171] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:37.171] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:37.171] | : . ' , ; ` | :     ...)  
[08:08:37.171] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.178] | : . ' , ; ` | : Formals differ
[08:08:37.179] | : . ' , ; ` | all.equal() for future ... done
[08:08:37.179] | : . ' , ; ` | Future strategies differ at level 1
[08:08:37.179] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:37.179] | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:37.179] | : . ' , ; ` List of future strategies:
[08:08:37.179] | : . ' , ; ` 1. sequential:
[08:08:37.179] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:37.179] | : . ' , ; `    - tweaked: FALSE
[08:08:37.179] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:37.180] | : . ' , ; ` List of 1
[08:08:37.180] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:37.180] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:37.180] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:37.180] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:37.180] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:37.180] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:37.180] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:37.180] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:37.183] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:37.184] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:37.184] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:37.184] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:37.184] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:37.184] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:37.184] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:08:37.184] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:37.184] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:37.184] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:37.184] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:37.187] | : . ' , ; ` | : init: TRUE
[08:08:37.187] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:08:37.187] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:08:37.187] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:08:37.187] | : . ' , ; ` | : .  list()
[08:08:37.188] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:08:37.188] | : . ' , ; ` | : .  list()
[08:08:37.188] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:08:37.188] | : . ' , ; ` | : . Dotted pair list of 2
[08:08:37.188] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:08:37.188] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:08:37.190] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:37.190] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:08:37.190] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:37.190] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:37.191] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:08:37.191] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:37.191] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:37.191] | : . ' , assign_globals() ...
[08:08:37.191] | : . ' , List of 3
[08:08:37.191] | : . ' ,  $ outer_function:function (x)  
[08:08:37.191] | : . ' ,  $ map           :function (.x, .f, ...)  
[08:08:37.191] | : . ' ,  $ inner_function:function (x)  
[08:08:37.191] | : . ' ,  - attr(*, "where")=List of 3
[08:08:37.191] | : . ' ,   ..$ outer_function:<environment: R_GlobalEnv> 
[08:08:37.191] | : . ' ,   ..$ map           :<environment: R_GlobalEnv> 
[08:08:37.191] | : . ' ,   ..$ inner_function:<environment: R_GlobalEnv> 
[08:08:37.191] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:37.191] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:37.191] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:37.191] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:37.196] | : . ' , - reassign environment for ‘outer_function’ [where=globalenv()]
[08:08:37.196] | : . ' , - copied ‘outer_function’ to environment
[08:08:37.196] | : . ' , - reassign environment for ‘map’ [where=globalenv()]
[08:08:37.197] | : . ' , - copied ‘map’ to environment
[08:08:37.197] | : . ' , - reassign environment for ‘inner_function’ [where=globalenv()]
[08:08:37.197] | : . ' , - copied ‘inner_function’ to environment
[08:08:37.197] | : . ' , assign_globals() ... done
[08:08:37.200] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:37.200] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:37.200] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:37.201] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:37.201] | : . ' , ; ` | : New stack:
[08:08:37.201] | : . ' , ; ` | : List of 1
[08:08:37.201] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:37.201] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:37.201] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:37.201] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:37.201] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:37.201] | : . ' , ; ` | :     ...)  
[08:08:37.201] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.201] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.201] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:37.201] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:37.201] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:37.201] | : . ' , ; ` | :     ...)  
[08:08:37.201] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.201] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:37.205] | : . ' , ; ` | : Old stack:
[08:08:37.206] | : . ' , ; ` | : List of 1
[08:08:37.206] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:37.206] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:37.206] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:37.206] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:37.206] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:37.206] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:37.206] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:37.206] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94f8a1f78> 
[08:08:37.206] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:37.206] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:37.206] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:37.210] | : . ' , ; ` | : Not identical
[08:08:37.210] | : . ' , ; ` | : all.equal() for future ...
[08:08:37.210] | : . ' , ; ` | : . List of 2
[08:08:37.210] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:37.210] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:37.210] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:37.210] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:37.210] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:37.210] | : . ' , ; ` | : .     ...)  
[08:08:37.210] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.210] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.210] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:37.210] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:37.210] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:37.210] | : . ' , ; ` | : .     ...)  
[08:08:37.210] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.210] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:37.210] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:37.210] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:37.210] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:37.210] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:37.210] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:37.210] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:37.210] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94f8a1f78> 
[08:08:37.210] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:37.210] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:37.218] | : . ' , ; ` | : . Formals differ
[08:08:37.218] | : . ' , ; ` | : all.equal() for future ... done
[08:08:37.218] | : . ' , ; ` | : Future strategies differ at level 1
[08:08:37.218] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:37.219] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:08:37.219] | : . ' , ; ` | List of future strategies:
[08:08:37.219] | : . ' , ; ` | 1. multicore:
[08:08:37.219] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:37.219] | : . ' , ; ` |    - tweaked: FALSE
[08:08:37.219] | : . ' , ; ` |    - call: plan(strategy)
[08:08:37.219] | : . ' , ; ` | List of 1
[08:08:37.219] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:37.219] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:37.219] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:37.219] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:37.219] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:37.219] | : . ' , ; ` |     ...)  
[08:08:37.219] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.219] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.219] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:37.219] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:37.219] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:37.219] | : . ' , ; ` |     ...)  
[08:08:37.219] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.219] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:37.224] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:37.224] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:37.224] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:37.224] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:37.224] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:08:37.224] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:37.225] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:37.225] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:37.225] | : readImmediateCondition() ...
[08:08:37.225] | : . Path: ‘/tmp/Rtmp8aU2y3/.future/immediateConditions’
[08:08:37.226] | : . Number of RDS files: 0
[08:08:37.226] | : . Returned conditions set:
[08:08:37.226] | : .  list()
[08:08:37.227] | : readImmediateCondition() ... done
[08:08:37.227] | : result() for MulticoreFuture ...
[08:08:37.227] | : result() for MulticoreFuture ... done
[08:08:37.227] | : signalConditions() ...
[08:08:37.227] | : . include = ‘immediateCondition’
[08:08:37.228] | : . exclude = 
[08:08:37.228] | : . resignal = FALSE
[08:08:37.228] | : . Number of conditions: 6
[08:08:37.228] | : .  int 6
[08:08:37.228] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.229] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.229] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.229] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.229] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.229] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.229] | : signalConditions() ... done
[08:08:37.229] | result() for MulticoreFuture ... done
[08:08:37.230] | result() for MulticoreFuture ...
[08:08:37.230] | result() for MulticoreFuture ... done
[08:08:37.230] | signalConditions() ...
[08:08:37.230] | : include = ‘immediateCondition’
[08:08:37.230] | : exclude = 
[08:08:37.230] | : resignal = FALSE
[08:08:37.230] | : Number of conditions: 6
[08:08:37.230] | :  int 6
[08:08:37.231] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.231] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.231] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.231] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.231] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.232] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.232] | signalConditions() ... done
[08:08:37.232] | relay stdout ...
[08:08:37.232] | relay stdout ... done
[08:08:37.232] | check for misuse ...
[08:08:37.232] | check for misuse ... done
[08:08:37.232] | relay conditions ...
[08:08:37.233] | : Future state: ‘finished’
[08:08:37.233] | : result() for MulticoreFuture ...
[08:08:37.233] | : result() for MulticoreFuture ... done
[08:08:37.233] | : signalConditions() ...
[08:08:37.233] | : . include = ‘condition’
[08:08:37.233] | : . exclude = ‘immediateCondition’
[08:08:37.233] | : . resignal = TRUE
[08:08:37.233] | : . Number of conditions: 6
[08:08:37.234] | : .  int 6
[08:08:37.234] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.234] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:37.157] | : . ' , attachPackages() ...
[08:08:37.234] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.234] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:37.158] | : . ' , ; packages: [n=1] ‘future’
[08:08:37.235] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.235] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:37.158] | : . ' , attachPackages() ... done
[08:08:37.235] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.235] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:37.158] | : . ' , attachPackages() ...
[08:08:37.235] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.235] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:37.158] | : . ' , ; packages: [n=0] 
[08:08:37.235] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:37.236] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:37.159] | : . ' , attachPackages() ... done
[08:08:37.236] | : signalConditions() ... done
[08:08:37.236] | relay conditions ... done
[08:08:37.236] value() for MulticoreFuture (<unnamed-28>) ... done
List of 2
 $ : num [1:2] 2 3
 $ : num [1:2] 2 3
- plan('multisession') ...
[08:08:37.238] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:37.238] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:08:37.238] | : all.equal() for FutureStrategyList ...
[08:08:37.238] | : . New stack:
[08:08:37.238] | : . List of 1
[08:08:37.238] | : .  $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:08:37.238] | : .     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:37.238] | : .   ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:08:37.238] | : .   ..- attr(*, "init")= logi TRUE
[08:08:37.238] | : .   ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:08:37.238] | : .     gc = FALSE, earlySignal = FALSE, ...)  
[08:08:37.238] | : .   .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:37.238] | : .   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:37.238] | : .   ..- attr(*, "untweakable")= chr "persistent"
[08:08:37.238] | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:37.238] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:37.242] | : . Old stack:
[08:08:37.242] | : . List of 1
[08:08:37.242] | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:37.242] | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:37.242] | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:37.242] | : .   ..- attr(*, "init")= chr "done"
[08:08:37.242] | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:37.242] | : .     ...)  
[08:08:37.242] | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.242] | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.242] | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:37.242] | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:37.242] | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:37.242] | : .     ...)  
[08:08:37.242] | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.242] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:37.246] | : . Not identical
[08:08:37.246] | : . all.equal() for future ...
[08:08:37.246] | : . ' List of 2
[08:08:37.246] | : . '  $ target :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:08:37.246] | : . '     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:37.246] | : . '   ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:08:37.246] | : . '   ..- attr(*, "init")= logi TRUE
[08:08:37.246] | : . '   ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:08:37.246] | : . '     gc = FALSE, earlySignal = FALSE, ...)  
[08:08:37.246] | : . '   .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:37.246] | : . '   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:37.246] | : . '   ..- attr(*, "untweakable")= chr "persistent"
[08:08:37.246] | : . '   ..- attr(*, "call")= language plan(strategy)
[08:08:37.246] | : . '  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:37.246] | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:08:37.246] | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:37.246] | : . '   ..- attr(*, "init")= chr "done"
[08:08:37.246] | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:37.246] | : . '     ...)  
[08:08:37.246] | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.246] | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.246] | : . '   ..- attr(*, "call")= language plan(strategy)
[08:08:37.246] | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f94d3bf5a8> 
[08:08:37.246] | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:37.246] | : . '     ...)  
[08:08:37.246] | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:37.253] | : . ' Formals differ
[08:08:37.253] | : . all.equal() for future ... done
[08:08:37.253] | : . Future strategies differ at level 1
[08:08:37.254] | : all.equal() for FutureStrategyList ... done
[08:08:37.254] | : plan(): Setting new future backend stack:
[08:08:37.254] | : List of future strategies:
[08:08:37.254] | : 1. multisession:
[08:08:37.254] | :    - args: function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:37.254] | :    - tweaked: FALSE
[08:08:37.254] | :    - call: plan(strategy)
[08:08:37.254] | : List of 1
[08:08:37.254] | :  $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:08:37.254] | :     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:37.254] | :   ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:08:37.254] | :   ..- attr(*, "init")= logi TRUE
[08:08:37.254] | :   ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:08:37.254] | :     gc = FALSE, earlySignal = FALSE, ...)  
[08:08:37.254] | :   .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:37.254] | :   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:37.254] | :   ..- attr(*, "untweakable")= chr "persistent"
[08:08:37.254] | :   ..- attr(*, "call")= language plan(strategy)
[08:08:37.254] | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:37.257] | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ...
[08:08:37.258] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:37.258] | : . ' Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:37.258] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:37.259] | : . Legacy shutdown of cluster workers ...
[08:08:37.259] | : . ' Stopping existing cluster ...
[08:08:37.259] | : . ' , No pre-existing cluster. Skipping
[08:08:37.259] | : . ' Stopping existing cluster ... done
[08:08:37.259] | : . Legacy shutdown of cluster workers ... done
[08:08:37.260] | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[08:08:37.260] | : plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ...
[08:08:37.260] | : . function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:08:37.260] | : .     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:37.260] | : .  - attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:08:37.260] | : .  - attr(*, "init")= logi TRUE
[08:08:37.260] | : .  - attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:08:37.260] | : .     gc = FALSE, earlySignal = FALSE, ...)  
[08:08:37.260] | : .   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:37.260] | : .  - attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:37.260] | : .  - attr(*, "untweakable")= chr "persistent"
[08:08:37.260] | : .  - attr(*, "call")= language plan(strategy)
[08:08:37.262] | : . init: TRUE
[08:08:37.263] | : . makeFutureBackend(<multisession>) ...
[08:08:37.263] | : . ' Backend function: <‘NULL’>
[08:08:37.263] | : . ' Evaluator tweak arguments: [n=0]
[08:08:37.263] | : . '  list()
[08:08:37.263] | : . ' Evaluator formal arguments: [n=4]
[08:08:37.263] | : . '  list()
[08:08:37.264] | : . ' Backend factory arguments: [n=4]
[08:08:37.264] | : . ' Dotted pair list of 4
[08:08:37.264] | : . '  $ workers     : language availableCores()
[08:08:37.264] | : . '  $ rscript_libs: language .libPaths()
[08:08:37.264] | : . '  $ gc          : logi FALSE
[08:08:37.264] | : . '  $ earlySignal : logi FALSE
[08:08:37.266] | : . ' MultisessionFutureBackend(workers = <workers>, interrupts = TRUE, ...) ...
[08:08:37.266] | : . ' , Arguments:
[08:08:37.266] | : . ' , List of 5
[08:08:37.266] | : . ' ,  $ workers     : Named int 2
[08:08:37.266] | : . ' ,   ..- attr(*, "names")= chr "mc.cores"
[08:08:37.266] | : . ' ,  $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[08:08:37.266] | : . ' ,  $ interrupts  : logi TRUE
[08:08:37.266] | : . ' ,  $ gc          : logi FALSE
[08:08:37.266] | : . ' ,  $ earlySignal : logi FALSE
[08:08:37.270] | : . ' , ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ...
[08:08:37.271] | : . ' , ; workers: 2
[08:08:37.271] | : . ' , ; getCluster() ...
[08:08:37.271] | : . ' , ; getCluster() ... done
[08:08:37.271] | : . ' , ; Stopping existing cluster ...
[08:08:37.271] | : . ' , ; ` No pre-existing cluster. Skipping
[08:08:37.271] | : . ' , ; Stopping existing cluster ... done
[08:08:37.271] | : . ' , ; Starting new cluster ...
[08:08:37.271] | : . ' , ; ` makeCluster(workers, ...) ...
[08:08:37.272] | : . ' , ; ` | Arguments:
[08:08:37.272] | : . ' , ; ` | List of 2
[08:08:37.272] | : . ' , ; ` |  $             : int 2
[08:08:37.272] | : . ' , ; ` |  $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[08:08:37.273] | : . ' , ; ` | .makeCluster() ...
[08:08:37.273] | : . ' , ; ` | : workers: ‘2’
[08:08:37.273] | : . ' , ; ` | : R_FUTURE_PLAN: NA
[08:08:37.273] | : . ' , ; ` | : parallelly::makeClusterPSOCK() arguments:
[08:08:37.273] | : . ' , ; ` | : List of 2
[08:08:37.273] | : . ' , ; ` | :  $             : int 2
[08:08:37.273] | : . ' , ; ` | :  $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[08:08:37.777] | : . ' , ; ` | : Generated cluster UUID
[08:08:37.778] | : . ' , ; ` | : Cluster UUID: ‘623664460e19df44562b7fe4cf996cb6’
[08:08:37.778] | : . ' , ; ` | : Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:08:37.780] | : . ' , ; ` | .makeCluster() ... done
[08:08:37.780] | : . ' , ; ` | Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:08:37.781] | : . ' , ; ` makeCluster(workers, ...) ... done
[08:08:37.782] | : . ' , ; ` Number of workers: 2
[08:08:37.782] | : . ' , ; ` Workers UUID: ‘623664460e19df44562b7fe4cf996cb6’
[08:08:37.782] | : . ' , ; Starting new cluster ... done
[08:08:37.782] | : . ' , ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ... done
[08:08:37.782] | : . ' , Backend: <‘MultisessionFutureBackend’, ‘ClusterFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:37.782] | : . ' MultisessionFutureBackend(workers = <workers>, interrupts = TRUE, ...) ... done
[08:08:37.782] | : . makeFutureBackend(<multisession>) ... done
[08:08:37.782] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:37.783] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:37.783] | : . plan(): nbrOfWorkers() = 2
[08:08:37.783] | : plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ... done
[08:08:37.783] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
- lm(<formula>) ...
[08:08:37.783] | future(..., label = NULL) ...
[08:08:37.783] | : lazy: FALSE
[08:08:37.783] | : stdout: TRUE
[08:08:37.783] | : conditions: [n=1] ‘condition’
[08:08:37.783] | : gc: FALSE
[08:08:37.784] | : earlySignal: FALSE
[08:08:37.784] | : getGlobalsAndPackages() ...
[08:08:37.784] | : . Searching for globals ...
[08:08:37.795] | : . ' globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[08:08:37.795] | : . Searching for globals ... done
[08:08:37.795] | : . Resolving globals: FALSE
[08:08:37.795] | : . Search for packages associated with the globals ...
[08:08:37.796] | : . ' Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:37.796] | : . ' Packages: [2] ‘base’, ‘stats’
[08:08:37.796] | : . Search for packages associated with the globals ... done
[08:08:37.796] | : . Packages after dropping 'base': [1] ‘stats’
[08:08:37.796] | : . Packages after dropping non-attached packages: [1] ‘stats’
[08:08:37.797] | : . globals: [2] ‘weight’, ‘group’
[08:08:37.797] | : . packages: [1] ‘stats’
[08:08:37.797] | : getGlobalsAndPackages() ... done
[08:08:37.797] | : run() for ‘Future’ (<unnamed-29>) ...
[08:08:37.797] | : . state: ‘created’
[08:08:37.797] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:37.797] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:37.797] | : . Using MultisessionFutureBackend ...
[08:08:37.798] | : . ' Number of futures since start: 0 (0 created, 0 launched, 0 finished)
[08:08:37.798] | : . ' Launching futures ...
[08:08:37.798] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:37.798] | : . ' , ; Workers: [n=2]
[08:08:37.798] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:08:37.800] | : . ' , ; FutureRegistry: ‘workers-623664460e19df44562b7fe4cf996cb6’
[08:08:37.800] | : . ' , ; requestWorker() ...
[08:08:37.800] | : . ' , ; ` requestNode() ...
[08:08:37.800] | : . ' , ; ` | Number of workers: 2
[08:08:37.800] | : . ' , ; ` | Polling for a free worker ...
[08:08:37.800] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:37.800] | : . ' , ; ` | : . Created empty registry ‘workers-623664460e19df44562b7fe4cf996cb6’
[08:08:37.800] | : . ' , ; ` | : . Listing all futures
[08:08:37.801] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:37.801] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:37.801] | : . ' , ; ` | : Total time: 0
[08:08:37.801] | : . ' , ; ` | Polling for a free worker ... done
[08:08:37.801] | : . ' , ; ` | FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:37.801] | : . ' , ; ` | : Listing all futures
[08:08:37.801] | : . ' , ; ` | : Number of registered futures: 0
[08:08:37.801] | : . ' , ; ` | FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:37.801] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:37.801] | : . ' , ; ` | Index of first available worker: 1
[08:08:37.802] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:37.879] | : . ' , ; ` | : Worker is functional
[08:08:37.879] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:37.879] | : . ' , ; ` | : . Listing all futures
[08:08:37.879] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:37.880] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:37.880] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:37.880] | : . ' , ; ` requestNode() ... done
[08:08:37.880] | : . ' , ; ` cluster node index: 1
[08:08:37.880] | : . ' , ; requestWorker() ... done
[08:08:37.880] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:37.881] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:37.881] | : . ' , ; launchFuture() ...
[08:08:37.881] | : . ' , ; ` cluster node index: 1
[08:08:37.881] | : . ' , ; ` getFutureData() ...
[08:08:37.881] | : . ' , ; ` | getFutureCore() ...
[08:08:37.881] | : . ' , ; ` | : Packages needed by the future expression (n = 1): ‘stats’
[08:08:37.881] | : . ' , ; ` | getFutureCore() ... done
[08:08:37.882] | : . ' , ; ` | getFutureCapture() ...
[08:08:37.882] | : . ' , ; ` | getFutureCapture() ... done
[08:08:37.882] | : . ' , ; ` | getFutureContext() ...
[08:08:37.882] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:37.882] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:37.882] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:37.882] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:37.883] | : . ' , ; ` | getFutureContext() ... done
[08:08:37.883] | : . ' , ; ` getFutureData() ... done
[08:08:37.883] | : . ' , ; ` FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'add', earlySignal = 0) ...
[08:08:37.884] | : . ' , ; ` | Appended future to position #1
[08:08:37.884] | : . ' , ; ` | Number of registered futures: 1
[08:08:37.884] | : . ' , ; ` FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'add', earlySignal = 0) ... done
[08:08:37.884] | : . ' , ; launchFuture() ... done
[08:08:37.884] | : . ' , ; MultisessionFuture started
[08:08:37.884] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:37.885] | : . ' Launching futures ... done
[08:08:37.885] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:37.885] | : . Using MultisessionFutureBackend ... done
[08:08:37.885] | : run() for ‘Future’ (<unnamed-29>) ... done
[08:08:37.885] | future(..., label = NULL) ... done
[08:08:37.885] | value() for MultisessionFuture (<unnamed-29>) ...
[08:08:37.886] | : result() for ClusterFuture ...
[08:08:37.886] | : . assertValidConnection() ...
[08:08:37.886] | : . ' cluster node index: 1
[08:08:37.887] | : . assertValidConnection() ... done
[08:08:37.888] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:37.888] | : . ' cluster node index: 1
[08:08:37.975] | : . ' [1] TRUE
[08:08:37.976] | : . ' received data:
[08:08:37.976] | : . ' List of 5
[08:08:37.976] | : . '  $ type   : chr "VALUE"
[08:08:37.976] | : . '  $ value  :List of 16
[08:08:37.976] | : . '   ..$ value              :List of 13
[08:08:37.976] | : . '   .. ..$ coefficients : Named num [1:2] 5.03 4.66
[08:08:37.976] | : . '   .. .. ..- attr(*, "names")= chr [1:2] "groupCtl" "groupTrt"
[08:08:37.976] | : . '   .. ..$ residuals    : Named num [1:20] -0.862 0.548 0.148 1.078 -0.532 ...
[08:08:37.976] | : . '   .. .. ..- attr(*, "names")= chr [1:20] "1" "2" "3" "4" ...
[08:08:37.976] | : . '   .. ..$ effects      : Named num [1:20] -15.913 -14.739 0.355 1.285 -0.325 ...
[08:08:37.976] | : . '   .. .. ..- attr(*, "names")= chr [1:20] "groupCtl" "groupTrt" "" "" ...
[08:08:37.976] | : . '   .. ..$ rank         : int 2
[08:08:37.976] | : . '   .. ..$ fitted.values: Named num [1:20] 5.03 5.03 5.03 5.03 5.03 ...
[08:08:37.976] | : . '   .. .. ..- attr(*, "names")= chr [1:20] "1" "2" "3" "4" ...
[08:08:37.976] | : . '   .. ..$ assign       : int [1:2] 1 1
[08:08:37.976] | : . '   .. ..$ qr           :List of 5
[08:08:37.976] | : . '   .. .. ..$ qr   : num [1:20, 1:2] -3.162 0.316 0.316 0.316 0.316 ...
[08:08:37.976] | : . '   .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:37.976] | : . '   .. .. .. .. ..$ : chr [1:20] "1" "2" "3" "4" ...
[08:08:37.976] | : . '   .. .. .. .. ..$ : chr [1:2] "groupCtl" "groupTrt"
[08:08:37.976] | : . '   .. .. .. ..- attr(*, "assign")= int [1:2] 1 1
[08:08:37.976] | : . '   .. .. .. ..- attr(*, "contrasts")=List of 1
[08:08:37.976] | : . '   .. .. .. .. ..$ group: chr "contr.treatment"
[08:08:37.976] | : . '   .. .. ..$ qraux: num [1:2] 1.32 1
[08:08:37.976] | : . '   .. .. ..$ pivot: int [1:2] 1 2
[08:08:37.976] | : . '   .. .. ..$ tol  : num 1e-07
[08:08:37.976] | : . '   .. .. ..$ rank : int 2
[08:08:37.976] | : . '   .. .. ..- attr(*, "class")= chr "qr"
[08:08:37.976] | : . '   .. ..$ df.residual  : int 18
[08:08:37.976] | : . '   .. ..$ contrasts    :List of 1
[08:08:37.976] | : . '   .. .. ..$ group: chr "contr.treatment"
[08:08:37.976] | : . '   .. ..$ xlevels      :List of 1
[08:08:37.976] | : . '   .. .. ..$ group: chr [1:2] "Ctl" "Trt"
[08:08:37.976] | : . '   .. ..$ call         : language lm(formula = weight ~ group - 1)
[08:08:37.976] | : . '   .. ..$ terms        :Classes 'terms', 'formula'  language weight ~ group - 1
[08:08:37.976] | : . '   .. .. .. ..- attr(*, "variables")= language list(weight, group)
[08:08:37.976] | : . '   .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:37.976] | : . '   .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:37.976] | : . '   .. .. .. .. .. ..$ : chr [1:2] "weight" "group"
[08:08:37.976] | : . '   .. .. .. .. .. ..$ : chr "group"
[08:08:37.976] | : . '   .. .. .. ..- attr(*, "term.labels")= chr "group"
[08:08:37.976] | : . '   .. .. .. ..- attr(*, "order")= int 1
[08:08:37.976] | : . '   .. .. .. ..- attr(*, "intercept")= int 0
[08:08:37.976] | : . '   .. .. .. ..- attr(*, "response")= int 1
[08:08:37.976] | : . '   .. .. .. ..- attr(*, ".Environment")=<environment: 0x55f94f009768> 
[08:08:37.976] | : . '   .. .. .. ..- attr(*, "predvars")= language list(weight, group)
[08:08:37.976] | : . '   .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "factor"
[08:08:37.976] | : . '   .. .. .. .. ..- attr(*, "names")= chr [1:2] "weight" "group"
[08:08:37.976] | : . '   .. ..$ model        :'data.frame':	20 obs. of  2 variables:
[08:08:37.976] | : . '   .. .. ..$ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[08:08:37.976] | : . '   .. .. ..$ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[08:08:37.976] | : . '   .. .. ..- attr(*, "terms")=Classes 'terms', 'formula'  language weight ~ group - 1
[08:08:37.976] | : . '   .. .. .. .. ..- attr(*, "variables")= language list(weight, group)
[08:08:37.976] | : . '   .. .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:37.976] | : . '   .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:37.976] | : . '   .. .. .. .. .. .. ..$ : chr [1:2] "weight" "group"
[08:08:37.976] | : . '   .. .. .. .. .. .. ..$ : chr "group"
[08:08:37.976] | : . '   .. .. .. .. ..- attr(*, "term.labels")= chr "group"
[08:08:37.976] | : . '   .. .. .. .. ..- attr(*, "order")= int 1
[08:08:37.976] | : . '   .. .. .. .. ..- attr(*, "intercept")= int 0
[08:08:37.976] | : . '   .. .. .. .. ..- attr(*, "response")= int 1
[08:08:37.976] | : . '   .. .. .. .. ..- attr(*, ".Environment")=<environment: 0x55f94f009768> 
[08:08:37.976] | : . '   .. .. .. .. ..- attr(*, "predvars")= language list(weight, group)
[08:08:37.976] | : . '   .. .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "factor"
[08:08:37.976] | : . '   .. .. .. .. .. ..- attr(*, "names")= chr [1:2] "weight" "group"
[08:08:37.976] | : . '   .. ..- attr(*, "class")= chr "lm"
[08:08:37.976] | : . '   ..$ visible            : logi TRUE
[08:08:37.976] | : . '   ..$ stdout             : chr ""
[08:08:37.976] | : . '   ..$ conditions         : list()
[08:08:37.976] | : . '   ..$ rng                : logi FALSE
[08:08:37.976] | : . '   ..$ seed               : NULL
[08:08:37.976] | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:37.976] | : . '   ..$ misuseConnections  :List of 3
[08:08:37.976] | : . '   .. ..$ added   : NULL
[08:08:37.976] | : . '   .. ..$ removed : NULL
[08:08:37.976] | : . '   .. ..$ replaced: NULL
[08:08:37.976] | : . '   ..$ misuseDevices      : NULL
[08:08:37.976] | : . '   ..$ misuseDefaultDevice: list()
[08:08:37.976] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:37"
[08:08:37.976] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:37"
[08:08:37.976] | : . '   ..$ uuid               : chr [1:2] "98952eeb2580387bd4c4db2d30fd2531" "29"
[08:08:37.976] | : . '   ..$ session_uuid       : chr "f21ee30ff69e2e385c3cea002926a2be"
[08:08:37.976] | : . '   .. ..- attr(*, "source")=List of 5
[08:08:37.976] | : . '   .. .. ..$ host  : Named chr "285a5f234941"
[08:08:37.976] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:37.976] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:08:37.976] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:37.976] | : . '   .. .. ..$ pid   : int 69397
[08:08:37.976] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:37"
[08:08:37.976] | : . '   .. .. ..$ random: int 2147483647
[08:08:37.976] | : . '   ..$ r_info             :List of 4
[08:08:37.976] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:37.976] | : . '   .. .. ..$ : int [1:3] 4 5 0
[08:08:37.976] | : . '   .. ..$ os           : chr "unix"
[08:08:37.976] | : . '   .. ..$ os_name      : chr "Linux"
[08:08:37.976] | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:37.976] | : . '   ..$ version            : chr "1.8"
[08:08:37.976] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:37.976] | : . '  $ success: logi TRUE
[08:08:37.976] | : . '  $ time   : 'proc_time' Named num [1:5] 0.05 0.001 0.051 0 0
[08:08:37.976] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:37.976] | : . '  $ tag    : NULL
[08:08:38.007] | : . ' Received FutureResult
[08:08:38.008] | : . ' FutureResult:
[08:08:38.008] | : . ' value: ‘lm’
[08:08:38.008] | : . ' visible: TRUE
[08:08:38.008] | : . ' stdout: character
[08:08:38.008] | : . ' conditions: [n = 0] 
[08:08:38.008] | : . ' RNG used: FALSE
[08:08:38.008] | : . ' duration: 0.04932952 secs (started 2025-06-17 08:08:37.925848)
[08:08:38.008] | : . ' version: 1.8
[08:08:38.008] | : . ' FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'remove', earlySignal = 0) ...
[08:08:38.008] | : . ' , Removed future from position #1
[08:08:38.009] | : . ' , Number of registered futures: 0
[08:08:38.009] | : . ' FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'remove', earlySignal = 0) ... done
[08:08:38.009] | : . ' Erased future from future backend
[08:08:38.009] | : . ' result() for ClusterFuture ...
[08:08:38.009] | : . ' , result already collected: FutureResult
[08:08:38.009] | : . ' result() for ClusterFuture ... done
[08:08:38.009] | : . ' signalConditions() ...
[08:08:38.009] | : . ' , include = ‘immediateCondition’
[08:08:38.009] | : . ' , exclude = 
[08:08:38.009] | : . ' , resignal = FALSE
[08:08:38.009] | : . ' , Number of conditions: 0
[08:08:38.010] | : . ' ,  int 0
[08:08:38.010] | : . ' signalConditions() ... done
[08:08:38.010] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:38.010] | : result() for ClusterFuture ... done
[08:08:38.010] | : result() for ClusterFuture ...
[08:08:38.010] | : . result already collected: FutureResult
[08:08:38.011] | : result() for ClusterFuture ... done
[08:08:38.011] | : signalConditions() ...
[08:08:38.011] | : . include = ‘immediateCondition’
[08:08:38.011] | : . exclude = 
[08:08:38.011] | : . resignal = FALSE
[08:08:38.011] | : . Number of conditions: 0
[08:08:38.011] | : .  int 0
[08:08:38.011] | : signalConditions() ... done
[08:08:38.012] | : relay stdout ...
[08:08:38.012] | : relay stdout ... done
[08:08:38.012] | : check for misuse ...
[08:08:38.012] | : check for misuse ... done
[08:08:38.012] | value() for MultisessionFuture (<unnamed-29>) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[08:08:38.013] | future(..., label = NULL) ...
[08:08:38.014] | : lazy: TRUE
[08:08:38.014] | : stdout: TRUE
[08:08:38.014] | : conditions: [n=1] ‘condition’
[08:08:38.014] | : gc: FALSE
[08:08:38.014] | : earlySignal: FALSE
[08:08:38.014] | : getGlobalsAndPackages() ...
[08:08:38.014] | : . Searching for globals ...
[08:08:38.026] | : . ' globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[08:08:38.026] | : . Searching for globals ... done
[08:08:38.026] | : . Resolving globals: FALSE
[08:08:38.026] | : . Search for packages associated with the globals ...
[08:08:38.026] | : . ' Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:38.026] | : . ' Packages: [2] ‘base’, ‘stats’
[08:08:38.027] | : . Search for packages associated with the globals ... done
[08:08:38.027] | : . Packages after dropping 'base': [1] ‘stats’
[08:08:38.027] | : . Packages after dropping non-attached packages: [1] ‘stats’
[08:08:38.027] | : . globals: [2] ‘weight’, ‘group’
[08:08:38.027] | : . packages: [1] ‘stats’
[08:08:38.027] | : getGlobalsAndPackages() ... done
[08:08:38.027] | future(..., label = NULL) ... done
[08:08:38.028] | value() for Future (<unnamed-30>) ...
[08:08:38.028] | : run() for ‘Future’ (<unnamed-30>) ...
[08:08:38.028] | : . state: ‘created’
[08:08:38.028] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:38.028] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:38.028] | : . Using MultisessionFutureBackend ...
[08:08:38.028] | : . ' Number of futures since start: 1 (1 created, 1 launched, 1 finished)
[08:08:38.028] | : . ' Launching futures ...
[08:08:38.028] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:38.029] | : . ' , ; Workers: [n=2]
[08:08:38.029] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:08:38.030] | : . ' , ; FutureRegistry: ‘workers-623664460e19df44562b7fe4cf996cb6’
[08:08:38.030] | : . ' , ; requestWorker() ...
[08:08:38.030] | : . ' , ; ` requestNode() ...
[08:08:38.030] | : . ' , ; ` | Number of workers: 2
[08:08:38.031] | : . ' , ; ` | Polling for a free worker ...
[08:08:38.031] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:38.031] | : . ' , ; ` | : . Listing all futures
[08:08:38.031] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:38.031] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:38.031] | : . ' , ; ` | : Total time: 0
[08:08:38.031] | : . ' , ; ` | Polling for a free worker ... done
[08:08:38.031] | : . ' , ; ` | FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:38.031] | : . ' , ; ` | : Listing all futures
[08:08:38.031] | : . ' , ; ` | : Number of registered futures: 0
[08:08:38.032] | : . ' , ; ` | FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:38.032] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:38.032] | : . ' , ; ` | Index of first available worker: 1
[08:08:38.032] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:38.125] | : . ' , ; ` | : Worker is functional
[08:08:38.125] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:38.125] | : . ' , ; ` | : . Listing all futures
[08:08:38.126] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:38.126] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:38.126] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:38.126] | : . ' , ; ` requestNode() ... done
[08:08:38.126] | : . ' , ; ` cluster node index: 1
[08:08:38.126] | : . ' , ; requestWorker() ... done
[08:08:38.126] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:38.127] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:38.127] | : . ' , ; launchFuture() ...
[08:08:38.127] | : . ' , ; ` cluster node index: 1
[08:08:38.127] | : . ' , ; ` getFutureData() ...
[08:08:38.127] | : . ' , ; ` | getFutureCore() ...
[08:08:38.127] | : . ' , ; ` | : Packages needed by the future expression (n = 1): ‘stats’
[08:08:38.127] | : . ' , ; ` | getFutureCore() ... done
[08:08:38.127] | : . ' , ; ` | getFutureCapture() ...
[08:08:38.128] | : . ' , ; ` | getFutureCapture() ... done
[08:08:38.128] | : . ' , ; ` | getFutureContext() ...
[08:08:38.128] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:38.128] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:38.128] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:38.128] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:38.128] | : . ' , ; ` | getFutureContext() ... done
[08:08:38.128] | : . ' , ; ` getFutureData() ... done
[08:08:38.129] | : . ' , ; ` FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'add', earlySignal = 0) ...
[08:08:38.129] | : . ' , ; ` | Appended future to position #1
[08:08:38.129] | : . ' , ; ` | Number of registered futures: 1
[08:08:38.129] | : . ' , ; ` FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'add', earlySignal = 0) ... done
[08:08:38.129] | : . ' , ; launchFuture() ... done
[08:08:38.129] | : . ' , ; MultisessionFuture started
[08:08:38.129] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:38.129] | : . ' Launching futures ... done
[08:08:38.130] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:38.130] | : . Using MultisessionFutureBackend ... done
[08:08:38.130] | : run() for ‘Future’ (<unnamed-30>) ... done
[08:08:38.130] | : result() for ClusterFuture ...
[08:08:38.130] | : . assertValidConnection() ...
[08:08:38.130] | : . ' cluster node index: 1
[08:08:38.130] | : . assertValidConnection() ... done
[08:08:38.131] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:38.131] | : . ' cluster node index: 1
[08:08:38.174] | : . ' [1] TRUE
[08:08:38.174] | : . ' received data:
[08:08:38.174] | : . ' List of 5
[08:08:38.174] | : . '  $ type   : chr "VALUE"
[08:08:38.174] | : . '  $ value  :List of 16
[08:08:38.174] | : . '   ..$ value              :List of 13
[08:08:38.174] | : . '   .. ..$ coefficients : Named num [1:2] 5.03 4.66
[08:08:38.174] | : . '   .. .. ..- attr(*, "names")= chr [1:2] "groupCtl" "groupTrt"
[08:08:38.174] | : . '   .. ..$ residuals    : Named num [1:20] -0.862 0.548 0.148 1.078 -0.532 ...
[08:08:38.174] | : . '   .. .. ..- attr(*, "names")= chr [1:20] "1" "2" "3" "4" ...
[08:08:38.174] | : . '   .. ..$ effects      : Named num [1:20] -15.913 -14.739 0.355 1.285 -0.325 ...
[08:08:38.174] | : . '   .. .. ..- attr(*, "names")= chr [1:20] "groupCtl" "groupTrt" "" "" ...
[08:08:38.174] | : . '   .. ..$ rank         : int 2
[08:08:38.174] | : . '   .. ..$ fitted.values: Named num [1:20] 5.03 5.03 5.03 5.03 5.03 ...
[08:08:38.174] | : . '   .. .. ..- attr(*, "names")= chr [1:20] "1" "2" "3" "4" ...
[08:08:38.174] | : . '   .. ..$ assign       : int [1:2] 1 1
[08:08:38.174] | : . '   .. ..$ qr           :List of 5
[08:08:38.174] | : . '   .. .. ..$ qr   : num [1:20, 1:2] -3.162 0.316 0.316 0.316 0.316 ...
[08:08:38.174] | : . '   .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:38.174] | : . '   .. .. .. .. ..$ : chr [1:20] "1" "2" "3" "4" ...
[08:08:38.174] | : . '   .. .. .. .. ..$ : chr [1:2] "groupCtl" "groupTrt"
[08:08:38.174] | : . '   .. .. .. ..- attr(*, "assign")= int [1:2] 1 1
[08:08:38.174] | : . '   .. .. .. ..- attr(*, "contrasts")=List of 1
[08:08:38.174] | : . '   .. .. .. .. ..$ group: chr "contr.treatment"
[08:08:38.174] | : . '   .. .. ..$ qraux: num [1:2] 1.32 1
[08:08:38.174] | : . '   .. .. ..$ pivot: int [1:2] 1 2
[08:08:38.174] | : . '   .. .. ..$ tol  : num 1e-07
[08:08:38.174] | : . '   .. .. ..$ rank : int 2
[08:08:38.174] | : . '   .. .. ..- attr(*, "class")= chr "qr"
[08:08:38.174] | : . '   .. ..$ df.residual  : int 18
[08:08:38.174] | : . '   .. ..$ contrasts    :List of 1
[08:08:38.174] | : . '   .. .. ..$ group: chr "contr.treatment"
[08:08:38.174] | : . '   .. ..$ xlevels      :List of 1
[08:08:38.174] | : . '   .. .. ..$ group: chr [1:2] "Ctl" "Trt"
[08:08:38.174] | : . '   .. ..$ call         : language lm(formula = weight ~ group - 1)
[08:08:38.174] | : . '   .. ..$ terms        :Classes 'terms', 'formula'  language weight ~ group - 1
[08:08:38.174] | : . '   .. .. .. ..- attr(*, "variables")= language list(weight, group)
[08:08:38.174] | : . '   .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:38.174] | : . '   .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:38.174] | : . '   .. .. .. .. .. ..$ : chr [1:2] "weight" "group"
[08:08:38.174] | : . '   .. .. .. .. .. ..$ : chr "group"
[08:08:38.174] | : . '   .. .. .. ..- attr(*, "term.labels")= chr "group"
[08:08:38.174] | : . '   .. .. .. ..- attr(*, "order")= int 1
[08:08:38.174] | : . '   .. .. .. ..- attr(*, "intercept")= int 0
[08:08:38.174] | : . '   .. .. .. ..- attr(*, "response")= int 1
[08:08:38.174] | : . '   .. .. .. ..- attr(*, ".Environment")=<environment: 0x55f94f0fbf18> 
[08:08:38.174] | : . '   .. .. .. ..- attr(*, "predvars")= language list(weight, group)
[08:08:38.174] | : . '   .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "factor"
[08:08:38.174] | : . '   .. .. .. .. ..- attr(*, "names")= chr [1:2] "weight" "group"
[08:08:38.174] | : . '   .. ..$ model        :'data.frame':	20 obs. of  2 variables:
[08:08:38.174] | : . '   .. .. ..$ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[08:08:38.174] | : . '   .. .. ..$ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[08:08:38.174] | : . '   .. .. ..- attr(*, "terms")=Classes 'terms', 'formula'  language weight ~ group - 1
[08:08:38.174] | : . '   .. .. .. .. ..- attr(*, "variables")= language list(weight, group)
[08:08:38.174] | : . '   .. .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:38.174] | : . '   .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:38.174] | : . '   .. .. .. .. .. .. ..$ : chr [1:2] "weight" "group"
[08:08:38.174] | : . '   .. .. .. .. .. .. ..$ : chr "group"
[08:08:38.174] | : . '   .. .. .. .. ..- attr(*, "term.labels")= chr "group"
[08:08:38.174] | : . '   .. .. .. .. ..- attr(*, "order")= int 1
[08:08:38.174] | : . '   .. .. .. .. ..- attr(*, "intercept")= int 0
[08:08:38.174] | : . '   .. .. .. .. ..- attr(*, "response")= int 1
[08:08:38.174] | : . '   .. .. .. .. ..- attr(*, ".Environment")=<environment: 0x55f94f0fbf18> 
[08:08:38.174] | : . '   .. .. .. .. ..- attr(*, "predvars")= language list(weight, group)
[08:08:38.174] | : . '   .. .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "factor"
[08:08:38.174] | : . '   .. .. .. .. .. ..- attr(*, "names")= chr [1:2] "weight" "group"
[08:08:38.174] | : . '   .. ..- attr(*, "class")= chr "lm"
[08:08:38.174] | : . '   ..$ visible            : logi TRUE
[08:08:38.174] | : . '   ..$ stdout             : chr ""
[08:08:38.174] | : . '   ..$ conditions         : list()
[08:08:38.174] | : . '   ..$ rng                : logi FALSE
[08:08:38.174] | : . '   ..$ seed               : NULL
[08:08:38.174] | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:38.174] | : . '   ..$ misuseConnections  :List of 3
[08:08:38.174] | : . '   .. ..$ added   : NULL
[08:08:38.174] | : . '   .. ..$ removed : NULL
[08:08:38.174] | : . '   .. ..$ replaced: NULL
[08:08:38.174] | : . '   ..$ misuseDevices      : NULL
[08:08:38.174] | : . '   ..$ misuseDefaultDevice: list()
[08:08:38.174] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:38"
[08:08:38.174] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:38"
[08:08:38.174] | : . '   ..$ uuid               : chr [1:2] "98952eeb2580387bd4c4db2d30fd2531" "30"
[08:08:38.174] | : . '   ..$ session_uuid       : chr "f21ee30ff69e2e385c3cea002926a2be"
[08:08:38.174] | : . '   .. ..- attr(*, "source")=List of 5
[08:08:38.174] | : . '   .. .. ..$ host  : Named chr "285a5f234941"
[08:08:38.174] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:38.174] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:08:38.174] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:38.174] | : . '   .. .. ..$ pid   : int 69397
[08:08:38.174] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:37"
[08:08:38.174] | : . '   .. .. ..$ random: int 2147483647
[08:08:38.174] | : . '   ..$ r_info             :List of 4
[08:08:38.174] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:38.174] | : . '   .. .. ..$ : int [1:3] 4 5 0
[08:08:38.174] | : . '   .. ..$ os           : chr "unix"
[08:08:38.174] | : . '   .. ..$ os_name      : chr "Linux"
[08:08:38.174] | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:38.174] | : . '   ..$ version            : chr "1.8"
[08:08:38.174] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:38.174] | : . '  $ success: logi TRUE
[08:08:38.174] | : . '  $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[08:08:38.174] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:38.174] | : . '  $ tag    : NULL
[08:08:38.204] | : . ' Received FutureResult
[08:08:38.205] | : . ' FutureResult:
[08:08:38.205] | : . ' value: ‘lm’
[08:08:38.205] | : . ' visible: TRUE
[08:08:38.205] | : . ' stdout: character
[08:08:38.205] | : . ' conditions: [n = 0] 
[08:08:38.205] | : . ' RNG used: FALSE
[08:08:38.205] | : . ' duration: 0.003469706 secs (started 2025-06-17 08:08:38.170134)
[08:08:38.205] | : . ' version: 1.8
[08:08:38.205] | : . ' FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'remove', earlySignal = 0) ...
[08:08:38.205] | : . ' , Removed future from position #1
[08:08:38.205] | : . ' , Number of registered futures: 0
[08:08:38.205] | : . ' FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'remove', earlySignal = 0) ... done
[08:08:38.205] | : . ' Erased future from future backend
[08:08:38.206] | : . ' result() for ClusterFuture ...
[08:08:38.206] | : . ' , result already collected: FutureResult
[08:08:38.206] | : . ' result() for ClusterFuture ... done
[08:08:38.206] | : . ' signalConditions() ...
[08:08:38.206] | : . ' , include = ‘immediateCondition’
[08:08:38.206] | : . ' , exclude = 
[08:08:38.206] | : . ' , resignal = FALSE
[08:08:38.206] | : . ' , Number of conditions: 0
[08:08:38.206] | : . ' ,  int 0
[08:08:38.207] | : . ' signalConditions() ... done
[08:08:38.207] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:38.207] | : result() for ClusterFuture ... done
[08:08:38.207] | : result() for ClusterFuture ...
[08:08:38.207] | : . result already collected: FutureResult
[08:08:38.207] | : result() for ClusterFuture ... done
[08:08:38.207] | : signalConditions() ...
[08:08:38.207] | : . include = ‘immediateCondition’
[08:08:38.208] | : . exclude = 
[08:08:38.208] | : . resignal = FALSE
[08:08:38.208] | : . Number of conditions: 0
[08:08:38.208] | : .  int 0
[08:08:38.208] | : signalConditions() ... done
[08:08:38.208] | : relay stdout ...
[08:08:38.208] | : relay stdout ... done
[08:08:38.209] | : check for misuse ...
[08:08:38.209] | : check for misuse ... done
[08:08:38.209] | value() for Future (<unnamed-30>) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[08:08:38.210] | future(..., label = NULL) ...
[08:08:38.210] | : lazy: FALSE
[08:08:38.211] | : stdout: TRUE
[08:08:38.211] | : conditions: [n=1] ‘condition’
[08:08:38.211] | : gc: FALSE
[08:08:38.211] | : earlySignal: FALSE
[08:08:38.211] | : getGlobalsAndPackages() ...
[08:08:38.211] | : . Searching for globals ...
[08:08:38.222] | : . ' globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[08:08:38.223] | : . Searching for globals ... done
[08:08:38.223] | : . Resolving globals: FALSE
[08:08:38.223] | : . Search for packages associated with the globals ...
[08:08:38.223] | : . ' Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:38.223] | : . ' Packages: [2] ‘base’, ‘stats’
[08:08:38.223] | : . Search for packages associated with the globals ... done
[08:08:38.224] | : . Packages after dropping 'base': [1] ‘stats’
[08:08:38.224] | : . Packages after dropping non-attached packages: [1] ‘stats’
[08:08:38.224] | : . globals: [2] ‘weight’, ‘group’
[08:08:38.224] | : . packages: [1] ‘stats’
[08:08:38.224] | : getGlobalsAndPackages() ... done
[08:08:38.224] | : run() for ‘Future’ (<unnamed-31>) ...
[08:08:38.224] | : . state: ‘created’
[08:08:38.225] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:38.225] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:38.225] | : . Using MultisessionFutureBackend ...
[08:08:38.225] | : . ' Number of futures since start: 2 (2 created, 2 launched, 2 finished)
[08:08:38.225] | : . ' Launching futures ...
[08:08:38.225] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:38.225] | : . ' , ; Workers: [n=2]
[08:08:38.225] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:08:38.227] | : . ' , ; FutureRegistry: ‘workers-623664460e19df44562b7fe4cf996cb6’
[08:08:38.227] | : . ' , ; requestWorker() ...
[08:08:38.227] | : . ' , ; ` requestNode() ...
[08:08:38.227] | : . ' , ; ` | Number of workers: 2
[08:08:38.227] | : . ' , ; ` | Polling for a free worker ...
[08:08:38.227] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:38.227] | : . ' , ; ` | : . Listing all futures
[08:08:38.227] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:38.228] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:38.228] | : . ' , ; ` | : Total time: 0
[08:08:38.228] | : . ' , ; ` | Polling for a free worker ... done
[08:08:38.228] | : . ' , ; ` | FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:38.228] | : . ' , ; ` | : Listing all futures
[08:08:38.228] | : . ' , ; ` | : Number of registered futures: 0
[08:08:38.228] | : . ' , ; ` | FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:38.228] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:38.228] | : . ' , ; ` | Index of first available worker: 1
[08:08:38.228] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:38.321] | : . ' , ; ` | : Worker is functional
[08:08:38.321] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:38.321] | : . ' , ; ` | : . Listing all futures
[08:08:38.321] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:38.321] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:38.322] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:38.322] | : . ' , ; ` requestNode() ... done
[08:08:38.322] | : . ' , ; ` cluster node index: 1
[08:08:38.322] | : . ' , ; requestWorker() ... done
[08:08:38.322] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:38.322] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:38.323] | : . ' , ; launchFuture() ...
[08:08:38.323] | : . ' , ; ` cluster node index: 1
[08:08:38.323] | : . ' , ; ` getFutureData() ...
[08:08:38.323] | : . ' , ; ` | getFutureCore() ...
[08:08:38.323] | : . ' , ; ` | : Packages needed by the future expression (n = 1): ‘stats’
[08:08:38.323] | : . ' , ; ` | getFutureCore() ... done
[08:08:38.323] | : . ' , ; ` | getFutureCapture() ...
[08:08:38.323] | : . ' , ; ` | getFutureCapture() ... done
[08:08:38.323] | : . ' , ; ` | getFutureContext() ...
[08:08:38.324] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:38.324] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:38.324] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:38.324] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:38.324] | : . ' , ; ` | getFutureContext() ... done
[08:08:38.324] | : . ' , ; ` getFutureData() ... done
[08:08:38.324] | : . ' , ; ` FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'add', earlySignal = 0) ...
[08:08:38.325] | : . ' , ; ` | Appended future to position #1
[08:08:38.325] | : . ' , ; ` | Number of registered futures: 1
[08:08:38.325] | : . ' , ; ` FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'add', earlySignal = 0) ... done
[08:08:38.325] | : . ' , ; launchFuture() ... done
[08:08:38.325] | : . ' , ; MultisessionFuture started
[08:08:38.325] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:38.325] | : . ' Launching futures ... done
[08:08:38.325] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:38.325] | : . Using MultisessionFutureBackend ... done
[08:08:38.326] | : run() for ‘Future’ (<unnamed-31>) ... done
[08:08:38.326] | future(..., label = NULL) ... done
[08:08:38.326] | value() for MultisessionFuture (<unnamed-31>) ...
[08:08:38.326] | : result() for ClusterFuture ...
[08:08:38.326] | : . assertValidConnection() ...
[08:08:38.326] | : . ' cluster node index: 1
[08:08:38.327] | : . assertValidConnection() ... done
[08:08:38.327] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:38.327] | : . ' cluster node index: 1
[08:08:38.371] | : . ' [1] TRUE
[08:08:38.372] | : . ' received data:
[08:08:38.372] | : . ' List of 5
[08:08:38.372] | : . '  $ type   : chr "VALUE"
[08:08:38.372] | : . '  $ value  :List of 16
[08:08:38.372] | : . '   ..$ value              :List of 13
[08:08:38.372] | : . '   .. ..$ coefficients : Named num [1:2] 5.03 4.66
[08:08:38.372] | : . '   .. .. ..- attr(*, "names")= chr [1:2] "groupCtl" "groupTrt"
[08:08:38.372] | : . '   .. ..$ residuals    : Named num [1:20] -0.862 0.548 0.148 1.078 -0.532 ...
[08:08:38.372] | : . '   .. .. ..- attr(*, "names")= chr [1:20] "1" "2" "3" "4" ...
[08:08:38.372] | : . '   .. ..$ effects      : Named num [1:20] -15.913 -14.739 0.355 1.285 -0.325 ...
[08:08:38.372] | : . '   .. .. ..- attr(*, "names")= chr [1:20] "groupCtl" "groupTrt" "" "" ...
[08:08:38.372] | : . '   .. ..$ rank         : int 2
[08:08:38.372] | : . '   .. ..$ fitted.values: Named num [1:20] 5.03 5.03 5.03 5.03 5.03 ...
[08:08:38.372] | : . '   .. .. ..- attr(*, "names")= chr [1:20] "1" "2" "3" "4" ...
[08:08:38.372] | : . '   .. ..$ assign       : int [1:2] 1 1
[08:08:38.372] | : . '   .. ..$ qr           :List of 5
[08:08:38.372] | : . '   .. .. ..$ qr   : num [1:20, 1:2] -3.162 0.316 0.316 0.316 0.316 ...
[08:08:38.372] | : . '   .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:38.372] | : . '   .. .. .. .. ..$ : chr [1:20] "1" "2" "3" "4" ...
[08:08:38.372] | : . '   .. .. .. .. ..$ : chr [1:2] "groupCtl" "groupTrt"
[08:08:38.372] | : . '   .. .. .. ..- attr(*, "assign")= int [1:2] 1 1
[08:08:38.372] | : . '   .. .. .. ..- attr(*, "contrasts")=List of 1
[08:08:38.372] | : . '   .. .. .. .. ..$ group: chr "contr.treatment"
[08:08:38.372] | : . '   .. .. ..$ qraux: num [1:2] 1.32 1
[08:08:38.372] | : . '   .. .. ..$ pivot: int [1:2] 1 2
[08:08:38.372] | : . '   .. .. ..$ tol  : num 1e-07
[08:08:38.372] | : . '   .. .. ..$ rank : int 2
[08:08:38.372] | : . '   .. .. ..- attr(*, "class")= chr "qr"
[08:08:38.372] | : . '   .. ..$ df.residual  : int 18
[08:08:38.372] | : . '   .. ..$ contrasts    :List of 1
[08:08:38.372] | : . '   .. .. ..$ group: chr "contr.treatment"
[08:08:38.372] | : . '   .. ..$ xlevels      :List of 1
[08:08:38.372] | : . '   .. .. ..$ group: chr [1:2] "Ctl" "Trt"
[08:08:38.372] | : . '   .. ..$ call         : language lm(formula = weight ~ group - 1)
[08:08:38.372] | : . '   .. ..$ terms        :Classes 'terms', 'formula'  language weight ~ group - 1
[08:08:38.372] | : . '   .. .. .. ..- attr(*, "variables")= language list(weight, group)
[08:08:38.372] | : . '   .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:38.372] | : . '   .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:38.372] | : . '   .. .. .. .. .. ..$ : chr [1:2] "weight" "group"
[08:08:38.372] | : . '   .. .. .. .. .. ..$ : chr "group"
[08:08:38.372] | : . '   .. .. .. ..- attr(*, "term.labels")= chr "group"
[08:08:38.372] | : . '   .. .. .. ..- attr(*, "order")= int 1
[08:08:38.372] | : . '   .. .. .. ..- attr(*, "intercept")= int 0
[08:08:38.372] | : . '   .. .. .. ..- attr(*, "response")= int 1
[08:08:38.372] | : . '   .. .. .. ..- attr(*, ".Environment")=<environment: 0x55f94f1c9ea0> 
[08:08:38.372] | : . '   .. .. .. ..- attr(*, "predvars")= language list(weight, group)
[08:08:38.372] | : . '   .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "factor"
[08:08:38.372] | : . '   .. .. .. .. ..- attr(*, "names")= chr [1:2] "weight" "group"
[08:08:38.372] | : . '   .. ..$ model        :'data.frame':	20 obs. of  2 variables:
[08:08:38.372] | : . '   .. .. ..$ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[08:08:38.372] | : . '   .. .. ..$ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[08:08:38.372] | : . '   .. .. ..- attr(*, "terms")=Classes 'terms', 'formula'  language weight ~ group - 1
[08:08:38.372] | : . '   .. .. .. .. ..- attr(*, "variables")= language list(weight, group)
[08:08:38.372] | : . '   .. .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:38.372] | : . '   .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:38.372] | : . '   .. .. .. .. .. .. ..$ : chr [1:2] "weight" "group"
[08:08:38.372] | : . '   .. .. .. .. .. .. ..$ : chr "group"
[08:08:38.372] | : . '   .. .. .. .. ..- attr(*, "term.labels")= chr "group"
[08:08:38.372] | : . '   .. .. .. .. ..- attr(*, "order")= int 1
[08:08:38.372] | : . '   .. .. .. .. ..- attr(*, "intercept")= int 0
[08:08:38.372] | : . '   .. .. .. .. ..- attr(*, "response")= int 1
[08:08:38.372] | : . '   .. .. .. .. ..- attr(*, ".Environment")=<environment: 0x55f94f1c9ea0> 
[08:08:38.372] | : . '   .. .. .. .. ..- attr(*, "predvars")= language list(weight, group)
[08:08:38.372] | : . '   .. .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "factor"
[08:08:38.372] | : . '   .. .. .. .. .. ..- attr(*, "names")= chr [1:2] "weight" "group"
[08:08:38.372] | : . '   .. ..- attr(*, "class")= chr "lm"
[08:08:38.372] | : . '   ..$ visible            : logi TRUE
[08:08:38.372] | : . '   ..$ stdout             : chr ""
[08:08:38.372] | : . '   ..$ conditions         : list()
[08:08:38.372] | : . '   ..$ rng                : logi FALSE
[08:08:38.372] | : . '   ..$ seed               : NULL
[08:08:38.372] | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:38.372] | : . '   ..$ misuseConnections  :List of 3
[08:08:38.372] | : . '   .. ..$ added   : NULL
[08:08:38.372] | : . '   .. ..$ removed : NULL
[08:08:38.372] | : . '   .. ..$ replaced: NULL
[08:08:38.372] | : . '   ..$ misuseDevices      : NULL
[08:08:38.372] | : . '   ..$ misuseDefaultDevice: list()
[08:08:38.372] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:38"
[08:08:38.372] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:38"
[08:08:38.372] | : . '   ..$ uuid               : chr [1:2] "98952eeb2580387bd4c4db2d30fd2531" "31"
[08:08:38.372] | : . '   ..$ session_uuid       : chr "f21ee30ff69e2e385c3cea002926a2be"
[08:08:38.372] | : . '   .. ..- attr(*, "source")=List of 5
[08:08:38.372] | : . '   .. .. ..$ host  : Named chr "285a5f234941"
[08:08:38.372] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:38.372] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:08:38.372] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:38.372] | : . '   .. .. ..$ pid   : int 69397
[08:08:38.372] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:37"
[08:08:38.372] | : . '   .. .. ..$ random: int 2147483647
[08:08:38.372] | : . '   ..$ r_info             :List of 4
[08:08:38.372] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:38.372] | : . '   .. .. ..$ : int [1:3] 4 5 0
[08:08:38.372] | : . '   .. ..$ os           : chr "unix"
[08:08:38.372] | : . '   .. ..$ os_name      : chr "Linux"
[08:08:38.372] | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:38.372] | : . '   ..$ version            : chr "1.8"
[08:08:38.372] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:38.372] | : . '  $ success: logi TRUE
[08:08:38.372] | : . '  $ time   : 'proc_time' Named num [1:5] 0.006 0.001 0.007 0 0
[08:08:38.372] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:38.372] | : . '  $ tag    : NULL
[08:08:38.402] | : . ' Received FutureResult
[08:08:38.402] | : . ' FutureResult:
[08:08:38.402] | : . ' value: ‘lm’
[08:08:38.402] | : . ' visible: TRUE
[08:08:38.402] | : . ' stdout: character
[08:08:38.402] | : . ' conditions: [n = 0] 
[08:08:38.402] | : . ' RNG used: FALSE
[08:08:38.402] | : . ' duration: 0.006090641 secs (started 2025-06-17 08:08:38.36519)
[08:08:38.402] | : . ' version: 1.8
[08:08:38.403] | : . ' FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'remove', earlySignal = 0) ...
[08:08:38.403] | : . ' , Removed future from position #1
[08:08:38.403] | : . ' , Number of registered futures: 0
[08:08:38.403] | : . ' FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'remove', earlySignal = 0) ... done
[08:08:38.403] | : . ' Erased future from future backend
[08:08:38.403] | : . ' result() for ClusterFuture ...
[08:08:38.403] | : . ' , result already collected: FutureResult
[08:08:38.404] | : . ' result() for ClusterFuture ... done
[08:08:38.404] | : . ' signalConditions() ...
[08:08:38.404] | : . ' , include = ‘immediateCondition’
[08:08:38.404] | : . ' , exclude = 
[08:08:38.404] | : . ' , resignal = FALSE
[08:08:38.404] | : . ' , Number of conditions: 0
[08:08:38.404] | : . ' ,  int 0
[08:08:38.404] | : . ' signalConditions() ... done
[08:08:38.405] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:38.405] | : result() for ClusterFuture ... done
[08:08:38.405] | : result() for ClusterFuture ...
[08:08:38.405] | : . result already collected: FutureResult
[08:08:38.405] | : result() for ClusterFuture ... done
[08:08:38.405] | : signalConditions() ...
[08:08:38.405] | : . include = ‘immediateCondition’
[08:08:38.405] | : . exclude = 
[08:08:38.405] | : . resignal = FALSE
[08:08:38.405] | : . Number of conditions: 0
[08:08:38.406] | : .  int 0
[08:08:38.406] | : signalConditions() ... done
[08:08:38.406] | : relay stdout ...
[08:08:38.406] | : relay stdout ... done
[08:08:38.406] | : check for misuse ...
[08:08:38.406] | : check for misuse ... done
[08:08:38.406] | value() for MultisessionFuture (<unnamed-31>) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[08:08:38.408] | future(..., label = NULL) ...
[08:08:38.408] | : lazy: FALSE
[08:08:38.408] | : stdout: TRUE
[08:08:38.408] | : conditions: [n=1] ‘condition’
[08:08:38.409] | : gc: FALSE
[08:08:38.409] | : earlySignal: FALSE
[08:08:38.409] | : getGlobalsAndPackages() ...
[08:08:38.409] | : . Searching for globals ...
[08:08:38.420] | : . ' globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[08:08:38.420] | : . Searching for globals ... done
[08:08:38.420] | : . Resolving globals: FALSE
[08:08:38.421] | : . Search for packages associated with the globals ...
[08:08:38.421] | : . ' Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:38.421] | : . ' Packages: [2] ‘base’, ‘stats’
[08:08:38.421] | : . Search for packages associated with the globals ... done
[08:08:38.421] | : . Packages after dropping 'base': [1] ‘stats’
[08:08:38.422] | : . Packages after dropping non-attached packages: [1] ‘stats’
[08:08:38.422] | : . globals: [2] ‘weight’, ‘group’
[08:08:38.422] | : . packages: [1] ‘stats’
[08:08:38.422] | : getGlobalsAndPackages() ... done
[08:08:38.422] | : run() for ‘Future’ (<unnamed-32>) ...
[08:08:38.422] | : . state: ‘created’
[08:08:38.422] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:38.422] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:38.423] | : . Using MultisessionFutureBackend ...
[08:08:38.423] | : . ' Number of futures since start: 3 (3 created, 3 launched, 3 finished)
[08:08:38.423] | : . ' Launching futures ...
[08:08:38.423] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:38.423] | : . ' , ; Workers: [n=2]
[08:08:38.423] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:08:38.425] | : . ' , ; FutureRegistry: ‘workers-623664460e19df44562b7fe4cf996cb6’
[08:08:38.425] | : . ' , ; requestWorker() ...
[08:08:38.425] | : . ' , ; ` requestNode() ...
[08:08:38.425] | : . ' , ; ` | Number of workers: 2
[08:08:38.425] | : . ' , ; ` | Polling for a free worker ...
[08:08:38.425] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:38.425] | : . ' , ; ` | : . Listing all futures
[08:08:38.425] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:38.425] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:38.425] | : . ' , ; ` | : Total time: 0
[08:08:38.426] | : . ' , ; ` | Polling for a free worker ... done
[08:08:38.426] | : . ' , ; ` | FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:38.426] | : . ' , ; ` | : Listing all futures
[08:08:38.426] | : . ' , ; ` | : Number of registered futures: 0
[08:08:38.426] | : . ' , ; ` | FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:38.426] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:38.426] | : . ' , ; ` | Index of first available worker: 1
[08:08:38.426] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:38.519] | : . ' , ; ` | : Worker is functional
[08:08:38.519] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:38.519] | : . ' , ; ` | : . Listing all futures
[08:08:38.519] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:38.520] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:38.520] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:38.520] | : . ' , ; ` requestNode() ... done
[08:08:38.520] | : . ' , ; ` cluster node index: 1
[08:08:38.520] | : . ' , ; requestWorker() ... done
[08:08:38.520] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:38.521] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:38.521] | : . ' , ; launchFuture() ...
[08:08:38.521] | : . ' , ; ` cluster node index: 1
[08:08:38.521] | : . ' , ; ` getFutureData() ...
[08:08:38.521] | : . ' , ; ` | getFutureCore() ...
[08:08:38.521] | : . ' , ; ` | : Packages needed by the future expression (n = 1): ‘stats’
[08:08:38.521] | : . ' , ; ` | getFutureCore() ... done
[08:08:38.521] | : . ' , ; ` | getFutureCapture() ...
[08:08:38.522] | : . ' , ; ` | getFutureCapture() ... done
[08:08:38.522] | : . ' , ; ` | getFutureContext() ...
[08:08:38.522] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:38.522] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:38.522] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:38.522] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:38.522] | : . ' , ; ` | getFutureContext() ... done
[08:08:38.522] | : . ' , ; ` getFutureData() ... done
[08:08:38.523] | : . ' , ; ` FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'add', earlySignal = 0) ...
[08:08:38.523] | : . ' , ; ` | Appended future to position #1
[08:08:38.523] | : . ' , ; ` | Number of registered futures: 1
[08:08:38.523] | : . ' , ; ` FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'add', earlySignal = 0) ... done
[08:08:38.523] | : . ' , ; launchFuture() ... done
[08:08:38.523] | : . ' , ; MultisessionFuture started
[08:08:38.523] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:38.523] | : . ' Launching futures ... done
[08:08:38.524] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:38.524] | : . Using MultisessionFutureBackend ... done
[08:08:38.524] | : run() for ‘Future’ (<unnamed-32>) ... done
[08:08:38.524] | future(..., label = NULL) ... done
[08:08:38.524] | value() for MultisessionFuture (<unnamed-32>) ...
[08:08:38.524] | : result() for ClusterFuture ...
[08:08:38.524] | : . assertValidConnection() ...
[08:08:38.524] | : . ' cluster node index: 1
[08:08:38.525] | : . assertValidConnection() ... done
[08:08:38.525] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:38.525] | : . ' cluster node index: 1
[08:08:38.568] | : . ' [1] TRUE
[08:08:38.568] | : . ' received data:
[08:08:38.568] | : . ' List of 5
[08:08:38.568] | : . '  $ type   : chr "VALUE"
[08:08:38.568] | : . '  $ value  :List of 16
[08:08:38.568] | : . '   ..$ value              :List of 13
[08:08:38.568] | : . '   .. ..$ coefficients : Named num [1:2] 5.03 4.66
[08:08:38.568] | : . '   .. .. ..- attr(*, "names")= chr [1:2] "groupCtl" "groupTrt"
[08:08:38.568] | : . '   .. ..$ residuals    : Named num [1:20] -0.862 0.548 0.148 1.078 -0.532 ...
[08:08:38.568] | : . '   .. .. ..- attr(*, "names")= chr [1:20] "1" "2" "3" "4" ...
[08:08:38.568] | : . '   .. ..$ effects      : Named num [1:20] -15.913 -14.739 0.355 1.285 -0.325 ...
[08:08:38.568] | : . '   .. .. ..- attr(*, "names")= chr [1:20] "groupCtl" "groupTrt" "" "" ...
[08:08:38.568] | : . '   .. ..$ rank         : int 2
[08:08:38.568] | : . '   .. ..$ fitted.values: Named num [1:20] 5.03 5.03 5.03 5.03 5.03 ...
[08:08:38.568] | : . '   .. .. ..- attr(*, "names")= chr [1:20] "1" "2" "3" "4" ...
[08:08:38.568] | : . '   .. ..$ assign       : int [1:2] 1 1
[08:08:38.568] | : . '   .. ..$ qr           :List of 5
[08:08:38.568] | : . '   .. .. ..$ qr   : num [1:20, 1:2] -3.162 0.316 0.316 0.316 0.316 ...
[08:08:38.568] | : . '   .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:38.568] | : . '   .. .. .. .. ..$ : chr [1:20] "1" "2" "3" "4" ...
[08:08:38.568] | : . '   .. .. .. .. ..$ : chr [1:2] "groupCtl" "groupTrt"
[08:08:38.568] | : . '   .. .. .. ..- attr(*, "assign")= int [1:2] 1 1
[08:08:38.568] | : . '   .. .. .. ..- attr(*, "contrasts")=List of 1
[08:08:38.568] | : . '   .. .. .. .. ..$ group: chr "contr.treatment"
[08:08:38.568] | : . '   .. .. ..$ qraux: num [1:2] 1.32 1
[08:08:38.568] | : . '   .. .. ..$ pivot: int [1:2] 1 2
[08:08:38.568] | : . '   .. .. ..$ tol  : num 1e-07
[08:08:38.568] | : . '   .. .. ..$ rank : int 2
[08:08:38.568] | : . '   .. .. ..- attr(*, "class")= chr "qr"
[08:08:38.568] | : . '   .. ..$ df.residual  : int 18
[08:08:38.568] | : . '   .. ..$ contrasts    :List of 1
[08:08:38.568] | : . '   .. .. ..$ group: chr "contr.treatment"
[08:08:38.568] | : . '   .. ..$ xlevels      :List of 1
[08:08:38.568] | : . '   .. .. ..$ group: chr [1:2] "Ctl" "Trt"
[08:08:38.568] | : . '   .. ..$ call         : language lm(formula = weight ~ group - 1)
[08:08:38.568] | : . '   .. ..$ terms        :Classes 'terms', 'formula'  language weight ~ group - 1
[08:08:38.568] | : . '   .. .. .. ..- attr(*, "variables")= language list(weight, group)
[08:08:38.568] | : . '   .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:38.568] | : . '   .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:38.568] | : . '   .. .. .. .. .. ..$ : chr [1:2] "weight" "group"
[08:08:38.568] | : . '   .. .. .. .. .. ..$ : chr "group"
[08:08:38.568] | : . '   .. .. .. ..- attr(*, "term.labels")= chr "group"
[08:08:38.568] | : . '   .. .. .. ..- attr(*, "order")= int 1
[08:08:38.568] | : . '   .. .. .. ..- attr(*, "intercept")= int 0
[08:08:38.568] | : . '   .. .. .. ..- attr(*, "response")= int 1
[08:08:38.568] | : . '   .. .. .. ..- attr(*, ".Environment")=<environment: 0x55f94f27c2b0> 
[08:08:38.568] | : . '   .. .. .. ..- attr(*, "predvars")= language list(weight, group)
[08:08:38.568] | : . '   .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "factor"
[08:08:38.568] | : . '   .. .. .. .. ..- attr(*, "names")= chr [1:2] "weight" "group"
[08:08:38.568] | : . '   .. ..$ model        :'data.frame':	20 obs. of  2 variables:
[08:08:38.568] | : . '   .. .. ..$ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[08:08:38.568] | : . '   .. .. ..$ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[08:08:38.568] | : . '   .. .. ..- attr(*, "terms")=Classes 'terms', 'formula'  language weight ~ group - 1
[08:08:38.568] | : . '   .. .. .. .. ..- attr(*, "variables")= language list(weight, group)
[08:08:38.568] | : . '   .. .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:38.568] | : . '   .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:38.568] | : . '   .. .. .. .. .. .. ..$ : chr [1:2] "weight" "group"
[08:08:38.568] | : . '   .. .. .. .. .. .. ..$ : chr "group"
[08:08:38.568] | : . '   .. .. .. .. ..- attr(*, "term.labels")= chr "group"
[08:08:38.568] | : . '   .. .. .. .. ..- attr(*, "order")= int 1
[08:08:38.568] | : . '   .. .. .. .. ..- attr(*, "intercept")= int 0
[08:08:38.568] | : . '   .. .. .. .. ..- attr(*, "response")= int 1
[08:08:38.568] | : . '   .. .. .. .. ..- attr(*, ".Environment")=<environment: 0x55f94f27c2b0> 
[08:08:38.568] | : . '   .. .. .. .. ..- attr(*, "predvars")= language list(weight, group)
[08:08:38.568] | : . '   .. .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "factor"
[08:08:38.568] | : . '   .. .. .. .. .. ..- attr(*, "names")= chr [1:2] "weight" "group"
[08:08:38.568] | : . '   .. ..- attr(*, "class")= chr "lm"
[08:08:38.568] | : . '   ..$ visible            : logi TRUE
[08:08:38.568] | : . '   ..$ stdout             : chr ""
[08:08:38.568] | : . '   ..$ conditions         : list()
[08:08:38.568] | : . '   ..$ rng                : logi FALSE
[08:08:38.568] | : . '   ..$ seed               : NULL
[08:08:38.568] | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:38.568] | : . '   ..$ misuseConnections  :List of 3
[08:08:38.568] | : . '   .. ..$ added   : NULL
[08:08:38.568] | : . '   .. ..$ removed : NULL
[08:08:38.568] | : . '   .. ..$ replaced: NULL
[08:08:38.568] | : . '   ..$ misuseDevices      : NULL
[08:08:38.568] | : . '   ..$ misuseDefaultDevice: list()
[08:08:38.568] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:38"
[08:08:38.568] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:38"
[08:08:38.568] | : . '   ..$ uuid               : chr [1:2] "98952eeb2580387bd4c4db2d30fd2531" "32"
[08:08:38.568] | : . '   ..$ session_uuid       : chr "f21ee30ff69e2e385c3cea002926a2be"
[08:08:38.568] | : . '   .. ..- attr(*, "source")=List of 5
[08:08:38.568] | : . '   .. .. ..$ host  : Named chr "285a5f234941"
[08:08:38.568] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:38.568] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:08:38.568] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:38.568] | : . '   .. .. ..$ pid   : int 69397
[08:08:38.568] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:37"
[08:08:38.568] | : . '   .. .. ..$ random: int 2147483647
[08:08:38.568] | : . '   ..$ r_info             :List of 4
[08:08:38.568] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:38.568] | : . '   .. .. ..$ : int [1:3] 4 5 0
[08:08:38.568] | : . '   .. ..$ os           : chr "unix"
[08:08:38.568] | : . '   .. ..$ os_name      : chr "Linux"
[08:08:38.568] | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:38.568] | : . '   ..$ version            : chr "1.8"
[08:08:38.568] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:38.568] | : . '  $ success: logi TRUE
[08:08:38.568] | : . '  $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[08:08:38.568] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:38.568] | : . '  $ tag    : NULL
[08:08:38.597] | : . ' Received FutureResult
[08:08:38.597] | : . ' FutureResult:
[08:08:38.597] | : . ' value: ‘lm’
[08:08:38.597] | : . ' visible: TRUE
[08:08:38.597] | : . ' stdout: character
[08:08:38.597] | : . ' conditions: [n = 0] 
[08:08:38.597] | : . ' RNG used: FALSE
[08:08:38.597] | : . ' duration: 0.003491879 secs (started 2025-06-17 08:08:38.564233)
[08:08:38.597] | : . ' version: 1.8
[08:08:38.598] | : . ' FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'remove', earlySignal = 0) ...
[08:08:38.598] | : . ' , Removed future from position #1
[08:08:38.598] | : . ' , Number of registered futures: 0
[08:08:38.598] | : . ' FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'remove', earlySignal = 0) ... done
[08:08:38.600] | : . ' Erased future from future backend
[08:08:38.600] | : . ' result() for ClusterFuture ...
[08:08:38.600] | : . ' , result already collected: FutureResult
[08:08:38.600] | : . ' result() for ClusterFuture ... done
[08:08:38.600] | : . ' signalConditions() ...
[08:08:38.600] | : . ' , include = ‘immediateCondition’
[08:08:38.600] | : . ' , exclude = 
[08:08:38.600] | : . ' , resignal = FALSE
[08:08:38.601] | : . ' , Number of conditions: 0
[08:08:38.601] | : . ' ,  int 0
[08:08:38.601] | : . ' signalConditions() ... done
[08:08:38.601] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:38.601] | : result() for ClusterFuture ... done
[08:08:38.601] | : result() for ClusterFuture ...
[08:08:38.601] | : . result already collected: FutureResult
[08:08:38.602] | : result() for ClusterFuture ... done
[08:08:38.602] | : signalConditions() ...
[08:08:38.602] | : . include = ‘immediateCondition’
[08:08:38.602] | : . exclude = 
[08:08:38.602] | : . resignal = FALSE
[08:08:38.602] | : . Number of conditions: 0
[08:08:38.602] | : .  int 0
[08:08:38.602] | : signalConditions() ... done
[08:08:38.603] | : relay stdout ...
[08:08:38.603] | : relay stdout ... done
[08:08:38.603] | : check for misuse ...
[08:08:38.603] | : check for misuse ... done
[08:08:38.603] | value() for MultisessionFuture (<unnamed-32>) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[08:08:38.605] | future(..., label = NULL) ...
[08:08:38.605] | : lazy: TRUE
[08:08:38.605] | : stdout: TRUE
[08:08:38.605] | : conditions: [n=1] ‘condition’
[08:08:38.605] | : gc: FALSE
[08:08:38.605] | : earlySignal: FALSE
[08:08:38.605] | : getGlobalsAndPackages() ...
[08:08:38.605] | : . Searching for globals ...
[08:08:38.617] | : . ' globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[08:08:38.617] | : . Searching for globals ... done
[08:08:38.617] | : . Resolving globals: FALSE
[08:08:38.617] | : . Search for packages associated with the globals ...
[08:08:38.617] | : . ' Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:38.618] | : . ' Packages: [2] ‘base’, ‘stats’
[08:08:38.618] | : . Search for packages associated with the globals ... done
[08:08:38.618] | : . Packages after dropping 'base': [1] ‘stats’
[08:08:38.618] | : . Packages after dropping non-attached packages: [1] ‘stats’
[08:08:38.618] | : . globals: [2] ‘weight’, ‘group’
[08:08:38.618] | : . packages: [1] ‘stats’
[08:08:38.618] | : getGlobalsAndPackages() ... done
[08:08:38.619] | future(..., label = NULL) ... done
[08:08:38.619] | value() for Future (<unnamed-33>) ...
[08:08:38.619] | : run() for ‘Future’ (<unnamed-33>) ...
[08:08:38.619] | : . state: ‘created’
[08:08:38.619] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:38.619] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:38.619] | : . Using MultisessionFutureBackend ...
[08:08:38.619] | : . ' Number of futures since start: 4 (4 created, 4 launched, 4 finished)
[08:08:38.620] | : . ' Launching futures ...
[08:08:38.620] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:38.620] | : . ' , ; Workers: [n=2]
[08:08:38.620] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:08:38.621] | : . ' , ; FutureRegistry: ‘workers-623664460e19df44562b7fe4cf996cb6’
[08:08:38.622] | : . ' , ; requestWorker() ...
[08:08:38.622] | : . ' , ; ` requestNode() ...
[08:08:38.622] | : . ' , ; ` | Number of workers: 2
[08:08:38.622] | : . ' , ; ` | Polling for a free worker ...
[08:08:38.622] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:38.622] | : . ' , ; ` | : . Listing all futures
[08:08:38.622] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:38.622] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:38.622] | : . ' , ; ` | : Total time: 0
[08:08:38.622] | : . ' , ; ` | Polling for a free worker ... done
[08:08:38.623] | : . ' , ; ` | FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:38.623] | : . ' , ; ` | : Listing all futures
[08:08:38.623] | : . ' , ; ` | : Number of registered futures: 0
[08:08:38.623] | : . ' , ; ` | FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:38.623] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:38.623] | : . ' , ; ` | Index of first available worker: 1
[08:08:38.623] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:38.715] | : . ' , ; ` | : Worker is functional
[08:08:38.715] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:38.715] | : . ' , ; ` | : . Listing all futures
[08:08:38.715] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:38.716] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:38.716] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:38.716] | : . ' , ; ` requestNode() ... done
[08:08:38.716] | : . ' , ; ` cluster node index: 1
[08:08:38.716] | : . ' , ; requestWorker() ... done
[08:08:38.716] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:38.716] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:38.717] | : . ' , ; launchFuture() ...
[08:08:38.717] | : . ' , ; ` cluster node index: 1
[08:08:38.717] | : . ' , ; ` getFutureData() ...
[08:08:38.717] | : . ' , ; ` | getFutureCore() ...
[08:08:38.717] | : . ' , ; ` | : Packages needed by the future expression (n = 1): ‘stats’
[08:08:38.717] | : . ' , ; ` | getFutureCore() ... done
[08:08:38.717] | : . ' , ; ` | getFutureCapture() ...
[08:08:38.717] | : . ' , ; ` | getFutureCapture() ... done
[08:08:38.717] | : . ' , ; ` | getFutureContext() ...
[08:08:38.718] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:38.718] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:38.718] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:38.718] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:38.718] | : . ' , ; ` | getFutureContext() ... done
[08:08:38.718] | : . ' , ; ` getFutureData() ... done
[08:08:38.719] | : . ' , ; ` FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'add', earlySignal = 0) ...
[08:08:38.719] | : . ' , ; ` | Appended future to position #1
[08:08:38.719] | : . ' , ; ` | Number of registered futures: 1
[08:08:38.719] | : . ' , ; ` FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'add', earlySignal = 0) ... done
[08:08:38.719] | : . ' , ; launchFuture() ... done
[08:08:38.719] | : . ' , ; MultisessionFuture started
[08:08:38.719] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:38.719] | : . ' Launching futures ... done
[08:08:38.719] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:38.720] | : . Using MultisessionFutureBackend ... done
[08:08:38.720] | : run() for ‘Future’ (<unnamed-33>) ... done
[08:08:38.720] | : result() for ClusterFuture ...
[08:08:38.720] | : . assertValidConnection() ...
[08:08:38.720] | : . ' cluster node index: 1
[08:08:38.720] | : . assertValidConnection() ... done
[08:08:38.720] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:38.721] | : . ' cluster node index: 1
[08:08:38.763] | : . ' [1] TRUE
[08:08:38.763] | : . ' received data:
[08:08:38.763] | : . ' List of 5
[08:08:38.763] | : . '  $ type   : chr "VALUE"
[08:08:38.763] | : . '  $ value  :List of 16
[08:08:38.763] | : . '   ..$ value              :List of 13
[08:08:38.763] | : . '   .. ..$ coefficients : Named num [1:2] 5.03 4.66
[08:08:38.763] | : . '   .. .. ..- attr(*, "names")= chr [1:2] "groupCtl" "groupTrt"
[08:08:38.763] | : . '   .. ..$ residuals    : Named num [1:20] -0.862 0.548 0.148 1.078 -0.532 ...
[08:08:38.763] | : . '   .. .. ..- attr(*, "names")= chr [1:20] "1" "2" "3" "4" ...
[08:08:38.763] | : . '   .. ..$ effects      : Named num [1:20] -15.913 -14.739 0.355 1.285 -0.325 ...
[08:08:38.763] | : . '   .. .. ..- attr(*, "names")= chr [1:20] "groupCtl" "groupTrt" "" "" ...
[08:08:38.763] | : . '   .. ..$ rank         : int 2
[08:08:38.763] | : . '   .. ..$ fitted.values: Named num [1:20] 5.03 5.03 5.03 5.03 5.03 ...
[08:08:38.763] | : . '   .. .. ..- attr(*, "names")= chr [1:20] "1" "2" "3" "4" ...
[08:08:38.763] | : . '   .. ..$ assign       : int [1:2] 1 1
[08:08:38.763] | : . '   .. ..$ qr           :List of 5
[08:08:38.763] | : . '   .. .. ..$ qr   : num [1:20, 1:2] -3.162 0.316 0.316 0.316 0.316 ...
[08:08:38.763] | : . '   .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:38.763] | : . '   .. .. .. .. ..$ : chr [1:20] "1" "2" "3" "4" ...
[08:08:38.763] | : . '   .. .. .. .. ..$ : chr [1:2] "groupCtl" "groupTrt"
[08:08:38.763] | : . '   .. .. .. ..- attr(*, "assign")= int [1:2] 1 1
[08:08:38.763] | : . '   .. .. .. ..- attr(*, "contrasts")=List of 1
[08:08:38.763] | : . '   .. .. .. .. ..$ group: chr "contr.treatment"
[08:08:38.763] | : . '   .. .. ..$ qraux: num [1:2] 1.32 1
[08:08:38.763] | : . '   .. .. ..$ pivot: int [1:2] 1 2
[08:08:38.763] | : . '   .. .. ..$ tol  : num 1e-07
[08:08:38.763] | : . '   .. .. ..$ rank : int 2
[08:08:38.763] | : . '   .. .. ..- attr(*, "class")= chr "qr"
[08:08:38.763] | : . '   .. ..$ df.residual  : int 18
[08:08:38.763] | : . '   .. ..$ contrasts    :List of 1
[08:08:38.763] | : . '   .. .. ..$ group: chr "contr.treatment"
[08:08:38.763] | : . '   .. ..$ xlevels      :List of 1
[08:08:38.763] | : . '   .. .. ..$ group: chr [1:2] "Ctl" "Trt"
[08:08:38.763] | : . '   .. ..$ call         : language lm(formula = weight ~ group - 1)
[08:08:38.763] | : . '   .. ..$ terms        :Classes 'terms', 'formula'  language weight ~ group - 1
[08:08:38.763] | : . '   .. .. .. ..- attr(*, "variables")= language list(weight, group)
[08:08:38.763] | : . '   .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:38.763] | : . '   .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:38.763] | : . '   .. .. .. .. .. ..$ : chr [1:2] "weight" "group"
[08:08:38.763] | : . '   .. .. .. .. .. ..$ : chr "group"
[08:08:38.763] | : . '   .. .. .. ..- attr(*, "term.labels")= chr "group"
[08:08:38.763] | : . '   .. .. .. ..- attr(*, "order")= int 1
[08:08:38.763] | : . '   .. .. .. ..- attr(*, "intercept")= int 0
[08:08:38.763] | : . '   .. .. .. ..- attr(*, "response")= int 1
[08:08:38.763] | : . '   .. .. .. ..- attr(*, ".Environment")=<environment: 0x55f94f306c80> 
[08:08:38.763] | : . '   .. .. .. ..- attr(*, "predvars")= language list(weight, group)
[08:08:38.763] | : . '   .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "factor"
[08:08:38.763] | : . '   .. .. .. .. ..- attr(*, "names")= chr [1:2] "weight" "group"
[08:08:38.763] | : . '   .. ..$ model        :'data.frame':	20 obs. of  2 variables:
[08:08:38.763] | : . '   .. .. ..$ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[08:08:38.763] | : . '   .. .. ..$ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[08:08:38.763] | : . '   .. .. ..- attr(*, "terms")=Classes 'terms', 'formula'  language weight ~ group - 1
[08:08:38.763] | : . '   .. .. .. .. ..- attr(*, "variables")= language list(weight, group)
[08:08:38.763] | : . '   .. .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:38.763] | : . '   .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:38.763] | : . '   .. .. .. .. .. .. ..$ : chr [1:2] "weight" "group"
[08:08:38.763] | : . '   .. .. .. .. .. .. ..$ : chr "group"
[08:08:38.763] | : . '   .. .. .. .. ..- attr(*, "term.labels")= chr "group"
[08:08:38.763] | : . '   .. .. .. .. ..- attr(*, "order")= int 1
[08:08:38.763] | : . '   .. .. .. .. ..- attr(*, "intercept")= int 0
[08:08:38.763] | : . '   .. .. .. .. ..- attr(*, "response")= int 1
[08:08:38.763] | : . '   .. .. .. .. ..- attr(*, ".Environment")=<environment: 0x55f94f306c80> 
[08:08:38.763] | : . '   .. .. .. .. ..- attr(*, "predvars")= language list(weight, group)
[08:08:38.763] | : . '   .. .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "factor"
[08:08:38.763] | : . '   .. .. .. .. .. ..- attr(*, "names")= chr [1:2] "weight" "group"
[08:08:38.763] | : . '   .. ..- attr(*, "class")= chr "lm"
[08:08:38.763] | : . '   ..$ visible            : logi TRUE
[08:08:38.763] | : . '   ..$ stdout             : chr ""
[08:08:38.763] | : . '   ..$ conditions         : list()
[08:08:38.763] | : . '   ..$ rng                : logi FALSE
[08:08:38.763] | : . '   ..$ seed               : NULL
[08:08:38.763] | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:38.763] | : . '   ..$ misuseConnections  :List of 3
[08:08:38.763] | : . '   .. ..$ added   : NULL
[08:08:38.763] | : . '   .. ..$ removed : NULL
[08:08:38.763] | : . '   .. ..$ replaced: NULL
[08:08:38.763] | : . '   ..$ misuseDevices      : NULL
[08:08:38.763] | : . '   ..$ misuseDefaultDevice: list()
[08:08:38.763] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:38"
[08:08:38.763] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:38"
[08:08:38.763] | : . '   ..$ uuid               : chr [1:2] "98952eeb2580387bd4c4db2d30fd2531" "33"
[08:08:38.763] | : . '   ..$ session_uuid       : chr "f21ee30ff69e2e385c3cea002926a2be"
[08:08:38.763] | : . '   .. ..- attr(*, "source")=List of 5
[08:08:38.763] | : . '   .. .. ..$ host  : Named chr "285a5f234941"
[08:08:38.763] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:38.763] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:08:38.763] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:38.763] | : . '   .. .. ..$ pid   : int 69397
[08:08:38.763] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:37"
[08:08:38.763] | : . '   .. .. ..$ random: int 2147483647
[08:08:38.763] | : . '   ..$ r_info             :List of 4
[08:08:38.763] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:38.763] | : . '   .. .. ..$ : int [1:3] 4 5 0
[08:08:38.763] | : . '   .. ..$ os           : chr "unix"
[08:08:38.763] | : . '   .. ..$ os_name      : chr "Linux"
[08:08:38.763] | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:38.763] | : . '   ..$ version            : chr "1.8"
[08:08:38.763] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:38.763] | : . '  $ success: logi TRUE
[08:08:38.763] | : . '  $ time   : 'proc_time' Named num [1:5] 0.003 0.001 0.004 0 0
[08:08:38.763] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:38.763] | : . '  $ tag    : NULL
[08:08:38.792] | : . ' Received FutureResult
[08:08:38.792] | : . ' FutureResult:
[08:08:38.792] | : . ' value: ‘lm’
[08:08:38.792] | : . ' visible: TRUE
[08:08:38.792] | : . ' stdout: character
[08:08:38.792] | : . ' conditions: [n = 0] 
[08:08:38.792] | : . ' RNG used: FALSE
[08:08:38.792] | : . ' duration: 0.00344491 secs (started 2025-06-17 08:08:38.759225)
[08:08:38.792] | : . ' version: 1.8
[08:08:38.792] | : . ' FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'remove', earlySignal = 0) ...
[08:08:38.793] | : . ' , Removed future from position #1
[08:08:38.793] | : . ' , Number of registered futures: 0
[08:08:38.793] | : . ' FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'remove', earlySignal = 0) ... done
[08:08:38.793] | : . ' Erased future from future backend
[08:08:38.793] | : . ' result() for ClusterFuture ...
[08:08:38.793] | : . ' , result already collected: FutureResult
[08:08:38.793] | : . ' result() for ClusterFuture ... done
[08:08:38.793] | : . ' signalConditions() ...
[08:08:38.793] | : . ' , include = ‘immediateCondition’
[08:08:38.794] | : . ' , exclude = 
[08:08:38.794] | : . ' , resignal = FALSE
[08:08:38.794] | : . ' , Number of conditions: 0
[08:08:38.794] | : . ' ,  int 0
[08:08:38.796] | : . ' signalConditions() ... done
[08:08:38.796] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:38.796] | : result() for ClusterFuture ... done
[08:08:38.796] | : result() for ClusterFuture ...
[08:08:38.796] | : . result already collected: FutureResult
[08:08:38.796] | : result() for ClusterFuture ... done
[08:08:38.797] | : signalConditions() ...
[08:08:38.797] | : . include = ‘immediateCondition’
[08:08:38.797] | : . exclude = 
[08:08:38.797] | : . resignal = FALSE
[08:08:38.797] | : . Number of conditions: 0
[08:08:38.797] | : .  int 0
[08:08:38.797] | : signalConditions() ... done
[08:08:38.798] | : relay stdout ...
[08:08:38.798] | : relay stdout ... done
[08:08:38.798] | : check for misuse ...
[08:08:38.798] | : check for misuse ... done
[08:08:38.798] | value() for Future (<unnamed-33>) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

- Globals - one-side formulas, e.g. xtabs(~ x) ...
[08:08:38.799] | future(..., label = NULL) ...
[08:08:38.800] | : lazy: FALSE
[08:08:38.800] | : stdout: TRUE
[08:08:38.800] | : conditions: [n=1] ‘condition’
[08:08:38.800] | : gc: FALSE
[08:08:38.800] | : earlySignal: FALSE
[08:08:38.800] | : getGlobalsAndPackages() ...
[08:08:38.800] | : . Searching for globals ...
[08:08:38.808] | : . ' globals found: [4] ‘{’, ‘xtabs’, ‘x’, ‘~’
[08:08:38.808] | : . Searching for globals ... done
[08:08:38.808] | : . Resolving globals: FALSE
[08:08:38.808] | : . Search for packages associated with the globals ...
[08:08:38.808] | : . ' Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:38.809] | : . ' Packages: [2] ‘base’, ‘stats’
[08:08:38.809] | : . Search for packages associated with the globals ... done
[08:08:38.809] | : . Packages after dropping 'base': [1] ‘stats’
[08:08:38.809] | : . Packages after dropping non-attached packages: [1] ‘stats’
[08:08:38.809] | : . globals: [1] ‘x’
[08:08:38.809] | : . packages: [1] ‘stats’
[08:08:38.809] | : getGlobalsAndPackages() ... done
[08:08:38.810] | : run() for ‘Future’ (<unnamed-34>) ...
[08:08:38.810] | : . state: ‘created’
[08:08:38.810] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:38.810] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:38.810] | : . Using MultisessionFutureBackend ...
[08:08:38.810] | : . ' Number of futures since start: 5 (5 created, 5 launched, 5 finished)
[08:08:38.810] | : . ' Launching futures ...
[08:08:38.810] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:38.810] | : . ' , ; Workers: [n=2]
[08:08:38.811] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:08:38.812] | : . ' , ; FutureRegistry: ‘workers-623664460e19df44562b7fe4cf996cb6’
[08:08:38.812] | : . ' , ; requestWorker() ...
[08:08:38.812] | : . ' , ; ` requestNode() ...
[08:08:38.812] | : . ' , ; ` | Number of workers: 2
[08:08:38.812] | : . ' , ; ` | Polling for a free worker ...
[08:08:38.813] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:38.813] | : . ' , ; ` | : . Listing all futures
[08:08:38.813] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:38.813] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:38.813] | : . ' , ; ` | : Total time: 0
[08:08:38.813] | : . ' , ; ` | Polling for a free worker ... done
[08:08:38.813] | : . ' , ; ` | FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:38.813] | : . ' , ; ` | : Listing all futures
[08:08:38.813] | : . ' , ; ` | : Number of registered futures: 0
[08:08:38.813] | : . ' , ; ` | FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:38.814] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:38.814] | : . ' , ; ` | Index of first available worker: 1
[08:08:38.814] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:38.906] | : . ' , ; ` | : Worker is functional
[08:08:38.907] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:38.907] | : . ' , ; ` | : . Listing all futures
[08:08:38.907] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:38.907] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:38.907] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:38.907] | : . ' , ; ` requestNode() ... done
[08:08:38.907] | : . ' , ; ` cluster node index: 1
[08:08:38.908] | : . ' , ; requestWorker() ... done
[08:08:38.908] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:38.908] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:38.908] | : . ' , ; launchFuture() ...
[08:08:38.908] | : . ' , ; ` cluster node index: 1
[08:08:38.908] | : . ' , ; ` getFutureData() ...
[08:08:38.908] | : . ' , ; ` | getFutureCore() ...
[08:08:38.909] | : . ' , ; ` | : Packages needed by the future expression (n = 1): ‘stats’
[08:08:38.909] | : . ' , ; ` | getFutureCore() ... done
[08:08:38.909] | : . ' , ; ` | getFutureCapture() ...
[08:08:38.909] | : . ' , ; ` | getFutureCapture() ... done
[08:08:38.909] | : . ' , ; ` | getFutureContext() ...
[08:08:38.909] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:38.909] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:38.909] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:38.909] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:38.910] | : . ' , ; ` | getFutureContext() ... done
[08:08:38.910] | : . ' , ; ` getFutureData() ... done
[08:08:38.910] | : . ' , ; ` FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'add', earlySignal = 0) ...
[08:08:38.910] | : . ' , ; ` | Appended future to position #1
[08:08:38.910] | : . ' , ; ` | Number of registered futures: 1
[08:08:38.910] | : . ' , ; ` FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'add', earlySignal = 0) ... done
[08:08:38.910] | : . ' , ; launchFuture() ... done
[08:08:38.911] | : . ' , ; MultisessionFuture started
[08:08:38.911] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:38.911] | : . ' Launching futures ... done
[08:08:38.911] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:38.911] | : . Using MultisessionFutureBackend ... done
[08:08:38.911] | : run() for ‘Future’ (<unnamed-34>) ... done
[08:08:38.911] | future(..., label = NULL) ... done
[08:08:38.911] | value() for MultisessionFuture (<unnamed-34>) ...
[08:08:38.911] | : result() for ClusterFuture ...
[08:08:38.912] | : . assertValidConnection() ...
[08:08:38.912] | : . ' cluster node index: 1
[08:08:38.912] | : . assertValidConnection() ... done
[08:08:38.912] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:38.912] | : . ' cluster node index: 1
[08:08:38.955] | : . ' [1] TRUE
[08:08:38.955] | : . ' received data:
[08:08:38.955] | : . ' List of 5
[08:08:38.955] | : . '  $ type   : chr "VALUE"
[08:08:38.955] | : . '  $ value  :List of 16
[08:08:38.955] | : . '   ..$ value              : 'xtabs' int [1:2(1d)] 2 3
[08:08:38.955] | : . '   .. ..- attr(*, "dimnames")=List of 1
[08:08:38.955] | : . '   .. .. ..$ x: chr [1:2] "1" "2"
[08:08:38.955] | : . '   .. ..- attr(*, "call")= language xtabs(formula = ~x)
[08:08:38.955] | : . '   ..$ visible            : logi TRUE
[08:08:38.955] | : . '   ..$ stdout             : chr ""
[08:08:38.955] | : . '   ..$ conditions         : list()
[08:08:38.955] | : . '   ..$ rng                : logi FALSE
[08:08:38.955] | : . '   ..$ seed               : NULL
[08:08:38.955] | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:38.955] | : . '   ..$ misuseConnections  :List of 3
[08:08:38.955] | : . '   .. ..$ added   : NULL
[08:08:38.955] | : . '   .. ..$ removed : NULL
[08:08:38.955] | : . '   .. ..$ replaced: NULL
[08:08:38.955] | : . '   ..$ misuseDevices      : NULL
[08:08:38.955] | : . '   ..$ misuseDefaultDevice: list()
[08:08:38.955] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:38"
[08:08:38.955] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:38"
[08:08:38.955] | : . '   ..$ uuid               : chr [1:2] "98952eeb2580387bd4c4db2d30fd2531" "34"
[08:08:38.955] | : . '   ..$ session_uuid       : chr "f21ee30ff69e2e385c3cea002926a2be"
[08:08:38.955] | : . '   .. ..- attr(*, "source")=List of 5
[08:08:38.955] | : . '   .. .. ..$ host  : Named chr "285a5f234941"
[08:08:38.955] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:38.955] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:08:38.955] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:38.955] | : . '   .. .. ..$ pid   : int 69397
[08:08:38.955] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:37"
[08:08:38.955] | : . '   .. .. ..$ random: int 2147483647
[08:08:38.955] | : . '   ..$ r_info             :List of 4
[08:08:38.955] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:38.955] | : . '   .. .. ..$ : int [1:3] 4 5 0
[08:08:38.955] | : . '   .. ..$ os           : chr "unix"
[08:08:38.955] | : . '   .. ..$ os_name      : chr "Linux"
[08:08:38.955] | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:38.955] | : . '   ..$ version            : chr "1.8"
[08:08:38.955] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:38.955] | : . '  $ success: logi TRUE
[08:08:38.955] | : . '  $ time   : 'proc_time' Named num [1:5] 0.003 0 0.004 0 0
[08:08:38.955] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:38.955] | : . '  $ tag    : NULL
[08:08:38.967] | : . ' Received FutureResult
[08:08:38.967] | : . ' FutureResult:
[08:08:38.967] | : . ' value: ‘xtabs’, ‘table’
[08:08:38.967] | : . ' visible: TRUE
[08:08:38.967] | : . ' stdout: character
[08:08:38.967] | : . ' conditions: [n = 0] 
[08:08:38.967] | : . ' RNG used: FALSE
[08:08:38.967] | : . ' duration: 0.003538847 secs (started 2025-06-17 08:08:38.951281)
[08:08:38.967] | : . ' version: 1.8
[08:08:38.968] | : . ' FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'remove', earlySignal = 0) ...
[08:08:38.968] | : . ' , Removed future from position #1
[08:08:38.968] | : . ' , Number of registered futures: 0
[08:08:38.968] | : . ' FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'remove', earlySignal = 0) ... done
[08:08:38.968] | : . ' Erased future from future backend
[08:08:38.968] | : . ' result() for ClusterFuture ...
[08:08:38.968] | : . ' , result already collected: FutureResult
[08:08:38.969] | : . ' result() for ClusterFuture ... done
[08:08:38.969] | : . ' signalConditions() ...
[08:08:38.969] | : . ' , include = ‘immediateCondition’
[08:08:38.969] | : . ' , exclude = 
[08:08:38.969] | : . ' , resignal = FALSE
[08:08:38.969] | : . ' , Number of conditions: 0
[08:08:38.969] | : . ' ,  int 0
[08:08:38.969] | : . ' signalConditions() ... done
[08:08:38.970] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:38.970] | : result() for ClusterFuture ... done
[08:08:38.970] | : result() for ClusterFuture ...
[08:08:38.970] | : . result already collected: FutureResult
[08:08:38.970] | : result() for ClusterFuture ... done
[08:08:38.970] | : signalConditions() ...
[08:08:38.970] | : . include = ‘immediateCondition’
[08:08:38.970] | : . exclude = 
[08:08:38.970] | : . resignal = FALSE
[08:08:38.970] | : . Number of conditions: 0
[08:08:38.971] | : .  int 0
[08:08:38.971] | : signalConditions() ... done
[08:08:38.971] | : relay stdout ...
[08:08:38.971] | : relay stdout ... done
[08:08:38.971] | : check for misuse ...
[08:08:38.971] | : check for misuse ... done
[08:08:38.972] | value() for MultisessionFuture (<unnamed-34>) ... done
x
1 2 
2 3 
[08:08:38.972] | future(..., label = NULL) ...
[08:08:38.972] | : lazy: FALSE
[08:08:38.972] | : stdout: TRUE
[08:08:38.972] | : conditions: [n=1] ‘condition’
[08:08:38.973] | : gc: FALSE
[08:08:38.973] | : earlySignal: FALSE
[08:08:38.973] | : getGlobalsAndPackages() ...
[08:08:38.973] | : . Searching for globals ...
[08:08:38.980] | : . ' globals found: [4] ‘{’, ‘xtabs’, ‘x’, ‘~’
[08:08:38.981] | : . Searching for globals ... done
[08:08:38.981] | : . Resolving globals: FALSE
[08:08:38.981] | : . Search for packages associated with the globals ...
[08:08:38.981] | : . ' Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:38.981] | : . ' Packages: [2] ‘base’, ‘stats’
[08:08:38.981] | : . Search for packages associated with the globals ... done
[08:08:38.982] | : . Packages after dropping 'base': [1] ‘stats’
[08:08:38.982] | : . Packages after dropping non-attached packages: [1] ‘stats’
[08:08:38.982] | : . globals: [1] ‘x’
[08:08:38.982] | : . packages: [1] ‘stats’
[08:08:38.982] | : getGlobalsAndPackages() ... done
[08:08:38.982] | : run() for ‘Future’ (<unnamed-35>) ...
[08:08:38.982] | : . state: ‘created’
[08:08:38.983] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:38.983] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:38.983] | : . Using MultisessionFutureBackend ...
[08:08:38.983] | : . ' Number of futures since start: 6 (6 created, 6 launched, 6 finished)
[08:08:38.983] | : . ' Launching futures ...
[08:08:38.983] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:38.983] | : . ' , ; Workers: [n=2]
[08:08:38.983] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:08:38.985] | : . ' , ; FutureRegistry: ‘workers-623664460e19df44562b7fe4cf996cb6’
[08:08:38.985] | : . ' , ; requestWorker() ...
[08:08:38.985] | : . ' , ; ` requestNode() ...
[08:08:38.985] | : . ' , ; ` | Number of workers: 2
[08:08:38.985] | : . ' , ; ` | Polling for a free worker ...
[08:08:38.985] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:38.986] | : . ' , ; ` | : . Listing all futures
[08:08:38.986] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:38.986] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:38.986] | : . ' , ; ` | : Total time: 0
[08:08:38.986] | : . ' , ; ` | Polling for a free worker ... done
[08:08:38.986] | : . ' , ; ` | FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:38.986] | : . ' , ; ` | : Listing all futures
[08:08:38.986] | : . ' , ; ` | : Number of registered futures: 0
[08:08:38.986] | : . ' , ; ` | FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:38.986] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:38.987] | : . ' , ; ` | Index of first available worker: 1
[08:08:38.987] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:39.050] | : . ' , ; ` | : Worker is functional
[08:08:39.050] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:39.051] | : . ' , ; ` | : . Listing all futures
[08:08:39.051] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:39.051] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:39.051] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:39.051] | : . ' , ; ` requestNode() ... done
[08:08:39.051] | : . ' , ; ` cluster node index: 1
[08:08:39.051] | : . ' , ; requestWorker() ... done
[08:08:39.051] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:39.052] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:39.052] | : . ' , ; launchFuture() ...
[08:08:39.052] | : . ' , ; ` cluster node index: 1
[08:08:39.052] | : . ' , ; ` getFutureData() ...
[08:08:39.052] | : . ' , ; ` | getFutureCore() ...
[08:08:39.052] | : . ' , ; ` | : Packages needed by the future expression (n = 1): ‘stats’
[08:08:39.052] | : . ' , ; ` | getFutureCore() ... done
[08:08:39.052] | : . ' , ; ` | getFutureCapture() ...
[08:08:39.052] | : . ' , ; ` | getFutureCapture() ... done
[08:08:39.053] | : . ' , ; ` | getFutureContext() ...
[08:08:39.053] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:39.053] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:39.053] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:39.053] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:39.053] | : . ' , ; ` | getFutureContext() ... done
[08:08:39.053] | : . ' , ; ` getFutureData() ... done
[08:08:39.054] | : . ' , ; ` FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'add', earlySignal = 0) ...
[08:08:39.054] | : . ' , ; ` | Appended future to position #1
[08:08:39.054] | : . ' , ; ` | Number of registered futures: 1
[08:08:39.054] | : . ' , ; ` FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'add', earlySignal = 0) ... done
[08:08:39.054] | : . ' , ; launchFuture() ... done
[08:08:39.054] | : . ' , ; MultisessionFuture started
[08:08:39.054] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:39.054] | : . ' Launching futures ... done
[08:08:39.054] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:39.055] | : . Using MultisessionFutureBackend ... done
[08:08:39.055] | : run() for ‘Future’ (<unnamed-35>) ... done
[08:08:39.055] | future(..., label = NULL) ... done
[08:08:39.055] | value() for MultisessionFuture (<unnamed-35>) ...
[08:08:39.055] | : result() for ClusterFuture ...
[08:08:39.055] | : . assertValidConnection() ...
[08:08:39.055] | : . ' cluster node index: 1
[08:08:39.056] | : . assertValidConnection() ... done
[08:08:39.056] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:39.056] | : . ' cluster node index: 1
[08:08:39.098] | : . ' [1] TRUE
[08:08:39.099] | : . ' received data:
[08:08:39.099] | : . ' List of 5
[08:08:39.099] | : . '  $ type   : chr "VALUE"
[08:08:39.099] | : . '  $ value  :List of 16
[08:08:39.099] | : . '   ..$ value              : 'xtabs' int [1:2(1d)] 2 3
[08:08:39.099] | : . '   .. ..- attr(*, "dimnames")=List of 1
[08:08:39.099] | : . '   .. .. ..$ x: chr [1:2] "1" "2"
[08:08:39.099] | : . '   .. ..- attr(*, "call")= language xtabs(formula = ~x)
[08:08:39.099] | : . '   ..$ visible            : logi TRUE
[08:08:39.099] | : . '   ..$ stdout             : chr ""
[08:08:39.099] | : . '   ..$ conditions         : list()
[08:08:39.099] | : . '   ..$ rng                : logi FALSE
[08:08:39.099] | : . '   ..$ seed               : NULL
[08:08:39.099] | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:39.099] | : . '   ..$ misuseConnections  :List of 3
[08:08:39.099] | : . '   .. ..$ added   : NULL
[08:08:39.099] | : . '   .. ..$ removed : NULL
[08:08:39.099] | : . '   .. ..$ replaced: NULL
[08:08:39.099] | : . '   ..$ misuseDevices      : NULL
[08:08:39.099] | : . '   ..$ misuseDefaultDevice: list()
[08:08:39.099] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:39"
[08:08:39.099] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:39"
[08:08:39.099] | : . '   ..$ uuid               : chr [1:2] "98952eeb2580387bd4c4db2d30fd2531" "35"
[08:08:39.099] | : . '   ..$ session_uuid       : chr "f21ee30ff69e2e385c3cea002926a2be"
[08:08:39.099] | : . '   .. ..- attr(*, "source")=List of 5
[08:08:39.099] | : . '   .. .. ..$ host  : Named chr "285a5f234941"
[08:08:39.099] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:39.099] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:08:39.099] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:39.099] | : . '   .. .. ..$ pid   : int 69397
[08:08:39.099] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:37"
[08:08:39.099] | : . '   .. .. ..$ random: int 2147483647
[08:08:39.099] | : . '   ..$ r_info             :List of 4
[08:08:39.099] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:39.099] | : . '   .. .. ..$ : int [1:3] 4 5 0
[08:08:39.099] | : . '   .. ..$ os           : chr "unix"
[08:08:39.099] | : . '   .. ..$ os_name      : chr "Linux"
[08:08:39.099] | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:39.099] | : . '   ..$ version            : chr "1.8"
[08:08:39.099] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:39.099] | : . '  $ success: logi TRUE
[08:08:39.099] | : . '  $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[08:08:39.099] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:39.099] | : . '  $ tag    : NULL
[08:08:39.110] | : . ' Received FutureResult
[08:08:39.110] | : . ' FutureResult:
[08:08:39.110] | : . ' value: ‘xtabs’, ‘table’
[08:08:39.110] | : . ' visible: TRUE
[08:08:39.110] | : . ' stdout: character
[08:08:39.110] | : . ' conditions: [n = 0] 
[08:08:39.110] | : . ' RNG used: FALSE
[08:08:39.110] | : . ' duration: 0.003088236 secs (started 2025-06-17 08:08:39.095168)
[08:08:39.110] | : . ' version: 1.8
[08:08:39.111] | : . ' FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'remove', earlySignal = 0) ...
[08:08:39.111] | : . ' , Removed future from position #1
[08:08:39.111] | : . ' , Number of registered futures: 0
[08:08:39.111] | : . ' FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'remove', earlySignal = 0) ... done
[08:08:39.111] | : . ' Erased future from future backend
[08:08:39.111] | : . ' result() for ClusterFuture ...
[08:08:39.112] | : . ' , result already collected: FutureResult
[08:08:39.112] | : . ' result() for ClusterFuture ... done
[08:08:39.112] | : . ' signalConditions() ...
[08:08:39.112] | : . ' , include = ‘immediateCondition’
[08:08:39.112] | : . ' , exclude = 
[08:08:39.112] | : . ' , resignal = FALSE
[08:08:39.112] | : . ' , Number of conditions: 0
[08:08:39.112] | : . ' ,  int 0
[08:08:39.113] | : . ' signalConditions() ... done
[08:08:39.113] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:39.113] | : result() for ClusterFuture ... done
[08:08:39.113] | : result() for ClusterFuture ...
[08:08:39.113] | : . result already collected: FutureResult
[08:08:39.113] | : result() for ClusterFuture ... done
[08:08:39.113] | : signalConditions() ...
[08:08:39.113] | : . include = ‘immediateCondition’
[08:08:39.113] | : . exclude = 
[08:08:39.114] | : . resignal = FALSE
[08:08:39.114] | : . Number of conditions: 0
[08:08:39.114] | : .  int 0
[08:08:39.114] | : signalConditions() ... done
[08:08:39.114] | : relay stdout ...
[08:08:39.114] | : relay stdout ... done
[08:08:39.114] | : check for misuse ...
[08:08:39.115] | : check for misuse ... done
[08:08:39.115] | value() for MultisessionFuture (<unnamed-35>) ... done
x
1 2 
2 3 
- Globals - lm(<formula>, data = cars) ...
- Globals - lm(<formula #1 (‘a’)>, data = cars) ...

Call:
lm(formula = dist ~ . - 1, data = cars)

Coefficients:
speed  
2.909  

[08:08:39.116] | future(..., label = NULL) ...
[08:08:39.116] | : lazy: FALSE
[08:08:39.116] | : stdout: TRUE
[08:08:39.116] | : conditions: [n=1] ‘condition’
[08:08:39.117] | : gc: FALSE
[08:08:39.117] | : earlySignal: FALSE
[08:08:39.117] | : getGlobalsAndPackages() ...
[08:08:39.117] | : . Searching for globals ...
[08:08:39.129] | : . ' globals found: [7] ‘{’, ‘lm’, ‘dist’, ‘-’, ‘.’, ‘~’, ‘cars’
[08:08:39.129] | : . Searching for globals ... done
[08:08:39.129] | : . Resolving globals: FALSE
[08:08:39.129] | : . Search for packages associated with the globals ...
[08:08:39.130] | : . ' Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:39.130] | : . ' Packages: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:39.130] | : . Search for packages associated with the globals ... done
[08:08:39.130] | : . Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[08:08:39.130] | : . Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[08:08:39.130] | : . globals: [0] 
[08:08:39.131] | : . packages: [2] ‘stats’, ‘datasets’
[08:08:39.131] | : getGlobalsAndPackages() ... done
[08:08:39.131] | : run() for ‘Future’ (<unnamed-36>) ...
[08:08:39.131] | : . state: ‘created’
[08:08:39.131] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:39.131] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:39.131] | : . Using MultisessionFutureBackend ...
[08:08:39.132] | : . ' Number of futures since start: 7 (7 created, 7 launched, 7 finished)
[08:08:39.132] | : . ' Launching futures ...
[08:08:39.132] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:39.132] | : . ' , ; Workers: [n=2]
[08:08:39.132] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:08:39.133] | : . ' , ; FutureRegistry: ‘workers-623664460e19df44562b7fe4cf996cb6’
[08:08:39.134] | : . ' , ; requestWorker() ...
[08:08:39.134] | : . ' , ; ` requestNode() ...
[08:08:39.134] | : . ' , ; ` | Number of workers: 2
[08:08:39.134] | : . ' , ; ` | Polling for a free worker ...
[08:08:39.134] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:39.134] | : . ' , ; ` | : . Listing all futures
[08:08:39.134] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:39.134] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:39.134] | : . ' , ; ` | : Total time: 0
[08:08:39.135] | : . ' , ; ` | Polling for a free worker ... done
[08:08:39.135] | : . ' , ; ` | FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:39.135] | : . ' , ; ` | : Listing all futures
[08:08:39.135] | : . ' , ; ` | : Number of registered futures: 0
[08:08:39.135] | : . ' , ; ` | FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:39.135] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:39.135] | : . ' , ; ` | Index of first available worker: 1
[08:08:39.135] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:39.227] | : . ' , ; ` | : Worker is functional
[08:08:39.227] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:39.227] | : . ' , ; ` | : . Listing all futures
[08:08:39.228] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:39.228] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:39.228] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:39.228] | : . ' , ; ` requestNode() ... done
[08:08:39.228] | : . ' , ; ` cluster node index: 1
[08:08:39.228] | : . ' , ; requestWorker() ... done
[08:08:39.228] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:39.229] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:39.229] | : . ' , ; launchFuture() ...
[08:08:39.229] | : . ' , ; ` cluster node index: 1
[08:08:39.229] | : . ' , ; ` getFutureData() ...
[08:08:39.229] | : . ' , ; ` | getFutureCore() ...
[08:08:39.229] | : . ' , ; ` | : Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[08:08:39.229] | : . ' , ; ` | getFutureCore() ... done
[08:08:39.229] | : . ' , ; ` | getFutureCapture() ...
[08:08:39.229] | : . ' , ; ` | getFutureCapture() ... done
[08:08:39.230] | : . ' , ; ` | getFutureContext() ...
[08:08:39.230] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:39.230] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:39.230] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:39.230] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:39.230] | : . ' , ; ` | getFutureContext() ... done
[08:08:39.230] | : . ' , ; ` getFutureData() ... done
[08:08:39.231] | : . ' , ; ` FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'add', earlySignal = 0) ...
[08:08:39.231] | : . ' , ; ` | Appended future to position #1
[08:08:39.231] | : . ' , ; ` | Number of registered futures: 1
[08:08:39.231] | : . ' , ; ` FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'add', earlySignal = 0) ... done
[08:08:39.231] | : . ' , ; launchFuture() ... done
[08:08:39.231] | : . ' , ; MultisessionFuture started
[08:08:39.231] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:39.231] | : . ' Launching futures ... done
[08:08:39.231] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:39.232] | : . Using MultisessionFutureBackend ... done
[08:08:39.232] | : run() for ‘Future’ (<unnamed-36>) ... done
[08:08:39.232] | future(..., label = NULL) ... done
[08:08:39.232] | value() for MultisessionFuture (<unnamed-36>) ...
[08:08:39.232] | : result() for ClusterFuture ...
[08:08:39.232] | : . assertValidConnection() ...
[08:08:39.232] | : . ' cluster node index: 1
[08:08:39.233] | : . assertValidConnection() ... done
[08:08:39.233] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:39.233] | : . ' cluster node index: 1
[08:08:39.281] | : . ' [1] TRUE
[08:08:39.281] | : . ' received data:
[08:08:39.282] | : . ' List of 5
[08:08:39.282] | : . '  $ type   : chr "VALUE"
[08:08:39.282] | : . '  $ value  :List of 16
[08:08:39.282] | : . '   ..$ value              :List of 12
[08:08:39.282] | : . '   .. ..$ coefficients : Named num 2.91
[08:08:39.282] | : . '   .. .. ..- attr(*, "names")= chr "speed"
[08:08:39.282] | : . '   .. ..$ residuals    : Named num [1:50] -9.64 -1.64 -16.36 1.64 -7.27 ...
[08:08:39.282] | : . '   .. .. ..- attr(*, "names")= chr [1:50] "1" "2" "3" "4" ...
[08:08:39.282] | : . '   .. ..$ effects      : Named num [1:50] -334.59 -1.31 -15.8 2.2 -6.63 ...
[08:08:39.282] | : . '   .. .. ..- attr(*, "names")= chr [1:50] "speed" "" "" "" ...
[08:08:39.282] | : . '   .. ..$ rank         : int 1
[08:08:39.282] | : . '   .. ..$ fitted.values: Named num [1:50] 11.6 11.6 20.4 20.4 23.3 ...
[08:08:39.282] | : . '   .. .. ..- attr(*, "names")= chr [1:50] "1" "2" "3" "4" ...
[08:08:39.282] | : . '   .. ..$ assign       : int 1
[08:08:39.282] | : . '   .. ..$ qr           :List of 5
[08:08:39.282] | : . '   .. .. ..$ qr   : num [1:50, 1] -115.013 0.0348 0.0609 0.0609 0.0696 ...
[08:08:39.282] | : . '   .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:39.282] | : . '   .. .. .. .. ..$ : chr [1:50] "1" "2" "3" "4" ...
[08:08:39.282] | : . '   .. .. .. .. ..$ : chr "speed"
[08:08:39.282] | : . '   .. .. .. ..- attr(*, "assign")= int 1
[08:08:39.282] | : . '   .. .. ..$ qraux: num 1.03
[08:08:39.282] | : . '   .. .. ..$ pivot: int 1
[08:08:39.282] | : . '   .. .. ..$ tol  : num 1e-07
[08:08:39.282] | : . '   .. .. ..$ rank : int 1
[08:08:39.282] | : . '   .. .. ..- attr(*, "class")= chr "qr"
[08:08:39.282] | : . '   .. ..$ df.residual  : int 49
[08:08:39.282] | : . '   .. ..$ xlevels      : Named list()
[08:08:39.282] | : . '   .. ..$ call         : language lm(formula = dist ~ . - 1, data = cars)
[08:08:39.282] | : . '   .. ..$ terms        :Classes 'terms', 'formula'  language dist ~ speed - 1
[08:08:39.282] | : . '   .. .. .. ..- attr(*, "variables")= language list(dist, speed)
[08:08:39.282] | : . '   .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:39.282] | : . '   .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:39.282] | : . '   .. .. .. .. .. ..$ : chr [1:2] "dist" "speed"
[08:08:39.282] | : . '   .. .. .. .. .. ..$ : chr "speed"
[08:08:39.282] | : . '   .. .. .. ..- attr(*, "term.labels")= chr "speed"
[08:08:39.282] | : . '   .. .. .. ..- attr(*, "order")= int 1
[08:08:39.282] | : . '   .. .. .. ..- attr(*, "intercept")= int 0
[08:08:39.282] | : . '   .. .. .. ..- attr(*, "response")= int 1
[08:08:39.282] | : . '   .. .. .. ..- attr(*, ".Environment")=<environment: 0x55f94de899f8> 
[08:08:39.282] | : . '   .. .. .. ..- attr(*, "predvars")= language list(dist, speed)
[08:08:39.282] | : . '   .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "numeric"
[08:08:39.282] | : . '   .. .. .. .. ..- attr(*, "names")= chr [1:2] "dist" "speed"
[08:08:39.282] | : . '   .. ..$ model        :'data.frame':	50 obs. of  2 variables:
[08:08:39.282] | : . '   .. .. ..$ dist : num [1:50] 2 10 4 22 16 10 18 26 34 17 ...
[08:08:39.282] | : . '   .. .. ..$ speed: num [1:50] 4 4 7 7 8 9 10 10 10 11 ...
[08:08:39.282] | : . '   .. .. ..- attr(*, "terms")=Classes 'terms', 'formula'  language dist ~ speed - 1
[08:08:39.282] | : . '   .. .. .. .. ..- attr(*, "variables")= language list(dist, speed)
[08:08:39.282] | : . '   .. .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:39.282] | : . '   .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:39.282] | : . '   .. .. .. .. .. .. ..$ : chr [1:2] "dist" "speed"
[08:08:39.282] | : . '   .. .. .. .. .. .. ..$ : chr "speed"
[08:08:39.282] | : . '   .. .. .. .. ..- attr(*, "term.labels")= chr "speed"
[08:08:39.282] | : . '   .. .. .. .. ..- attr(*, "order")= int 1
[08:08:39.282] | : . '   .. .. .. .. ..- attr(*, "intercept")= int 0
[08:08:39.282] | : . '   .. .. .. .. ..- attr(*, "response")= int 1
[08:08:39.282] | : . '   .. .. .. .. ..- attr(*, ".Environment")=<environment: 0x55f94de899f8> 
[08:08:39.282] | : . '   .. .. .. .. ..- attr(*, "predvars")= language list(dist, speed)
[08:08:39.282] | : . '   .. .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "numeric"
[08:08:39.282] | : . '   .. .. .. .. .. ..- attr(*, "names")= chr [1:2] "dist" "speed"
[08:08:39.282] | : . '   .. ..- attr(*, "class")= chr "lm"
[08:08:39.282] | : . '   ..$ visible            : logi TRUE
[08:08:39.282] | : . '   ..$ stdout             : chr ""
[08:08:39.282] | : . '   ..$ conditions         : list()
[08:08:39.282] | : . '   ..$ rng                : logi FALSE
[08:08:39.282] | : . '   ..$ seed               : NULL
[08:08:39.282] | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:39.282] | : . '   ..$ misuseConnections  :List of 3
[08:08:39.282] | : . '   .. ..$ added   : NULL
[08:08:39.282] | : . '   .. ..$ removed : NULL
[08:08:39.282] | : . '   .. ..$ replaced: NULL
[08:08:39.282] | : . '   ..$ misuseDevices      : NULL
[08:08:39.282] | : . '   ..$ misuseDefaultDevice: list()
[08:08:39.282] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:39"
[08:08:39.282] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:39"
[08:08:39.282] | : . '   ..$ uuid               : chr [1:2] "98952eeb2580387bd4c4db2d30fd2531" "36"
[08:08:39.282] | : . '   ..$ session_uuid       : chr "f21ee30ff69e2e385c3cea002926a2be"
[08:08:39.282] | : . '   .. ..- attr(*, "source")=List of 5
[08:08:39.282] | : . '   .. .. ..$ host  : Named chr "285a5f234941"
[08:08:39.282] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:39.282] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:08:39.282] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:39.282] | : . '   .. .. ..$ pid   : int 69397
[08:08:39.282] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:37"
[08:08:39.282] | : . '   .. .. ..$ random: int 2147483647
[08:08:39.282] | : . '   ..$ r_info             :List of 4
[08:08:39.282] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:39.282] | : . '   .. .. ..$ : int [1:3] 4 5 0
[08:08:39.282] | : . '   .. ..$ os           : chr "unix"
[08:08:39.282] | : . '   .. ..$ os_name      : chr "Linux"
[08:08:39.282] | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:39.282] | : . '   ..$ version            : chr "1.8"
[08:08:39.282] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:39.282] | : . '  $ success: logi TRUE
[08:08:39.282] | : . '  $ time   : 'proc_time' Named num [1:5] 0.009 0 0.009 0 0
[08:08:39.282] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:39.282] | : . '  $ tag    : NULL
[08:08:39.311] | : . ' Received FutureResult
[08:08:39.311] | : . ' FutureResult:
[08:08:39.311] | : . ' value: ‘lm’
[08:08:39.311] | : . ' visible: TRUE
[08:08:39.311] | : . ' stdout: character
[08:08:39.311] | : . ' conditions: [n = 0] 
[08:08:39.311] | : . ' RNG used: FALSE
[08:08:39.311] | : . ' duration: 0.003323793 secs (started 2025-06-17 08:08:39.272229)
[08:08:39.311] | : . ' version: 1.8
[08:08:39.311] | : . ' FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'remove', earlySignal = 0) ...
[08:08:39.311] | : . ' , Removed future from position #1
[08:08:39.312] | : . ' , Number of registered futures: 0
[08:08:39.312] | : . ' FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'remove', earlySignal = 0) ... done
[08:08:39.312] | : . ' Erased future from future backend
[08:08:39.312] | : . ' result() for ClusterFuture ...
[08:08:39.312] | : . ' , result already collected: FutureResult
[08:08:39.312] | : . ' result() for ClusterFuture ... done
[08:08:39.312] | : . ' signalConditions() ...
[08:08:39.312] | : . ' , include = ‘immediateCondition’
[08:08:39.312] | : . ' , exclude = 
[08:08:39.313] | : . ' , resignal = FALSE
[08:08:39.313] | : . ' , Number of conditions: 0
[08:08:39.313] | : . ' ,  int 0
[08:08:39.313] | : . ' signalConditions() ... done
[08:08:39.313] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:39.313] | : result() for ClusterFuture ... done
[08:08:39.313] | : result() for ClusterFuture ...
[08:08:39.314] | : . result already collected: FutureResult
[08:08:39.314] | : result() for ClusterFuture ... done
[08:08:39.314] | : signalConditions() ...
[08:08:39.314] | : . include = ‘immediateCondition’
[08:08:39.314] | : . exclude = 
[08:08:39.314] | : . resignal = FALSE
[08:08:39.314] | : . Number of conditions: 0
[08:08:39.314] | : .  int 0
[08:08:39.315] | : signalConditions() ... done
[08:08:39.315] | : relay stdout ...
[08:08:39.315] | : relay stdout ... done
[08:08:39.315] | : check for misuse ...
[08:08:39.315] | : check for misuse ... done
[08:08:39.315] | value() for MultisessionFuture (<unnamed-36>) ... done

Call:
lm(formula = dist ~ . - 1, data = cars)

Coefficients:
speed  
2.909  

- Globals - lm(<formula #2 (‘b’)>, data = cars) ...

Call:
lm(formula = dist ~ . + 0, data = cars)

Coefficients:
speed  
2.909  

[08:08:39.317] | future(..., label = NULL) ...
[08:08:39.317] | : lazy: FALSE
[08:08:39.318] | : stdout: TRUE
[08:08:39.318] | : conditions: [n=1] ‘condition’
[08:08:39.318] | : gc: FALSE
[08:08:39.318] | : earlySignal: FALSE
[08:08:39.318] | : getGlobalsAndPackages() ...
[08:08:39.318] | : . Searching for globals ...
[08:08:39.330] | : . ' globals found: [7] ‘{’, ‘lm’, ‘dist’, ‘+’, ‘.’, ‘~’, ‘cars’
[08:08:39.330] | : . Searching for globals ... done
[08:08:39.330] | : . Resolving globals: FALSE
[08:08:39.330] | : . Search for packages associated with the globals ...
[08:08:39.331] | : . ' Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:39.331] | : . ' Packages: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:39.331] | : . Search for packages associated with the globals ... done
[08:08:39.331] | : . Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[08:08:39.331] | : . Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[08:08:39.332] | : . globals: [0] 
[08:08:39.332] | : . packages: [2] ‘stats’, ‘datasets’
[08:08:39.332] | : getGlobalsAndPackages() ... done
[08:08:39.332] | : run() for ‘Future’ (<unnamed-37>) ...
[08:08:39.332] | : . state: ‘created’
[08:08:39.332] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:39.332] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:39.332] | : . Using MultisessionFutureBackend ...
[08:08:39.333] | : . ' Number of futures since start: 8 (8 created, 8 launched, 8 finished)
[08:08:39.333] | : . ' Launching futures ...
[08:08:39.333] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:39.333] | : . ' , ; Workers: [n=2]
[08:08:39.333] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:08:39.335] | : . ' , ; FutureRegistry: ‘workers-623664460e19df44562b7fe4cf996cb6’
[08:08:39.335] | : . ' , ; requestWorker() ...
[08:08:39.335] | : . ' , ; ` requestNode() ...
[08:08:39.335] | : . ' , ; ` | Number of workers: 2
[08:08:39.335] | : . ' , ; ` | Polling for a free worker ...
[08:08:39.335] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:39.335] | : . ' , ; ` | : . Listing all futures
[08:08:39.335] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:39.335] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:39.335] | : . ' , ; ` | : Total time: 0
[08:08:39.336] | : . ' , ; ` | Polling for a free worker ... done
[08:08:39.336] | : . ' , ; ` | FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:39.336] | : . ' , ; ` | : Listing all futures
[08:08:39.336] | : . ' , ; ` | : Number of registered futures: 0
[08:08:39.336] | : . ' , ; ` | FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:39.336] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:39.336] | : . ' , ; ` | Index of first available worker: 1
[08:08:39.336] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:39.428] | : . ' , ; ` | : Worker is functional
[08:08:39.428] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:39.428] | : . ' , ; ` | : . Listing all futures
[08:08:39.429] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:39.429] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:39.429] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:39.429] | : . ' , ; ` requestNode() ... done
[08:08:39.429] | : . ' , ; ` cluster node index: 1
[08:08:39.429] | : . ' , ; requestWorker() ... done
[08:08:39.429] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:39.430] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:39.430] | : . ' , ; launchFuture() ...
[08:08:39.430] | : . ' , ; ` cluster node index: 1
[08:08:39.430] | : . ' , ; ` getFutureData() ...
[08:08:39.430] | : . ' , ; ` | getFutureCore() ...
[08:08:39.430] | : . ' , ; ` | : Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[08:08:39.430] | : . ' , ; ` | getFutureCore() ... done
[08:08:39.430] | : . ' , ; ` | getFutureCapture() ...
[08:08:39.430] | : . ' , ; ` | getFutureCapture() ... done
[08:08:39.431] | : . ' , ; ` | getFutureContext() ...
[08:08:39.431] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:39.431] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:39.431] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:39.431] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:39.431] | : . ' , ; ` | getFutureContext() ... done
[08:08:39.431] | : . ' , ; ` getFutureData() ... done
[08:08:39.432] | : . ' , ; ` FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'add', earlySignal = 0) ...
[08:08:39.432] | : . ' , ; ` | Appended future to position #1
[08:08:39.432] | : . ' , ; ` | Number of registered futures: 1
[08:08:39.432] | : . ' , ; ` FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'add', earlySignal = 0) ... done
[08:08:39.432] | : . ' , ; launchFuture() ... done
[08:08:39.432] | : . ' , ; MultisessionFuture started
[08:08:39.432] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:39.432] | : . ' Launching futures ... done
[08:08:39.432] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:39.433] | : . Using MultisessionFutureBackend ... done
[08:08:39.433] | : run() for ‘Future’ (<unnamed-37>) ... done
[08:08:39.433] | future(..., label = NULL) ... done
[08:08:39.433] | value() for MultisessionFuture (<unnamed-37>) ...
[08:08:39.433] | : result() for ClusterFuture ...
[08:08:39.433] | : . assertValidConnection() ...
[08:08:39.433] | : . ' cluster node index: 1
[08:08:39.433] | : . assertValidConnection() ... done
[08:08:39.434] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:39.434] | : . ' cluster node index: 1
[08:08:39.477] | : . ' [1] TRUE
[08:08:39.477] | : . ' received data:
[08:08:39.477] | : . ' List of 5
[08:08:39.477] | : . '  $ type   : chr "VALUE"
[08:08:39.477] | : . '  $ value  :List of 16
[08:08:39.477] | : . '   ..$ value              :List of 12
[08:08:39.477] | : . '   .. ..$ coefficients : Named num 2.91
[08:08:39.477] | : . '   .. .. ..- attr(*, "names")= chr "speed"
[08:08:39.477] | : . '   .. ..$ residuals    : Named num [1:50] -9.64 -1.64 -16.36 1.64 -7.27 ...
[08:08:39.477] | : . '   .. .. ..- attr(*, "names")= chr [1:50] "1" "2" "3" "4" ...
[08:08:39.477] | : . '   .. ..$ effects      : Named num [1:50] -334.59 -1.31 -15.8 2.2 -6.63 ...
[08:08:39.477] | : . '   .. .. ..- attr(*, "names")= chr [1:50] "speed" "" "" "" ...
[08:08:39.477] | : . '   .. ..$ rank         : int 1
[08:08:39.477] | : . '   .. ..$ fitted.values: Named num [1:50] 11.6 11.6 20.4 20.4 23.3 ...
[08:08:39.477] | : . '   .. .. ..- attr(*, "names")= chr [1:50] "1" "2" "3" "4" ...
[08:08:39.477] | : . '   .. ..$ assign       : int 1
[08:08:39.477] | : . '   .. ..$ qr           :List of 5
[08:08:39.477] | : . '   .. .. ..$ qr   : num [1:50, 1] -115.013 0.0348 0.0609 0.0609 0.0696 ...
[08:08:39.477] | : . '   .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:39.477] | : . '   .. .. .. .. ..$ : chr [1:50] "1" "2" "3" "4" ...
[08:08:39.477] | : . '   .. .. .. .. ..$ : chr "speed"
[08:08:39.477] | : . '   .. .. .. ..- attr(*, "assign")= int 1
[08:08:39.477] | : . '   .. .. ..$ qraux: num 1.03
[08:08:39.477] | : . '   .. .. ..$ pivot: int 1
[08:08:39.477] | : . '   .. .. ..$ tol  : num 1e-07
[08:08:39.477] | : . '   .. .. ..$ rank : int 1
[08:08:39.477] | : . '   .. .. ..- attr(*, "class")= chr "qr"
[08:08:39.477] | : . '   .. ..$ df.residual  : int 49
[08:08:39.477] | : . '   .. ..$ xlevels      : Named list()
[08:08:39.477] | : . '   .. ..$ call         : language lm(formula = dist ~ . + 0, data = cars)
[08:08:39.477] | : . '   .. ..$ terms        :Classes 'terms', 'formula'  language dist ~ speed + 0
[08:08:39.477] | : . '   .. .. .. ..- attr(*, "variables")= language list(dist, speed)
[08:08:39.477] | : . '   .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:39.477] | : . '   .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:39.477] | : . '   .. .. .. .. .. ..$ : chr [1:2] "dist" "speed"
[08:08:39.477] | : . '   .. .. .. .. .. ..$ : chr "speed"
[08:08:39.477] | : . '   .. .. .. ..- attr(*, "term.labels")= chr "speed"
[08:08:39.477] | : . '   .. .. .. ..- attr(*, "order")= int 1
[08:08:39.477] | : . '   .. .. .. ..- attr(*, "intercept")= int 0
[08:08:39.477] | : . '   .. .. .. ..- attr(*, "response")= int 1
[08:08:39.477] | : . '   .. .. .. ..- attr(*, ".Environment")=<environment: 0x55f94dec3b58> 
[08:08:39.477] | : . '   .. .. .. ..- attr(*, "predvars")= language list(dist, speed)
[08:08:39.477] | : . '   .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "numeric"
[08:08:39.477] | : . '   .. .. .. .. ..- attr(*, "names")= chr [1:2] "dist" "speed"
[08:08:39.477] | : . '   .. ..$ model        :'data.frame':	50 obs. of  2 variables:
[08:08:39.477] | : . '   .. .. ..$ dist : num [1:50] 2 10 4 22 16 10 18 26 34 17 ...
[08:08:39.477] | : . '   .. .. ..$ speed: num [1:50] 4 4 7 7 8 9 10 10 10 11 ...
[08:08:39.477] | : . '   .. .. ..- attr(*, "terms")=Classes 'terms', 'formula'  language dist ~ speed + 0
[08:08:39.477] | : . '   .. .. .. .. ..- attr(*, "variables")= language list(dist, speed)
[08:08:39.477] | : . '   .. .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:39.477] | : . '   .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:39.477] | : . '   .. .. .. .. .. .. ..$ : chr [1:2] "dist" "speed"
[08:08:39.477] | : . '   .. .. .. .. .. .. ..$ : chr "speed"
[08:08:39.477] | : . '   .. .. .. .. ..- attr(*, "term.labels")= chr "speed"
[08:08:39.477] | : . '   .. .. .. .. ..- attr(*, "order")= int 1
[08:08:39.477] | : . '   .. .. .. .. ..- attr(*, "intercept")= int 0
[08:08:39.477] | : . '   .. .. .. .. ..- attr(*, "response")= int 1
[08:08:39.477] | : . '   .. .. .. .. ..- attr(*, ".Environment")=<environment: 0x55f94dec3b58> 
[08:08:39.477] | : . '   .. .. .. .. ..- attr(*, "predvars")= language list(dist, speed)
[08:08:39.477] | : . '   .. .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "numeric"
[08:08:39.477] | : . '   .. .. .. .. .. ..- attr(*, "names")= chr [1:2] "dist" "speed"
[08:08:39.477] | : . '   .. ..- attr(*, "class")= chr "lm"
[08:08:39.477] | : . '   ..$ visible            : logi TRUE
[08:08:39.477] | : . '   ..$ stdout             : chr ""
[08:08:39.477] | : . '   ..$ conditions         : list()
[08:08:39.477] | : . '   ..$ rng                : logi FALSE
[08:08:39.477] | : . '   ..$ seed               : NULL
[08:08:39.477] | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:39.477] | : . '   ..$ misuseConnections  :List of 3
[08:08:39.477] | : . '   .. ..$ added   : NULL
[08:08:39.477] | : . '   .. ..$ removed : NULL
[08:08:39.477] | : . '   .. ..$ replaced: NULL
[08:08:39.477] | : . '   ..$ misuseDevices      : NULL
[08:08:39.477] | : . '   ..$ misuseDefaultDevice: list()
[08:08:39.477] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:39"
[08:08:39.477] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:39"
[08:08:39.477] | : . '   ..$ uuid               : chr [1:2] "98952eeb2580387bd4c4db2d30fd2531" "37"
[08:08:39.477] | : . '   ..$ session_uuid       : chr "f21ee30ff69e2e385c3cea002926a2be"
[08:08:39.477] | : . '   .. ..- attr(*, "source")=List of 5
[08:08:39.477] | : . '   .. .. ..$ host  : Named chr "285a5f234941"
[08:08:39.477] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:39.477] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:08:39.477] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:39.477] | : . '   .. .. ..$ pid   : int 69397
[08:08:39.477] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:37"
[08:08:39.477] | : . '   .. .. ..$ random: int 2147483647
[08:08:39.477] | : . '   ..$ r_info             :List of 4
[08:08:39.477] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:39.477] | : . '   .. .. ..$ : int [1:3] 4 5 0
[08:08:39.477] | : . '   .. ..$ os           : chr "unix"
[08:08:39.477] | : . '   .. ..$ os_name      : chr "Linux"
[08:08:39.477] | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:39.477] | : . '   ..$ version            : chr "1.8"
[08:08:39.477] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:39.477] | : . '  $ success: logi TRUE
[08:08:39.477] | : . '  $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[08:08:39.477] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:39.477] | : . '  $ tag    : NULL
[08:08:39.511] | : . ' Received FutureResult
[08:08:39.511] | : . ' FutureResult:
[08:08:39.511] | : . ' value: ‘lm’
[08:08:39.511] | : . ' visible: TRUE
[08:08:39.511] | : . ' stdout: character
[08:08:39.511] | : . ' conditions: [n = 0] 
[08:08:39.511] | : . ' RNG used: FALSE
[08:08:39.511] | : . ' duration: 0.003537655 secs (started 2025-06-17 08:08:39.473247)
[08:08:39.511] | : . ' version: 1.8
[08:08:39.511] | : . ' FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'remove', earlySignal = 0) ...
[08:08:39.511] | : . ' , Removed future from position #1
[08:08:39.512] | : . ' , Number of registered futures: 0
[08:08:39.512] | : . ' FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'remove', earlySignal = 0) ... done
[08:08:39.512] | : . ' Erased future from future backend
[08:08:39.512] | : . ' result() for ClusterFuture ...
[08:08:39.512] | : . ' , result already collected: FutureResult
[08:08:39.512] | : . ' result() for ClusterFuture ... done
[08:08:39.512] | : . ' signalConditions() ...
[08:08:39.512] | : . ' , include = ‘immediateCondition’
[08:08:39.512] | : . ' , exclude = 
[08:08:39.513] | : . ' , resignal = FALSE
[08:08:39.513] | : . ' , Number of conditions: 0
[08:08:39.513] | : . ' ,  int 0
[08:08:39.513] | : . ' signalConditions() ... done
[08:08:39.513] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:39.513] | : result() for ClusterFuture ... done
[08:08:39.513] | : result() for ClusterFuture ...
[08:08:39.514] | : . result already collected: FutureResult
[08:08:39.514] | : result() for ClusterFuture ... done
[08:08:39.514] | : signalConditions() ...
[08:08:39.514] | : . include = ‘immediateCondition’
[08:08:39.514] | : . exclude = 
[08:08:39.514] | : . resignal = FALSE
[08:08:39.514] | : . Number of conditions: 0
[08:08:39.514] | : .  int 0
[08:08:39.515] | : signalConditions() ... done
[08:08:39.515] | : relay stdout ...
[08:08:39.515] | : relay stdout ... done
[08:08:39.515] | : check for misuse ...
[08:08:39.515] | : check for misuse ... done
[08:08:39.515] | value() for MultisessionFuture (<unnamed-37>) ... done

Call:
lm(formula = dist ~ . + 0, data = cars)

Coefficients:
speed  
2.909  

- Globals - lm(<formula #3 (‘c’)>, data = cars) ...

Call:
lm(formula = dist ~ speed + speed^2, data = cars)

Coefficients:
(Intercept)        speed  
    -17.579        3.932  

[08:08:39.517] | future(..., label = NULL) ...
[08:08:39.517] | : lazy: FALSE
[08:08:39.518] | : stdout: TRUE
[08:08:39.518] | : conditions: [n=1] ‘condition’
[08:08:39.518] | : gc: FALSE
[08:08:39.518] | : earlySignal: FALSE
[08:08:39.518] | : getGlobalsAndPackages() ...
[08:08:39.518] | : . Searching for globals ...
[08:08:39.534] | : . ' globals found: [8] ‘{’, ‘lm’, ‘dist’, ‘+’, ‘speed’, ‘^’, ‘~’, ‘cars’
[08:08:39.534] | : . Searching for globals ... done
[08:08:39.534] | : . Resolving globals: FALSE
[08:08:39.534] | : . Search for packages associated with the globals ...
[08:08:39.535] | : . ' Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:39.535] | : . ' Packages: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:39.535] | : . Search for packages associated with the globals ... done
[08:08:39.535] | : . Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[08:08:39.536] | : . Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[08:08:39.536] | : . globals: [0] 
[08:08:39.536] | : . packages: [2] ‘stats’, ‘datasets’
[08:08:39.536] | : getGlobalsAndPackages() ... done
[08:08:39.536] | : run() for ‘Future’ (<unnamed-38>) ...
[08:08:39.537] | : . state: ‘created’
[08:08:39.537] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:39.537] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:39.537] | : . Using MultisessionFutureBackend ...
[08:08:39.537] | : . ' Number of futures since start: 9 (9 created, 9 launched, 9 finished)
[08:08:39.537] | : . ' Launching futures ...
[08:08:39.537] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:39.537] | : . ' , ; Workers: [n=2]
[08:08:39.538] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:08:39.539] | : . ' , ; FutureRegistry: ‘workers-623664460e19df44562b7fe4cf996cb6’
[08:08:39.539] | : . ' , ; requestWorker() ...
[08:08:39.539] | : . ' , ; ` requestNode() ...
[08:08:39.539] | : . ' , ; ` | Number of workers: 2
[08:08:39.540] | : . ' , ; ` | Polling for a free worker ...
[08:08:39.540] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:39.540] | : . ' , ; ` | : . Listing all futures
[08:08:39.540] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:39.540] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:39.540] | : . ' , ; ` | : Total time: 0
[08:08:39.540] | : . ' , ; ` | Polling for a free worker ... done
[08:08:39.540] | : . ' , ; ` | FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:39.540] | : . ' , ; ` | : Listing all futures
[08:08:39.540] | : . ' , ; ` | : Number of registered futures: 0
[08:08:39.541] | : . ' , ; ` | FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:39.541] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:39.541] | : . ' , ; ` | Index of first available worker: 1
[08:08:39.541] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:39.633] | : . ' , ; ` | : Worker is functional
[08:08:39.633] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:39.634] | : . ' , ; ` | : . Listing all futures
[08:08:39.634] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:39.634] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:39.634] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:39.634] | : . ' , ; ` requestNode() ... done
[08:08:39.634] | : . ' , ; ` cluster node index: 1
[08:08:39.634] | : . ' , ; requestWorker() ... done
[08:08:39.634] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:39.635] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:39.635] | : . ' , ; launchFuture() ...
[08:08:39.635] | : . ' , ; ` cluster node index: 1
[08:08:39.635] | : . ' , ; ` getFutureData() ...
[08:08:39.635] | : . ' , ; ` | getFutureCore() ...
[08:08:39.635] | : . ' , ; ` | : Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[08:08:39.636] | : . ' , ; ` | getFutureCore() ... done
[08:08:39.636] | : . ' , ; ` | getFutureCapture() ...
[08:08:39.636] | : . ' , ; ` | getFutureCapture() ... done
[08:08:39.636] | : . ' , ; ` | getFutureContext() ...
[08:08:39.636] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:39.636] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:39.636] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:39.636] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:39.636] | : . ' , ; ` | getFutureContext() ... done
[08:08:39.637] | : . ' , ; ` getFutureData() ... done
[08:08:39.637] | : . ' , ; ` FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'add', earlySignal = 0) ...
[08:08:39.637] | : . ' , ; ` | Appended future to position #1
[08:08:39.637] | : . ' , ; ` | Number of registered futures: 1
[08:08:39.637] | : . ' , ; ` FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'add', earlySignal = 0) ... done
[08:08:39.637] | : . ' , ; launchFuture() ... done
[08:08:39.637] | : . ' , ; MultisessionFuture started
[08:08:39.638] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:39.638] | : . ' Launching futures ... done
[08:08:39.638] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:39.638] | : . Using MultisessionFutureBackend ... done
[08:08:39.638] | : run() for ‘Future’ (<unnamed-38>) ... done
[08:08:39.638] | future(..., label = NULL) ... done
[08:08:39.638] | value() for MultisessionFuture (<unnamed-38>) ...
[08:08:39.638] | : result() for ClusterFuture ...
[08:08:39.639] | : . assertValidConnection() ...
[08:08:39.639] | : . ' cluster node index: 1
[08:08:39.639] | : . assertValidConnection() ... done
[08:08:39.639] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:39.639] | : . ' cluster node index: 1
[08:08:39.682] | : . ' [1] TRUE
[08:08:39.682] | : . ' received data:
[08:08:39.682] | : . ' List of 5
[08:08:39.682] | : . '  $ type   : chr "VALUE"
[08:08:39.682] | : . '  $ value  :List of 16
[08:08:39.682] | : . '   ..$ value              :List of 12
[08:08:39.682] | : . '   .. ..$ coefficients : Named num [1:2] -17.58 3.93
[08:08:39.682] | : . '   .. .. ..- attr(*, "names")= chr [1:2] "(Intercept)" "speed"
[08:08:39.682] | : . '   .. ..$ residuals    : Named num [1:50] 3.85 11.85 -5.95 12.05 2.12 ...
[08:08:39.682] | : . '   .. .. ..- attr(*, "names")= chr [1:50] "1" "2" "3" "4" ...
[08:08:39.682] | : . '   .. ..$ effects      : Named num [1:50] -303.914 145.552 -8.115 9.885 0.194 ...
[08:08:39.682] | : . '   .. .. ..- attr(*, "names")= chr [1:50] "(Intercept)" "speed" "" "" ...
[08:08:39.682] | : . '   .. ..$ rank         : int 2
[08:08:39.682] | : . '   .. ..$ fitted.values: Named num [1:50] -1.85 -1.85 9.95 9.95 13.88 ...
[08:08:39.682] | : . '   .. .. ..- attr(*, "names")= chr [1:50] "1" "2" "3" "4" ...
[08:08:39.682] | : . '   .. ..$ assign       : int [1:2] 0 1
[08:08:39.682] | : . '   .. ..$ qr           :List of 5
[08:08:39.682] | : . '   .. .. ..$ qr   : num [1:50, 1:2] -7.071 0.141 0.141 0.141 0.141 ...
[08:08:39.682] | : . '   .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:39.682] | : . '   .. .. .. .. ..$ : chr [1:50] "1" "2" "3" "4" ...
[08:08:39.682] | : . '   .. .. .. .. ..$ : chr [1:2] "(Intercept)" "speed"
[08:08:39.682] | : . '   .. .. .. ..- attr(*, "assign")= int [1:2] 0 1
[08:08:39.682] | : . '   .. .. ..$ qraux: num [1:2] 1.14 1.27
[08:08:39.682] | : . '   .. .. ..$ pivot: int [1:2] 1 2
[08:08:39.682] | : . '   .. .. ..$ tol  : num 1e-07
[08:08:39.682] | : . '   .. .. ..$ rank : int 2
[08:08:39.682] | : . '   .. .. ..- attr(*, "class")= chr "qr"
[08:08:39.682] | : . '   .. ..$ df.residual  : int 48
[08:08:39.682] | : . '   .. ..$ xlevels      : Named list()
[08:08:39.682] | : . '   .. ..$ call         : language lm(formula = dist ~ speed + speed^2, data = cars)
[08:08:39.682] | : . '   .. ..$ terms        :Classes 'terms', 'formula'  language dist ~ speed + speed^2
[08:08:39.682] | : . '   .. .. .. ..- attr(*, "variables")= language list(dist, speed)
[08:08:39.682] | : . '   .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:39.682] | : . '   .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:39.682] | : . '   .. .. .. .. .. ..$ : chr [1:2] "dist" "speed"
[08:08:39.682] | : . '   .. .. .. .. .. ..$ : chr "speed"
[08:08:39.682] | : . '   .. .. .. ..- attr(*, "term.labels")= chr "speed"
[08:08:39.682] | : . '   .. .. .. ..- attr(*, "order")= int 1
[08:08:39.682] | : . '   .. .. .. ..- attr(*, "intercept")= int 1
[08:08:39.682] | : . '   .. .. .. ..- attr(*, "response")= int 1
[08:08:39.682] | : . '   .. .. .. ..- attr(*, ".Environment")=<environment: 0x55f94f1f5570> 
[08:08:39.682] | : . '   .. .. .. ..- attr(*, "predvars")= language list(dist, speed)
[08:08:39.682] | : . '   .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "numeric"
[08:08:39.682] | : . '   .. .. .. .. ..- attr(*, "names")= chr [1:2] "dist" "speed"
[08:08:39.682] | : . '   .. ..$ model        :'data.frame':	50 obs. of  2 variables:
[08:08:39.682] | : . '   .. .. ..$ dist : num [1:50] 2 10 4 22 16 10 18 26 34 17 ...
[08:08:39.682] | : . '   .. .. ..$ speed: num [1:50] 4 4 7 7 8 9 10 10 10 11 ...
[08:08:39.682] | : . '   .. .. ..- attr(*, "terms")=Classes 'terms', 'formula'  language dist ~ speed + speed^2
[08:08:39.682] | : . '   .. .. .. .. ..- attr(*, "variables")= language list(dist, speed)
[08:08:39.682] | : . '   .. .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:39.682] | : . '   .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:39.682] | : . '   .. .. .. .. .. .. ..$ : chr [1:2] "dist" "speed"
[08:08:39.682] | : . '   .. .. .. .. .. .. ..$ : chr "speed"
[08:08:39.682] | : . '   .. .. .. .. ..- attr(*, "term.labels")= chr "speed"
[08:08:39.682] | : . '   .. .. .. .. ..- attr(*, "order")= int 1
[08:08:39.682] | : . '   .. .. .. .. ..- attr(*, "intercept")= int 1
[08:08:39.682] | : . '   .. .. .. .. ..- attr(*, "response")= int 1
[08:08:39.682] | : . '   .. .. .. .. ..- attr(*, ".Environment")=<environment: 0x55f94f1f5570> 
[08:08:39.682] | : . '   .. .. .. .. ..- attr(*, "predvars")= language list(dist, speed)
[08:08:39.682] | : . '   .. .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "numeric"
[08:08:39.682] | : . '   .. .. .. .. .. ..- attr(*, "names")= chr [1:2] "dist" "speed"
[08:08:39.682] | : . '   .. ..- attr(*, "class")= chr "lm"
[08:08:39.682] | : . '   ..$ visible            : logi TRUE
[08:08:39.682] | : . '   ..$ stdout             : chr ""
[08:08:39.682] | : . '   ..$ conditions         : list()
[08:08:39.682] | : . '   ..$ rng                : logi FALSE
[08:08:39.682] | : . '   ..$ seed               : NULL
[08:08:39.682] | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:39.682] | : . '   ..$ misuseConnections  :List of 3
[08:08:39.682] | : . '   .. ..$ added   : NULL
[08:08:39.682] | : . '   .. ..$ removed : NULL
[08:08:39.682] | : . '   .. ..$ replaced: NULL
[08:08:39.682] | : . '   ..$ misuseDevices      : NULL
[08:08:39.682] | : . '   ..$ misuseDefaultDevice: list()
[08:08:39.682] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:39"
[08:08:39.682] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:39"
[08:08:39.682] | : . '   ..$ uuid               : chr [1:2] "98952eeb2580387bd4c4db2d30fd2531" "38"
[08:08:39.682] | : . '   ..$ session_uuid       : chr "f21ee30ff69e2e385c3cea002926a2be"
[08:08:39.682] | : . '   .. ..- attr(*, "source")=List of 5
[08:08:39.682] | : . '   .. .. ..$ host  : Named chr "285a5f234941"
[08:08:39.682] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:39.682] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:08:39.682] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:39.682] | : . '   .. .. ..$ pid   : int 69397
[08:08:39.682] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:37"
[08:08:39.682] | : . '   .. .. ..$ random: int 2147483647
[08:08:39.682] | : . '   ..$ r_info             :List of 4
[08:08:39.682] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:39.682] | : . '   .. .. ..$ : int [1:3] 4 5 0
[08:08:39.682] | : . '   .. ..$ os           : chr "unix"
[08:08:39.682] | : . '   .. ..$ os_name      : chr "Linux"
[08:08:39.682] | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:39.682] | : . '   ..$ version            : chr "1.8"
[08:08:39.682] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:39.682] | : . '  $ success: logi TRUE
[08:08:39.682] | : . '  $ time   : 'proc_time' Named num [1:5] 0.003 0 0.004 0 0
[08:08:39.682] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:39.682] | : . '  $ tag    : NULL
[08:08:39.712] | : . ' Received FutureResult
[08:08:39.712] | : . ' FutureResult:
[08:08:39.712] | : . ' value: ‘lm’
[08:08:39.712] | : . ' visible: TRUE
[08:08:39.712] | : . ' stdout: character
[08:08:39.712] | : . ' conditions: [n = 0] 
[08:08:39.712] | : . ' RNG used: FALSE
[08:08:39.712] | : . ' duration: 0.003273249 secs (started 2025-06-17 08:08:39.678199)
[08:08:39.712] | : . ' version: 1.8
[08:08:39.712] | : . ' FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'remove', earlySignal = 0) ...
[08:08:39.712] | : . ' , Removed future from position #1
[08:08:39.713] | : . ' , Number of registered futures: 0
[08:08:39.713] | : . ' FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'remove', earlySignal = 0) ... done
[08:08:39.713] | : . ' Erased future from future backend
[08:08:39.713] | : . ' result() for ClusterFuture ...
[08:08:39.713] | : . ' , result already collected: FutureResult
[08:08:39.713] | : . ' result() for ClusterFuture ... done
[08:08:39.713] | : . ' signalConditions() ...
[08:08:39.713] | : . ' , include = ‘immediateCondition’
[08:08:39.713] | : . ' , exclude = 
[08:08:39.714] | : . ' , resignal = FALSE
[08:08:39.714] | : . ' , Number of conditions: 0
[08:08:39.714] | : . ' ,  int 0
[08:08:39.714] | : . ' signalConditions() ... done
[08:08:39.714] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:39.714] | : result() for ClusterFuture ... done
[08:08:39.714] | : result() for ClusterFuture ...
[08:08:39.715] | : . result already collected: FutureResult
[08:08:39.715] | : result() for ClusterFuture ... done
[08:08:39.715] | : signalConditions() ...
[08:08:39.715] | : . include = ‘immediateCondition’
[08:08:39.715] | : . exclude = 
[08:08:39.715] | : . resignal = FALSE
[08:08:39.715] | : . Number of conditions: 0
[08:08:39.715] | : .  int 0
[08:08:39.716] | : signalConditions() ... done
[08:08:39.716] | : relay stdout ...
[08:08:39.716] | : relay stdout ... done
[08:08:39.716] | : check for misuse ...
[08:08:39.716] | : check for misuse ... done
[08:08:39.716] | value() for MultisessionFuture (<unnamed-38>) ... done

Call:
lm(formula = dist ~ speed + speed^2, data = cars)

Coefficients:
(Intercept)        speed  
    -17.579        3.932  

- Globals - lm(<formula #4 (‘d’)>, data = cars) ...

Call:
lm(formula = dist ~ speed + I(speed^2), data = cars)

Coefficients:
(Intercept)        speed   I(speed^2)  
    2.47014      0.91329      0.09996  

[08:08:39.718] | future(..., label = NULL) ...
[08:08:39.719] | : lazy: FALSE
[08:08:39.719] | : stdout: TRUE
[08:08:39.719] | : conditions: [n=1] ‘condition’
[08:08:39.719] | : gc: FALSE
[08:08:39.719] | : earlySignal: FALSE
[08:08:39.719] | : getGlobalsAndPackages() ...
[08:08:39.719] | : . Searching for globals ...
[08:08:39.737] | : . ' globals found: [9] ‘{’, ‘lm’, ‘dist’, ‘+’, ‘speed’, ‘I’, ‘^’, ‘~’, ‘cars’
[08:08:39.737] | : . Searching for globals ... done
[08:08:39.738] | : . Resolving globals: FALSE
[08:08:39.738] | : . Search for packages associated with the globals ...
[08:08:39.738] | : . ' Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:39.738] | : . ' Packages: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:39.738] | : . Search for packages associated with the globals ... done
[08:08:39.739] | : . Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[08:08:39.739] | : . Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[08:08:39.739] | : . globals: [0] 
[08:08:39.739] | : . packages: [2] ‘stats’, ‘datasets’
[08:08:39.739] | : getGlobalsAndPackages() ... done
[08:08:39.739] | : run() for ‘Future’ (<unnamed-39>) ...
[08:08:39.739] | : . state: ‘created’
[08:08:39.740] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:39.740] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:39.740] | : . Using MultisessionFutureBackend ...
[08:08:39.740] | : . ' Number of futures since start: 10 (10 created, 10 launched, 10 finished)
[08:08:39.740] | : . ' Launching futures ...
[08:08:39.740] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:39.740] | : . ' , ; Workers: [n=2]
[08:08:39.740] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:08:39.742] | : . ' , ; FutureRegistry: ‘workers-623664460e19df44562b7fe4cf996cb6’
[08:08:39.742] | : . ' , ; requestWorker() ...
[08:08:39.742] | : . ' , ; ` requestNode() ...
[08:08:39.742] | : . ' , ; ` | Number of workers: 2
[08:08:39.742] | : . ' , ; ` | Polling for a free worker ...
[08:08:39.743] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:39.743] | : . ' , ; ` | : . Listing all futures
[08:08:39.743] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:39.743] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:39.743] | : . ' , ; ` | : Total time: 0
[08:08:39.743] | : . ' , ; ` | Polling for a free worker ... done
[08:08:39.743] | : . ' , ; ` | FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:39.743] | : . ' , ; ` | : Listing all futures
[08:08:39.743] | : . ' , ; ` | : Number of registered futures: 0
[08:08:39.743] | : . ' , ; ` | FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:39.744] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:39.744] | : . ' , ; ` | Index of first available worker: 1
[08:08:39.744] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:39.836] | : . ' , ; ` | : Worker is functional
[08:08:39.836] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:39.836] | : . ' , ; ` | : . Listing all futures
[08:08:39.836] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:39.836] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:39.836] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:39.836] | : . ' , ; ` requestNode() ... done
[08:08:39.837] | : . ' , ; ` cluster node index: 1
[08:08:39.837] | : . ' , ; requestWorker() ... done
[08:08:39.837] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:39.837] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:39.837] | : . ' , ; launchFuture() ...
[08:08:39.837] | : . ' , ; ` cluster node index: 1
[08:08:39.838] | : . ' , ; ` getFutureData() ...
[08:08:39.838] | : . ' , ; ` | getFutureCore() ...
[08:08:39.838] | : . ' , ; ` | : Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[08:08:39.838] | : . ' , ; ` | getFutureCore() ... done
[08:08:39.838] | : . ' , ; ` | getFutureCapture() ...
[08:08:39.838] | : . ' , ; ` | getFutureCapture() ... done
[08:08:39.838] | : . ' , ; ` | getFutureContext() ...
[08:08:39.838] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:39.838] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:39.839] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:39.839] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:39.839] | : . ' , ; ` | getFutureContext() ... done
[08:08:39.839] | : . ' , ; ` getFutureData() ... done
[08:08:39.839] | : . ' , ; ` FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'add', earlySignal = 0) ...
[08:08:39.839] | : . ' , ; ` | Appended future to position #1
[08:08:39.839] | : . ' , ; ` | Number of registered futures: 1
[08:08:39.840] | : . ' , ; ` FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'add', earlySignal = 0) ... done
[08:08:39.840] | : . ' , ; launchFuture() ... done
[08:08:39.840] | : . ' , ; MultisessionFuture started
[08:08:39.840] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:39.840] | : . ' Launching futures ... done
[08:08:39.840] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:39.840] | : . Using MultisessionFutureBackend ... done
[08:08:39.840] | : run() for ‘Future’ (<unnamed-39>) ... done
[08:08:39.840] | future(..., label = NULL) ... done
[08:08:39.841] | value() for MultisessionFuture (<unnamed-39>) ...
[08:08:39.841] | : result() for ClusterFuture ...
[08:08:39.841] | : . assertValidConnection() ...
[08:08:39.841] | : . ' cluster node index: 1
[08:08:39.841] | : . assertValidConnection() ... done
[08:08:39.841] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:39.841] | : . ' cluster node index: 1
[08:08:39.884] | : . ' [1] TRUE
[08:08:39.884] | : . ' received data:
[08:08:39.884] | : . ' List of 5
[08:08:39.884] | : . '  $ type   : chr "VALUE"
[08:08:39.884] | : . '  $ value  :List of 16
[08:08:39.884] | : . '   ..$ value              :List of 12
[08:08:39.884] | : . '   .. ..$ coefficients : Named num [1:3] 2.47 0.913 0.1
[08:08:39.884] | : . '   .. .. ..- attr(*, "names")= chr [1:3] "(Intercept)" "speed" "I(speed^2)"
[08:08:39.884] | : . '   .. ..$ residuals    : Named num [1:50] -5.723 2.277 -9.761 8.239 -0.174 ...
[08:08:39.884] | : . '   .. .. ..- attr(*, "names")= chr [1:50] "1" "2" "3" "4" ...
[08:08:39.884] | : . '   .. ..$ effects      : Named num [1:50] -303.91 145.55 -23 9.04 0.17 ...
[08:08:39.884] | : . '   .. .. ..- attr(*, "names")= chr [1:50] "(Intercept)" "speed" "I(speed^2)" "" ...
[08:08:39.884] | : . '   .. ..$ rank         : int 3
[08:08:39.884] | : . '   .. ..$ fitted.values: Named num [1:50] 7.72 7.72 13.76 13.76 16.17 ...
[08:08:39.884] | : . '   .. .. ..- attr(*, "names")= chr [1:50] "1" "2" "3" "4" ...
[08:08:39.884] | : . '   .. ..$ assign       : int [1:3] 0 1 2
[08:08:39.884] | : . '   .. ..$ qr           :List of 5
[08:08:39.884] | : . '   .. .. ..$ qr   : num [1:50, 1:3] -7.071 0.141 0.141 0.141 0.141 ...
[08:08:39.884] | : . '   .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:39.884] | : . '   .. .. .. .. ..$ : chr [1:50] "1" "2" "3" "4" ...
[08:08:39.884] | : . '   .. .. .. .. ..$ : chr [1:3] "(Intercept)" "speed" "I(speed^2)"
[08:08:39.884] | : . '   .. .. .. ..- attr(*, "assign")= int [1:3] 0 1 2
[08:08:39.884] | : . '   .. .. ..$ qraux: num [1:3] 1.14 1.27 1.06
[08:08:39.884] | : . '   .. .. ..$ pivot: int [1:3] 1 2 3
[08:08:39.884] | : . '   .. .. ..$ tol  : num 1e-07
[08:08:39.884] | : . '   .. .. ..$ rank : int 3
[08:08:39.884] | : . '   .. .. ..- attr(*, "class")= chr "qr"
[08:08:39.884] | : . '   .. ..$ df.residual  : int 47
[08:08:39.884] | : . '   .. ..$ xlevels      : Named list()
[08:08:39.884] | : . '   .. ..$ call         : language lm(formula = dist ~ speed + I(speed^2), data = cars)
[08:08:39.884] | : . '   .. ..$ terms        :Classes 'terms', 'formula'  language dist ~ speed + I(speed^2)
[08:08:39.884] | : . '   .. .. .. ..- attr(*, "variables")= language list(dist, speed, I(speed^2))
[08:08:39.884] | : . '   .. .. .. ..- attr(*, "factors")= int [1:3, 1:2] 0 1 0 0 0 1
[08:08:39.884] | : . '   .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:39.884] | : . '   .. .. .. .. .. ..$ : chr [1:3] "dist" "speed" "I(speed^2)"
[08:08:39.884] | : . '   .. .. .. .. .. ..$ : chr [1:2] "speed" "I(speed^2)"
[08:08:39.884] | : . '   .. .. .. ..- attr(*, "term.labels")= chr [1:2] "speed" "I(speed^2)"
[08:08:39.884] | : . '   .. .. .. ..- attr(*, "order")= int [1:2] 1 1
[08:08:39.884] | : . '   .. .. .. ..- attr(*, "intercept")= int 1
[08:08:39.884] | : . '   .. .. .. ..- attr(*, "response")= int 1
[08:08:39.884] | : . '   .. .. .. ..- attr(*, ".Environment")=<environment: 0x55f94f378bb0> 
[08:08:39.884] | : . '   .. .. .. ..- attr(*, "predvars")= language list(dist, speed, I(speed^2))
[08:08:39.884] | : . '   .. .. .. ..- attr(*, "dataClasses")= Named chr [1:3] "numeric" "numeric" "numeric"
[08:08:39.884] | : . '   .. .. .. .. ..- attr(*, "names")= chr [1:3] "dist" "speed" "I(speed^2)"
[08:08:39.884] | : . '   .. ..$ model        :'data.frame':	50 obs. of  3 variables:
[08:08:39.884] | : . '   .. .. ..$ dist      : num [1:50] 2 10 4 22 16 10 18 26 34 17 ...
[08:08:39.884] | : . '   .. .. ..$ speed     : num [1:50] 4 4 7 7 8 9 10 10 10 11 ...
[08:08:39.884] | : . '   .. .. ..$ I(speed^2): 'AsIs' num [1:50]  16  16  49  49  64  81 100 100 100 121 ...
[08:08:39.884] | : . '   .. .. ..- attr(*, "terms")=Classes 'terms', 'formula'  language dist ~ speed + I(speed^2)
[08:08:39.884] | : . '   .. .. .. .. ..- attr(*, "variables")= language list(dist, speed, I(speed^2))
[08:08:39.884] | : . '   .. .. .. .. ..- attr(*, "factors")= int [1:3, 1:2] 0 1 0 0 0 1
[08:08:39.884] | : . '   .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:39.884] | : . '   .. .. .. .. .. .. ..$ : chr [1:3] "dist" "speed" "I(speed^2)"
[08:08:39.884] | : . '   .. .. .. .. .. .. ..$ : chr [1:2] "speed" "I(speed^2)"
[08:08:39.884] | : . '   .. .. .. .. ..- attr(*, "term.labels")= chr [1:2] "speed" "I(speed^2)"
[08:08:39.884] | : . '   .. .. .. .. ..- attr(*, "order")= int [1:2] 1 1
[08:08:39.884] | : . '   .. .. .. .. ..- attr(*, "intercept")= int 1
[08:08:39.884] | : . '   .. .. .. .. ..- attr(*, "response")= int 1
[08:08:39.884] | : . '   .. .. .. .. ..- attr(*, ".Environment")=<environment: 0x55f94f378bb0> 
[08:08:39.884] | : . '   .. .. .. .. ..- attr(*, "predvars")= language list(dist, speed, I(speed^2))
[08:08:39.884] | : . '   .. .. .. .. ..- attr(*, "dataClasses")= Named chr [1:3] "numeric" "numeric" "numeric"
[08:08:39.884] | : . '   .. .. .. .. .. ..- attr(*, "names")= chr [1:3] "dist" "speed" "I(speed^2)"
[08:08:39.884] | : . '   .. ..- attr(*, "class")= chr "lm"
[08:08:39.884] | : . '   ..$ visible            : logi TRUE
[08:08:39.884] | : . '   ..$ stdout             : chr ""
[08:08:39.884] | : . '   ..$ conditions         : list()
[08:08:39.884] | : . '   ..$ rng                : logi FALSE
[08:08:39.884] | : . '   ..$ seed               : NULL
[08:08:39.884] | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:39.884] | : . '   ..$ misuseConnections  :List of 3
[08:08:39.884] | : . '   .. ..$ added   : NULL
[08:08:39.884] | : . '   .. ..$ removed : NULL
[08:08:39.884] | : . '   .. ..$ replaced: NULL
[08:08:39.884] | : . '   ..$ misuseDevices      : NULL
[08:08:39.884] | : . '   ..$ misuseDefaultDevice: list()
[08:08:39.884] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:39"
[08:08:39.884] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:39"
[08:08:39.884] | : . '   ..$ uuid               : chr [1:2] "98952eeb2580387bd4c4db2d30fd2531" "39"
[08:08:39.884] | : . '   ..$ session_uuid       : chr "f21ee30ff69e2e385c3cea002926a2be"
[08:08:39.884] | : . '   .. ..- attr(*, "source")=List of 5
[08:08:39.884] | : . '   .. .. ..$ host  : Named chr "285a5f234941"
[08:08:39.884] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:39.884] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:08:39.884] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:39.884] | : . '   .. .. ..$ pid   : int 69397
[08:08:39.884] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:37"
[08:08:39.884] | : . '   .. .. ..$ random: int 2147483647
[08:08:39.884] | : . '   ..$ r_info             :List of 4
[08:08:39.884] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:39.884] | : . '   .. .. ..$ : int [1:3] 4 5 0
[08:08:39.884] | : . '   .. ..$ os           : chr "unix"
[08:08:39.884] | : . '   .. ..$ os_name      : chr "Linux"
[08:08:39.884] | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:39.884] | : . '   ..$ version            : chr "1.8"
[08:08:39.884] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:39.884] | : . '  $ success: logi TRUE
[08:08:39.884] | : . '  $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[08:08:39.884] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:39.884] | : . '  $ tag    : NULL
[08:08:39.915] | : . ' Received FutureResult
[08:08:39.915] | : . ' FutureResult:
[08:08:39.915] | : . ' value: ‘lm’
[08:08:39.915] | : . ' visible: TRUE
[08:08:39.915] | : . ' stdout: character
[08:08:39.915] | : . ' conditions: [n = 0] 
[08:08:39.915] | : . ' RNG used: FALSE
[08:08:39.915] | : . ' duration: 0.00342083 secs (started 2025-06-17 08:08:39.880291)
[08:08:39.915] | : . ' version: 1.8
[08:08:39.915] | : . ' FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'remove', earlySignal = 0) ...
[08:08:39.916] | : . ' , Removed future from position #1
[08:08:39.916] | : . ' , Number of registered futures: 0
[08:08:39.916] | : . ' FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'remove', earlySignal = 0) ... done
[08:08:39.916] | : . ' Erased future from future backend
[08:08:39.916] | : . ' result() for ClusterFuture ...
[08:08:39.916] | : . ' , result already collected: FutureResult
[08:08:39.916] | : . ' result() for ClusterFuture ... done
[08:08:39.916] | : . ' signalConditions() ...
[08:08:39.916] | : . ' , include = ‘immediateCondition’
[08:08:39.917] | : . ' , exclude = 
[08:08:39.917] | : . ' , resignal = FALSE
[08:08:39.917] | : . ' , Number of conditions: 0
[08:08:39.917] | : . ' ,  int 0
[08:08:39.917] | : . ' signalConditions() ... done
[08:08:39.917] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:39.917] | : result() for ClusterFuture ... done
[08:08:39.918] | : result() for ClusterFuture ...
[08:08:39.918] | : . result already collected: FutureResult
[08:08:39.918] | : result() for ClusterFuture ... done
[08:08:39.918] | : signalConditions() ...
[08:08:39.918] | : . include = ‘immediateCondition’
[08:08:39.918] | : . exclude = 
[08:08:39.918] | : . resignal = FALSE
[08:08:39.918] | : . Number of conditions: 0
[08:08:39.918] | : .  int 0
[08:08:39.919] | : signalConditions() ... done
[08:08:39.919] | : relay stdout ...
[08:08:39.919] | : relay stdout ... done
[08:08:39.919] | : check for misuse ...
[08:08:39.919] | : check for misuse ... done
[08:08:39.919] | value() for MultisessionFuture (<unnamed-39>) ... done

Call:
lm(formula = dist ~ speed + I(speed^2), data = cars)

Coefficients:
(Intercept)        speed   I(speed^2)  
    2.47014      0.91329      0.09996  

- Globals - lm(<formula #5 (‘e’)>, data = cars) ...

Call:
lm(formula = dist ~ poly(speed, 2), data = cars)

Coefficients:
    (Intercept)  poly(speed, 2)1  poly(speed, 2)2  
          42.98           145.55            23.00  

[08:08:39.922] | future(..., label = NULL) ...
[08:08:39.922] | : lazy: FALSE
[08:08:39.922] | : stdout: TRUE
[08:08:39.922] | : conditions: [n=1] ‘condition’
[08:08:39.922] | : gc: FALSE
[08:08:39.923] | : earlySignal: FALSE
[08:08:39.923] | : getGlobalsAndPackages() ...
[08:08:39.923] | : . Searching for globals ...
[08:08:39.935] | : . ' globals found: [7] ‘{’, ‘lm’, ‘dist’, ‘poly’, ‘speed’, ‘~’, ‘cars’
[08:08:39.935] | : . Searching for globals ... done
[08:08:39.936] | : . Resolving globals: FALSE
[08:08:39.936] | : . Search for packages associated with the globals ...
[08:08:39.936] | : . ' Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:39.936] | : . ' Packages: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:39.936] | : . Search for packages associated with the globals ... done
[08:08:39.937] | : . Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[08:08:39.937] | : . Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[08:08:39.937] | : . globals: [0] 
[08:08:39.937] | : . packages: [2] ‘stats’, ‘datasets’
[08:08:39.937] | : getGlobalsAndPackages() ... done
[08:08:39.937] | : run() for ‘Future’ (<unnamed-40>) ...
[08:08:39.937] | : . state: ‘created’
[08:08:39.938] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:39.938] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:39.938] | : . Using MultisessionFutureBackend ...
[08:08:39.938] | : . ' Number of futures since start: 11 (11 created, 11 launched, 11 finished)
[08:08:39.938] | : . ' Launching futures ...
[08:08:39.938] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:39.938] | : . ' , ; Workers: [n=2]
[08:08:39.938] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:08:39.940] | : . ' , ; FutureRegistry: ‘workers-623664460e19df44562b7fe4cf996cb6’
[08:08:39.940] | : . ' , ; requestWorker() ...
[08:08:39.940] | : . ' , ; ` requestNode() ...
[08:08:39.940] | : . ' , ; ` | Number of workers: 2
[08:08:39.940] | : . ' , ; ` | Polling for a free worker ...
[08:08:39.940] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:39.941] | : . ' , ; ` | : . Listing all futures
[08:08:39.941] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:39.941] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:39.941] | : . ' , ; ` | : Total time: 0
[08:08:39.941] | : . ' , ; ` | Polling for a free worker ... done
[08:08:39.941] | : . ' , ; ` | FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:39.941] | : . ' , ; ` | : Listing all futures
[08:08:39.941] | : . ' , ; ` | : Number of registered futures: 0
[08:08:39.941] | : . ' , ; ` | FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:39.941] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:39.942] | : . ' , ; ` | Index of first available worker: 1
[08:08:39.942] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:40.034] | : . ' , ; ` | : Worker is functional
[08:08:40.034] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:40.035] | : . ' , ; ` | : . Listing all futures
[08:08:40.035] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:40.035] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:40.035] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:40.035] | : . ' , ; ` requestNode() ... done
[08:08:40.035] | : . ' , ; ` cluster node index: 1
[08:08:40.035] | : . ' , ; requestWorker() ... done
[08:08:40.035] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:40.036] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:40.036] | : . ' , ; launchFuture() ...
[08:08:40.036] | : . ' , ; ` cluster node index: 1
[08:08:40.036] | : . ' , ; ` getFutureData() ...
[08:08:40.036] | : . ' , ; ` | getFutureCore() ...
[08:08:40.036] | : . ' , ; ` | : Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[08:08:40.037] | : . ' , ; ` | getFutureCore() ... done
[08:08:40.037] | : . ' , ; ` | getFutureCapture() ...
[08:08:40.037] | : . ' , ; ` | getFutureCapture() ... done
[08:08:40.037] | : . ' , ; ` | getFutureContext() ...
[08:08:40.037] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:40.037] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:40.037] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:40.037] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:40.037] | : . ' , ; ` | getFutureContext() ... done
[08:08:40.038] | : . ' , ; ` getFutureData() ... done
[08:08:40.038] | : . ' , ; ` FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'add', earlySignal = 0) ...
[08:08:40.038] | : . ' , ; ` | Appended future to position #1
[08:08:40.038] | : . ' , ; ` | Number of registered futures: 1
[08:08:40.038] | : . ' , ; ` FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'add', earlySignal = 0) ... done
[08:08:40.038] | : . ' , ; launchFuture() ... done
[08:08:40.039] | : . ' , ; MultisessionFuture started
[08:08:40.039] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:40.039] | : . ' Launching futures ... done
[08:08:40.039] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:40.039] | : . Using MultisessionFutureBackend ... done
[08:08:40.039] | : run() for ‘Future’ (<unnamed-40>) ... done
[08:08:40.039] | future(..., label = NULL) ... done
[08:08:40.039] | value() for MultisessionFuture (<unnamed-40>) ...
[08:08:40.039] | : result() for ClusterFuture ...
[08:08:40.040] | : . assertValidConnection() ...
[08:08:40.040] | : . ' cluster node index: 1
[08:08:40.040] | : . assertValidConnection() ... done
[08:08:40.040] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:40.040] | : . ' cluster node index: 1
[08:08:40.084] | : . ' [1] TRUE
[08:08:40.084] | : . ' received data:
[08:08:40.085] | : . ' List of 5
[08:08:40.085] | : . '  $ type   : chr "VALUE"
[08:08:40.085] | : . '  $ value  :List of 16
[08:08:40.085] | : . '   ..$ value              :List of 12
[08:08:40.085] | : . '   .. ..$ coefficients : Named num [1:3] 43 146 23
[08:08:40.085] | : . '   .. .. ..- attr(*, "names")= chr [1:3] "(Intercept)" "poly(speed, 2)1" "poly(speed, 2)2"
[08:08:40.085] | : . '   .. ..$ residuals    : Named num [1:50] -5.723 2.277 -9.761 8.239 -0.174 ...
[08:08:40.085] | : . '   .. .. ..- attr(*, "names")= chr [1:50] "1" "2" "3" "4" ...
[08:08:40.085] | : . '   .. ..$ effects      : Named num [1:50] -303.91 145.55 -23 9.04 0.17 ...
[08:08:40.085] | : . '   .. .. ..- attr(*, "names")= chr [1:50] "(Intercept)" "poly(speed, 2)1" "poly(speed, 2)2" "" ...
[08:08:40.085] | : . '   .. ..$ rank         : int 3
[08:08:40.085] | : . '   .. ..$ fitted.values: Named num [1:50] 7.72 7.72 13.76 13.76 16.17 ...
[08:08:40.085] | : . '   .. .. ..- attr(*, "names")= chr [1:50] "1" "2" "3" "4" ...
[08:08:40.085] | : . '   .. ..$ assign       : int [1:3] 0 1 1
[08:08:40.085] | : . '   .. ..$ qr           :List of 5
[08:08:40.085] | : . '   .. .. ..$ qr   : num [1:50, 1:3] -7.071 0.141 0.141 0.141 0.141 ...
[08:08:40.085] | : . '   .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:40.085] | : . '   .. .. .. .. ..$ : chr [1:50] "1" "2" "3" "4" ...
[08:08:40.085] | : . '   .. .. .. .. ..$ : chr [1:3] "(Intercept)" "poly(speed, 2)1" "poly(speed, 2)2"
[08:08:40.085] | : . '   .. .. .. ..- attr(*, "assign")= int [1:3] 0 1 1
[08:08:40.085] | : . '   .. .. ..$ qraux: num [1:3] 1.14 1.27 1.06
[08:08:40.085] | : . '   .. .. ..$ pivot: int [1:3] 1 2 3
[08:08:40.085] | : . '   .. .. ..$ tol  : num 1e-07
[08:08:40.085] | : . '   .. .. ..$ rank : int 3
[08:08:40.085] | : . '   .. .. ..- attr(*, "class")= chr "qr"
[08:08:40.085] | : . '   .. ..$ df.residual  : int 47
[08:08:40.085] | : . '   .. ..$ xlevels      : Named list()
[08:08:40.085] | : . '   .. ..$ call         : language lm(formula = dist ~ poly(speed, 2), data = cars)
[08:08:40.085] | : . '   .. ..$ terms        :Classes 'terms', 'formula'  language dist ~ poly(speed, 2)
[08:08:40.085] | : . '   .. .. .. ..- attr(*, "variables")= language list(dist, poly(speed, 2))
[08:08:40.085] | : . '   .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:40.085] | : . '   .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:40.085] | : . '   .. .. .. .. .. ..$ : chr [1:2] "dist" "poly(speed, 2)"
[08:08:40.085] | : . '   .. .. .. .. .. ..$ : chr "poly(speed, 2)"
[08:08:40.085] | : . '   .. .. .. ..- attr(*, "term.labels")= chr "poly(speed, 2)"
[08:08:40.085] | : . '   .. .. .. ..- attr(*, "order")= int 1
[08:08:40.085] | : . '   .. .. .. ..- attr(*, "intercept")= int 1
[08:08:40.085] | : . '   .. .. .. ..- attr(*, "response")= int 1
[08:08:40.085] | : . '   .. .. .. ..- attr(*, ".Environment")=<environment: 0x55f94f39dbf0> 
[08:08:40.085] | : . '   .. .. .. ..- attr(*, "predvars")= language list(dist, poly(speed, 2, coefs = list(alpha = c(15.4, 14.803503649635),      norm2 = c(1, 50, 1370, 52923.5831824818))))
[08:08:40.085] | : . '   .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "nmatrix.2"
[08:08:40.085] | : . '   .. .. .. .. ..- attr(*, "names")= chr [1:2] "dist" "poly(speed, 2)"
[08:08:40.085] | : . '   .. ..$ model        :'data.frame':	50 obs. of  2 variables:
[08:08:40.085] | : . '   .. .. ..$ dist          : num [1:50] 2 10 4 22 16 10 18 26 34 17 ...
[08:08:40.085] | : . '   .. .. ..$ poly(speed, 2): 'poly' num [1:50, 1:2] -0.308 -0.308 -0.227 -0.227 -0.2 ...
[08:08:40.085] | : . '   .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:40.085] | : . '   .. .. .. .. ..$ : NULL
[08:08:40.085] | : . '   .. .. .. .. ..$ : chr [1:2] "1" "2"
[08:08:40.085] | : . '   .. .. .. ..- attr(*, "coefs")=List of 2
[08:08:40.085] | : . '   .. .. .. .. ..$ alpha: num [1:2] 15.4 14.8
[08:08:40.085] | : . '   .. .. .. .. ..$ norm2: num [1:4] 1 50 1370 52924
[08:08:40.085] | : . '   .. .. .. ..- attr(*, "degree")= int [1:2] 1 2
[08:08:40.085] | : . '   .. .. ..- attr(*, "terms")=Classes 'terms', 'formula'  language dist ~ poly(speed, 2)
[08:08:40.085] | : . '   .. .. .. .. ..- attr(*, "variables")= language list(dist, poly(speed, 2))
[08:08:40.085] | : . '   .. .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:40.085] | : . '   .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:40.085] | : . '   .. .. .. .. .. .. ..$ : chr [1:2] "dist" "poly(speed, 2)"
[08:08:40.085] | : . '   .. .. .. .. .. .. ..$ : chr "poly(speed, 2)"
[08:08:40.085] | : . '   .. .. .. .. ..- attr(*, "term.labels")= chr "poly(speed, 2)"
[08:08:40.085] | : . '   .. .. .. .. ..- attr(*, "order")= int 1
[08:08:40.085] | : . '   .. .. .. .. ..- attr(*, "intercept")= int 1
[08:08:40.085] | : . '   .. .. .. .. ..- attr(*, "response")= int 1
[08:08:40.085] | : . '   .. .. .. .. ..- attr(*, ".Environment")=<environment: 0x55f94f39dbf0> 
[08:08:40.085] | : . '   .. .. .. .. ..- attr(*, "predvars")= language list(dist, poly(speed, 2, coefs = list(alpha = c(15.4, 14.803503649635),      norm2 = c(1, 50, 1370, 52923.5831824818))))
[08:08:40.085] | : . '   .. .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "nmatrix.2"
[08:08:40.085] | : . '   .. .. .. .. .. ..- attr(*, "names")= chr [1:2] "dist" "poly(speed, 2)"
[08:08:40.085] | : . '   .. ..- attr(*, "class")= chr "lm"
[08:08:40.085] | : . '   ..$ visible            : logi TRUE
[08:08:40.085] | : . '   ..$ stdout             : chr ""
[08:08:40.085] | : . '   ..$ conditions         : list()
[08:08:40.085] | : . '   ..$ rng                : logi FALSE
[08:08:40.085] | : . '   ..$ seed               : NULL
[08:08:40.085] | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:40.085] | : . '   ..$ misuseConnections  :List of 3
[08:08:40.085] | : . '   .. ..$ added   : NULL
[08:08:40.085] | : . '   .. ..$ removed : NULL
[08:08:40.085] | : . '   .. ..$ replaced: NULL
[08:08:40.085] | : . '   ..$ misuseDevices      : NULL
[08:08:40.085] | : . '   ..$ misuseDefaultDevice: list()
[08:08:40.085] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:40"
[08:08:40.085] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:40"
[08:08:40.085] | : . '   ..$ uuid               : chr [1:2] "98952eeb2580387bd4c4db2d30fd2531" "40"
[08:08:40.085] | : . '   ..$ session_uuid       : chr "f21ee30ff69e2e385c3cea002926a2be"
[08:08:40.085] | : . '   .. ..- attr(*, "source")=List of 5
[08:08:40.085] | : . '   .. .. ..$ host  : Named chr "285a5f234941"
[08:08:40.085] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:40.085] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:08:40.085] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:40.085] | : . '   .. .. ..$ pid   : int 69397
[08:08:40.085] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:37"
[08:08:40.085] | : . '   .. .. ..$ random: int 2147483647
[08:08:40.085] | : . '   ..$ r_info             :List of 4
[08:08:40.085] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:40.085] | : . '   .. .. ..$ : int [1:3] 4 5 0
[08:08:40.085] | : . '   .. ..$ os           : chr "unix"
[08:08:40.085] | : . '   .. ..$ os_name      : chr "Linux"
[08:08:40.085] | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:40.085] | : . '   ..$ version            : chr "1.8"
[08:08:40.085] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:40.085] | : . '  $ success: logi TRUE
[08:08:40.085] | : . '  $ time   : 'proc_time' Named num [1:5] 0.006 0 0.005 0 0
[08:08:40.085] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:40.085] | : . '  $ tag    : NULL
[08:08:40.116] | : . ' Received FutureResult
[08:08:40.116] | : . ' FutureResult:
[08:08:40.116] | : . ' value: ‘lm’
[08:08:40.116] | : . ' visible: TRUE
[08:08:40.116] | : . ' stdout: character
[08:08:40.116] | : . ' conditions: [n = 0] 
[08:08:40.116] | : . ' RNG used: FALSE
[08:08:40.116] | : . ' duration: 0.004809618 secs (started 2025-06-17 08:08:40.079198)
[08:08:40.116] | : . ' version: 1.8
[08:08:40.117] | : . ' FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'remove', earlySignal = 0) ...
[08:08:40.117] | : . ' , Removed future from position #1
[08:08:40.117] | : . ' , Number of registered futures: 0
[08:08:40.117] | : . ' FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'remove', earlySignal = 0) ... done
[08:08:40.117] | : . ' Erased future from future backend
[08:08:40.117] | : . ' result() for ClusterFuture ...
[08:08:40.117] | : . ' , result already collected: FutureResult
[08:08:40.117] | : . ' result() for ClusterFuture ... done
[08:08:40.117] | : . ' signalConditions() ...
[08:08:40.118] | : . ' , include = ‘immediateCondition’
[08:08:40.118] | : . ' , exclude = 
[08:08:40.118] | : . ' , resignal = FALSE
[08:08:40.118] | : . ' , Number of conditions: 0
[08:08:40.118] | : . ' ,  int 0
[08:08:40.118] | : . ' signalConditions() ... done
[08:08:40.118] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:40.119] | : result() for ClusterFuture ... done
[08:08:40.119] | : result() for ClusterFuture ...
[08:08:40.119] | : . result already collected: FutureResult
[08:08:40.119] | : result() for ClusterFuture ... done
[08:08:40.119] | : signalConditions() ...
[08:08:40.119] | : . include = ‘immediateCondition’
[08:08:40.119] | : . exclude = 
[08:08:40.119] | : . resignal = FALSE
[08:08:40.119] | : . Number of conditions: 0
[08:08:40.119] | : .  int 0
[08:08:40.120] | : signalConditions() ... done
[08:08:40.120] | : relay stdout ...
[08:08:40.120] | : relay stdout ... done
[08:08:40.120] | : check for misuse ...
[08:08:40.120] | : check for misuse ... done
[08:08:40.120] | value() for MultisessionFuture (<unnamed-40>) ... done

Call:
lm(formula = dist ~ poly(speed, 2), data = cars)

Coefficients:
    (Intercept)  poly(speed, 2)1  poly(speed, 2)2  
          42.98           145.55            23.00  

- Globals - map(x, ~ expr) ...
[08:08:40.122] | future(..., label = NULL) ...
[08:08:40.122] | : lazy: FALSE
[08:08:40.122] | : stdout: TRUE
[08:08:40.122] | : conditions: [n=1] ‘condition’
[08:08:40.123] | : gc: FALSE
[08:08:40.123] | : earlySignal: FALSE
[08:08:40.123] | : getGlobalsAndPackages() ...
[08:08:40.123] | : . Searching for globals ...
[08:08:40.156] | : . ' globals found: [17] ‘{’, ‘outer_function’, ‘map’, ‘:’, ‘~’, ‘inner_function’, ‘.x’, ‘if’, ‘inherits’, ‘<-’, ‘[[’, ‘-’, ‘eval’, ‘bquote’, ‘lapply’, ‘.’, ‘+’
[08:08:40.156] | : . Searching for globals ... done
[08:08:40.157] | : . Resolving globals: FALSE
[08:08:40.157] | : . Search for packages associated with the globals ...
[08:08:40.157] | : . ' Packages associated with globals: [1] ‘base’
[08:08:40.157] | : . ' Packages: [1] ‘base’
[08:08:40.157] | : . Search for packages associated with the globals ... done
[08:08:40.158] | : . Packages after dropping 'base': [0] 
[08:08:40.158] | : . globals: [3] ‘outer_function’, ‘map’, ‘inner_function’
[08:08:40.158] | : . packages: [0] 
[08:08:40.158] | : getGlobalsAndPackages() ... done
[08:08:40.158] | : run() for ‘Future’ (<unnamed-41>) ...
[08:08:40.158] | : . state: ‘created’
[08:08:40.158] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:40.159] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:40.159] | : . Using MultisessionFutureBackend ...
[08:08:40.159] | : . ' Number of futures since start: 12 (12 created, 12 launched, 12 finished)
[08:08:40.159] | : . ' Launching futures ...
[08:08:40.159] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:40.159] | : . ' , ; Workers: [n=2]
[08:08:40.159] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:08:40.161] | : . ' , ; FutureRegistry: ‘workers-623664460e19df44562b7fe4cf996cb6’
[08:08:40.161] | : . ' , ; requestWorker() ...
[08:08:40.161] | : . ' , ; ` requestNode() ...
[08:08:40.161] | : . ' , ; ` | Number of workers: 2
[08:08:40.161] | : . ' , ; ` | Polling for a free worker ...
[08:08:40.161] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:40.161] | : . ' , ; ` | : . Listing all futures
[08:08:40.161] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:40.162] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:40.162] | : . ' , ; ` | : Total time: 0
[08:08:40.162] | : . ' , ; ` | Polling for a free worker ... done
[08:08:40.162] | : . ' , ; ` | FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:40.162] | : . ' , ; ` | : Listing all futures
[08:08:40.162] | : . ' , ; ` | : Number of registered futures: 0
[08:08:40.162] | : . ' , ; ` | FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:40.162] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:40.162] | : . ' , ; ` | Index of first available worker: 1
[08:08:40.162] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:40.259] | : . ' , ; ` | : Worker is functional
[08:08:40.259] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:40.260] | : . ' , ; ` | : . Listing all futures
[08:08:40.260] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:40.260] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:40.260] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:40.260] | : . ' , ; ` requestNode() ... done
[08:08:40.260] | : . ' , ; ` cluster node index: 1
[08:08:40.260] | : . ' , ; requestWorker() ... done
[08:08:40.260] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:40.261] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:40.261] | : . ' , ; launchFuture() ...
[08:08:40.261] | : . ' , ; ` cluster node index: 1
[08:08:40.261] | : . ' , ; ` getFutureData() ...
[08:08:40.261] | : . ' , ; ` | getFutureCore() ...
[08:08:40.261] | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:08:40.261] | : . ' , ; ` | getFutureCore() ... done
[08:08:40.261] | : . ' , ; ` | getFutureCapture() ...
[08:08:40.262] | : . ' , ; ` | getFutureCapture() ... done
[08:08:40.262] | : . ' , ; ` | getFutureContext() ...
[08:08:40.262] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:40.262] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:40.262] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:40.262] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:40.262] | : . ' , ; ` | getFutureContext() ... done
[08:08:40.262] | : . ' , ; ` getFutureData() ... done
[08:08:40.263] | : . ' , ; ` FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'add', earlySignal = 0) ...
[08:08:40.263] | : . ' , ; ` | Appended future to position #1
[08:08:40.263] | : . ' , ; ` | Number of registered futures: 1
[08:08:40.263] | : . ' , ; ` FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'add', earlySignal = 0) ... done
[08:08:40.263] | : . ' , ; launchFuture() ... done
[08:08:40.263] | : . ' , ; MultisessionFuture started
[08:08:40.263] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:40.263] | : . ' Launching futures ... done
[08:08:40.264] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:40.264] | : . Using MultisessionFutureBackend ... done
[08:08:40.264] | : run() for ‘Future’ (<unnamed-41>) ... done
[08:08:40.264] | future(..., label = NULL) ... done
[08:08:40.264] | value() for MultisessionFuture (<unnamed-41>) ...
[08:08:40.264] | : result() for ClusterFuture ...
[08:08:40.264] | : . assertValidConnection() ...
[08:08:40.264] | : . ' cluster node index: 1
[08:08:40.265] | : . assertValidConnection() ... done
[08:08:40.265] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:40.265] | : . ' cluster node index: 1
[08:08:40.314] | : . ' [1] TRUE
[08:08:40.314] | : . ' received data:
[08:08:40.314] | : . ' List of 5
[08:08:40.314] | : . '  $ type   : chr "VALUE"
[08:08:40.314] | : . '  $ value  :List of 16
[08:08:40.314] | : . '   ..$ value              :List of 2
[08:08:40.314] | : . '   .. ..$ : num [1:2] 2 3
[08:08:40.314] | : . '   .. ..$ : num [1:2] 2 3
[08:08:40.314] | : . '   ..$ visible            : logi TRUE
[08:08:40.314] | : . '   ..$ stdout             : chr ""
[08:08:40.314] | : . '   ..$ conditions         : list()
[08:08:40.314] | : . '   ..$ rng                : logi FALSE
[08:08:40.314] | : . '   ..$ seed               : NULL
[08:08:40.314] | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:40.314] | : . '   ..$ misuseConnections  :List of 3
[08:08:40.314] | : . '   .. ..$ added   : NULL
[08:08:40.314] | : . '   .. ..$ removed : NULL
[08:08:40.314] | : . '   .. ..$ replaced: NULL
[08:08:40.314] | : . '   ..$ misuseDevices      : NULL
[08:08:40.314] | : . '   ..$ misuseDefaultDevice: list()
[08:08:40.314] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:40"
[08:08:40.314] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:40"
[08:08:40.314] | : . '   ..$ uuid               : chr [1:2] "98952eeb2580387bd4c4db2d30fd2531" "41"
[08:08:40.314] | : . '   ..$ session_uuid       : chr "f21ee30ff69e2e385c3cea002926a2be"
[08:08:40.314] | : . '   .. ..- attr(*, "source")=List of 5
[08:08:40.314] | : . '   .. .. ..$ host  : Named chr "285a5f234941"
[08:08:40.314] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:40.314] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:08:40.314] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:40.314] | : . '   .. .. ..$ pid   : int 69397
[08:08:40.314] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:37"
[08:08:40.314] | : . '   .. .. ..$ random: int 2147483647
[08:08:40.314] | : . '   ..$ r_info             :List of 4
[08:08:40.314] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:40.314] | : . '   .. .. ..$ : int [1:3] 4 5 0
[08:08:40.314] | : . '   .. ..$ os           : chr "unix"
[08:08:40.314] | : . '   .. ..$ os_name      : chr "Linux"
[08:08:40.314] | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:40.314] | : . '   ..$ version            : chr "1.8"
[08:08:40.314] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:40.314] | : . '  $ success: logi TRUE
[08:08:40.314] | : . '  $ time   : 'proc_time' Named num [1:5] 0.01 0 0.01 0 0
[08:08:40.314] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:40.314] | : . '  $ tag    : NULL
[08:08:40.326] | : . ' Received FutureResult
[08:08:40.326] | : . ' FutureResult:
[08:08:40.326] | : . ' value: ‘list’
[08:08:40.326] | : . ' visible: TRUE
[08:08:40.326] | : . ' stdout: character
[08:08:40.326] | : . ' conditions: [n = 0] 
[08:08:40.326] | : . ' RNG used: FALSE
[08:08:40.326] | : . ' duration: 0.009297132 secs (started 2025-06-17 08:08:40.304218)
[08:08:40.326] | : . ' version: 1.8
[08:08:40.326] | : . ' FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'remove', earlySignal = 0) ...
[08:08:40.326] | : . ' , Removed future from position #1
[08:08:40.327] | : . ' , Number of registered futures: 0
[08:08:40.327] | : . ' FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'remove', earlySignal = 0) ... done
[08:08:40.327] | : . ' Erased future from future backend
[08:08:40.327] | : . ' result() for ClusterFuture ...
[08:08:40.327] | : . ' , result already collected: FutureResult
[08:08:40.327] | : . ' result() for ClusterFuture ... done
[08:08:40.327] | : . ' signalConditions() ...
[08:08:40.327] | : . ' , include = ‘immediateCondition’
[08:08:40.327] | : . ' , exclude = 
[08:08:40.327] | : . ' , resignal = FALSE
[08:08:40.328] | : . ' , Number of conditions: 0
[08:08:40.328] | : . ' ,  int 0
[08:08:40.328] | : . ' signalConditions() ... done
[08:08:40.328] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:40.328] | : result() for ClusterFuture ... done
[08:08:40.328] | : result() for ClusterFuture ...
[08:08:40.328] | : . result already collected: FutureResult
[08:08:40.329] | : result() for ClusterFuture ... done
[08:08:40.329] | : signalConditions() ...
[08:08:40.329] | : . include = ‘immediateCondition’
[08:08:40.329] | : . exclude = 
[08:08:40.329] | : . resignal = FALSE
[08:08:40.329] | : . Number of conditions: 0
[08:08:40.329] | : .  int 0
[08:08:40.330] | : signalConditions() ... done
[08:08:40.330] | : relay stdout ...
[08:08:40.330] | : relay stdout ... done
[08:08:40.330] | : check for misuse ...
[08:08:40.330] | : check for misuse ... done
[08:08:40.330] | value() for MultisessionFuture (<unnamed-41>) ... done
List of 2
 $ : num [1:2] 2 3
 $ : num [1:2] 2 3
[08:08:40.331] | future(..., label = NULL) ...
[08:08:40.331] | : lazy: FALSE
[08:08:40.331] | : stdout: TRUE
[08:08:40.332] | : conditions: [n=1] ‘condition’
[08:08:40.332] | : gc: FALSE
[08:08:40.332] | : earlySignal: FALSE
[08:08:40.332] | : getGlobalsAndPackages() ...
[08:08:40.332] | : . Searching for globals ...
[08:08:40.366] | : . ' globals found: [17] ‘{’, ‘outer_function’, ‘map’, ‘:’, ‘~’, ‘inner_function’, ‘.x’, ‘if’, ‘inherits’, ‘<-’, ‘[[’, ‘-’, ‘eval’, ‘bquote’, ‘lapply’, ‘.’, ‘+’
[08:08:40.366] | : . Searching for globals ... done
[08:08:40.366] | : . Resolving globals: FALSE
[08:08:40.367] | : . Search for packages associated with the globals ...
[08:08:40.367] | : . ' Packages associated with globals: [1] ‘base’
[08:08:40.367] | : . ' Packages: [1] ‘base’
[08:08:40.367] | : . Search for packages associated with the globals ... done
[08:08:40.368] | : . Packages after dropping 'base': [0] 
[08:08:40.368] | : . globals: [3] ‘outer_function’, ‘map’, ‘inner_function’
[08:08:40.368] | : . packages: [0] 
[08:08:40.368] | : getGlobalsAndPackages() ... done
[08:08:40.368] | : run() for ‘Future’ (<unnamed-42>) ...
[08:08:40.368] | : . state: ‘created’
[08:08:40.368] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:40.369] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:40.369] | : . Using MultisessionFutureBackend ...
[08:08:40.369] | : . ' Number of futures since start: 13 (13 created, 13 launched, 13 finished)
[08:08:40.369] | : . ' Launching futures ...
[08:08:40.369] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:40.369] | : . ' , ; Workers: [n=2]
[08:08:40.369] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:08:40.371] | : . ' , ; FutureRegistry: ‘workers-623664460e19df44562b7fe4cf996cb6’
[08:08:40.371] | : . ' , ; requestWorker() ...
[08:08:40.371] | : . ' , ; ` requestNode() ...
[08:08:40.371] | : . ' , ; ` | Number of workers: 2
[08:08:40.371] | : . ' , ; ` | Polling for a free worker ...
[08:08:40.371] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:40.372] | : . ' , ; ` | : . Listing all futures
[08:08:40.372] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:40.372] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:40.372] | : . ' , ; ` | : Total time: 0
[08:08:40.372] | : . ' , ; ` | Polling for a free worker ... done
[08:08:40.372] | : . ' , ; ` | FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:40.372] | : . ' , ; ` | : Listing all futures
[08:08:40.372] | : . ' , ; ` | : Number of registered futures: 0
[08:08:40.372] | : . ' , ; ` | FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:40.372] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:40.373] | : . ' , ; ` | Index of first available worker: 1
[08:08:40.373] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:40.468] | : . ' , ; ` | : Worker is functional
[08:08:40.468] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ...
[08:08:40.468] | : . ' , ; ` | : . Listing all futures
[08:08:40.469] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:40.469] | : . ' , ; ` | : FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'list', earlySignal = 0) ... done
[08:08:40.469] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:40.469] | : . ' , ; ` requestNode() ... done
[08:08:40.469] | : . ' , ; ` cluster node index: 1
[08:08:40.469] | : . ' , ; requestWorker() ... done
[08:08:40.469] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:40.470] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:40.470] | : . ' , ; launchFuture() ...
[08:08:40.470] | : . ' , ; ` cluster node index: 1
[08:08:40.470] | : . ' , ; ` getFutureData() ...
[08:08:40.470] | : . ' , ; ` | getFutureCore() ...
[08:08:40.470] | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:08:40.470] | : . ' , ; ` | getFutureCore() ... done
[08:08:40.471] | : . ' , ; ` | getFutureCapture() ...
[08:08:40.471] | : . ' , ; ` | getFutureCapture() ... done
[08:08:40.471] | : . ' , ; ` | getFutureContext() ...
[08:08:40.471] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:40.471] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:40.471] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:40.471] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:40.471] | : . ' , ; ` | getFutureContext() ... done
[08:08:40.471] | : . ' , ; ` getFutureData() ... done
[08:08:40.472] | : . ' , ; ` FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'add', earlySignal = 0) ...
[08:08:40.472] | : . ' , ; ` | Appended future to position #1
[08:08:40.472] | : . ' , ; ` | Number of registered futures: 1
[08:08:40.472] | : . ' , ; ` FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'add', earlySignal = 0) ... done
[08:08:40.472] | : . ' , ; launchFuture() ... done
[08:08:40.472] | : . ' , ; MultisessionFuture started
[08:08:40.472] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:40.473] | : . ' Launching futures ... done
[08:08:40.473] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:40.473] | : . Using MultisessionFutureBackend ... done
[08:08:40.473] | : run() for ‘Future’ (<unnamed-42>) ... done
[08:08:40.473] | future(..., label = NULL) ... done
[08:08:40.473] | value() for MultisessionFuture (<unnamed-42>) ...
[08:08:40.473] | : result() for ClusterFuture ...
[08:08:40.473] | : . assertValidConnection() ...
[08:08:40.474] | : . ' cluster node index: 1
[08:08:40.474] | : . assertValidConnection() ... done
[08:08:40.474] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:40.474] | : . ' cluster node index: 1
[08:08:40.516] | : . ' [1] TRUE
[08:08:40.516] | : . ' received data:
[08:08:40.517] | : . ' List of 5
[08:08:40.517] | : . '  $ type   : chr "VALUE"
[08:08:40.517] | : . '  $ value  :List of 16
[08:08:40.517] | : . '   ..$ value              :List of 2
[08:08:40.517] | : . '   .. ..$ : num [1:2] 2 3
[08:08:40.517] | : . '   .. ..$ : num [1:2] 2 3
[08:08:40.517] | : . '   ..$ visible            : logi TRUE
[08:08:40.517] | : . '   ..$ stdout             : chr ""
[08:08:40.517] | : . '   ..$ conditions         : list()
[08:08:40.517] | : . '   ..$ rng                : logi FALSE
[08:08:40.517] | : . '   ..$ seed               : NULL
[08:08:40.517] | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:40.517] | : . '   ..$ misuseConnections  :List of 3
[08:08:40.517] | : . '   .. ..$ added   : NULL
[08:08:40.517] | : . '   .. ..$ removed : NULL
[08:08:40.517] | : . '   .. ..$ replaced: NULL
[08:08:40.517] | : . '   ..$ misuseDevices      : NULL
[08:08:40.517] | : . '   ..$ misuseDefaultDevice: list()
[08:08:40.517] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:40"
[08:08:40.517] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:40"
[08:08:40.517] | : . '   ..$ uuid               : chr [1:2] "98952eeb2580387bd4c4db2d30fd2531" "42"
[08:08:40.517] | : . '   ..$ session_uuid       : chr "f21ee30ff69e2e385c3cea002926a2be"
[08:08:40.517] | : . '   .. ..- attr(*, "source")=List of 5
[08:08:40.517] | : . '   .. .. ..$ host  : Named chr "285a5f234941"
[08:08:40.517] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:40.517] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:08:40.517] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:40.517] | : . '   .. .. ..$ pid   : int 69397
[08:08:40.517] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:37"
[08:08:40.517] | : . '   .. .. ..$ random: int 2147483647
[08:08:40.517] | : . '   ..$ r_info             :List of 4
[08:08:40.517] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:40.517] | : . '   .. .. ..$ : int [1:3] 4 5 0
[08:08:40.517] | : . '   .. ..$ os           : chr "unix"
[08:08:40.517] | : . '   .. ..$ os_name      : chr "Linux"
[08:08:40.517] | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:40.517] | : . '   ..$ version            : chr "1.8"
[08:08:40.517] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:40.517] | : . '  $ success: logi TRUE
[08:08:40.517] | : . '  $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[08:08:40.517] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:40.517] | : . '  $ tag    : NULL
[08:08:40.528] | : . ' Received FutureResult
[08:08:40.528] | : . ' FutureResult:
[08:08:40.528] | : . ' value: ‘list’
[08:08:40.528] | : . ' visible: TRUE
[08:08:40.528] | : . ' stdout: character
[08:08:40.528] | : . ' conditions: [n = 0] 
[08:08:40.528] | : . ' RNG used: FALSE
[08:08:40.528] | : . ' duration: 0.002842903 secs (started 2025-06-17 08:08:40.513294)
[08:08:40.528] | : . ' version: 1.8
[08:08:40.529] | : . ' FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'remove', earlySignal = 0) ...
[08:08:40.529] | : . ' , Removed future from position #1
[08:08:40.529] | : . ' , Number of registered futures: 0
[08:08:40.529] | : . ' FutureRegistry('workers-623664460e19df44562b7fe4cf996cb6', action = 'remove', earlySignal = 0) ... done
[08:08:40.529] | : . ' Erased future from future backend
[08:08:40.529] | : . ' result() for ClusterFuture ...
[08:08:40.529] | : . ' , result already collected: FutureResult
[08:08:40.530] | : . ' result() for ClusterFuture ... done
[08:08:40.530] | : . ' signalConditions() ...
[08:08:40.530] | : . ' , include = ‘immediateCondition’
[08:08:40.530] | : . ' , exclude = 
[08:08:40.530] | : . ' , resignal = FALSE
[08:08:40.530] | : . ' , Number of conditions: 0
[08:08:40.530] | : . ' ,  int 0
[08:08:40.531] | : . ' signalConditions() ... done
[08:08:40.531] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:40.531] | : result() for ClusterFuture ... done
[08:08:40.531] | : result() for ClusterFuture ...
[08:08:40.531] | : . result already collected: FutureResult
[08:08:40.531] | : result() for ClusterFuture ... done
[08:08:40.531] | : signalConditions() ...
[08:08:40.531] | : . include = ‘immediateCondition’
[08:08:40.531] | : . exclude = 
[08:08:40.532] | : . resignal = FALSE
[08:08:40.532] | : . Number of conditions: 0
[08:08:40.532] | : .  int 0
[08:08:40.532] | : signalConditions() ... done
[08:08:40.532] | : relay stdout ...
[08:08:40.532] | : relay stdout ... done
[08:08:40.532] | : check for misuse ...
[08:08:40.533] | : check for misuse ... done
[08:08:40.533] | value() for MultisessionFuture (<unnamed-42>) ... done
List of 2
 $ : num [1:2] 2 3
 $ : num [1:2] 2 3
Testing with 2 cores ... DONE

> message("*** Globals - formulas ... DONE")
*** Globals - formulas ... DONE
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=3s, sys.self=0.2s, elapsed=6s, user.child=1s, sys.child=0.6s
Test ‘globals,formulas’ ... success
> 
