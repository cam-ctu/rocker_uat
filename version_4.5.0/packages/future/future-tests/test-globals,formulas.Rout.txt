
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script incl/testme/test-globals,formulas.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future:::testme("globals,formulas")
Test ‘globals,formulas’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future/testme/test-globals,formulas.R’

> library(future)
[10:53:06.805] Option 'future.startup.script': TRUE
[10:53:06.805] Future startup scripts considered: ‘.future.R’, ‘~/.future.R’
[10:53:06.805] Future startup scripts found: <none>

> library(datasets)

> library(stats)

> message("*** Globals - formulas ...")
*** Globals - formulas ...

> ctl <- c(4.17, 5.58, 5.18, 6.11, 4.5, 4.61, 5.17, 
+     4.53, 5.33, 5.14)

> trt <- c(4.81, 4.17, 4.41, 3.59, 5.87, 3.83, 6.03, 
+     4.89, 4.32, 4.69)

> group <- gl(2, 10, 20, labels = c("Ctl", "Trt"))

> weight <- c(ctl, trt)

> ctl <- trt <- NULL

> fit_i <- lm(weight ~ group - 1)

> print(fit_i)

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  


> x <- c(1, 1, 2, 2, 2)

> tbl_ii <- xtabs(~x)

> print(tbl_ii)
x
1 2 
2 3 

> exprs <- list(a = substitute({
+     lm(dist ~ . - 1, data = cars)
+ }), b = substitute({
+     lm(dist ~ . + 0, data = cars)
+ }), c = substitute({ .... [TRUNCATED] 

> map <- function(.x, .f, ...) {
+     if (inherits(.f, "formula")) {
+         expr <- .f[[-1]]
+         .f <- eval(bquote(function(...) {
+         .... [TRUNCATED] 

> inner_function <- function(x) {
+     x + 1
+ }

> outer_function <- function(x) {
+     map(1:2, ~inner_function(.x))
+ }

> y_iv <- outer_function(1)

> str(y_iv)
List of 2
 $ : num [1:2] 2 3
 $ : num [1:2] 2 3

> for (cores in 1:availCores) {
+     message(sprintf("Testing with %d cores ...", cores))
+     options(mc.cores = cores)
+     message("availableCor ..." ... [TRUNCATED] 
Testing with 1 cores ...
availableCores(): 1
- plan('sequential') ...
[10:53:06.846] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:06.846] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:53:06.847] |  :  all.equal() for FutureStrategyList ...
[10:53:06.847] |  :  .  New stack:
[10:53:06.847] |  :  .  List of 1
[10:53:06.847] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:06.847] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:06.847] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.847] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.847] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.847] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:06.847] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:06.849] |  :  .  Old stack:
[10:53:06.849] |  :  .  List of 1
[10:53:06.849] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:06.849] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:06.849] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.849] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.849] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.849] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:53:06.849] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:06.851] |  :  .  Not identical
[10:53:06.851] |  :  .  all.equal() for future ...
[10:53:06.851] |  :  .  |  List of 2
[10:53:06.851] |  :  .  |   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:06.851] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:06.851] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.851] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.851] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.851] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:06.851] |  :  .  |   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:06.851] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:06.851] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.851] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.851] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.851] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:06.855] |  :  .  all.equal() for future ... done
[10:53:06.855] |  :  all.equal() for FutureStrategyList ... done
[10:53:06.855] |  :  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:06.855] |  :  List of future strategies:
[10:53:06.855] |  :  1. sequential:
[10:53:06.855] |  :     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:06.855] |  :     - tweaked: FALSE
[10:53:06.855] |  :     - call: plan(sequential)
[10:53:06.856] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:53:06.856] plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
- lm(<formula>) ...
[10:53:06.857] getGlobalsAndPackages() ...
[10:53:06.857] |  Searching for globals ...
[10:53:06.865] |  :  globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[10:53:06.865] |  Searching for globals ... DONE
[10:53:06.865] |  Resolving globals: FALSE
[10:53:06.865] |  Search for packages associated with the globals ...
[10:53:06.865] |  :  Packages associated with globals: [2] ‘base’, ‘stats’
[10:53:06.866] |  :  Packages: [2] ‘base’, ‘stats’
[10:53:06.866] |  Search for packages associated with the globals ... DONE
[10:53:06.866] |  Packages after dropping 'base': [1] ‘stats’
[10:53:06.866] |  Packages after dropping non-attached packages: [1] ‘stats’
[10:53:06.866] |  globals: [2] ‘weight’, ‘group’
[10:53:06.866] |  packages: [1] ‘stats’
[10:53:06.867] getGlobalsAndPackages() ... done
[10:53:06.867] run() for Future (‘Future’) ...
[10:53:06.867] |  state: ‘created’
[10:53:06.867] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:06.868] |  :  makeFutureBackend(<sequential>) ...
[10:53:06.868] |  :  .  Backend function: <‘NULL’>
[10:53:06.868] |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:06.868] |  :  makeFutureBackend(<sequential>) ... done
[10:53:06.868] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:06.868] |  Using SequentialFutureBackend ...
[10:53:06.868] |  :  Launching futures ...
[10:53:06.869] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:06.869] |  :  .  |  getFutureData() ...
[10:53:06.869] |  :  .  |  :  getFutureCore() ...
[10:53:06.869] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘stats’
[10:53:06.869] |  :  .  |  :  getFutureCore() ... done
[10:53:06.869] |  :  .  |  :  getFutureCapture() ...
[10:53:06.869] |  :  .  |  :  getFutureCapture() ... done
[10:53:06.869] |  :  .  |  :  getFutureContext() ...
[10:53:06.870] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:06.870] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:06.870] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:06.870] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:06.870] |  :  .  |  :  getFutureContext() ... done
[10:53:06.870] |  :  .  |  getFutureData() ... done
[10:53:06.871] |  :  .  |  attachPackages() ...
[10:53:06.871] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:06.871] |  :  .  |  attachPackages() ... DONE
[10:53:06.871] |  :  .  |  attachPackages() ...
[10:53:06.872] |  :  .  |  :  packages: [n=1] ‘stats’
[10:53:06.872] |  :  .  |  attachPackages() ... DONE
[10:53:06.872] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:06.872] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:06.872] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:06.873] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:06.873] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:06.873] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:06.873] |  :  .  |  :  .  |  New stack:
[10:53:06.873] |  :  .  |  :  .  |  List of 1
[10:53:06.873] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:06.873] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:06.873] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.873] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.873] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.873] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:06.873] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:06.875] |  :  .  |  :  .  |  Old stack:
[10:53:06.875] |  :  .  |  :  .  |  List of 1
[10:53:06.875] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:06.875] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:06.875] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.875] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.875] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.875] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:06.875] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:06.875] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.875] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.875] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:06.878] |  :  .  |  :  .  |  Not identical
[10:53:06.878] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:06.878] |  :  .  |  :  .  |  :  List of 2
[10:53:06.878] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:06.878] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:06.878] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.878] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.878] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.878] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:06.878] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:06.878] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:06.878] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.878] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.878] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.878] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:06.878] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:06.878] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.878] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.883] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:06.883] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:06.883] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:06.883] |  :  .  |  :  .  List of future strategies:
[10:53:06.883] |  :  .  |  :  .  1. sequential:
[10:53:06.883] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:06.883] |  :  .  |  :  .     - tweaked: FALSE
[10:53:06.883] |  :  .  |  :  .     - call: plan(sequential)
[10:53:06.883] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:06.884] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:06.884] |  :  .  |  assign_globals() ...
[10:53:06.884] |  :  .  |  List of 2
[10:53:06.884] |  :  .  |   $ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[10:53:06.884] |  :  .  |   $ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[10:53:06.884] |  :  .  |   - attr(*, "where")=List of 2
[10:53:06.884] |  :  .  |    ..$ weight:<environment: R_EmptyEnv> 
[10:53:06.884] |  :  .  |    ..$ group :<environment: R_EmptyEnv> 
[10:53:06.884] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:06.884] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:53:06.884] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:06.884] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:06.888] |  :  .  |  - copied ‘weight’ to environment
[10:53:06.888] |  :  .  |  - copied ‘group’ to environment
[10:53:06.888] |  :  .  |  assign_globals() ... done
[10:53:06.891] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:06.891] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:06.891] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:06.891] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:06.891] |  :  .  |  :  .  |  :  New stack:
[10:53:06.892] |  :  .  |  :  .  |  :  List of 1
[10:53:06.892] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:06.892] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:06.892] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.892] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.892] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.892] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:06.892] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:06.892] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.892] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.892] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:06.894] |  :  .  |  :  .  |  :  Old stack:
[10:53:06.894] |  :  .  |  :  .  |  :  List of 1
[10:53:06.894] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:06.894] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:06.894] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.894] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.894] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.894] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:06.894] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:06.894] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.894] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.894] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:06.897] |  :  .  |  :  .  |  :  Identical
[10:53:06.897] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:06.897] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:06.897] |  :  .  |  :  .  |  List of future strategies:
[10:53:06.897] |  :  .  |  :  .  |  1. sequential:
[10:53:06.897] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:06.897] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:06.897] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:06.898] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:06.898] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:06.898] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:06.898] |  :  .  |  SequentialFuture started (and completed)
[10:53:06.899] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:06.899] |  :  Launching futures ... done
[10:53:06.899] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:06.899] |  Using SequentialFutureBackend ... done
[10:53:06.899] run() for Future (‘SequentialFuture’) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[10:53:06.901] getGlobalsAndPackages() ...
[10:53:06.901] |  Searching for globals ...
[10:53:06.903] |  :  globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[10:53:06.903] |  Searching for globals ... DONE
[10:53:06.903] |  Resolving globals: FALSE
[10:53:06.903] |  Search for packages associated with the globals ...
[10:53:06.903] |  :  Packages associated with globals: [2] ‘base’, ‘stats’
[10:53:06.903] |  :  Packages: [2] ‘base’, ‘stats’
[10:53:06.904] |  Search for packages associated with the globals ... DONE
[10:53:06.904] |  Packages after dropping 'base': [1] ‘stats’
[10:53:06.904] |  Packages after dropping non-attached packages: [1] ‘stats’
[10:53:06.904] |  globals: [2] ‘weight’, ‘group’
[10:53:06.904] |  packages: [1] ‘stats’
[10:53:06.904] getGlobalsAndPackages() ... done
[10:53:06.904] run() for Future (‘Future’) ...
[10:53:06.904] |  state: ‘created’
[10:53:06.905] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:06.905] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:06.905] |  Using SequentialFutureBackend ...
[10:53:06.905] |  :  Launching futures ...
[10:53:06.905] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:06.905] |  :  .  |  getFutureData() ...
[10:53:06.905] |  :  .  |  :  getFutureCore() ...
[10:53:06.905] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘stats’
[10:53:06.905] |  :  .  |  :  getFutureCore() ... done
[10:53:06.905] |  :  .  |  :  getFutureCapture() ...
[10:53:06.906] |  :  .  |  :  getFutureCapture() ... done
[10:53:06.906] |  :  .  |  :  getFutureContext() ...
[10:53:06.906] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:06.906] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:06.906] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:06.906] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:06.906] |  :  .  |  :  getFutureContext() ... done
[10:53:06.906] |  :  .  |  getFutureData() ... done
[10:53:06.906] |  :  .  |  attachPackages() ...
[10:53:06.906] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:06.907] |  :  .  |  attachPackages() ... DONE
[10:53:06.908] |  :  .  |  attachPackages() ...
[10:53:06.908] |  :  .  |  :  packages: [n=1] ‘stats’
[10:53:06.908] |  :  .  |  attachPackages() ... DONE
[10:53:06.908] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:06.908] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:06.908] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:06.909] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:06.909] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:06.909] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:06.909] |  :  .  |  :  .  |  New stack:
[10:53:06.909] |  :  .  |  :  .  |  List of 1
[10:53:06.909] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:06.909] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:06.909] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.909] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.909] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.909] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:06.909] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:06.911] |  :  .  |  :  .  |  Old stack:
[10:53:06.911] |  :  .  |  :  .  |  List of 1
[10:53:06.911] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:06.911] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:06.911] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.911] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.911] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.911] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:06.911] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:06.911] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.911] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.911] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:06.914] |  :  .  |  :  .  |  Not identical
[10:53:06.914] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:06.914] |  :  .  |  :  .  |  :  List of 2
[10:53:06.914] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:06.914] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:06.914] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.914] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.914] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.914] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:06.914] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:06.914] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:06.914] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.914] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.914] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.914] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:06.914] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:06.914] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.914] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.919] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:06.919] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:06.919] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:06.919] |  :  .  |  :  .  List of future strategies:
[10:53:06.919] |  :  .  |  :  .  1. sequential:
[10:53:06.919] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:06.919] |  :  .  |  :  .     - tweaked: FALSE
[10:53:06.919] |  :  .  |  :  .     - call: plan(sequential)
[10:53:06.919] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:06.919] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:06.920] |  :  .  |  assign_globals() ...
[10:53:06.920] |  :  .  |  List of 2
[10:53:06.920] |  :  .  |   $ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[10:53:06.920] |  :  .  |   $ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[10:53:06.920] |  :  .  |   - attr(*, "where")=List of 2
[10:53:06.920] |  :  .  |    ..$ weight:<environment: R_EmptyEnv> 
[10:53:06.920] |  :  .  |    ..$ group :<environment: R_EmptyEnv> 
[10:53:06.920] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:06.920] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:53:06.920] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:06.920] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:06.923] |  :  .  |  - copied ‘weight’ to environment
[10:53:06.923] |  :  .  |  - copied ‘group’ to environment
[10:53:06.923] |  :  .  |  assign_globals() ... done
[10:53:06.925] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:06.925] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:06.925] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:06.925] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:06.925] |  :  .  |  :  .  |  :  New stack:
[10:53:06.925] |  :  .  |  :  .  |  :  List of 1
[10:53:06.925] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:06.925] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:06.925] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.925] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.925] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.925] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:06.925] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:06.925] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.925] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.925] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:06.929] |  :  .  |  :  .  |  :  Old stack:
[10:53:06.929] |  :  .  |  :  .  |  :  List of 1
[10:53:06.929] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:06.929] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:06.929] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.929] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.929] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.929] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:06.929] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:06.929] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.929] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.929] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:06.932] |  :  .  |  :  .  |  :  Identical
[10:53:06.932] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:06.932] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:06.932] |  :  .  |  :  .  |  List of future strategies:
[10:53:06.932] |  :  .  |  :  .  |  1. sequential:
[10:53:06.932] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:06.932] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:06.932] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:06.932] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:06.933] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:06.933] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:06.933] |  :  .  |  SequentialFuture started (and completed)
[10:53:06.933] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:06.933] |  :  Launching futures ... done
[10:53:06.933] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:06.933] |  Using SequentialFutureBackend ... done
[10:53:06.933] run() for Future (‘SequentialFuture’) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[10:53:06.935] getGlobalsAndPackages() ...
[10:53:06.936] |  Searching for globals ...
[10:53:06.937] |  :  globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[10:53:06.937] |  Searching for globals ... DONE
[10:53:06.937] |  Resolving globals: FALSE
[10:53:06.937] |  Search for packages associated with the globals ...
[10:53:06.938] |  :  Packages associated with globals: [2] ‘base’, ‘stats’
[10:53:06.938] |  :  Packages: [2] ‘base’, ‘stats’
[10:53:06.938] |  Search for packages associated with the globals ... DONE
[10:53:06.938] |  Packages after dropping 'base': [1] ‘stats’
[10:53:06.938] |  Packages after dropping non-attached packages: [1] ‘stats’
[10:53:06.938] |  globals: [2] ‘weight’, ‘group’
[10:53:06.938] |  packages: [1] ‘stats’
[10:53:06.939] getGlobalsAndPackages() ... done
[10:53:06.939] run() for Future (‘Future’) ...
[10:53:06.939] |  state: ‘created’
[10:53:06.939] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:06.939] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:06.939] |  Using SequentialFutureBackend ...
[10:53:06.939] |  :  Launching futures ...
[10:53:06.939] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:06.939] |  :  .  |  getFutureData() ...
[10:53:06.940] |  :  .  |  :  getFutureCore() ...
[10:53:06.940] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘stats’
[10:53:06.940] |  :  .  |  :  getFutureCore() ... done
[10:53:06.940] |  :  .  |  :  getFutureCapture() ...
[10:53:06.940] |  :  .  |  :  getFutureCapture() ... done
[10:53:06.940] |  :  .  |  :  getFutureContext() ...
[10:53:06.940] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:06.940] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:06.940] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:06.940] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:06.940] |  :  .  |  :  getFutureContext() ... done
[10:53:06.941] |  :  .  |  getFutureData() ... done
[10:53:06.941] |  :  .  |  attachPackages() ...
[10:53:06.941] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:06.941] |  :  .  |  attachPackages() ... DONE
[10:53:06.941] |  :  .  |  attachPackages() ...
[10:53:06.941] |  :  .  |  :  packages: [n=1] ‘stats’
[10:53:06.941] |  :  .  |  attachPackages() ... DONE
[10:53:06.942] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:06.942] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:06.942] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:06.942] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:06.942] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:06.942] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:06.942] |  :  .  |  :  .  |  New stack:
[10:53:06.942] |  :  .  |  :  .  |  List of 1
[10:53:06.942] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:06.942] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:06.942] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.942] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.942] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.942] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:06.942] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:06.945] |  :  .  |  :  .  |  Old stack:
[10:53:06.945] |  :  .  |  :  .  |  List of 1
[10:53:06.945] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:06.945] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:06.945] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.945] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.945] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.945] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:06.945] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:06.945] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.945] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.945] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:06.948] |  :  .  |  :  .  |  Not identical
[10:53:06.948] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:06.949] |  :  .  |  :  .  |  :  List of 2
[10:53:06.949] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:06.949] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:06.949] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.949] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.949] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.949] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:06.949] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:06.949] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:06.949] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.949] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.949] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.949] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:06.949] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:06.949] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.949] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.953] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:06.953] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:06.953] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:06.953] |  :  .  |  :  .  List of future strategies:
[10:53:06.953] |  :  .  |  :  .  1. sequential:
[10:53:06.953] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:06.953] |  :  .  |  :  .     - tweaked: FALSE
[10:53:06.953] |  :  .  |  :  .     - call: plan(sequential)
[10:53:06.954] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:06.954] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:06.954] |  :  .  |  assign_globals() ...
[10:53:06.954] |  :  .  |  List of 2
[10:53:06.954] |  :  .  |   $ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[10:53:06.954] |  :  .  |   $ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[10:53:06.954] |  :  .  |   - attr(*, "where")=List of 2
[10:53:06.954] |  :  .  |    ..$ weight:<environment: R_EmptyEnv> 
[10:53:06.954] |  :  .  |    ..$ group :<environment: R_EmptyEnv> 
[10:53:06.954] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:06.954] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:53:06.954] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:06.954] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:06.957] |  :  .  |  - copied ‘weight’ to environment
[10:53:06.957] |  :  .  |  - copied ‘group’ to environment
[10:53:06.957] |  :  .  |  assign_globals() ... done
[10:53:06.959] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:06.959] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:06.959] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:06.959] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:06.959] |  :  .  |  :  .  |  :  New stack:
[10:53:06.960] |  :  .  |  :  .  |  :  List of 1
[10:53:06.960] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:06.960] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:06.960] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.960] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.960] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.960] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:06.960] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:06.960] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.960] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.960] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:06.962] |  :  .  |  :  .  |  :  Old stack:
[10:53:06.962] |  :  .  |  :  .  |  :  List of 1
[10:53:06.962] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:06.962] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:06.962] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.962] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.962] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.962] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:06.962] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:06.962] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.962] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.962] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:06.966] |  :  .  |  :  .  |  :  Identical
[10:53:06.966] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:06.966] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:06.966] |  :  .  |  :  .  |  List of future strategies:
[10:53:06.966] |  :  .  |  :  .  |  1. sequential:
[10:53:06.966] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:06.966] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:06.966] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:06.967] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:06.967] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:06.967] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:06.967] |  :  .  |  SequentialFuture started (and completed)
[10:53:06.967] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:06.967] |  :  Launching futures ... done
[10:53:06.967] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:06.967] |  Using SequentialFutureBackend ... done
[10:53:06.967] run() for Future (‘SequentialFuture’) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[10:53:06.969] getGlobalsAndPackages() ...
[10:53:06.969] |  Searching for globals ...
[10:53:06.971] |  :  globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[10:53:06.971] |  Searching for globals ... DONE
[10:53:06.971] |  Resolving globals: FALSE
[10:53:06.971] |  Search for packages associated with the globals ...
[10:53:06.971] |  :  Packages associated with globals: [2] ‘base’, ‘stats’
[10:53:06.971] |  :  Packages: [2] ‘base’, ‘stats’
[10:53:06.972] |  Search for packages associated with the globals ... DONE
[10:53:06.972] |  Packages after dropping 'base': [1] ‘stats’
[10:53:06.972] |  Packages after dropping non-attached packages: [1] ‘stats’
[10:53:06.972] |  globals: [2] ‘weight’, ‘group’
[10:53:06.972] |  packages: [1] ‘stats’
[10:53:06.972] getGlobalsAndPackages() ... done
[10:53:06.972] run() for Future (‘Future’) ...
[10:53:06.972] |  state: ‘created’
[10:53:06.973] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:06.973] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:06.973] |  Using SequentialFutureBackend ...
[10:53:06.973] |  :  Launching futures ...
[10:53:06.973] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:06.973] |  :  .  |  getFutureData() ...
[10:53:06.973] |  :  .  |  :  getFutureCore() ...
[10:53:06.973] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘stats’
[10:53:06.973] |  :  .  |  :  getFutureCore() ... done
[10:53:06.973] |  :  .  |  :  getFutureCapture() ...
[10:53:06.973] |  :  .  |  :  getFutureCapture() ... done
[10:53:06.974] |  :  .  |  :  getFutureContext() ...
[10:53:06.974] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:06.974] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:06.974] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:06.974] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:06.974] |  :  .  |  :  getFutureContext() ... done
[10:53:06.974] |  :  .  |  getFutureData() ... done
[10:53:06.974] |  :  .  |  attachPackages() ...
[10:53:06.974] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:06.974] |  :  .  |  attachPackages() ... DONE
[10:53:06.975] |  :  .  |  attachPackages() ...
[10:53:06.975] |  :  .  |  :  packages: [n=1] ‘stats’
[10:53:06.975] |  :  .  |  attachPackages() ... DONE
[10:53:06.975] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:06.975] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:06.975] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:06.976] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:06.976] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:06.976] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:06.976] |  :  .  |  :  .  |  New stack:
[10:53:06.976] |  :  .  |  :  .  |  List of 1
[10:53:06.976] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:06.976] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:06.976] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.976] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.976] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.976] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:06.976] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:06.978] |  :  .  |  :  .  |  Old stack:
[10:53:06.978] |  :  .  |  :  .  |  List of 1
[10:53:06.978] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:06.978] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:06.978] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.978] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.978] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.978] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:06.978] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:06.978] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.978] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.978] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:06.981] |  :  .  |  :  .  |  Not identical
[10:53:06.981] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:06.981] |  :  .  |  :  .  |  :  List of 2
[10:53:06.981] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:06.981] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:06.981] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.981] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.981] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.981] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:06.981] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:06.981] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:06.981] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.981] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.981] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.981] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:06.981] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:06.981] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.981] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.986] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:06.986] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:06.986] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:06.987] |  :  .  |  :  .  List of future strategies:
[10:53:06.987] |  :  .  |  :  .  1. sequential:
[10:53:06.987] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:06.987] |  :  .  |  :  .     - tweaked: FALSE
[10:53:06.987] |  :  .  |  :  .     - call: plan(sequential)
[10:53:06.987] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:06.987] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:06.987] |  :  .  |  assign_globals() ...
[10:53:06.987] |  :  .  |  List of 2
[10:53:06.987] |  :  .  |   $ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[10:53:06.987] |  :  .  |   $ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[10:53:06.987] |  :  .  |   - attr(*, "where")=List of 2
[10:53:06.987] |  :  .  |    ..$ weight:<environment: R_EmptyEnv> 
[10:53:06.987] |  :  .  |    ..$ group :<environment: R_EmptyEnv> 
[10:53:06.987] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:06.987] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:53:06.987] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:06.987] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:06.990] |  :  .  |  - copied ‘weight’ to environment
[10:53:06.990] |  :  .  |  - copied ‘group’ to environment
[10:53:06.990] |  :  .  |  assign_globals() ... done
[10:53:06.992] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:06.993] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:06.993] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:06.993] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:06.993] |  :  .  |  :  .  |  :  New stack:
[10:53:06.993] |  :  .  |  :  .  |  :  List of 1
[10:53:06.993] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:06.993] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:06.993] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.993] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.993] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.993] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:06.993] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:06.993] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.993] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.993] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:06.996] |  :  .  |  :  .  |  :  Old stack:
[10:53:06.996] |  :  .  |  :  .  |  :  List of 1
[10:53:06.996] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:06.996] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:06.996] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.996] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.996] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.996] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:06.996] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:06.996] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:06.996] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:06.996] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:06.999] |  :  .  |  :  .  |  :  Identical
[10:53:06.999] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:06.999] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:06.999] |  :  .  |  :  .  |  List of future strategies:
[10:53:06.999] |  :  .  |  :  .  |  1. sequential:
[10:53:06.999] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:06.999] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:06.999] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:06.999] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:06.999] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.000] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.000] |  :  .  |  SequentialFuture started (and completed)
[10:53:07.000] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:07.000] |  :  Launching futures ... done
[10:53:07.001] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:07.001] |  Using SequentialFutureBackend ... done
[10:53:07.001] run() for Future (‘SequentialFuture’) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[10:53:07.003] getGlobalsAndPackages() ...
[10:53:07.003] |  Searching for globals ...
[10:53:07.004] |  :  globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[10:53:07.004] |  Searching for globals ... DONE
[10:53:07.004] |  Resolving globals: FALSE
[10:53:07.005] |  Search for packages associated with the globals ...
[10:53:07.005] |  :  Packages associated with globals: [2] ‘base’, ‘stats’
[10:53:07.005] |  :  Packages: [2] ‘base’, ‘stats’
[10:53:07.005] |  Search for packages associated with the globals ... DONE
[10:53:07.005] |  Packages after dropping 'base': [1] ‘stats’
[10:53:07.005] |  Packages after dropping non-attached packages: [1] ‘stats’
[10:53:07.006] |  globals: [2] ‘weight’, ‘group’
[10:53:07.006] |  packages: [1] ‘stats’
[10:53:07.006] getGlobalsAndPackages() ... done
[10:53:07.006] run() for Future (‘Future’) ...
[10:53:07.006] |  state: ‘created’
[10:53:07.006] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.006] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.006] |  Using SequentialFutureBackend ...
[10:53:07.006] |  :  Launching futures ...
[10:53:07.007] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:07.007] |  :  .  |  getFutureData() ...
[10:53:07.007] |  :  .  |  :  getFutureCore() ...
[10:53:07.007] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘stats’
[10:53:07.007] |  :  .  |  :  getFutureCore() ... done
[10:53:07.007] |  :  .  |  :  getFutureCapture() ...
[10:53:07.007] |  :  .  |  :  getFutureCapture() ... done
[10:53:07.007] |  :  .  |  :  getFutureContext() ...
[10:53:07.007] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.007] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:07.008] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.008] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:07.008] |  :  .  |  :  getFutureContext() ... done
[10:53:07.008] |  :  .  |  getFutureData() ... done
[10:53:07.008] |  :  .  |  attachPackages() ...
[10:53:07.008] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:07.008] |  :  .  |  attachPackages() ... DONE
[10:53:07.008] |  :  .  |  attachPackages() ...
[10:53:07.008] |  :  .  |  :  packages: [n=1] ‘stats’
[10:53:07.009] |  :  .  |  attachPackages() ... DONE
[10:53:07.009] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.009] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:07.009] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.009] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.010] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.010] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:07.010] |  :  .  |  :  .  |  New stack:
[10:53:07.010] |  :  .  |  :  .  |  List of 1
[10:53:07.010] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.010] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.010] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.010] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.010] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.010] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.010] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.012] |  :  .  |  :  .  |  Old stack:
[10:53:07.012] |  :  .  |  :  .  |  List of 1
[10:53:07.012] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.012] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.012] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.012] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.012] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.012] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:07.012] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.012] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.012] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.012] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.015] |  :  .  |  :  .  |  Not identical
[10:53:07.015] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:07.015] |  :  .  |  :  .  |  :  List of 2
[10:53:07.015] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.015] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.015] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.015] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.015] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.015] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.015] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.015] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.015] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.015] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.015] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.015] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:07.015] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.015] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.015] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.020] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:07.020] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:07.020] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:07.020] |  :  .  |  :  .  List of future strategies:
[10:53:07.020] |  :  .  |  :  .  1. sequential:
[10:53:07.020] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:07.020] |  :  .  |  :  .     - tweaked: FALSE
[10:53:07.020] |  :  .  |  :  .     - call: plan(sequential)
[10:53:07.021] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.021] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.021] |  :  .  |  assign_globals() ...
[10:53:07.021] |  :  .  |  List of 2
[10:53:07.021] |  :  .  |   $ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[10:53:07.021] |  :  .  |   $ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[10:53:07.021] |  :  .  |   - attr(*, "where")=List of 2
[10:53:07.021] |  :  .  |    ..$ weight:<environment: R_EmptyEnv> 
[10:53:07.021] |  :  .  |    ..$ group :<environment: R_EmptyEnv> 
[10:53:07.021] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:07.021] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:53:07.021] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:07.021] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:07.024] |  :  .  |  - copied ‘weight’ to environment
[10:53:07.024] |  :  .  |  - copied ‘group’ to environment
[10:53:07.024] |  :  .  |  assign_globals() ... done
[10:53:07.026] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.026] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.027] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.027] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:07.027] |  :  .  |  :  .  |  :  New stack:
[10:53:07.027] |  :  .  |  :  .  |  :  List of 1
[10:53:07.027] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.027] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.027] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.027] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.027] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.027] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:07.027] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.027] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.027] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.027] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.030] |  :  .  |  :  .  |  :  Old stack:
[10:53:07.030] |  :  .  |  :  .  |  :  List of 1
[10:53:07.030] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.030] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.030] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.030] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.030] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.030] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:07.030] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.030] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.030] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.030] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.032] |  :  .  |  :  .  |  :  Identical
[10:53:07.032] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:07.033] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:07.033] |  :  .  |  :  .  |  List of future strategies:
[10:53:07.033] |  :  .  |  :  .  |  1. sequential:
[10:53:07.033] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:07.033] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:07.033] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:07.033] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.033] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.033] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.033] |  :  .  |  SequentialFuture started (and completed)
[10:53:07.034] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:07.034] |  :  Launching futures ... done
[10:53:07.034] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:07.034] |  Using SequentialFutureBackend ... done
[10:53:07.034] run() for Future (‘SequentialFuture’) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

- Globals - one-side formulas, e.g. xtabs(~ x) ...
[10:53:07.035] getGlobalsAndPackages() ...
[10:53:07.036] |  Searching for globals ...
[10:53:07.037] |  :  globals found: [4] ‘{’, ‘xtabs’, ‘x’, ‘~’
[10:53:07.038] |  Searching for globals ... DONE
[10:53:07.038] |  Resolving globals: FALSE
[10:53:07.038] |  Search for packages associated with the globals ...
[10:53:07.038] |  :  Packages associated with globals: [2] ‘base’, ‘stats’
[10:53:07.038] |  :  Packages: [2] ‘base’, ‘stats’
[10:53:07.038] |  Search for packages associated with the globals ... DONE
[10:53:07.038] |  Packages after dropping 'base': [1] ‘stats’
[10:53:07.039] |  Packages after dropping non-attached packages: [1] ‘stats’
[10:53:07.039] |  globals: [1] ‘x’
[10:53:07.039] |  packages: [1] ‘stats’
[10:53:07.039] getGlobalsAndPackages() ... done
[10:53:07.039] run() for Future (‘Future’) ...
[10:53:07.039] |  state: ‘created’
[10:53:07.039] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.039] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.039] |  Using SequentialFutureBackend ...
[10:53:07.040] |  :  Launching futures ...
[10:53:07.040] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:07.040] |  :  .  |  getFutureData() ...
[10:53:07.040] |  :  .  |  :  getFutureCore() ...
[10:53:07.040] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘stats’
[10:53:07.040] |  :  .  |  :  getFutureCore() ... done
[10:53:07.040] |  :  .  |  :  getFutureCapture() ...
[10:53:07.040] |  :  .  |  :  getFutureCapture() ... done
[10:53:07.040] |  :  .  |  :  getFutureContext() ...
[10:53:07.040] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.040] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:07.041] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.041] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:07.041] |  :  .  |  :  getFutureContext() ... done
[10:53:07.041] |  :  .  |  getFutureData() ... done
[10:53:07.041] |  :  .  |  attachPackages() ...
[10:53:07.041] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:07.041] |  :  .  |  attachPackages() ... DONE
[10:53:07.041] |  :  .  |  attachPackages() ...
[10:53:07.041] |  :  .  |  :  packages: [n=1] ‘stats’
[10:53:07.042] |  :  .  |  attachPackages() ... DONE
[10:53:07.042] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.042] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:07.042] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.042] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.043] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.043] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:07.043] |  :  .  |  :  .  |  New stack:
[10:53:07.043] |  :  .  |  :  .  |  List of 1
[10:53:07.043] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.043] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.043] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.043] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.043] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.043] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.043] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.045] |  :  .  |  :  .  |  Old stack:
[10:53:07.045] |  :  .  |  :  .  |  List of 1
[10:53:07.045] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.045] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.045] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.045] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.045] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.045] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:07.045] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.045] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.045] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.045] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.048] |  :  .  |  :  .  |  Not identical
[10:53:07.048] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:07.048] |  :  .  |  :  .  |  :  List of 2
[10:53:07.048] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.048] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.048] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.048] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.048] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.048] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.048] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.048] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.048] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.048] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.048] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.048] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:07.048] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.048] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.048] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.052] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:07.052] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:07.052] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:07.053] |  :  .  |  :  .  List of future strategies:
[10:53:07.053] |  :  .  |  :  .  1. sequential:
[10:53:07.053] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:07.053] |  :  .  |  :  .     - tweaked: FALSE
[10:53:07.053] |  :  .  |  :  .     - call: plan(sequential)
[10:53:07.053] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.053] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.053] |  :  .  |  assign_globals() ...
[10:53:07.053] |  :  .  |  List of 1
[10:53:07.053] |  :  .  |   $ x: num [1:5] 1 1 2 2 2
[10:53:07.053] |  :  .  |   - attr(*, "where")=List of 1
[10:53:07.053] |  :  .  |    ..$ x:<environment: R_EmptyEnv> 
[10:53:07.053] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:07.053] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:53:07.053] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:07.053] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:07.057] |  :  .  |  - copied ‘x’ to environment
[10:53:07.057] |  :  .  |  assign_globals() ... done
[10:53:07.059] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.059] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.059] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.059] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:07.059] |  :  .  |  :  .  |  :  New stack:
[10:53:07.059] |  :  .  |  :  .  |  :  List of 1
[10:53:07.059] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.059] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.059] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.059] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.059] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.059] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:07.059] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.059] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.059] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.059] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.062] |  :  .  |  :  .  |  :  Old stack:
[10:53:07.062] |  :  .  |  :  .  |  :  List of 1
[10:53:07.062] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.062] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.062] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.062] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.062] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.062] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:07.062] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.062] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.062] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.062] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.065] |  :  .  |  :  .  |  :  Identical
[10:53:07.065] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:07.065] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:07.065] |  :  .  |  :  .  |  List of future strategies:
[10:53:07.065] |  :  .  |  :  .  |  1. sequential:
[10:53:07.065] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:07.065] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:07.065] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:07.066] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.066] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.066] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.066] |  :  .  |  SequentialFuture started (and completed)
[10:53:07.066] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:07.066] |  :  Launching futures ... done
[10:53:07.067] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:07.067] |  Using SequentialFutureBackend ... done
[10:53:07.067] run() for Future (‘SequentialFuture’) ... done
x
1 2 
2 3 
[10:53:07.068] getGlobalsAndPackages() ...
[10:53:07.068] |  Searching for globals ...
[10:53:07.069] |  :  globals found: [4] ‘{’, ‘xtabs’, ‘x’, ‘~’
[10:53:07.069] |  Searching for globals ... DONE
[10:53:07.069] |  Resolving globals: FALSE
[10:53:07.069] |  Search for packages associated with the globals ...
[10:53:07.069] |  :  Packages associated with globals: [2] ‘base’, ‘stats’
[10:53:07.070] |  :  Packages: [2] ‘base’, ‘stats’
[10:53:07.070] |  Search for packages associated with the globals ... DONE
[10:53:07.070] |  Packages after dropping 'base': [1] ‘stats’
[10:53:07.070] |  Packages after dropping non-attached packages: [1] ‘stats’
[10:53:07.070] |  globals: [1] ‘x’
[10:53:07.070] |  packages: [1] ‘stats’
[10:53:07.070] getGlobalsAndPackages() ... done
[10:53:07.071] run() for Future (‘Future’) ...
[10:53:07.071] |  state: ‘created’
[10:53:07.071] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.071] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.071] |  Using SequentialFutureBackend ...
[10:53:07.071] |  :  Launching futures ...
[10:53:07.071] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:07.071] |  :  .  |  getFutureData() ...
[10:53:07.071] |  :  .  |  :  getFutureCore() ...
[10:53:07.072] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘stats’
[10:53:07.072] |  :  .  |  :  getFutureCore() ... done
[10:53:07.072] |  :  .  |  :  getFutureCapture() ...
[10:53:07.072] |  :  .  |  :  getFutureCapture() ... done
[10:53:07.072] |  :  .  |  :  getFutureContext() ...
[10:53:07.072] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.072] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:07.072] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.072] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:07.072] |  :  .  |  :  getFutureContext() ... done
[10:53:07.073] |  :  .  |  getFutureData() ... done
[10:53:07.073] |  :  .  |  attachPackages() ...
[10:53:07.073] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:07.074] |  :  .  |  attachPackages() ... DONE
[10:53:07.075] |  :  .  |  attachPackages() ...
[10:53:07.075] |  :  .  |  :  packages: [n=1] ‘stats’
[10:53:07.075] |  :  .  |  attachPackages() ... DONE
[10:53:07.075] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.075] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:07.075] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.076] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.076] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.076] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:07.076] |  :  .  |  :  .  |  New stack:
[10:53:07.076] |  :  .  |  :  .  |  List of 1
[10:53:07.076] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.076] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.076] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.076] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.076] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.076] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.076] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.078] |  :  .  |  :  .  |  Old stack:
[10:53:07.078] |  :  .  |  :  .  |  List of 1
[10:53:07.078] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.078] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.078] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.078] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.078] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.078] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:07.078] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.078] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.078] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.078] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.081] |  :  .  |  :  .  |  Not identical
[10:53:07.081] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:07.081] |  :  .  |  :  .  |  :  List of 2
[10:53:07.081] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.081] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.081] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.081] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.081] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.081] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.081] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.081] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.081] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.081] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.081] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.081] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:07.081] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.081] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.081] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.086] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:07.086] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:07.086] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:07.086] |  :  .  |  :  .  List of future strategies:
[10:53:07.086] |  :  .  |  :  .  1. sequential:
[10:53:07.086] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:07.086] |  :  .  |  :  .     - tweaked: FALSE
[10:53:07.086] |  :  .  |  :  .     - call: plan(sequential)
[10:53:07.086] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.087] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.087] |  :  .  |  assign_globals() ...
[10:53:07.087] |  :  .  |  List of 1
[10:53:07.087] |  :  .  |   $ x: num [1:5] 1 1 2 2 2
[10:53:07.087] |  :  .  |   - attr(*, "where")=List of 1
[10:53:07.087] |  :  .  |    ..$ x:<environment: R_EmptyEnv> 
[10:53:07.087] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:07.087] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:53:07.087] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:07.087] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:07.089] |  :  .  |  - copied ‘x’ to environment
[10:53:07.089] |  :  .  |  assign_globals() ... done
[10:53:07.091] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.091] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.091] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.091] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:07.092] |  :  .  |  :  .  |  :  New stack:
[10:53:07.092] |  :  .  |  :  .  |  :  List of 1
[10:53:07.092] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.092] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.092] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.092] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.092] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.092] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:07.092] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.092] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.092] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.092] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.096] |  :  .  |  :  .  |  :  Old stack:
[10:53:07.096] |  :  .  |  :  .  |  :  List of 1
[10:53:07.096] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.096] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.096] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.096] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.096] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.096] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:07.096] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.096] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.096] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.096] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.099] |  :  .  |  :  .  |  :  Identical
[10:53:07.099] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:07.099] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:07.099] |  :  .  |  :  .  |  List of future strategies:
[10:53:07.099] |  :  .  |  :  .  |  1. sequential:
[10:53:07.099] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:07.099] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:07.099] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:07.099] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.099] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.099] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.100] |  :  .  |  SequentialFuture started (and completed)
[10:53:07.100] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:07.100] |  :  Launching futures ... done
[10:53:07.100] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:07.100] |  Using SequentialFutureBackend ... done
[10:53:07.100] run() for Future (‘SequentialFuture’) ... done
x
1 2 
2 3 
- Globals - lm(<formula>, data = cars) ...
- Globals - lm(<formula #1 (‘a’)>, data = cars) ...

Call:
lm(formula = dist ~ . - 1, data = cars)

Coefficients:
speed  
2.909  

[10:53:07.102] getGlobalsAndPackages() ...
[10:53:07.102] |  Searching for globals ...
[10:53:07.104] |  :  globals found: [7] ‘{’, ‘lm’, ‘dist’, ‘-’, ‘.’, ‘~’, ‘cars’
[10:53:07.104] |  Searching for globals ... DONE
[10:53:07.104] |  Resolving globals: FALSE
[10:53:07.104] |  Search for packages associated with the globals ...
[10:53:07.104] |  :  Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[10:53:07.105] |  :  Packages: [3] ‘base’, ‘stats’, ‘datasets’
[10:53:07.105] |  Search for packages associated with the globals ... DONE
[10:53:07.105] |  Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[10:53:07.105] |  Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[10:53:07.105] |  globals: [0] 
[10:53:07.105] |  packages: [2] ‘stats’, ‘datasets’
[10:53:07.105] getGlobalsAndPackages() ... done
[10:53:07.106] run() for Future (‘Future’) ...
[10:53:07.106] |  state: ‘created’
[10:53:07.106] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.106] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.106] |  Using SequentialFutureBackend ...
[10:53:07.106] |  :  Launching futures ...
[10:53:07.106] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:07.106] |  :  .  |  getFutureData() ...
[10:53:07.107] |  :  .  |  :  getFutureCore() ...
[10:53:07.107] |  :  .  |  :  .  Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[10:53:07.107] |  :  .  |  :  getFutureCore() ... done
[10:53:07.107] |  :  .  |  :  getFutureCapture() ...
[10:53:07.107] |  :  .  |  :  getFutureCapture() ... done
[10:53:07.107] |  :  .  |  :  getFutureContext() ...
[10:53:07.107] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.107] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:07.107] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.107] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:07.108] |  :  .  |  :  getFutureContext() ... done
[10:53:07.108] |  :  .  |  getFutureData() ... done
[10:53:07.108] |  :  .  |  attachPackages() ...
[10:53:07.108] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:07.108] |  :  .  |  attachPackages() ... DONE
[10:53:07.108] |  :  .  |  attachPackages() ...
[10:53:07.108] |  :  .  |  :  packages: [n=2] ‘stats’, ‘datasets’
[10:53:07.108] |  :  .  |  attachPackages() ... DONE
[10:53:07.109] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.109] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:07.109] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.109] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.109] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.109] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:07.110] |  :  .  |  :  .  |  New stack:
[10:53:07.110] |  :  .  |  :  .  |  List of 1
[10:53:07.110] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.110] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.110] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.110] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.110] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.110] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.110] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.113] |  :  .  |  :  .  |  Old stack:
[10:53:07.113] |  :  .  |  :  .  |  List of 1
[10:53:07.113] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.113] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.113] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.113] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.113] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.113] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:07.113] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.113] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.113] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.113] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.116] |  :  .  |  :  .  |  Not identical
[10:53:07.116] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:07.116] |  :  .  |  :  .  |  :  List of 2
[10:53:07.116] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.116] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.116] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.116] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.116] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.116] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.116] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.116] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.116] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.116] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.116] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.116] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:07.116] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.116] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.116] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.121] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:07.121] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:07.121] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:07.121] |  :  .  |  :  .  List of future strategies:
[10:53:07.121] |  :  .  |  :  .  1. sequential:
[10:53:07.121] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:07.121] |  :  .  |  :  .     - tweaked: FALSE
[10:53:07.121] |  :  .  |  :  .     - call: plan(sequential)
[10:53:07.121] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.122] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.123] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.124] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.124] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.124] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:07.124] |  :  .  |  :  .  |  :  New stack:
[10:53:07.124] |  :  .  |  :  .  |  :  List of 1
[10:53:07.124] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.124] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.124] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.124] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.124] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.124] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:07.124] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.124] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.124] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.124] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.127] |  :  .  |  :  .  |  :  Old stack:
[10:53:07.127] |  :  .  |  :  .  |  :  List of 1
[10:53:07.127] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.127] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.127] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.127] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.127] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.127] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:07.127] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.127] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.127] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.127] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.131] |  :  .  |  :  .  |  :  Identical
[10:53:07.131] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:07.131] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:07.131] |  :  .  |  :  .  |  List of future strategies:
[10:53:07.131] |  :  .  |  :  .  |  1. sequential:
[10:53:07.131] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:07.131] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:07.131] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:07.131] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.132] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.132] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.132] |  :  .  |  SequentialFuture started (and completed)
[10:53:07.132] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:07.132] |  :  Launching futures ... done
[10:53:07.132] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:07.132] |  Using SequentialFutureBackend ... done
[10:53:07.132] run() for Future (‘SequentialFuture’) ... done

Call:
lm(formula = dist ~ . - 1, data = cars)

Coefficients:
speed  
2.909  

- Globals - lm(<formula #2 (‘b’)>, data = cars) ...

Call:
lm(formula = dist ~ . + 0, data = cars)

Coefficients:
speed  
2.909  

[10:53:07.134] getGlobalsAndPackages() ...
[10:53:07.135] |  Searching for globals ...
[10:53:07.136] |  :  globals found: [7] ‘{’, ‘lm’, ‘dist’, ‘+’, ‘.’, ‘~’, ‘cars’
[10:53:07.136] |  Searching for globals ... DONE
[10:53:07.136] |  Resolving globals: FALSE
[10:53:07.136] |  Search for packages associated with the globals ...
[10:53:07.137] |  :  Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[10:53:07.137] |  :  Packages: [3] ‘base’, ‘stats’, ‘datasets’
[10:53:07.137] |  Search for packages associated with the globals ... DONE
[10:53:07.137] |  Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[10:53:07.137] |  Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[10:53:07.137] |  globals: [0] 
[10:53:07.138] |  packages: [2] ‘stats’, ‘datasets’
[10:53:07.138] getGlobalsAndPackages() ... done
[10:53:07.138] run() for Future (‘Future’) ...
[10:53:07.138] |  state: ‘created’
[10:53:07.138] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.138] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.138] |  Using SequentialFutureBackend ...
[10:53:07.138] |  :  Launching futures ...
[10:53:07.138] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:07.139] |  :  .  |  getFutureData() ...
[10:53:07.139] |  :  .  |  :  getFutureCore() ...
[10:53:07.139] |  :  .  |  :  .  Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[10:53:07.139] |  :  .  |  :  getFutureCore() ... done
[10:53:07.139] |  :  .  |  :  getFutureCapture() ...
[10:53:07.139] |  :  .  |  :  getFutureCapture() ... done
[10:53:07.139] |  :  .  |  :  getFutureContext() ...
[10:53:07.139] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.139] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:07.139] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.140] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:07.140] |  :  .  |  :  getFutureContext() ... done
[10:53:07.140] |  :  .  |  getFutureData() ... done
[10:53:07.140] |  :  .  |  attachPackages() ...
[10:53:07.140] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:07.140] |  :  .  |  attachPackages() ... DONE
[10:53:07.140] |  :  .  |  attachPackages() ...
[10:53:07.140] |  :  .  |  :  packages: [n=2] ‘stats’, ‘datasets’
[10:53:07.140] |  :  .  |  attachPackages() ... DONE
[10:53:07.141] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.141] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:07.141] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.141] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.141] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.141] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:07.142] |  :  .  |  :  .  |  New stack:
[10:53:07.142] |  :  .  |  :  .  |  List of 1
[10:53:07.142] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.142] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.142] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.142] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.142] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.142] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.142] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.144] |  :  .  |  :  .  |  Old stack:
[10:53:07.144] |  :  .  |  :  .  |  List of 1
[10:53:07.144] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.144] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.144] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.144] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.144] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.144] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:07.144] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.144] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.144] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.144] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.147] |  :  .  |  :  .  |  Not identical
[10:53:07.147] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:07.147] |  :  .  |  :  .  |  :  List of 2
[10:53:07.147] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.147] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.147] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.147] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.147] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.147] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.147] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.147] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.147] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.147] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.147] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.147] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:07.147] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.147] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.147] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.152] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:07.152] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:07.152] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:07.152] |  :  .  |  :  .  List of future strategies:
[10:53:07.152] |  :  .  |  :  .  1. sequential:
[10:53:07.152] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:07.152] |  :  .  |  :  .     - tweaked: FALSE
[10:53:07.152] |  :  .  |  :  .     - call: plan(sequential)
[10:53:07.153] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.153] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.155] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.155] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.155] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.155] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:07.155] |  :  .  |  :  .  |  :  New stack:
[10:53:07.155] |  :  .  |  :  .  |  :  List of 1
[10:53:07.155] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.155] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.155] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.155] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.155] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.155] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:07.155] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.155] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.155] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.155] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.158] |  :  .  |  :  .  |  :  Old stack:
[10:53:07.158] |  :  .  |  :  .  |  :  List of 1
[10:53:07.158] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.158] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.158] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.158] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.158] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.158] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:07.158] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.158] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.158] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.158] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.161] |  :  .  |  :  .  |  :  Identical
[10:53:07.161] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:07.161] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:07.161] |  :  .  |  :  .  |  List of future strategies:
[10:53:07.161] |  :  .  |  :  .  |  1. sequential:
[10:53:07.161] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:07.161] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:07.161] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:07.161] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.162] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.162] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.162] |  :  .  |  SequentialFuture started (and completed)
[10:53:07.162] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:07.162] |  :  Launching futures ... done
[10:53:07.162] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:07.162] |  Using SequentialFutureBackend ... done
[10:53:07.162] run() for Future (‘SequentialFuture’) ... done

Call:
lm(formula = dist ~ . + 0, data = cars)

Coefficients:
speed  
2.909  

- Globals - lm(<formula #3 (‘c’)>, data = cars) ...

Call:
lm(formula = dist ~ speed + speed^2, data = cars)

Coefficients:
(Intercept)        speed  
    -17.579        3.932  

[10:53:07.190] getGlobalsAndPackages() ...
[10:53:07.190] |  Searching for globals ...
[10:53:07.193] |  :  globals found: [8] ‘{’, ‘lm’, ‘dist’, ‘+’, ‘speed’, ‘^’, ‘~’, ‘cars’
[10:53:07.193] |  Searching for globals ... DONE
[10:53:07.193] |  Resolving globals: FALSE
[10:53:07.193] |  Search for packages associated with the globals ...
[10:53:07.193] |  :  Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[10:53:07.194] |  :  Packages: [3] ‘base’, ‘stats’, ‘datasets’
[10:53:07.194] |  Search for packages associated with the globals ... DONE
[10:53:07.194] |  Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[10:53:07.194] |  Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[10:53:07.194] |  globals: [0] 
[10:53:07.194] |  packages: [2] ‘stats’, ‘datasets’
[10:53:07.194] getGlobalsAndPackages() ... done
[10:53:07.194] run() for Future (‘Future’) ...
[10:53:07.195] |  state: ‘created’
[10:53:07.195] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.195] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.195] |  Using SequentialFutureBackend ...
[10:53:07.195] |  :  Launching futures ...
[10:53:07.195] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:07.195] |  :  .  |  getFutureData() ...
[10:53:07.195] |  :  .  |  :  getFutureCore() ...
[10:53:07.195] |  :  .  |  :  .  Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[10:53:07.195] |  :  .  |  :  getFutureCore() ... done
[10:53:07.196] |  :  .  |  :  getFutureCapture() ...
[10:53:07.196] |  :  .  |  :  getFutureCapture() ... done
[10:53:07.196] |  :  .  |  :  getFutureContext() ...
[10:53:07.196] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.196] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:07.196] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.196] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:07.196] |  :  .  |  :  getFutureContext() ... done
[10:53:07.196] |  :  .  |  getFutureData() ... done
[10:53:07.196] |  :  .  |  attachPackages() ...
[10:53:07.197] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:07.197] |  :  .  |  attachPackages() ... DONE
[10:53:07.197] |  :  .  |  attachPackages() ...
[10:53:07.197] |  :  .  |  :  packages: [n=2] ‘stats’, ‘datasets’
[10:53:07.197] |  :  .  |  attachPackages() ... DONE
[10:53:07.197] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.198] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:07.198] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.198] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.198] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.198] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:07.198] |  :  .  |  :  .  |  New stack:
[10:53:07.198] |  :  .  |  :  .  |  List of 1
[10:53:07.198] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.198] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.198] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.198] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.198] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.198] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.198] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.201] |  :  .  |  :  .  |  Old stack:
[10:53:07.201] |  :  .  |  :  .  |  List of 1
[10:53:07.201] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.201] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.201] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.201] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.201] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.201] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:07.201] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.201] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.201] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.201] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.204] |  :  .  |  :  .  |  Not identical
[10:53:07.204] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:07.204] |  :  .  |  :  .  |  :  List of 2
[10:53:07.204] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.204] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.204] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.204] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.204] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.204] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.204] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.204] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.204] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.204] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.204] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.204] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:07.204] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.204] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.204] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.208] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:07.209] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:07.209] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:07.209] |  :  .  |  :  .  List of future strategies:
[10:53:07.209] |  :  .  |  :  .  1. sequential:
[10:53:07.209] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:07.209] |  :  .  |  :  .     - tweaked: FALSE
[10:53:07.209] |  :  .  |  :  .     - call: plan(sequential)
[10:53:07.209] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.209] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.212] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.212] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.212] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.212] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:07.212] |  :  .  |  :  .  |  :  New stack:
[10:53:07.213] |  :  .  |  :  .  |  :  List of 1
[10:53:07.213] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.213] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.213] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.213] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.213] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.213] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:07.213] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.213] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.213] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.213] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.215] |  :  .  |  :  .  |  :  Old stack:
[10:53:07.215] |  :  .  |  :  .  |  :  List of 1
[10:53:07.215] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.215] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.215] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.215] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.215] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.215] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:07.215] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.215] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.215] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.215] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.218] |  :  .  |  :  .  |  :  Identical
[10:53:07.218] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:07.218] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:07.219] |  :  .  |  :  .  |  List of future strategies:
[10:53:07.219] |  :  .  |  :  .  |  1. sequential:
[10:53:07.219] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:07.219] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:07.219] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:07.219] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.219] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.219] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.219] |  :  .  |  SequentialFuture started (and completed)
[10:53:07.219] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:07.220] |  :  Launching futures ... done
[10:53:07.220] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:07.220] |  Using SequentialFutureBackend ... done
[10:53:07.220] run() for Future (‘SequentialFuture’) ... done

Call:
lm(formula = dist ~ speed + speed^2, data = cars)

Coefficients:
(Intercept)        speed  
    -17.579        3.932  

- Globals - lm(<formula #4 (‘d’)>, data = cars) ...

Call:
lm(formula = dist ~ speed + I(speed^2), data = cars)

Coefficients:
(Intercept)        speed   I(speed^2)  
    2.47014      0.91329      0.09996  

[10:53:07.222] getGlobalsAndPackages() ...
[10:53:07.222] |  Searching for globals ...
[10:53:07.224] |  :  globals found: [9] ‘{’, ‘lm’, ‘dist’, ‘+’, ‘speed’, ‘I’, ‘^’, ‘~’, ‘cars’
[10:53:07.224] |  Searching for globals ... DONE
[10:53:07.224] |  Resolving globals: FALSE
[10:53:07.225] |  Search for packages associated with the globals ...
[10:53:07.225] |  :  Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[10:53:07.225] |  :  Packages: [3] ‘base’, ‘stats’, ‘datasets’
[10:53:07.225] |  Search for packages associated with the globals ... DONE
[10:53:07.225] |  Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[10:53:07.225] |  Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[10:53:07.226] |  globals: [0] 
[10:53:07.226] |  packages: [2] ‘stats’, ‘datasets’
[10:53:07.226] getGlobalsAndPackages() ... done
[10:53:07.226] run() for Future (‘Future’) ...
[10:53:07.226] |  state: ‘created’
[10:53:07.226] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.226] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.226] |  Using SequentialFutureBackend ...
[10:53:07.226] |  :  Launching futures ...
[10:53:07.227] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:07.227] |  :  .  |  getFutureData() ...
[10:53:07.227] |  :  .  |  :  getFutureCore() ...
[10:53:07.227] |  :  .  |  :  .  Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[10:53:07.227] |  :  .  |  :  getFutureCore() ... done
[10:53:07.227] |  :  .  |  :  getFutureCapture() ...
[10:53:07.227] |  :  .  |  :  getFutureCapture() ... done
[10:53:07.227] |  :  .  |  :  getFutureContext() ...
[10:53:07.227] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.227] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:07.227] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.228] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:07.228] |  :  .  |  :  getFutureContext() ... done
[10:53:07.228] |  :  .  |  getFutureData() ... done
[10:53:07.228] |  :  .  |  attachPackages() ...
[10:53:07.228] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:07.228] |  :  .  |  attachPackages() ... DONE
[10:53:07.228] |  :  .  |  attachPackages() ...
[10:53:07.228] |  :  .  |  :  packages: [n=2] ‘stats’, ‘datasets’
[10:53:07.228] |  :  .  |  attachPackages() ... DONE
[10:53:07.229] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.229] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:07.229] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.229] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.229] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.230] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:07.230] |  :  .  |  :  .  |  New stack:
[10:53:07.230] |  :  .  |  :  .  |  List of 1
[10:53:07.230] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.230] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.230] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.230] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.230] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.230] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.230] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.233] |  :  .  |  :  .  |  Old stack:
[10:53:07.233] |  :  .  |  :  .  |  List of 1
[10:53:07.233] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.233] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.233] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.233] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.233] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.233] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:07.233] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.233] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.233] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.233] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.235] |  :  .  |  :  .  |  Not identical
[10:53:07.236] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:07.236] |  :  .  |  :  .  |  :  List of 2
[10:53:07.236] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.236] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.236] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.236] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.236] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.236] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.236] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.236] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.236] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.236] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.236] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.236] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:07.236] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.236] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.236] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.240] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:07.240] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:07.240] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:07.240] |  :  .  |  :  .  List of future strategies:
[10:53:07.240] |  :  .  |  :  .  1. sequential:
[10:53:07.240] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:07.240] |  :  .  |  :  .     - tweaked: FALSE
[10:53:07.240] |  :  .  |  :  .     - call: plan(sequential)
[10:53:07.241] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.241] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.243] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.243] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.243] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.243] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:07.243] |  :  .  |  :  .  |  :  New stack:
[10:53:07.243] |  :  .  |  :  .  |  :  List of 1
[10:53:07.243] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.243] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.243] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.243] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.243] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.243] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:07.243] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.243] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.243] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.243] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.246] |  :  .  |  :  .  |  :  Old stack:
[10:53:07.246] |  :  .  |  :  .  |  :  List of 1
[10:53:07.246] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.246] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.246] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.246] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.246] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.246] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:07.246] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.246] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.246] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.246] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.250] |  :  .  |  :  .  |  :  Identical
[10:53:07.250] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:07.250] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:07.250] |  :  .  |  :  .  |  List of future strategies:
[10:53:07.250] |  :  .  |  :  .  |  1. sequential:
[10:53:07.250] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:07.250] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:07.250] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:07.251] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.251] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.251] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.251] |  :  .  |  SequentialFuture started (and completed)
[10:53:07.251] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:07.251] |  :  Launching futures ... done
[10:53:07.251] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:07.251] |  Using SequentialFutureBackend ... done
[10:53:07.252] run() for Future (‘SequentialFuture’) ... done

Call:
lm(formula = dist ~ speed + I(speed^2), data = cars)

Coefficients:
(Intercept)        speed   I(speed^2)  
    2.47014      0.91329      0.09996  

- Globals - lm(<formula #5 (‘e’)>, data = cars) ...

Call:
lm(formula = dist ~ poly(speed, 2), data = cars)

Coefficients:
    (Intercept)  poly(speed, 2)1  poly(speed, 2)2  
          42.98           145.55            23.00  

[10:53:07.255] getGlobalsAndPackages() ...
[10:53:07.255] |  Searching for globals ...
[10:53:07.256] |  :  globals found: [7] ‘{’, ‘lm’, ‘dist’, ‘poly’, ‘speed’, ‘~’, ‘cars’
[10:53:07.257] |  Searching for globals ... DONE
[10:53:07.257] |  Resolving globals: FALSE
[10:53:07.257] |  Search for packages associated with the globals ...
[10:53:07.257] |  :  Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[10:53:07.257] |  :  Packages: [3] ‘base’, ‘stats’, ‘datasets’
[10:53:07.257] |  Search for packages associated with the globals ... DONE
[10:53:07.258] |  Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[10:53:07.258] |  Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[10:53:07.258] |  globals: [0] 
[10:53:07.258] |  packages: [2] ‘stats’, ‘datasets’
[10:53:07.258] getGlobalsAndPackages() ... done
[10:53:07.258] run() for Future (‘Future’) ...
[10:53:07.258] |  state: ‘created’
[10:53:07.258] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.258] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.259] |  Using SequentialFutureBackend ...
[10:53:07.259] |  :  Launching futures ...
[10:53:07.259] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:07.259] |  :  .  |  getFutureData() ...
[10:53:07.259] |  :  .  |  :  getFutureCore() ...
[10:53:07.259] |  :  .  |  :  .  Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[10:53:07.259] |  :  .  |  :  getFutureCore() ... done
[10:53:07.259] |  :  .  |  :  getFutureCapture() ...
[10:53:07.259] |  :  .  |  :  getFutureCapture() ... done
[10:53:07.259] |  :  .  |  :  getFutureContext() ...
[10:53:07.260] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.260] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:07.260] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.260] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:07.260] |  :  .  |  :  getFutureContext() ... done
[10:53:07.260] |  :  .  |  getFutureData() ... done
[10:53:07.260] |  :  .  |  attachPackages() ...
[10:53:07.260] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:07.260] |  :  .  |  attachPackages() ... DONE
[10:53:07.260] |  :  .  |  attachPackages() ...
[10:53:07.261] |  :  .  |  :  packages: [n=2] ‘stats’, ‘datasets’
[10:53:07.261] |  :  .  |  attachPackages() ... DONE
[10:53:07.261] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.261] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:07.261] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.261] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.262] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.262] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:07.262] |  :  .  |  :  .  |  New stack:
[10:53:07.262] |  :  .  |  :  .  |  List of 1
[10:53:07.262] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.262] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.262] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.262] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.262] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.262] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.262] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.264] |  :  .  |  :  .  |  Old stack:
[10:53:07.264] |  :  .  |  :  .  |  List of 1
[10:53:07.264] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.264] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.264] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.264] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.264] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.264] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:07.264] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.264] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.264] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.264] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.267] |  :  .  |  :  .  |  Not identical
[10:53:07.267] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:07.267] |  :  .  |  :  .  |  :  List of 2
[10:53:07.267] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.267] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.267] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.267] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.267] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.267] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.267] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.267] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.267] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.267] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.267] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.267] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:07.267] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.267] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.267] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.272] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:07.272] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:07.273] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:07.273] |  :  .  |  :  .  List of future strategies:
[10:53:07.273] |  :  .  |  :  .  1. sequential:
[10:53:07.273] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:07.273] |  :  .  |  :  .     - tweaked: FALSE
[10:53:07.273] |  :  .  |  :  .     - call: plan(sequential)
[10:53:07.273] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.273] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.275] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.275] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.275] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.276] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:07.276] |  :  .  |  :  .  |  :  New stack:
[10:53:07.276] |  :  .  |  :  .  |  :  List of 1
[10:53:07.276] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.276] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.276] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.276] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.276] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.276] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:07.276] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.276] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.276] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.276] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.278] |  :  .  |  :  .  |  :  Old stack:
[10:53:07.279] |  :  .  |  :  .  |  :  List of 1
[10:53:07.279] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.279] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.279] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.279] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.279] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.279] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:07.279] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.279] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.279] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.279] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.281] |  :  .  |  :  .  |  :  Identical
[10:53:07.281] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:07.281] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:07.282] |  :  .  |  :  .  |  List of future strategies:
[10:53:07.282] |  :  .  |  :  .  |  1. sequential:
[10:53:07.282] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:07.282] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:07.282] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:07.282] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.282] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.282] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.282] |  :  .  |  SequentialFuture started (and completed)
[10:53:07.282] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:07.283] |  :  Launching futures ... done
[10:53:07.283] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:07.283] |  Using SequentialFutureBackend ... done
[10:53:07.283] run() for Future (‘SequentialFuture’) ... done

Call:
lm(formula = dist ~ poly(speed, 2), data = cars)

Coefficients:
    (Intercept)  poly(speed, 2)1  poly(speed, 2)2  
          42.98           145.55            23.00  

- Globals - map(x, ~ expr) ...
[10:53:07.284] getGlobalsAndPackages() ...
[10:53:07.285] |  Searching for globals ...
[10:53:07.291] |  :  globals found: [16] ‘{’, ‘outer_function’, ‘map’, ‘:’, ‘~’, ‘inner_function’, ‘.x’, ‘if’, ‘inherits’, ‘<-’, ‘[[’, ‘-’, ‘eval’, ‘bquote’, ‘lapply’, ‘+’
[10:53:07.291] |  Searching for globals ... DONE
[10:53:07.291] |  Resolving globals: FALSE
[10:53:07.291] |  Search for packages associated with the globals ...
[10:53:07.291] |  :  Packages associated with globals: [1] ‘base’
[10:53:07.292] |  :  Packages: [1] ‘base’
[10:53:07.292] |  Search for packages associated with the globals ... DONE
[10:53:07.292] |  Packages after dropping 'base': [0] 
[10:53:07.292] |  globals: [3] ‘outer_function’, ‘map’, ‘inner_function’
[10:53:07.292] |  packages: [0] 
[10:53:07.292] getGlobalsAndPackages() ... done
[10:53:07.292] run() for Future (‘Future’) ...
[10:53:07.292] |  state: ‘created’
[10:53:07.293] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.293] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.293] |  Using SequentialFutureBackend ...
[10:53:07.293] |  :  Launching futures ...
[10:53:07.293] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:07.293] |  :  .  |  getFutureData() ...
[10:53:07.293] |  :  .  |  :  getFutureCore() ...
[10:53:07.293] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:07.293] |  :  .  |  :  getFutureCore() ... done
[10:53:07.293] |  :  .  |  :  getFutureCapture() ...
[10:53:07.293] |  :  .  |  :  getFutureCapture() ... done
[10:53:07.294] |  :  .  |  :  getFutureContext() ...
[10:53:07.294] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.294] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:07.294] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.294] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:07.294] |  :  .  |  :  getFutureContext() ... done
[10:53:07.294] |  :  .  |  getFutureData() ... done
[10:53:07.294] |  :  .  |  attachPackages() ...
[10:53:07.294] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:07.295] |  :  .  |  attachPackages() ... DONE
[10:53:07.295] |  :  .  |  attachPackages() ...
[10:53:07.295] |  :  .  |  :  packages: [n=0] 
[10:53:07.295] |  :  .  |  attachPackages() ... DONE
[10:53:07.295] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.295] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:07.295] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.296] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.296] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.296] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:07.296] |  :  .  |  :  .  |  New stack:
[10:53:07.296] |  :  .  |  :  .  |  List of 1
[10:53:07.296] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.296] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.296] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.296] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.296] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.296] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.296] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.298] |  :  .  |  :  .  |  Old stack:
[10:53:07.298] |  :  .  |  :  .  |  List of 1
[10:53:07.298] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.298] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.298] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.298] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.298] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.298] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:07.298] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.298] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.298] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.298] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.301] |  :  .  |  :  .  |  Not identical
[10:53:07.301] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:07.301] |  :  .  |  :  .  |  :  List of 2
[10:53:07.301] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.301] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.301] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.301] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.301] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.301] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.301] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.301] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.301] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.301] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.301] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.301] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:07.301] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.301] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.301] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.305] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:07.306] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:07.306] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:07.306] |  :  .  |  :  .  List of future strategies:
[10:53:07.306] |  :  .  |  :  .  1. sequential:
[10:53:07.306] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:07.306] |  :  .  |  :  .     - tweaked: FALSE
[10:53:07.306] |  :  .  |  :  .     - call: plan(sequential)
[10:53:07.307] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.307] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.307] |  :  .  |  assign_globals() ...
[10:53:07.307] |  :  .  |  List of 3
[10:53:07.307] |  :  .  |   $ outer_function:function (x)  
[10:53:07.307] |  :  .  |   $ map           :function (.x, .f, ...)  
[10:53:07.307] |  :  .  |   $ inner_function:function (x)  
[10:53:07.307] |  :  .  |   - attr(*, "where")=List of 3
[10:53:07.307] |  :  .  |    ..$ outer_function:<environment: R_EmptyEnv> 
[10:53:07.307] |  :  .  |    ..$ map           :<environment: R_EmptyEnv> 
[10:53:07.307] |  :  .  |    ..$ inner_function:<environment: R_EmptyEnv> 
[10:53:07.307] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:07.307] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:53:07.307] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:07.307] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:07.311] |  :  .  |  - reassign environment for ‘outer_function’ [where=emptyenv()]
[10:53:07.311] |  :  .  |  - copied ‘outer_function’ to environment
[10:53:07.311] |  :  .  |  - reassign environment for ‘map’ [where=emptyenv()]
[10:53:07.311] |  :  .  |  - copied ‘map’ to environment
[10:53:07.311] |  :  .  |  - reassign environment for ‘inner_function’ [where=emptyenv()]
[10:53:07.311] |  :  .  |  - copied ‘inner_function’ to environment
[10:53:07.311] |  :  .  |  assign_globals() ... done
[10:53:07.317] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.317] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.317] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.318] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:07.318] |  :  .  |  :  .  |  :  New stack:
[10:53:07.318] |  :  .  |  :  .  |  :  List of 1
[10:53:07.318] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.318] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.318] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.318] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.318] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.318] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:07.318] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.318] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.318] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.318] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.320] |  :  .  |  :  .  |  :  Old stack:
[10:53:07.321] |  :  .  |  :  .  |  :  List of 1
[10:53:07.321] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.321] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.321] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.321] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.321] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.321] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:07.321] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.321] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.321] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.321] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.323] |  :  .  |  :  .  |  :  Identical
[10:53:07.323] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:07.323] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:07.324] |  :  .  |  :  .  |  List of future strategies:
[10:53:07.324] |  :  .  |  :  .  |  1. sequential:
[10:53:07.324] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:07.324] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:07.324] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:07.325] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.325] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.325] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.325] |  :  .  |  SequentialFuture started (and completed)
[10:53:07.325] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:07.325] |  :  Launching futures ... done
[10:53:07.326] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:07.326] |  Using SequentialFutureBackend ... done
[10:53:07.326] run() for Future (‘SequentialFuture’) ... done
List of 2
 $ : num [1:2] 2 3
 $ : num [1:2] 2 3
[10:53:07.327] getGlobalsAndPackages() ...
[10:53:07.327] |  Searching for globals ...
[10:53:07.332] |  :  globals found: [16] ‘{’, ‘outer_function’, ‘map’, ‘:’, ‘~’, ‘inner_function’, ‘.x’, ‘if’, ‘inherits’, ‘<-’, ‘[[’, ‘-’, ‘eval’, ‘bquote’, ‘lapply’, ‘+’
[10:53:07.332] |  Searching for globals ... DONE
[10:53:07.332] |  Resolving globals: FALSE
[10:53:07.332] |  Search for packages associated with the globals ...
[10:53:07.332] |  :  Packages associated with globals: [1] ‘base’
[10:53:07.333] |  :  Packages: [1] ‘base’
[10:53:07.333] |  Search for packages associated with the globals ... DONE
[10:53:07.333] |  Packages after dropping 'base': [0] 
[10:53:07.333] |  globals: [3] ‘outer_function’, ‘map’, ‘inner_function’
[10:53:07.333] |  packages: [0] 
[10:53:07.333] getGlobalsAndPackages() ... done
[10:53:07.333] run() for Future (‘Future’) ...
[10:53:07.333] |  state: ‘created’
[10:53:07.333] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.334] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.334] |  Using SequentialFutureBackend ...
[10:53:07.334] |  :  Launching futures ...
[10:53:07.334] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:07.334] |  :  .  |  getFutureData() ...
[10:53:07.334] |  :  .  |  :  getFutureCore() ...
[10:53:07.334] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:07.334] |  :  .  |  :  getFutureCore() ... done
[10:53:07.334] |  :  .  |  :  getFutureCapture() ...
[10:53:07.334] |  :  .  |  :  getFutureCapture() ... done
[10:53:07.334] |  :  .  |  :  getFutureContext() ...
[10:53:07.335] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.335] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:07.335] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.335] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:07.335] |  :  .  |  :  getFutureContext() ... done
[10:53:07.335] |  :  .  |  getFutureData() ... done
[10:53:07.335] |  :  .  |  attachPackages() ...
[10:53:07.335] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:07.335] |  :  .  |  attachPackages() ... DONE
[10:53:07.336] |  :  .  |  attachPackages() ...
[10:53:07.336] |  :  .  |  :  packages: [n=0] 
[10:53:07.336] |  :  .  |  attachPackages() ... DONE
[10:53:07.336] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.336] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:07.336] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.336] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.337] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.337] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:07.337] |  :  .  |  :  .  |  New stack:
[10:53:07.337] |  :  .  |  :  .  |  List of 1
[10:53:07.337] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.337] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.337] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.337] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.337] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.337] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.337] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.339] |  :  .  |  :  .  |  Old stack:
[10:53:07.339] |  :  .  |  :  .  |  List of 1
[10:53:07.339] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.339] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.339] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.339] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.339] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.339] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:07.339] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.339] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.339] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.339] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.343] |  :  .  |  :  .  |  Not identical
[10:53:07.343] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:07.343] |  :  .  |  :  .  |  :  List of 2
[10:53:07.343] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.343] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.343] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.343] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.343] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.343] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.343] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.343] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.343] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.343] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.343] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.343] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:07.343] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.343] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.343] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.347] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:07.347] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:07.347] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:07.347] |  :  .  |  :  .  List of future strategies:
[10:53:07.347] |  :  .  |  :  .  1. sequential:
[10:53:07.347] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:07.347] |  :  .  |  :  .     - tweaked: FALSE
[10:53:07.347] |  :  .  |  :  .     - call: plan(sequential)
[10:53:07.348] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.348] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.348] |  :  .  |  assign_globals() ...
[10:53:07.348] |  :  .  |  List of 3
[10:53:07.348] |  :  .  |   $ outer_function:function (x)  
[10:53:07.348] |  :  .  |   $ map           :function (.x, .f, ...)  
[10:53:07.348] |  :  .  |   $ inner_function:function (x)  
[10:53:07.348] |  :  .  |   - attr(*, "where")=List of 3
[10:53:07.348] |  :  .  |    ..$ outer_function:<environment: R_EmptyEnv> 
[10:53:07.348] |  :  .  |    ..$ map           :<environment: R_EmptyEnv> 
[10:53:07.348] |  :  .  |    ..$ inner_function:<environment: R_EmptyEnv> 
[10:53:07.348] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:07.348] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:53:07.348] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:07.348] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:07.351] |  :  .  |  - reassign environment for ‘outer_function’ [where=emptyenv()]
[10:53:07.351] |  :  .  |  - copied ‘outer_function’ to environment
[10:53:07.352] |  :  .  |  - reassign environment for ‘map’ [where=emptyenv()]
[10:53:07.352] |  :  .  |  - copied ‘map’ to environment
[10:53:07.352] |  :  .  |  - reassign environment for ‘inner_function’ [where=emptyenv()]
[10:53:07.352] |  :  .  |  - copied ‘inner_function’ to environment
[10:53:07.352] |  :  .  |  assign_globals() ... done
[10:53:07.353] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.353] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.354] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.354] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:07.354] |  :  .  |  :  .  |  :  New stack:
[10:53:07.354] |  :  .  |  :  .  |  :  List of 1
[10:53:07.354] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.354] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.354] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.354] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.354] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.354] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:07.354] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.354] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.354] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.354] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.357] |  :  .  |  :  .  |  :  Old stack:
[10:53:07.357] |  :  .  |  :  .  |  :  List of 1
[10:53:07.357] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.357] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.357] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.357] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.357] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.357] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:07.357] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.357] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.357] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.357] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.360] |  :  .  |  :  .  |  :  Identical
[10:53:07.360] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:07.360] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:07.360] |  :  .  |  :  .  |  List of future strategies:
[10:53:07.360] |  :  .  |  :  .  |  1. sequential:
[10:53:07.360] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:07.360] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:07.360] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:07.361] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.361] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.361] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.361] |  :  .  |  SequentialFuture started (and completed)
[10:53:07.361] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:07.362] |  :  Launching futures ... done
[10:53:07.362] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:07.362] |  Using SequentialFutureBackend ... done
[10:53:07.362] run() for Future (‘SequentialFuture’) ... done
List of 2
 $ : num [1:2] 2 3
 $ : num [1:2] 2 3
Testing with 1 cores ... DONE
Testing with 2 cores ...
availableCores(): 2
- plan('multicore') ...
[10:53:07.365] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.365] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:53:07.365] |  :  all.equal() for FutureStrategyList ...
[10:53:07.365] |  :  .  New stack:
[10:53:07.365] |  :  .  List of 1
[10:53:07.365] |  :  .   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.365] |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.365] |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.365] |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.365] |  :  .      ...)  
[10:53:07.365] |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.365] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.365] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:07.365] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.367] |  :  .  Old stack:
[10:53:07.367] |  :  .  List of 1
[10:53:07.367] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.367] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.367] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.367] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.367] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.367] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:53:07.367] |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.367] |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.367] |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.367] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.370] |  :  .  Not identical
[10:53:07.370] |  :  .  all.equal() for future ...
[10:53:07.370] |  :  .  |  List of 2
[10:53:07.370] |  :  .  |   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.370] |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.370] |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.370] |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.370] |  :  .  |      ...)  
[10:53:07.370] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.370] |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.370] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:07.370] |  :  .  |   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.370] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.370] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.370] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.370] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.370] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:07.370] |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5ba3d978> 
[10:53:07.370] |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.370] |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.374] |  :  .  |  Formals differ
[10:53:07.374] |  :  .  all.equal() for future ... done
[10:53:07.374] |  :  .  Future strategies differ at level 1
[10:53:07.375] |  :  all.equal() for FutureStrategyList ... done
[10:53:07.375] |  :  plan(): Setting new future strategy stack:
[10:53:07.375] |  :  List of future strategies:
[10:53:07.375] |  :  1. multicore:
[10:53:07.375] |  :     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:07.375] |  :     - tweaked: FALSE
[10:53:07.375] |  :     - call: plan(strategy)
[10:53:07.375] |  :  List of 1
[10:53:07.375] |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.375] |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.375] |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.375] |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.375] |  :      ...)  
[10:53:07.375] |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.375] |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.375] |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:07.375] |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.377] |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:53:07.377] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.377] |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:07.378] |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.378] |  :  .  Legacy shutdown of cluster workers ...
[10:53:07.378] |  :  .  |  Stopping existing cluster ...
[10:53:07.378] |  :  .  |  :  No pre-existing cluster. Skipping
[10:53:07.378] |  :  .  |  Stopping existing cluster ... done
[10:53:07.379] |  :  .  Legacy shutdown of cluster workers ... done
[10:53:07.379] |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:53:07.379] |  :  plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ...
[10:53:07.379] |  :  .  function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.379] |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.379] |  :  .   - attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.379] |  :  .   - attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.379] |  :  .      ...)  
[10:53:07.379] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.379] |  :  .   - attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.379] |  :  .   - attr(*, "call")= language plan(strategy)
[10:53:07.381] |  :  .  init: NULL
[10:53:07.381] |  :  plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ... done
[10:53:07.381] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.381] |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:07.382] |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.382] |  :  Backend function: <‘NULL’>
[10:53:07.383] |  :  Backend: <‘MulticoreFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:07.383] |  :  plan(): nbrOfWorkers() = 2
[10:53:07.383] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:53:07.384] plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
- lm(<formula>) ...
[10:53:07.384] getGlobalsAndPackages() ...
[10:53:07.384] |  Searching for globals ...
[10:53:07.385] |  :  globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[10:53:07.385] |  Searching for globals ... DONE
[10:53:07.385] |  Resolving globals: FALSE
[10:53:07.386] |  Search for packages associated with the globals ...
[10:53:07.386] |  :  Packages associated with globals: [2] ‘base’, ‘stats’
[10:53:07.386] |  :  Packages: [2] ‘base’, ‘stats’
[10:53:07.386] |  Search for packages associated with the globals ... DONE
[10:53:07.386] |  Packages after dropping 'base': [1] ‘stats’
[10:53:07.386] |  Packages after dropping non-attached packages: [1] ‘stats’
[10:53:07.387] |  globals: [2] ‘weight’, ‘group’
[10:53:07.387] |  packages: [1] ‘stats’
[10:53:07.387] getGlobalsAndPackages() ... done
[10:53:07.387] run() for Future (‘Future’) ...
[10:53:07.387] |  state: ‘created’
[10:53:07.387] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.387] |  :  makeFutureBackend(<multicore>) ...
[10:53:07.387] |  :  .  Backend function: <‘NULL’>
[10:53:07.398] |  :  .  Backend: <‘MulticoreFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:07.398] |  :  makeFutureBackend(<multicore>) ... done
[10:53:07.398] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.398] |  Using MulticoreFutureBackend ...
[10:53:07.398] |  :  Launching futures ...
[10:53:07.399] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:07.399] |  :  .  |  getFutureData() ...
[10:53:07.399] |  :  .  |  :  getFutureCore() ...
[10:53:07.399] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘stats’
[10:53:07.399] |  :  .  |  :  getFutureCore() ... done
[10:53:07.399] |  :  .  |  :  getFutureCapture() ...
[10:53:07.399] |  :  .  |  :  getFutureCapture() ... done
[10:53:07.399] |  :  .  |  :  getFutureContext() ...
[10:53:07.400] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.400] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:07.400] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.400] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:07.400] |  :  .  |  :  getFutureContext() ... done
[10:53:07.400] |  :  .  |  getFutureData() ... done
[10:53:07.401] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:07.401] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:07.404] |  :  .  |  MulticoreFuture started
[10:53:07.404] |  :  .  |  attachPackages() ...
[10:53:07.404] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:07.405] |  :  Launching futures ... done
[10:53:07.404] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:07.405] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:07.405] |  :  .  |  attachPackages() ... DONE
[10:53:07.405] |  Using MulticoreFutureBackend ... done
[10:53:07.405] |  :  .  |  attachPackages() ...
[10:53:07.405] run() for Future (‘MulticoreFuture’) ... done
[10:53:07.405] |  :  .  |  :  packages: [n=1] ‘stats’
[10:53:07.406] |  :  .  |  attachPackages() ... DONE
[10:53:07.407] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.407] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:07.407] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.408] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.408] result() for MulticoreFuture ...
[10:53:07.408] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.408] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:07.409] |  :  .  |  :  .  |  New stack:
[10:53:07.409] |  :  .  |  :  .  |  List of 1
[10:53:07.409] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.409] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.409] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.409] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.409] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.409] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.409] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.413] |  :  .  |  :  .  |  Old stack:
[10:53:07.413] |  :  .  |  :  .  |  List of 1
[10:53:07.413] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.413] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.413] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.413] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.413] |  :  .  |  :  .  |      ...)  
[10:53:07.413] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.413] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.413] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:07.413] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.413] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.413] |  :  .  |  :  .  |      ...)  
[10:53:07.413] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.413] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.418] |  :  .  |  :  .  |  Not identical
[10:53:07.418] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:07.418] |  :  .  |  :  .  |  :  List of 2
[10:53:07.418] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.418] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.418] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.418] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.418] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.418] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.418] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.418] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.418] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.418] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.418] |  :  .  |  :  .  |  :      ...)  
[10:53:07.418] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.418] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.418] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:07.418] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.418] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.418] |  :  .  |  :  .  |  :      ...)  
[10:53:07.418] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.425] |  :  .  |  :  .  |  :  Formals differ
[10:53:07.426] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:07.426] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:07.426] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:07.426] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:07.426] |  :  .  |  :  .  List of future strategies:
[10:53:07.426] |  :  .  |  :  .  1. sequential:
[10:53:07.426] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:07.426] |  :  .  |  :  .     - tweaked: FALSE
[10:53:07.426] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.427] |  :  .  |  :  .  List of 1
[10:53:07.427] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.427] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.427] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.427] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.427] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.427] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.427] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.434] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:07.434] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:07.434] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.434] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:07.434] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.435] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:07.435] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:07.435] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:07.435] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.436] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.436] |  :  .  |  assign_globals() ...
[10:53:07.436] |  :  .  |  List of 2
[10:53:07.436] |  :  .  |   $ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[10:53:07.436] |  :  .  |   $ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[10:53:07.436] |  :  .  |   - attr(*, "where")=List of 2
[10:53:07.436] |  :  .  |    ..$ weight:<environment: R_EmptyEnv> 
[10:53:07.436] |  :  .  |    ..$ group :<environment: R_EmptyEnv> 
[10:53:07.436] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:07.436] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:53:07.436] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:07.436] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:07.440] |  :  .  |  - copied ‘weight’ to environment
[10:53:07.440] |  :  .  |  - copied ‘group’ to environment
[10:53:07.440] |  :  .  |  assign_globals() ... done
[10:53:07.443] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.444] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.444] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.444] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:07.444] |  :  .  |  :  .  |  :  New stack:
[10:53:07.444] |  :  .  |  :  .  |  :  List of 1
[10:53:07.444] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.444] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.444] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.444] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.444] |  :  .  |  :  .  |  :      ...)  
[10:53:07.444] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.444] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.444] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:07.444] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.444] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.444] |  :  .  |  :  .  |  :      ...)  
[10:53:07.444] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.444] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.447] |  :  .  |  :  .  |  :  Old stack:
[10:53:07.447] |  :  .  |  :  .  |  :  List of 1
[10:53:07.447] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.447] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.447] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.447] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.447] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.447] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.447] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.449] |  :  .  |  :  .  |  :  Not identical
[10:53:07.449] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:07.449] |  :  .  |  :  .  |  :  .  List of 2
[10:53:07.449] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.449] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.449] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.449] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.449] |  :  .  |  :  .  |  :  .      ...)  
[10:53:07.449] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.449] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.449] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:07.449] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.449] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.449] |  :  .  |  :  .  |  :  .      ...)  
[10:53:07.449] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.449] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.449] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.449] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.449] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.449] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.449] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.455] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:07.456] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:07.456] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:07.456] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:07.456] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:07.456] |  :  .  |  :  .  |  List of future strategies:
[10:53:07.456] |  :  .  |  :  .  |  1. multicore:
[10:53:07.456] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:07.456] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:07.456] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:07.456] |  :  .  |  :  .  |  List of 1
[10:53:07.456] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.456] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.456] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.456] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.456] |  :  .  |  :  .  |      ...)  
[10:53:07.456] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.456] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.456] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:07.456] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.456] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.456] |  :  .  |  :  .  |      ...)  
[10:53:07.456] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.456] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.459] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:07.459] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:07.459] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.460] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:07.460] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.460] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:07.460] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.460] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.460] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.461] |  readImmediateCondition() ...
[10:53:07.462] |    - path: ‘/tmp/RtmpdMXzO1/.future/immediateConditions’
[10:53:07.462] |   - Number of RDS files: 0
[10:53:07.462] |  readImmediateCondition() ... DONE
[10:53:07.466] |  result() for MulticoreFuture ...
[10:53:07.466] |  result() for MulticoreFuture ... done
[10:53:07.466] result() for MulticoreFuture ... done
[10:53:07.466] result() for MulticoreFuture ...
[10:53:07.466] result() for MulticoreFuture ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[10:53:07.469] getGlobalsAndPackages() ...
[10:53:07.469] |  Searching for globals ...
[10:53:07.471] |  :  globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[10:53:07.471] |  Searching for globals ... DONE
[10:53:07.471] |  Resolving globals: FALSE
[10:53:07.472] |  Search for packages associated with the globals ...
[10:53:07.472] |  :  Packages associated with globals: [2] ‘base’, ‘stats’
[10:53:07.472] |  :  Packages: [2] ‘base’, ‘stats’
[10:53:07.472] |  Search for packages associated with the globals ... DONE
[10:53:07.473] |  Packages after dropping 'base': [1] ‘stats’
[10:53:07.473] |  Packages after dropping non-attached packages: [1] ‘stats’
[10:53:07.473] |  globals: [2] ‘weight’, ‘group’
[10:53:07.473] |  packages: [1] ‘stats’
[10:53:07.473] getGlobalsAndPackages() ... done
[10:53:07.474] run() for Future (‘Future’) ...
[10:53:07.474] |  state: ‘created’
[10:53:07.474] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.474] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.474] |  Using MulticoreFutureBackend ...
[10:53:07.474] |  :  Launching futures ...
[10:53:07.474] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:07.475] |  :  .  |  getFutureData() ...
[10:53:07.475] |  :  .  |  :  getFutureCore() ...
[10:53:07.475] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘stats’
[10:53:07.475] |  :  .  |  :  getFutureCore() ... done
[10:53:07.475] |  :  .  |  :  getFutureCapture() ...
[10:53:07.475] |  :  .  |  :  getFutureCapture() ... done
[10:53:07.475] |  :  .  |  :  getFutureContext() ...
[10:53:07.475] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.476] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:07.476] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.476] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:07.476] |  :  .  |  :  getFutureContext() ... done
[10:53:07.476] |  :  .  |  getFutureData() ... done
[10:53:07.476] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:07.477] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:07.478] |  :  .  |  MulticoreFuture started
[10:53:07.479] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:07.479] |  :  Launching futures ... done
[10:53:07.479] |  :  .  |  attachPackages() ...
[10:53:07.479] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:07.479] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:07.479] |  Using MulticoreFutureBackend ... done
[10:53:07.480] |  :  .  |  attachPackages() ... DONE
[10:53:07.480] run() for Future (‘MulticoreFuture’) ... done
[10:53:07.480] |  :  .  |  attachPackages() ...
[10:53:07.480] result() for MulticoreFuture ...
[10:53:07.480] |  :  .  |  :  packages: [n=1] ‘stats’
[10:53:07.480] |  :  .  |  attachPackages() ... DONE
[10:53:07.481] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.481] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:07.482] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.482] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.483] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.483] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:07.483] |  :  .  |  :  .  |  New stack:
[10:53:07.483] |  :  .  |  :  .  |  List of 1
[10:53:07.483] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.483] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.483] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.483] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.483] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.483] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.483] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.495] |  :  .  |  :  .  |  Old stack:
[10:53:07.495] |  :  .  |  :  .  |  List of 1
[10:53:07.495] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.495] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.495] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.495] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.495] |  :  .  |  :  .  |      ...)  
[10:53:07.495] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.495] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.495] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:07.495] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.495] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.495] |  :  .  |  :  .  |      ...)  
[10:53:07.495] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.495] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.500] |  :  .  |  :  .  |  Not identical
[10:53:07.500] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:07.500] |  :  .  |  :  .  |  :  List of 2
[10:53:07.500] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.500] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.500] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.500] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.500] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.500] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.500] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.500] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.500] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.500] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.500] |  :  .  |  :  .  |  :      ...)  
[10:53:07.500] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.500] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.500] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:07.500] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.500] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.500] |  :  .  |  :  .  |  :      ...)  
[10:53:07.500] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.507] |  :  .  |  :  .  |  :  Formals differ
[10:53:07.507] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:07.507] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:07.507] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:07.507] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:07.507] |  :  .  |  :  .  List of future strategies:
[10:53:07.507] |  :  .  |  :  .  1. sequential:
[10:53:07.507] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:07.507] |  :  .  |  :  .     - tweaked: FALSE
[10:53:07.507] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.508] |  :  .  |  :  .  List of 1
[10:53:07.508] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.508] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.508] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.508] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.508] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.508] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.508] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.511] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:07.511] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:07.511] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.511] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:07.511] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.511] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:07.512] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:07.512] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:07.512] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.512] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.512] |  :  .  |  assign_globals() ...
[10:53:07.513] |  :  .  |  List of 2
[10:53:07.513] |  :  .  |   $ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[10:53:07.513] |  :  .  |   $ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[10:53:07.513] |  :  .  |   - attr(*, "where")=List of 2
[10:53:07.513] |  :  .  |    ..$ weight:<environment: R_EmptyEnv> 
[10:53:07.513] |  :  .  |    ..$ group :<environment: R_EmptyEnv> 
[10:53:07.513] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:07.513] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:53:07.513] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:07.513] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:07.518] |  :  .  |  - copied ‘weight’ to environment
[10:53:07.518] |  :  .  |  - copied ‘group’ to environment
[10:53:07.518] |  :  .  |  assign_globals() ... done
[10:53:07.521] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.521] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.521] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.521] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:07.521] |  :  .  |  :  .  |  :  New stack:
[10:53:07.521] |  :  .  |  :  .  |  :  List of 1
[10:53:07.521] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.521] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.521] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.521] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.521] |  :  .  |  :  .  |  :      ...)  
[10:53:07.521] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.521] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.521] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:07.521] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.521] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.521] |  :  .  |  :  .  |  :      ...)  
[10:53:07.521] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.521] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.524] |  :  .  |  :  .  |  :  Old stack:
[10:53:07.524] |  :  .  |  :  .  |  :  List of 1
[10:53:07.524] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.524] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.524] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.524] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.524] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.524] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.524] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.527] |  :  .  |  :  .  |  :  Not identical
[10:53:07.527] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:07.527] |  :  .  |  :  .  |  :  .  List of 2
[10:53:07.527] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.527] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.527] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.527] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.527] |  :  .  |  :  .  |  :  .      ...)  
[10:53:07.527] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.527] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.527] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:07.527] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.527] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.527] |  :  .  |  :  .  |  :  .      ...)  
[10:53:07.527] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.527] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.527] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.527] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.527] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.527] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.527] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.531] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:07.531] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:07.531] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:07.531] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:07.531] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:07.531] |  :  .  |  :  .  |  List of future strategies:
[10:53:07.531] |  :  .  |  :  .  |  1. multicore:
[10:53:07.531] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:07.531] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:07.531] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:07.532] |  :  .  |  :  .  |  List of 1
[10:53:07.532] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.532] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.532] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.532] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.532] |  :  .  |  :  .  |      ...)  
[10:53:07.532] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.532] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.532] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:07.532] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.532] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.532] |  :  .  |  :  .  |      ...)  
[10:53:07.532] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.532] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.536] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:07.536] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:07.536] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.536] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:07.536] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.536] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:07.536] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.536] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.537] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.537] |  readImmediateCondition() ...
[10:53:07.537] |    - path: ‘/tmp/RtmpdMXzO1/.future/immediateConditions’
[10:53:07.538] |   - Number of RDS files: 0
[10:53:07.538] |  readImmediateCondition() ... DONE
[10:53:07.538] |  result() for MulticoreFuture ...
[10:53:07.538] |  result() for MulticoreFuture ... done
[10:53:07.538] result() for MulticoreFuture ... done
[10:53:07.538] result() for MulticoreFuture ...
[10:53:07.539] result() for MulticoreFuture ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[10:53:07.545] getGlobalsAndPackages() ...
[10:53:07.545] |  Searching for globals ...
[10:53:07.548] |  :  globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[10:53:07.548] |  Searching for globals ... DONE
[10:53:07.548] |  Resolving globals: FALSE
[10:53:07.548] |  Search for packages associated with the globals ...
[10:53:07.548] |  :  Packages associated with globals: [2] ‘base’, ‘stats’
[10:53:07.549] |  :  Packages: [2] ‘base’, ‘stats’
[10:53:07.549] |  Search for packages associated with the globals ... DONE
[10:53:07.549] |  Packages after dropping 'base': [1] ‘stats’
[10:53:07.549] |  Packages after dropping non-attached packages: [1] ‘stats’
[10:53:07.549] |  globals: [2] ‘weight’, ‘group’
[10:53:07.549] |  packages: [1] ‘stats’
[10:53:07.550] getGlobalsAndPackages() ... done
[10:53:07.550] run() for Future (‘Future’) ...
[10:53:07.550] |  state: ‘created’
[10:53:07.550] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.550] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.550] |  Using MulticoreFutureBackend ...
[10:53:07.551] |  :  Launching futures ...
[10:53:07.551] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:07.551] |  :  .  |  getFutureData() ...
[10:53:07.551] |  :  .  |  :  getFutureCore() ...
[10:53:07.551] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘stats’
[10:53:07.551] |  :  .  |  :  getFutureCore() ... done
[10:53:07.551] |  :  .  |  :  getFutureCapture() ...
[10:53:07.551] |  :  .  |  :  getFutureCapture() ... done
[10:53:07.552] |  :  .  |  :  getFutureContext() ...
[10:53:07.552] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.552] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:07.552] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.552] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:07.552] |  :  .  |  :  getFutureContext() ... done
[10:53:07.552] |  :  .  |  getFutureData() ... done
[10:53:07.552] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:07.553] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:07.554] |  :  .  |  MulticoreFuture started
[10:53:07.555] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:07.555] |  :  Launching futures ... done
[10:53:07.555] |  :  .  |  attachPackages() ...
[10:53:07.555] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:07.555] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:07.556] |  Using MulticoreFutureBackend ... done
[10:53:07.556] |  :  .  |  attachPackages() ... DONE
[10:53:07.556] run() for Future (‘MulticoreFuture’) ... done
[10:53:07.556] |  :  .  |  attachPackages() ...
[10:53:07.556] |  :  .  |  :  packages: [n=1] ‘stats’
[10:53:07.556] result() for MulticoreFuture ...
[10:53:07.556] |  :  .  |  attachPackages() ... DONE
[10:53:07.557] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.557] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:07.558] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.558] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.559] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.559] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:07.559] |  :  .  |  :  .  |  New stack:
[10:53:07.559] |  :  .  |  :  .  |  List of 1
[10:53:07.559] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.559] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.559] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.559] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.559] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.559] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.559] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.564] |  :  .  |  :  .  |  Old stack:
[10:53:07.564] |  :  .  |  :  .  |  List of 1
[10:53:07.564] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.564] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.564] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.564] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.564] |  :  .  |  :  .  |      ...)  
[10:53:07.564] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.564] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.564] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:07.564] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.564] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.564] |  :  .  |  :  .  |      ...)  
[10:53:07.564] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.564] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.569] |  :  .  |  :  .  |  Not identical
[10:53:07.569] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:07.569] |  :  .  |  :  .  |  :  List of 2
[10:53:07.569] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.569] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.569] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.569] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.569] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.569] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.569] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.569] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.569] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.569] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.569] |  :  .  |  :  .  |  :      ...)  
[10:53:07.569] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.569] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.569] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:07.569] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.569] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.569] |  :  .  |  :  .  |  :      ...)  
[10:53:07.569] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.581] |  :  .  |  :  .  |  :  Formals differ
[10:53:07.581] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:07.581] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:07.581] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:07.581] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:07.582] |  :  .  |  :  .  List of future strategies:
[10:53:07.582] |  :  .  |  :  .  1. sequential:
[10:53:07.582] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:07.582] |  :  .  |  :  .     - tweaked: FALSE
[10:53:07.582] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.583] |  :  .  |  :  .  List of 1
[10:53:07.583] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.583] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.583] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.583] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.583] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.583] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.583] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.586] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:07.586] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:07.586] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.586] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:07.586] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.587] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:07.587] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:07.587] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:07.587] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.587] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.588] |  :  .  |  assign_globals() ...
[10:53:07.588] |  :  .  |  List of 2
[10:53:07.588] |  :  .  |   $ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[10:53:07.588] |  :  .  |   $ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[10:53:07.588] |  :  .  |   - attr(*, "where")=List of 2
[10:53:07.588] |  :  .  |    ..$ weight:<environment: R_EmptyEnv> 
[10:53:07.588] |  :  .  |    ..$ group :<environment: R_EmptyEnv> 
[10:53:07.588] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:07.588] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:53:07.588] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:07.588] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:07.591] |  :  .  |  - copied ‘weight’ to environment
[10:53:07.592] |  :  .  |  - copied ‘group’ to environment
[10:53:07.592] |  :  .  |  assign_globals() ... done
[10:53:07.595] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.595] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.595] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.595] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:07.595] |  :  .  |  :  .  |  :  New stack:
[10:53:07.596] |  :  .  |  :  .  |  :  List of 1
[10:53:07.596] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.596] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.596] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.596] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.596] |  :  .  |  :  .  |  :      ...)  
[10:53:07.596] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.596] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.596] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:07.596] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.596] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.596] |  :  .  |  :  .  |  :      ...)  
[10:53:07.596] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.596] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.599] |  :  .  |  :  .  |  :  Old stack:
[10:53:07.599] |  :  .  |  :  .  |  :  List of 1
[10:53:07.599] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.599] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.599] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.599] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.599] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.599] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.599] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.603] |  :  .  |  :  .  |  :  Not identical
[10:53:07.603] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:07.603] |  :  .  |  :  .  |  :  .  List of 2
[10:53:07.603] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.603] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.603] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.603] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.603] |  :  .  |  :  .  |  :  .      ...)  
[10:53:07.603] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.603] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.603] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:07.603] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.603] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.603] |  :  .  |  :  .  |  :  .      ...)  
[10:53:07.603] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.603] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.603] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.603] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.603] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.603] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.603] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.608] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:07.608] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:07.608] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:07.608] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:07.608] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:07.608] |  :  .  |  :  .  |  List of future strategies:
[10:53:07.608] |  :  .  |  :  .  |  1. multicore:
[10:53:07.608] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:07.608] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:07.608] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:07.608] |  :  .  |  :  .  |  List of 1
[10:53:07.608] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.608] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.608] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.608] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.608] |  :  .  |  :  .  |      ...)  
[10:53:07.608] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.608] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.608] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:07.608] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.608] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.608] |  :  .  |  :  .  |      ...)  
[10:53:07.608] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.608] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.611] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:07.612] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:07.612] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.612] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:07.612] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.612] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:07.612] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.612] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.612] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.613] |  readImmediateCondition() ...
[10:53:07.613] |    - path: ‘/tmp/RtmpdMXzO1/.future/immediateConditions’
[10:53:07.614] |   - Number of RDS files: 0
[10:53:07.614] |  readImmediateCondition() ... DONE
[10:53:07.614] |  result() for MulticoreFuture ...
[10:53:07.614] |  result() for MulticoreFuture ... done
[10:53:07.614] result() for MulticoreFuture ... done
[10:53:07.614] result() for MulticoreFuture ...
[10:53:07.615] result() for MulticoreFuture ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[10:53:07.617] getGlobalsAndPackages() ...
[10:53:07.617] |  Searching for globals ...
[10:53:07.620] |  :  globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[10:53:07.620] |  Searching for globals ... DONE
[10:53:07.620] |  Resolving globals: FALSE
[10:53:07.620] |  Search for packages associated with the globals ...
[10:53:07.621] |  :  Packages associated with globals: [2] ‘base’, ‘stats’
[10:53:07.621] |  :  Packages: [2] ‘base’, ‘stats’
[10:53:07.621] |  Search for packages associated with the globals ... DONE
[10:53:07.621] |  Packages after dropping 'base': [1] ‘stats’
[10:53:07.622] |  Packages after dropping non-attached packages: [1] ‘stats’
[10:53:07.622] |  globals: [2] ‘weight’, ‘group’
[10:53:07.622] |  packages: [1] ‘stats’
[10:53:07.622] getGlobalsAndPackages() ... done
[10:53:07.622] run() for Future (‘Future’) ...
[10:53:07.623] |  state: ‘created’
[10:53:07.623] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.623] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.623] |  Using MulticoreFutureBackend ...
[10:53:07.623] |  :  Launching futures ...
[10:53:07.623] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:07.623] |  :  .  |  getFutureData() ...
[10:53:07.624] |  :  .  |  :  getFutureCore() ...
[10:53:07.624] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘stats’
[10:53:07.624] |  :  .  |  :  getFutureCore() ... done
[10:53:07.624] |  :  .  |  :  getFutureCapture() ...
[10:53:07.624] |  :  .  |  :  getFutureCapture() ... done
[10:53:07.624] |  :  .  |  :  getFutureContext() ...
[10:53:07.624] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.624] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:07.625] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.625] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:07.625] |  :  .  |  :  getFutureContext() ... done
[10:53:07.625] |  :  .  |  getFutureData() ... done
[10:53:07.625] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:07.627] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:07.629] |  :  .  |  MulticoreFuture started
[10:53:07.630] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:07.630] |  :  .  |  attachPackages() ...
[10:53:07.630] |  :  Launching futures ... done
[10:53:07.630] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:07.631] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:07.631] |  :  .  |  attachPackages() ... DONE
[10:53:07.631] |  Using MulticoreFutureBackend ... done
[10:53:07.632] |  :  .  |  attachPackages() ...
[10:53:07.632] run() for Future (‘MulticoreFuture’) ... done
[10:53:07.632] |  :  .  |  :  packages: [n=1] ‘stats’
[10:53:07.632] result() for MulticoreFuture ...
[10:53:07.633] |  :  .  |  attachPackages() ... DONE
[10:53:07.634] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.634] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:07.635] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.635] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.636] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.636] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:07.637] |  :  .  |  :  .  |  New stack:
[10:53:07.637] |  :  .  |  :  .  |  List of 1
[10:53:07.637] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.637] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.637] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.637] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.637] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.637] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.637] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.641] |  :  .  |  :  .  |  Old stack:
[10:53:07.642] |  :  .  |  :  .  |  List of 1
[10:53:07.642] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.642] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.642] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.642] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.642] |  :  .  |  :  .  |      ...)  
[10:53:07.642] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.642] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.642] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:07.642] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.642] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.642] |  :  .  |  :  .  |      ...)  
[10:53:07.642] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.642] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.647] |  :  .  |  :  .  |  Not identical
[10:53:07.647] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:07.648] |  :  .  |  :  .  |  :  List of 2
[10:53:07.648] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.648] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.648] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.648] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.648] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.648] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.648] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.648] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.648] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.648] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.648] |  :  .  |  :  .  |  :      ...)  
[10:53:07.648] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.648] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.648] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:07.648] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.648] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.648] |  :  .  |  :  .  |  :      ...)  
[10:53:07.648] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.656] |  :  .  |  :  .  |  :  Formals differ
[10:53:07.656] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:07.656] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:07.656] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:07.656] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:07.657] |  :  .  |  :  .  List of future strategies:
[10:53:07.657] |  :  .  |  :  .  1. sequential:
[10:53:07.657] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:07.657] |  :  .  |  :  .     - tweaked: FALSE
[10:53:07.657] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.657] |  :  .  |  :  .  List of 1
[10:53:07.657] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.657] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.657] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.657] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.657] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.657] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.657] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.660] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:07.660] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:07.661] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.661] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:07.661] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.661] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:07.661] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:07.662] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:07.662] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.662] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.662] |  :  .  |  assign_globals() ...
[10:53:07.662] |  :  .  |  List of 2
[10:53:07.662] |  :  .  |   $ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[10:53:07.662] |  :  .  |   $ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[10:53:07.662] |  :  .  |   - attr(*, "where")=List of 2
[10:53:07.662] |  :  .  |    ..$ weight:<environment: R_EmptyEnv> 
[10:53:07.662] |  :  .  |    ..$ group :<environment: R_EmptyEnv> 
[10:53:07.662] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:07.662] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:53:07.662] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:07.662] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:07.668] |  :  .  |  - copied ‘weight’ to environment
[10:53:07.668] |  :  .  |  - copied ‘group’ to environment
[10:53:07.668] |  :  .  |  assign_globals() ... done
[10:53:07.671] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.671] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.671] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.671] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:07.672] |  :  .  |  :  .  |  :  New stack:
[10:53:07.672] |  :  .  |  :  .  |  :  List of 1
[10:53:07.672] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.672] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.672] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.672] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.672] |  :  .  |  :  .  |  :      ...)  
[10:53:07.672] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.672] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.672] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:07.672] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.672] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.672] |  :  .  |  :  .  |  :      ...)  
[10:53:07.672] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.672] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.675] |  :  .  |  :  .  |  :  Old stack:
[10:53:07.675] |  :  .  |  :  .  |  :  List of 1
[10:53:07.675] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.675] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.675] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.675] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.675] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.675] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.675] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.677] |  :  .  |  :  .  |  :  Not identical
[10:53:07.677] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:07.677] |  :  .  |  :  .  |  :  .  List of 2
[10:53:07.677] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.677] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.677] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.677] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.677] |  :  .  |  :  .  |  :  .      ...)  
[10:53:07.677] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.677] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.677] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:07.677] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.677] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.677] |  :  .  |  :  .  |  :  .      ...)  
[10:53:07.677] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.677] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.677] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.677] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.677] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.677] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.677] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.681] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:07.681] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:07.681] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:07.682] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:07.682] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:07.682] |  :  .  |  :  .  |  List of future strategies:
[10:53:07.682] |  :  .  |  :  .  |  1. multicore:
[10:53:07.682] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:07.682] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:07.682] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:07.682] |  :  .  |  :  .  |  List of 1
[10:53:07.682] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.682] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.682] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.682] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.682] |  :  .  |  :  .  |      ...)  
[10:53:07.682] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.682] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.682] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:07.682] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.682] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.682] |  :  .  |  :  .  |      ...)  
[10:53:07.682] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.682] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.686] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:07.686] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:07.686] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.686] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:07.686] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.687] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:07.687] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.687] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.687] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.688] |  readImmediateCondition() ...
[10:53:07.688] |    - path: ‘/tmp/RtmpdMXzO1/.future/immediateConditions’
[10:53:07.688] |   - Number of RDS files: 0
[10:53:07.688] |  readImmediateCondition() ... DONE
[10:53:07.689] |  result() for MulticoreFuture ...
[10:53:07.689] |  result() for MulticoreFuture ... done
[10:53:07.689] result() for MulticoreFuture ... done
[10:53:07.689] result() for MulticoreFuture ...
[10:53:07.690] result() for MulticoreFuture ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[10:53:07.692] getGlobalsAndPackages() ...
[10:53:07.693] |  Searching for globals ...
[10:53:07.695] |  :  globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[10:53:07.695] |  Searching for globals ... DONE
[10:53:07.695] |  Resolving globals: FALSE
[10:53:07.695] |  Search for packages associated with the globals ...
[10:53:07.696] |  :  Packages associated with globals: [2] ‘base’, ‘stats’
[10:53:07.696] |  :  Packages: [2] ‘base’, ‘stats’
[10:53:07.696] |  Search for packages associated with the globals ... DONE
[10:53:07.696] |  Packages after dropping 'base': [1] ‘stats’
[10:53:07.697] |  Packages after dropping non-attached packages: [1] ‘stats’
[10:53:07.697] |  globals: [2] ‘weight’, ‘group’
[10:53:07.697] |  packages: [1] ‘stats’
[10:53:07.697] getGlobalsAndPackages() ... done
[10:53:07.697] run() for Future (‘Future’) ...
[10:53:07.698] |  state: ‘created’
[10:53:07.698] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.698] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.698] |  Using MulticoreFutureBackend ...
[10:53:07.698] |  :  Launching futures ...
[10:53:07.698] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:07.698] |  :  .  |  getFutureData() ...
[10:53:07.699] |  :  .  |  :  getFutureCore() ...
[10:53:07.699] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘stats’
[10:53:07.699] |  :  .  |  :  getFutureCore() ... done
[10:53:07.699] |  :  .  |  :  getFutureCapture() ...
[10:53:07.699] |  :  .  |  :  getFutureCapture() ... done
[10:53:07.699] |  :  .  |  :  getFutureContext() ...
[10:53:07.699] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.699] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:07.700] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.700] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:07.700] |  :  .  |  :  getFutureContext() ... done
[10:53:07.700] |  :  .  |  getFutureData() ... done
[10:53:07.700] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:07.700] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:07.702] |  :  .  |  MulticoreFuture started
[10:53:07.703] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:07.703] |  :  Launching futures ... done
[10:53:07.703] |  :  .  |  attachPackages() ...
[10:53:07.703] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:07.703] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:07.703] |  Using MulticoreFutureBackend ... done
[10:53:07.703] run() for Future (‘MulticoreFuture’) ... done
[10:53:07.703] |  :  .  |  attachPackages() ... DONE
[10:53:07.704] |  :  .  |  attachPackages() ...
[10:53:07.704] result() for MulticoreFuture ...
[10:53:07.704] |  :  .  |  :  packages: [n=1] ‘stats’
[10:53:07.704] |  :  .  |  attachPackages() ... DONE
[10:53:07.705] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.705] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:07.706] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.706] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.707] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.707] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:07.707] |  :  .  |  :  .  |  New stack:
[10:53:07.707] |  :  .  |  :  .  |  List of 1
[10:53:07.707] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.707] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.707] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.707] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.707] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.707] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.707] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.711] |  :  .  |  :  .  |  Old stack:
[10:53:07.711] |  :  .  |  :  .  |  List of 1
[10:53:07.711] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.711] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.711] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.711] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.711] |  :  .  |  :  .  |      ...)  
[10:53:07.711] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.711] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.711] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:07.711] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.711] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.711] |  :  .  |  :  .  |      ...)  
[10:53:07.711] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.711] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.716] |  :  .  |  :  .  |  Not identical
[10:53:07.717] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:07.719] |  :  .  |  :  .  |  :  List of 2
[10:53:07.719] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.719] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.719] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.719] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.719] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.719] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.719] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.719] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.719] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.719] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.719] |  :  .  |  :  .  |  :      ...)  
[10:53:07.719] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.719] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.719] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:07.719] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.719] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.719] |  :  .  |  :  .  |  :      ...)  
[10:53:07.719] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.729] |  :  .  |  :  .  |  :  Formals differ
[10:53:07.729] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:07.729] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:07.730] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:07.730] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:07.730] |  :  .  |  :  .  List of future strategies:
[10:53:07.730] |  :  .  |  :  .  1. sequential:
[10:53:07.730] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:07.730] |  :  .  |  :  .     - tweaked: FALSE
[10:53:07.730] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.730] |  :  .  |  :  .  List of 1
[10:53:07.730] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.730] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.730] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.730] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.730] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.730] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.730] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.733] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:07.734] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:07.734] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.734] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:07.734] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.734] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:07.735] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:07.735] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:07.735] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.735] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.735] |  :  .  |  assign_globals() ...
[10:53:07.735] |  :  .  |  List of 2
[10:53:07.735] |  :  .  |   $ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[10:53:07.735] |  :  .  |   $ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[10:53:07.735] |  :  .  |   - attr(*, "where")=List of 2
[10:53:07.735] |  :  .  |    ..$ weight:<environment: R_EmptyEnv> 
[10:53:07.735] |  :  .  |    ..$ group :<environment: R_EmptyEnv> 
[10:53:07.735] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:07.735] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:53:07.735] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:07.735] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:07.739] |  :  .  |  - copied ‘weight’ to environment
[10:53:07.739] |  :  .  |  - copied ‘group’ to environment
[10:53:07.739] |  :  .  |  assign_globals() ... done
[10:53:07.742] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.742] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.742] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.742] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:07.743] |  :  .  |  :  .  |  :  New stack:
[10:53:07.743] |  :  .  |  :  .  |  :  List of 1
[10:53:07.743] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.743] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.743] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.743] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.743] |  :  .  |  :  .  |  :      ...)  
[10:53:07.743] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.743] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.743] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:07.743] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.743] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.743] |  :  .  |  :  .  |  :      ...)  
[10:53:07.743] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.743] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.747] |  :  .  |  :  .  |  :  Old stack:
[10:53:07.747] |  :  .  |  :  .  |  :  List of 1
[10:53:07.747] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.747] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.747] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.747] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.747] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.747] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.747] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.749] |  :  .  |  :  .  |  :  Not identical
[10:53:07.749] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:07.749] |  :  .  |  :  .  |  :  .  List of 2
[10:53:07.749] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.749] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.749] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.749] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.749] |  :  .  |  :  .  |  :  .      ...)  
[10:53:07.749] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.749] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.749] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:07.749] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.749] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.749] |  :  .  |  :  .  |  :  .      ...)  
[10:53:07.749] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.749] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.749] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.749] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.749] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.749] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.749] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.754] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:07.754] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:07.754] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:07.754] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:07.754] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:07.754] |  :  .  |  :  .  |  List of future strategies:
[10:53:07.754] |  :  .  |  :  .  |  1. multicore:
[10:53:07.754] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:07.754] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:07.754] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:07.755] |  :  .  |  :  .  |  List of 1
[10:53:07.755] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.755] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.755] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.755] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.755] |  :  .  |  :  .  |      ...)  
[10:53:07.755] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.755] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.755] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:07.755] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.755] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.755] |  :  .  |  :  .  |      ...)  
[10:53:07.755] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.755] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.757] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:07.757] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:07.758] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.758] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:07.758] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.758] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:07.758] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.758] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.758] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.759] |  readImmediateCondition() ...
[10:53:07.759] |    - path: ‘/tmp/RtmpdMXzO1/.future/immediateConditions’
[10:53:07.759] |   - Number of RDS files: 0
[10:53:07.760] |  readImmediateCondition() ... DONE
[10:53:07.760] |  result() for MulticoreFuture ...
[10:53:07.760] |  result() for MulticoreFuture ... done
[10:53:07.760] result() for MulticoreFuture ... done
[10:53:07.760] result() for MulticoreFuture ...
[10:53:07.760] result() for MulticoreFuture ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

- Globals - one-side formulas, e.g. xtabs(~ x) ...
[10:53:07.763] getGlobalsAndPackages() ...
[10:53:07.763] |  Searching for globals ...
[10:53:07.765] |  :  globals found: [4] ‘{’, ‘xtabs’, ‘x’, ‘~’
[10:53:07.765] |  Searching for globals ... DONE
[10:53:07.765] |  Resolving globals: FALSE
[10:53:07.765] |  Search for packages associated with the globals ...
[10:53:07.766] |  :  Packages associated with globals: [2] ‘base’, ‘stats’
[10:53:07.766] |  :  Packages: [2] ‘base’, ‘stats’
[10:53:07.766] |  Search for packages associated with the globals ... DONE
[10:53:07.766] |  Packages after dropping 'base': [1] ‘stats’
[10:53:07.767] |  Packages after dropping non-attached packages: [1] ‘stats’
[10:53:07.767] |  globals: [1] ‘x’
[10:53:07.767] |  packages: [1] ‘stats’
[10:53:07.767] getGlobalsAndPackages() ... done
[10:53:07.767] run() for Future (‘Future’) ...
[10:53:07.768] |  state: ‘created’
[10:53:07.768] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.768] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.768] |  Using MulticoreFutureBackend ...
[10:53:07.768] |  :  Launching futures ...
[10:53:07.768] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:07.770] |  :  .  |  getFutureData() ...
[10:53:07.770] |  :  .  |  :  getFutureCore() ...
[10:53:07.771] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘stats’
[10:53:07.771] |  :  .  |  :  getFutureCore() ... done
[10:53:07.771] |  :  .  |  :  getFutureCapture() ...
[10:53:07.771] |  :  .  |  :  getFutureCapture() ... done
[10:53:07.772] |  :  .  |  :  getFutureContext() ...
[10:53:07.772] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.772] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:07.772] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.772] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:07.773] |  :  .  |  :  getFutureContext() ... done
[10:53:07.773] |  :  .  |  getFutureData() ... done
[10:53:07.773] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:07.773] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:07.775] |  :  .  |  MulticoreFuture started
[10:53:07.776] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:07.776] |  :  .  |  attachPackages() ...
[10:53:07.777] |  :  Launching futures ... done
[10:53:07.777] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:07.777] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:07.777] |  :  .  |  attachPackages() ... DONE
[10:53:07.777] |  Using MulticoreFutureBackend ... done
[10:53:07.777] |  :  .  |  attachPackages() ...
[10:53:07.777] run() for Future (‘MulticoreFuture’) ... done
[10:53:07.778] |  :  .  |  :  packages: [n=1] ‘stats’
[10:53:07.778] result() for MulticoreFuture ...
[10:53:07.778] |  :  .  |  attachPackages() ... DONE
[10:53:07.779] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.779] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:07.780] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.780] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.781] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.781] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:07.781] |  :  .  |  :  .  |  New stack:
[10:53:07.781] |  :  .  |  :  .  |  List of 1
[10:53:07.781] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.781] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.781] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.781] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.781] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.781] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.781] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.786] |  :  .  |  :  .  |  Old stack:
[10:53:07.786] |  :  .  |  :  .  |  List of 1
[10:53:07.786] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.786] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.786] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.786] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.786] |  :  .  |  :  .  |      ...)  
[10:53:07.786] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.786] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.786] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:07.786] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.786] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.786] |  :  .  |  :  .  |      ...)  
[10:53:07.786] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.786] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.791] |  :  .  |  :  .  |  Not identical
[10:53:07.791] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:07.791] |  :  .  |  :  .  |  :  List of 2
[10:53:07.791] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.791] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.791] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.791] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.791] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.791] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.791] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.791] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.791] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.791] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.791] |  :  .  |  :  .  |  :      ...)  
[10:53:07.791] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.791] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.791] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:07.791] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.791] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.791] |  :  .  |  :  .  |  :      ...)  
[10:53:07.791] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.798] |  :  .  |  :  .  |  :  Formals differ
[10:53:07.798] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:07.798] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:07.798] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:07.798] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:07.798] |  :  .  |  :  .  List of future strategies:
[10:53:07.798] |  :  .  |  :  .  1. sequential:
[10:53:07.798] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:07.798] |  :  .  |  :  .     - tweaked: FALSE
[10:53:07.798] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.799] |  :  .  |  :  .  List of 1
[10:53:07.799] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.799] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.799] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.799] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.799] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.799] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.799] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.802] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:07.804] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:07.805] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.805] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:07.805] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.806] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:07.806] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:07.806] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:07.806] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.806] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.807] |  :  .  |  assign_globals() ...
[10:53:07.807] |  :  .  |  List of 1
[10:53:07.807] |  :  .  |   $ x: num [1:5] 1 1 2 2 2
[10:53:07.807] |  :  .  |   - attr(*, "where")=List of 1
[10:53:07.807] |  :  .  |    ..$ x:<environment: R_EmptyEnv> 
[10:53:07.807] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:07.807] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:53:07.807] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:07.807] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:07.810] |  :  .  |  - copied ‘x’ to environment
[10:53:07.810] |  :  .  |  assign_globals() ... done
[10:53:07.812] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.812] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.813] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.813] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:07.813] |  :  .  |  :  .  |  :  New stack:
[10:53:07.813] |  :  .  |  :  .  |  :  List of 1
[10:53:07.813] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.813] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.813] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.813] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.813] |  :  .  |  :  .  |  :      ...)  
[10:53:07.813] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.813] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.813] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:07.813] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.813] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.813] |  :  .  |  :  .  |  :      ...)  
[10:53:07.813] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.813] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.816] |  :  .  |  :  .  |  :  Old stack:
[10:53:07.816] |  :  .  |  :  .  |  :  List of 1
[10:53:07.816] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.816] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.816] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.816] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.816] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.816] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.816] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.818] |  :  .  |  :  .  |  :  Not identical
[10:53:07.818] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:07.818] |  :  .  |  :  .  |  :  .  List of 2
[10:53:07.818] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.818] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.818] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.818] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.818] |  :  .  |  :  .  |  :  .      ...)  
[10:53:07.818] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.818] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.818] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:07.818] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.818] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.818] |  :  .  |  :  .  |  :  .      ...)  
[10:53:07.818] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.818] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.818] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.818] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.818] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.818] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.818] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.822] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:07.823] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:07.823] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:07.823] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:07.823] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:07.823] |  :  .  |  :  .  |  List of future strategies:
[10:53:07.823] |  :  .  |  :  .  |  1. multicore:
[10:53:07.823] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:07.823] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:07.823] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:07.824] |  :  .  |  :  .  |  List of 1
[10:53:07.824] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.824] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.824] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.824] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.824] |  :  .  |  :  .  |      ...)  
[10:53:07.824] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.824] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.824] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:07.824] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.824] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.824] |  :  .  |  :  .  |      ...)  
[10:53:07.824] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.824] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.827] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:07.827] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:07.827] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.827] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:07.828] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.828] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:07.828] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.828] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.828] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.829] |  readImmediateCondition() ...
[10:53:07.829] |    - path: ‘/tmp/RtmpdMXzO1/.future/immediateConditions’
[10:53:07.829] |   - Number of RDS files: 0
[10:53:07.829] |  readImmediateCondition() ... DONE
[10:53:07.830] |  result() for MulticoreFuture ...
[10:53:07.830] |  result() for MulticoreFuture ... done
[10:53:07.830] result() for MulticoreFuture ... done
[10:53:07.830] result() for MulticoreFuture ...
[10:53:07.830] result() for MulticoreFuture ... done
x
1 2 
2 3 
[10:53:07.831] getGlobalsAndPackages() ...
[10:53:07.832] |  Searching for globals ...
[10:53:07.833] |  :  globals found: [4] ‘{’, ‘xtabs’, ‘x’, ‘~’
[10:53:07.834] |  Searching for globals ... DONE
[10:53:07.834] |  Resolving globals: FALSE
[10:53:07.834] |  Search for packages associated with the globals ...
[10:53:07.834] |  :  Packages associated with globals: [2] ‘base’, ‘stats’
[10:53:07.835] |  :  Packages: [2] ‘base’, ‘stats’
[10:53:07.835] |  Search for packages associated with the globals ... DONE
[10:53:07.835] |  Packages after dropping 'base': [1] ‘stats’
[10:53:07.835] |  Packages after dropping non-attached packages: [1] ‘stats’
[10:53:07.835] |  globals: [1] ‘x’
[10:53:07.835] |  packages: [1] ‘stats’
[10:53:07.836] getGlobalsAndPackages() ... done
[10:53:07.836] run() for Future (‘Future’) ...
[10:53:07.836] |  state: ‘created’
[10:53:07.836] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.836] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.836] |  Using MulticoreFutureBackend ...
[10:53:07.837] |  :  Launching futures ...
[10:53:07.837] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:07.837] |  :  .  |  getFutureData() ...
[10:53:07.837] |  :  .  |  :  getFutureCore() ...
[10:53:07.837] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘stats’
[10:53:07.837] |  :  .  |  :  getFutureCore() ... done
[10:53:07.837] |  :  .  |  :  getFutureCapture() ...
[10:53:07.838] |  :  .  |  :  getFutureCapture() ... done
[10:53:07.838] |  :  .  |  :  getFutureContext() ...
[10:53:07.838] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.838] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:07.838] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.838] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:07.838] |  :  .  |  :  getFutureContext() ... done
[10:53:07.839] |  :  .  |  getFutureData() ... done
[10:53:07.839] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:07.839] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:07.841] |  :  .  |  MulticoreFuture started
[10:53:07.841] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:07.841] |  :  Launching futures ... done
[10:53:07.841] |  :  .  |  attachPackages() ...
[10:53:07.842] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:07.841] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:07.842] |  Using MulticoreFutureBackend ... done
[10:53:07.842] |  :  .  |  attachPackages() ... DONE
[10:53:07.842] run() for Future (‘MulticoreFuture’) ... done
[10:53:07.842] |  :  .  |  attachPackages() ...
[10:53:07.842] |  :  .  |  :  packages: [n=1] ‘stats’
[10:53:07.842] result() for MulticoreFuture ...
[10:53:07.843] |  :  .  |  attachPackages() ... DONE
[10:53:07.843] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.844] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:07.844] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.844] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.845] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.845] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:07.845] |  :  .  |  :  .  |  New stack:
[10:53:07.845] |  :  .  |  :  .  |  List of 1
[10:53:07.845] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.845] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.845] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.845] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.845] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.845] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.845] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.850] |  :  .  |  :  .  |  Old stack:
[10:53:07.850] |  :  .  |  :  .  |  List of 1
[10:53:07.850] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.850] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.850] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.850] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.850] |  :  .  |  :  .  |      ...)  
[10:53:07.850] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.850] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.850] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:07.850] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.850] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.850] |  :  .  |  :  .  |      ...)  
[10:53:07.850] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.850] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.854] |  :  .  |  :  .  |  Not identical
[10:53:07.855] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:07.855] |  :  .  |  :  .  |  :  List of 2
[10:53:07.855] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.855] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.855] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.855] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.855] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.855] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.855] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.855] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.855] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.855] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.855] |  :  .  |  :  .  |  :      ...)  
[10:53:07.855] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.855] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.855] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:07.855] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.855] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.855] |  :  .  |  :  .  |  :      ...)  
[10:53:07.855] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.867] |  :  .  |  :  .  |  :  Formals differ
[10:53:07.867] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:07.867] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:07.867] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:07.867] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:07.867] |  :  .  |  :  .  List of future strategies:
[10:53:07.867] |  :  .  |  :  .  1. sequential:
[10:53:07.867] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:07.867] |  :  .  |  :  .     - tweaked: FALSE
[10:53:07.867] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.868] |  :  .  |  :  .  List of 1
[10:53:07.868] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.868] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.868] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.868] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.868] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.868] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.868] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.871] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:07.871] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:07.871] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.871] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:07.872] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.872] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:07.872] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:07.872] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:07.872] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.873] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.873] |  :  .  |  assign_globals() ...
[10:53:07.873] |  :  .  |  List of 1
[10:53:07.873] |  :  .  |   $ x: num [1:5] 1 1 2 2 2
[10:53:07.873] |  :  .  |   - attr(*, "where")=List of 1
[10:53:07.873] |  :  .  |    ..$ x:<environment: R_EmptyEnv> 
[10:53:07.873] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:07.873] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:53:07.873] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:07.873] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:07.876] |  :  .  |  - copied ‘x’ to environment
[10:53:07.876] |  :  .  |  assign_globals() ... done
[10:53:07.878] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.878] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.878] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.879] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:07.879] |  :  .  |  :  .  |  :  New stack:
[10:53:07.879] |  :  .  |  :  .  |  :  List of 1
[10:53:07.879] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.879] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.879] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.879] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.879] |  :  .  |  :  .  |  :      ...)  
[10:53:07.879] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.879] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.879] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:07.879] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.879] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.879] |  :  .  |  :  .  |  :      ...)  
[10:53:07.879] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.879] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.882] |  :  .  |  :  .  |  :  Old stack:
[10:53:07.883] |  :  .  |  :  .  |  :  List of 1
[10:53:07.883] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.883] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.883] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.883] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.883] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.883] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.883] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.885] |  :  .  |  :  .  |  :  Not identical
[10:53:07.885] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:07.885] |  :  .  |  :  .  |  :  .  List of 2
[10:53:07.885] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.885] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.885] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.885] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.885] |  :  .  |  :  .  |  :  .      ...)  
[10:53:07.885] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.885] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.885] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:07.885] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.885] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.885] |  :  .  |  :  .  |  :  .      ...)  
[10:53:07.885] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.885] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.885] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.885] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.885] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.885] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.885] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.890] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:07.890] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:07.890] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:07.890] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:07.890] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:07.890] |  :  .  |  :  .  |  List of future strategies:
[10:53:07.890] |  :  .  |  :  .  |  1. multicore:
[10:53:07.890] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:07.890] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:07.890] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:07.890] |  :  .  |  :  .  |  List of 1
[10:53:07.890] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.890] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.890] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.890] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.890] |  :  .  |  :  .  |      ...)  
[10:53:07.890] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.890] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.890] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:07.890] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.890] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.890] |  :  .  |  :  .  |      ...)  
[10:53:07.890] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.890] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.893] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:07.893] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:07.894] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.894] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:07.894] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.894] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:07.894] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.894] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.894] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.895] |  readImmediateCondition() ...
[10:53:07.895] |    - path: ‘/tmp/RtmpdMXzO1/.future/immediateConditions’
[10:53:07.895] |   - Number of RDS files: 0
[10:53:07.895] |  readImmediateCondition() ... DONE
[10:53:07.896] |  result() for MulticoreFuture ...
[10:53:07.896] |  result() for MulticoreFuture ... done
[10:53:07.896] result() for MulticoreFuture ... done
[10:53:07.896] result() for MulticoreFuture ...
[10:53:07.896] result() for MulticoreFuture ... done
x
1 2 
2 3 
- Globals - lm(<formula>, data = cars) ...
- Globals - lm(<formula #1 (‘a’)>, data = cars) ...

Call:
lm(formula = dist ~ . - 1, data = cars)

Coefficients:
speed  
2.909  

[10:53:07.899] getGlobalsAndPackages() ...
[10:53:07.899] |  Searching for globals ...
[10:53:07.901] |  :  globals found: [7] ‘{’, ‘lm’, ‘dist’, ‘-’, ‘.’, ‘~’, ‘cars’
[10:53:07.901] |  Searching for globals ... DONE
[10:53:07.902] |  Resolving globals: FALSE
[10:53:07.902] |  Search for packages associated with the globals ...
[10:53:07.902] |  :  Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[10:53:07.902] |  :  Packages: [3] ‘base’, ‘stats’, ‘datasets’
[10:53:07.903] |  Search for packages associated with the globals ... DONE
[10:53:07.903] |  Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[10:53:07.903] |  Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[10:53:07.903] |  globals: [0] 
[10:53:07.903] |  packages: [2] ‘stats’, ‘datasets’
[10:53:07.903] getGlobalsAndPackages() ... done
[10:53:07.904] run() for Future (‘Future’) ...
[10:53:07.904] |  state: ‘created’
[10:53:07.904] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.904] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.904] |  Using MulticoreFutureBackend ...
[10:53:07.905] |  :  Launching futures ...
[10:53:07.905] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:07.905] |  :  .  |  getFutureData() ...
[10:53:07.905] |  :  .  |  :  getFutureCore() ...
[10:53:07.905] |  :  .  |  :  .  Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[10:53:07.907] |  :  .  |  :  getFutureCore() ... done
[10:53:07.907] |  :  .  |  :  getFutureCapture() ...
[10:53:07.907] |  :  .  |  :  getFutureCapture() ... done
[10:53:07.907] |  :  .  |  :  getFutureContext() ...
[10:53:07.908] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.908] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:07.908] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.908] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:07.909] |  :  .  |  :  getFutureContext() ... done
[10:53:07.909] |  :  .  |  getFutureData() ... done
[10:53:07.909] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:07.909] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:07.911] |  :  .  |  MulticoreFuture started
[10:53:07.912] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:07.912] |  :  .  |  attachPackages() ...
[10:53:07.912] |  :  Launching futures ... done
[10:53:07.913] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:07.913] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:07.913] |  :  .  |  attachPackages() ... DONE
[10:53:07.913] |  Using MulticoreFutureBackend ... done
[10:53:07.914] |  :  .  |  attachPackages() ...
[10:53:07.914] run() for Future (‘MulticoreFuture’) ... done
[10:53:07.914] |  :  .  |  :  packages: [n=2] ‘stats’, ‘datasets’
[10:53:07.914] result() for MulticoreFuture ...
[10:53:07.914] |  :  .  |  attachPackages() ... DONE
[10:53:07.915] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.916] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:07.916] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.917] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.917] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.918] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:07.918] |  :  .  |  :  .  |  New stack:
[10:53:07.918] |  :  .  |  :  .  |  List of 1
[10:53:07.918] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.918] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.918] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.918] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.918] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.918] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.918] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.922] |  :  .  |  :  .  |  Old stack:
[10:53:07.923] |  :  .  |  :  .  |  List of 1
[10:53:07.923] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.923] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.923] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.923] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.923] |  :  .  |  :  .  |      ...)  
[10:53:07.923] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.923] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.923] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:07.923] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.923] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.923] |  :  .  |  :  .  |      ...)  
[10:53:07.923] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.923] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.927] |  :  .  |  :  .  |  Not identical
[10:53:07.928] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:07.928] |  :  .  |  :  .  |  :  List of 2
[10:53:07.928] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.928] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.928] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.928] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.928] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.928] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.928] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.928] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.928] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.928] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.928] |  :  .  |  :  .  |  :      ...)  
[10:53:07.928] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.928] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.928] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:07.928] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.928] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.928] |  :  .  |  :  .  |  :      ...)  
[10:53:07.928] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.934] |  :  .  |  :  .  |  :  Formals differ
[10:53:07.934] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:07.934] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:07.935] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:07.935] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:07.935] |  :  .  |  :  .  List of future strategies:
[10:53:07.935] |  :  .  |  :  .  1. sequential:
[10:53:07.935] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:07.935] |  :  .  |  :  .     - tweaked: FALSE
[10:53:07.935] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.935] |  :  .  |  :  .  List of 1
[10:53:07.935] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.935] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.935] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.935] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.935] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.935] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.935] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.939] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:07.939] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:07.939] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.939] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:07.941] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.942] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:07.942] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:07.942] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:07.942] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.943] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.946] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.946] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.946] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.946] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:07.946] |  :  .  |  :  .  |  :  New stack:
[10:53:07.946] |  :  .  |  :  .  |  :  List of 1
[10:53:07.946] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.946] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.946] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.946] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.946] |  :  .  |  :  .  |  :      ...)  
[10:53:07.946] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.946] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.946] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:07.946] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.946] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.946] |  :  .  |  :  .  |  :      ...)  
[10:53:07.946] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.946] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.949] |  :  .  |  :  .  |  :  Old stack:
[10:53:07.950] |  :  .  |  :  .  |  :  List of 1
[10:53:07.950] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.950] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.950] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.950] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.950] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.950] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.950] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.952] |  :  .  |  :  .  |  :  Not identical
[10:53:07.952] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:07.952] |  :  .  |  :  .  |  :  .  List of 2
[10:53:07.952] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.952] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.952] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.952] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.952] |  :  .  |  :  .  |  :  .      ...)  
[10:53:07.952] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.952] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.952] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:07.952] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.952] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.952] |  :  .  |  :  .  |  :  .      ...)  
[10:53:07.952] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.952] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.952] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.952] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.952] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.952] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.952] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.956] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:07.956] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:07.956] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:07.957] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:07.957] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:07.957] |  :  .  |  :  .  |  List of future strategies:
[10:53:07.957] |  :  .  |  :  .  |  1. multicore:
[10:53:07.957] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:07.957] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:07.957] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:07.957] |  :  .  |  :  .  |  List of 1
[10:53:07.957] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.957] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.957] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.957] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.957] |  :  .  |  :  .  |      ...)  
[10:53:07.957] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.957] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.957] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:07.957] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.957] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.957] |  :  .  |  :  .  |      ...)  
[10:53:07.957] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.957] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.961] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:07.961] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:07.961] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.962] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:07.962] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.962] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:07.962] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:07.962] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.962] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:07.963] |  readImmediateCondition() ...
[10:53:07.963] |    - path: ‘/tmp/RtmpdMXzO1/.future/immediateConditions’
[10:53:07.963] |   - Number of RDS files: 0
[10:53:07.963] |  readImmediateCondition() ... DONE
[10:53:07.964] |  result() for MulticoreFuture ...
[10:53:07.964] |  result() for MulticoreFuture ... done
[10:53:07.964] result() for MulticoreFuture ... done
[10:53:07.964] result() for MulticoreFuture ...
[10:53:07.964] result() for MulticoreFuture ... done

Call:
lm(formula = dist ~ . - 1, data = cars)

Coefficients:
speed  
2.909  

- Globals - lm(<formula #2 (‘b’)>, data = cars) ...

Call:
lm(formula = dist ~ . + 0, data = cars)

Coefficients:
speed  
2.909  

[10:53:07.968] getGlobalsAndPackages() ...
[10:53:07.968] |  Searching for globals ...
[10:53:07.971] |  :  globals found: [7] ‘{’, ‘lm’, ‘dist’, ‘+’, ‘.’, ‘~’, ‘cars’
[10:53:07.971] |  Searching for globals ... DONE
[10:53:07.971] |  Resolving globals: FALSE
[10:53:07.971] |  Search for packages associated with the globals ...
[10:53:07.971] |  :  Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[10:53:07.972] |  :  Packages: [3] ‘base’, ‘stats’, ‘datasets’
[10:53:07.972] |  Search for packages associated with the globals ... DONE
[10:53:07.972] |  Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[10:53:07.972] |  Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[10:53:07.972] |  globals: [0] 
[10:53:07.973] |  packages: [2] ‘stats’, ‘datasets’
[10:53:07.973] getGlobalsAndPackages() ... done
[10:53:07.973] run() for Future (‘Future’) ...
[10:53:07.973] |  state: ‘created’
[10:53:07.973] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.973] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.974] |  Using MulticoreFutureBackend ...
[10:53:07.974] |  :  Launching futures ...
[10:53:07.974] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:07.974] |  :  .  |  getFutureData() ...
[10:53:07.974] |  :  .  |  :  getFutureCore() ...
[10:53:07.974] |  :  .  |  :  .  Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[10:53:07.974] |  :  .  |  :  getFutureCore() ... done
[10:53:07.974] |  :  .  |  :  getFutureCapture() ...
[10:53:07.975] |  :  .  |  :  getFutureCapture() ... done
[10:53:07.975] |  :  .  |  :  getFutureContext() ...
[10:53:07.975] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.975] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:07.975] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.975] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:07.975] |  :  .  |  :  getFutureContext() ... done
[10:53:07.976] |  :  .  |  getFutureData() ... done
[10:53:07.976] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:07.976] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:07.978] |  :  .  |  MulticoreFuture started
[10:53:07.978] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:07.978] |  :  Launching futures ... done
[10:53:07.978] |  :  .  |  attachPackages() ...
[10:53:07.978] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:07.979] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:07.979] |  Using MulticoreFutureBackend ... done
[10:53:07.979] run() for Future (‘MulticoreFuture’) ... done
[10:53:07.979] |  :  .  |  attachPackages() ... DONE
[10:53:07.979] |  :  .  |  attachPackages() ...
[10:53:07.979] result() for MulticoreFuture ...
[10:53:07.979] |  :  .  |  :  packages: [n=2] ‘stats’, ‘datasets’
[10:53:07.980] |  :  .  |  attachPackages() ... DONE
[10:53:07.980] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:07.981] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:07.981] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:07.981] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:07.982] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:07.982] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:07.982] |  :  .  |  :  .  |  New stack:
[10:53:07.982] |  :  .  |  :  .  |  List of 1
[10:53:07.982] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.982] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.982] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.982] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.982] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.982] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.982] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.986] |  :  .  |  :  .  |  Old stack:
[10:53:07.987] |  :  .  |  :  .  |  List of 1
[10:53:07.987] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.987] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.987] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.987] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.987] |  :  .  |  :  .  |      ...)  
[10:53:07.987] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.987] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.987] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:07.987] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.987] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.987] |  :  .  |  :  .  |      ...)  
[10:53:07.987] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.987] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:07.996] |  :  .  |  :  .  |  Not identical
[10:53:07.997] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:07.997] |  :  .  |  :  .  |  :  List of 2
[10:53:07.997] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:07.997] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:07.997] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:07.997] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.997] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:07.997] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:07.997] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:07.997] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:07.997] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:07.997] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.997] |  :  .  |  :  .  |  :      ...)  
[10:53:07.997] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.997] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:07.997] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:07.997] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:07.997] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:07.997] |  :  .  |  :  .  |  :      ...)  
[10:53:07.997] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.004] |  :  .  |  :  .  |  :  Formals differ
[10:53:08.004] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:08.004] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:08.004] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:08.005] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:08.005] |  :  .  |  :  .  List of future strategies:
[10:53:08.005] |  :  .  |  :  .  1. sequential:
[10:53:08.005] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:08.005] |  :  .  |  :  .     - tweaked: FALSE
[10:53:08.005] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.005] |  :  .  |  :  .  List of 1
[10:53:08.005] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.005] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:08.005] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:08.005] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.005] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.005] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.005] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.008] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:08.008] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:08.009] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:08.009] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:08.009] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:08.009] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:08.009] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:08.010] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:08.010] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:08.010] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:08.013] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:08.013] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:08.013] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:08.013] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:08.013] |  :  .  |  :  .  |  :  New stack:
[10:53:08.014] |  :  .  |  :  .  |  :  List of 1
[10:53:08.014] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:08.014] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:08.014] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:08.014] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.014] |  :  .  |  :  .  |  :      ...)  
[10:53:08.014] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.014] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.014] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:08.014] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:08.014] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.014] |  :  .  |  :  .  |  :      ...)  
[10:53:08.014] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.014] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.017] |  :  .  |  :  .  |  :  Old stack:
[10:53:08.017] |  :  .  |  :  .  |  :  List of 1
[10:53:08.017] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.017] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:08.017] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:08.017] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.017] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.017] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.017] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.020] |  :  .  |  :  .  |  :  Not identical
[10:53:08.020] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:08.021] |  :  .  |  :  .  |  :  .  List of 2
[10:53:08.021] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:08.021] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:08.021] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:08.021] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.021] |  :  .  |  :  .  |  :  .      ...)  
[10:53:08.021] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.021] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.021] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:08.021] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:08.021] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.021] |  :  .  |  :  .  |  :  .      ...)  
[10:53:08.021] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.021] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.021] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:08.021] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:08.021] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.021] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.021] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.025] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:08.025] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:08.025] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:08.025] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:08.025] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:08.025] |  :  .  |  :  .  |  List of future strategies:
[10:53:08.025] |  :  .  |  :  .  |  1. multicore:
[10:53:08.025] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:08.025] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:08.025] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:08.026] |  :  .  |  :  .  |  List of 1
[10:53:08.026] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:08.026] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:08.026] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:08.026] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.026] |  :  .  |  :  .  |      ...)  
[10:53:08.026] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.026] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.026] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:08.026] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:08.026] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.026] |  :  .  |  :  .  |      ...)  
[10:53:08.026] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.026] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.029] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:08.029] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:08.029] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:08.029] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:08.029] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:08.029] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:08.029] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:08.029] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:08.029] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:08.030] |  readImmediateCondition() ...
[10:53:08.030] |    - path: ‘/tmp/RtmpdMXzO1/.future/immediateConditions’
[10:53:08.031] |   - Number of RDS files: 0
[10:53:08.031] |  readImmediateCondition() ... DONE
[10:53:08.031] |  result() for MulticoreFuture ...
[10:53:08.031] |  result() for MulticoreFuture ... done
[10:53:08.031] result() for MulticoreFuture ... done
[10:53:08.031] result() for MulticoreFuture ...
[10:53:08.032] result() for MulticoreFuture ... done

Call:
lm(formula = dist ~ . + 0, data = cars)

Coefficients:
speed  
2.909  

- Globals - lm(<formula #3 (‘c’)>, data = cars) ...

Call:
lm(formula = dist ~ speed + speed^2, data = cars)

Coefficients:
(Intercept)        speed  
    -17.579        3.932  

[10:53:08.035] getGlobalsAndPackages() ...
[10:53:08.035] |  Searching for globals ...
[10:53:08.041] |  :  globals found: [8] ‘{’, ‘lm’, ‘dist’, ‘+’, ‘speed’, ‘^’, ‘~’, ‘cars’
[10:53:08.041] |  Searching for globals ... DONE
[10:53:08.041] |  Resolving globals: FALSE
[10:53:08.041] |  Search for packages associated with the globals ...
[10:53:08.042] |  :  Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[10:53:08.042] |  :  Packages: [3] ‘base’, ‘stats’, ‘datasets’
[10:53:08.042] |  Search for packages associated with the globals ... DONE
[10:53:08.042] |  Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[10:53:08.043] |  Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[10:53:08.043] |  globals: [0] 
[10:53:08.043] |  packages: [2] ‘stats’, ‘datasets’
[10:53:08.043] getGlobalsAndPackages() ... done
[10:53:08.043] run() for Future (‘Future’) ...
[10:53:08.043] |  state: ‘created’
[10:53:08.044] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:08.044] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:08.044] |  Using MulticoreFutureBackend ...
[10:53:08.044] |  :  Launching futures ...
[10:53:08.044] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:08.044] |  :  .  |  getFutureData() ...
[10:53:08.045] |  :  .  |  :  getFutureCore() ...
[10:53:08.045] |  :  .  |  :  .  Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[10:53:08.045] |  :  .  |  :  getFutureCore() ... done
[10:53:08.045] |  :  .  |  :  getFutureCapture() ...
[10:53:08.045] |  :  .  |  :  getFutureCapture() ... done
[10:53:08.045] |  :  .  |  :  getFutureContext() ...
[10:53:08.045] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:08.045] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:08.046] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:08.046] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:08.046] |  :  .  |  :  getFutureContext() ... done
[10:53:08.046] |  :  .  |  getFutureData() ... done
[10:53:08.046] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:08.046] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:08.048] |  :  .  |  MulticoreFuture started
[10:53:08.048] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:08.049] |  :  Launching futures ... done
[10:53:08.049] |  :  .  |  attachPackages() ...
[10:53:08.049] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:08.049] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:08.049] |  Using MulticoreFutureBackend ... done
[10:53:08.049] |  :  .  |  attachPackages() ... DONE
[10:53:08.049] run() for Future (‘MulticoreFuture’) ... done
[10:53:08.050] |  :  .  |  attachPackages() ...
[10:53:08.050] |  :  .  |  :  packages: [n=2] ‘stats’, ‘datasets’
[10:53:08.050] result() for MulticoreFuture ...
[10:53:08.050] |  :  .  |  attachPackages() ... DONE
[10:53:08.051] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:08.051] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:08.052] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:08.052] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:08.052] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:08.053] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:08.053] |  :  .  |  :  .  |  New stack:
[10:53:08.053] |  :  .  |  :  .  |  List of 1
[10:53:08.053] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.053] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:08.053] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:08.053] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.053] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.053] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.053] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.057] |  :  .  |  :  .  |  Old stack:
[10:53:08.057] |  :  .  |  :  .  |  List of 1
[10:53:08.057] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:08.057] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:08.057] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:08.057] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.057] |  :  .  |  :  .  |      ...)  
[10:53:08.057] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.057] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.057] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:08.057] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:08.057] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.057] |  :  .  |  :  .  |      ...)  
[10:53:08.057] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.057] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.062] |  :  .  |  :  .  |  Not identical
[10:53:08.062] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:08.063] |  :  .  |  :  .  |  :  List of 2
[10:53:08.063] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.063] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:08.063] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:08.063] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.063] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.063] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.063] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:08.063] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:08.063] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:08.063] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.063] |  :  .  |  :  .  |  :      ...)  
[10:53:08.063] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.063] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.063] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:08.063] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:08.063] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.063] |  :  .  |  :  .  |  :      ...)  
[10:53:08.063] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.073] |  :  .  |  :  .  |  :  Formals differ
[10:53:08.073] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:08.073] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:08.074] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:08.074] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:08.074] |  :  .  |  :  .  List of future strategies:
[10:53:08.074] |  :  .  |  :  .  1. sequential:
[10:53:08.074] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:08.074] |  :  .  |  :  .     - tweaked: FALSE
[10:53:08.074] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.075] |  :  .  |  :  .  List of 1
[10:53:08.075] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.075] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:08.075] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:08.075] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.075] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.075] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.075] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.078] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:08.079] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:08.079] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:08.079] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:08.079] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:08.080] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:08.080] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:08.080] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:08.080] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:08.080] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:08.083] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:08.084] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:08.084] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:08.084] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:08.084] |  :  .  |  :  .  |  :  New stack:
[10:53:08.084] |  :  .  |  :  .  |  :  List of 1
[10:53:08.084] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:08.084] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:08.084] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:08.084] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.084] |  :  .  |  :  .  |  :      ...)  
[10:53:08.084] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.084] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.084] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:08.084] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:08.084] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.084] |  :  .  |  :  .  |  :      ...)  
[10:53:08.084] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.084] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.087] |  :  .  |  :  .  |  :  Old stack:
[10:53:08.087] |  :  .  |  :  .  |  :  List of 1
[10:53:08.087] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.087] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:08.087] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:08.087] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.087] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.087] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.087] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.089] |  :  .  |  :  .  |  :  Not identical
[10:53:08.089] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:08.090] |  :  .  |  :  .  |  :  .  List of 2
[10:53:08.090] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:08.090] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:08.090] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:08.090] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.090] |  :  .  |  :  .  |  :  .      ...)  
[10:53:08.090] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.090] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.090] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:08.090] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:08.090] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.090] |  :  .  |  :  .  |  :  .      ...)  
[10:53:08.090] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.090] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.090] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:08.090] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:08.090] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.090] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.090] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.096] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:08.096] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:08.096] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:08.096] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:08.096] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:08.096] |  :  .  |  :  .  |  List of future strategies:
[10:53:08.096] |  :  .  |  :  .  |  1. multicore:
[10:53:08.096] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:08.096] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:08.096] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:08.097] |  :  .  |  :  .  |  List of 1
[10:53:08.097] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:08.097] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:08.097] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:08.097] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.097] |  :  .  |  :  .  |      ...)  
[10:53:08.097] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.097] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.097] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:08.097] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:08.097] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.097] |  :  .  |  :  .  |      ...)  
[10:53:08.097] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.097] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.100] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:08.100] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:08.100] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:08.100] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:08.100] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:08.100] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:08.100] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:08.101] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:08.101] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:08.101] |  readImmediateCondition() ...
[10:53:08.101] |    - path: ‘/tmp/RtmpdMXzO1/.future/immediateConditions’
[10:53:08.102] |   - Number of RDS files: 0
[10:53:08.102] |  readImmediateCondition() ... DONE
[10:53:08.102] |  result() for MulticoreFuture ...
[10:53:08.102] |  result() for MulticoreFuture ... done
[10:53:08.102] result() for MulticoreFuture ... done
[10:53:08.103] result() for MulticoreFuture ...
[10:53:08.103] result() for MulticoreFuture ... done

Call:
lm(formula = dist ~ speed + speed^2, data = cars)

Coefficients:
(Intercept)        speed  
    -17.579        3.932  

- Globals - lm(<formula #4 (‘d’)>, data = cars) ...

Call:
lm(formula = dist ~ speed + I(speed^2), data = cars)

Coefficients:
(Intercept)        speed   I(speed^2)  
    2.47014      0.91329      0.09996  

[10:53:08.106] getGlobalsAndPackages() ...
[10:53:08.107] |  Searching for globals ...
[10:53:08.110] |  :  globals found: [9] ‘{’, ‘lm’, ‘dist’, ‘+’, ‘speed’, ‘I’, ‘^’, ‘~’, ‘cars’
[10:53:08.110] |  Searching for globals ... DONE
[10:53:08.110] |  Resolving globals: FALSE
[10:53:08.110] |  Search for packages associated with the globals ...
[10:53:08.111] |  :  Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[10:53:08.111] |  :  Packages: [3] ‘base’, ‘stats’, ‘datasets’
[10:53:08.111] |  Search for packages associated with the globals ... DONE
[10:53:08.111] |  Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[10:53:08.112] |  Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[10:53:08.112] |  globals: [0] 
[10:53:08.112] |  packages: [2] ‘stats’, ‘datasets’
[10:53:08.112] getGlobalsAndPackages() ... done
[10:53:08.112] run() for Future (‘Future’) ...
[10:53:08.113] |  state: ‘created’
[10:53:08.113] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:08.113] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:08.113] |  Using MulticoreFutureBackend ...
[10:53:08.113] |  :  Launching futures ...
[10:53:08.113] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:08.113] |  :  .  |  getFutureData() ...
[10:53:08.113] |  :  .  |  :  getFutureCore() ...
[10:53:08.114] |  :  .  |  :  .  Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[10:53:08.114] |  :  .  |  :  getFutureCore() ... done
[10:53:08.114] |  :  .  |  :  getFutureCapture() ...
[10:53:08.114] |  :  .  |  :  getFutureCapture() ... done
[10:53:08.114] |  :  .  |  :  getFutureContext() ...
[10:53:08.114] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:08.114] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:08.115] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:08.115] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:08.115] |  :  .  |  :  getFutureContext() ... done
[10:53:08.115] |  :  .  |  getFutureData() ... done
[10:53:08.115] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:08.115] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:08.117] |  :  .  |  MulticoreFuture started
[10:53:08.118] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:08.118] |  :  Launching futures ... done
[10:53:08.118] |  :  .  |  attachPackages() ...
[10:53:08.118] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:08.118] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:08.118] |  Using MulticoreFutureBackend ... done
[10:53:08.118] run() for Future (‘MulticoreFuture’) ... done
[10:53:08.118] |  :  .  |  attachPackages() ... DONE
[10:53:08.119] |  :  .  |  attachPackages() ...
[10:53:08.119] |  :  .  |  :  packages: [n=2] ‘stats’, ‘datasets’
[10:53:08.119] result() for MulticoreFuture ...
[10:53:08.122] |  :  .  |  attachPackages() ... DONE
[10:53:08.123] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:08.124] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:08.124] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:08.125] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:08.126] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:08.126] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:08.127] |  :  .  |  :  .  |  New stack:
[10:53:08.127] |  :  .  |  :  .  |  List of 1
[10:53:08.127] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.127] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:08.127] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:08.127] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.127] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.127] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.127] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.132] |  :  .  |  :  .  |  Old stack:
[10:53:08.132] |  :  .  |  :  .  |  List of 1
[10:53:08.132] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:08.132] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:08.132] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:08.132] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.132] |  :  .  |  :  .  |      ...)  
[10:53:08.132] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.132] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.132] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:08.132] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:08.132] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.132] |  :  .  |  :  .  |      ...)  
[10:53:08.132] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.132] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.137] |  :  .  |  :  .  |  Not identical
[10:53:08.137] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:08.137] |  :  .  |  :  .  |  :  List of 2
[10:53:08.137] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.137] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:08.137] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:08.137] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.137] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.137] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.137] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:08.137] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:08.137] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:08.137] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.137] |  :  .  |  :  .  |  :      ...)  
[10:53:08.137] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.137] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.137] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:08.137] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:08.137] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.137] |  :  .  |  :  .  |  :      ...)  
[10:53:08.137] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.143] |  :  .  |  :  .  |  :  Formals differ
[10:53:08.143] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:08.143] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:08.144] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:08.144] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:08.144] |  :  .  |  :  .  List of future strategies:
[10:53:08.144] |  :  .  |  :  .  1. sequential:
[10:53:08.144] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:08.144] |  :  .  |  :  .     - tweaked: FALSE
[10:53:08.144] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.144] |  :  .  |  :  .  List of 1
[10:53:08.144] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.144] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:08.144] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:08.144] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.144] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.144] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.144] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.147] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:08.147] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:08.148] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:08.148] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:08.148] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:08.148] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:08.148] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:08.149] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:08.149] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:08.149] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:08.153] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:08.154] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:08.154] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:08.154] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:08.154] |  :  .  |  :  .  |  :  New stack:
[10:53:08.154] |  :  .  |  :  .  |  :  List of 1
[10:53:08.154] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:08.154] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:08.154] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:08.154] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.154] |  :  .  |  :  .  |  :      ...)  
[10:53:08.154] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.154] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.154] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:08.154] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:08.154] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.154] |  :  .  |  :  .  |  :      ...)  
[10:53:08.154] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.154] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.157] |  :  .  |  :  .  |  :  Old stack:
[10:53:08.157] |  :  .  |  :  .  |  :  List of 1
[10:53:08.157] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.157] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:08.157] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:08.157] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.157] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.157] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.157] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.159] |  :  .  |  :  .  |  :  Not identical
[10:53:08.160] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:08.160] |  :  .  |  :  .  |  :  .  List of 2
[10:53:08.160] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:08.160] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:08.160] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:08.160] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.160] |  :  .  |  :  .  |  :  .      ...)  
[10:53:08.160] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.160] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.160] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:08.160] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:08.160] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.160] |  :  .  |  :  .  |  :  .      ...)  
[10:53:08.160] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.160] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.160] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:08.160] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:08.160] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.160] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.160] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.164] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:08.164] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:08.164] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:08.164] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:08.164] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:08.164] |  :  .  |  :  .  |  List of future strategies:
[10:53:08.164] |  :  .  |  :  .  |  1. multicore:
[10:53:08.164] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:08.164] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:08.164] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:08.165] |  :  .  |  :  .  |  List of 1
[10:53:08.165] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:08.165] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:08.165] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:08.165] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.165] |  :  .  |  :  .  |      ...)  
[10:53:08.165] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.165] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.165] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:08.165] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:08.165] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.165] |  :  .  |  :  .  |      ...)  
[10:53:08.165] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.165] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.168] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:08.168] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:08.168] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:08.168] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:08.168] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:08.168] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:08.169] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:08.170] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:08.170] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:08.171] |  readImmediateCondition() ...
[10:53:08.171] |    - path: ‘/tmp/RtmpdMXzO1/.future/immediateConditions’
[10:53:08.172] |   - Number of RDS files: 0
[10:53:08.172] |  readImmediateCondition() ... DONE
[10:53:08.172] |  result() for MulticoreFuture ...
[10:53:08.173] |  result() for MulticoreFuture ... done
[10:53:08.173] result() for MulticoreFuture ... done
[10:53:08.173] result() for MulticoreFuture ...
[10:53:08.173] result() for MulticoreFuture ... done

Call:
lm(formula = dist ~ speed + I(speed^2), data = cars)

Coefficients:
(Intercept)        speed   I(speed^2)  
    2.47014      0.91329      0.09996  

- Globals - lm(<formula #5 (‘e’)>, data = cars) ...

Call:
lm(formula = dist ~ poly(speed, 2), data = cars)

Coefficients:
    (Intercept)  poly(speed, 2)1  poly(speed, 2)2  
          42.98           145.55            23.00  

[10:53:08.178] getGlobalsAndPackages() ...
[10:53:08.178] |  Searching for globals ...
[10:53:08.180] |  :  globals found: [7] ‘{’, ‘lm’, ‘dist’, ‘poly’, ‘speed’, ‘~’, ‘cars’
[10:53:08.181] |  Searching for globals ... DONE
[10:53:08.181] |  Resolving globals: FALSE
[10:53:08.181] |  Search for packages associated with the globals ...
[10:53:08.181] |  :  Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[10:53:08.182] |  :  Packages: [3] ‘base’, ‘stats’, ‘datasets’
[10:53:08.182] |  Search for packages associated with the globals ... DONE
[10:53:08.182] |  Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[10:53:08.182] |  Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[10:53:08.182] |  globals: [0] 
[10:53:08.182] |  packages: [2] ‘stats’, ‘datasets’
[10:53:08.182] getGlobalsAndPackages() ... done
[10:53:08.183] run() for Future (‘Future’) ...
[10:53:08.183] |  state: ‘created’
[10:53:08.183] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:08.183] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:08.183] |  Using MulticoreFutureBackend ...
[10:53:08.183] |  :  Launching futures ...
[10:53:08.184] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:08.184] |  :  .  |  getFutureData() ...
[10:53:08.184] |  :  .  |  :  getFutureCore() ...
[10:53:08.184] |  :  .  |  :  .  Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[10:53:08.184] |  :  .  |  :  getFutureCore() ... done
[10:53:08.184] |  :  .  |  :  getFutureCapture() ...
[10:53:08.184] |  :  .  |  :  getFutureCapture() ... done
[10:53:08.184] |  :  .  |  :  getFutureContext() ...
[10:53:08.185] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:08.185] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:08.185] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:08.185] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:08.185] |  :  .  |  :  getFutureContext() ... done
[10:53:08.185] |  :  .  |  getFutureData() ... done
[10:53:08.185] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:08.186] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:08.187] |  :  .  |  MulticoreFuture started
[10:53:08.188] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:08.188] |  :  Launching futures ... done
[10:53:08.188] |  :  .  |  attachPackages() ...
[10:53:08.188] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:08.188] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:08.188] |  Using MulticoreFutureBackend ... done
[10:53:08.189] |  :  .  |  attachPackages() ... DONE
[10:53:08.189] run() for Future (‘MulticoreFuture’) ... done
[10:53:08.189] |  :  .  |  attachPackages() ...
[10:53:08.189] |  :  .  |  :  packages: [n=2] ‘stats’, ‘datasets’
[10:53:08.189] result() for MulticoreFuture ...
[10:53:08.189] |  :  .  |  attachPackages() ... DONE
[10:53:08.190] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:08.190] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:08.191] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:08.191] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:08.191] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:08.192] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:08.192] |  :  .  |  :  .  |  New stack:
[10:53:08.192] |  :  .  |  :  .  |  List of 1
[10:53:08.192] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.192] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:08.192] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:08.192] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.192] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.192] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.192] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.196] |  :  .  |  :  .  |  Old stack:
[10:53:08.196] |  :  .  |  :  .  |  List of 1
[10:53:08.196] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:08.196] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:08.196] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:08.196] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.196] |  :  .  |  :  .  |      ...)  
[10:53:08.196] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.196] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.196] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:08.196] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:08.196] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.196] |  :  .  |  :  .  |      ...)  
[10:53:08.196] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.196] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.204] |  :  .  |  :  .  |  Not identical
[10:53:08.204] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:08.205] |  :  .  |  :  .  |  :  List of 2
[10:53:08.205] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.205] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:08.205] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:08.205] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.205] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.205] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.205] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:08.205] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:08.205] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:08.205] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.205] |  :  .  |  :  .  |  :      ...)  
[10:53:08.205] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.205] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.205] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:08.205] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:08.205] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.205] |  :  .  |  :  .  |  :      ...)  
[10:53:08.205] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.214] |  :  .  |  :  .  |  :  Formals differ
[10:53:08.214] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:08.214] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:08.214] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:08.214] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:08.214] |  :  .  |  :  .  List of future strategies:
[10:53:08.214] |  :  .  |  :  .  1. sequential:
[10:53:08.214] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:08.214] |  :  .  |  :  .     - tweaked: FALSE
[10:53:08.214] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.215] |  :  .  |  :  .  List of 1
[10:53:08.215] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.215] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:08.215] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:08.215] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.215] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.215] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.215] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.218] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:08.218] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:08.218] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:08.218] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:08.218] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:08.219] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:08.219] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:08.219] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:08.219] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:08.219] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:08.223] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:08.223] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:08.223] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:08.223] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:08.223] |  :  .  |  :  .  |  :  New stack:
[10:53:08.223] |  :  .  |  :  .  |  :  List of 1
[10:53:08.223] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:08.223] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:08.223] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:08.223] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.223] |  :  .  |  :  .  |  :      ...)  
[10:53:08.223] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.223] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.223] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:08.223] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:08.223] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.223] |  :  .  |  :  .  |  :      ...)  
[10:53:08.223] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.223] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.227] |  :  .  |  :  .  |  :  Old stack:
[10:53:08.227] |  :  .  |  :  .  |  :  List of 1
[10:53:08.227] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.227] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:08.227] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:08.227] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.227] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.227] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.227] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.230] |  :  .  |  :  .  |  :  Not identical
[10:53:08.230] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:08.231] |  :  .  |  :  .  |  :  .  List of 2
[10:53:08.231] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:08.231] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:08.231] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:08.231] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.231] |  :  .  |  :  .  |  :  .      ...)  
[10:53:08.231] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.231] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.231] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:08.231] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:08.231] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.231] |  :  .  |  :  .  |  :  .      ...)  
[10:53:08.231] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.231] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.231] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:08.231] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:08.231] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.231] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.231] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.235] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:08.235] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:08.235] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:08.235] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:08.235] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:08.235] |  :  .  |  :  .  |  List of future strategies:
[10:53:08.235] |  :  .  |  :  .  |  1. multicore:
[10:53:08.235] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:08.235] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:08.235] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:08.236] |  :  .  |  :  .  |  List of 1
[10:53:08.236] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:08.236] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:08.236] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:08.236] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.236] |  :  .  |  :  .  |      ...)  
[10:53:08.236] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.236] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.236] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:08.236] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:08.236] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.236] |  :  .  |  :  .  |      ...)  
[10:53:08.236] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.236] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.239] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:08.239] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:08.239] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:08.239] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:08.239] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:08.239] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:08.239] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:08.240] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:08.240] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:08.240] |  readImmediateCondition() ...
[10:53:08.240] |    - path: ‘/tmp/RtmpdMXzO1/.future/immediateConditions’
[10:53:08.241] |   - Number of RDS files: 0
[10:53:08.241] |  readImmediateCondition() ... DONE
[10:53:08.241] |  result() for MulticoreFuture ...
[10:53:08.241] |  result() for MulticoreFuture ... done
[10:53:08.242] result() for MulticoreFuture ... done
[10:53:08.242] result() for MulticoreFuture ...
[10:53:08.242] result() for MulticoreFuture ... done

Call:
lm(formula = dist ~ poly(speed, 2), data = cars)

Coefficients:
    (Intercept)  poly(speed, 2)1  poly(speed, 2)2  
          42.98           145.55            23.00  

- Globals - map(x, ~ expr) ...
[10:53:08.244] getGlobalsAndPackages() ...
[10:53:08.245] |  Searching for globals ...
[10:53:08.254] |  :  globals found: [16] ‘{’, ‘outer_function’, ‘map’, ‘:’, ‘~’, ‘inner_function’, ‘.x’, ‘if’, ‘inherits’, ‘<-’, ‘[[’, ‘-’, ‘eval’, ‘bquote’, ‘lapply’, ‘+’
[10:53:08.255] |  Searching for globals ... DONE
[10:53:08.255] |  Resolving globals: FALSE
[10:53:08.255] |  Search for packages associated with the globals ...
[10:53:08.255] |  :  Packages associated with globals: [1] ‘base’
[10:53:08.256] |  :  Packages: [1] ‘base’
[10:53:08.256] |  Search for packages associated with the globals ... DONE
[10:53:08.256] |  Packages after dropping 'base': [0] 
[10:53:08.256] |  globals: [3] ‘outer_function’, ‘map’, ‘inner_function’
[10:53:08.257] |  packages: [0] 
[10:53:08.257] getGlobalsAndPackages() ... done
[10:53:08.257] run() for Future (‘Future’) ...
[10:53:08.257] |  state: ‘created’
[10:53:08.257] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:08.257] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:08.258] |  Using MulticoreFutureBackend ...
[10:53:08.258] |  :  Launching futures ...
[10:53:08.258] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:08.258] |  :  .  |  getFutureData() ...
[10:53:08.258] |  :  .  |  :  getFutureCore() ...
[10:53:08.258] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:08.258] |  :  .  |  :  getFutureCore() ... done
[10:53:08.258] |  :  .  |  :  getFutureCapture() ...
[10:53:08.259] |  :  .  |  :  getFutureCapture() ... done
[10:53:08.259] |  :  .  |  :  getFutureContext() ...
[10:53:08.259] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:08.259] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:08.259] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:08.259] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:08.259] |  :  .  |  :  getFutureContext() ... done
[10:53:08.259] |  :  .  |  getFutureData() ... done
[10:53:08.260] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:08.260] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:08.262] |  :  .  |  MulticoreFuture started
[10:53:08.262] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:08.262] |  :  Launching futures ... done
[10:53:08.262] |  :  .  |  attachPackages() ...
[10:53:08.262] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:08.263] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:08.263] |  Using MulticoreFutureBackend ... done
[10:53:08.263] run() for Future (‘MulticoreFuture’) ... done
[10:53:08.263] |  :  .  |  attachPackages() ... DONE
[10:53:08.263] |  :  .  |  attachPackages() ...
[10:53:08.263] result() for MulticoreFuture ...
[10:53:08.263] |  :  .  |  :  packages: [n=0] 
[10:53:08.263] |  :  .  |  attachPackages() ... DONE
[10:53:08.264] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:08.264] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:08.265] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:08.265] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:08.266] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:08.266] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:08.266] |  :  .  |  :  .  |  New stack:
[10:53:08.266] |  :  .  |  :  .  |  List of 1
[10:53:08.266] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.266] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:08.266] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:08.266] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.266] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.266] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.266] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.270] |  :  .  |  :  .  |  Old stack:
[10:53:08.270] |  :  .  |  :  .  |  List of 1
[10:53:08.270] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:08.270] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:08.270] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:08.270] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.270] |  :  .  |  :  .  |      ...)  
[10:53:08.270] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.270] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.270] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:08.270] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:08.270] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.270] |  :  .  |  :  .  |      ...)  
[10:53:08.270] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.270] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.275] |  :  .  |  :  .  |  Not identical
[10:53:08.275] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:08.276] |  :  .  |  :  .  |  :  List of 2
[10:53:08.276] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.276] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:08.276] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:08.276] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.276] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.276] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.276] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:08.276] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:08.276] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:08.276] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.276] |  :  .  |  :  .  |  :      ...)  
[10:53:08.276] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.276] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.276] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:08.276] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:08.276] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.276] |  :  .  |  :  .  |  :      ...)  
[10:53:08.276] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.287] |  :  .  |  :  .  |  :  Formals differ
[10:53:08.287] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:08.287] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:08.287] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:08.287] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:08.288] |  :  .  |  :  .  List of future strategies:
[10:53:08.288] |  :  .  |  :  .  1. sequential:
[10:53:08.288] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:08.288] |  :  .  |  :  .     - tweaked: FALSE
[10:53:08.288] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.289] |  :  .  |  :  .  List of 1
[10:53:08.289] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.289] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:08.289] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:08.289] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.289] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.289] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.289] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.292] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:08.292] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:08.292] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:08.293] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:08.293] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:08.293] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:08.293] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:08.294] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:08.294] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:08.294] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:08.294] |  :  .  |  assign_globals() ...
[10:53:08.294] |  :  .  |  List of 3
[10:53:08.294] |  :  .  |   $ outer_function:function (x)  
[10:53:08.294] |  :  .  |   $ map           :function (.x, .f, ...)  
[10:53:08.294] |  :  .  |   $ inner_function:function (x)  
[10:53:08.294] |  :  .  |   - attr(*, "where")=List of 3
[10:53:08.294] |  :  .  |    ..$ outer_function:<environment: R_EmptyEnv> 
[10:53:08.294] |  :  .  |    ..$ map           :<environment: R_EmptyEnv> 
[10:53:08.294] |  :  .  |    ..$ inner_function:<environment: R_EmptyEnv> 
[10:53:08.294] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:08.294] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:53:08.294] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:08.294] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:08.298] |  :  .  |  - reassign environment for ‘outer_function’ [where=emptyenv()]
[10:53:08.298] |  :  .  |  - copied ‘outer_function’ to environment
[10:53:08.298] |  :  .  |  - reassign environment for ‘map’ [where=emptyenv()]
[10:53:08.298] |  :  .  |  - copied ‘map’ to environment
[10:53:08.299] |  :  .  |  - reassign environment for ‘inner_function’ [where=emptyenv()]
[10:53:08.299] |  :  .  |  - copied ‘inner_function’ to environment
[10:53:08.299] |  :  .  |  assign_globals() ... done
[10:53:08.301] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:08.301] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:08.301] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:08.301] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:08.301] |  :  .  |  :  .  |  :  New stack:
[10:53:08.302] |  :  .  |  :  .  |  :  List of 1
[10:53:08.302] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:08.302] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:08.302] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:08.302] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.302] |  :  .  |  :  .  |  :      ...)  
[10:53:08.302] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.302] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.302] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:08.302] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:08.302] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.302] |  :  .  |  :  .  |  :      ...)  
[10:53:08.302] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.302] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.305] |  :  .  |  :  .  |  :  Old stack:
[10:53:08.305] |  :  .  |  :  .  |  :  List of 1
[10:53:08.305] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.305] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:08.305] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:08.305] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.305] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.305] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.305] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.308] |  :  .  |  :  .  |  :  Not identical
[10:53:08.308] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:08.309] |  :  .  |  :  .  |  :  .  List of 2
[10:53:08.309] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:08.309] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:08.309] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:08.309] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.309] |  :  .  |  :  .  |  :  .      ...)  
[10:53:08.309] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.309] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.309] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:08.309] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:08.309] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.309] |  :  .  |  :  .  |  :  .      ...)  
[10:53:08.309] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.309] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.309] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:08.309] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:08.309] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.309] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.309] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.313] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:08.313] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:08.313] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:08.313] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:08.313] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:08.313] |  :  .  |  :  .  |  List of future strategies:
[10:53:08.313] |  :  .  |  :  .  |  1. multicore:
[10:53:08.313] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:08.313] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:08.313] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:08.314] |  :  .  |  :  .  |  List of 1
[10:53:08.314] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:08.314] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:08.314] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:08.314] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.314] |  :  .  |  :  .  |      ...)  
[10:53:08.314] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.314] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.314] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:08.314] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:08.314] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.314] |  :  .  |  :  .  |      ...)  
[10:53:08.314] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.314] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.316] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:08.317] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:08.317] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:08.317] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:08.317] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:08.317] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:08.317] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:08.317] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:08.317] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:08.318] |  readImmediateCondition() ...
[10:53:08.318] |    - path: ‘/tmp/RtmpdMXzO1/.future/immediateConditions’
[10:53:08.319] |   - Number of RDS files: 0
[10:53:08.319] |  readImmediateCondition() ... DONE
[10:53:08.319] |  result() for MulticoreFuture ...
[10:53:08.319] |  result() for MulticoreFuture ... done
[10:53:08.319] result() for MulticoreFuture ... done
[10:53:08.319] result() for MulticoreFuture ...
[10:53:08.320] result() for MulticoreFuture ... done
List of 2
 $ : num [1:2] 2 3
 $ : num [1:2] 2 3
[10:53:08.322] getGlobalsAndPackages() ...
[10:53:08.322] |  Searching for globals ...
[10:53:08.328] |  :  globals found: [16] ‘{’, ‘outer_function’, ‘map’, ‘:’, ‘~’, ‘inner_function’, ‘.x’, ‘if’, ‘inherits’, ‘<-’, ‘[[’, ‘-’, ‘eval’, ‘bquote’, ‘lapply’, ‘+’
[10:53:08.329] |  Searching for globals ... DONE
[10:53:08.329] |  Resolving globals: FALSE
[10:53:08.329] |  Search for packages associated with the globals ...
[10:53:08.329] |  :  Packages associated with globals: [1] ‘base’
[10:53:08.330] |  :  Packages: [1] ‘base’
[10:53:08.332] |  Search for packages associated with the globals ... DONE
[10:53:08.332] |  Packages after dropping 'base': [0] 
[10:53:08.332] |  globals: [3] ‘outer_function’, ‘map’, ‘inner_function’
[10:53:08.332] |  packages: [0] 
[10:53:08.333] getGlobalsAndPackages() ... done
[10:53:08.333] run() for Future (‘Future’) ...
[10:53:08.333] |  state: ‘created’
[10:53:08.333] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:08.334] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:08.334] |  Using MulticoreFutureBackend ...
[10:53:08.334] |  :  Launching futures ...
[10:53:08.334] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:08.334] |  :  .  |  getFutureData() ...
[10:53:08.334] |  :  .  |  :  getFutureCore() ...
[10:53:08.335] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:08.335] |  :  .  |  :  getFutureCore() ... done
[10:53:08.335] |  :  .  |  :  getFutureCapture() ...
[10:53:08.335] |  :  .  |  :  getFutureCapture() ... done
[10:53:08.335] |  :  .  |  :  getFutureContext() ...
[10:53:08.335] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:08.335] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:08.336] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:08.336] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:08.336] |  :  .  |  :  getFutureContext() ... done
[10:53:08.336] |  :  .  |  getFutureData() ... done
[10:53:08.336] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:08.337] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:08.338] |  :  .  |  MulticoreFuture started
[10:53:08.339] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:08.339] |  :  .  |  attachPackages() ...
[10:53:08.339] |  :  Launching futures ... done
[10:53:08.339] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:08.339] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:08.340] |  Using MulticoreFutureBackend ... done
[10:53:08.340] |  :  .  |  attachPackages() ... DONE
[10:53:08.340] run() for Future (‘MulticoreFuture’) ... done
[10:53:08.340] |  :  .  |  attachPackages() ...
[10:53:08.340] |  :  .  |  :  packages: [n=0] 
[10:53:08.340] |  :  .  |  attachPackages() ... DONE
[10:53:08.340] result() for MulticoreFuture ...
[10:53:08.341] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:08.341] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:08.342] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:08.342] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:08.343] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:08.343] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:08.343] |  :  .  |  :  .  |  New stack:
[10:53:08.343] |  :  .  |  :  .  |  List of 1
[10:53:08.343] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.343] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:08.343] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:08.343] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.343] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.343] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.343] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.348] |  :  .  |  :  .  |  Old stack:
[10:53:08.348] |  :  .  |  :  .  |  List of 1
[10:53:08.348] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:08.348] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:08.348] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:08.348] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.348] |  :  .  |  :  .  |      ...)  
[10:53:08.348] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.348] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.348] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:08.348] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:08.348] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.348] |  :  .  |  :  .  |      ...)  
[10:53:08.348] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.348] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.353] |  :  .  |  :  .  |  Not identical
[10:53:08.353] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:08.353] |  :  .  |  :  .  |  :  List of 2
[10:53:08.353] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.353] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:08.353] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:08.353] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.353] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.353] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.353] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:08.353] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:08.353] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:08.353] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.353] |  :  .  |  :  .  |  :      ...)  
[10:53:08.353] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.353] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.353] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:08.353] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:08.353] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.353] |  :  .  |  :  .  |  :      ...)  
[10:53:08.353] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.360] |  :  .  |  :  .  |  :  Formals differ
[10:53:08.360] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:08.360] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:08.360] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:08.361] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:08.361] |  :  .  |  :  .  List of future strategies:
[10:53:08.361] |  :  .  |  :  .  1. sequential:
[10:53:08.361] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:08.361] |  :  .  |  :  .     - tweaked: FALSE
[10:53:08.361] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.362] |  :  .  |  :  .  List of 1
[10:53:08.362] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.362] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:08.362] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:08.362] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.362] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.362] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.362] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.368] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:08.368] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:08.368] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:08.369] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:08.369] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:08.369] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:08.369] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:08.370] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:08.370] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:08.370] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:08.370] |  :  .  |  assign_globals() ...
[10:53:08.370] |  :  .  |  List of 3
[10:53:08.370] |  :  .  |   $ outer_function:function (x)  
[10:53:08.370] |  :  .  |   $ map           :function (.x, .f, ...)  
[10:53:08.370] |  :  .  |   $ inner_function:function (x)  
[10:53:08.370] |  :  .  |   - attr(*, "where")=List of 3
[10:53:08.370] |  :  .  |    ..$ outer_function:<environment: R_EmptyEnv> 
[10:53:08.370] |  :  .  |    ..$ map           :<environment: R_EmptyEnv> 
[10:53:08.370] |  :  .  |    ..$ inner_function:<environment: R_EmptyEnv> 
[10:53:08.370] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:08.370] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:53:08.370] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:08.370] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:08.374] |  :  .  |  - reassign environment for ‘outer_function’ [where=emptyenv()]
[10:53:08.374] |  :  .  |  - copied ‘outer_function’ to environment
[10:53:08.374] |  :  .  |  - reassign environment for ‘map’ [where=emptyenv()]
[10:53:08.374] |  :  .  |  - copied ‘map’ to environment
[10:53:08.374] |  :  .  |  - reassign environment for ‘inner_function’ [where=emptyenv()]
[10:53:08.374] |  :  .  |  - copied ‘inner_function’ to environment
[10:53:08.375] |  :  .  |  assign_globals() ... done
[10:53:08.377] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:08.377] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:08.377] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:08.377] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:08.377] |  :  .  |  :  .  |  :  New stack:
[10:53:08.377] |  :  .  |  :  .  |  :  List of 1
[10:53:08.377] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:08.377] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:08.377] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:08.377] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.377] |  :  .  |  :  .  |  :      ...)  
[10:53:08.377] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.377] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.377] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:08.377] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:08.377] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.377] |  :  .  |  :  .  |  :      ...)  
[10:53:08.377] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.377] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.380] |  :  .  |  :  .  |  :  Old stack:
[10:53:08.380] |  :  .  |  :  .  |  :  List of 1
[10:53:08.380] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.380] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:08.380] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:08.380] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.380] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.380] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.380] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.382] |  :  .  |  :  .  |  :  Not identical
[10:53:08.382] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:08.382] |  :  .  |  :  .  |  :  .  List of 2
[10:53:08.382] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:08.382] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:08.382] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:08.382] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.382] |  :  .  |  :  .  |  :  .      ...)  
[10:53:08.382] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.382] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.382] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:08.382] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:08.382] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.382] |  :  .  |  :  .  |  :  .      ...)  
[10:53:08.382] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.382] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.382] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:08.382] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:08.382] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.382] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:08.382] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:08.391] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:08.391] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:08.392] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:08.392] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:08.392] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:08.392] |  :  .  |  :  .  |  List of future strategies:
[10:53:08.392] |  :  .  |  :  .  |  1. multicore:
[10:53:08.392] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:08.392] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:08.392] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:08.392] |  :  .  |  :  .  |  List of 1
[10:53:08.392] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:08.392] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:08.392] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:08.392] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.392] |  :  .  |  :  .  |      ...)  
[10:53:08.392] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.392] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.392] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:08.392] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:08.392] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.392] |  :  .  |  :  .  |      ...)  
[10:53:08.392] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.392] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.395] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:08.395] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:08.395] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:08.395] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:08.396] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:08.396] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:08.396] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:08.396] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:08.396] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:08.397] |  readImmediateCondition() ...
[10:53:08.397] |    - path: ‘/tmp/RtmpdMXzO1/.future/immediateConditions’
[10:53:08.397] |   - Number of RDS files: 0
[10:53:08.397] |  readImmediateCondition() ... DONE
[10:53:08.398] |  result() for MulticoreFuture ...
[10:53:08.398] |  result() for MulticoreFuture ... done
[10:53:08.398] result() for MulticoreFuture ... done
[10:53:08.398] result() for MulticoreFuture ...
[10:53:08.398] result() for MulticoreFuture ... done
List of 2
 $ : num [1:2] 2 3
 $ : num [1:2] 2 3
- plan('multisession') ...
[10:53:08.400] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:08.400] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:53:08.401] |  :  all.equal() for FutureStrategyList ...
[10:53:08.401] |  :  .  New stack:
[10:53:08.401] |  :  .  List of 1
[10:53:08.401] |  :  .   $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:53:08.401] |  :  .      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.401] |  :  .    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:53:08.401] |  :  .    ..- attr(*, "init")= logi TRUE
[10:53:08.401] |  :  .    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:53:08.401] |  :  .    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:08.401] |  :  .    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:08.401] |  :  .    ..- attr(*, "untweakable")= chr "persistent"
[10:53:08.401] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:08.401] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.405] |  :  .  Old stack:
[10:53:08.405] |  :  .  List of 1
[10:53:08.405] |  :  .   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:08.405] |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:08.405] |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:08.405] |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.405] |  :  .      ...)  
[10:53:08.405] |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.405] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.405] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:08.405] |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:08.405] |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.405] |  :  .      ...)  
[10:53:08.405] |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.405] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.409] |  :  .  Not identical
[10:53:08.409] |  :  .  all.equal() for future ...
[10:53:08.409] |  :  .  |  List of 2
[10:53:08.409] |  :  .  |   $ target :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:53:08.409] |  :  .  |      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.409] |  :  .  |    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:53:08.409] |  :  .  |    ..- attr(*, "init")= logi TRUE
[10:53:08.409] |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:53:08.409] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:08.409] |  :  .  |    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:08.409] |  :  .  |    ..- attr(*, "untweakable")= chr "persistent"
[10:53:08.409] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:08.409] |  :  .  |   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:08.409] |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:08.409] |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:08.409] |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.409] |  :  .  |      ...)  
[10:53:08.409] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.409] |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.409] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:08.409] |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x555d5dedec28> 
[10:53:08.409] |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:08.409] |  :  .  |      ...)  
[10:53:08.409] |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:08.418] |  :  .  |  Formals differ
[10:53:08.418] |  :  .  all.equal() for future ... done
[10:53:08.418] |  :  .  Future strategies differ at level 1
[10:53:08.418] |  :  all.equal() for FutureStrategyList ... done
[10:53:08.418] |  :  plan(): Setting new future strategy stack:
[10:53:08.419] |  :  List of future strategies:
[10:53:08.419] |  :  1. multisession:
[10:53:08.419] |  :     - args: function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:08.419] |  :     - tweaked: FALSE
[10:53:08.419] |  :     - call: plan(strategy)
[10:53:08.419] |  :  List of 1
[10:53:08.419] |  :   $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:53:08.419] |  :      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.419] |  :    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:53:08.419] |  :    ..- attr(*, "init")= logi TRUE
[10:53:08.419] |  :    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:53:08.419] |  :    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:08.419] |  :    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:08.419] |  :    ..- attr(*, "untweakable")= chr "persistent"
[10:53:08.419] |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:08.419] |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:08.422] |  :  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:53:08.422] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:08.422] |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:08.422] |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:08.423] |  :  .  Legacy shutdown of cluster workers ...
[10:53:08.423] |  :  .  |  Stopping existing cluster ...
[10:53:08.424] |  :  .  |  :  No pre-existing cluster. Skipping
[10:53:08.424] |  :  .  |  Stopping existing cluster ... done
[10:53:08.424] |  :  .  Legacy shutdown of cluster workers ... done
[10:53:08.424] |  :  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:53:08.424] |  :  plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ...
[10:53:08.424] |  :  .  function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:53:08.424] |  :  .      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:08.424] |  :  .   - attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:53:08.424] |  :  .   - attr(*, "init")= logi TRUE
[10:53:08.424] |  :  .   - attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:53:08.424] |  :  .    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:08.424] |  :  .   - attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:08.424] |  :  .   - attr(*, "untweakable")= chr "persistent"
[10:53:08.424] |  :  .   - attr(*, "call")= language plan(strategy)
[10:53:08.426] |  :  .  init: TRUE
[10:53:08.426] |  :  .  makeFutureBackend(<multisession>) ...
[10:53:08.427] |  :  .  |  Backend function: <‘NULL’>
[10:53:08.428] |  :  .  |  ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ...
[10:53:08.429] |  :  .  |  :  workers: 2
[10:53:08.429] |  :  .  |  :  getCluster() ...
[10:53:08.429] |  :  .  |  :  getCluster() ... done
[10:53:08.429] |  :  .  |  :  Stopping existing cluster ...
[10:53:08.429] |  :  .  |  :  .  No pre-existing cluster. Skipping
[10:53:08.429] |  :  .  |  :  Stopping existing cluster ... done
[10:53:08.429] |  :  .  |  :  Starting new cluster ...
[10:53:08.429] |  :  .  |  :  .  makeCluster(workers, ...) ...
[10:53:08.429] |  :  .  |  :  .  |  Arguments:
[10:53:08.429] |  :  .  |  :  .  |  List of 2
[10:53:08.429] |  :  .  |  :  .  |   $             : int 2
[10:53:08.429] |  :  .  |  :  .  |   $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[10:53:08.924] |  :  .  |  :  .  |  Generated cluster UUID
[10:53:08.924] |  :  .  |  :  .  |  Cluster UUID: ‘0796ff7c736709f9dee53e94b985e74e’
[10:53:08.924] |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:08.926] |  :  .  |  :  .  makeCluster(workers, ...) ... done
[10:53:08.927] |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:08.928] |  :  .  |  :  Starting new cluster ... done
[10:53:08.928] |  :  .  |  :  Number of workers: 2
[10:53:08.928] |  :  .  |  :  Workers UUID: ‘0796ff7c736709f9dee53e94b985e74e’
[10:53:08.928] |  :  .  |  ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ... done
[10:53:08.928] |  :  .  |  Backend: <‘MultisessionFutureBackend’, ‘ClusterFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:08.929] |  :  .  makeFutureBackend(<multisession>) ... done
[10:53:08.929] |  :  plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ... done
[10:53:08.929] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:08.929] |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:53:08.929] |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:08.929] |  :  plan(): nbrOfWorkers() = 2
[10:53:08.929] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:53:08.929] plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
- lm(<formula>) ...
[10:53:08.930] getGlobalsAndPackages() ...
[10:53:08.930] |  Searching for globals ...
[10:53:08.931] |  :  globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[10:53:08.931] |  Searching for globals ... DONE
[10:53:08.932] |  Resolving globals: FALSE
[10:53:08.932] |  Search for packages associated with the globals ...
[10:53:08.932] |  :  Packages associated with globals: [2] ‘base’, ‘stats’
[10:53:08.932] |  :  Packages: [2] ‘base’, ‘stats’
[10:53:08.932] |  Search for packages associated with the globals ... DONE
[10:53:08.932] |  Packages after dropping 'base': [1] ‘stats’
[10:53:08.933] |  Packages after dropping non-attached packages: [1] ‘stats’
[10:53:08.933] |  globals: [2] ‘weight’, ‘group’
[10:53:08.933] |  packages: [1] ‘stats’
[10:53:08.933] getGlobalsAndPackages() ... done
[10:53:08.933] run() for Future (‘Future’) ...
[10:53:08.933] |  state: ‘created’
[10:53:08.933] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:08.934] |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:08.934] |  Using MultisessionFutureBackend ...
[10:53:08.934] |  :  Launching futures ...
[10:53:08.934] |  :  .  launchFuture() for ClusterFutureBackend ...
[10:53:08.934] |  :  .  |  Workers: [n=2]
[10:53:08.934] |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:08.936] |  :  .  |  FutureRegistry: ‘workers-0796ff7c736709f9dee53e94b985e74e’
[10:53:08.936] |  :  .  |  requestWorker() ...
[10:53:08.936] |  :  .  |  :  requestNode() ...
[10:53:08.936] |  :  .  |  :  .  Number of workers: 2
[10:53:08.936] |  :  .  |  :  .  Polling for a free worker ...
[10:53:08.936] |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ...
[10:53:08.936] |  :  .  |  :  .  |  :  Created empty registry ‘workers-0796ff7c736709f9dee53e94b985e74e’
[10:53:08.936] |  :  .  |  :  .  |  :  Listing all futures
[10:53:08.937] |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:53:08.937] |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ... done
[10:53:08.937] |  :  .  |  :  .  |  Total time: 0
[10:53:08.937] |  :  .  |  :  .  Polling for a free worker ... done
[10:53:08.937] |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ...
[10:53:08.937] |  :  .  |  :  .  |  Listing all futures
[10:53:08.937] |  :  .  |  :  .  |  Number of registered futures: 0
[10:53:08.937] |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ... done
[10:53:08.937] |  :  .  |  :  .  Index of first available worker: 1
[10:53:08.937] |  :  .  |  :  .  Validate that the worker is functional ...
[10:53:08.999] |  :  .  |  :  .  |  Worker is functional
[10:53:08.999] |  :  .  |  :  .  requestNode() ... done
[10:53:09.000] |  :  .  |  :  .  cluster node index: 1
[10:53:09.000] |  :  .  |  :  requestWorker() ... done
[10:53:09.000] |  :  .  |  :  eraseGlobalEnvironment() ...
[10:53:09.001] |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:53:09.001] |  :  .  |  :  launchFuture() ...
[10:53:09.001] |  :  .  |  :  .  cluster node index: 1
[10:53:09.001] |  :  .  |  :  .  getFutureData() ...
[10:53:09.001] |  :  .  |  :  .  |  getFutureCore() ...
[10:53:09.002] |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 1): ‘stats’
[10:53:09.002] |  :  .  |  :  .  |  getFutureCore() ... done
[10:53:09.002] |  :  .  |  :  .  |  getFutureCapture() ...
[10:53:09.002] |  :  .  |  :  .  |  getFutureCapture() ... done
[10:53:09.002] |  :  .  |  :  .  |  getFutureContext() ...
[10:53:09.002] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:09.002] |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:53:09.002] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:09.003] |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:53:09.003] |  :  .  |  :  .  |  getFutureContext() ... done
[10:53:09.003] |  :  .  |  :  .  getFutureData() ... done
[10:53:09.003] |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'add', earlySignal = 0) ...
[10:53:09.004] |  :  .  |  :  .  |  Appended future to position #1
[10:53:09.004] |  :  .  |  :  .  |  Number of registered futures: 1
[10:53:09.004] |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'add', earlySignal = 0) ... done
[10:53:09.004] |  :  .  |  :  launchFuture() ... done
[10:53:09.004] |  :  .  |  :  MultisessionFuture started
[10:53:09.004] |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:53:09.004] |  :  .  Launching futures ... done
[10:53:09.004] |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:09.005] |  :  Using MultisessionFutureBackend ... done
[10:53:09.005] |  run() for Future (‘MultisessionFuture’) ... done
[10:53:09.005] |  result() for ClusterFuture ...
[10:53:09.005] |  :  assertValidConnection() ...
[10:53:09.005] |  :  .  cluster node index: 1
[10:53:09.006] |  :  assertValidConnection() ... done
[10:53:09.006] |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:53:09.007] |  :  .  cluster node index: 1
[10:53:09.096] |  :  .  [1] TRUE
[10:53:09.096] |  :  .  received data:
[10:53:09.096] |  :  .  List of 5
[10:53:09.096] |  :  .   $ type   : chr "VALUE"
[10:53:09.096] |  :  .   $ value  :List of 13
[10:53:09.096] |  :  .    ..$ value            :List of 13
[10:53:09.096] |  :  .    .. ..$ coefficients : Named num [1:2] 5.03 4.66
[10:53:09.096] |  :  .    .. .. ..- attr(*, "names")= chr [1:2] "groupCtl" "groupTrt"
[10:53:09.096] |  :  .    .. ..$ residuals    : Named num [1:20] -0.862 0.548 0.148 1.078 -0.532 ...
[10:53:09.096] |  :  .    .. .. ..- attr(*, "names")= chr [1:20] "1" "2" "3" "4" ...
[10:53:09.096] |  :  .    .. ..$ effects      : Named num [1:20] -15.913 -14.739 0.355 1.285 -0.325 ...
[10:53:09.096] |  :  .    .. .. ..- attr(*, "names")= chr [1:20] "groupCtl" "groupTrt" "" "" ...
[10:53:09.096] |  :  .    .. ..$ rank         : int 2
[10:53:09.096] |  :  .    .. ..$ fitted.values: Named num [1:20] 5.03 5.03 5.03 5.03 5.03 ...
[10:53:09.096] |  :  .    .. .. ..- attr(*, "names")= chr [1:20] "1" "2" "3" "4" ...
[10:53:09.096] |  :  .    .. ..$ assign       : int [1:2] 1 1
[10:53:09.096] |  :  .    .. ..$ qr           :List of 5
[10:53:09.096] |  :  .    .. .. ..$ qr   : num [1:20, 1:2] -3.162 0.316 0.316 0.316 0.316 ...
[10:53:09.096] |  :  .    .. .. .. ..- attr(*, "dimnames")=List of 2
[10:53:09.096] |  :  .    .. .. .. .. ..$ : chr [1:20] "1" "2" "3" "4" ...
[10:53:09.096] |  :  .    .. .. .. .. ..$ : chr [1:2] "groupCtl" "groupTrt"
[10:53:09.096] |  :  .    .. .. .. ..- attr(*, "assign")= int [1:2] 1 1
[10:53:09.096] |  :  .    .. .. .. ..- attr(*, "contrasts")=List of 1
[10:53:09.096] |  :  .    .. .. .. .. ..$ group: chr "contr.treatment"
[10:53:09.096] |  :  .    .. .. ..$ qraux: num [1:2] 1.32 1
[10:53:09.096] |  :  .    .. .. ..$ pivot: int [1:2] 1 2
[10:53:09.096] |  :  .    .. .. ..$ tol  : num 1e-07
[10:53:09.096] |  :  .    .. .. ..$ rank : int 2
[10:53:09.096] |  :  .    .. .. ..- attr(*, "class")= chr "qr"
[10:53:09.096] |  :  .    .. ..$ df.residual  : int 18
[10:53:09.096] |  :  .    .. ..$ contrasts    :List of 1
[10:53:09.096] |  :  .    .. .. ..$ group: chr "contr.treatment"
[10:53:09.096] |  :  .    .. ..$ xlevels      :List of 1
[10:53:09.096] |  :  .    .. .. ..$ group: chr [1:2] "Ctl" "Trt"
[10:53:09.096] |  :  .    .. ..$ call         : language lm(formula = weight ~ group - 1)
[10:53:09.096] |  :  .    .. ..$ terms        :Classes 'terms', 'formula'  language weight ~ group - 1
[10:53:09.096] |  :  .    .. .. .. ..- attr(*, "variables")= language list(weight, group)
[10:53:09.096] |  :  .    .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[10:53:09.096] |  :  .    .. .. .. .. ..- attr(*, "dimnames")=List of 2
[10:53:09.096] |  :  .    .. .. .. .. .. ..$ : chr [1:2] "weight" "group"
[10:53:09.096] |  :  .    .. .. .. .. .. ..$ : chr "group"
[10:53:09.096] |  :  .    .. .. .. ..- attr(*, "term.labels")= chr "group"
[10:53:09.096] |  :  .    .. .. .. ..- attr(*, "order")= int 1
[10:53:09.096] |  :  .    .. .. .. ..- attr(*, "intercept")= int 0
[10:53:09.096] |  :  .    .. .. .. ..- attr(*, "response")= int 1
[10:53:09.096] |  :  .    .. .. .. ..- attr(*, ".Environment")=<environment: 0x555d5ef7aab8> 
[10:53:09.096] |  :  .    .. .. .. ..- attr(*, "predvars")= language list(weight, group)
[10:53:09.096] |  :  .    .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "factor"
[10:53:09.096] |  :  .    .. .. .. .. ..- attr(*, "names")= chr [1:2] "weight" "group"
[10:53:09.096] |  :  .    .. ..$ model        :'data.frame':	20 obs. of  2 variables:
[10:53:09.096] |  :  .    .. .. ..$ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[10:53:09.096] |  :  .    .. .. ..$ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[10:53:09.096] |  :  .    .. .. ..- attr(*, "terms")=Classes 'terms', 'formula'  language weight ~ group - 1
[10:53:09.096] |  :  .    .. .. .. .. ..- attr(*, "variables")= language list(weight, group)
[10:53:09.096] |  :  .    .. .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[10:53:09.096] |  :  .    .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
[10:53:09.096] |  :  .    .. .. .. .. .. .. ..$ : chr [1:2] "weight" "group"
[10:53:09.096] |  :  .    .. .. .. .. .. .. ..$ : chr "group"
[10:53:09.096] |  :  .    .. .. .. .. ..- attr(*, "term.labels")= chr "group"
[10:53:09.096] |  :  .    .. .. .. .. ..- attr(*, "order")= int 1
[10:53:09.096] |  :  .    .. .. .. .. ..- attr(*, "intercept")= int 0
[10:53:09.096] |  :  .    .. .. .. .. ..- attr(*, "response")= int 1
[10:53:09.096] |  :  .    .. .. .. .. ..- attr(*, ".Environment")=<environment: 0x555d5ef7aab8> 
[10:53:09.096] |  :  .    .. .. .. .. ..- attr(*, "predvars")= language list(weight, group)
[10:53:09.096] |  :  .    .. .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "factor"
[10:53:09.096] |  :  .    .. .. .. .. .. ..- attr(*, "names")= chr [1:2] "weight" "group"
[10:53:09.096] |  :  .    .. ..- attr(*, "class")= chr "lm"
[10:53:09.096] |  :  .    ..$ visible          : logi TRUE
[10:53:09.096] |  :  .    ..$ stdout           : chr ""
[10:53:09.096] |  :  .    ..$ conditions       : list()
[10:53:09.096] |  :  .    ..$ rng              : logi FALSE
[10:53:09.096] |  :  .    ..$ misuseGlobalEnv  : NULL
[10:53:09.096] |  :  .    ..$ misuseConnections:List of 3
[10:53:09.096] |  :  .    .. ..$ added   : NULL
[10:53:09.096] |  :  .    .. ..$ removed : NULL
[10:53:09.096] |  :  .    .. ..$ replaced: NULL
[10:53:09.096] |  :  .    ..$ misuseDevices    : NULL
[10:53:09.096] |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:09"
[10:53:09.096] |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:09"
[10:53:09.096] |  :  .    ..$ session_uuid     : chr "da156b1daa5a8ac0e58d6fa5c7142cca"
[10:53:09.096] |  :  .    .. ..- attr(*, "source")=List of 5
[10:53:09.096] |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:09.096] |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:09.096] |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:09.096] |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:09.096] |  :  .    .. .. ..$ pid   : int 70396
[10:53:09.096] |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:08"
[10:53:09.096] |  :  .    .. .. ..$ random: int 2147483647
[10:53:09.096] |  :  .    ..$ r_info           :List of 4
[10:53:09.096] |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:09.096] |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:53:09.096] |  :  .    .. ..$ os           : chr "unix"
[10:53:09.096] |  :  .    .. ..$ os_name      : chr "Linux"
[10:53:09.096] |  :  .    .. ..$ captures_utf8: logi TRUE
[10:53:09.096] |  :  .    ..$ version          : chr "1.8"
[10:53:09.096] |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:53:09.096] |  :  .   $ success: logi TRUE
[10:53:09.096] |  :  .   $ time   : 'proc_time' Named num [1:5] 0.046 0.005 0.052 0 0
[10:53:09.096] |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:09.096] |  :  .   $ tag    : NULL
[10:53:09.133] |  :  .  Received FutureResult
[10:53:09.133] |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'remove', earlySignal = 0) ...
[10:53:09.133] |  :  .  |  Removed future from position #1
[10:53:09.133] |  :  .  |  Number of registered futures: 0
[10:53:09.133] |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'remove', earlySignal = 0) ... done
[10:53:09.133] |  :  .  Erased future from future backend
[10:53:09.133] |  :  .  result() for ClusterFuture ...
[10:53:09.134] |  :  .  |  result already collected: FutureResult
[10:53:09.134] |  :  .  result() for ClusterFuture ... done
[10:53:09.134] |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:09.134] |  result() for ClusterFuture ... done
[10:53:09.134] |  result() for ClusterFuture ...
[10:53:09.134] |  :  result already collected: FutureResult
[10:53:09.134] |  result() for ClusterFuture ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[10:53:09.136] |  getGlobalsAndPackages() ...
[10:53:09.136] |  :  Searching for globals ...
[10:53:09.139] |  :  .  globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[10:53:09.139] |  :  Searching for globals ... DONE
[10:53:09.139] |  :  Resolving globals: FALSE
[10:53:09.139] |  :  Search for packages associated with the globals ...
[10:53:09.139] |  :  .  Packages associated with globals: [2] ‘base’, ‘stats’
[10:53:09.140] |  :  .  Packages: [2] ‘base’, ‘stats’
[10:53:09.140] |  :  Search for packages associated with the globals ... DONE
[10:53:09.140] |  :  Packages after dropping 'base': [1] ‘stats’
[10:53:09.140] |  :  Packages after dropping non-attached packages: [1] ‘stats’
[10:53:09.140] |  :  globals: [2] ‘weight’, ‘group’
[10:53:09.140] |  :  packages: [1] ‘stats’
[10:53:09.141] |  getGlobalsAndPackages() ... done
[10:53:09.141] |  run() for Future (‘Future’) ...
[10:53:09.141] |  :  state: ‘created’
[10:53:09.141] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:09.141] |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:09.141] |  :  Using MultisessionFutureBackend ...
[10:53:09.142] |  :  .  Launching futures ...
[10:53:09.142] |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:53:09.142] |  :  .  |  :  Workers: [n=2]
[10:53:09.142] |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:09.144] |  :  .  |  :  FutureRegistry: ‘workers-0796ff7c736709f9dee53e94b985e74e’
[10:53:09.144] |  :  .  |  :  requestWorker() ...
[10:53:09.144] |  :  .  |  :  .  requestNode() ...
[10:53:09.144] |  :  .  |  :  .  |  Number of workers: 2
[10:53:09.144] |  :  .  |  :  .  |  Polling for a free worker ...
[10:53:09.144] |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ...
[10:53:09.145] |  :  .  |  :  .  |  :  .  Listing all futures
[10:53:09.145] |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:53:09.145] |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ... done
[10:53:09.145] |  :  .  |  :  .  |  :  Total time: 0
[10:53:09.145] |  :  .  |  :  .  |  Polling for a free worker ... done
[10:53:09.145] |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ...
[10:53:09.145] |  :  .  |  :  .  |  :  Listing all futures
[10:53:09.145] |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:53:09.146] |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ... done
[10:53:09.146] |  :  .  |  :  .  |  Index of first available worker: 1
[10:53:09.146] |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:53:09.185] |  :  .  |  :  .  |  :  Worker is functional
[10:53:09.185] |  :  .  |  :  .  |  requestNode() ... done
[10:53:09.185] |  :  .  |  :  .  |  cluster node index: 1
[10:53:09.185] |  :  .  |  :  .  requestWorker() ... done
[10:53:09.185] |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:53:09.186] |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:53:09.186] |  :  .  |  :  .  launchFuture() ...
[10:53:09.186] |  :  .  |  :  .  |  cluster node index: 1
[10:53:09.186] |  :  .  |  :  .  |  getFutureData() ...
[10:53:09.186] |  :  .  |  :  .  |  :  getFutureCore() ...
[10:53:09.187] |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘stats’
[10:53:09.187] |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:53:09.187] |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:53:09.187] |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:53:09.187] |  :  .  |  :  .  |  :  getFutureContext() ...
[10:53:09.189] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:09.189] |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:09.189] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:09.189] |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:09.190] |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:53:09.190] |  :  .  |  :  .  |  getFutureData() ... done
[10:53:09.190] |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'add', earlySignal = 0) ...
[10:53:09.190] |  :  .  |  :  .  |  :  Appended future to position #1
[10:53:09.190] |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:53:09.190] |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'add', earlySignal = 0) ... done
[10:53:09.190] |  :  .  |  :  .  launchFuture() ... done
[10:53:09.190] |  :  .  |  :  .  MultisessionFuture started
[10:53:09.191] |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:53:09.191] |  :  .  |  Launching futures ... done
[10:53:09.191] |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:09.191] |  :  .  Using MultisessionFutureBackend ... done
[10:53:09.191] |  :  run() for Future (‘MultisessionFuture’) ... done
[10:53:09.191] |  :  result() for ClusterFuture ...
[10:53:09.191] |  :  .  assertValidConnection() ...
[10:53:09.191] |  :  .  |  cluster node index: 1
[10:53:09.192] |  :  .  assertValidConnection() ... done
[10:53:09.192] |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:53:09.192] |  :  .  |  cluster node index: 1
[10:53:09.235] |  :  .  |  [1] TRUE
[10:53:09.236] |  :  .  |  received data:
[10:53:09.236] |  :  .  |  List of 5
[10:53:09.236] |  :  .  |   $ type   : chr "VALUE"
[10:53:09.236] |  :  .  |   $ value  :List of 13
[10:53:09.236] |  :  .  |    ..$ value            :List of 13
[10:53:09.236] |  :  .  |    .. ..$ coefficients : Named num [1:2] 5.03 4.66
[10:53:09.236] |  :  .  |    .. .. ..- attr(*, "names")= chr [1:2] "groupCtl" "groupTrt"
[10:53:09.236] |  :  .  |    .. ..$ residuals    : Named num [1:20] -0.862 0.548 0.148 1.078 -0.532 ...
[10:53:09.236] |  :  .  |    .. .. ..- attr(*, "names")= chr [1:20] "1" "2" "3" "4" ...
[10:53:09.236] |  :  .  |    .. ..$ effects      : Named num [1:20] -15.913 -14.739 0.355 1.285 -0.325 ...
[10:53:09.236] |  :  .  |    .. .. ..- attr(*, "names")= chr [1:20] "groupCtl" "groupTrt" "" "" ...
[10:53:09.236] |  :  .  |    .. ..$ rank         : int 2
[10:53:09.236] |  :  .  |    .. ..$ fitted.values: Named num [1:20] 5.03 5.03 5.03 5.03 5.03 ...
[10:53:09.236] |  :  .  |    .. .. ..- attr(*, "names")= chr [1:20] "1" "2" "3" "4" ...
[10:53:09.236] |  :  .  |    .. ..$ assign       : int [1:2] 1 1
[10:53:09.236] |  :  .  |    .. ..$ qr           :List of 5
[10:53:09.236] |  :  .  |    .. .. ..$ qr   : num [1:20, 1:2] -3.162 0.316 0.316 0.316 0.316 ...
[10:53:09.236] |  :  .  |    .. .. .. ..- attr(*, "dimnames")=List of 2
[10:53:09.236] |  :  .  |    .. .. .. .. ..$ : chr [1:20] "1" "2" "3" "4" ...
[10:53:09.236] |  :  .  |    .. .. .. .. ..$ : chr [1:2] "groupCtl" "groupTrt"
[10:53:09.236] |  :  .  |    .. .. .. ..- attr(*, "assign")= int [1:2] 1 1
[10:53:09.236] |  :  .  |    .. .. .. ..- attr(*, "contrasts")=List of 1
[10:53:09.236] |  :  .  |    .. .. .. .. ..$ group: chr "contr.treatment"
[10:53:09.236] |  :  .  |    .. .. ..$ qraux: num [1:2] 1.32 1
[10:53:09.236] |  :  .  |    .. .. ..$ pivot: int [1:2] 1 2
[10:53:09.236] |  :  .  |    .. .. ..$ tol  : num 1e-07
[10:53:09.236] |  :  .  |    .. .. ..$ rank : int 2
[10:53:09.236] |  :  .  |    .. .. ..- attr(*, "class")= chr "qr"
[10:53:09.236] |  :  .  |    .. ..$ df.residual  : int 18
[10:53:09.236] |  :  .  |    .. ..$ contrasts    :List of 1
[10:53:09.236] |  :  .  |    .. .. ..$ group: chr "contr.treatment"
[10:53:09.236] |  :  .  |    .. ..$ xlevels      :List of 1
[10:53:09.236] |  :  .  |    .. .. ..$ group: chr [1:2] "Ctl" "Trt"
[10:53:09.236] |  :  .  |    .. ..$ call         : language lm(formula = weight ~ group - 1)
[10:53:09.236] |  :  .  |    .. ..$ terms        :Classes 'terms', 'formula'  language weight ~ group - 1
[10:53:09.236] |  :  .  |    .. .. .. ..- attr(*, "variables")= language list(weight, group)
[10:53:09.236] |  :  .  |    .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[10:53:09.236] |  :  .  |    .. .. .. .. ..- attr(*, "dimnames")=List of 2
[10:53:09.236] |  :  .  |    .. .. .. .. .. ..$ : chr [1:2] "weight" "group"
[10:53:09.236] |  :  .  |    .. .. .. .. .. ..$ : chr "group"
[10:53:09.236] |  :  .  |    .. .. .. ..- attr(*, "term.labels")= chr "group"
[10:53:09.236] |  :  .  |    .. .. .. ..- attr(*, "order")= int 1
[10:53:09.236] |  :  .  |    .. .. .. ..- attr(*, "intercept")= int 0
[10:53:09.236] |  :  .  |    .. .. .. ..- attr(*, "response")= int 1
[10:53:09.236] |  :  .  |    .. .. .. ..- attr(*, ".Environment")=<environment: 0x555d5e506358> 
[10:53:09.236] |  :  .  |    .. .. .. ..- attr(*, "predvars")= language list(weight, group)
[10:53:09.236] |  :  .  |    .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "factor"
[10:53:09.236] |  :  .  |    .. .. .. .. ..- attr(*, "names")= chr [1:2] "weight" "group"
[10:53:09.236] |  :  .  |    .. ..$ model        :'data.frame':	20 obs. of  2 variables:
[10:53:09.236] |  :  .  |    .. .. ..$ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[10:53:09.236] |  :  .  |    .. .. ..$ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[10:53:09.236] |  :  .  |    .. .. ..- attr(*, "terms")=Classes 'terms', 'formula'  language weight ~ group - 1
[10:53:09.236] |  :  .  |    .. .. .. .. ..- attr(*, "variables")= language list(weight, group)
[10:53:09.236] |  :  .  |    .. .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[10:53:09.236] |  :  .  |    .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
[10:53:09.236] |  :  .  |    .. .. .. .. .. .. ..$ : chr [1:2] "weight" "group"
[10:53:09.236] |  :  .  |    .. .. .. .. .. .. ..$ : chr "group"
[10:53:09.236] |  :  .  |    .. .. .. .. ..- attr(*, "term.labels")= chr "group"
[10:53:09.236] |  :  .  |    .. .. .. .. ..- attr(*, "order")= int 1
[10:53:09.236] |  :  .  |    .. .. .. .. ..- attr(*, "intercept")= int 0
[10:53:09.236] |  :  .  |    .. .. .. .. ..- attr(*, "response")= int 1
[10:53:09.236] |  :  .  |    .. .. .. .. ..- attr(*, ".Environment")=<environment: 0x555d5e506358> 
[10:53:09.236] |  :  .  |    .. .. .. .. ..- attr(*, "predvars")= language list(weight, group)
[10:53:09.236] |  :  .  |    .. .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "factor"
[10:53:09.236] |  :  .  |    .. .. .. .. .. ..- attr(*, "names")= chr [1:2] "weight" "group"
[10:53:09.236] |  :  .  |    .. ..- attr(*, "class")= chr "lm"
[10:53:09.236] |  :  .  |    ..$ visible          : logi TRUE
[10:53:09.236] |  :  .  |    ..$ stdout           : chr ""
[10:53:09.236] |  :  .  |    ..$ conditions       : list()
[10:53:09.236] |  :  .  |    ..$ rng              : logi FALSE
[10:53:09.236] |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:53:09.236] |  :  .  |    ..$ misuseConnections:List of 3
[10:53:09.236] |  :  .  |    .. ..$ added   : NULL
[10:53:09.236] |  :  .  |    .. ..$ removed : NULL
[10:53:09.236] |  :  .  |    .. ..$ replaced: NULL
[10:53:09.236] |  :  .  |    ..$ misuseDevices    : NULL
[10:53:09.236] |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:09"
[10:53:09.236] |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:09"
[10:53:09.236] |  :  .  |    ..$ session_uuid     : chr "da156b1daa5a8ac0e58d6fa5c7142cca"
[10:53:09.236] |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:53:09.236] |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:09.236] |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:09.236] |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:09.236] |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:09.236] |  :  .  |    .. .. ..$ pid   : int 70396
[10:53:09.236] |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:08"
[10:53:09.236] |  :  .  |    .. .. ..$ random: int 2147483647
[10:53:09.236] |  :  .  |    ..$ r_info           :List of 4
[10:53:09.236] |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:09.236] |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:53:09.236] |  :  .  |    .. ..$ os           : chr "unix"
[10:53:09.236] |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:53:09.236] |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:53:09.236] |  :  .  |    ..$ version          : chr "1.8"
[10:53:09.236] |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:53:09.236] |  :  .  |   $ success: logi TRUE
[10:53:09.236] |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[10:53:09.236] |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:09.236] |  :  .  |   $ tag    : NULL
[10:53:09.263] |  :  .  |  Received FutureResult
[10:53:09.263] |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'remove', earlySignal = 0) ...
[10:53:09.263] |  :  .  |  :  Removed future from position #1
[10:53:09.263] |  :  .  |  :  Number of registered futures: 0
[10:53:09.264] |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'remove', earlySignal = 0) ... done
[10:53:09.264] |  :  .  |  Erased future from future backend
[10:53:09.264] |  :  .  |  result() for ClusterFuture ...
[10:53:09.264] |  :  .  |  :  result already collected: FutureResult
[10:53:09.264] |  :  .  |  result() for ClusterFuture ... done
[10:53:09.264] |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:09.264] |  :  result() for ClusterFuture ... done
[10:53:09.264] |  :  result() for ClusterFuture ...
[10:53:09.264] |  :  .  result already collected: FutureResult
[10:53:09.264] |  :  result() for ClusterFuture ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[10:53:09.266] |  :  getGlobalsAndPackages() ...
[10:53:09.266] |  :  .  Searching for globals ...
[10:53:09.268] |  :  .  |  globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[10:53:09.268] |  :  .  Searching for globals ... DONE
[10:53:09.268] |  :  .  Resolving globals: FALSE
[10:53:09.268] |  :  .  Search for packages associated with the globals ...
[10:53:09.268] |  :  .  |  Packages associated with globals: [2] ‘base’, ‘stats’
[10:53:09.269] |  :  .  |  Packages: [2] ‘base’, ‘stats’
[10:53:09.269] |  :  .  Search for packages associated with the globals ... DONE
[10:53:09.269] |  :  .  Packages after dropping 'base': [1] ‘stats’
[10:53:09.269] |  :  .  Packages after dropping non-attached packages: [1] ‘stats’
[10:53:09.269] |  :  .  globals: [2] ‘weight’, ‘group’
[10:53:09.269] |  :  .  packages: [1] ‘stats’
[10:53:09.269] |  :  getGlobalsAndPackages() ... done
[10:53:09.270] |  :  run() for Future (‘Future’) ...
[10:53:09.270] |  :  .  state: ‘created’
[10:53:09.270] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:09.270] |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:09.270] |  :  .  Using MultisessionFutureBackend ...
[10:53:09.270] |  :  .  |  Launching futures ...
[10:53:09.270] |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:53:09.270] |  :  .  |  :  .  Workers: [n=2]
[10:53:09.270] |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:09.272] |  :  .  |  :  .  FutureRegistry: ‘workers-0796ff7c736709f9dee53e94b985e74e’
[10:53:09.272] |  :  .  |  :  .  requestWorker() ...
[10:53:09.272] |  :  .  |  :  .  |  requestNode() ...
[10:53:09.272] |  :  .  |  :  .  |  :  Number of workers: 2
[10:53:09.272] |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:53:09.272] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ...
[10:53:09.273] |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:53:09.273] |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:53:09.273] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ... done
[10:53:09.273] |  :  .  |  :  .  |  :  .  Total time: 0
[10:53:09.273] |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:53:09.273] |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ...
[10:53:09.273] |  :  .  |  :  .  |  :  .  Listing all futures
[10:53:09.273] |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:53:09.273] |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ... done
[10:53:09.273] |  :  .  |  :  .  |  :  Index of first available worker: 1
[10:53:09.273] |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:53:09.351] |  :  .  |  :  .  |  :  .  Worker is functional
[10:53:09.351] |  :  .  |  :  .  |  :  requestNode() ... done
[10:53:09.352] |  :  .  |  :  .  |  :  cluster node index: 1
[10:53:09.352] |  :  .  |  :  .  |  requestWorker() ... done
[10:53:09.352] |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:53:09.352] |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:53:09.352] |  :  .  |  :  .  |  launchFuture() ...
[10:53:09.352] |  :  .  |  :  .  |  :  cluster node index: 1
[10:53:09.353] |  :  .  |  :  .  |  :  getFutureData() ...
[10:53:09.353] |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:53:09.353] |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 1): ‘stats’
[10:53:09.353] |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:53:09.353] |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:53:09.353] |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:53:09.353] |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:53:09.353] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:09.353] |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:53:09.353] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:09.354] |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:53:09.354] |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:53:09.354] |  :  .  |  :  .  |  :  getFutureData() ... done
[10:53:09.354] |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'add', earlySignal = 0) ...
[10:53:09.354] |  :  .  |  :  .  |  :  .  Appended future to position #1
[10:53:09.354] |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:53:09.354] |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'add', earlySignal = 0) ... done
[10:53:09.355] |  :  .  |  :  .  |  launchFuture() ... done
[10:53:09.355] |  :  .  |  :  .  |  MultisessionFuture started
[10:53:09.355] |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:53:09.355] |  :  .  |  :  Launching futures ... done
[10:53:09.355] |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:09.355] |  :  .  |  Using MultisessionFutureBackend ... done
[10:53:09.355] |  :  .  run() for Future (‘MultisessionFuture’) ... done
[10:53:09.355] |  :  .  result() for ClusterFuture ...
[10:53:09.355] |  :  .  |  assertValidConnection() ...
[10:53:09.355] |  :  .  |  :  cluster node index: 1
[10:53:09.356] |  :  .  |  assertValidConnection() ... done
[10:53:09.356] |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:53:09.356] |  :  .  |  :  cluster node index: 1
[10:53:09.399] |  :  .  |  :  [1] TRUE
[10:53:09.399] |  :  .  |  :  received data:
[10:53:09.400] |  :  .  |  :  List of 5
[10:53:09.400] |  :  .  |  :   $ type   : chr "VALUE"
[10:53:09.400] |  :  .  |  :   $ value  :List of 13
[10:53:09.400] |  :  .  |  :    ..$ value            :List of 13
[10:53:09.400] |  :  .  |  :    .. ..$ coefficients : Named num [1:2] 5.03 4.66
[10:53:09.400] |  :  .  |  :    .. .. ..- attr(*, "names")= chr [1:2] "groupCtl" "groupTrt"
[10:53:09.400] |  :  .  |  :    .. ..$ residuals    : Named num [1:20] -0.862 0.548 0.148 1.078 -0.532 ...
[10:53:09.400] |  :  .  |  :    .. .. ..- attr(*, "names")= chr [1:20] "1" "2" "3" "4" ...
[10:53:09.400] |  :  .  |  :    .. ..$ effects      : Named num [1:20] -15.913 -14.739 0.355 1.285 -0.325 ...
[10:53:09.400] |  :  .  |  :    .. .. ..- attr(*, "names")= chr [1:20] "groupCtl" "groupTrt" "" "" ...
[10:53:09.400] |  :  .  |  :    .. ..$ rank         : int 2
[10:53:09.400] |  :  .  |  :    .. ..$ fitted.values: Named num [1:20] 5.03 5.03 5.03 5.03 5.03 ...
[10:53:09.400] |  :  .  |  :    .. .. ..- attr(*, "names")= chr [1:20] "1" "2" "3" "4" ...
[10:53:09.400] |  :  .  |  :    .. ..$ assign       : int [1:2] 1 1
[10:53:09.400] |  :  .  |  :    .. ..$ qr           :List of 5
[10:53:09.400] |  :  .  |  :    .. .. ..$ qr   : num [1:20, 1:2] -3.162 0.316 0.316 0.316 0.316 ...
[10:53:09.400] |  :  .  |  :    .. .. .. ..- attr(*, "dimnames")=List of 2
[10:53:09.400] |  :  .  |  :    .. .. .. .. ..$ : chr [1:20] "1" "2" "3" "4" ...
[10:53:09.400] |  :  .  |  :    .. .. .. .. ..$ : chr [1:2] "groupCtl" "groupTrt"
[10:53:09.400] |  :  .  |  :    .. .. .. ..- attr(*, "assign")= int [1:2] 1 1
[10:53:09.400] |  :  .  |  :    .. .. .. ..- attr(*, "contrasts")=List of 1
[10:53:09.400] |  :  .  |  :    .. .. .. .. ..$ group: chr "contr.treatment"
[10:53:09.400] |  :  .  |  :    .. .. ..$ qraux: num [1:2] 1.32 1
[10:53:09.400] |  :  .  |  :    .. .. ..$ pivot: int [1:2] 1 2
[10:53:09.400] |  :  .  |  :    .. .. ..$ tol  : num 1e-07
[10:53:09.400] |  :  .  |  :    .. .. ..$ rank : int 2
[10:53:09.400] |  :  .  |  :    .. .. ..- attr(*, "class")= chr "qr"
[10:53:09.400] |  :  .  |  :    .. ..$ df.residual  : int 18
[10:53:09.400] |  :  .  |  :    .. ..$ contrasts    :List of 1
[10:53:09.400] |  :  .  |  :    .. .. ..$ group: chr "contr.treatment"
[10:53:09.400] |  :  .  |  :    .. ..$ xlevels      :List of 1
[10:53:09.400] |  :  .  |  :    .. .. ..$ group: chr [1:2] "Ctl" "Trt"
[10:53:09.400] |  :  .  |  :    .. ..$ call         : language lm(formula = weight ~ group - 1)
[10:53:09.400] |  :  .  |  :    .. ..$ terms        :Classes 'terms', 'formula'  language weight ~ group - 1
[10:53:09.400] |  :  .  |  :    .. .. .. ..- attr(*, "variables")= language list(weight, group)
[10:53:09.400] |  :  .  |  :    .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[10:53:09.400] |  :  .  |  :    .. .. .. .. ..- attr(*, "dimnames")=List of 2
[10:53:09.400] |  :  .  |  :    .. .. .. .. .. ..$ : chr [1:2] "weight" "group"
[10:53:09.400] |  :  .  |  :    .. .. .. .. .. ..$ : chr "group"
[10:53:09.400] |  :  .  |  :    .. .. .. ..- attr(*, "term.labels")= chr "group"
[10:53:09.400] |  :  .  |  :    .. .. .. ..- attr(*, "order")= int 1
[10:53:09.400] |  :  .  |  :    .. .. .. ..- attr(*, "intercept")= int 0
[10:53:09.400] |  :  .  |  :    .. .. .. ..- attr(*, "response")= int 1
[10:53:09.400] |  :  .  |  :    .. .. .. ..- attr(*, ".Environment")=<environment: 0x555d5fbe01d8> 
[10:53:09.400] |  :  .  |  :    .. .. .. ..- attr(*, "predvars")= language list(weight, group)
[10:53:09.400] |  :  .  |  :    .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "factor"
[10:53:09.400] |  :  .  |  :    .. .. .. .. ..- attr(*, "names")= chr [1:2] "weight" "group"
[10:53:09.400] |  :  .  |  :    .. ..$ model        :'data.frame':	20 obs. of  2 variables:
[10:53:09.400] |  :  .  |  :    .. .. ..$ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[10:53:09.400] |  :  .  |  :    .. .. ..$ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[10:53:09.400] |  :  .  |  :    .. .. ..- attr(*, "terms")=Classes 'terms', 'formula'  language weight ~ group - 1
[10:53:09.400] |  :  .  |  :    .. .. .. .. ..- attr(*, "variables")= language list(weight, group)
[10:53:09.400] |  :  .  |  :    .. .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[10:53:09.400] |  :  .  |  :    .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
[10:53:09.400] |  :  .  |  :    .. .. .. .. .. .. ..$ : chr [1:2] "weight" "group"
[10:53:09.400] |  :  .  |  :    .. .. .. .. .. .. ..$ : chr "group"
[10:53:09.400] |  :  .  |  :    .. .. .. .. ..- attr(*, "term.labels")= chr "group"
[10:53:09.400] |  :  .  |  :    .. .. .. .. ..- attr(*, "order")= int 1
[10:53:09.400] |  :  .  |  :    .. .. .. .. ..- attr(*, "intercept")= int 0
[10:53:09.400] |  :  .  |  :    .. .. .. .. ..- attr(*, "response")= int 1
[10:53:09.400] |  :  .  |  :    .. .. .. .. ..- attr(*, ".Environment")=<environment: 0x555d5fbe01d8> 
[10:53:09.400] |  :  .  |  :    .. .. .. .. ..- attr(*, "predvars")= language list(weight, group)
[10:53:09.400] |  :  .  |  :    .. .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "factor"
[10:53:09.400] |  :  .  |  :    .. .. .. .. .. ..- attr(*, "names")= chr [1:2] "weight" "group"
[10:53:09.400] |  :  .  |  :    .. ..- attr(*, "class")= chr "lm"
[10:53:09.400] |  :  .  |  :    ..$ visible          : logi TRUE
[10:53:09.400] |  :  .  |  :    ..$ stdout           : chr ""
[10:53:09.400] |  :  .  |  :    ..$ conditions       : list()
[10:53:09.400] |  :  .  |  :    ..$ rng              : logi FALSE
[10:53:09.400] |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:53:09.400] |  :  .  |  :    ..$ misuseConnections:List of 3
[10:53:09.400] |  :  .  |  :    .. ..$ added   : NULL
[10:53:09.400] |  :  .  |  :    .. ..$ removed : NULL
[10:53:09.400] |  :  .  |  :    .. ..$ replaced: NULL
[10:53:09.400] |  :  .  |  :    ..$ misuseDevices    : NULL
[10:53:09.400] |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:09"
[10:53:09.400] |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:09"
[10:53:09.400] |  :  .  |  :    ..$ session_uuid     : chr "da156b1daa5a8ac0e58d6fa5c7142cca"
[10:53:09.400] |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:53:09.400] |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:09.400] |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:09.400] |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:09.400] |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:09.400] |  :  .  |  :    .. .. ..$ pid   : int 70396
[10:53:09.400] |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:08"
[10:53:09.400] |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:53:09.400] |  :  .  |  :    ..$ r_info           :List of 4
[10:53:09.400] |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:09.400] |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:53:09.400] |  :  .  |  :    .. ..$ os           : chr "unix"
[10:53:09.400] |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:53:09.400] |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:53:09.400] |  :  .  |  :    ..$ version          : chr "1.8"
[10:53:09.400] |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:53:09.400] |  :  .  |  :   $ success: logi TRUE
[10:53:09.400] |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[10:53:09.400] |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:09.400] |  :  .  |  :   $ tag    : NULL
[10:53:09.429] |  :  .  |  :  Received FutureResult
[10:53:09.429] |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'remove', earlySignal = 0) ...
[10:53:09.429] |  :  .  |  :  .  Removed future from position #1
[10:53:09.429] |  :  .  |  :  .  Number of registered futures: 0
[10:53:09.429] |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'remove', earlySignal = 0) ... done
[10:53:09.429] |  :  .  |  :  Erased future from future backend
[10:53:09.430] |  :  .  |  :  result() for ClusterFuture ...
[10:53:09.430] |  :  .  |  :  .  result already collected: FutureResult
[10:53:09.430] |  :  .  |  :  result() for ClusterFuture ... done
[10:53:09.430] |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:09.430] |  :  .  result() for ClusterFuture ... done
[10:53:09.430] |  :  .  result() for ClusterFuture ...
[10:53:09.430] |  :  .  |  result already collected: FutureResult
[10:53:09.430] |  :  .  result() for ClusterFuture ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[10:53:09.432] |  :  .  getGlobalsAndPackages() ...
[10:53:09.432] |  :  .  |  Searching for globals ...
[10:53:09.434] |  :  .  |  :  globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[10:53:09.434] |  :  .  |  Searching for globals ... DONE
[10:53:09.434] |  :  .  |  Resolving globals: FALSE
[10:53:09.434] |  :  .  |  Search for packages associated with the globals ...
[10:53:09.434] |  :  .  |  :  Packages associated with globals: [2] ‘base’, ‘stats’
[10:53:09.435] |  :  .  |  :  Packages: [2] ‘base’, ‘stats’
[10:53:09.435] |  :  .  |  Search for packages associated with the globals ... DONE
[10:53:09.435] |  :  .  |  Packages after dropping 'base': [1] ‘stats’
[10:53:09.435] |  :  .  |  Packages after dropping non-attached packages: [1] ‘stats’
[10:53:09.435] |  :  .  |  globals: [2] ‘weight’, ‘group’
[10:53:09.435] |  :  .  |  packages: [1] ‘stats’
[10:53:09.435] |  :  .  getGlobalsAndPackages() ... done
[10:53:09.435] |  :  .  run() for Future (‘Future’) ...
[10:53:09.436] |  :  .  |  state: ‘created’
[10:53:09.436] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:09.436] |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:09.436] |  :  .  |  Using MultisessionFutureBackend ...
[10:53:09.436] |  :  .  |  :  Launching futures ...
[10:53:09.436] |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:53:09.436] |  :  .  |  :  .  |  Workers: [n=2]
[10:53:09.436] |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:09.438] |  :  .  |  :  .  |  FutureRegistry: ‘workers-0796ff7c736709f9dee53e94b985e74e’
[10:53:09.438] |  :  .  |  :  .  |  requestWorker() ...
[10:53:09.438] |  :  .  |  :  .  |  :  requestNode() ...
[10:53:09.438] |  :  .  |  :  .  |  :  .  Number of workers: 2
[10:53:09.438] |  :  .  |  :  .  |  :  .  Polling for a free worker ...
[10:53:09.438] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ...
[10:53:09.439] |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:53:09.439] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:53:09.439] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ... done
[10:53:09.439] |  :  .  |  :  .  |  :  .  |  Total time: 0
[10:53:09.439] |  :  .  |  :  .  |  :  .  Polling for a free worker ... done
[10:53:09.439] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ...
[10:53:09.439] |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:53:09.439] |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:53:09.439] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ... done
[10:53:09.439] |  :  .  |  :  .  |  :  .  Index of first available worker: 1
[10:53:09.439] |  :  .  |  :  .  |  :  .  Validate that the worker is functional ...
[10:53:09.520] |  :  .  |  :  .  |  :  .  |  Worker is functional
[10:53:09.521] |  :  .  |  :  .  |  :  .  requestNode() ... done
[10:53:09.521] |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:53:09.521] |  :  .  |  :  .  |  :  requestWorker() ... done
[10:53:09.521] |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ...
[10:53:09.521] |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:53:09.521] |  :  .  |  :  .  |  :  launchFuture() ...
[10:53:09.522] |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:53:09.522] |  :  .  |  :  .  |  :  .  getFutureData() ...
[10:53:09.522] |  :  .  |  :  .  |  :  .  |  getFutureCore() ...
[10:53:09.522] |  :  .  |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 1): ‘stats’
[10:53:09.522] |  :  .  |  :  .  |  :  .  |  getFutureCore() ... done
[10:53:09.522] |  :  .  |  :  .  |  :  .  |  getFutureCapture() ...
[10:53:09.522] |  :  .  |  :  .  |  :  .  |  getFutureCapture() ... done
[10:53:09.522] |  :  .  |  :  .  |  :  .  |  getFutureContext() ...
[10:53:09.522] |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:09.523] |  :  .  |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:53:09.523] |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:09.523] |  :  .  |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:53:09.523] |  :  .  |  :  .  |  :  .  |  getFutureContext() ... done
[10:53:09.523] |  :  .  |  :  .  |  :  .  getFutureData() ... done
[10:53:09.523] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'add', earlySignal = 0) ...
[10:53:09.523] |  :  .  |  :  .  |  :  .  |  Appended future to position #1
[10:53:09.523] |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:53:09.524] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'add', earlySignal = 0) ... done
[10:53:09.524] |  :  .  |  :  .  |  :  launchFuture() ... done
[10:53:09.524] |  :  .  |  :  .  |  :  MultisessionFuture started
[10:53:09.524] |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:53:09.524] |  :  .  |  :  .  Launching futures ... done
[10:53:09.524] |  :  .  |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:09.524] |  :  .  |  :  Using MultisessionFutureBackend ... done
[10:53:09.524] |  :  .  |  run() for Future (‘MultisessionFuture’) ... done
[10:53:09.524] |  :  .  |  result() for ClusterFuture ...
[10:53:09.525] |  :  .  |  :  assertValidConnection() ...
[10:53:09.525] |  :  .  |  :  .  cluster node index: 1
[10:53:09.525] |  :  .  |  :  assertValidConnection() ... done
[10:53:09.525] |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:53:09.525] |  :  .  |  :  .  cluster node index: 1
[10:53:09.568] |  :  .  |  :  .  [1] TRUE
[10:53:09.569] |  :  .  |  :  .  received data:
[10:53:09.569] |  :  .  |  :  .  List of 5
[10:53:09.569] |  :  .  |  :  .   $ type   : chr "VALUE"
[10:53:09.569] |  :  .  |  :  .   $ value  :List of 13
[10:53:09.569] |  :  .  |  :  .    ..$ value            :List of 13
[10:53:09.569] |  :  .  |  :  .    .. ..$ coefficients : Named num [1:2] 5.03 4.66
[10:53:09.569] |  :  .  |  :  .    .. .. ..- attr(*, "names")= chr [1:2] "groupCtl" "groupTrt"
[10:53:09.569] |  :  .  |  :  .    .. ..$ residuals    : Named num [1:20] -0.862 0.548 0.148 1.078 -0.532 ...
[10:53:09.569] |  :  .  |  :  .    .. .. ..- attr(*, "names")= chr [1:20] "1" "2" "3" "4" ...
[10:53:09.569] |  :  .  |  :  .    .. ..$ effects      : Named num [1:20] -15.913 -14.739 0.355 1.285 -0.325 ...
[10:53:09.569] |  :  .  |  :  .    .. .. ..- attr(*, "names")= chr [1:20] "groupCtl" "groupTrt" "" "" ...
[10:53:09.569] |  :  .  |  :  .    .. ..$ rank         : int 2
[10:53:09.569] |  :  .  |  :  .    .. ..$ fitted.values: Named num [1:20] 5.03 5.03 5.03 5.03 5.03 ...
[10:53:09.569] |  :  .  |  :  .    .. .. ..- attr(*, "names")= chr [1:20] "1" "2" "3" "4" ...
[10:53:09.569] |  :  .  |  :  .    .. ..$ assign       : int [1:2] 1 1
[10:53:09.569] |  :  .  |  :  .    .. ..$ qr           :List of 5
[10:53:09.569] |  :  .  |  :  .    .. .. ..$ qr   : num [1:20, 1:2] -3.162 0.316 0.316 0.316 0.316 ...
[10:53:09.569] |  :  .  |  :  .    .. .. .. ..- attr(*, "dimnames")=List of 2
[10:53:09.569] |  :  .  |  :  .    .. .. .. .. ..$ : chr [1:20] "1" "2" "3" "4" ...
[10:53:09.569] |  :  .  |  :  .    .. .. .. .. ..$ : chr [1:2] "groupCtl" "groupTrt"
[10:53:09.569] |  :  .  |  :  .    .. .. .. ..- attr(*, "assign")= int [1:2] 1 1
[10:53:09.569] |  :  .  |  :  .    .. .. .. ..- attr(*, "contrasts")=List of 1
[10:53:09.569] |  :  .  |  :  .    .. .. .. .. ..$ group: chr "contr.treatment"
[10:53:09.569] |  :  .  |  :  .    .. .. ..$ qraux: num [1:2] 1.32 1
[10:53:09.569] |  :  .  |  :  .    .. .. ..$ pivot: int [1:2] 1 2
[10:53:09.569] |  :  .  |  :  .    .. .. ..$ tol  : num 1e-07
[10:53:09.569] |  :  .  |  :  .    .. .. ..$ rank : int 2
[10:53:09.569] |  :  .  |  :  .    .. .. ..- attr(*, "class")= chr "qr"
[10:53:09.569] |  :  .  |  :  .    .. ..$ df.residual  : int 18
[10:53:09.569] |  :  .  |  :  .    .. ..$ contrasts    :List of 1
[10:53:09.569] |  :  .  |  :  .    .. .. ..$ group: chr "contr.treatment"
[10:53:09.569] |  :  .  |  :  .    .. ..$ xlevels      :List of 1
[10:53:09.569] |  :  .  |  :  .    .. .. ..$ group: chr [1:2] "Ctl" "Trt"
[10:53:09.569] |  :  .  |  :  .    .. ..$ call         : language lm(formula = weight ~ group - 1)
[10:53:09.569] |  :  .  |  :  .    .. ..$ terms        :Classes 'terms', 'formula'  language weight ~ group - 1
[10:53:09.569] |  :  .  |  :  .    .. .. .. ..- attr(*, "variables")= language list(weight, group)
[10:53:09.569] |  :  .  |  :  .    .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[10:53:09.569] |  :  .  |  :  .    .. .. .. .. ..- attr(*, "dimnames")=List of 2
[10:53:09.569] |  :  .  |  :  .    .. .. .. .. .. ..$ : chr [1:2] "weight" "group"
[10:53:09.569] |  :  .  |  :  .    .. .. .. .. .. ..$ : chr "group"
[10:53:09.569] |  :  .  |  :  .    .. .. .. ..- attr(*, "term.labels")= chr "group"
[10:53:09.569] |  :  .  |  :  .    .. .. .. ..- attr(*, "order")= int 1
[10:53:09.569] |  :  .  |  :  .    .. .. .. ..- attr(*, "intercept")= int 0
[10:53:09.569] |  :  .  |  :  .    .. .. .. ..- attr(*, "response")= int 1
[10:53:09.569] |  :  .  |  :  .    .. .. .. ..- attr(*, ".Environment")=<environment: 0x555d5f07c4c8> 
[10:53:09.569] |  :  .  |  :  .    .. .. .. ..- attr(*, "predvars")= language list(weight, group)
[10:53:09.569] |  :  .  |  :  .    .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "factor"
[10:53:09.569] |  :  .  |  :  .    .. .. .. .. ..- attr(*, "names")= chr [1:2] "weight" "group"
[10:53:09.569] |  :  .  |  :  .    .. ..$ model        :'data.frame':	20 obs. of  2 variables:
[10:53:09.569] |  :  .  |  :  .    .. .. ..$ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[10:53:09.569] |  :  .  |  :  .    .. .. ..$ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[10:53:09.569] |  :  .  |  :  .    .. .. ..- attr(*, "terms")=Classes 'terms', 'formula'  language weight ~ group - 1
[10:53:09.569] |  :  .  |  :  .    .. .. .. .. ..- attr(*, "variables")= language list(weight, group)
[10:53:09.569] |  :  .  |  :  .    .. .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[10:53:09.569] |  :  .  |  :  .    .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
[10:53:09.569] |  :  .  |  :  .    .. .. .. .. .. .. ..$ : chr [1:2] "weight" "group"
[10:53:09.569] |  :  .  |  :  .    .. .. .. .. .. .. ..$ : chr "group"
[10:53:09.569] |  :  .  |  :  .    .. .. .. .. ..- attr(*, "term.labels")= chr "group"
[10:53:09.569] |  :  .  |  :  .    .. .. .. .. ..- attr(*, "order")= int 1
[10:53:09.569] |  :  .  |  :  .    .. .. .. .. ..- attr(*, "intercept")= int 0
[10:53:09.569] |  :  .  |  :  .    .. .. .. .. ..- attr(*, "response")= int 1
[10:53:09.569] |  :  .  |  :  .    .. .. .. .. ..- attr(*, ".Environment")=<environment: 0x555d5f07c4c8> 
[10:53:09.569] |  :  .  |  :  .    .. .. .. .. ..- attr(*, "predvars")= language list(weight, group)
[10:53:09.569] |  :  .  |  :  .    .. .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "factor"
[10:53:09.569] |  :  .  |  :  .    .. .. .. .. .. ..- attr(*, "names")= chr [1:2] "weight" "group"
[10:53:09.569] |  :  .  |  :  .    .. ..- attr(*, "class")= chr "lm"
[10:53:09.569] |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:53:09.569] |  :  .  |  :  .    ..$ stdout           : chr ""
[10:53:09.569] |  :  .  |  :  .    ..$ conditions       : list()
[10:53:09.569] |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:53:09.569] |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:53:09.569] |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:53:09.569] |  :  .  |  :  .    .. ..$ added   : NULL
[10:53:09.569] |  :  .  |  :  .    .. ..$ removed : NULL
[10:53:09.569] |  :  .  |  :  .    .. ..$ replaced: NULL
[10:53:09.569] |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:53:09.569] |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:09"
[10:53:09.569] |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:09"
[10:53:09.569] |  :  .  |  :  .    ..$ session_uuid     : chr "da156b1daa5a8ac0e58d6fa5c7142cca"
[10:53:09.569] |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:53:09.569] |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:09.569] |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:09.569] |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:09.569] |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:09.569] |  :  .  |  :  .    .. .. ..$ pid   : int 70396
[10:53:09.569] |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:08"
[10:53:09.569] |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:53:09.569] |  :  .  |  :  .    ..$ r_info           :List of 4
[10:53:09.569] |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:09.569] |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:53:09.569] |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:53:09.569] |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:53:09.569] |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:53:09.569] |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:53:09.569] |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:53:09.569] |  :  .  |  :  .   $ success: logi TRUE
[10:53:09.569] |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.004 0.001 0.004 0 0
[10:53:09.569] |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:09.569] |  :  .  |  :  .   $ tag    : NULL
[10:53:09.597] |  :  .  |  :  .  Received FutureResult
[10:53:09.597] |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'remove', earlySignal = 0) ...
[10:53:09.597] |  :  .  |  :  .  |  Removed future from position #1
[10:53:09.597] |  :  .  |  :  .  |  Number of registered futures: 0
[10:53:09.597] |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'remove', earlySignal = 0) ... done
[10:53:09.597] |  :  .  |  :  .  Erased future from future backend
[10:53:09.597] |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:09.597] |  :  .  |  :  .  |  result already collected: FutureResult
[10:53:09.597] |  :  .  |  :  .  result() for ClusterFuture ... done
[10:53:09.597] |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:09.598] |  :  .  |  result() for ClusterFuture ... done
[10:53:09.598] |  :  .  |  result() for ClusterFuture ...
[10:53:09.598] |  :  .  |  :  result already collected: FutureResult
[10:53:09.598] |  :  .  |  result() for ClusterFuture ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[10:53:09.600] |  :  .  |  getGlobalsAndPackages() ...
[10:53:09.600] |  :  .  |  :  Searching for globals ...
[10:53:09.601] |  :  .  |  :  .  globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[10:53:09.601] |  :  .  |  :  Searching for globals ... DONE
[10:53:09.602] |  :  .  |  :  Resolving globals: FALSE
[10:53:09.602] |  :  .  |  :  Search for packages associated with the globals ...
[10:53:09.602] |  :  .  |  :  .  Packages associated with globals: [2] ‘base’, ‘stats’
[10:53:09.602] |  :  .  |  :  .  Packages: [2] ‘base’, ‘stats’
[10:53:09.602] |  :  .  |  :  Search for packages associated with the globals ... DONE
[10:53:09.602] |  :  .  |  :  Packages after dropping 'base': [1] ‘stats’
[10:53:09.603] |  :  .  |  :  Packages after dropping non-attached packages: [1] ‘stats’
[10:53:09.603] |  :  .  |  :  globals: [2] ‘weight’, ‘group’
[10:53:09.603] |  :  .  |  :  packages: [1] ‘stats’
[10:53:09.603] |  :  .  |  getGlobalsAndPackages() ... done
[10:53:09.603] |  :  .  |  run() for Future (‘Future’) ...
[10:53:09.603] |  :  .  |  :  state: ‘created’
[10:53:09.603] |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:09.604] |  :  .  |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:09.604] |  :  .  |  :  Using MultisessionFutureBackend ...
[10:53:09.604] |  :  .  |  :  .  Launching futures ...
[10:53:09.604] |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:53:09.604] |  :  .  |  :  .  |  :  Workers: [n=2]
[10:53:09.604] |  :  .  |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:09.606] |  :  .  |  :  .  |  :  FutureRegistry: ‘workers-0796ff7c736709f9dee53e94b985e74e’
[10:53:09.606] |  :  .  |  :  .  |  :  requestWorker() ...
[10:53:09.606] |  :  .  |  :  .  |  :  .  requestNode() ...
[10:53:09.606] |  :  .  |  :  .  |  :  .  |  Number of workers: 2
[10:53:09.606] |  :  .  |  :  .  |  :  .  |  Polling for a free worker ...
[10:53:09.606] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ...
[10:53:09.606] |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:53:09.606] |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:53:09.606] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ... done
[10:53:09.606] |  :  .  |  :  .  |  :  .  |  :  Total time: 0
[10:53:09.607] |  :  .  |  :  .  |  :  .  |  Polling for a free worker ... done
[10:53:09.607] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ...
[10:53:09.607] |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:53:09.607] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:53:09.607] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ... done
[10:53:09.607] |  :  .  |  :  .  |  :  .  |  Index of first available worker: 1
[10:53:09.607] |  :  .  |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:53:09.686] |  :  .  |  :  .  |  :  .  |  :  Worker is functional
[10:53:09.687] |  :  .  |  :  .  |  :  .  |  requestNode() ... done
[10:53:09.687] |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:53:09.687] |  :  .  |  :  .  |  :  .  requestWorker() ... done
[10:53:09.687] |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:53:09.687] |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:53:09.687] |  :  .  |  :  .  |  :  .  launchFuture() ...
[10:53:09.687] |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:53:09.688] |  :  .  |  :  .  |  :  .  |  getFutureData() ...
[10:53:09.688] |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ...
[10:53:09.688] |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘stats’
[10:53:09.688] |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:53:09.688] |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:53:09.688] |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:53:09.688] |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ...
[10:53:09.688] |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:09.688] |  :  .  |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:09.688] |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:09.689] |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:09.689] |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:53:09.689] |  :  .  |  :  .  |  :  .  |  getFutureData() ... done
[10:53:09.689] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'add', earlySignal = 0) ...
[10:53:09.689] |  :  .  |  :  .  |  :  .  |  :  Appended future to position #1
[10:53:09.689] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:53:09.689] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'add', earlySignal = 0) ... done
[10:53:09.689] |  :  .  |  :  .  |  :  .  launchFuture() ... done
[10:53:09.690] |  :  .  |  :  .  |  :  .  MultisessionFuture started
[10:53:09.690] |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:53:09.690] |  :  .  |  :  .  |  Launching futures ... done
[10:53:09.690] |  :  .  |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:09.690] |  :  .  |  :  .  Using MultisessionFutureBackend ... done
[10:53:09.690] |  :  .  |  :  run() for Future (‘MultisessionFuture’) ... done
[10:53:09.690] |  :  .  |  :  result() for ClusterFuture ...
[10:53:09.690] |  :  .  |  :  .  assertValidConnection() ...
[10:53:09.690] |  :  .  |  :  .  |  cluster node index: 1
[10:53:09.691] |  :  .  |  :  .  assertValidConnection() ... done
[10:53:09.691] |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:53:09.691] |  :  .  |  :  .  |  cluster node index: 1
[10:53:09.736] |  :  .  |  :  .  |  [1] TRUE
[10:53:09.737] |  :  .  |  :  .  |  received data:
[10:53:09.737] |  :  .  |  :  .  |  List of 5
[10:53:09.737] |  :  .  |  :  .  |   $ type   : chr "VALUE"
[10:53:09.737] |  :  .  |  :  .  |   $ value  :List of 13
[10:53:09.737] |  :  .  |  :  .  |    ..$ value            :List of 13
[10:53:09.737] |  :  .  |  :  .  |    .. ..$ coefficients : Named num [1:2] 5.03 4.66
[10:53:09.737] |  :  .  |  :  .  |    .. .. ..- attr(*, "names")= chr [1:2] "groupCtl" "groupTrt"
[10:53:09.737] |  :  .  |  :  .  |    .. ..$ residuals    : Named num [1:20] -0.862 0.548 0.148 1.078 -0.532 ...
[10:53:09.737] |  :  .  |  :  .  |    .. .. ..- attr(*, "names")= chr [1:20] "1" "2" "3" "4" ...
[10:53:09.737] |  :  .  |  :  .  |    .. ..$ effects      : Named num [1:20] -15.913 -14.739 0.355 1.285 -0.325 ...
[10:53:09.737] |  :  .  |  :  .  |    .. .. ..- attr(*, "names")= chr [1:20] "groupCtl" "groupTrt" "" "" ...
[10:53:09.737] |  :  .  |  :  .  |    .. ..$ rank         : int 2
[10:53:09.737] |  :  .  |  :  .  |    .. ..$ fitted.values: Named num [1:20] 5.03 5.03 5.03 5.03 5.03 ...
[10:53:09.737] |  :  .  |  :  .  |    .. .. ..- attr(*, "names")= chr [1:20] "1" "2" "3" "4" ...
[10:53:09.737] |  :  .  |  :  .  |    .. ..$ assign       : int [1:2] 1 1
[10:53:09.737] |  :  .  |  :  .  |    .. ..$ qr           :List of 5
[10:53:09.737] |  :  .  |  :  .  |    .. .. ..$ qr   : num [1:20, 1:2] -3.162 0.316 0.316 0.316 0.316 ...
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. ..- attr(*, "dimnames")=List of 2
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. .. ..$ : chr [1:20] "1" "2" "3" "4" ...
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. .. ..$ : chr [1:2] "groupCtl" "groupTrt"
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. ..- attr(*, "assign")= int [1:2] 1 1
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. ..- attr(*, "contrasts")=List of 1
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. .. ..$ group: chr "contr.treatment"
[10:53:09.737] |  :  .  |  :  .  |    .. .. ..$ qraux: num [1:2] 1.32 1
[10:53:09.737] |  :  .  |  :  .  |    .. .. ..$ pivot: int [1:2] 1 2
[10:53:09.737] |  :  .  |  :  .  |    .. .. ..$ tol  : num 1e-07
[10:53:09.737] |  :  .  |  :  .  |    .. .. ..$ rank : int 2
[10:53:09.737] |  :  .  |  :  .  |    .. .. ..- attr(*, "class")= chr "qr"
[10:53:09.737] |  :  .  |  :  .  |    .. ..$ df.residual  : int 18
[10:53:09.737] |  :  .  |  :  .  |    .. ..$ contrasts    :List of 1
[10:53:09.737] |  :  .  |  :  .  |    .. .. ..$ group: chr "contr.treatment"
[10:53:09.737] |  :  .  |  :  .  |    .. ..$ xlevels      :List of 1
[10:53:09.737] |  :  .  |  :  .  |    .. .. ..$ group: chr [1:2] "Ctl" "Trt"
[10:53:09.737] |  :  .  |  :  .  |    .. ..$ call         : language lm(formula = weight ~ group - 1)
[10:53:09.737] |  :  .  |  :  .  |    .. ..$ terms        :Classes 'terms', 'formula'  language weight ~ group - 1
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. ..- attr(*, "variables")= language list(weight, group)
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "dimnames")=List of 2
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. .. .. ..$ : chr [1:2] "weight" "group"
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. .. .. ..$ : chr "group"
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. ..- attr(*, "term.labels")= chr "group"
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. ..- attr(*, "order")= int 1
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. ..- attr(*, "intercept")= int 0
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. ..- attr(*, "response")= int 1
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. ..- attr(*, ".Environment")=<environment: 0x555d5e336920> 
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. ..- attr(*, "predvars")= language list(weight, group)
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "factor"
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "names")= chr [1:2] "weight" "group"
[10:53:09.737] |  :  .  |  :  .  |    .. ..$ model        :'data.frame':	20 obs. of  2 variables:
[10:53:09.737] |  :  .  |  :  .  |    .. .. ..$ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[10:53:09.737] |  :  .  |  :  .  |    .. .. ..$ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[10:53:09.737] |  :  .  |  :  .  |    .. .. ..- attr(*, "terms")=Classes 'terms', 'formula'  language weight ~ group - 1
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "variables")= language list(weight, group)
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. .. .. .. ..$ : chr [1:2] "weight" "group"
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. .. .. .. ..$ : chr "group"
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "term.labels")= chr "group"
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "order")= int 1
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "intercept")= int 0
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "response")= int 1
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, ".Environment")=<environment: 0x555d5e336920> 
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "predvars")= language list(weight, group)
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "factor"
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. .. .. ..- attr(*, "names")= chr [1:2] "weight" "group"
[10:53:09.737] |  :  .  |  :  .  |    .. ..- attr(*, "class")= chr "lm"
[10:53:09.737] |  :  .  |  :  .  |    ..$ visible          : logi TRUE
[10:53:09.737] |  :  .  |  :  .  |    ..$ stdout           : chr ""
[10:53:09.737] |  :  .  |  :  .  |    ..$ conditions       : list()
[10:53:09.737] |  :  .  |  :  .  |    ..$ rng              : logi FALSE
[10:53:09.737] |  :  .  |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:53:09.737] |  :  .  |  :  .  |    ..$ misuseConnections:List of 3
[10:53:09.737] |  :  .  |  :  .  |    .. ..$ added   : NULL
[10:53:09.737] |  :  .  |  :  .  |    .. ..$ removed : NULL
[10:53:09.737] |  :  .  |  :  .  |    .. ..$ replaced: NULL
[10:53:09.737] |  :  .  |  :  .  |    ..$ misuseDevices    : NULL
[10:53:09.737] |  :  .  |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:09"
[10:53:09.737] |  :  .  |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:09"
[10:53:09.737] |  :  .  |  :  .  |    ..$ session_uuid     : chr "da156b1daa5a8ac0e58d6fa5c7142cca"
[10:53:09.737] |  :  .  |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:53:09.737] |  :  .  |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:09.737] |  :  .  |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:09.737] |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:09.737] |  :  .  |  :  .  |    .. .. ..$ pid   : int 70396
[10:53:09.737] |  :  .  |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:08"
[10:53:09.737] |  :  .  |  :  .  |    .. .. ..$ random: int 2147483647
[10:53:09.737] |  :  .  |  :  .  |    ..$ r_info           :List of 4
[10:53:09.737] |  :  .  |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:09.737] |  :  .  |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:53:09.737] |  :  .  |  :  .  |    .. ..$ os           : chr "unix"
[10:53:09.737] |  :  .  |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:53:09.737] |  :  .  |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:53:09.737] |  :  .  |  :  .  |    ..$ version          : chr "1.8"
[10:53:09.737] |  :  .  |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:53:09.737] |  :  .  |  :  .  |   $ success: logi TRUE
[10:53:09.737] |  :  .  |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.006 0 0.007 0 0
[10:53:09.737] |  :  .  |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:09.737] |  :  .  |  :  .  |   $ tag    : NULL
[10:53:09.765] |  :  .  |  :  .  |  Received FutureResult
[10:53:09.765] |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'remove', earlySignal = 0) ...
[10:53:09.765] |  :  .  |  :  .  |  :  Removed future from position #1
[10:53:09.765] |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:53:09.765] |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'remove', earlySignal = 0) ... done
[10:53:09.765] |  :  .  |  :  .  |  Erased future from future backend
[10:53:09.765] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:09.765] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:53:09.765] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:53:09.765] |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:09.766] |  :  .  |  :  result() for ClusterFuture ... done
[10:53:09.766] |  :  .  |  :  result() for ClusterFuture ...
[10:53:09.766] |  :  .  |  :  .  result already collected: FutureResult
[10:53:09.766] |  :  .  |  :  result() for ClusterFuture ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

- Globals - one-side formulas, e.g. xtabs(~ x) ...
[10:53:09.768] |  :  .  |  :  getGlobalsAndPackages() ...
[10:53:09.768] |  :  .  |  :  .  Searching for globals ...
[10:53:09.769] |  :  .  |  :  .  |  globals found: [4] ‘{’, ‘xtabs’, ‘x’, ‘~’
[10:53:09.769] |  :  .  |  :  .  Searching for globals ... DONE
[10:53:09.769] |  :  .  |  :  .  Resolving globals: FALSE
[10:53:09.769] |  :  .  |  :  .  Search for packages associated with the globals ...
[10:53:09.769] |  :  .  |  :  .  |  Packages associated with globals: [2] ‘base’, ‘stats’
[10:53:09.770] |  :  .  |  :  .  |  Packages: [2] ‘base’, ‘stats’
[10:53:09.770] |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:53:09.770] |  :  .  |  :  .  Packages after dropping 'base': [1] ‘stats’
[10:53:09.770] |  :  .  |  :  .  Packages after dropping non-attached packages: [1] ‘stats’
[10:53:09.770] |  :  .  |  :  .  globals: [1] ‘x’
[10:53:09.770] |  :  .  |  :  .  packages: [1] ‘stats’
[10:53:09.770] |  :  .  |  :  getGlobalsAndPackages() ... done
[10:53:09.771] |  :  .  |  :  run() for Future (‘Future’) ...
[10:53:09.771] |  :  .  |  :  .  state: ‘created’
[10:53:09.771] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:09.771] |  :  .  |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:09.771] |  :  .  |  :  .  Using MultisessionFutureBackend ...
[10:53:09.771] |  :  .  |  :  .  |  Launching futures ...
[10:53:09.771] |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:53:09.771] |  :  .  |  :  .  |  :  .  Workers: [n=2]
[10:53:09.772] |  :  .  |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:09.773] |  :  .  |  :  .  |  :  .  FutureRegistry: ‘workers-0796ff7c736709f9dee53e94b985e74e’
[10:53:09.773] |  :  .  |  :  .  |  :  .  requestWorker() ...
[10:53:09.773] |  :  .  |  :  .  |  :  .  |  requestNode() ...
[10:53:09.773] |  :  .  |  :  .  |  :  .  |  :  Number of workers: 2
[10:53:09.774] |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:53:09.774] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ...
[10:53:09.774] |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:53:09.774] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:53:09.774] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ... done
[10:53:09.774] |  :  .  |  :  .  |  :  .  |  :  .  Total time: 0
[10:53:09.774] |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:53:09.774] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ...
[10:53:09.774] |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:53:09.774] |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:53:09.774] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ... done
[10:53:09.775] |  :  .  |  :  .  |  :  .  |  :  Index of first available worker: 1
[10:53:09.775] |  :  .  |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:53:09.852] |  :  .  |  :  .  |  :  .  |  :  .  Worker is functional
[10:53:09.852] |  :  .  |  :  .  |  :  .  |  :  requestNode() ... done
[10:53:09.852] |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:53:09.853] |  :  .  |  :  .  |  :  .  |  requestWorker() ... done
[10:53:09.853] |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:53:09.853] |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:53:09.853] |  :  .  |  :  .  |  :  .  |  launchFuture() ...
[10:53:09.853] |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:53:09.853] |  :  .  |  :  .  |  :  .  |  :  getFutureData() ...
[10:53:09.853] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:53:09.854] |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 1): ‘stats’
[10:53:09.854] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:53:09.854] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:53:09.854] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:53:09.854] |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:53:09.854] |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:09.854] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:53:09.854] |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:09.854] |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:53:09.854] |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:53:09.855] |  :  .  |  :  .  |  :  .  |  :  getFutureData() ... done
[10:53:09.855] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'add', earlySignal = 0) ...
[10:53:09.855] |  :  .  |  :  .  |  :  .  |  :  .  Appended future to position #1
[10:53:09.855] |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:53:09.855] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'add', earlySignal = 0) ... done
[10:53:09.855] |  :  .  |  :  .  |  :  .  |  launchFuture() ... done
[10:53:09.855] |  :  .  |  :  .  |  :  .  |  MultisessionFuture started
[10:53:09.855] |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:53:09.856] |  :  .  |  :  .  |  :  Launching futures ... done
[10:53:09.856] |  :  .  |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:09.856] |  :  .  |  :  .  |  Using MultisessionFutureBackend ... done
[10:53:09.856] |  :  .  |  :  .  run() for Future (‘MultisessionFuture’) ... done
[10:53:09.856] |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:09.856] |  :  .  |  :  .  |  assertValidConnection() ...
[10:53:09.856] |  :  .  |  :  .  |  :  cluster node index: 1
[10:53:09.857] |  :  .  |  :  .  |  assertValidConnection() ... done
[10:53:09.857] |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:53:09.857] |  :  .  |  :  .  |  :  cluster node index: 1
[10:53:09.899] |  :  .  |  :  .  |  :  [1] TRUE
[10:53:09.899] |  :  .  |  :  .  |  :  received data:
[10:53:09.900] |  :  .  |  :  .  |  :  List of 5
[10:53:09.900] |  :  .  |  :  .  |  :   $ type   : chr "VALUE"
[10:53:09.900] |  :  .  |  :  .  |  :   $ value  :List of 13
[10:53:09.900] |  :  .  |  :  .  |  :    ..$ value            : 'xtabs' int [1:2(1d)] 2 3
[10:53:09.900] |  :  .  |  :  .  |  :    .. ..- attr(*, "dimnames")=List of 1
[10:53:09.900] |  :  .  |  :  .  |  :    .. .. ..$ x: chr [1:2] "1" "2"
[10:53:09.900] |  :  .  |  :  .  |  :    .. ..- attr(*, "call")= language xtabs(formula = ~x)
[10:53:09.900] |  :  .  |  :  .  |  :    ..$ visible          : logi TRUE
[10:53:09.900] |  :  .  |  :  .  |  :    ..$ stdout           : chr ""
[10:53:09.900] |  :  .  |  :  .  |  :    ..$ conditions       : list()
[10:53:09.900] |  :  .  |  :  .  |  :    ..$ rng              : logi FALSE
[10:53:09.900] |  :  .  |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:53:09.900] |  :  .  |  :  .  |  :    ..$ misuseConnections:List of 3
[10:53:09.900] |  :  .  |  :  .  |  :    .. ..$ added   : NULL
[10:53:09.900] |  :  .  |  :  .  |  :    .. ..$ removed : NULL
[10:53:09.900] |  :  .  |  :  .  |  :    .. ..$ replaced: NULL
[10:53:09.900] |  :  .  |  :  .  |  :    ..$ misuseDevices    : NULL
[10:53:09.900] |  :  .  |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:09"
[10:53:09.900] |  :  .  |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:09"
[10:53:09.900] |  :  .  |  :  .  |  :    ..$ session_uuid     : chr "da156b1daa5a8ac0e58d6fa5c7142cca"
[10:53:09.900] |  :  .  |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:53:09.900] |  :  .  |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:09.900] |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:09.900] |  :  .  |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:09.900] |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:09.900] |  :  .  |  :  .  |  :    .. .. ..$ pid   : int 70396
[10:53:09.900] |  :  .  |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:08"
[10:53:09.900] |  :  .  |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:53:09.900] |  :  .  |  :  .  |  :    ..$ r_info           :List of 4
[10:53:09.900] |  :  .  |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:09.900] |  :  .  |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:53:09.900] |  :  .  |  :  .  |  :    .. ..$ os           : chr "unix"
[10:53:09.900] |  :  .  |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:53:09.900] |  :  .  |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:53:09.900] |  :  .  |  :  .  |  :    ..$ version          : chr "1.8"
[10:53:09.900] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:53:09.900] |  :  .  |  :  .  |  :   $ success: logi TRUE
[10:53:09.900] |  :  .  |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.003 0.001 0.004 0 0
[10:53:09.900] |  :  .  |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:09.900] |  :  .  |  :  .  |  :   $ tag    : NULL
[10:53:09.911] |  :  .  |  :  .  |  :  Received FutureResult
[10:53:09.911] |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'remove', earlySignal = 0) ...
[10:53:09.911] |  :  .  |  :  .  |  :  .  Removed future from position #1
[10:53:09.911] |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:53:09.911] |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'remove', earlySignal = 0) ... done
[10:53:09.911] |  :  .  |  :  .  |  :  Erased future from future backend
[10:53:09.911] |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:09.911] |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:09.911] |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:09.912] |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:09.912] |  :  .  |  :  .  result() for ClusterFuture ... done
[10:53:09.912] |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:09.912] |  :  .  |  :  .  |  result already collected: FutureResult
[10:53:09.912] |  :  .  |  :  .  result() for ClusterFuture ... done
x
1 2 
2 3 
[10:53:09.913] |  :  .  |  :  .  getGlobalsAndPackages() ...
[10:53:09.913] |  :  .  |  :  .  |  Searching for globals ...
[10:53:09.914] |  :  .  |  :  .  |  :  globals found: [4] ‘{’, ‘xtabs’, ‘x’, ‘~’
[10:53:09.914] |  :  .  |  :  .  |  Searching for globals ... DONE
[10:53:09.914] |  :  .  |  :  .  |  Resolving globals: FALSE
[10:53:09.914] |  :  .  |  :  .  |  Search for packages associated with the globals ...
[10:53:09.915] |  :  .  |  :  .  |  :  Packages associated with globals: [2] ‘base’, ‘stats’
[10:53:09.915] |  :  .  |  :  .  |  :  Packages: [2] ‘base’, ‘stats’
[10:53:09.915] |  :  .  |  :  .  |  Search for packages associated with the globals ... DONE
[10:53:09.915] |  :  .  |  :  .  |  Packages after dropping 'base': [1] ‘stats’
[10:53:09.915] |  :  .  |  :  .  |  Packages after dropping non-attached packages: [1] ‘stats’
[10:53:09.915] |  :  .  |  :  .  |  globals: [1] ‘x’
[10:53:09.915] |  :  .  |  :  .  |  packages: [1] ‘stats’
[10:53:09.916] |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:53:09.916] |  :  .  |  :  .  run() for Future (‘Future’) ...
[10:53:09.916] |  :  .  |  :  .  |  state: ‘created’
[10:53:09.916] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:09.916] |  :  .  |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:09.916] |  :  .  |  :  .  |  Using MultisessionFutureBackend ...
[10:53:09.916] |  :  .  |  :  .  |  :  Launching futures ...
[10:53:09.916] |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:53:09.917] |  :  .  |  :  .  |  :  .  |  Workers: [n=2]
[10:53:09.917] |  :  .  |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:09.920] |  :  .  |  :  .  |  :  .  |  FutureRegistry: ‘workers-0796ff7c736709f9dee53e94b985e74e’
[10:53:09.920] |  :  .  |  :  .  |  :  .  |  requestWorker() ...
[10:53:09.920] |  :  .  |  :  .  |  :  .  |  :  requestNode() ...
[10:53:09.920] |  :  .  |  :  .  |  :  .  |  :  .  Number of workers: 2
[10:53:09.920] |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ...
[10:53:09.920] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ...
[10:53:09.920] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:53:09.920] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:53:09.921] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ... done
[10:53:09.921] |  :  .  |  :  .  |  :  .  |  :  .  |  Total time: 0
[10:53:09.921] |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ... done
[10:53:09.921] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ...
[10:53:09.921] |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:53:09.921] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:53:09.921] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ... done
[10:53:09.921] |  :  .  |  :  .  |  :  .  |  :  .  Index of first available worker: 1
[10:53:09.921] |  :  .  |  :  .  |  :  .  |  :  .  Validate that the worker is functional ...
[10:53:09.999] |  :  .  |  :  .  |  :  .  |  :  .  |  Worker is functional
[10:53:09.999] |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ... done
[10:53:10.000] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:53:10.000] |  :  .  |  :  .  |  :  .  |  :  requestWorker() ... done
[10:53:10.000] |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ...
[10:53:10.000] |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:53:10.000] |  :  .  |  :  .  |  :  .  |  :  launchFuture() ...
[10:53:10.001] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:53:10.001] |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ...
[10:53:10.001] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ...
[10:53:10.001] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 1): ‘stats’
[10:53:10.001] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ... done
[10:53:10.001] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ...
[10:53:10.001] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ... done
[10:53:10.001] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ...
[10:53:10.001] |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:10.001] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:53:10.002] |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:10.002] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:53:10.002] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ... done
[10:53:10.002] |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ... done
[10:53:10.002] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'add', earlySignal = 0) ...
[10:53:10.002] |  :  .  |  :  .  |  :  .  |  :  .  |  Appended future to position #1
[10:53:10.002] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:53:10.002] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'add', earlySignal = 0) ... done
[10:53:10.003] |  :  .  |  :  .  |  :  .  |  :  launchFuture() ... done
[10:53:10.003] |  :  .  |  :  .  |  :  .  |  :  MultisessionFuture started
[10:53:10.003] |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:53:10.003] |  :  .  |  :  .  |  :  .  Launching futures ... done
[10:53:10.003] |  :  .  |  :  .  |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:10.003] |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ... done
[10:53:10.003] |  :  .  |  :  .  |  run() for Future (‘MultisessionFuture’) ... done
[10:53:10.003] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:10.003] |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:53:10.004] |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:53:10.004] |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:53:10.004] |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:53:10.004] |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:53:10.047] |  :  .  |  :  .  |  :  .  [1] TRUE
[10:53:10.047] |  :  .  |  :  .  |  :  .  received data:
[10:53:10.047] |  :  .  |  :  .  |  :  .  List of 5
[10:53:10.047] |  :  .  |  :  .  |  :  .   $ type   : chr "VALUE"
[10:53:10.047] |  :  .  |  :  .  |  :  .   $ value  :List of 13
[10:53:10.047] |  :  .  |  :  .  |  :  .    ..$ value            : 'xtabs' int [1:2(1d)] 2 3
[10:53:10.047] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "dimnames")=List of 1
[10:53:10.047] |  :  .  |  :  .  |  :  .    .. .. ..$ x: chr [1:2] "1" "2"
[10:53:10.047] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "call")= language xtabs(formula = ~x)
[10:53:10.047] |  :  .  |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:53:10.047] |  :  .  |  :  .  |  :  .    ..$ stdout           : chr ""
[10:53:10.047] |  :  .  |  :  .  |  :  .    ..$ conditions       : list()
[10:53:10.047] |  :  .  |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:53:10.047] |  :  .  |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:53:10.047] |  :  .  |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:53:10.047] |  :  .  |  :  .  |  :  .    .. ..$ added   : NULL
[10:53:10.047] |  :  .  |  :  .  |  :  .    .. ..$ removed : NULL
[10:53:10.047] |  :  .  |  :  .  |  :  .    .. ..$ replaced: NULL
[10:53:10.047] |  :  .  |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:53:10.047] |  :  .  |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:10"
[10:53:10.047] |  :  .  |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:10"
[10:53:10.047] |  :  .  |  :  .  |  :  .    ..$ session_uuid     : chr "da156b1daa5a8ac0e58d6fa5c7142cca"
[10:53:10.047] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:53:10.047] |  :  .  |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:10.047] |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:10.047] |  :  .  |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:10.047] |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:10.047] |  :  .  |  :  .  |  :  .    .. .. ..$ pid   : int 70396
[10:53:10.047] |  :  .  |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:08"
[10:53:10.047] |  :  .  |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:53:10.047] |  :  .  |  :  .  |  :  .    ..$ r_info           :List of 4
[10:53:10.047] |  :  .  |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:10.047] |  :  .  |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:53:10.047] |  :  .  |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:53:10.047] |  :  .  |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:53:10.047] |  :  .  |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:53:10.047] |  :  .  |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:53:10.047] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:53:10.047] |  :  .  |  :  .  |  :  .   $ success: logi TRUE
[10:53:10.047] |  :  .  |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.004 0 0
[10:53:10.047] |  :  .  |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:10.047] |  :  .  |  :  .  |  :  .   $ tag    : NULL
[10:53:10.058] |  :  .  |  :  .  |  :  .  Received FutureResult
[10:53:10.058] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'remove', earlySignal = 0) ...
[10:53:10.058] |  :  .  |  :  .  |  :  .  |  Removed future from position #1
[10:53:10.058] |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:53:10.058] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'remove', earlySignal = 0) ... done
[10:53:10.058] |  :  .  |  :  .  |  :  .  Erased future from future backend
[10:53:10.059] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:10.059] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:53:10.059] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:53:10.059] |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:10.059] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:53:10.059] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:10.059] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:53:10.059] |  :  .  |  :  .  |  result() for ClusterFuture ... done
x
1 2 
2 3 
- Globals - lm(<formula>, data = cars) ...
- Globals - lm(<formula #1 (‘a’)>, data = cars) ...

Call:
lm(formula = dist ~ . - 1, data = cars)

Coefficients:
speed  
2.909  

[10:53:10.061] |  :  .  |  :  .  |  getGlobalsAndPackages() ...
[10:53:10.061] |  :  .  |  :  .  |  :  Searching for globals ...
[10:53:10.062] |  :  .  |  :  .  |  :  .  globals found: [7] ‘{’, ‘lm’, ‘dist’, ‘-’, ‘.’, ‘~’, ‘cars’
[10:53:10.063] |  :  .  |  :  .  |  :  Searching for globals ... DONE
[10:53:10.063] |  :  .  |  :  .  |  :  Resolving globals: FALSE
[10:53:10.063] |  :  .  |  :  .  |  :  Search for packages associated with the globals ...
[10:53:10.063] |  :  .  |  :  .  |  :  .  Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[10:53:10.063] |  :  .  |  :  .  |  :  .  Packages: [3] ‘base’, ‘stats’, ‘datasets’
[10:53:10.064] |  :  .  |  :  .  |  :  Search for packages associated with the globals ... DONE
[10:53:10.064] |  :  .  |  :  .  |  :  Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[10:53:10.064] |  :  .  |  :  .  |  :  Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[10:53:10.064] |  :  .  |  :  .  |  :  globals: [0] 
[10:53:10.064] |  :  .  |  :  .  |  :  packages: [2] ‘stats’, ‘datasets’
[10:53:10.064] |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:53:10.064] |  :  .  |  :  .  |  run() for Future (‘Future’) ...
[10:53:10.064] |  :  .  |  :  .  |  :  state: ‘created’
[10:53:10.065] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:10.065] |  :  .  |  :  .  |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:10.065] |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ...
[10:53:10.065] |  :  .  |  :  .  |  :  .  Launching futures ...
[10:53:10.065] |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:53:10.065] |  :  .  |  :  .  |  :  .  |  :  Workers: [n=2]
[10:53:10.065] |  :  .  |  :  .  |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:10.067] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry: ‘workers-0796ff7c736709f9dee53e94b985e74e’
[10:53:10.067] |  :  .  |  :  .  |  :  .  |  :  requestWorker() ...
[10:53:10.067] |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ...
[10:53:10.067] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of workers: 2
[10:53:10.067] |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ...
[10:53:10.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ...
[10:53:10.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:53:10.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:53:10.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ... done
[10:53:10.068] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Total time: 0
[10:53:10.068] |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ... done
[10:53:10.068] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ...
[10:53:10.068] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:53:10.068] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:53:10.068] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ... done
[10:53:10.068] |  :  .  |  :  .  |  :  .  |  :  .  |  Index of first available worker: 1
[10:53:10.068] |  :  .  |  :  .  |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:53:10.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Worker is functional
[10:53:10.146] |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ... done
[10:53:10.146] |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:53:10.146] |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ... done
[10:53:10.146] |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:53:10.147] |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:53:10.147] |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ...
[10:53:10.147] |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:53:10.147] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ...
[10:53:10.147] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ...
[10:53:10.147] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[10:53:10.147] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:53:10.147] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:53:10.147] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:53:10.148] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ...
[10:53:10.148] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:10.148] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:10.148] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:10.148] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:10.148] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:53:10.148] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ... done
[10:53:10.149] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'add', earlySignal = 0) ...
[10:53:10.149] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Appended future to position #1
[10:53:10.149] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:53:10.149] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'add', earlySignal = 0) ... done
[10:53:10.149] |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ... done
[10:53:10.149] |  :  .  |  :  .  |  :  .  |  :  .  MultisessionFuture started
[10:53:10.149] |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:53:10.149] |  :  .  |  :  .  |  :  .  |  Launching futures ... done
[10:53:10.149] |  :  .  |  :  .  |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:10.149] |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ... done
[10:53:10.150] |  :  .  |  :  .  |  :  run() for Future (‘MultisessionFuture’) ... done
[10:53:10.150] |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:10.150] |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:53:10.150] |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:53:10.150] |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:53:10.150] |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:53:10.151] |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:53:10.193] |  :  .  |  :  .  |  :  .  |  [1] TRUE
[10:53:10.194] |  :  .  |  :  .  |  :  .  |  received data:
[10:53:10.194] |  :  .  |  :  .  |  :  .  |  List of 5
[10:53:10.194] |  :  .  |  :  .  |  :  .  |   $ type   : chr "VALUE"
[10:53:10.194] |  :  .  |  :  .  |  :  .  |   $ value  :List of 13
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    ..$ value            :List of 12
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. ..$ coefficients : Named num 2.91
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "names")= chr "speed"
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. ..$ residuals    : Named num [1:50] -9.64 -1.64 -16.36 1.64 -7.27 ...
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "names")= chr [1:50] "1" "2" "3" "4" ...
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. ..$ effects      : Named num [1:50] -334.59 -1.31 -15.8 2.2 -6.63 ...
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "names")= chr [1:50] "speed" "" "" "" ...
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. ..$ rank         : int 1
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. ..$ fitted.values: Named num [1:50] 11.6 11.6 20.4 20.4 23.3 ...
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "names")= chr [1:50] "1" "2" "3" "4" ...
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. ..$ assign       : int 1
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. ..$ qr           :List of 5
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. ..$ qr   : num [1:50, 1] -115.013 0.0348 0.0609 0.0609 0.0696 ...
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "dimnames")=List of 2
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..$ : chr [1:50] "1" "2" "3" "4" ...
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..$ : chr "speed"
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "assign")= int 1
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. ..$ qraux: num 1.03
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. ..$ pivot: int 1
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. ..$ tol  : num 1e-07
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. ..$ rank : int 1
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "class")= chr "qr"
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. ..$ df.residual  : int 49
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. ..$ xlevels      : Named list()
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. ..$ call         : language lm(formula = dist ~ . - 1, data = cars)
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. ..$ terms        :Classes 'terms', 'formula'  language dist ~ speed - 1
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "variables")= language list(dist, speed)
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "dimnames")=List of 2
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. .. .. ..$ : chr [1:2] "dist" "speed"
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. .. .. ..$ : chr "speed"
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "term.labels")= chr "speed"
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "order")= int 1
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "intercept")= int 0
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "response")= int 1
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, ".Environment")=<environment: 0x555d5f639610> 
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "predvars")= language list(dist, speed)
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "numeric"
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "names")= chr [1:2] "dist" "speed"
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. ..$ model        :'data.frame':	50 obs. of  2 variables:
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. ..$ dist : num [1:50] 2 10 4 22 16 10 18 26 34 17 ...
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. ..$ speed: num [1:50] 4 4 7 7 8 9 10 10 10 11 ...
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "terms")=Classes 'terms', 'formula'  language dist ~ speed - 1
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "variables")= language list(dist, speed)
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. .. .. .. ..$ : chr [1:2] "dist" "speed"
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. .. .. .. ..$ : chr "speed"
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "term.labels")= chr "speed"
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "order")= int 1
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "intercept")= int 0
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "response")= int 1
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, ".Environment")=<environment: 0x555d5f639610> 
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "predvars")= language list(dist, speed)
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "numeric"
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. .. .. ..- attr(*, "names")= chr [1:2] "dist" "speed"
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "class")= chr "lm"
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    ..$ visible          : logi TRUE
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    ..$ stdout           : chr ""
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    ..$ conditions       : list()
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    ..$ rng              : logi FALSE
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    ..$ misuseConnections:List of 3
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. ..$ added   : NULL
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. ..$ removed : NULL
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. ..$ replaced: NULL
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    ..$ misuseDevices    : NULL
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:10"
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:10"
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    ..$ session_uuid     : chr "da156b1daa5a8ac0e58d6fa5c7142cca"
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. ..$ pid   : int 70396
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:08"
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. ..$ random: int 2147483647
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    ..$ r_info           :List of 4
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. ..$ os           : chr "unix"
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    ..$ version          : chr "1.8"
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:53:10.194] |  :  .  |  :  .  |  :  .  |   $ success: logi TRUE
[10:53:10.194] |  :  .  |  :  .  |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.003 0.001 0.004 0 0
[10:53:10.194] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:10.194] |  :  .  |  :  .  |  :  .  |   $ tag    : NULL
[10:53:10.221] |  :  .  |  :  .  |  :  .  |  Received FutureResult
[10:53:10.221] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'remove', earlySignal = 0) ...
[10:53:10.221] |  :  .  |  :  .  |  :  .  |  :  Removed future from position #1
[10:53:10.221] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:53:10.221] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'remove', earlySignal = 0) ... done
[10:53:10.221] |  :  .  |  :  .  |  :  .  |  Erased future from future backend
[10:53:10.221] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:10.221] |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:53:10.222] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:53:10.222] |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:10.222] |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:10.222] |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:10.222] |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:10.222] |  :  .  |  :  .  |  :  result() for ClusterFuture ... done

Call:
lm(formula = dist ~ . - 1, data = cars)

Coefficients:
speed  
2.909  

- Globals - lm(<formula #2 (‘b’)>, data = cars) ...

Call:
lm(formula = dist ~ . + 0, data = cars)

Coefficients:
speed  
2.909  

[10:53:10.226] |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
[10:53:10.226] |  :  .  |  :  .  |  :  .  Searching for globals ...
[10:53:10.228] |  :  .  |  :  .  |  :  .  |  globals found: [7] ‘{’, ‘lm’, ‘dist’, ‘+’, ‘.’, ‘~’, ‘cars’
[10:53:10.228] |  :  .  |  :  .  |  :  .  Searching for globals ... DONE
[10:53:10.228] |  :  .  |  :  .  |  :  .  Resolving globals: FALSE
[10:53:10.228] |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ...
[10:53:10.228] |  :  .  |  :  .  |  :  .  |  Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[10:53:10.229] |  :  .  |  :  .  |  :  .  |  Packages: [3] ‘base’, ‘stats’, ‘datasets’
[10:53:10.229] |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:53:10.229] |  :  .  |  :  .  |  :  .  Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[10:53:10.229] |  :  .  |  :  .  |  :  .  Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[10:53:10.229] |  :  .  |  :  .  |  :  .  globals: [0] 
[10:53:10.229] |  :  .  |  :  .  |  :  .  packages: [2] ‘stats’, ‘datasets’
[10:53:10.229] |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:53:10.230] |  :  .  |  :  .  |  :  run() for Future (‘Future’) ...
[10:53:10.230] |  :  .  |  :  .  |  :  .  state: ‘created’
[10:53:10.230] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:10.230] |  :  .  |  :  .  |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:10.230] |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ...
[10:53:10.230] |  :  .  |  :  .  |  :  .  |  Launching futures ...
[10:53:10.230] |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:53:10.230] |  :  .  |  :  .  |  :  .  |  :  .  Workers: [n=2]
[10:53:10.231] |  :  .  |  :  .  |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:10.232] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry: ‘workers-0796ff7c736709f9dee53e94b985e74e’
[10:53:10.232] |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ...
[10:53:10.232] |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ...
[10:53:10.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of workers: 2
[10:53:10.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:53:10.233] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ...
[10:53:10.233] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:53:10.233] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:53:10.233] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ... done
[10:53:10.233] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Total time: 0
[10:53:10.233] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:53:10.233] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ...
[10:53:10.233] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:53:10.233] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:53:10.233] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ... done
[10:53:10.233] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Index of first available worker: 1
[10:53:10.234] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:53:10.314] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Worker is functional
[10:53:10.314] |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ... done
[10:53:10.314] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:53:10.315] |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ... done
[10:53:10.315] |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:53:10.315] |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:53:10.315] |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ...
[10:53:10.315] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:53:10.315] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ...
[10:53:10.316] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:53:10.316] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[10:53:10.316] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:53:10.316] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:53:10.316] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:53:10.316] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:53:10.316] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:10.316] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:53:10.316] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:10.316] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:53:10.317] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:53:10.317] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ... done
[10:53:10.317] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'add', earlySignal = 0) ...
[10:53:10.317] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Appended future to position #1
[10:53:10.317] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:53:10.317] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'add', earlySignal = 0) ... done
[10:53:10.317] |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ... done
[10:53:10.318] |  :  .  |  :  .  |  :  .  |  :  .  |  MultisessionFuture started
[10:53:10.318] |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:53:10.318] |  :  .  |  :  .  |  :  .  |  :  Launching futures ... done
[10:53:10.318] |  :  .  |  :  .  |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:10.318] |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ... done
[10:53:10.318] |  :  .  |  :  .  |  :  .  run() for Future (‘MultisessionFuture’) ... done
[10:53:10.318] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:10.318] |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:53:10.318] |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:53:10.319] |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:53:10.319] |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:53:10.319] |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :  [1] TRUE
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :  received data:
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :  List of 5
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :   $ type   : chr "VALUE"
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :   $ value  :List of 13
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    ..$ value            :List of 12
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. ..$ coefficients : Named num 2.91
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "names")= chr "speed"
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. ..$ residuals    : Named num [1:50] -9.64 -1.64 -16.36 1.64 -7.27 ...
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "names")= chr [1:50] "1" "2" "3" "4" ...
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. ..$ effects      : Named num [1:50] -334.59 -1.31 -15.8 2.2 -6.63 ...
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "names")= chr [1:50] "speed" "" "" "" ...
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. ..$ rank         : int 1
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. ..$ fitted.values: Named num [1:50] 11.6 11.6 20.4 20.4 23.3 ...
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "names")= chr [1:50] "1" "2" "3" "4" ...
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. ..$ assign       : int 1
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. ..$ qr           :List of 5
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ qr   : num [1:50, 1] -115.013 0.0348 0.0609 0.0609 0.0696 ...
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "dimnames")=List of 2
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ : chr [1:50] "1" "2" "3" "4" ...
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ : chr "speed"
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "assign")= int 1
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ qraux: num 1.03
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ pivot: int 1
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ tol  : num 1e-07
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ rank : int 1
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "class")= chr "qr"
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. ..$ df.residual  : int 49
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. ..$ xlevels      : Named list()
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. ..$ call         : language lm(formula = dist ~ . + 0, data = cars)
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. ..$ terms        :Classes 'terms', 'formula'  language dist ~ speed + 0
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "variables")= language list(dist, speed)
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..- attr(*, "dimnames")=List of 2
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. .. ..$ : chr [1:2] "dist" "speed"
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. .. ..$ : chr "speed"
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "term.labels")= chr "speed"
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "order")= int 1
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "intercept")= int 0
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "response")= int 1
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, ".Environment")=<environment: 0x555d5bd1d990> 
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "predvars")= language list(dist, speed)
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "numeric"
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..- attr(*, "names")= chr [1:2] "dist" "speed"
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. ..$ model        :'data.frame':	50 obs. of  2 variables:
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ dist : num [1:50] 2 10 4 22 16 10 18 26 34 17 ...
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ speed: num [1:50] 4 4 7 7 8 9 10 10 10 11 ...
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "terms")=Classes 'terms', 'formula'  language dist ~ speed + 0
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..- attr(*, "variables")= language list(dist, speed)
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. .. .. ..$ : chr [1:2] "dist" "speed"
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. .. .. ..$ : chr "speed"
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..- attr(*, "term.labels")= chr "speed"
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..- attr(*, "order")= int 1
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..- attr(*, "intercept")= int 0
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..- attr(*, "response")= int 1
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..- attr(*, ".Environment")=<environment: 0x555d5bd1d990> 
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..- attr(*, "predvars")= language list(dist, speed)
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "numeric"
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. .. ..- attr(*, "names")= chr [1:2] "dist" "speed"
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "class")= chr "lm"
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    ..$ visible          : logi TRUE
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    ..$ stdout           : chr ""
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    ..$ conditions       : list()
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    ..$ rng              : logi FALSE
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    ..$ misuseConnections:List of 3
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. ..$ added   : NULL
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. ..$ removed : NULL
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. ..$ replaced: NULL
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    ..$ misuseDevices    : NULL
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:10"
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:10"
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    ..$ session_uuid     : chr "da156b1daa5a8ac0e58d6fa5c7142cca"
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ pid   : int 70396
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:08"
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    ..$ r_info           :List of 4
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. ..$ os           : chr "unix"
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    ..$ version          : chr "1.8"
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :   $ success: logi TRUE
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:10.362] |  :  .  |  :  .  |  :  .  |  :   $ tag    : NULL
[10:53:10.389] |  :  .  |  :  .  |  :  .  |  :  Received FutureResult
[10:53:10.389] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'remove', earlySignal = 0) ...
[10:53:10.389] |  :  .  |  :  .  |  :  .  |  :  .  Removed future from position #1
[10:53:10.389] |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:53:10.389] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'remove', earlySignal = 0) ... done
[10:53:10.389] |  :  .  |  :  .  |  :  .  |  :  Erased future from future backend
[10:53:10.389] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:10.390] |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:10.390] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:10.390] |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:10.390] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:53:10.390] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:10.390] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:53:10.390] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done

Call:
lm(formula = dist ~ . + 0, data = cars)

Coefficients:
speed  
2.909  

- Globals - lm(<formula #3 (‘c’)>, data = cars) ...

Call:
lm(formula = dist ~ speed + speed^2, data = cars)

Coefficients:
(Intercept)        speed  
    -17.579        3.932  

[10:53:10.392] |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ...
[10:53:10.393] |  :  .  |  :  .  |  :  .  |  Searching for globals ...
[10:53:10.394] |  :  .  |  :  .  |  :  .  |  :  globals found: [8] ‘{’, ‘lm’, ‘dist’, ‘+’, ‘speed’, ‘^’, ‘~’, ‘cars’
[10:53:10.395] |  :  .  |  :  .  |  :  .  |  Searching for globals ... DONE
[10:53:10.395] |  :  .  |  :  .  |  :  .  |  Resolving globals: FALSE
[10:53:10.395] |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ...
[10:53:10.395] |  :  .  |  :  .  |  :  .  |  :  Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[10:53:10.395] |  :  .  |  :  .  |  :  .  |  :  Packages: [3] ‘base’, ‘stats’, ‘datasets’
[10:53:10.396] |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ... DONE
[10:53:10.396] |  :  .  |  :  .  |  :  .  |  Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[10:53:10.396] |  :  .  |  :  .  |  :  .  |  Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[10:53:10.396] |  :  .  |  :  .  |  :  .  |  globals: [0] 
[10:53:10.396] |  :  .  |  :  .  |  :  .  |  packages: [2] ‘stats’, ‘datasets’
[10:53:10.396] |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:53:10.396] |  :  .  |  :  .  |  :  .  run() for Future (‘Future’) ...
[10:53:10.397] |  :  .  |  :  .  |  :  .  |  state: ‘created’
[10:53:10.397] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:10.397] |  :  .  |  :  .  |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:10.397] |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ...
[10:53:10.397] |  :  .  |  :  .  |  :  .  |  :  Launching futures ...
[10:53:10.397] |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:53:10.397] |  :  .  |  :  .  |  :  .  |  :  .  |  Workers: [n=2]
[10:53:10.397] |  :  .  |  :  .  |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:10.399] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry: ‘workers-0796ff7c736709f9dee53e94b985e74e’
[10:53:10.399] |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ...
[10:53:10.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ...
[10:53:10.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of workers: 2
[10:53:10.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ...
[10:53:10.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ...
[10:53:10.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:53:10.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:53:10.400] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ... done
[10:53:10.400] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Total time: 0
[10:53:10.400] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ... done
[10:53:10.400] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ...
[10:53:10.400] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:53:10.400] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:53:10.400] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ... done
[10:53:10.400] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Index of first available worker: 1
[10:53:10.400] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Validate that the worker is functional ...
[10:53:10.460] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Worker is functional
[10:53:10.460] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ... done
[10:53:10.460] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:53:10.460] |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestWorker() ... done
[10:53:10.461] |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ...
[10:53:10.461] |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:53:10.461] |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ...
[10:53:10.461] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:53:10.461] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ...
[10:53:10.461] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ...
[10:53:10.462] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[10:53:10.462] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ... done
[10:53:10.462] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ...
[10:53:10.462] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ... done
[10:53:10.462] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ...
[10:53:10.462] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:10.462] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:53:10.462] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:10.462] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:53:10.463] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ... done
[10:53:10.463] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ... done
[10:53:10.463] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'add', earlySignal = 0) ...
[10:53:10.463] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Appended future to position #1
[10:53:10.463] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:53:10.463] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'add', earlySignal = 0) ... done
[10:53:10.463] |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ... done
[10:53:10.463] |  :  .  |  :  .  |  :  .  |  :  .  |  :  MultisessionFuture started
[10:53:10.464] |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:53:10.464] |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ... done
[10:53:10.464] |  :  .  |  :  .  |  :  .  |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:10.464] |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ... done
[10:53:10.464] |  :  .  |  :  .  |  :  .  |  run() for Future (‘MultisessionFuture’) ... done
[10:53:10.464] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:10.464] |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:53:10.464] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:53:10.465] |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:53:10.465] |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:53:10.465] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .  [1] TRUE
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .  received data:
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .  List of 5
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .   $ type   : chr "VALUE"
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .   $ value  :List of 13
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    ..$ value            :List of 12
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ coefficients : Named num [1:2] -17.58 3.93
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "names")= chr [1:2] "(Intercept)" "speed"
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ residuals    : Named num [1:50] 3.85 11.85 -5.95 12.05 2.12 ...
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "names")= chr [1:50] "1" "2" "3" "4" ...
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ effects      : Named num [1:50] -303.914 145.552 -8.115 9.885 0.194 ...
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "names")= chr [1:50] "(Intercept)" "speed" "" "" ...
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ rank         : int 2
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ fitted.values: Named num [1:50] -1.85 -1.85 9.95 9.95 13.88 ...
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "names")= chr [1:50] "1" "2" "3" "4" ...
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ assign       : int [1:2] 0 1
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ qr           :List of 5
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ qr   : num [1:50, 1:2] -7.071 0.141 0.141 0.141 0.141 ...
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "dimnames")=List of 2
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. ..$ : chr [1:50] "1" "2" "3" "4" ...
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. ..$ : chr [1:2] "(Intercept)" "speed"
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "assign")= int [1:2] 0 1
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ qraux: num [1:2] 1.14 1.27
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ pivot: int [1:2] 1 2
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ tol  : num 1e-07
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ rank : int 2
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "class")= chr "qr"
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ df.residual  : int 48
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ xlevels      : Named list()
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ call         : language lm(formula = dist ~ speed + speed^2, data = cars)
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ terms        :Classes 'terms', 'formula'  language dist ~ speed + speed^2
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "variables")= language list(dist, speed)
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. ..- attr(*, "dimnames")=List of 2
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. .. ..$ : chr [1:2] "dist" "speed"
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. .. ..$ : chr "speed"
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "term.labels")= chr "speed"
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "order")= int 1
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "intercept")= int 1
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "response")= int 1
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, ".Environment")=<environment: 0x555d602d2230> 
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "predvars")= language list(dist, speed)
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "numeric"
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. ..- attr(*, "names")= chr [1:2] "dist" "speed"
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ model        :'data.frame':	50 obs. of  2 variables:
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ dist : num [1:50] 2 10 4 22 16 10 18 26 34 17 ...
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ speed: num [1:50] 4 4 7 7 8 9 10 10 10 11 ...
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "terms")=Classes 'terms', 'formula'  language dist ~ speed + speed^2
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. ..- attr(*, "variables")= language list(dist, speed)
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. .. .. ..$ : chr [1:2] "dist" "speed"
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. .. .. ..$ : chr "speed"
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. ..- attr(*, "term.labels")= chr "speed"
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. ..- attr(*, "order")= int 1
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. ..- attr(*, "intercept")= int 1
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. ..- attr(*, "response")= int 1
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. ..- attr(*, ".Environment")=<environment: 0x555d602d2230> 
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. ..- attr(*, "predvars")= language list(dist, speed)
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "numeric"
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. .. ..- attr(*, "names")= chr [1:2] "dist" "speed"
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "class")= chr "lm"
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    ..$ stdout           : chr ""
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    ..$ conditions       : list()
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ added   : NULL
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ removed : NULL
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ replaced: NULL
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:10"
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:10"
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    ..$ session_uuid     : chr "da156b1daa5a8ac0e58d6fa5c7142cca"
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ pid   : int 70396
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:08"
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    ..$ r_info           :List of 4
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .   $ success: logi TRUE
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.004 0 0
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:10.507] |  :  .  |  :  .  |  :  .  |  :  .   $ tag    : NULL
[10:53:10.536] |  :  .  |  :  .  |  :  .  |  :  .  Received FutureResult
[10:53:10.536] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'remove', earlySignal = 0) ...
[10:53:10.536] |  :  .  |  :  .  |  :  .  |  :  .  |  Removed future from position #1
[10:53:10.536] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:53:10.536] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'remove', earlySignal = 0) ... done
[10:53:10.536] |  :  .  |  :  .  |  :  .  |  :  .  Erased future from future backend
[10:53:10.536] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:10.536] |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:53:10.537] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:53:10.537] |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:10.537] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:53:10.537] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:10.537] |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:53:10.537] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done

Call:
lm(formula = dist ~ speed + speed^2, data = cars)

Coefficients:
(Intercept)        speed  
    -17.579        3.932  

- Globals - lm(<formula #4 (‘d’)>, data = cars) ...

Call:
lm(formula = dist ~ speed + I(speed^2), data = cars)

Coefficients:
(Intercept)        speed   I(speed^2)  
    2.47014      0.91329      0.09996  

[10:53:10.539] |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ...
[10:53:10.540] |  :  .  |  :  .  |  :  .  |  :  Searching for globals ...
[10:53:10.542] |  :  .  |  :  .  |  :  .  |  :  .  globals found: [9] ‘{’, ‘lm’, ‘dist’, ‘+’, ‘speed’, ‘I’, ‘^’, ‘~’, ‘cars’
[10:53:10.542] |  :  .  |  :  .  |  :  .  |  :  Searching for globals ... DONE
[10:53:10.542] |  :  .  |  :  .  |  :  .  |  :  Resolving globals: FALSE
[10:53:10.542] |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ...
[10:53:10.542] |  :  .  |  :  .  |  :  .  |  :  .  Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[10:53:10.543] |  :  .  |  :  .  |  :  .  |  :  .  Packages: [3] ‘base’, ‘stats’, ‘datasets’
[10:53:10.543] |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ... DONE
[10:53:10.543] |  :  .  |  :  .  |  :  .  |  :  Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[10:53:10.543] |  :  .  |  :  .  |  :  .  |  :  Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[10:53:10.543] |  :  .  |  :  .  |  :  .  |  :  globals: [0] 
[10:53:10.543] |  :  .  |  :  .  |  :  .  |  :  packages: [2] ‘stats’, ‘datasets’
[10:53:10.543] |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:53:10.544] |  :  .  |  :  .  |  :  .  |  run() for Future (‘Future’) ...
[10:53:10.544] |  :  .  |  :  .  |  :  .  |  :  state: ‘created’
[10:53:10.544] |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:10.544] |  :  .  |  :  .  |  :  .  |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:10.544] |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ...
[10:53:10.544] |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ...
[10:53:10.544] |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:53:10.544] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Workers: [n=2]
[10:53:10.544] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:10.546] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry: ‘workers-0796ff7c736709f9dee53e94b985e74e’
[10:53:10.546] |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestWorker() ...
[10:53:10.546] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ...
[10:53:10.546] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of workers: 2
[10:53:10.546] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ...
[10:53:10.547] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ...
[10:53:10.547] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:53:10.547] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:53:10.547] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ... done
[10:53:10.547] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Total time: 0
[10:53:10.547] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ... done
[10:53:10.547] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ...
[10:53:10.547] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:53:10.547] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:53:10.547] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ... done
[10:53:10.547] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Index of first available worker: 1
[10:53:10.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:53:10.625] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Worker is functional
[10:53:10.625] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ... done
[10:53:10.625] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:53:10.626] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ... done
[10:53:10.626] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:53:10.626] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:53:10.626] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ...
[10:53:10.626] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:53:10.626] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ...
[10:53:10.627] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ...
[10:53:10.627] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[10:53:10.627] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:53:10.627] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:53:10.627] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:53:10.627] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ...
[10:53:10.627] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:10.627] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:10.627] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:10.627] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:10.628] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:53:10.628] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ... done
[10:53:10.628] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'add', earlySignal = 0) ...
[10:53:10.628] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Appended future to position #1
[10:53:10.628] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:53:10.628] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'add', earlySignal = 0) ... done
[10:53:10.628] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ... done
[10:53:10.629] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  MultisessionFuture started
[10:53:10.629] |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:53:10.629] |  :  .  |  :  .  |  :  .  |  :  .  |  Launching futures ... done
[10:53:10.629] |  :  .  |  :  .  |  :  .  |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:10.629] |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ... done
[10:53:10.629] |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘MultisessionFuture’) ... done
[10:53:10.629] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:10.629] |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:53:10.629] |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:53:10.630] |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:53:10.630] |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:53:10.630] |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:53:10.673] |  :  .  |  :  .  |  :  .  |  :  .  |  [1] TRUE
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |  received data:
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |  List of 5
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |   $ type   : chr "VALUE"
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |   $ value  :List of 13
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ value            :List of 12
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ coefficients : Named num [1:3] 2.47 0.913 0.1
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "names")= chr [1:3] "(Intercept)" "speed" "I(speed^2)"
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ residuals    : Named num [1:50] -5.723 2.277 -9.761 8.239 -0.174 ...
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "names")= chr [1:50] "1" "2" "3" "4" ...
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ effects      : Named num [1:50] -303.91 145.55 -23 9.04 0.17 ...
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "names")= chr [1:50] "(Intercept)" "speed" "I(speed^2)" "" ...
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ rank         : int 3
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ fitted.values: Named num [1:50] 7.72 7.72 13.76 13.76 16.17 ...
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "names")= chr [1:50] "1" "2" "3" "4" ...
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ assign       : int [1:3] 0 1 2
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ qr           :List of 5
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ qr   : num [1:50, 1:3] -7.071 0.141 0.141 0.141 0.141 ...
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "dimnames")=List of 2
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..$ : chr [1:50] "1" "2" "3" "4" ...
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..$ : chr [1:3] "(Intercept)" "speed" "I(speed^2)"
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "assign")= int [1:3] 0 1 2
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ qraux: num [1:3] 1.14 1.27 1.06
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ pivot: int [1:3] 1 2 3
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ tol  : num 1e-07
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ rank : int 3
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "class")= chr "qr"
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ df.residual  : int 47
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ xlevels      : Named list()
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ call         : language lm(formula = dist ~ speed + I(speed^2), data = cars)
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ terms        :Classes 'terms', 'formula'  language dist ~ speed + I(speed^2)
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "variables")= language list(dist, speed, I(speed^2))
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "factors")= int [1:3, 1:2] 0 1 0 0 0 1
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "dimnames")=List of 2
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. .. ..$ : chr [1:3] "dist" "speed" "I(speed^2)"
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. .. ..$ : chr [1:2] "speed" "I(speed^2)"
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "term.labels")= chr [1:2] "speed" "I(speed^2)"
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "order")= int [1:2] 1 1
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "intercept")= int 1
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "response")= int 1
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, ".Environment")=<environment: 0x555d5f7fb4b0> 
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "predvars")= language list(dist, speed, I(speed^2))
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "dataClasses")= Named chr [1:3] "numeric" "numeric" "numeric"
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "names")= chr [1:3] "dist" "speed" "I(speed^2)"
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ model        :'data.frame':	50 obs. of  3 variables:
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ dist      : num [1:50] 2 10 4 22 16 10 18 26 34 17 ...
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ speed     : num [1:50] 4 4 7 7 8 9 10 10 10 11 ...
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ I(speed^2): 'AsIs' num [1:50]  16  16  49  49  64  81 100 100 100 121 ...
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "terms")=Classes 'terms', 'formula'  language dist ~ speed + I(speed^2)
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "variables")= language list(dist, speed, I(speed^2))
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "factors")= int [1:3, 1:2] 0 1 0 0 0 1
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. .. .. ..$ : chr [1:3] "dist" "speed" "I(speed^2)"
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. .. .. ..$ : chr [1:2] "speed" "I(speed^2)"
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "term.labels")= chr [1:2] "speed" "I(speed^2)"
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "order")= int [1:2] 1 1
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "intercept")= int 1
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "response")= int 1
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, ".Environment")=<environment: 0x555d5f7fb4b0> 
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "predvars")= language list(dist, speed, I(speed^2))
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "dataClasses")= Named chr [1:3] "numeric" "numeric" "numeric"
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. .. ..- attr(*, "names")= chr [1:3] "dist" "speed" "I(speed^2)"
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "class")= chr "lm"
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ visible          : logi TRUE
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ stdout           : chr ""
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ conditions       : list()
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ rng              : logi FALSE
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseConnections:List of 3
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ added   : NULL
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ removed : NULL
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ replaced: NULL
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseDevices    : NULL
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:10"
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:10"
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ session_uuid     : chr "da156b1daa5a8ac0e58d6fa5c7142cca"
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ pid   : int 70396
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:08"
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ random: int 2147483647
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ r_info           :List of 4
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os           : chr "unix"
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ version          : chr "1.8"
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |   $ success: logi TRUE
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.004 0 0.005 0 0
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:10.674] |  :  .  |  :  .  |  :  .  |  :  .  |   $ tag    : NULL
[10:53:10.705] |  :  .  |  :  .  |  :  .  |  :  .  |  Received FutureResult
[10:53:10.705] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'remove', earlySignal = 0) ...
[10:53:10.705] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Removed future from position #1
[10:53:10.705] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:53:10.705] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'remove', earlySignal = 0) ... done
[10:53:10.705] |  :  .  |  :  .  |  :  .  |  :  .  |  Erased future from future backend
[10:53:10.706] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:10.706] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:53:10.706] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:53:10.706] |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:10.706] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:10.706] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:10.706] |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:10.706] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done

Call:
lm(formula = dist ~ speed + I(speed^2), data = cars)

Coefficients:
(Intercept)        speed   I(speed^2)  
    2.47014      0.91329      0.09996  

- Globals - lm(<formula #5 (‘e’)>, data = cars) ...

Call:
lm(formula = dist ~ poly(speed, 2), data = cars)

Coefficients:
    (Intercept)  poly(speed, 2)1  poly(speed, 2)2  
          42.98           145.55            23.00  

[10:53:10.709] |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
[10:53:10.709] |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ...
[10:53:10.711] |  :  .  |  :  .  |  :  .  |  :  .  |  globals found: [7] ‘{’, ‘lm’, ‘dist’, ‘poly’, ‘speed’, ‘~’, ‘cars’
[10:53:10.711] |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ... DONE
[10:53:10.711] |  :  .  |  :  .  |  :  .  |  :  .  Resolving globals: FALSE
[10:53:10.711] |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ...
[10:53:10.711] |  :  .  |  :  .  |  :  .  |  :  .  |  Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[10:53:10.712] |  :  .  |  :  .  |  :  .  |  :  .  |  Packages: [3] ‘base’, ‘stats’, ‘datasets’
[10:53:10.712] |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:53:10.712] |  :  .  |  :  .  |  :  .  |  :  .  Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[10:53:10.712] |  :  .  |  :  .  |  :  .  |  :  .  Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[10:53:10.712] |  :  .  |  :  .  |  :  .  |  :  .  globals: [0] 
[10:53:10.712] |  :  .  |  :  .  |  :  .  |  :  .  packages: [2] ‘stats’, ‘datasets’
[10:53:10.712] |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:53:10.713] |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘Future’) ...
[10:53:10.713] |  :  .  |  :  .  |  :  .  |  :  .  state: ‘created’
[10:53:10.713] |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:10.713] |  :  .  |  :  .  |  :  .  |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:10.713] |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ...
[10:53:10.713] |  :  .  |  :  .  |  :  .  |  :  .  |  Launching futures ...
[10:53:10.713] |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:53:10.713] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Workers: [n=2]
[10:53:10.713] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:10.715] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry: ‘workers-0796ff7c736709f9dee53e94b985e74e’
[10:53:10.715] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ...
[10:53:10.715] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ...
[10:53:10.715] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of workers: 2
[10:53:10.715] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:53:10.715] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ...
[10:53:10.715] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:53:10.716] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:53:10.716] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ... done
[10:53:10.716] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Total time: 0
[10:53:10.716] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:53:10.716] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ...
[10:53:10.716] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:53:10.716] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:53:10.716] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ... done
[10:53:10.716] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Index of first available worker: 1
[10:53:10.716] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:53:10.795] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Worker is functional
[10:53:10.795] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ... done
[10:53:10.795] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:53:10.796] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ... done
[10:53:10.796] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:53:10.796] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:53:10.796] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ...
[10:53:10.796] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:53:10.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ...
[10:53:10.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:53:10.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[10:53:10.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:53:10.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:53:10.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:53:10.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:53:10.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:10.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:53:10.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:10.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:53:10.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:53:10.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ... done
[10:53:10.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'add', earlySignal = 0) ...
[10:53:10.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Appended future to position #1
[10:53:10.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:53:10.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'add', earlySignal = 0) ... done
[10:53:10.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ... done
[10:53:10.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  MultisessionFuture started
[10:53:10.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:53:10.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Launching futures ... done
[10:53:10.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:10.799] |  :  .  |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ... done
[10:53:10.799] |  :  .  |  :  .  |  :  .  |  :  .  run() for Future (‘MultisessionFuture’) ... done
[10:53:10.799] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:10.800] |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:53:10.800] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:53:10.800] |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:53:10.800] |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:53:10.800] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :  [1] TRUE
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :  received data:
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :  List of 5
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ type   : chr "VALUE"
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ value  :List of 13
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ value            :List of 12
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ coefficients : Named num [1:3] 43 146 23
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "names")= chr [1:3] "(Intercept)" "poly(speed, 2)1" "poly(speed, 2)2"
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ residuals    : Named num [1:50] -5.723 2.277 -9.761 8.239 -0.174 ...
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "names")= chr [1:50] "1" "2" "3" "4" ...
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ effects      : Named num [1:50] -303.91 145.55 -23 9.04 0.17 ...
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "names")= chr [1:50] "(Intercept)" "poly(speed, 2)1" "poly(speed, 2)2" "" ...
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ rank         : int 3
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ fitted.values: Named num [1:50] 7.72 7.72 13.76 13.76 16.17 ...
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "names")= chr [1:50] "1" "2" "3" "4" ...
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ assign       : int [1:3] 0 1 1
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ qr           :List of 5
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ qr   : num [1:50, 1:3] -7.071 0.141 0.141 0.141 0.141 ...
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "dimnames")=List of 2
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ : chr [1:50] "1" "2" "3" "4" ...
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ : chr [1:3] "(Intercept)" "poly(speed, 2)1" "poly(speed, 2)2"
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "assign")= int [1:3] 0 1 1
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ qraux: num [1:3] 1.14 1.27 1.06
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ pivot: int [1:3] 1 2 3
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ tol  : num 1e-07
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ rank : int 3
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "class")= chr "qr"
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ df.residual  : int 47
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ xlevels      : Named list()
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ call         : language lm(formula = dist ~ poly(speed, 2), data = cars)
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ terms        :Classes 'terms', 'formula'  language dist ~ poly(speed, 2)
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "variables")= language list(dist, poly(speed, 2))
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..- attr(*, "dimnames")=List of 2
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. .. ..$ : chr [1:2] "dist" "poly(speed, 2)"
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. .. ..$ : chr "poly(speed, 2)"
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "term.labels")= chr "poly(speed, 2)"
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "order")= int 1
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "intercept")= int 1
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "response")= int 1
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, ".Environment")=<environment: 0x555d5b6c6390> 
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "predvars")= language list(dist, poly(speed, 2, coefs = list(alpha = c(15.4, 14.803503649635),      norm2 = c(1, 50, 1370, 52923.5831824818))))
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "nmatrix.2"
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..- attr(*, "names")= chr [1:2] "dist" "poly(speed, 2)"
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ model        :'data.frame':	50 obs. of  2 variables:
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ dist          : num [1:50] 2 10 4 22 16 10 18 26 34 17 ...
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ poly(speed, 2): 'poly' num [1:50, 1:2] -0.308 -0.308 -0.227 -0.227 -0.2 ...
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "dimnames")=List of 2
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ : NULL
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ : chr [1:2] "1" "2"
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "coefs")=List of 2
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ alpha: num [1:2] 15.4 14.8
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ norm2: num [1:4] 1 50 1370 52924
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "degree")= int [1:2] 1 2
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "terms")=Classes 'terms', 'formula'  language dist ~ poly(speed, 2)
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..- attr(*, "variables")= language list(dist, poly(speed, 2))
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. .. .. ..$ : chr [1:2] "dist" "poly(speed, 2)"
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. .. .. ..$ : chr "poly(speed, 2)"
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..- attr(*, "term.labels")= chr "poly(speed, 2)"
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..- attr(*, "order")= int 1
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..- attr(*, "intercept")= int 1
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..- attr(*, "response")= int 1
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..- attr(*, ".Environment")=<environment: 0x555d5b6c6390> 
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..- attr(*, "predvars")= language list(dist, poly(speed, 2, coefs = list(alpha = c(15.4, 14.803503649635),      norm2 = c(1, 50, 1370, 52923.5831824818))))
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "nmatrix.2"
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. .. ..- attr(*, "names")= chr [1:2] "dist" "poly(speed, 2)"
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "class")= chr "lm"
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ visible          : logi TRUE
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ stdout           : chr ""
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ conditions       : list()
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ rng              : logi FALSE
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseConnections:List of 3
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ added   : NULL
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ removed : NULL
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ replaced: NULL
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseDevices    : NULL
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:10"
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:10"
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ session_uuid     : chr "da156b1daa5a8ac0e58d6fa5c7142cca"
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ pid   : int 70396
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:08"
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ r_info           :List of 4
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os           : chr "unix"
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ version          : chr "1.8"
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ success: logi TRUE
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.004 0 0.005 0 0
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:10.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ tag    : NULL
[10:53:10.873] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Received FutureResult
[10:53:10.873] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'remove', earlySignal = 0) ...
[10:53:10.873] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Removed future from position #1
[10:53:10.873] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:53:10.874] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'remove', earlySignal = 0) ... done
[10:53:10.874] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Erased future from future backend
[10:53:10.874] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:10.874] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:10.874] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:10.874] |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:10.874] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:53:10.874] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:10.874] |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:53:10.874] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done

Call:
lm(formula = dist ~ poly(speed, 2), data = cars)

Coefficients:
    (Intercept)  poly(speed, 2)1  poly(speed, 2)2  
          42.98           145.55            23.00  

- Globals - map(x, ~ expr) ...
[10:53:10.876] |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ...
[10:53:10.876] |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ...
[10:53:10.881] |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals found: [16] ‘{’, ‘outer_function’, ‘map’, ‘:’, ‘~’, ‘inner_function’, ‘.x’, ‘if’, ‘inherits’, ‘<-’, ‘[[’, ‘-’, ‘eval’, ‘bquote’, ‘lapply’, ‘+’
[10:53:10.881] |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ... DONE
[10:53:10.881] |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving globals: FALSE
[10:53:10.881] |  :  .  |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ...
[10:53:10.882] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages associated with globals: [1] ‘base’
[10:53:10.882] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages: [1] ‘base’
[10:53:10.882] |  :  .  |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ... DONE
[10:53:10.882] |  :  .  |  :  .  |  :  .  |  :  .  |  Packages after dropping 'base': [0] 
[10:53:10.882] |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [3] ‘outer_function’, ‘map’, ‘inner_function’
[10:53:10.883] |  :  .  |  :  .  |  :  .  |  :  .  |  packages: [0] 
[10:53:10.883] |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:53:10.883] |  :  .  |  :  .  |  :  .  |  :  .  run() for Future (‘Future’) ...
[10:53:10.883] |  :  .  |  :  .  |  :  .  |  :  .  |  state: ‘created’
[10:53:10.883] |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:10.883] |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:10.883] |  :  .  |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ...
[10:53:10.883] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Launching futures ...
[10:53:10.884] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:53:10.884] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Workers: [n=2]
[10:53:10.884] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:10.885] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry: ‘workers-0796ff7c736709f9dee53e94b985e74e’
[10:53:10.885] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ...
[10:53:10.885] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ...
[10:53:10.886] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of workers: 2
[10:53:10.886] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ...
[10:53:10.886] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ...
[10:53:10.886] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:53:10.886] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:53:10.886] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ... done
[10:53:10.886] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Total time: 0
[10:53:10.886] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ... done
[10:53:10.886] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ...
[10:53:10.886] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:53:10.887] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:53:10.887] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ... done
[10:53:10.887] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Index of first available worker: 1
[10:53:10.887] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Validate that the worker is functional ...
[10:53:10.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Worker is functional
[10:53:10.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ... done
[10:53:10.967] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:53:10.967] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestWorker() ... done
[10:53:10.967] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ...
[10:53:10.967] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:53:10.967] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ...
[10:53:10.967] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:53:10.968] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ...
[10:53:10.968] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ...
[10:53:10.968] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:53:10.968] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ... done
[10:53:10.968] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ...
[10:53:10.968] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ... done
[10:53:10.968] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ...
[10:53:10.968] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:10.968] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:53:10.968] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:10.969] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:53:10.969] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ... done
[10:53:10.969] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ... done
[10:53:10.969] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'add', earlySignal = 0) ...
[10:53:10.969] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Appended future to position #1
[10:53:10.969] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:53:10.969] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'add', earlySignal = 0) ... done
[10:53:10.970] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ... done
[10:53:10.970] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  MultisessionFuture started
[10:53:10.970] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:53:10.970] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ... done
[10:53:10.970] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:10.970] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ... done
[10:53:10.970] |  :  .  |  :  .  |  :  .  |  :  .  |  run() for Future (‘MultisessionFuture’) ... done
[10:53:10.970] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:10.970] |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:53:10.970] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:53:10.971] |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:53:10.971] |  :  .  |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:53:10.971] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:53:11.021] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  [1] TRUE
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  received data:
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  List of 5
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ type   : chr "VALUE"
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ value  :List of 13
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ value            :List of 2
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ : num [1:2] 2 3
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ : num [1:2] 2 3
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ stdout           : chr ""
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ conditions       : list()
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ added   : NULL
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ removed : NULL
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ replaced: NULL
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:11"
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:11"
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ session_uuid     : chr "da156b1daa5a8ac0e58d6fa5c7142cca"
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ pid   : int 70396
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:08"
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ r_info           :List of 4
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ success: logi TRUE
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.009 0 0.01 0 0
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:11.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ tag    : NULL
[10:53:11.032] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Received FutureResult
[10:53:11.032] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'remove', earlySignal = 0) ...
[10:53:11.032] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Removed future from position #1
[10:53:11.033] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:53:11.033] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'remove', earlySignal = 0) ... done
[10:53:11.033] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Erased future from future backend
[10:53:11.033] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:11.033] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:53:11.033] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:53:11.033] |  :  .  |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:11.033] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:53:11.033] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:11.033] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:53:11.034] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
List of 2
 $ : num [1:2] 2 3
 $ : num [1:2] 2 3
[10:53:11.035] |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ...
[10:53:11.035] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Searching for globals ...
[10:53:11.040] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals found: [16] ‘{’, ‘outer_function’, ‘map’, ‘:’, ‘~’, ‘inner_function’, ‘.x’, ‘if’, ‘inherits’, ‘<-’, ‘[[’, ‘-’, ‘eval’, ‘bquote’, ‘lapply’, ‘+’
[10:53:11.040] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Searching for globals ... DONE
[10:53:11.040] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Resolving globals: FALSE
[10:53:11.040] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ...
[10:53:11.040] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages associated with globals: [1] ‘base’
[10:53:11.041] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages: [1] ‘base’
[10:53:11.041] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ... DONE
[10:53:11.041] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages after dropping 'base': [0] 
[10:53:11.041] |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals: [3] ‘outer_function’, ‘map’, ‘inner_function’
[10:53:11.041] |  :  .  |  :  .  |  :  .  |  :  .  |  :  packages: [0] 
[10:53:11.041] |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:53:11.042] |  :  .  |  :  .  |  :  .  |  :  .  |  run() for Future (‘Future’) ...
[10:53:11.042] |  :  .  |  :  .  |  :  .  |  :  .  |  :  state: ‘created’
[10:53:11.042] |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:11.042] |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:11.042] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ...
[10:53:11.042] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ...
[10:53:11.042] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:53:11.042] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Workers: [n=2]
[10:53:11.042] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:11.044] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry: ‘workers-0796ff7c736709f9dee53e94b985e74e’
[10:53:11.044] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestWorker() ...
[10:53:11.044] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ...
[10:53:11.044] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of workers: 2
[10:53:11.044] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ...
[10:53:11.044] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ...
[10:53:11.045] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:53:11.045] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:53:11.045] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ... done
[10:53:11.045] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Total time: 0
[10:53:11.045] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ... done
[10:53:11.045] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ...
[10:53:11.045] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:53:11.045] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:53:11.045] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'list', earlySignal = 0) ... done
[10:53:11.045] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Index of first available worker: 1
[10:53:11.045] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:53:11.123] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Worker is functional
[10:53:11.123] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ... done
[10:53:11.124] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:53:11.124] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ... done
[10:53:11.124] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:53:11.124] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:53:11.124] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ...
[10:53:11.125] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:53:11.125] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ...
[10:53:11.125] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ...
[10:53:11.125] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:11.125] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:53:11.125] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:53:11.125] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:53:11.125] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ...
[10:53:11.125] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:11.125] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:11.126] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:11.126] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:11.126] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:53:11.126] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ... done
[10:53:11.126] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'add', earlySignal = 0) ...
[10:53:11.126] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Appended future to position #1
[10:53:11.126] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:53:11.127] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'add', earlySignal = 0) ... done
[10:53:11.127] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ... done
[10:53:11.127] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  MultisessionFuture started
[10:53:11.127] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:53:11.127] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Launching futures ... done
[10:53:11.127] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:11.127] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ... done
[10:53:11.127] |  :  .  |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘MultisessionFuture’) ... done
[10:53:11.127] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:11.128] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:53:11.128] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:53:11.128] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:53:11.128] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:53:11.128] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  [1] TRUE
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  received data:
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  List of 5
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ type   : chr "VALUE"
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ value  :List of 13
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ value            :List of 2
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ : num [1:2] 2 3
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ : num [1:2] 2 3
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ visible          : logi TRUE
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ stdout           : chr ""
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ conditions       : list()
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ rng              : logi FALSE
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseConnections:List of 3
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ added   : NULL
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ removed : NULL
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ replaced: NULL
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseDevices    : NULL
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:11"
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:11"
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ session_uuid     : chr "da156b1daa5a8ac0e58d6fa5c7142cca"
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ pid   : int 70396
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:08"
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ random: int 2147483647
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ r_info           :List of 4
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os           : chr "unix"
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ version          : chr "1.8"
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ success: logi TRUE
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.004 0 0
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:11.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ tag    : NULL
[10:53:11.182] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Received FutureResult
[10:53:11.182] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'remove', earlySignal = 0) ...
[10:53:11.182] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Removed future from position #1
[10:53:11.182] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:53:11.182] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-0796ff7c736709f9dee53e94b985e74e', action = 'remove', earlySignal = 0) ... done
[10:53:11.182] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Erased future from future backend
[10:53:11.183] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:11.183] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:53:11.183] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:53:11.183] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:11.183] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:11.183] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:11.183] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:11.183] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
List of 2
 $ : num [1:2] 2 3
 $ : num [1:2] 2 3
Testing with 2 cores ... DONE

> message("*** Globals - formulas ... DONE")
*** Globals - formulas ... DONE
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=2s, sys.self=0.1s, elapsed=4s, user.child=0.7s, sys.child=0.6s
Test ‘globals,formulas’ ... success
> 
