
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script inst/testme/test-plan.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future:::testme("plan")
Test ‘plan’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future/testme/test-plan.R’

> library(future)
[08:09:38.249] Option 'future.startup.script': TRUE
[08:09:38.250] Future startup scripts considered: ‘.future.R’, ‘~/.future.R’
[08:09:38.250] Future startup scripts found: <none>

> options(future.debug = FALSE)

> message("*** plan() ...")
*** plan() ...

> cl <- parallelly::makeClusterPSOCK(1)

> print(cl)
Socket cluster with 1 nodes where 1 node is on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)

> pid <- Sys.getpid()

> message("R session PID: ", pid)
R session PID: 73711

> message("*** Set strategy via plan(sequential)")
*** Set strategy via plan(sequential)

> oplan <- plan(sequential)

> print(plan())
sequential:
- args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
- tweaked: FALSE
- call: plan(sequential)
FutureBackend to be launched

> plan(oplan)

> print(plan())
sequential:
- args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
- tweaked: FALSE
- call: plan(sequential)
FutureBackend to be launched

> worker_pid <- value(future(Sys.getpid()))

> message("Worker PID: ", worker_pid)
Worker PID: 73711

> stopifnot(worker_pid == pid)

> message("*** Set strategy via plan(cluster, workers = cl)")
*** Set strategy via plan(cluster, workers = cl)

> oplan <- plan(cluster, workers = cl)

> print(plan())
cluster:
- args: function (..., workers = "<Socket cluster with 1 nodes where 1 node is on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)>", envir = parent.frame())
- tweaked: TRUE
- call: plan(cluster, workers = cl)
ClusterFutureBackend:
Inherits: MultiprocessFutureBackend, FutureBackend
UUID: 9a63a1b65f44ded7f301286d4af4154d
Number of workers: 1
Number of free workers: 1
Available cores: 2
Automatic garbage collection: FALSE
Early signaling: TRUE
Interrupts are enabled: FALSE
Maximum total size of globals: +Inf
Maximum total size of value: +Inf
Argument ‘persistent’: FALSE
Argument ‘wait.timeout’: 86400
Argument ‘wait.interval’: 0.01
Argument ‘wait.alpha’: 1.01
Argument ‘hooks’: FALSE
Number of active futures: 0
Number of futures since start: 0 (0 created, 0 launched, 0 finished)
Total runtime of futures: 0 secs (NaN secs/finished future)
Workers of type RichSOCKcluster:
- Summary: Socket cluster with 1 nodes where 1 node is on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
- [ OK ] Node 1/1: valid connection [RichSOCKnode of a socket cluster on local host 'localhost' with pid 73764 (R version 4.5.0 (2025-04-11), x86_64-pc-linux-gnu) using socket connection #4 ('<-localhost:11190')]

> worker_pid_1 <- value(future(Sys.getpid()))

> message("Worker PID: ", worker_pid_1)
Worker PID: 73764

> stopifnot(worker_pid_1 != pid)

> plan(oplan)

> print(plan())
sequential:
- args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
- tweaked: FALSE
- call: plan(sequential)
SequentialFutureBackend:
Inherits: FutureBackend
UUID: c153c559df5979253d1cb54029b219a8
Number of workers: 1
Number of free workers: 1
Available cores: 2
Automatic garbage collection: FALSE
Early signaling: FALSE
Interrupts are enabled: TRUE
Maximum total size of globals: +Inf
Maximum total size of value: +Inf
Argument ‘hooks’: FALSE
Number of active futures: 0
Number of futures since start: 1 (1 created, 1 launched, 1 finished)
Total runtime of futures: 0.003071785 secs (0.003071785 secs/finished future)

> message("*** Set strategy via plan(cluster(workers = cl)")
*** Set strategy via plan(cluster(workers = cl)

> oplan <- plan(future::cluster(workers = cl))

> print(plan())
cluster:
- args: function (..., workers = "<Socket cluster with 1 nodes where 1 node is on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)>", envir = parent.frame())
- tweaked: TRUE
- call: plan(future::cluster(workers = cl))
ClusterFutureBackend:
Inherits: MultiprocessFutureBackend, FutureBackend
UUID: 80b60f1a2a8bc7d03eda196f73a368a0
Number of workers: 1
Number of free workers: 1
Available cores: 2
Automatic garbage collection: FALSE
Early signaling: TRUE
Interrupts are enabled: FALSE
Maximum total size of globals: +Inf
Maximum total size of value: +Inf
Argument ‘persistent’: FALSE
Argument ‘wait.timeout’: 86400
Argument ‘wait.interval’: 0.01
Argument ‘wait.alpha’: 1.01
Argument ‘hooks’: FALSE
Number of active futures: 0
Number of futures since start: 0 (0 created, 0 launched, 0 finished)
Total runtime of futures: 0 secs (NaN secs/finished future)
Workers of type RichSOCKcluster:
- Summary: Socket cluster with 1 nodes where 1 node is on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
- [ OK ] Node 1/1: valid connection [RichSOCKnode of a socket cluster on local host 'localhost' with pid 73764 (R version 4.5.0 (2025-04-11), x86_64-pc-linux-gnu) using socket connection #4 ('<-localhost:11190')]

> worker_pid_2 <- value(future(Sys.getpid()))

> message("Worker PID: ", worker_pid_2)
Worker PID: 73764

> stopifnot(worker_pid_2 != pid, worker_pid_2 == worker_pid_1)

> plan(oplan)

> print(plan())
sequential:
- args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
- tweaked: FALSE
- call: plan(sequential)
SequentialFutureBackend:
Inherits: FutureBackend
UUID: c153c559df5979253d1cb54029b219a8
Number of workers: 1
Number of free workers: 1
Available cores: 2
Automatic garbage collection: FALSE
Early signaling: FALSE
Interrupts are enabled: TRUE
Maximum total size of globals: +Inf
Maximum total size of value: +Inf
Argument ‘hooks’: FALSE
Number of active futures: 0
Number of futures since start: 1 (1 created, 1 launched, 1 finished)
Total runtime of futures: 0.003071785 secs (0.003071785 secs/finished future)

> message("*** Set strategy via plan('sequential')")
*** Set strategy via plan('sequential')

> oplan <- plan("sequential")

> print(plan())
sequential:
- args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
- tweaked: FALSE
- call: plan(sequential)
SequentialFutureBackend:
Inherits: FutureBackend
UUID: c153c559df5979253d1cb54029b219a8
Number of workers: 1
Number of free workers: 1
Available cores: 2
Automatic garbage collection: FALSE
Early signaling: FALSE
Interrupts are enabled: TRUE
Maximum total size of globals: +Inf
Maximum total size of value: +Inf
Argument ‘hooks’: FALSE
Number of active futures: 0
Number of futures since start: 1 (1 created, 1 launched, 1 finished)
Total runtime of futures: 0.003071785 secs (0.003071785 secs/finished future)

> worker_pid <- value(future(Sys.getpid()))

> message("Worker PID: ", worker_pid)
Worker PID: 73711

> stopifnot(worker_pid == pid)

> plan(oplan)

> print(plan())
sequential:
- args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
- tweaked: FALSE
- call: plan(sequential)
SequentialFutureBackend:
Inherits: FutureBackend
UUID: c153c559df5979253d1cb54029b219a8
Number of workers: 1
Number of free workers: 1
Available cores: 2
Automatic garbage collection: FALSE
Early signaling: FALSE
Interrupts are enabled: TRUE
Maximum total size of globals: +Inf
Maximum total size of value: +Inf
Argument ‘hooks’: FALSE
Number of active futures: 0
Number of futures since start: 2 (2 created, 2 launched, 2 finished)
Total runtime of futures: 0.005282164 secs (0.002641082 secs/finished future)

> message("*** plan('default')")
*** plan('default')

> oplan <- plan("default")

> print(plan())
sequential:
- args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
- tweaked: FALSE
- call: plan(sequential)
SequentialFutureBackend:
Inherits: FutureBackend
UUID: c153c559df5979253d1cb54029b219a8
Number of workers: 1
Number of free workers: 1
Available cores: 2
Automatic garbage collection: FALSE
Early signaling: FALSE
Interrupts are enabled: TRUE
Maximum total size of globals: +Inf
Maximum total size of value: +Inf
Argument ‘hooks’: FALSE
Number of active futures: 0
Number of futures since start: 2 (2 created, 2 launched, 2 finished)
Total runtime of futures: 0.005282164 secs (0.002641082 secs/finished future)

> plan(oplan)

> print(plan())
sequential:
- args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
- tweaked: FALSE
- call: plan(sequential)
SequentialFutureBackend:
Inherits: FutureBackend
UUID: c153c559df5979253d1cb54029b219a8
Number of workers: 1
Number of free workers: 1
Available cores: 2
Automatic garbage collection: FALSE
Early signaling: FALSE
Interrupts are enabled: TRUE
Maximum total size of globals: +Inf
Maximum total size of value: +Inf
Argument ‘hooks’: FALSE
Number of active futures: 0
Number of futures since start: 2 (2 created, 2 launched, 2 finished)
Total runtime of futures: 0.005282164 secs (0.002641082 secs/finished future)

> message("*** Stability of plan(cluster, workers = n)")
*** Stability of plan(cluster, workers = n)

> oplan <- plan(cluster, workers = I(1))

> print(plan())
cluster:
- args: function (..., workers = 1, envir = parent.frame())
- tweaked: TRUE
- call: plan(cluster, workers = I(1))
ClusterFutureBackend:
Inherits: MultiprocessFutureBackend, FutureBackend
UUID: 3024567eb757d2e920d1194b20871bf7
Number of workers: 1
Number of free workers: 1
Available cores: 2
Automatic garbage collection: FALSE
Early signaling: TRUE
Interrupts are enabled: FALSE
Maximum total size of globals: +Inf
Maximum total size of value: +Inf
Argument ‘persistent’: FALSE
Argument ‘wait.timeout’: 86400
Argument ‘wait.interval’: 0.01
Argument ‘wait.alpha’: 1.01
Argument ‘hooks’: FALSE
Number of active futures: 0
Number of futures since start: 0 (0 created, 0 launched, 0 finished)
Total runtime of futures: 0 secs (NaN secs/finished future)
Workers of type RichSOCKcluster:
- Summary: Socket cluster with 1 nodes where 1 node is on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
- [ OK ] Node 1/1: valid connection [RichSOCKnode of a socket cluster on local host 'localhost' with pid 73798 (R version 4.5.0 (2025-04-11), x86_64-pc-linux-gnu) using socket connection #5 ('<-localhost:11759')]

> worker_pid_1 <- value(future(Sys.getpid()))

> message("Worker PID: ", worker_pid_1)
Worker PID: 73798

> stopifnot(worker_pid_1 != pid)

> oplan <- plan(cluster, workers = I(1))

> print(plan())
cluster:
- args: function (..., workers = 1, envir = parent.frame())
- tweaked: TRUE
- call: plan(cluster, workers = I(1))
ClusterFutureBackend:
Inherits: MultiprocessFutureBackend, FutureBackend
UUID: 3024567eb757d2e920d1194b20871bf7
Number of workers: 1
Number of free workers: 1
Available cores: 2
Automatic garbage collection: FALSE
Early signaling: TRUE
Interrupts are enabled: FALSE
Maximum total size of globals: +Inf
Maximum total size of value: +Inf
Argument ‘persistent’: FALSE
Argument ‘wait.timeout’: 86400
Argument ‘wait.interval’: 0.01
Argument ‘wait.alpha’: 1.01
Argument ‘hooks’: FALSE
Number of active futures: 0
Number of futures since start: 1 (1 created, 1 launched, 1 finished)
Total runtime of futures: 0.04609704 secs (0.04609704 secs/finished future)
Workers of type RichSOCKcluster:
- Summary: Socket cluster with 1 nodes where 1 node is on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
- [ OK ] Node 1/1: valid connection [RichSOCKnode of a socket cluster on local host 'localhost' with pid 73798 (R version 4.5.0 (2025-04-11), x86_64-pc-linux-gnu) using socket connection #5 ('<-localhost:11759')]

> worker_pid_2 <- value(future(Sys.getpid()))

> message("Worker PID: ", worker_pid_2)
Worker PID: 73798

> stopifnot(worker_pid_2 != pid, worker_pid_2 == worker_pid_1)

> plan(oplan)

> print(plan())
cluster:
- args: function (..., workers = 1, envir = parent.frame())
- tweaked: TRUE
- call: plan(cluster, workers = I(1))
ClusterFutureBackend:
Inherits: MultiprocessFutureBackend, FutureBackend
UUID: 3024567eb757d2e920d1194b20871bf7
Number of workers: 1
Number of free workers: 1
Available cores: 2
Automatic garbage collection: FALSE
Early signaling: TRUE
Interrupts are enabled: FALSE
Maximum total size of globals: +Inf
Maximum total size of value: +Inf
Argument ‘persistent’: FALSE
Argument ‘wait.timeout’: 86400
Argument ‘wait.interval’: 0.01
Argument ‘wait.alpha’: 1.01
Argument ‘hooks’: FALSE
Number of active futures: 0
Number of futures since start: 2 (2 created, 2 launched, 2 finished)
Total runtime of futures: 0.04846358 secs (0.02423179 secs/finished future)
Workers of type RichSOCKcluster:
- Summary: Socket cluster with 1 nodes where 1 node is on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
- [ OK ] Node 1/1: valid connection [RichSOCKnode of a socket cluster on local host 'localhost' with pid 73798 (R version 4.5.0 (2025-04-11), x86_64-pc-linux-gnu) using socket connection #5 ('<-localhost:11759')]

> message("*** plan('unknown strategy')")
*** plan('unknown strategy')

> res <- try(plan("unknown strategy"), silent = TRUE)

> print(res)
[1] "Error : No such backend for futures: ‘unknown strategy’\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError: No such backend for futures: ‘unknown strategy’>

> stopifnot(inherits(res, "try-error"))

> message("*** plan(sequential)")
*** plan(sequential)

> plan(sequential)

> a <- 0

> f <- future({
+     b <- 3
+     c <- 2
+     a * b * c
+ })

> a <- 7

> v <- value(f)

> print(v)
[1] 0

> stopifnot(v == 0)

> message("*** plan('sequential')")
*** plan('sequential')

> plan("sequential")

> print(plan())
sequential:
- args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
- tweaked: FALSE
- call: plan(sequential)
SequentialFutureBackend:
Inherits: FutureBackend
UUID: 44774971f4cb4834b1ee55e7b49bf664
Number of workers: 1
Number of free workers: 1
Available cores: 2
Automatic garbage collection: FALSE
Early signaling: FALSE
Interrupts are enabled: TRUE
Maximum total size of globals: +Inf
Maximum total size of value: +Inf
Argument ‘hooks’: FALSE
Number of active futures: 0
Number of futures since start: 1 (1 created, 1 launched, 1 finished)
Total runtime of futures: 0.002318144 secs (0.002318144 secs/finished future)

> message("*** plan() and overriding defaults")
*** plan() and overriding defaults

> message("*** plan(sequential)")
*** plan(sequential)

> plan(sequential)

> fcn <- plan("next")

> print(fcn)
sequential:
- args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
- tweaked: FALSE
- call: plan(sequential)
SequentialFutureBackend:
Inherits: FutureBackend
UUID: 44774971f4cb4834b1ee55e7b49bf664
Number of workers: 1
Number of free workers: 1
Available cores: 2
Automatic garbage collection: FALSE
Early signaling: FALSE
Interrupts are enabled: TRUE
Maximum total size of globals: +Inf
Maximum total size of value: +Inf
Argument ‘hooks’: FALSE
Number of active futures: 0
Number of futures since start: 1 (1 created, 1 launched, 1 finished)
Total runtime of futures: 0.002318144 secs (0.002318144 secs/finished future)

> x <- 0

> f <- future({
+     x <- 1
+ })

> print(value(f))
[1] 1

> stopifnot(x == 0)

> message("*** plan(sequential, abc = 1)")
*** plan(sequential, abc = 1)

> plan(sequential, abc = 1, def = TRUE)
Warning: Detected 2 unknown future arguments: ‘abc’, ‘def’

> fcn <- plan("next")

> print(fcn)
sequential:
- args: function (..., abc = 1, def = TRUE, envir = parent.frame(), workers = "<NULL>")
- tweaked: TRUE
- call: plan(sequential, abc = 1, def = TRUE)
SequentialFutureBackend:
Inherits: FutureBackend
UUID: 861558528a29265d509ba482e77de424
Number of workers: 1
Number of free workers: 1
Available cores: 2
Automatic garbage collection: FALSE
Early signaling: FALSE
Interrupts are enabled: TRUE
Maximum total size of globals: +Inf
Maximum total size of value: +Inf
Argument ‘hooks’: FALSE
Number of active futures: 0
Number of futures since start: 0 (0 created, 0 launched, 0 finished)
Total runtime of futures: 0 secs (NaN secs/finished future)

> stopifnot(formals(fcn)$abc == 1)

> message("*** plan(sequential(abc = 1))")
*** plan(sequential(abc = 1))

> plan(cluster, workers = cl)

> plan(sequential(abc = 1))
Warning: Detected 1 unknown future arguments: ‘abc’

> fcn <- plan("next")

> print(fcn)
sequential:
- args: function (..., abc = 1, envir = parent.frame(), workers = "<NULL>")
- tweaked: TRUE
- call: plan(sequential(abc = 1))
SequentialFutureBackend:
Inherits: FutureBackend
UUID: b14fd0e5b9d0f53e001b9924321af735
Number of workers: 1
Number of free workers: 1
Available cores: 2
Automatic garbage collection: FALSE
Early signaling: FALSE
Interrupts are enabled: TRUE
Maximum total size of globals: +Inf
Maximum total size of value: +Inf
Argument ‘hooks’: FALSE
Number of active futures: 0
Number of futures since start: 0 (0 created, 0 launched, 0 finished)
Total runtime of futures: 0 secs (NaN secs/finished future)

> stopifnot(formals(fcn)$abc == 1)

> message("*** plan(tweak(sequential, abc = 1))")
*** plan(tweak(sequential, abc = 1))

> plan(cluster, workers = cl)

> plan(tweak(sequential, abc = 1))
Warning: Detected 1 unknown future arguments: ‘abc’
Warning: Detected 1 unknown future arguments: ‘abc’

> fcn <- plan("next")

> print(fcn)
sequential:
- args: function (..., abc = 1, envir = parent.frame(), workers = "<NULL>")
- tweaked: TRUE
- call: plan(tweak(sequential, abc = 1))
SequentialFutureBackend:
Inherits: FutureBackend
UUID: 795752a234d223b5d9d8b39788c8da84
Number of workers: 1
Number of free workers: 1
Available cores: 2
Automatic garbage collection: FALSE
Early signaling: FALSE
Interrupts are enabled: TRUE
Maximum total size of globals: +Inf
Maximum total size of value: +Inf
Argument ‘hooks’: FALSE
Number of active futures: 0
Number of futures since start: 0 (0 created, 0 launched, 0 finished)
Total runtime of futures: 0 secs (NaN secs/finished future)

> stopifnot(formals(fcn)$abc == 1)

> message("*** do.call(plan, args = list(sequential, abc = 1))")
*** do.call(plan, args = list(sequential, abc = 1))

> do.call(plan, args = list(sequential, abc = 1, def = TRUE))
Warning: Detected 2 unknown future arguments: ‘abc’, ‘def’

> fcn <- plan("next")

> print(fcn)
sequential:
- args: function (..., abc = 1, def = TRUE, envir = parent.frame(), workers = "<NULL>")
- tweaked: TRUE
- call: NULL
SequentialFutureBackend:
Inherits: FutureBackend
UUID: 98d883781e7e8f8823dbb3578c8ac511
Number of workers: 1
Number of free workers: 1
Available cores: 2
Automatic garbage collection: FALSE
Early signaling: FALSE
Interrupts are enabled: TRUE
Maximum total size of globals: +Inf
Maximum total size of value: +Inf
Argument ‘hooks’: FALSE
Number of active futures: 0
Number of futures since start: 0 (0 created, 0 launched, 0 finished)
Total runtime of futures: 0 secs (NaN secs/finished future)

> stopifnot(formals(fcn)$abc == 1)

> message("*** plan(cluster, ..., rscript_startup = \"<code>\")")
*** plan(cluster, ..., rscript_startup = "<code>")

> plan(cluster, workers = 1, rscript_startup = "options(abc = 42L)")
Warning: Detected 1 unknown future arguments: ‘rscript_startup’

> f <- future(getOption("abc"))

> v <- value(f)

> print(v)
[1] 42

> stopifnot(identical(v, 42))

> plan(sequential)

> message("*** plan(cluster, ..., rscript_startup = <expr>)")
*** plan(cluster, ..., rscript_startup = <expr>)

> plan(cluster, workers = 1, rscript_startup = quote(options(abc = 42)))
Warning: Detected 1 unknown future arguments: ‘rscript_startup’

> f <- future(getOption("abc"))

> v <- value(f)

> print(v)
[1] 42

> stopifnot(identical(v, 42))

> plan(sequential)

> message("*** plan(sequential, gc = TRUE)")
*** plan(sequential, gc = TRUE)

> oplan <- plan(cluster, gc = TRUE)

> f <- future(42)

> v <- value(f)

> print(v)
[1] 42

> stopifnot(identical(v, 42))

> plan(sequential)

> message("*** plan(cluster, gc = TRUE)")
*** plan(cluster, gc = TRUE)

> oplan <- plan(cluster, gc = TRUE)

> f <- future(42)

> v <- value(f)

> print(v)
[1] 42

> stopifnot(identical(v, 42))

> plan(sequential)

> message("*** plan(cluster, gc = TRUE)")
*** plan(cluster, gc = TRUE)

> oplan <- plan(cluster, gc = TRUE)

> f <- future(42)

> v <- value(f)

> print(v)
[1] 42

> stopifnot(identical(v, 42))

> plan(sequential)

> message("*** plan(cluster, earlySignal = TRUE)")
*** plan(cluster, earlySignal = TRUE)

> oplan <- plan(cluster, earlySignal = TRUE)

> f <- future(42)

> v <- value(f)

> print(v)
[1] 42

> stopifnot(identical(v, 42))

> plan(sequential)

> message("*** plan(cluster, earlySignal = TRUE)")
*** plan(cluster, earlySignal = TRUE)

> oplan <- plan(cluster, earlySignal = TRUE)

> f <- future(42)

> v <- value(f)

> print(v)
[1] 42

> stopifnot(identical(v, 42))

> plan(sequential)

> message("*** plan(cluster, earlySignal = TRUE)")
*** plan(cluster, earlySignal = TRUE)

> oplan <- plan(cluster, earlySignal = TRUE)

> f <- future(42)

> v <- value(f)

> print(v)
[1] 42

> stopifnot(identical(v, 42))

> plan(sequential)

> message("*** old <- plan(new)")
*** old <- plan(new)

> truth <- plan("list")

> old <- plan(cluster, workers = cl)

> stopifnot(identical(unclass(old), unclass(truth)))

> stack <- plan("list")

> prev <- plan(old)

> stopifnot(identical(stack, prev))

> stack <- plan("list")

> stopifnot(identical(stack, old))

> stopifnot(identical(stack, truth))

> message("*** with(plan(sequential), ...)")
*** with(plan(sequential), ...)

> plan(cluster, workers = cl)

> pid <- Sys.getpid()

> with(plan(sequential), {
+     f <- future({
+         Sys.getpid()
+     })
+     v <- value(f)
+ })

> stopifnot(v == pid, inherits(plan("next"), "cluster"))

> message("*** with(plan(sequential), local = TRUE)")
*** with(plan(sequential), local = TRUE)

> plan(cluster, workers = cl)

> pid <- Sys.getpid()

> v <- local({
+     with(plan(sequential), local = TRUE)
+     f <- future({
+         Sys.getpid()
+     })
+     v <- value(f)
+ })

> stopifnot(v == pid, inherits(plan("next"), "cluster"))

> message("*** %plan% 'sequential'")
*** %plan% 'sequential'

> plan(cluster, workers = cl)

> pid <- Sys.getpid()

> x %<-% {
+     Sys.getpid()
+ } %plan% "sequential"

> stopifnot(v == pid, inherits(plan("next"), "cluster"))

> message("*** %plan% sequential")
*** %plan% sequential

> plan(cluster, workers = cl)

> fun <- {
+     plan("next")
+ } %plan% sequential

> pid <- Sys.getpid()

> x %<-% {
+     Sys.getpid()
+ } %plan% sequential

> stopifnot(v == pid, inherits(plan("next"), "cluster"))

> message("*** Nested futures with different plans")
*** Nested futures with different plans

> c %<-% {
+     message("Resolving 'c'")
+     a %<-% {
+         message("Resolving 'a'")
+         2
+     } %plan% sequential
+     b %<-% {
+     .... [TRUNCATED] 

> d <- 42

> print(d)
[1] 42

> print(c)
Resolving 'c'
Resolving 'a'
Local variable 'x'
Resolving 'b'
[1] 6

> stopifnot(c == 6)

> message("*** plan() by functions and character names ... ")
*** plan() by functions and character names ... 

> plan(sequential)

> a %<-% 42

> stopifnot(a == 42)

> plan("sequential")

> a %<-% 42

> stopifnot(a == 42)

> plan(list(sequential))

> a %<-% 42

> stopifnot(a == 42)

> plan(list("sequential"))

> a %<-% 42

> stopifnot(a == 42)

> plan(list(sequential, sequential))

> a %<-% {
+     b %<-% 42
+     b
+ }

> stopifnot(a == 42)

> plan(list("sequential", sequential))

> a %<-% {
+     b %<-% 42
+     b
+ }

> stopifnot(a == 42)

> plan(list(sequential, "sequential"))

> a %<-% {
+     b %<-% 42
+     b
+ }

> stopifnot(a == 42)

> plan(list("sequential", "sequential"))

> a %<-% {
+     b %<-% 42
+     b
+ }

> stopifnot(a == 42)

> plan(list("sequential", "sequential"))

> a %<-% {
+     b %<-% 42
+     b
+ }

> stopifnot(a == 42)

> message("*** plan() by functions and character names ... DONE")
*** plan() by functions and character names ... DONE

> message("*** plan() w/ commands ...")
*** plan() w/ commands ...

> plan(list(sequential, sequential))

> res <- plan("list")

> print(res)
List of future strategies:
1. sequential:
   - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
   - tweaked: FALSE
   - call: plan(list(sequential, sequential))
2. sequential:
   - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
   - tweaked: FALSE
   - call: plan(list(sequential, sequential))

> stopifnot(length(res) == 2)

> plan("pop")
List of future strategies:
1. sequential:
   - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
   - tweaked: FALSE
   - call: plan(list(sequential, sequential))
2. sequential:
   - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
   - tweaked: FALSE
   - call: plan(list(sequential, sequential))

> res <- plan("list")

> print(res)
[[1]]
sequential:
- args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
- tweaked: FALSE
- call: plan(list(sequential, sequential))
FutureBackend to be launched


> stopifnot(length(res) == 1)

> plan("reset")
List of future strategies:
1. sequential:
   - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
   - tweaked: FALSE
   - call: plan(sequential)

> print(plan())
sequential:
- args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
- tweaked: FALSE
- call: plan(sequential)
FutureBackend to be launched

> message("*** plan() w/ commands ... DONE")
*** plan() w/ commands ... DONE

> message("*** plan() - odds'n'ends ...")
*** plan() - odds'n'ends ...

> plan(sequential, split = FALSE)

> f <- future(42)

> v <- value(f)

> stopifnot(v == 42)

> stopifnot(inherits(f$envir, "environment"), identical(f$envir, 
+     globalenv()))

> message("*** plan() - odds'n'ends ... DONE")
*** plan() - odds'n'ends ... DONE

> parallel::stopCluster(cl)

> plan(sequential)

> message("*** plan() ... DONE")
*** plan() ... DONE
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=2s, sys.self=0.05s, elapsed=6s, user.child=0.2s, sys.child=0.3s
Test ‘plan’ ... success
> 
