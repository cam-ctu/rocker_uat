
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script incl/testme/test-futureAssign.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future:::testme("futureAssign")
Test ‘futureAssign’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future/testme/test-futureAssign.R’

> library(future)
[10:52:46.458] Option 'future.startup.script': TRUE
[10:52:46.458] Future startup scripts considered: ‘.future.R’, ‘~/.future.R’
[10:52:46.458] Future startup scripts found: <none>

> message("*** futureAssign() ...")
*** futureAssign() ...

> message("*** futureAssign() - sequential w/ lazy evaluation ...")
*** futureAssign() - sequential w/ lazy evaluation ...

> delayedAssign("a", {
+     cat("Delayed assignment evaluated\n")
+     1
+ })

> futureAssign("b", {
+     cat("Future assignment evaluated\n")
+     2
+ }, lazy = TRUE)
[10:52:46.460] getGlobalsAndPackages() ...
[10:52:46.460] |  Searching for globals ...
[10:52:46.467] |  :  globals found: [2] ‘{’, ‘cat’
[10:52:46.467] |  Searching for globals ... DONE
[10:52:46.467] |  Resolving globals: FALSE
[10:52:46.467] |  Search for packages associated with the globals ...
[10:52:46.467] |  :  Packages associated with globals: [1] ‘base’
[10:52:46.468] |  :  Packages: [1] ‘base’
[10:52:46.468] |  Search for packages associated with the globals ... DONE
[10:52:46.468] |  Packages after dropping 'base': [0] 
[10:52:46.468] |  globals: [0] 
[10:52:46.468] |  packages: [0] 
[10:52:46.468] getGlobalsAndPackages() ... done

> cat(sprintf("b = %s\n", b))
[10:52:46.469] run() for Future (‘Future’) ...
[10:52:46.469] |  state: ‘created’
[10:52:46.469] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.470] |  :  makeFutureBackend(<sequential>) ...
[10:52:46.470] |  :  .  Backend function: <‘NULL’>
[10:52:46.470] |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:46.470] |  :  makeFutureBackend(<sequential>) ... done
[10:52:46.470] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.472] |  Using SequentialFutureBackend ...
[10:52:46.472] |  :  Launching futures ...
[10:52:46.473] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:46.473] |  :  .  |  getFutureData() ...
[10:52:46.473] |  :  .  |  :  getFutureCore() ...
[10:52:46.473] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:46.473] |  :  .  |  :  getFutureCore() ... done
[10:52:46.473] |  :  .  |  :  getFutureCapture() ...
[10:52:46.473] |  :  .  |  :  getFutureCapture() ... done
[10:52:46.474] |  :  .  |  :  getFutureContext() ...
[10:52:46.474] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.474] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:46.474] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.474] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:46.474] |  :  .  |  :  getFutureContext() ... done
[10:52:46.474] |  :  .  |  getFutureData() ... done
[10:52:46.475] |  :  .  |  attachPackages() ...
[10:52:46.475] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:46.476] |  :  .  |  attachPackages() ... DONE
[10:52:46.476] |  :  .  |  attachPackages() ...
[10:52:46.476] |  :  .  |  :  packages: [n=0] 
[10:52:46.476] |  :  .  |  attachPackages() ... DONE
[10:52:46.476] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.476] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:46.477] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.477] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.477] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:46.477] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:46.477] |  :  .  |  :  .  |  New stack:
[10:52:46.477] |  :  .  |  :  .  |  List of 1
[10:52:46.477] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.477] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.477] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.477] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.477] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.477] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.477] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.481] |  :  .  |  :  .  |  Old stack:
[10:52:46.481] |  :  .  |  :  .  |  List of 1
[10:52:46.481] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.481] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.481] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.481] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.481] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.481] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:46.481] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.481] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.481] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.481] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.485] |  :  .  |  :  .  |  Not identical
[10:52:46.485] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:46.485] |  :  .  |  :  .  |  :  List of 2
[10:52:46.485] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.485] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.485] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.485] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.485] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.485] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.485] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.485] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.485] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.485] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.485] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.485] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:46.485] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.485] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.485] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.489] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:46.489] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:46.489] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:46.490] |  :  .  |  :  .  List of future strategies:
[10:52:46.490] |  :  .  |  :  .  1. sequential:
[10:52:46.490] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:46.490] |  :  .  |  :  .     - tweaked: FALSE
[10:52:46.490] |  :  .  |  :  .     - call: plan(sequential)
[10:52:46.490] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:46.490] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.492] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.493] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.493] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:46.493] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:46.493] |  :  .  |  :  .  |  :  New stack:
[10:52:46.493] |  :  .  |  :  .  |  :  List of 1
[10:52:46.493] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.493] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.493] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.493] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.493] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.493] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:46.493] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.493] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.493] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.493] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.496] |  :  .  |  :  .  |  :  Old stack:
[10:52:46.496] |  :  .  |  :  .  |  :  List of 1
[10:52:46.496] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.496] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.496] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.496] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.496] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.496] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:46.496] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.496] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.496] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.496] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.500] |  :  .  |  :  .  |  :  Identical
[10:52:46.500] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:46.501] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:46.501] |  :  .  |  :  .  |  List of future strategies:
[10:52:46.501] |  :  .  |  :  .  |  1. sequential:
[10:52:46.501] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:46.501] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:46.501] |  :  .  |  :  .  |     - call: plan(sequential)
[10:52:46.501] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:46.501] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.501] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.501] |  :  .  |  SequentialFuture started (and completed)
[10:52:46.502] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:46.502] |  :  Launching futures ... done
[10:52:46.502] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:46.502] |  Using SequentialFutureBackend ... done
[10:52:46.502] run() for Future (‘SequentialFuture’) ... done
Future assignment evaluated
b = 2

> cat(sprintf("a = %s\n", a))
Delayed assignment evaluated
a = 1

> stopifnot(identical(a, 1))

> stopifnot(identical(b, 2))

> message("*** futureAssign() - sequential w/ lazy evaluation ... DONE")
*** futureAssign() - sequential w/ lazy evaluation ... DONE

> message("*** futureAssign() - lazy = TRUE / FALSE ...")
*** futureAssign() - lazy = TRUE / FALSE ...

> for (cores in 1:availCores) {
+     message(sprintf("Testing with %d cores ...", cores))
+     options(mc.cores = cores)
+     for (strategy in supp .... [TRUNCATED] 
Testing with 1 cores ...
*** futureAssign() with ‘sequential’ futures ...
[10:52:46.524] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.525] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:52:46.525] |  :  all.equal() for FutureStrategyList ...
[10:52:46.525] |  :  .  New stack:
[10:52:46.525] |  :  .  List of 1
[10:52:46.525] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.525] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.525] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.525] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.525] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.525] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:46.525] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.527] |  :  .  Old stack:
[10:52:46.527] |  :  .  List of 1
[10:52:46.527] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.527] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.527] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.527] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.527] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.527] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:52:46.527] |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.527] |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.527] |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.527] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.530] |  :  .  Not identical
[10:52:46.530] |  :  .  all.equal() for future ...
[10:52:46.530] |  :  .  |  List of 2
[10:52:46.530] |  :  .  |   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.530] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.530] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.530] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.530] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.530] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:46.530] |  :  .  |   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.530] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.530] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.530] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.530] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.530] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:46.530] |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.530] |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.530] |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.535] |  :  .  all.equal() for future ... done
[10:52:46.535] |  :  all.equal() for FutureStrategyList ... done
[10:52:46.535] |  :  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:46.535] |  :  List of future strategies:
[10:52:46.535] |  :  1. sequential:
[10:52:46.535] |  :     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:46.535] |  :     - tweaked: FALSE
[10:52:46.535] |  :     - call: plan(sequential)
[10:52:46.535] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:52:46.535] plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.535] getGlobalsAndPackages() ...
[10:52:46.536] |  Searching for globals ...
[10:52:46.536] |  :  globals found: [1] ‘{’
[10:52:46.536] |  Searching for globals ... DONE
[10:52:46.536] |  Resolving globals: FALSE
[10:52:46.537] |  Search for packages associated with the globals ...
[10:52:46.537] |  :  Packages associated with globals: [1] ‘base’
[10:52:46.538] |  :  Packages: [1] ‘base’
[10:52:46.538] |  Search for packages associated with the globals ... DONE
[10:52:46.538] |  Packages after dropping 'base': [0] 
[10:52:46.538] |  globals: [0] 
[10:52:46.538] |  packages: [0] 
[10:52:46.538] getGlobalsAndPackages() ... done
[10:52:46.538] run() for Future (‘Future’) ...
[10:52:46.538] |  state: ‘created’
[10:52:46.539] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.539] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.539] |  Using SequentialFutureBackend ...
[10:52:46.539] |  :  Launching futures ...
[10:52:46.539] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:46.539] |  :  .  |  getFutureData() ...
[10:52:46.539] |  :  .  |  :  getFutureCore() ...
[10:52:46.539] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:46.539] |  :  .  |  :  getFutureCore() ... done
[10:52:46.539] |  :  .  |  :  getFutureCapture() ...
[10:52:46.540] |  :  .  |  :  getFutureCapture() ... done
[10:52:46.540] |  :  .  |  :  getFutureContext() ...
[10:52:46.540] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.540] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:46.540] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.540] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:46.540] |  :  .  |  :  getFutureContext() ... done
[10:52:46.540] |  :  .  |  getFutureData() ... done
[10:52:46.540] |  :  .  |  attachPackages() ...
[10:52:46.540] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:46.541] |  :  .  |  attachPackages() ... DONE
[10:52:46.541] |  :  .  |  attachPackages() ...
[10:52:46.541] |  :  .  |  :  packages: [n=0] 
[10:52:46.541] |  :  .  |  attachPackages() ... DONE
[10:52:46.541] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.541] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:46.541] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.542] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.542] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:46.542] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:46.542] |  :  .  |  :  .  |  New stack:
[10:52:46.542] |  :  .  |  :  .  |  List of 1
[10:52:46.542] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.542] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.542] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.542] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.542] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.542] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.542] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.544] |  :  .  |  :  .  |  Old stack:
[10:52:46.544] |  :  .  |  :  .  |  List of 1
[10:52:46.544] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.544] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.544] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.544] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.544] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.544] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:46.544] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.544] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.544] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.544] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.547] |  :  .  |  :  .  |  Not identical
[10:52:46.547] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:46.547] |  :  .  |  :  .  |  :  List of 2
[10:52:46.547] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.547] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.547] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.547] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.547] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.547] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.547] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.547] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.547] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.547] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.547] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.547] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:46.547] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.547] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.547] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.551] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:46.552] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:46.552] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:46.552] |  :  .  |  :  .  List of future strategies:
[10:52:46.552] |  :  .  |  :  .  1. sequential:
[10:52:46.552] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:46.552] |  :  .  |  :  .     - tweaked: FALSE
[10:52:46.552] |  :  .  |  :  .     - call: plan(sequential)
[10:52:46.552] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:46.552] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.554] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.554] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.554] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:46.554] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:46.554] |  :  .  |  :  .  |  :  New stack:
[10:52:46.554] |  :  .  |  :  .  |  :  List of 1
[10:52:46.554] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.554] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.554] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.554] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.554] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.554] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:46.554] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.554] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.554] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.554] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.557] |  :  .  |  :  .  |  :  Old stack:
[10:52:46.557] |  :  .  |  :  .  |  :  List of 1
[10:52:46.557] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.557] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.557] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.557] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.557] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.557] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:46.557] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.557] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.557] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.557] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.561] |  :  .  |  :  .  |  :  Identical
[10:52:46.561] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:46.561] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:46.561] |  :  .  |  :  .  |  List of future strategies:
[10:52:46.561] |  :  .  |  :  .  |  1. sequential:
[10:52:46.561] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:46.561] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:46.561] |  :  .  |  :  .  |     - call: plan(sequential)
[10:52:46.561] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:46.561] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.561] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.562] |  :  .  |  SequentialFuture started (and completed)
[10:52:46.562] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:46.562] |  :  Launching futures ... done
[10:52:46.562] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:46.562] |  Using SequentialFutureBackend ... done
[10:52:46.562] run() for Future (‘SequentialFuture’) ... done
[10:52:46.562] getGlobalsAndPackages() ...
[10:52:46.562] |  Searching for globals ...
[10:52:46.563] |  :  globals found: [1] ‘{’
[10:52:46.563] |  Searching for globals ... DONE
[10:52:46.563] |  Resolving globals: FALSE
[10:52:46.563] |  Search for packages associated with the globals ...
[10:52:46.563] |  :  Packages associated with globals: [1] ‘base’
[10:52:46.564] |  :  Packages: [1] ‘base’
[10:52:46.564] |  Search for packages associated with the globals ... DONE
[10:52:46.564] |  Packages after dropping 'base': [0] 
[10:52:46.564] |  globals: [0] 
[10:52:46.564] |  packages: [0] 
[10:52:46.564] getGlobalsAndPackages() ... done
[10:52:46.564] run() for Future (‘Future’) ...
[10:52:46.564] |  state: ‘created’
[10:52:46.564] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.565] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.565] |  Using SequentialFutureBackend ...
[10:52:46.565] |  :  Launching futures ...
[10:52:46.565] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:46.565] |  :  .  |  getFutureData() ...
[10:52:46.565] |  :  .  |  :  getFutureCore() ...
[10:52:46.565] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:46.565] |  :  .  |  :  getFutureCore() ... done
[10:52:46.565] |  :  .  |  :  getFutureCapture() ...
[10:52:46.565] |  :  .  |  :  getFutureCapture() ... done
[10:52:46.566] |  :  .  |  :  getFutureContext() ...
[10:52:46.566] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.566] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:46.566] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.566] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:46.566] |  :  .  |  :  getFutureContext() ... done
[10:52:46.566] |  :  .  |  getFutureData() ... done
[10:52:46.566] |  :  .  |  attachPackages() ...
[10:52:46.566] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:46.566] |  :  .  |  attachPackages() ... DONE
[10:52:46.567] |  :  .  |  attachPackages() ...
[10:52:46.567] |  :  .  |  :  packages: [n=0] 
[10:52:46.567] |  :  .  |  attachPackages() ... DONE
[10:52:46.567] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.567] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:46.567] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.567] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.568] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:46.568] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:46.568] |  :  .  |  :  .  |  New stack:
[10:52:46.568] |  :  .  |  :  .  |  List of 1
[10:52:46.568] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.568] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.568] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.568] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.568] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.568] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.568] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.570] |  :  .  |  :  .  |  Old stack:
[10:52:46.570] |  :  .  |  :  .  |  List of 1
[10:52:46.570] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.570] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.570] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.570] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.570] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.570] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:46.570] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.570] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.570] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.570] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.573] |  :  .  |  :  .  |  Not identical
[10:52:46.573] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:46.573] |  :  .  |  :  .  |  :  List of 2
[10:52:46.573] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.573] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.573] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.573] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.573] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.573] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.573] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.573] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.573] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.573] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.573] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.573] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:46.573] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.573] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.573] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.577] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:46.578] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:46.578] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:46.578] |  :  .  |  :  .  List of future strategies:
[10:52:46.578] |  :  .  |  :  .  1. sequential:
[10:52:46.578] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:46.578] |  :  .  |  :  .     - tweaked: FALSE
[10:52:46.578] |  :  .  |  :  .     - call: plan(sequential)
[10:52:46.579] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:46.579] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.580] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.581] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.581] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:46.581] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:46.581] |  :  .  |  :  .  |  :  New stack:
[10:52:46.581] |  :  .  |  :  .  |  :  List of 1
[10:52:46.581] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.581] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.581] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.581] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.581] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.581] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:46.581] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.581] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.581] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.581] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.584] |  :  .  |  :  .  |  :  Old stack:
[10:52:46.584] |  :  .  |  :  .  |  :  List of 1
[10:52:46.584] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.584] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.584] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.584] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.584] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.584] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:46.584] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.584] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.584] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.584] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.587] |  :  .  |  :  .  |  :  Identical
[10:52:46.587] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:46.587] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:46.587] |  :  .  |  :  .  |  List of future strategies:
[10:52:46.587] |  :  .  |  :  .  |  1. sequential:
[10:52:46.587] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:46.587] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:46.587] |  :  .  |  :  .  |     - call: plan(sequential)
[10:52:46.587] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:46.587] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.588] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.588] |  :  .  |  SequentialFuture started (and completed)
[10:52:46.588] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:46.588] |  :  Launching futures ... done
[10:52:46.588] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:46.588] |  Using SequentialFutureBackend ... done
[10:52:46.588] run() for Future (‘SequentialFuture’) ... done
u$a = 2
v$a = 4
[10:52:46.589] getGlobalsAndPackages() ...
[10:52:46.589] |  Searching for globals ...
[10:52:46.590] |  :  globals found: [3] ‘{’, ‘*’, ‘a’
[10:52:46.590] |  Searching for globals ... DONE
[10:52:46.590] |  Resolving globals: FALSE
[10:52:46.590] |  Search for packages associated with the globals ...
[10:52:46.590] |  :  Packages associated with globals: [1] ‘base’
[10:52:46.590] |  :  Packages: [1] ‘base’
[10:52:46.590] |  Search for packages associated with the globals ... DONE
[10:52:46.591] |  Packages after dropping 'base': [0] 
[10:52:46.591] |  globals: [1] ‘a’
[10:52:46.591] |  packages: [0] 
[10:52:46.591] getGlobalsAndPackages() ... done
[10:52:46.591] run() for Future (‘Future’) ...
[10:52:46.591] |  state: ‘created’
[10:52:46.591] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.591] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.591] |  Using SequentialFutureBackend ...
[10:52:46.591] |  :  Launching futures ...
[10:52:46.592] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:46.592] |  :  .  |  getFutureData() ...
[10:52:46.592] |  :  .  |  :  getFutureCore() ...
[10:52:46.592] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:46.592] |  :  .  |  :  getFutureCore() ... done
[10:52:46.592] |  :  .  |  :  getFutureCapture() ...
[10:52:46.592] |  :  .  |  :  getFutureCapture() ... done
[10:52:46.592] |  :  .  |  :  getFutureContext() ...
[10:52:46.592] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.592] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:46.593] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.593] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:46.593] |  :  .  |  :  getFutureContext() ... done
[10:52:46.593] |  :  .  |  getFutureData() ... done
[10:52:46.593] |  :  .  |  attachPackages() ...
[10:52:46.593] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:46.593] |  :  .  |  attachPackages() ... DONE
[10:52:46.593] |  :  .  |  attachPackages() ...
[10:52:46.593] |  :  .  |  :  packages: [n=0] 
[10:52:46.593] |  :  .  |  attachPackages() ... DONE
[10:52:46.594] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.594] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:46.594] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.594] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.594] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:46.594] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:46.595] |  :  .  |  :  .  |  New stack:
[10:52:46.595] |  :  .  |  :  .  |  List of 1
[10:52:46.595] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.595] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.595] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.595] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.595] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.595] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.595] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.597] |  :  .  |  :  .  |  Old stack:
[10:52:46.597] |  :  .  |  :  .  |  List of 1
[10:52:46.597] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.597] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.597] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.597] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.597] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.597] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:46.597] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.597] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.597] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.597] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.600] |  :  .  |  :  .  |  Not identical
[10:52:46.601] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:46.601] |  :  .  |  :  .  |  :  List of 2
[10:52:46.601] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.601] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.601] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.601] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.601] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.601] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.601] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.601] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.601] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.601] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.601] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.601] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:46.601] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.601] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.601] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.605] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:46.605] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:46.605] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:46.605] |  :  .  |  :  .  List of future strategies:
[10:52:46.605] |  :  .  |  :  .  1. sequential:
[10:52:46.605] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:46.605] |  :  .  |  :  .     - tweaked: FALSE
[10:52:46.605] |  :  .  |  :  .     - call: plan(sequential)
[10:52:46.606] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:46.606] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.606] |  :  .  |  assign_globals() ...
[10:52:46.606] |  :  .  |  List of 1
[10:52:46.606] |  :  .  |   $ a: num 1
[10:52:46.606] |  :  .  |   - attr(*, "where")=List of 1
[10:52:46.606] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:52:46.606] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:46.606] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:52:46.606] |  :  .  |   - attr(*, "total_size")= num NA
[10:52:46.606] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:52:46.609] |  :  .  |  - copied ‘a’ to environment
[10:52:46.609] |  :  .  |  assign_globals() ... done
[10:52:46.610] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.610] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.610] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:46.611] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:46.611] |  :  .  |  :  .  |  :  New stack:
[10:52:46.611] |  :  .  |  :  .  |  :  List of 1
[10:52:46.611] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.611] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.611] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.611] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.611] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.611] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:46.611] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.611] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.611] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.611] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.613] |  :  .  |  :  .  |  :  Old stack:
[10:52:46.614] |  :  .  |  :  .  |  :  List of 1
[10:52:46.614] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.614] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.614] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.614] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.614] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.614] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:46.614] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.614] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.614] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.614] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.616] |  :  .  |  :  .  |  :  Identical
[10:52:46.616] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:46.616] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:46.617] |  :  .  |  :  .  |  List of future strategies:
[10:52:46.617] |  :  .  |  :  .  |  1. sequential:
[10:52:46.617] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:46.617] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:46.617] |  :  .  |  :  .  |     - call: plan(sequential)
[10:52:46.617] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:46.617] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.617] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.617] |  :  .  |  SequentialFuture started (and completed)
[10:52:46.617] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:46.618] |  :  Launching futures ... done
[10:52:46.618] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:46.618] |  Using SequentialFutureBackend ... done
[10:52:46.618] run() for Future (‘SequentialFuture’) ... done
[10:52:46.618] getGlobalsAndPackages() ...
[10:52:46.618] |  Searching for globals ...
[10:52:46.619] |  :  globals found: [3] ‘{’, ‘*’, ‘a’
[10:52:46.619] |  Searching for globals ... DONE
[10:52:46.619] |  Resolving globals: FALSE
[10:52:46.620] |  Search for packages associated with the globals ...
[10:52:46.620] |  :  Packages associated with globals: [1] ‘base’
[10:52:46.621] |  :  Packages: [1] ‘base’
[10:52:46.621] |  Search for packages associated with the globals ... DONE
[10:52:46.621] |  Packages after dropping 'base': [0] 
[10:52:46.621] |  globals: [1] ‘a’
[10:52:46.621] |  packages: [0] 
[10:52:46.621] getGlobalsAndPackages() ... done
[10:52:46.621] run() for Future (‘Future’) ...
[10:52:46.621] |  state: ‘created’
[10:52:46.622] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.622] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.622] |  Using SequentialFutureBackend ...
[10:52:46.622] |  :  Launching futures ...
[10:52:46.622] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:46.622] |  :  .  |  getFutureData() ...
[10:52:46.622] |  :  .  |  :  getFutureCore() ...
[10:52:46.622] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:46.622] |  :  .  |  :  getFutureCore() ... done
[10:52:46.622] |  :  .  |  :  getFutureCapture() ...
[10:52:46.623] |  :  .  |  :  getFutureCapture() ... done
[10:52:46.623] |  :  .  |  :  getFutureContext() ...
[10:52:46.623] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.623] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:46.623] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.623] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:46.623] |  :  .  |  :  getFutureContext() ... done
[10:52:46.623] |  :  .  |  getFutureData() ... done
[10:52:46.623] |  :  .  |  attachPackages() ...
[10:52:46.623] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:46.624] |  :  .  |  attachPackages() ... DONE
[10:52:46.624] |  :  .  |  attachPackages() ...
[10:52:46.624] |  :  .  |  :  packages: [n=0] 
[10:52:46.624] |  :  .  |  attachPackages() ... DONE
[10:52:46.624] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.624] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:46.624] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.625] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.625] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:46.625] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:46.625] |  :  .  |  :  .  |  New stack:
[10:52:46.625] |  :  .  |  :  .  |  List of 1
[10:52:46.625] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.625] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.625] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.625] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.625] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.625] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.625] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.627] |  :  .  |  :  .  |  Old stack:
[10:52:46.627] |  :  .  |  :  .  |  List of 1
[10:52:46.627] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.627] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.627] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.627] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.627] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.627] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:46.627] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.627] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.627] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.627] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.630] |  :  .  |  :  .  |  Not identical
[10:52:46.630] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:46.630] |  :  .  |  :  .  |  :  List of 2
[10:52:46.630] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.630] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.630] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.630] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.630] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.630] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.630] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.630] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.630] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.630] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.630] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.630] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:46.630] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.630] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.630] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.634] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:46.635] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:46.635] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:46.635] |  :  .  |  :  .  List of future strategies:
[10:52:46.635] |  :  .  |  :  .  1. sequential:
[10:52:46.635] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:46.635] |  :  .  |  :  .     - tweaked: FALSE
[10:52:46.635] |  :  .  |  :  .     - call: plan(sequential)
[10:52:46.635] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:46.635] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.635] |  :  .  |  assign_globals() ...
[10:52:46.635] |  :  .  |  List of 1
[10:52:46.635] |  :  .  |   $ a: num 1
[10:52:46.635] |  :  .  |   - attr(*, "where")=List of 1
[10:52:46.635] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:52:46.635] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:46.635] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:52:46.635] |  :  .  |   - attr(*, "total_size")= num NA
[10:52:46.635] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:52:46.638] |  :  .  |  - copied ‘a’ to environment
[10:52:46.638] |  :  .  |  assign_globals() ... done
[10:52:46.639] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.639] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.639] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:46.640] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:46.640] |  :  .  |  :  .  |  :  New stack:
[10:52:46.641] |  :  .  |  :  .  |  :  List of 1
[10:52:46.641] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.641] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.641] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.641] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.641] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.641] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:46.641] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.641] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.641] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.641] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.643] |  :  .  |  :  .  |  :  Old stack:
[10:52:46.643] |  :  .  |  :  .  |  :  List of 1
[10:52:46.643] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.643] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.643] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.643] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.643] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.643] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:46.643] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.643] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.643] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.643] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.646] |  :  .  |  :  .  |  :  Identical
[10:52:46.646] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:46.646] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:46.646] |  :  .  |  :  .  |  List of future strategies:
[10:52:46.646] |  :  .  |  :  .  |  1. sequential:
[10:52:46.646] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:46.646] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:46.646] |  :  .  |  :  .  |     - call: plan(sequential)
[10:52:46.647] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:46.647] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.647] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.647] |  :  .  |  SequentialFuture started (and completed)
[10:52:46.647] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:46.648] |  :  Launching futures ... done
[10:52:46.648] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:46.648] |  Using SequentialFutureBackend ... done
[10:52:46.648] run() for Future (‘SequentialFuture’) ... done
[10:52:46.648] getGlobalsAndPackages() ...
[10:52:46.648] |  Searching for globals ...
[10:52:46.649] |  :  globals found: [3] ‘{’, ‘*’, ‘a’
[10:52:46.649] |  Searching for globals ... DONE
[10:52:46.649] |  Resolving globals: FALSE
[10:52:46.649] |  Search for packages associated with the globals ...
[10:52:46.649] |  :  Packages associated with globals: [1] ‘base’
[10:52:46.650] |  :  Packages: [1] ‘base’
[10:52:46.650] |  Search for packages associated with the globals ... DONE
[10:52:46.650] |  Packages after dropping 'base': [0] 
[10:52:46.650] |  globals: [1] ‘a’
[10:52:46.650] |  packages: [0] 
[10:52:46.650] getGlobalsAndPackages() ... done
[10:52:46.650] run() for Future (‘Future’) ...
[10:52:46.650] |  state: ‘created’
[10:52:46.651] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.651] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.651] |  Using SequentialFutureBackend ...
[10:52:46.651] |  :  Launching futures ...
[10:52:46.651] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:46.651] |  :  .  |  getFutureData() ...
[10:52:46.651] |  :  .  |  :  getFutureCore() ...
[10:52:46.651] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:46.651] |  :  .  |  :  getFutureCore() ... done
[10:52:46.651] |  :  .  |  :  getFutureCapture() ...
[10:52:46.652] |  :  .  |  :  getFutureCapture() ... done
[10:52:46.652] |  :  .  |  :  getFutureContext() ...
[10:52:46.652] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.652] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:46.652] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.652] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:46.652] |  :  .  |  :  getFutureContext() ... done
[10:52:46.652] |  :  .  |  getFutureData() ... done
[10:52:46.652] |  :  .  |  attachPackages() ...
[10:52:46.652] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:46.653] |  :  .  |  attachPackages() ... DONE
[10:52:46.653] |  :  .  |  attachPackages() ...
[10:52:46.653] |  :  .  |  :  packages: [n=0] 
[10:52:46.653] |  :  .  |  attachPackages() ... DONE
[10:52:46.653] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.653] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:46.653] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.654] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.654] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:46.654] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:46.654] |  :  .  |  :  .  |  New stack:
[10:52:46.654] |  :  .  |  :  .  |  List of 1
[10:52:46.654] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.654] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.654] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.654] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.654] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.654] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.654] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.656] |  :  .  |  :  .  |  Old stack:
[10:52:46.656] |  :  .  |  :  .  |  List of 1
[10:52:46.656] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.656] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.656] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.656] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.656] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.656] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:46.656] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.656] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.656] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.656] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.659] |  :  .  |  :  .  |  Not identical
[10:52:46.659] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:46.659] |  :  .  |  :  .  |  :  List of 2
[10:52:46.659] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.659] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.659] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.659] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.659] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.659] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.659] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.659] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.659] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.659] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.659] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.659] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:46.659] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.659] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.659] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.664] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:46.664] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:46.664] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:46.665] |  :  .  |  :  .  List of future strategies:
[10:52:46.665] |  :  .  |  :  .  1. sequential:
[10:52:46.665] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:46.665] |  :  .  |  :  .     - tweaked: FALSE
[10:52:46.665] |  :  .  |  :  .     - call: plan(sequential)
[10:52:46.665] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:46.665] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.665] |  :  .  |  assign_globals() ...
[10:52:46.665] |  :  .  |  List of 1
[10:52:46.665] |  :  .  |   $ a: num 1
[10:52:46.665] |  :  .  |   - attr(*, "where")=List of 1
[10:52:46.665] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:52:46.665] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:46.665] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:52:46.665] |  :  .  |   - attr(*, "total_size")= num NA
[10:52:46.665] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:52:46.668] |  :  .  |  - copied ‘a’ to environment
[10:52:46.668] |  :  .  |  assign_globals() ... done
[10:52:46.669] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.669] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.669] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:46.669] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:46.670] |  :  .  |  :  .  |  :  New stack:
[10:52:46.670] |  :  .  |  :  .  |  :  List of 1
[10:52:46.670] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.670] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.670] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.670] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.670] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.670] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:46.670] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.670] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.670] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.670] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.672] |  :  .  |  :  .  |  :  Old stack:
[10:52:46.672] |  :  .  |  :  .  |  :  List of 1
[10:52:46.672] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.672] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.672] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.672] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.672] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.672] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:46.672] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.672] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.672] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.672] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.675] |  :  .  |  :  .  |  :  Identical
[10:52:46.675] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:46.675] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:46.675] |  :  .  |  :  .  |  List of future strategies:
[10:52:46.675] |  :  .  |  :  .  |  1. sequential:
[10:52:46.675] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:46.675] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:46.675] |  :  .  |  :  .  |     - call: plan(sequential)
[10:52:46.676] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:46.676] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.676] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.676] |  :  .  |  SequentialFuture started (and completed)
[10:52:46.676] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:46.677] |  :  Launching futures ... done
[10:52:46.677] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:46.677] |  Using SequentialFutureBackend ... done
[10:52:46.677] run() for Future (‘SequentialFuture’) ... done
[10:52:46.677] getGlobalsAndPackages() ...
[10:52:46.677] |  Searching for globals ...
[10:52:46.678] |  :  globals found: [3] ‘{’, ‘*’, ‘a’
[10:52:46.678] |  Searching for globals ... DONE
[10:52:46.678] |  Resolving globals: FALSE
[10:52:46.678] |  Search for packages associated with the globals ...
[10:52:46.678] |  :  Packages associated with globals: [1] ‘base’
[10:52:46.679] |  :  Packages: [1] ‘base’
[10:52:46.679] |  Search for packages associated with the globals ... DONE
[10:52:46.679] |  Packages after dropping 'base': [0] 
[10:52:46.679] |  globals: [1] ‘a’
[10:52:46.679] |  packages: [0] 
[10:52:46.679] getGlobalsAndPackages() ... done
[10:52:46.679] run() for Future (‘Future’) ...
[10:52:46.679] |  state: ‘created’
[10:52:46.680] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.681] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.681] |  Using SequentialFutureBackend ...
[10:52:46.681] |  :  Launching futures ...
[10:52:46.681] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:46.681] |  :  .  |  getFutureData() ...
[10:52:46.681] |  :  .  |  :  getFutureCore() ...
[10:52:46.681] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:46.681] |  :  .  |  :  getFutureCore() ... done
[10:52:46.681] |  :  .  |  :  getFutureCapture() ...
[10:52:46.681] |  :  .  |  :  getFutureCapture() ... done
[10:52:46.681] |  :  .  |  :  getFutureContext() ...
[10:52:46.682] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.682] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:46.682] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.682] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:46.682] |  :  .  |  :  getFutureContext() ... done
[10:52:46.682] |  :  .  |  getFutureData() ... done
[10:52:46.682] |  :  .  |  attachPackages() ...
[10:52:46.682] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:46.682] |  :  .  |  attachPackages() ... DONE
[10:52:46.683] |  :  .  |  attachPackages() ...
[10:52:46.683] |  :  .  |  :  packages: [n=0] 
[10:52:46.683] |  :  .  |  attachPackages() ... DONE
[10:52:46.683] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.683] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:46.683] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.684] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.684] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:46.684] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:46.684] |  :  .  |  :  .  |  New stack:
[10:52:46.684] |  :  .  |  :  .  |  List of 1
[10:52:46.684] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.684] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.684] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.684] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.684] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.684] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.684] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.686] |  :  .  |  :  .  |  Old stack:
[10:52:46.686] |  :  .  |  :  .  |  List of 1
[10:52:46.686] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.686] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.686] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.686] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.686] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.686] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:46.686] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.686] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.686] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.686] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.689] |  :  .  |  :  .  |  Not identical
[10:52:46.689] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:46.689] |  :  .  |  :  .  |  :  List of 2
[10:52:46.689] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.689] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.689] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.689] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.689] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.689] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.689] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.689] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.689] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.689] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.689] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.689] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:46.689] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.689] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.689] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.693] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:46.693] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:46.694] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:46.694] |  :  .  |  :  .  List of future strategies:
[10:52:46.694] |  :  .  |  :  .  1. sequential:
[10:52:46.694] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:46.694] |  :  .  |  :  .     - tweaked: FALSE
[10:52:46.694] |  :  .  |  :  .     - call: plan(sequential)
[10:52:46.694] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:46.694] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.694] |  :  .  |  assign_globals() ...
[10:52:46.694] |  :  .  |  List of 1
[10:52:46.694] |  :  .  |   $ a: num 1
[10:52:46.694] |  :  .  |   - attr(*, "where")=List of 1
[10:52:46.694] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:52:46.694] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:46.694] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:52:46.694] |  :  .  |   - attr(*, "total_size")= num NA
[10:52:46.694] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:52:46.697] |  :  .  |  - copied ‘a’ to environment
[10:52:46.697] |  :  .  |  assign_globals() ... done
[10:52:46.698] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.699] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.699] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:46.699] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:46.699] |  :  .  |  :  .  |  :  New stack:
[10:52:46.699] |  :  .  |  :  .  |  :  List of 1
[10:52:46.699] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.699] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.699] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.699] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.699] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.699] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:46.699] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.699] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.699] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.699] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.703] |  :  .  |  :  .  |  :  Old stack:
[10:52:46.703] |  :  .  |  :  .  |  :  List of 1
[10:52:46.703] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.703] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.703] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.703] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.703] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.703] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:46.703] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.703] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.703] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.703] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.706] |  :  .  |  :  .  |  :  Identical
[10:52:46.706] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:46.706] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:46.706] |  :  .  |  :  .  |  List of future strategies:
[10:52:46.706] |  :  .  |  :  .  |  1. sequential:
[10:52:46.706] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:46.706] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:46.706] |  :  .  |  :  .  |     - call: plan(sequential)
[10:52:46.707] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:46.707] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.707] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.707] |  :  .  |  SequentialFuture started (and completed)
[10:52:46.707] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:46.707] |  :  Launching futures ... done
[10:52:46.707] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:46.708] |  Using SequentialFutureBackend ... done
[10:52:46.708] run() for Future (‘SequentialFuture’) ... done
[10:52:46.708] getGlobalsAndPackages() ...
[10:52:46.708] |  Searching for globals ...
[10:52:46.709] |  :  globals found: [3] ‘{’, ‘*’, ‘a’
[10:52:46.709] |  Searching for globals ... DONE
[10:52:46.709] |  Resolving globals: FALSE
[10:52:46.709] |  Search for packages associated with the globals ...
[10:52:46.709] |  :  Packages associated with globals: [1] ‘base’
[10:52:46.710] |  :  Packages: [1] ‘base’
[10:52:46.710] |  Search for packages associated with the globals ... DONE
[10:52:46.710] |  Packages after dropping 'base': [0] 
[10:52:46.710] |  globals: [1] ‘a’
[10:52:46.710] |  packages: [0] 
[10:52:46.710] getGlobalsAndPackages() ... done
[10:52:46.710] run() for Future (‘Future’) ...
[10:52:46.710] |  state: ‘created’
[10:52:46.711] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.711] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.711] |  Using SequentialFutureBackend ...
[10:52:46.711] |  :  Launching futures ...
[10:52:46.711] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:46.711] |  :  .  |  getFutureData() ...
[10:52:46.711] |  :  .  |  :  getFutureCore() ...
[10:52:46.711] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:46.711] |  :  .  |  :  getFutureCore() ... done
[10:52:46.711] |  :  .  |  :  getFutureCapture() ...
[10:52:46.712] |  :  .  |  :  getFutureCapture() ... done
[10:52:46.712] |  :  .  |  :  getFutureContext() ...
[10:52:46.712] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.712] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:46.712] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.712] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:46.712] |  :  .  |  :  getFutureContext() ... done
[10:52:46.712] |  :  .  |  getFutureData() ... done
[10:52:46.712] |  :  .  |  attachPackages() ...
[10:52:46.713] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:46.713] |  :  .  |  attachPackages() ... DONE
[10:52:46.713] |  :  .  |  attachPackages() ...
[10:52:46.713] |  :  .  |  :  packages: [n=0] 
[10:52:46.713] |  :  .  |  attachPackages() ... DONE
[10:52:46.713] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.713] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:46.714] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.714] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.714] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:46.714] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:46.714] |  :  .  |  :  .  |  New stack:
[10:52:46.714] |  :  .  |  :  .  |  List of 1
[10:52:46.714] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.714] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.714] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.714] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.714] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.714] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.714] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.716] |  :  .  |  :  .  |  Old stack:
[10:52:46.716] |  :  .  |  :  .  |  List of 1
[10:52:46.716] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.716] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.716] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.716] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.716] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.716] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:46.716] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.716] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.716] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.716] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.719] |  :  .  |  :  .  |  Not identical
[10:52:46.719] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:46.719] |  :  .  |  :  .  |  :  List of 2
[10:52:46.719] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.719] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.719] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.719] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.719] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.719] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.719] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.719] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.719] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.719] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.719] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.719] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:46.719] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.719] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.719] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.725] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:46.725] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:46.725] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:46.725] |  :  .  |  :  .  List of future strategies:
[10:52:46.725] |  :  .  |  :  .  1. sequential:
[10:52:46.725] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:46.725] |  :  .  |  :  .     - tweaked: FALSE
[10:52:46.725] |  :  .  |  :  .     - call: plan(sequential)
[10:52:46.726] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:46.726] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.726] |  :  .  |  assign_globals() ...
[10:52:46.726] |  :  .  |  List of 1
[10:52:46.726] |  :  .  |   $ a: num 1
[10:52:46.726] |  :  .  |   - attr(*, "where")=List of 1
[10:52:46.726] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:52:46.726] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:46.726] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:52:46.726] |  :  .  |   - attr(*, "total_size")= num NA
[10:52:46.726] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:52:46.728] |  :  .  |  - copied ‘a’ to environment
[10:52:46.729] |  :  .  |  assign_globals() ... done
[10:52:46.730] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.730] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.730] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:46.730] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:46.730] |  :  .  |  :  .  |  :  New stack:
[10:52:46.731] |  :  .  |  :  .  |  :  List of 1
[10:52:46.731] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.731] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.731] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.731] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.731] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.731] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:46.731] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.731] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.731] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.731] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.733] |  :  .  |  :  .  |  :  Old stack:
[10:52:46.733] |  :  .  |  :  .  |  :  List of 1
[10:52:46.733] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.733] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.733] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.733] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.733] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.733] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:46.733] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.733] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.733] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.733] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.736] |  :  .  |  :  .  |  :  Identical
[10:52:46.736] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:46.736] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:46.737] |  :  .  |  :  .  |  List of future strategies:
[10:52:46.737] |  :  .  |  :  .  |  1. sequential:
[10:52:46.737] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:46.737] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:46.737] |  :  .  |  :  .  |     - call: plan(sequential)
[10:52:46.737] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:46.737] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.737] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.737] |  :  .  |  SequentialFuture started (and completed)
[10:52:46.737] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:46.738] |  :  Launching futures ... done
[10:52:46.738] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:46.738] |  Using SequentialFutureBackend ... done
[10:52:46.738] run() for Future (‘SequentialFuture’) ... done
*** futureAssign() with ‘sequential’ futures ... DONE
Testing with 1 cores ... DONE
Testing with 2 cores ...
*** futureAssign() with ‘multicore’ futures ...
[10:52:46.738] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.739] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:52:46.739] |  :  all.equal() for FutureStrategyList ...
[10:52:46.739] |  :  .  New stack:
[10:52:46.739] |  :  .  List of 1
[10:52:46.739] |  :  .   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:46.739] |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:46.739] |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:46.739] |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.739] |  :  .      ...)  
[10:52:46.739] |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.739] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.739] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:46.739] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.742] |  :  .  Old stack:
[10:52:46.742] |  :  .  List of 1
[10:52:46.742] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.742] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.742] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.742] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.742] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.742] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:52:46.742] |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.742] |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.742] |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.742] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.745] |  :  .  Not identical
[10:52:46.745] |  :  .  all.equal() for future ...
[10:52:46.745] |  :  .  |  List of 2
[10:52:46.745] |  :  .  |   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:46.745] |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:46.745] |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:46.745] |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.745] |  :  .  |      ...)  
[10:52:46.745] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.745] |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.745] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:46.745] |  :  .  |   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.745] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.745] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.745] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.745] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.745] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:46.745] |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854e5409c0> 
[10:52:46.745] |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.745] |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.749] |  :  .  |  Formals differ
[10:52:46.749] |  :  .  all.equal() for future ... done
[10:52:46.749] |  :  .  Future strategies differ at level 1
[10:52:46.750] |  :  all.equal() for FutureStrategyList ... done
[10:52:46.750] |  :  plan(): Setting new future strategy stack:
[10:52:46.750] |  :  List of future strategies:
[10:52:46.750] |  :  1. multicore:
[10:52:46.750] |  :     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:46.750] |  :     - tweaked: FALSE
[10:52:46.750] |  :     - call: plan(strategy)
[10:52:46.750] |  :  List of 1
[10:52:46.750] |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:46.750] |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:46.750] |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:46.750] |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.750] |  :      ...)  
[10:52:46.750] |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.750] |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.750] |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:46.750] |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.752] |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:52:46.752] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.752] |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:46.753] |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.753] |  :  .  Legacy shutdown of cluster workers ...
[10:52:46.753] |  :  .  |  Stopping existing cluster ...
[10:52:46.753] |  :  .  |  :  No pre-existing cluster. Skipping
[10:52:46.753] |  :  .  |  Stopping existing cluster ... done
[10:52:46.753] |  :  .  Legacy shutdown of cluster workers ... done
[10:52:46.753] |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:52:46.753] |  :  plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ...
[10:52:46.754] |  :  .  function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:46.754] |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:46.754] |  :  .   - attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:46.754] |  :  .   - attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.754] |  :  .      ...)  
[10:52:46.754] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.754] |  :  .   - attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.754] |  :  .   - attr(*, "call")= language plan(strategy)
[10:52:46.755] |  :  .  init: NULL
[10:52:46.755] |  :  plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ... done
[10:52:46.755] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.755] |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:46.756] |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.756] |  :  Backend function: <‘NULL’>
[10:52:46.757] |  :  Backend: <‘MulticoreFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:46.757] |  :  plan(): nbrOfWorkers() = 2
[10:52:46.758] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:52:46.758] plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.758] getGlobalsAndPackages() ...
[10:52:46.758] |  Searching for globals ...
[10:52:46.759] |  :  globals found: [1] ‘{’
[10:52:46.759] |  Searching for globals ... DONE
[10:52:46.759] |  Resolving globals: FALSE
[10:52:46.759] |  Search for packages associated with the globals ...
[10:52:46.759] |  :  Packages associated with globals: [1] ‘base’
[10:52:46.759] |  :  Packages: [1] ‘base’
[10:52:46.759] |  Search for packages associated with the globals ... DONE
[10:52:46.759] |  Packages after dropping 'base': [0] 
[10:52:46.760] |  globals: [0] 
[10:52:46.760] |  packages: [0] 
[10:52:46.760] getGlobalsAndPackages() ... done
[10:52:46.760] run() for Future (‘Future’) ...
[10:52:46.760] |  state: ‘created’
[10:52:46.760] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.760] |  :  makeFutureBackend(<multicore>) ...
[10:52:46.760] |  :  .  Backend function: <‘NULL’>
[10:52:46.772] |  :  .  Backend: <‘MulticoreFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:46.772] |  :  makeFutureBackend(<multicore>) ... done
[10:52:46.772] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.772] |  Using MulticoreFutureBackend ...
[10:52:46.772] |  :  Launching futures ...
[10:52:46.773] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:46.773] |  :  .  |  getFutureData() ...
[10:52:46.773] |  :  .  |  :  getFutureCore() ...
[10:52:46.773] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:46.773] |  :  .  |  :  getFutureCore() ... done
[10:52:46.773] |  :  .  |  :  getFutureCapture() ...
[10:52:46.773] |  :  .  |  :  getFutureCapture() ... done
[10:52:46.773] |  :  .  |  :  getFutureContext() ...
[10:52:46.773] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.773] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:46.774] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.774] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:46.774] |  :  .  |  :  getFutureContext() ... done
[10:52:46.774] |  :  .  |  getFutureData() ... done
[10:52:46.774] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:46.775] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:46.777] |  :  .  |  MulticoreFuture started
[10:52:46.778] |  :  .  |  attachPackages() ...
[10:52:46.778] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:46.778] |  :  Launching futures ... done
[10:52:46.778] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:46.778] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:46.778] |  :  .  |  attachPackages() ... DONE
[10:52:46.778] |  Using MulticoreFutureBackend ... done
[10:52:46.779] |  :  .  |  attachPackages() ...
[10:52:46.779] run() for Future (‘MulticoreFuture’) ... done
[10:52:46.779] |  :  .  |  :  packages: [n=0] 
[10:52:46.779] |  :  .  |  attachPackages() ... DONE
[10:52:46.779] getGlobalsAndPackages() ...
[10:52:46.779] |  Searching for globals ...
[10:52:46.780] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.780] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:46.780] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.781] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.781] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:46.781] |  :  globals found: [1] ‘{’
[10:52:46.781] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:46.781] |  Searching for globals ... DONE
[10:52:46.782] |  :  .  |  :  .  |  New stack:
[10:52:46.782] |  Resolving globals: FALSE
[10:52:46.782] |  Search for packages associated with the globals ...
[10:52:46.782] |  :  Packages associated with globals: [1] ‘base’
[10:52:46.783] |  :  Packages: [1] ‘base’
[10:52:46.783] |  Search for packages associated with the globals ... DONE
[10:52:46.783] |  Packages after dropping 'base': [0] 
[10:52:46.783] |  globals: [0] 
[10:52:46.783] |  packages: [0] 
[10:52:46.783] getGlobalsAndPackages() ... done
[10:52:46.784] run() for Future (‘Future’) ...
[10:52:46.784] |  state: ‘created’
[10:52:46.784] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.785] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.785] |  Using MulticoreFutureBackend ...
[10:52:46.785] |  :  Launching futures ...
[10:52:46.785] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:46.785] |  :  .  |  getFutureData() ...
[10:52:46.785] |  :  .  |  :  getFutureCore() ...
[10:52:46.786] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:46.782] |  :  .  |  :  .  |  List of 1
[10:52:46.782] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.782] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.782] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.782] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.782] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.782] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.782] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.786] |  :  .  |  :  getFutureCore() ... done
[10:52:46.786] |  :  .  |  :  .  |  Old stack:
[10:52:46.786] |  :  .  |  :  getFutureCapture() ...
[10:52:46.786] |  :  .  |  :  getFutureCapture() ... done
[10:52:46.786] |  :  .  |  :  getFutureContext() ...
[10:52:46.786] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.787] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:46.787] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.787] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:46.787] |  :  .  |  :  getFutureContext() ... done
[10:52:46.787] |  :  .  |  getFutureData() ... done
[10:52:46.787] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:46.788] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:46.786] |  :  .  |  :  .  |  List of 1
[10:52:46.786] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:46.786] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:46.786] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:46.786] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.786] |  :  .  |  :  .  |      ...)  
[10:52:46.786] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.786] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.786] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:46.786] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:46.786] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.786] |  :  .  |  :  .  |      ...)  
[10:52:46.786] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.786] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.793] |  :  .  |  :  .  |  Not identical
[10:52:46.794] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:46.797] |  :  .  |  MulticoreFuture started
[10:52:46.798] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:46.798] |  :  .  |  attachPackages() ...
[10:52:46.798] |  :  Launching futures ... done
[10:52:46.798] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:46.798] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:46.799] |  :  .  |  attachPackages() ... DONE
[10:52:46.799] |  Using MulticoreFutureBackend ... done
[10:52:46.799] |  :  .  |  attachPackages() ...
[10:52:46.799] run() for Future (‘MulticoreFuture’) ... done
[10:52:46.799] |  :  .  |  :  packages: [n=0] 
[10:52:46.800] |  :  .  |  attachPackages() ... DONE
[10:52:46.801] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.794] |  :  .  |  :  .  |  :  List of 2
[10:52:46.794] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.794] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.794] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.794] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.794] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.794] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.794] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:46.794] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:46.794] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:46.794] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.794] |  :  .  |  :  .  |  :      ...)  
[10:52:46.794] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.794] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.794] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:46.794] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:46.794] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.794] |  :  .  |  :  .  |  :      ...)  
[10:52:46.794] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.801] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:46.802] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.802] |  :  .  |  :  .  |  :  Formals differ
[10:52:46.802] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:46.802] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:52:46.802] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:46.803] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:52:46.803] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.803] result() for MulticoreFuture ...
[10:52:46.803] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:46.803] |  :  .  |  :  .  List of future strategies:
[10:52:46.803] |  :  .  |  :  .  1. sequential:
[10:52:46.803] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:46.803] |  :  .  |  :  .     - tweaked: FALSE
[10:52:46.803] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.804] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:46.804] |  :  .  |  :  .  |  New stack:
[10:52:46.804] |  :  .  |  :  .  List of 1
[10:52:46.804] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.804] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.804] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.804] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.804] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.804] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.804] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.807] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:46.807] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:46.807] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.807] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:46.808] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.808] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:52:46.808] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:46.808] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:52:46.808] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:46.804] |  :  .  |  :  .  |  List of 1
[10:52:46.804] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.804] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.804] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.804] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.804] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.804] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.804] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.809] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.809] |  :  .  |  :  .  |  Old stack:
[10:52:46.811] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.812] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.812] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:46.812] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:46.812] |  :  .  |  :  .  |  :  New stack:
[10:52:46.809] |  :  .  |  :  .  |  List of 1
[10:52:46.809] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:46.809] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:46.809] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:46.809] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.809] |  :  .  |  :  .  |      ...)  
[10:52:46.809] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.809] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.809] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:46.809] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:46.809] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.809] |  :  .  |  :  .  |      ...)  
[10:52:46.809] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.809] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.814] |  :  .  |  :  .  |  Not identical
[10:52:46.814] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:46.812] |  :  .  |  :  .  |  :  List of 1
[10:52:46.812] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:46.812] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:46.812] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:46.812] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.812] |  :  .  |  :  .  |  :      ...)  
[10:52:46.812] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.812] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.812] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:46.812] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:46.812] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.812] |  :  .  |  :  .  |  :      ...)  
[10:52:46.812] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.812] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.816] |  :  .  |  :  .  |  :  Old stack:
[10:52:46.816] |  :  .  |  :  .  |  :  List of 1
[10:52:46.816] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.816] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.816] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.816] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.816] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.816] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.816] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.818] |  :  .  |  :  .  |  :  Not identical
[10:52:46.818] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:52:46.814] |  :  .  |  :  .  |  :  List of 2
[10:52:46.814] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.814] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.814] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.814] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.814] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.814] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.814] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:46.814] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:46.814] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:46.814] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.814] |  :  .  |  :  .  |  :      ...)  
[10:52:46.814] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.814] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.814] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:46.814] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:46.814] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.814] |  :  .  |  :  .  |  :      ...)  
[10:52:46.814] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.821] |  :  .  |  :  .  |  :  Formals differ
[10:52:46.822] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:46.822] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:52:46.822] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:46.822] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:52:46.822] |  :  .  |  :  .  List of future strategies:
[10:52:46.822] |  :  .  |  :  .  1. sequential:
[10:52:46.822] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:46.822] |  :  .  |  :  .     - tweaked: FALSE
[10:52:46.822] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.818] |  :  .  |  :  .  |  :  .  List of 2
[10:52:46.818] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:46.818] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:46.818] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:46.818] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.818] |  :  .  |  :  .  |  :  .      ...)  
[10:52:46.818] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.818] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.818] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:46.818] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:46.818] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.818] |  :  .  |  :  .  |  :  .      ...)  
[10:52:46.818] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.818] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.818] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.818] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.818] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.818] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.818] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.825] |  :  .  |  :  .  |  :  .  Formals differ
[10:52:46.825] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:52:46.825] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:52:46.825] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:46.825] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:52:46.825] |  :  .  |  :  .  |  List of future strategies:
[10:52:46.825] |  :  .  |  :  .  |  1. multicore:
[10:52:46.825] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:46.825] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:46.825] |  :  .  |  :  .  |     - call: plan(strategy)
[10:52:46.823] |  :  .  |  :  .  List of 1
[10:52:46.823] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.823] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.823] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.823] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.823] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.823] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.823] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.826] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:46.827] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:46.827] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.827] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:46.827] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.827] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:52:46.828] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:46.828] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:52:46.828] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:46.828] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.826] |  :  .  |  :  .  |  List of 1
[10:52:46.826] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:46.826] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:46.826] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:46.826] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.826] |  :  .  |  :  .  |      ...)  
[10:52:46.826] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.826] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.826] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:46.826] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:46.826] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.826] |  :  .  |  :  .  |      ...)  
[10:52:46.826] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.826] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.829] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:46.829] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:46.829] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.829] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:46.829] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.829] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:52:46.830] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:46.830] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.830] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.831] |  readImmediateCondition() ...
[10:52:46.832] |    - path: ‘/tmp/RtmpI5Uoc0/.future/immediateConditions’
[10:52:46.832] |   - Number of RDS files: 0
[10:52:46.832] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.832] |  readImmediateCondition() ... DONE
[10:52:46.832] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.833] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:46.833] |  result() for MulticoreFuture ...
[10:52:46.833] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:46.833] |  result() for MulticoreFuture ... done
[10:52:46.833] result() for MulticoreFuture ... done
[10:52:46.833] |  :  .  |  :  .  |  :  New stack:
[10:52:46.833] result() for MulticoreFuture ...
[10:52:46.833] result() for MulticoreFuture ... done
u$a = 2
[10:52:46.834] result() for MulticoreFuture ...
[10:52:46.833] |  :  .  |  :  .  |  :  List of 1
[10:52:46.833] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:46.833] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:46.833] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:46.833] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.833] |  :  .  |  :  .  |  :      ...)  
[10:52:46.833] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.833] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.833] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:46.833] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:46.833] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.833] |  :  .  |  :  .  |  :      ...)  
[10:52:46.833] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.833] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.840] |  :  .  |  :  .  |  :  Old stack:
[10:52:46.840] |  :  .  |  :  .  |  :  List of 1
[10:52:46.840] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.840] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.840] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.840] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.840] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.840] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.840] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.842] |  :  .  |  :  .  |  :  Not identical
[10:52:46.842] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:52:46.842] |  :  .  |  :  .  |  :  .  List of 2
[10:52:46.842] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:46.842] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:46.842] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:46.842] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.842] |  :  .  |  :  .  |  :  .      ...)  
[10:52:46.842] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.842] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.842] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:46.842] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:46.842] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.842] |  :  .  |  :  .  |  :  .      ...)  
[10:52:46.842] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.842] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.842] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.842] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.842] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.842] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.842] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.847] |  :  .  |  :  .  |  :  .  Formals differ
[10:52:46.847] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:52:46.847] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:52:46.847] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:46.847] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:52:46.848] |  :  .  |  :  .  |  List of future strategies:
[10:52:46.848] |  :  .  |  :  .  |  1. multicore:
[10:52:46.848] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:46.848] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:46.848] |  :  .  |  :  .  |     - call: plan(strategy)
[10:52:46.848] |  :  .  |  :  .  |  List of 1
[10:52:46.848] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:46.848] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:46.848] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:46.848] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.848] |  :  .  |  :  .  |      ...)  
[10:52:46.848] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.848] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.848] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:46.848] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:46.848] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.848] |  :  .  |  :  .  |      ...)  
[10:52:46.848] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.848] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.851] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:46.851] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:46.851] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.851] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:46.852] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.852] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:52:46.852] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:46.852] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.852] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.852] |  readImmediateCondition() ...
[10:52:46.853] |    - path: ‘/tmp/RtmpI5Uoc0/.future/immediateConditions’
[10:52:46.853] |   - Number of RDS files: 0
[10:52:46.853] |  readImmediateCondition() ... DONE
[10:52:46.853] |  result() for MulticoreFuture ...
[10:52:46.854] |  result() for MulticoreFuture ... done
[10:52:46.854] result() for MulticoreFuture ... done
[10:52:46.854] result() for MulticoreFuture ...
[10:52:46.854] result() for MulticoreFuture ... done
v$a = 4
[10:52:46.855] getGlobalsAndPackages() ...
[10:52:46.855] |  Searching for globals ...
[10:52:46.857] |  :  globals found: [3] ‘{’, ‘*’, ‘a’
[10:52:46.857] |  Searching for globals ... DONE
[10:52:46.857] |  Resolving globals: FALSE
[10:52:46.857] |  Search for packages associated with the globals ...
[10:52:46.858] |  :  Packages associated with globals: [1] ‘base’
[10:52:46.858] |  :  Packages: [1] ‘base’
[10:52:46.858] |  Search for packages associated with the globals ... DONE
[10:52:46.858] |  Packages after dropping 'base': [0] 
[10:52:46.858] |  globals: [1] ‘a’
[10:52:46.859] |  packages: [0] 
[10:52:46.859] getGlobalsAndPackages() ... done
[10:52:46.859] run() for Future (‘Future’) ...
[10:52:46.859] |  state: ‘created’
[10:52:46.859] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.859] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.860] |  Using MulticoreFutureBackend ...
[10:52:46.860] |  :  Launching futures ...
[10:52:46.860] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:46.860] |  :  .  |  getFutureData() ...
[10:52:46.860] |  :  .  |  :  getFutureCore() ...
[10:52:46.860] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:46.860] |  :  .  |  :  getFutureCore() ... done
[10:52:46.861] |  :  .  |  :  getFutureCapture() ...
[10:52:46.861] |  :  .  |  :  getFutureCapture() ... done
[10:52:46.861] |  :  .  |  :  getFutureContext() ...
[10:52:46.861] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.861] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:46.861] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.861] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:46.862] |  :  .  |  :  getFutureContext() ... done
[10:52:46.862] |  :  .  |  getFutureData() ... done
[10:52:46.862] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:46.862] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:46.864] |  :  .  |  MulticoreFuture started
[10:52:46.864] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:46.864] |  :  Launching futures ... done
[10:52:46.864] |  :  .  |  attachPackages() ...
[10:52:46.865] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:46.865] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:46.865] |  Using MulticoreFutureBackend ... done
[10:52:46.865] run() for Future (‘MulticoreFuture’) ... done
[10:52:46.865] |  :  .  |  attachPackages() ... DONE
[10:52:46.865] |  :  .  |  attachPackages() ...
[10:52:46.866] |  :  .  |  :  packages: [n=0] 
[10:52:46.866] result() for MulticoreFuture ...
[10:52:46.866] |  :  .  |  attachPackages() ... DONE
[10:52:46.867] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.867] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:46.867] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.868] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.868] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:46.868] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:46.868] |  :  .  |  :  .  |  New stack:
[10:52:46.869] |  :  .  |  :  .  |  List of 1
[10:52:46.869] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.869] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.869] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.869] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.869] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.869] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.869] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.873] |  :  .  |  :  .  |  Old stack:
[10:52:46.873] |  :  .  |  :  .  |  List of 1
[10:52:46.873] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:46.873] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:46.873] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:46.873] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.873] |  :  .  |  :  .  |      ...)  
[10:52:46.873] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.873] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.873] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:46.873] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:46.873] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.873] |  :  .  |  :  .  |      ...)  
[10:52:46.873] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.873] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.878] |  :  .  |  :  .  |  Not identical
[10:52:46.878] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:46.878] |  :  .  |  :  .  |  :  List of 2
[10:52:46.878] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.878] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.878] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.878] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.878] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.878] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.878] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:46.878] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:46.878] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:46.878] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.878] |  :  .  |  :  .  |  :      ...)  
[10:52:46.878] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.878] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.878] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:46.878] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:46.878] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.878] |  :  .  |  :  .  |  :      ...)  
[10:52:46.878] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.889] |  :  .  |  :  .  |  :  Formals differ
[10:52:46.889] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:46.889] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:52:46.889] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:46.890] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:52:46.890] |  :  .  |  :  .  List of future strategies:
[10:52:46.890] |  :  .  |  :  .  1. sequential:
[10:52:46.890] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:46.890] |  :  .  |  :  .     - tweaked: FALSE
[10:52:46.890] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.890] |  :  .  |  :  .  List of 1
[10:52:46.890] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.890] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.890] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.890] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.890] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.890] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.890] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.894] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:46.894] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:46.894] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.894] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:46.895] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.895] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:52:46.895] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:46.895] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:52:46.896] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:46.896] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.896] |  :  .  |  assign_globals() ...
[10:52:46.896] |  :  .  |  List of 1
[10:52:46.896] |  :  .  |   $ a: num 1
[10:52:46.896] |  :  .  |   - attr(*, "where")=List of 1
[10:52:46.896] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:52:46.896] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:46.896] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:52:46.896] |  :  .  |   - attr(*, "total_size")= num NA
[10:52:46.896] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:52:46.899] |  :  .  |  - copied ‘a’ to environment
[10:52:46.900] |  :  .  |  assign_globals() ... done
[10:52:46.902] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.902] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.902] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:46.902] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:46.902] |  :  .  |  :  .  |  :  New stack:
[10:52:46.902] |  :  .  |  :  .  |  :  List of 1
[10:52:46.902] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:46.902] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:46.902] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:46.902] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.902] |  :  .  |  :  .  |  :      ...)  
[10:52:46.902] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.902] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.902] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:46.902] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:46.902] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.902] |  :  .  |  :  .  |  :      ...)  
[10:52:46.902] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.902] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.905] |  :  .  |  :  .  |  :  Old stack:
[10:52:46.905] |  :  .  |  :  .  |  :  List of 1
[10:52:46.905] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.905] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.905] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.905] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.905] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.905] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.905] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.908] |  :  .  |  :  .  |  :  Not identical
[10:52:46.908] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:52:46.908] |  :  .  |  :  .  |  :  .  List of 2
[10:52:46.908] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:46.908] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:46.908] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:46.908] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.908] |  :  .  |  :  .  |  :  .      ...)  
[10:52:46.908] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.908] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.908] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:46.908] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:46.908] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.908] |  :  .  |  :  .  |  :  .      ...)  
[10:52:46.908] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.908] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.908] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.908] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.908] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.908] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.908] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.914] |  :  .  |  :  .  |  :  .  Formals differ
[10:52:46.914] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:52:46.914] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:52:46.914] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:46.914] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:52:46.914] |  :  .  |  :  .  |  List of future strategies:
[10:52:46.914] |  :  .  |  :  .  |  1. multicore:
[10:52:46.914] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:46.914] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:46.914] |  :  .  |  :  .  |     - call: plan(strategy)
[10:52:46.914] |  :  .  |  :  .  |  List of 1
[10:52:46.914] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:46.914] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:46.914] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:46.914] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.914] |  :  .  |  :  .  |      ...)  
[10:52:46.914] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.914] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.914] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:46.914] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:46.914] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.914] |  :  .  |  :  .  |      ...)  
[10:52:46.914] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.914] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.917] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:46.918] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:46.918] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.918] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:46.918] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.918] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:52:46.918] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:46.918] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.918] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.919] |  readImmediateCondition() ...
[10:52:46.919] |    - path: ‘/tmp/RtmpI5Uoc0/.future/immediateConditions’
[10:52:46.919] |   - Number of RDS files: 0
[10:52:46.919] |  readImmediateCondition() ... DONE
[10:52:46.920] |  result() for MulticoreFuture ...
[10:52:46.920] |  result() for MulticoreFuture ... done
[10:52:46.920] result() for MulticoreFuture ... done
[10:52:46.920] result() for MulticoreFuture ...
[10:52:46.920] result() for MulticoreFuture ... done
[10:52:46.921] getGlobalsAndPackages() ...
[10:52:46.921] |  Searching for globals ...
[10:52:46.922] |  :  globals found: [3] ‘{’, ‘*’, ‘a’
[10:52:46.923] |  Searching for globals ... DONE
[10:52:46.923] |  Resolving globals: FALSE
[10:52:46.923] |  Search for packages associated with the globals ...
[10:52:46.923] |  :  Packages associated with globals: [1] ‘base’
[10:52:46.923] |  :  Packages: [1] ‘base’
[10:52:46.924] |  Search for packages associated with the globals ... DONE
[10:52:46.924] |  Packages after dropping 'base': [0] 
[10:52:46.924] |  globals: [1] ‘a’
[10:52:46.924] |  packages: [0] 
[10:52:46.924] getGlobalsAndPackages() ... done
[10:52:46.924] run() for Future (‘Future’) ...
[10:52:46.925] |  state: ‘created’
[10:52:46.925] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.925] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.925] |  Using MulticoreFutureBackend ...
[10:52:46.925] |  :  Launching futures ...
[10:52:46.925] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:46.925] |  :  .  |  getFutureData() ...
[10:52:46.926] |  :  .  |  :  getFutureCore() ...
[10:52:46.926] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:46.926] |  :  .  |  :  getFutureCore() ... done
[10:52:46.926] |  :  .  |  :  getFutureCapture() ...
[10:52:46.926] |  :  .  |  :  getFutureCapture() ... done
[10:52:46.926] |  :  .  |  :  getFutureContext() ...
[10:52:46.926] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.926] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:46.927] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.927] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:46.927] |  :  .  |  :  getFutureContext() ... done
[10:52:46.927] |  :  .  |  getFutureData() ... done
[10:52:46.927] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:46.928] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:46.929] |  :  .  |  MulticoreFuture started
[10:52:46.930] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:46.930] |  :  Launching futures ... done
[10:52:46.930] |  :  .  |  attachPackages() ...
[10:52:46.930] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:46.930] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:46.930] |  Using MulticoreFutureBackend ... done
[10:52:46.930] run() for Future (‘MulticoreFuture’) ... done
[10:52:46.930] |  :  .  |  attachPackages() ... DONE
[10:52:46.931] |  :  .  |  attachPackages() ...
[10:52:46.931] |  :  .  |  :  packages: [n=0] 
[10:52:46.931] result() for MulticoreFuture ...
[10:52:46.931] |  :  .  |  attachPackages() ... DONE
[10:52:46.932] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.932] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:46.932] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.933] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.933] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:46.933] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:46.933] |  :  .  |  :  .  |  New stack:
[10:52:46.934] |  :  .  |  :  .  |  List of 1
[10:52:46.934] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.934] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.934] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.934] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.934] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.934] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.934] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.941] |  :  .  |  :  .  |  Old stack:
[10:52:46.941] |  :  .  |  :  .  |  List of 1
[10:52:46.941] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:46.941] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:46.941] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:46.941] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.941] |  :  .  |  :  .  |      ...)  
[10:52:46.941] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.941] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.941] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:46.941] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:46.941] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.941] |  :  .  |  :  .  |      ...)  
[10:52:46.941] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.941] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.947] |  :  .  |  :  .  |  Not identical
[10:52:46.947] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:46.947] |  :  .  |  :  .  |  :  List of 2
[10:52:46.947] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.947] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.947] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.947] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.947] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.947] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.947] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:46.947] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:46.947] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:46.947] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.947] |  :  .  |  :  .  |  :      ...)  
[10:52:46.947] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.947] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.947] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:46.947] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:46.947] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.947] |  :  .  |  :  .  |  :      ...)  
[10:52:46.947] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.954] |  :  .  |  :  .  |  :  Formals differ
[10:52:46.954] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:46.954] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:52:46.955] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:46.955] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:52:46.955] |  :  .  |  :  .  List of future strategies:
[10:52:46.955] |  :  .  |  :  .  1. sequential:
[10:52:46.955] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:46.955] |  :  .  |  :  .     - tweaked: FALSE
[10:52:46.955] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.956] |  :  .  |  :  .  List of 1
[10:52:46.956] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.956] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.956] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.956] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.956] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.956] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.956] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.959] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:46.959] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:46.959] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.959] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:46.960] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.960] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:52:46.960] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:46.960] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:52:46.960] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:46.961] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.961] |  :  .  |  assign_globals() ...
[10:52:46.961] |  :  .  |  List of 1
[10:52:46.961] |  :  .  |   $ a: num 1
[10:52:46.961] |  :  .  |   - attr(*, "where")=List of 1
[10:52:46.961] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:52:46.961] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:46.961] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:52:46.961] |  :  .  |   - attr(*, "total_size")= num NA
[10:52:46.961] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:52:46.964] |  :  .  |  - copied ‘a’ to environment
[10:52:46.964] |  :  .  |  assign_globals() ... done
[10:52:46.967] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.967] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:46.967] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:46.967] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:46.967] |  :  .  |  :  .  |  :  New stack:
[10:52:46.967] |  :  .  |  :  .  |  :  List of 1
[10:52:46.967] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:46.967] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:46.967] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:46.967] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.967] |  :  .  |  :  .  |  :      ...)  
[10:52:46.967] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.967] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.967] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:46.967] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:46.967] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.967] |  :  .  |  :  .  |  :      ...)  
[10:52:46.967] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.967] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.972] |  :  .  |  :  .  |  :  Old stack:
[10:52:46.972] |  :  .  |  :  .  |  :  List of 1
[10:52:46.972] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.972] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.972] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.972] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.972] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.972] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.972] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.974] |  :  .  |  :  .  |  :  Not identical
[10:52:46.974] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:52:46.974] |  :  .  |  :  .  |  :  .  List of 2
[10:52:46.974] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:46.974] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:46.974] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:46.974] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.974] |  :  .  |  :  .  |  :  .      ...)  
[10:52:46.974] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.974] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.974] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:46.974] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:46.974] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.974] |  :  .  |  :  .  |  :  .      ...)  
[10:52:46.974] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.974] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:46.974] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:46.974] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:46.974] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.974] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:46.974] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:46.978] |  :  .  |  :  .  |  :  .  Formals differ
[10:52:46.979] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:52:46.979] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:52:46.979] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:46.979] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:52:46.979] |  :  .  |  :  .  |  List of future strategies:
[10:52:46.979] |  :  .  |  :  .  |  1. multicore:
[10:52:46.979] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:46.979] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:46.979] |  :  .  |  :  .  |     - call: plan(strategy)
[10:52:46.979] |  :  .  |  :  .  |  List of 1
[10:52:46.979] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:46.979] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:46.979] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:46.979] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.979] |  :  .  |  :  .  |      ...)  
[10:52:46.979] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.979] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.979] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:46.979] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:46.979] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:46.979] |  :  .  |  :  .  |      ...)  
[10:52:46.979] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:46.979] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:46.982] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:46.982] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:46.983] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.983] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:46.983] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.983] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:52:46.983] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:46.983] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.983] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:46.984] |  readImmediateCondition() ...
[10:52:46.984] |    - path: ‘/tmp/RtmpI5Uoc0/.future/immediateConditions’
[10:52:46.984] |   - Number of RDS files: 0
[10:52:46.984] |  readImmediateCondition() ... DONE
[10:52:46.985] |  result() for MulticoreFuture ...
[10:52:46.985] |  result() for MulticoreFuture ... done
[10:52:46.985] result() for MulticoreFuture ... done
[10:52:46.985] result() for MulticoreFuture ...
[10:52:46.985] result() for MulticoreFuture ... done
[10:52:46.985] getGlobalsAndPackages() ...
[10:52:46.986] |  Searching for globals ...
[10:52:46.987] |  :  globals found: [3] ‘{’, ‘*’, ‘a’
[10:52:46.987] |  Searching for globals ... DONE
[10:52:46.987] |  Resolving globals: FALSE
[10:52:46.988] |  Search for packages associated with the globals ...
[10:52:46.988] |  :  Packages associated with globals: [1] ‘base’
[10:52:46.988] |  :  Packages: [1] ‘base’
[10:52:46.988] |  Search for packages associated with the globals ... DONE
[10:52:46.991] |  Packages after dropping 'base': [0] 
[10:52:46.991] |  globals: [1] ‘a’
[10:52:46.991] |  packages: [0] 
[10:52:46.991] getGlobalsAndPackages() ... done
[10:52:46.991] run() for Future (‘Future’) ...
[10:52:46.992] |  state: ‘created’
[10:52:46.992] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.992] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.992] |  Using MulticoreFutureBackend ...
[10:52:46.992] |  :  Launching futures ...
[10:52:46.992] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:46.993] |  :  .  |  getFutureData() ...
[10:52:46.993] |  :  .  |  :  getFutureCore() ...
[10:52:46.993] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:46.993] |  :  .  |  :  getFutureCore() ... done
[10:52:46.993] |  :  .  |  :  getFutureCapture() ...
[10:52:46.993] |  :  .  |  :  getFutureCapture() ... done
[10:52:46.993] |  :  .  |  :  getFutureContext() ...
[10:52:46.994] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.994] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:46.994] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:46.994] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:46.994] |  :  .  |  :  getFutureContext() ... done
[10:52:46.994] |  :  .  |  getFutureData() ... done
[10:52:46.994] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:46.995] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:46.996] |  :  .  |  MulticoreFuture started
[10:52:46.997] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:46.997] |  :  Launching futures ... done
[10:52:46.997] |  :  .  |  attachPackages() ...
[10:52:46.997] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:46.997] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:46.997] |  Using MulticoreFutureBackend ... done
[10:52:46.998] run() for Future (‘MulticoreFuture’) ... done
[10:52:46.998] |  :  .  |  attachPackages() ... DONE
[10:52:46.998] |  :  .  |  attachPackages() ...
[10:52:46.998] |  :  .  |  :  packages: [n=0] 
[10:52:46.998] result() for MulticoreFuture ...
[10:52:46.998] |  :  .  |  attachPackages() ... DONE
[10:52:46.999] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:46.999] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:46.999] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:47.000] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:47.000] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:47.001] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:47.001] |  :  .  |  :  .  |  New stack:
[10:52:47.001] |  :  .  |  :  .  |  List of 1
[10:52:47.001] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:47.001] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:47.001] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:47.001] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:47.001] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:47.001] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:47.001] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:47.005] |  :  .  |  :  .  |  Old stack:
[10:52:47.005] |  :  .  |  :  .  |  List of 1
[10:52:47.005] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:47.005] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:47.005] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:47.005] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.005] |  :  .  |  :  .  |      ...)  
[10:52:47.005] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.005] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.005] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:47.005] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:47.005] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.005] |  :  .  |  :  .  |      ...)  
[10:52:47.005] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.005] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:47.010] |  :  .  |  :  .  |  Not identical
[10:52:47.010] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:47.010] |  :  .  |  :  .  |  :  List of 2
[10:52:47.010] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:47.010] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:47.010] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:47.010] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:47.010] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:47.010] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:47.010] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:47.010] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:47.010] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:47.010] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.010] |  :  .  |  :  .  |  :      ...)  
[10:52:47.010] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.010] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.010] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:47.010] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:47.010] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.010] |  :  .  |  :  .  |  :      ...)  
[10:52:47.010] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.018] |  :  .  |  :  .  |  :  Formals differ
[10:52:47.018] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:47.018] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:52:47.018] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:47.018] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:52:47.018] |  :  .  |  :  .  List of future strategies:
[10:52:47.018] |  :  .  |  :  .  1. sequential:
[10:52:47.018] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:47.018] |  :  .  |  :  .     - tweaked: FALSE
[10:52:47.018] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:47.019] |  :  .  |  :  .  List of 1
[10:52:47.019] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:47.019] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:47.019] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:47.019] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:47.019] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:47.019] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:47.019] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:47.022] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:47.023] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:47.023] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:47.023] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:47.023] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:47.023] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:52:47.025] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:47.026] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:52:47.026] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:47.026] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:47.027] |  :  .  |  assign_globals() ...
[10:52:47.027] |  :  .  |  List of 1
[10:52:47.027] |  :  .  |   $ a: num 1
[10:52:47.027] |  :  .  |   - attr(*, "where")=List of 1
[10:52:47.027] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:52:47.027] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:47.027] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:52:47.027] |  :  .  |   - attr(*, "total_size")= num NA
[10:52:47.027] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:52:47.031] |  :  .  |  - copied ‘a’ to environment
[10:52:47.031] |  :  .  |  assign_globals() ... done
[10:52:47.033] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:47.033] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:47.033] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:47.034] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:47.034] |  :  .  |  :  .  |  :  New stack:
[10:52:47.034] |  :  .  |  :  .  |  :  List of 1
[10:52:47.034] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:47.034] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:47.034] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:47.034] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.034] |  :  .  |  :  .  |  :      ...)  
[10:52:47.034] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.034] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.034] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:47.034] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:47.034] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.034] |  :  .  |  :  .  |  :      ...)  
[10:52:47.034] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.034] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:47.037] |  :  .  |  :  .  |  :  Old stack:
[10:52:47.037] |  :  .  |  :  .  |  :  List of 1
[10:52:47.037] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:47.037] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:47.037] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:47.037] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:47.037] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:47.037] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:47.037] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:47.039] |  :  .  |  :  .  |  :  Not identical
[10:52:47.039] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:52:47.039] |  :  .  |  :  .  |  :  .  List of 2
[10:52:47.039] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:47.039] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:47.039] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:47.039] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.039] |  :  .  |  :  .  |  :  .      ...)  
[10:52:47.039] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.039] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.039] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:47.039] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:47.039] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.039] |  :  .  |  :  .  |  :  .      ...)  
[10:52:47.039] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.039] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:47.039] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:47.039] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:47.039] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:47.039] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:47.039] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:47.043] |  :  .  |  :  .  |  :  .  Formals differ
[10:52:47.044] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:52:47.044] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:52:47.044] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:47.044] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:52:47.044] |  :  .  |  :  .  |  List of future strategies:
[10:52:47.044] |  :  .  |  :  .  |  1. multicore:
[10:52:47.044] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:47.044] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:47.044] |  :  .  |  :  .  |     - call: plan(strategy)
[10:52:47.044] |  :  .  |  :  .  |  List of 1
[10:52:47.044] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:47.044] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:47.044] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:47.044] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.044] |  :  .  |  :  .  |      ...)  
[10:52:47.044] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.044] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.044] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:47.044] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:47.044] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.044] |  :  .  |  :  .  |      ...)  
[10:52:47.044] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.044] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:47.082] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:47.082] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:47.082] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:47.083] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:47.083] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:47.083] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:52:47.083] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:47.083] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:47.083] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:47.084] |  readImmediateCondition() ...
[10:52:47.084] |    - path: ‘/tmp/RtmpI5Uoc0/.future/immediateConditions’
[10:52:47.084] |   - Number of RDS files: 0
[10:52:47.084] |  readImmediateCondition() ... DONE
[10:52:47.085] |  result() for MulticoreFuture ...
[10:52:47.085] |  result() for MulticoreFuture ... done
[10:52:47.085] result() for MulticoreFuture ... done
[10:52:47.085] result() for MulticoreFuture ...
[10:52:47.085] result() for MulticoreFuture ... done
[10:52:47.086] getGlobalsAndPackages() ...
[10:52:47.086] |  Searching for globals ...
[10:52:47.087] |  :  globals found: [3] ‘{’, ‘*’, ‘a’
[10:52:47.087] |  Searching for globals ... DONE
[10:52:47.088] |  Resolving globals: FALSE
[10:52:47.088] |  Search for packages associated with the globals ...
[10:52:47.088] |  :  Packages associated with globals: [1] ‘base’
[10:52:47.088] |  :  Packages: [1] ‘base’
[10:52:47.089] |  Search for packages associated with the globals ... DONE
[10:52:47.089] |  Packages after dropping 'base': [0] 
[10:52:47.089] |  globals: [1] ‘a’
[10:52:47.089] |  packages: [0] 
[10:52:47.089] getGlobalsAndPackages() ... done
[10:52:47.090] run() for Future (‘Future’) ...
[10:52:47.090] |  state: ‘created’
[10:52:47.090] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:47.090] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:47.090] |  Using MulticoreFutureBackend ...
[10:52:47.090] |  :  Launching futures ...
[10:52:47.090] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:47.091] |  :  .  |  getFutureData() ...
[10:52:47.091] |  :  .  |  :  getFutureCore() ...
[10:52:47.091] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:47.091] |  :  .  |  :  getFutureCore() ... done
[10:52:47.091] |  :  .  |  :  getFutureCapture() ...
[10:52:47.091] |  :  .  |  :  getFutureCapture() ... done
[10:52:47.091] |  :  .  |  :  getFutureContext() ...
[10:52:47.091] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:47.092] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:47.092] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:47.092] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:47.092] |  :  .  |  :  getFutureContext() ... done
[10:52:47.092] |  :  .  |  getFutureData() ... done
[10:52:47.092] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:47.093] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:47.095] |  :  .  |  MulticoreFuture started
[10:52:47.095] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:47.095] |  :  Launching futures ... done
[10:52:47.095] |  :  .  |  attachPackages() ...
[10:52:47.095] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:47.095] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:47.096] |  Using MulticoreFutureBackend ... done
[10:52:47.096] run() for Future (‘MulticoreFuture’) ... done
[10:52:47.096] |  :  .  |  attachPackages() ... DONE
[10:52:47.096] |  :  .  |  attachPackages() ...
[10:52:47.096] result() for MulticoreFuture ...
[10:52:47.096] |  :  .  |  :  packages: [n=0] 
[10:52:47.096] |  :  .  |  attachPackages() ... DONE
[10:52:47.097] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:47.097] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:47.098] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:47.098] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:47.099] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:47.099] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:47.099] |  :  .  |  :  .  |  New stack:
[10:52:47.099] |  :  .  |  :  .  |  List of 1
[10:52:47.099] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:47.099] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:47.099] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:47.099] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:47.099] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:47.099] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:47.099] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:47.103] |  :  .  |  :  .  |  Old stack:
[10:52:47.104] |  :  .  |  :  .  |  List of 1
[10:52:47.104] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:47.104] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:47.104] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:47.104] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.104] |  :  .  |  :  .  |      ...)  
[10:52:47.104] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.104] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.104] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:47.104] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:47.104] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.104] |  :  .  |  :  .  |      ...)  
[10:52:47.104] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.104] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:47.108] |  :  .  |  :  .  |  Not identical
[10:52:47.108] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:47.109] |  :  .  |  :  .  |  :  List of 2
[10:52:47.109] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:47.109] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:47.109] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:47.109] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:47.109] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:47.109] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:47.109] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:47.109] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:47.109] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:47.109] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.109] |  :  .  |  :  .  |  :      ...)  
[10:52:47.109] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.109] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.109] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:47.109] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:47.109] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.109] |  :  .  |  :  .  |  :      ...)  
[10:52:47.109] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.120] |  :  .  |  :  .  |  :  Formals differ
[10:52:47.120] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:47.120] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:52:47.120] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:47.120] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:52:47.120] |  :  .  |  :  .  List of future strategies:
[10:52:47.120] |  :  .  |  :  .  1. sequential:
[10:52:47.120] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:47.120] |  :  .  |  :  .     - tweaked: FALSE
[10:52:47.120] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:47.121] |  :  .  |  :  .  List of 1
[10:52:47.121] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:47.121] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:47.121] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:47.121] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:47.121] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:47.121] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:47.121] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:47.125] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:47.125] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:47.125] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:47.125] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:47.125] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:47.126] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:52:47.126] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:47.126] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:52:47.126] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:47.126] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:47.127] |  :  .  |  assign_globals() ...
[10:52:47.127] |  :  .  |  List of 1
[10:52:47.127] |  :  .  |   $ a: num 1
[10:52:47.127] |  :  .  |   - attr(*, "where")=List of 1
[10:52:47.127] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:52:47.127] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:47.127] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:52:47.127] |  :  .  |   - attr(*, "total_size")= num NA
[10:52:47.127] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:52:47.130] |  :  .  |  - copied ‘a’ to environment
[10:52:47.130] |  :  .  |  assign_globals() ... done
[10:52:47.132] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:47.133] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:47.133] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:47.133] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:47.133] |  :  .  |  :  .  |  :  New stack:
[10:52:47.133] |  :  .  |  :  .  |  :  List of 1
[10:52:47.133] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:47.133] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:47.133] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:47.133] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.133] |  :  .  |  :  .  |  :      ...)  
[10:52:47.133] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.133] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.133] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:47.133] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:47.133] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.133] |  :  .  |  :  .  |  :      ...)  
[10:52:47.133] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.133] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:47.136] |  :  .  |  :  .  |  :  Old stack:
[10:52:47.136] |  :  .  |  :  .  |  :  List of 1
[10:52:47.136] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:47.136] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:47.136] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:47.136] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:47.136] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:47.136] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:47.136] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:47.139] |  :  .  |  :  .  |  :  Not identical
[10:52:47.139] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:52:47.139] |  :  .  |  :  .  |  :  .  List of 2
[10:52:47.139] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:47.139] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:47.139] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:47.139] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.139] |  :  .  |  :  .  |  :  .      ...)  
[10:52:47.139] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.139] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.139] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:47.139] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:47.139] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.139] |  :  .  |  :  .  |  :  .      ...)  
[10:52:47.139] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.139] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:47.139] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:47.139] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:47.139] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:47.139] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:47.139] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:47.178] |  :  .  |  :  .  |  :  .  Formals differ
[10:52:47.178] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:52:47.178] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:52:47.178] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:47.179] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:52:47.179] |  :  .  |  :  .  |  List of future strategies:
[10:52:47.179] |  :  .  |  :  .  |  1. multicore:
[10:52:47.179] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:47.179] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:47.179] |  :  .  |  :  .  |     - call: plan(strategy)
[10:52:47.179] |  :  .  |  :  .  |  List of 1
[10:52:47.179] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:47.179] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:47.179] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:47.179] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.179] |  :  .  |  :  .  |      ...)  
[10:52:47.179] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.179] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.179] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:47.179] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:47.179] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.179] |  :  .  |  :  .  |      ...)  
[10:52:47.179] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.179] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:47.182] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:47.182] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:47.182] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:47.182] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:47.182] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:47.183] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:52:47.183] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:47.183] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:47.183] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:47.183] |  readImmediateCondition() ...
[10:52:47.184] |    - path: ‘/tmp/RtmpI5Uoc0/.future/immediateConditions’
[10:52:47.184] |   - Number of RDS files: 0
[10:52:47.184] |  readImmediateCondition() ... DONE
[10:52:47.184] |  result() for MulticoreFuture ...
[10:52:47.185] |  result() for MulticoreFuture ... done
[10:52:47.185] result() for MulticoreFuture ... done
[10:52:47.185] result() for MulticoreFuture ...
[10:52:47.185] result() for MulticoreFuture ... done
[10:52:47.185] getGlobalsAndPackages() ...
[10:52:47.186] |  Searching for globals ...
[10:52:47.187] |  :  globals found: [3] ‘{’, ‘*’, ‘a’
[10:52:47.187] |  Searching for globals ... DONE
[10:52:47.187] |  Resolving globals: FALSE
[10:52:47.188] |  Search for packages associated with the globals ...
[10:52:47.188] |  :  Packages associated with globals: [1] ‘base’
[10:52:47.188] |  :  Packages: [1] ‘base’
[10:52:47.188] |  Search for packages associated with the globals ... DONE
[10:52:47.189] |  Packages after dropping 'base': [0] 
[10:52:47.189] |  globals: [1] ‘a’
[10:52:47.189] |  packages: [0] 
[10:52:47.189] getGlobalsAndPackages() ... done
[10:52:47.189] run() for Future (‘Future’) ...
[10:52:47.189] |  state: ‘created’
[10:52:47.190] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:47.190] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:47.190] |  Using MulticoreFutureBackend ...
[10:52:47.190] |  :  Launching futures ...
[10:52:47.190] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:47.190] |  :  .  |  getFutureData() ...
[10:52:47.190] |  :  .  |  :  getFutureCore() ...
[10:52:47.191] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:47.191] |  :  .  |  :  getFutureCore() ... done
[10:52:47.191] |  :  .  |  :  getFutureCapture() ...
[10:52:47.191] |  :  .  |  :  getFutureCapture() ... done
[10:52:47.191] |  :  .  |  :  getFutureContext() ...
[10:52:47.191] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:47.191] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:47.191] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:47.192] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:47.192] |  :  .  |  :  getFutureContext() ... done
[10:52:47.192] |  :  .  |  getFutureData() ... done
[10:52:47.192] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:47.192] |  :  .  |  requestCore(..., workers = 2) ...
[10:52:47.194] |  :  .  |  MulticoreFuture started
[10:52:47.195] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:47.195] |  :  Launching futures ... done
[10:52:47.195] |  :  .  |  attachPackages() ...
[10:52:47.195] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:47.195] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:47.195] |  Using MulticoreFutureBackend ... done
[10:52:47.195] run() for Future (‘MulticoreFuture’) ... done
[10:52:47.196] |  :  .  |  attachPackages() ... DONE
[10:52:47.196] result() for MulticoreFuture ...
[10:52:47.196] |  :  .  |  attachPackages() ...
[10:52:47.196] |  :  .  |  :  packages: [n=0] 
[10:52:47.196] |  :  .  |  attachPackages() ... DONE
[10:52:47.197] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:47.197] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:47.197] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:47.198] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:47.198] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:47.198] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:47.199] |  :  .  |  :  .  |  New stack:
[10:52:47.199] |  :  .  |  :  .  |  List of 1
[10:52:47.199] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:47.199] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:47.199] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:47.199] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:47.199] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:47.199] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:47.199] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:47.206] |  :  .  |  :  .  |  Old stack:
[10:52:47.207] |  :  .  |  :  .  |  List of 1
[10:52:47.207] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:47.207] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:47.207] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:47.207] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.207] |  :  .  |  :  .  |      ...)  
[10:52:47.207] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.207] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.207] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:47.207] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:47.207] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.207] |  :  .  |  :  .  |      ...)  
[10:52:47.207] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.207] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:47.212] |  :  .  |  :  .  |  Not identical
[10:52:47.212] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:47.212] |  :  .  |  :  .  |  :  List of 2
[10:52:47.212] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:47.212] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:47.212] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:47.212] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:47.212] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:47.212] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:47.212] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:47.212] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:47.212] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:47.212] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.212] |  :  .  |  :  .  |  :      ...)  
[10:52:47.212] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.212] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.212] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:47.212] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:47.212] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.212] |  :  .  |  :  .  |  :      ...)  
[10:52:47.212] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.219] |  :  .  |  :  .  |  :  Formals differ
[10:52:47.219] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:47.219] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:52:47.220] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:47.220] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:52:47.220] |  :  .  |  :  .  List of future strategies:
[10:52:47.220] |  :  .  |  :  .  1. sequential:
[10:52:47.220] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:47.220] |  :  .  |  :  .     - tweaked: FALSE
[10:52:47.220] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:47.221] |  :  .  |  :  .  List of 1
[10:52:47.221] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:47.221] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:47.221] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:47.221] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:47.221] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:47.221] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:47.221] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:47.224] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:47.224] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:47.224] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:47.224] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:47.225] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:47.225] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:52:47.225] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:47.225] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:52:47.225] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:47.226] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:47.226] |  :  .  |  assign_globals() ...
[10:52:47.226] |  :  .  |  List of 1
[10:52:47.226] |  :  .  |   $ a: num 1
[10:52:47.226] |  :  .  |   - attr(*, "where")=List of 1
[10:52:47.226] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:52:47.226] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:47.226] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:52:47.226] |  :  .  |   - attr(*, "total_size")= num NA
[10:52:47.226] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:52:47.230] |  :  .  |  - copied ‘a’ to environment
[10:52:47.230] |  :  .  |  assign_globals() ... done
[10:52:47.232] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:47.232] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:47.232] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:47.232] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:47.233] |  :  .  |  :  .  |  :  New stack:
[10:52:47.267] |  :  .  |  :  .  |  :  List of 1
[10:52:47.267] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:47.267] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:47.267] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:47.267] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.267] |  :  .  |  :  .  |  :      ...)  
[10:52:47.267] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.267] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.267] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:47.267] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:47.267] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.267] |  :  .  |  :  .  |  :      ...)  
[10:52:47.267] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.267] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:47.271] |  :  .  |  :  .  |  :  Old stack:
[10:52:47.271] |  :  .  |  :  .  |  :  List of 1
[10:52:47.271] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:47.271] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:47.271] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:47.271] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:47.271] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:47.271] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:47.271] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:47.273] |  :  .  |  :  .  |  :  Not identical
[10:52:47.273] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:52:47.273] |  :  .  |  :  .  |  :  .  List of 2
[10:52:47.273] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:47.273] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:47.273] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:47.273] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.273] |  :  .  |  :  .  |  :  .      ...)  
[10:52:47.273] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.273] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.273] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:47.273] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:47.273] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.273] |  :  .  |  :  .  |  :  .      ...)  
[10:52:47.273] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.273] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:47.273] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:47.273] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:47.273] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:47.273] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:47.273] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:47.278] |  :  .  |  :  .  |  :  .  Formals differ
[10:52:47.278] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:52:47.278] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:52:47.278] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:47.278] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:52:47.278] |  :  .  |  :  .  |  List of future strategies:
[10:52:47.278] |  :  .  |  :  .  |  1. multicore:
[10:52:47.278] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:47.278] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:47.278] |  :  .  |  :  .  |     - call: plan(strategy)
[10:52:47.279] |  :  .  |  :  .  |  List of 1
[10:52:47.279] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:47.279] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:47.279] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:47.279] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.279] |  :  .  |  :  .  |      ...)  
[10:52:47.279] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.279] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.279] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:47.279] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:47.279] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.279] |  :  .  |  :  .  |      ...)  
[10:52:47.279] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.279] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:47.282] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:47.282] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:47.282] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:47.282] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:47.282] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:47.282] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:52:47.282] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:47.282] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:47.283] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:47.283] |  readImmediateCondition() ...
[10:52:47.283] |    - path: ‘/tmp/RtmpI5Uoc0/.future/immediateConditions’
[10:52:47.284] |   - Number of RDS files: 0
[10:52:47.284] |  readImmediateCondition() ... DONE
[10:52:47.284] |  result() for MulticoreFuture ...
[10:52:47.284] |  result() for MulticoreFuture ... done
[10:52:47.284] result() for MulticoreFuture ... done
[10:52:47.284] result() for MulticoreFuture ...
[10:52:47.285] result() for MulticoreFuture ... done
*** futureAssign() with ‘multicore’ futures ... DONE
*** futureAssign() with ‘multisession’ futures ...
[10:52:47.285] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:47.285] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:52:47.286] |  :  all.equal() for FutureStrategyList ...
[10:52:47.286] |  :  .  New stack:
[10:52:47.286] |  :  .  List of 1
[10:52:47.286] |  :  .   $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:52:47.286] |  :  .      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:47.286] |  :  .    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:52:47.286] |  :  .    ..- attr(*, "init")= logi TRUE
[10:52:47.286] |  :  .    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:52:47.286] |  :  .    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:47.286] |  :  .    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:47.286] |  :  .    ..- attr(*, "untweakable")= chr "persistent"
[10:52:47.286] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:47.286] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:47.293] |  :  .  Old stack:
[10:52:47.293] |  :  .  List of 1
[10:52:47.293] |  :  .   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:47.293] |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:47.293] |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:47.293] |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.293] |  :  .      ...)  
[10:52:47.293] |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.293] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.293] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:52:47.293] |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:47.293] |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.293] |  :  .      ...)  
[10:52:47.293] |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.293] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:47.297] |  :  .  Not identical
[10:52:47.297] |  :  .  all.equal() for future ...
[10:52:47.297] |  :  .  |  List of 2
[10:52:47.297] |  :  .  |   $ target :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:52:47.297] |  :  .  |      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:47.297] |  :  .  |    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:52:47.297] |  :  .  |    ..- attr(*, "init")= logi TRUE
[10:52:47.297] |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:52:47.297] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:47.297] |  :  .  |    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:47.297] |  :  .  |    ..- attr(*, "untweakable")= chr "persistent"
[10:52:47.297] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:47.297] |  :  .  |   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:47.297] |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:47.297] |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:47.297] |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.297] |  :  .  |      ...)  
[10:52:47.297] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.297] |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.297] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:52:47.297] |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55854d62b358> 
[10:52:47.297] |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:47.297] |  :  .  |      ...)  
[10:52:47.297] |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:47.304] |  :  .  |  Formals differ
[10:52:47.304] |  :  .  all.equal() for future ... done
[10:52:47.304] |  :  .  Future strategies differ at level 1
[10:52:47.304] |  :  all.equal() for FutureStrategyList ... done
[10:52:47.304] |  :  plan(): Setting new future strategy stack:
[10:52:47.304] |  :  List of future strategies:
[10:52:47.304] |  :  1. multisession:
[10:52:47.304] |  :     - args: function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:47.304] |  :     - tweaked: FALSE
[10:52:47.304] |  :     - call: plan(strategy)
[10:52:47.305] |  :  List of 1
[10:52:47.305] |  :   $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:52:47.305] |  :      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:47.305] |  :    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:52:47.305] |  :    ..- attr(*, "init")= logi TRUE
[10:52:47.305] |  :    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:52:47.305] |  :    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:47.305] |  :    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:47.305] |  :    ..- attr(*, "untweakable")= chr "persistent"
[10:52:47.305] |  :    ..- attr(*, "call")= language plan(strategy)
[10:52:47.305] |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:47.308] |  :  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:52:47.308] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:47.309] |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:47.309] |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:47.310] |  :  .  Legacy shutdown of cluster workers ...
[10:52:47.310] |  :  .  |  Stopping existing cluster ...
[10:52:47.310] |  :  .  |  :  No pre-existing cluster. Skipping
[10:52:47.310] |  :  .  |  Stopping existing cluster ... done
[10:52:47.310] |  :  .  Legacy shutdown of cluster workers ... done
[10:52:47.310] |  :  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:52:47.310] |  :  plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ...
[10:52:47.311] |  :  .  function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:52:47.311] |  :  .      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:47.311] |  :  .   - attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:52:47.311] |  :  .   - attr(*, "init")= logi TRUE
[10:52:47.311] |  :  .   - attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:52:47.311] |  :  .    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:47.311] |  :  .   - attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:47.311] |  :  .   - attr(*, "untweakable")= chr "persistent"
[10:52:47.311] |  :  .   - attr(*, "call")= language plan(strategy)
[10:52:47.345] |  :  .  init: TRUE
[10:52:47.345] |  :  .  makeFutureBackend(<multisession>) ...
[10:52:47.345] |  :  .  |  Backend function: <‘NULL’>
[10:52:47.347] |  :  .  |  ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ...
[10:52:47.347] |  :  .  |  :  workers: 2
[10:52:47.347] |  :  .  |  :  getCluster() ...
[10:52:47.348] |  :  .  |  :  getCluster() ... done
[10:52:47.348] |  :  .  |  :  Stopping existing cluster ...
[10:52:47.348] |  :  .  |  :  .  No pre-existing cluster. Skipping
[10:52:47.348] |  :  .  |  :  Stopping existing cluster ... done
[10:52:47.348] |  :  .  |  :  Starting new cluster ...
[10:52:47.348] |  :  .  |  :  .  makeCluster(workers, ...) ...
[10:52:47.348] |  :  .  |  :  .  |  Arguments:
[10:52:47.348] |  :  .  |  :  .  |  List of 2
[10:52:47.348] |  :  .  |  :  .  |   $             : int 2
[10:52:47.348] |  :  .  |  :  .  |   $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[10:52:47.835] |  :  .  |  :  .  |  Generated cluster UUID
[10:52:47.835] |  :  .  |  :  .  |  Cluster UUID: ‘e1d835c01e909644686c2c8b11ad7b30’
[10:52:47.835] |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:47.838] |  :  .  |  :  .  makeCluster(workers, ...) ... done
[10:52:47.838] |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:47.839] |  :  .  |  :  Starting new cluster ... done
[10:52:47.839] |  :  .  |  :  Number of workers: 2
[10:52:47.839] |  :  .  |  :  Workers UUID: ‘e1d835c01e909644686c2c8b11ad7b30’
[10:52:47.840] |  :  .  |  ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ... done
[10:52:47.840] |  :  .  |  Backend: <‘MultisessionFutureBackend’, ‘ClusterFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:47.840] |  :  .  makeFutureBackend(<multisession>) ... done
[10:52:47.840] |  :  plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ... done
[10:52:47.840] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:47.840] |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:52:47.840] |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:47.841] |  :  plan(): nbrOfWorkers() = 2
[10:52:47.841] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:52:47.841] plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:47.841] getGlobalsAndPackages() ...
[10:52:47.841] |  Searching for globals ...
[10:52:47.842] |  :  globals found: [1] ‘{’
[10:52:47.842] |  Searching for globals ... DONE
[10:52:47.842] |  Resolving globals: FALSE
[10:52:47.842] |  Search for packages associated with the globals ...
[10:52:47.842] |  :  Packages associated with globals: [1] ‘base’
[10:52:47.842] |  :  Packages: [1] ‘base’
[10:52:47.843] |  Search for packages associated with the globals ... DONE
[10:52:47.843] |  Packages after dropping 'base': [0] 
[10:52:47.843] |  globals: [0] 
[10:52:47.843] |  packages: [0] 
[10:52:47.843] getGlobalsAndPackages() ... done
[10:52:47.843] run() for Future (‘Future’) ...
[10:52:47.843] |  state: ‘created’
[10:52:47.843] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:47.844] |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:47.844] |  Using MultisessionFutureBackend ...
[10:52:47.844] |  :  Launching futures ...
[10:52:47.844] |  :  .  launchFuture() for ClusterFutureBackend ...
[10:52:47.844] |  :  .  |  Workers: [n=2]
[10:52:47.844] |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:47.846] |  :  .  |  FutureRegistry: ‘workers-e1d835c01e909644686c2c8b11ad7b30’
[10:52:47.846] |  :  .  |  requestWorker() ...
[10:52:47.846] |  :  .  |  :  requestNode() ...
[10:52:47.846] |  :  .  |  :  .  Number of workers: 2
[10:52:47.846] |  :  .  |  :  .  Polling for a free worker ...
[10:52:47.846] |  :  .  |  :  .  |  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'list', earlySignal = 0) ...
[10:52:47.846] |  :  .  |  :  .  |  :  Created empty registry ‘workers-e1d835c01e909644686c2c8b11ad7b30’
[10:52:47.847] |  :  .  |  :  .  |  :  Listing all futures
[10:52:47.847] |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:52:47.847] |  :  .  |  :  .  |  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'list', earlySignal = 0) ... done
[10:52:47.847] |  :  .  |  :  .  |  Total time: 0
[10:52:47.847] |  :  .  |  :  .  Polling for a free worker ... done
[10:52:47.847] |  :  .  |  :  .  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'list', earlySignal = 0) ...
[10:52:47.847] |  :  .  |  :  .  |  Listing all futures
[10:52:47.847] |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:47.847] |  :  .  |  :  .  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'list', earlySignal = 0) ... done
[10:52:47.847] |  :  .  |  :  .  Index of first available worker: 1
[10:52:47.847] |  :  .  |  :  .  Validate that the worker is functional ...
[10:52:47.907] |  :  .  |  :  .  |  Worker is functional
[10:52:47.908] |  :  .  |  :  .  requestNode() ... done
[10:52:47.908] |  :  .  |  :  .  cluster node index: 1
[10:52:47.908] |  :  .  |  :  requestWorker() ... done
[10:52:47.908] |  :  .  |  :  eraseGlobalEnvironment() ...
[10:52:47.909] |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:52:47.909] |  :  .  |  :  launchFuture() ...
[10:52:47.909] |  :  .  |  :  .  cluster node index: 1
[10:52:47.909] |  :  .  |  :  .  getFutureData() ...
[10:52:47.909] |  :  .  |  :  .  |  getFutureCore() ...
[10:52:47.909] |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:52:47.910] |  :  .  |  :  .  |  getFutureCore() ... done
[10:52:47.910] |  :  .  |  :  .  |  getFutureCapture() ...
[10:52:47.910] |  :  .  |  :  .  |  getFutureCapture() ... done
[10:52:47.910] |  :  .  |  :  .  |  getFutureContext() ...
[10:52:47.910] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:47.910] |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:52:47.910] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:47.910] |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:52:47.910] |  :  .  |  :  .  |  getFutureContext() ... done
[10:52:47.911] |  :  .  |  :  .  getFutureData() ... done
[10:52:47.911] |  :  .  |  :  .  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'add', earlySignal = 0) ...
[10:52:47.911] |  :  .  |  :  .  |  Appended future to position #1
[10:52:47.911] |  :  .  |  :  .  |  Number of registered futures: 1
[10:52:47.911] |  :  .  |  :  .  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'add', earlySignal = 0) ... done
[10:52:47.911] |  :  .  |  :  launchFuture() ... done
[10:52:47.912] |  :  .  |  :  MultisessionFuture started
[10:52:47.912] |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:52:47.912] |  :  .  Launching futures ... done
[10:52:47.912] |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:47.912] |  :  Using MultisessionFutureBackend ... done
[10:52:47.912] |  run() for Future (‘MultisessionFuture’) ... done
[10:52:47.912] |  getGlobalsAndPackages() ...
[10:52:47.912] |  :  Searching for globals ...
[10:52:47.913] |  :  .  globals found: [1] ‘{’
[10:52:47.913] |  :  Searching for globals ... DONE
[10:52:47.914] |  :  Resolving globals: FALSE
[10:52:47.914] |  :  Search for packages associated with the globals ...
[10:52:47.914] |  :  .  Packages associated with globals: [1] ‘base’
[10:52:47.914] |  :  .  Packages: [1] ‘base’
[10:52:47.914] |  :  Search for packages associated with the globals ... DONE
[10:52:47.914] |  :  Packages after dropping 'base': [0] 
[10:52:47.915] |  :  globals: [0] 
[10:52:47.915] |  :  packages: [0] 
[10:52:47.915] |  getGlobalsAndPackages() ... done
[10:52:47.915] |  run() for Future (‘Future’) ...
[10:52:47.915] |  :  state: ‘created’
[10:52:47.915] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:47.916] |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:47.916] |  :  Using MultisessionFutureBackend ...
[10:52:47.916] |  :  .  Launching futures ...
[10:52:47.916] |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:52:47.916] |  :  .  |  :  Workers: [n=2]
[10:52:47.916] |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:47.918] |  :  .  |  :  FutureRegistry: ‘workers-e1d835c01e909644686c2c8b11ad7b30’
[10:52:47.918] |  :  .  |  :  requestWorker() ...
[10:52:47.919] |  :  .  |  :  .  requestNode() ...
[10:52:47.919] |  :  .  |  :  .  |  Number of workers: 2
[10:52:47.919] |  :  .  |  :  .  |  Polling for a free worker ...
[10:52:47.919] |  :  .  |  :  .  |  :  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'list', earlySignal = 0) ...
[10:52:47.919] |  :  .  |  :  .  |  :  .  Listing all futures
[10:52:47.919] |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:52:47.919] |  :  .  |  :  .  |  :  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'list', earlySignal = 0) ... done
[10:52:47.919] |  :  .  |  :  .  |  :  Total time: 0
[10:52:47.920] |  :  .  |  :  .  |  Polling for a free worker ... done
[10:52:47.920] |  :  .  |  :  .  |  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'list', earlySignal = 0) ...
[10:52:47.920] |  :  .  |  :  .  |  :  Listing all futures
[10:52:47.920] |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:52:47.920] |  :  .  |  :  .  |  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'list', earlySignal = 0) ... done
[10:52:47.920] |  :  .  |  :  .  |  Index of first available worker: 2
[10:52:47.920] |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:52:47.995] |  :  .  |  :  .  |  :  Worker is functional
[10:52:47.996] |  :  .  |  :  .  |  requestNode() ... done
[10:52:47.996] |  :  .  |  :  .  |  cluster node index: 2
[10:52:47.996] |  :  .  |  :  .  requestWorker() ... done
[10:52:47.996] |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:52:47.997] |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:52:47.997] |  :  .  |  :  .  launchFuture() ...
[10:52:47.997] |  :  .  |  :  .  |  cluster node index: 2
[10:52:47.997] |  :  .  |  :  .  |  getFutureData() ...
[10:52:47.997] |  :  .  |  :  .  |  :  getFutureCore() ...
[10:52:47.997] |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:47.997] |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:52:47.998] |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:52:47.998] |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:52:47.998] |  :  .  |  :  .  |  :  getFutureContext() ...
[10:52:47.998] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:47.998] |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:47.998] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:47.998] |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:47.999] |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:52:47.999] |  :  .  |  :  .  |  getFutureData() ... done
[10:52:47.999] |  :  .  |  :  .  |  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'add', earlySignal = 0) ...
[10:52:47.999] |  :  .  |  :  .  |  :  Appended future to position #2
[10:52:47.999] |  :  .  |  :  .  |  :  Number of registered futures: 2
[10:52:48.000] |  :  .  |  :  .  |  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'add', earlySignal = 0) ... done
[10:52:48.000] |  :  .  |  :  .  launchFuture() ... done
[10:52:48.000] |  :  .  |  :  .  MultisessionFuture started
[10:52:48.000] |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:52:48.000] |  :  .  |  Launching futures ... done
[10:52:48.000] |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:48.000] |  :  .  Using MultisessionFutureBackend ... done
[10:52:48.000] |  :  run() for Future (‘MultisessionFuture’) ... done
[10:52:48.001] |  :  result() for ClusterFuture ...
[10:52:48.001] |  :  .  assertValidConnection() ...
[10:52:48.001] |  :  .  |  cluster node index: 1
[10:52:48.002] |  :  .  assertValidConnection() ... done
[10:52:48.002] |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:52:48.003] |  :  .  |  cluster node index: 1
[10:52:48.012] |  :  .  |  [1] TRUE
[10:52:48.012] |  :  .  |  received data:
[10:52:48.012] |  :  .  |  List of 5
[10:52:48.012] |  :  .  |   $ type   : chr "VALUE"
[10:52:48.012] |  :  .  |   $ value  :List of 13
[10:52:48.012] |  :  .  |    ..$ value            : num 2
[10:52:48.012] |  :  .  |    ..$ visible          : logi TRUE
[10:52:48.012] |  :  .  |    ..$ stdout           : chr ""
[10:52:48.012] |  :  .  |    ..$ conditions       : list()
[10:52:48.012] |  :  .  |    ..$ rng              : logi FALSE
[10:52:48.012] |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:52:48.012] |  :  .  |    ..$ misuseConnections:List of 3
[10:52:48.012] |  :  .  |    .. ..$ added   : NULL
[10:52:48.012] |  :  .  |    .. ..$ removed : NULL
[10:52:48.012] |  :  .  |    .. ..$ replaced: NULL
[10:52:48.012] |  :  .  |    ..$ misuseDevices    : NULL
[10:52:48.012] |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:47"
[10:52:48.012] |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:48"
[10:52:48.012] |  :  .  |    ..$ session_uuid     : chr "67f9ebf230b8b620840400d84ab8fe62"
[10:52:48.012] |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:52:48.012] |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:48.012] |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:48.012] |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:48.012] |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:48.012] |  :  .  |    .. .. ..$ pid   : int 69476
[10:52:48.012] |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:47"
[10:52:48.012] |  :  .  |    .. .. ..$ random: int 2147483647
[10:52:48.012] |  :  .  |    ..$ r_info           :List of 4
[10:52:48.012] |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:48.012] |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:52:48.012] |  :  .  |    .. ..$ os           : chr "unix"
[10:52:48.012] |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:52:48.012] |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:52:48.012] |  :  .  |    ..$ version          : chr "1.8"
[10:52:48.012] |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:52:48.012] |  :  .  |   $ success: logi TRUE
[10:52:48.012] |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.055 0.004 0.059 0 0
[10:52:48.012] |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:48.012] |  :  .  |   $ tag    : NULL
[10:52:48.026] |  :  .  |  Received FutureResult
[10:52:48.026] |  :  .  |  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'remove', earlySignal = 0) ...
[10:52:48.026] |  :  .  |  :  Removed future from position #1
[10:52:48.026] |  :  .  |  :  Number of registered futures: 1
[10:52:48.026] |  :  .  |  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'remove', earlySignal = 0) ... done
[10:52:48.026] |  :  .  |  Erased future from future backend
[10:52:48.027] |  :  .  |  result() for ClusterFuture ...
[10:52:48.027] |  :  .  |  :  result already collected: FutureResult
[10:52:48.027] |  :  .  |  result() for ClusterFuture ... done
[10:52:48.027] |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:48.027] |  :  result() for ClusterFuture ... done
[10:52:48.027] |  :  result() for ClusterFuture ...
[10:52:48.027] |  :  .  result already collected: FutureResult
[10:52:48.027] |  :  result() for ClusterFuture ... done
u$a = 2
[10:52:48.028] |  :  result() for ClusterFuture ...
[10:52:48.028] |  :  .  assertValidConnection() ...
[10:52:48.028] |  :  .  |  cluster node index: 2
[10:52:48.028] |  :  .  assertValidConnection() ... done
[10:52:48.028] |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:52:48.028] |  :  .  |  cluster node index: 2
[10:52:48.091] |  :  .  |  [1] TRUE
[10:52:48.092] |  :  .  |  received data:
[10:52:48.092] |  :  .  |  List of 5
[10:52:48.092] |  :  .  |   $ type   : chr "VALUE"
[10:52:48.092] |  :  .  |   $ value  :List of 13
[10:52:48.092] |  :  .  |    ..$ value            : num 4
[10:52:48.092] |  :  .  |    ..$ visible          : logi TRUE
[10:52:48.092] |  :  .  |    ..$ stdout           : chr ""
[10:52:48.092] |  :  .  |    ..$ conditions       : list()
[10:52:48.092] |  :  .  |    ..$ rng              : logi FALSE
[10:52:48.092] |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:52:48.092] |  :  .  |    ..$ misuseConnections:List of 3
[10:52:48.092] |  :  .  |    .. ..$ added   : NULL
[10:52:48.092] |  :  .  |    .. ..$ removed : NULL
[10:52:48.092] |  :  .  |    .. ..$ replaced: NULL
[10:52:48.092] |  :  .  |    ..$ misuseDevices    : NULL
[10:52:48.092] |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:48"
[10:52:48.092] |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:48"
[10:52:48.092] |  :  .  |    ..$ session_uuid     : chr "c568afac70d8dab2cd4e9294ae2e4ae3"
[10:52:48.092] |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:52:48.092] |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:48.092] |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:48.092] |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:48.092] |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:48.092] |  :  .  |    .. .. ..$ pid   : int 69475
[10:52:48.092] |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:47"
[10:52:48.092] |  :  .  |    .. .. ..$ random: int 2147483647
[10:52:48.092] |  :  .  |    ..$ r_info           :List of 4
[10:52:48.092] |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:48.092] |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:52:48.092] |  :  .  |    .. ..$ os           : chr "unix"
[10:52:48.092] |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:52:48.092] |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:52:48.092] |  :  .  |    ..$ version          : chr "1.8"
[10:52:48.092] |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:52:48.092] |  :  .  |   $ success: logi TRUE
[10:52:48.092] |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.049 0.003 0.051 0 0
[10:52:48.092] |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:48.092] |  :  .  |   $ tag    : NULL
[10:52:48.105] |  :  .  |  Received FutureResult
[10:52:48.106] |  :  .  |  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'remove', earlySignal = 0) ...
[10:52:48.106] |  :  .  |  :  Removed future from position #1
[10:52:48.106] |  :  .  |  :  Number of registered futures: 0
[10:52:48.106] |  :  .  |  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'remove', earlySignal = 0) ... done
[10:52:48.106] |  :  .  |  Erased future from future backend
[10:52:48.106] |  :  .  |  result() for ClusterFuture ...
[10:52:48.106] |  :  .  |  :  result already collected: FutureResult
[10:52:48.106] |  :  .  |  result() for ClusterFuture ... done
[10:52:48.107] |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:48.107] |  :  result() for ClusterFuture ... done
[10:52:48.107] |  :  result() for ClusterFuture ...
[10:52:48.107] |  :  .  result already collected: FutureResult
[10:52:48.107] |  :  result() for ClusterFuture ... done
v$a = 4
[10:52:48.107] |  :  getGlobalsAndPackages() ...
[10:52:48.107] |  :  .  Searching for globals ...
[10:52:48.109] |  :  .  |  globals found: [3] ‘{’, ‘*’, ‘a’
[10:52:48.109] |  :  .  Searching for globals ... DONE
[10:52:48.109] |  :  .  Resolving globals: FALSE
[10:52:48.109] |  :  .  Search for packages associated with the globals ...
[10:52:48.109] |  :  .  |  Packages associated with globals: [1] ‘base’
[10:52:48.110] |  :  .  |  Packages: [1] ‘base’
[10:52:48.110] |  :  .  Search for packages associated with the globals ... DONE
[10:52:48.110] |  :  .  Packages after dropping 'base': [0] 
[10:52:48.110] |  :  .  globals: [1] ‘a’
[10:52:48.110] |  :  .  packages: [0] 
[10:52:48.110] |  :  getGlobalsAndPackages() ... done
[10:52:48.111] |  :  run() for Future (‘Future’) ...
[10:52:48.111] |  :  .  state: ‘created’
[10:52:48.111] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:48.111] |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:48.111] |  :  .  Using MultisessionFutureBackend ...
[10:52:48.111] |  :  .  |  Launching futures ...
[10:52:48.112] |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:52:48.112] |  :  .  |  :  .  Workers: [n=2]
[10:52:48.112] |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:48.116] |  :  .  |  :  .  FutureRegistry: ‘workers-e1d835c01e909644686c2c8b11ad7b30’
[10:52:48.116] |  :  .  |  :  .  requestWorker() ...
[10:52:48.116] |  :  .  |  :  .  |  requestNode() ...
[10:52:48.116] |  :  .  |  :  .  |  :  Number of workers: 2
[10:52:48.116] |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:52:48.116] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'list', earlySignal = 0) ...
[10:52:48.116] |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:52:48.116] |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:48.116] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'list', earlySignal = 0) ... done
[10:52:48.117] |  :  .  |  :  .  |  :  .  Total time: 0
[10:52:48.117] |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:52:48.117] |  :  .  |  :  .  |  :  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'list', earlySignal = 0) ...
[10:52:48.117] |  :  .  |  :  .  |  :  .  Listing all futures
[10:52:48.117] |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:52:48.117] |  :  .  |  :  .  |  :  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'list', earlySignal = 0) ... done
[10:52:48.117] |  :  .  |  :  .  |  :  Index of first available worker: 1
[10:52:48.117] |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:52:48.157] |  :  .  |  :  .  |  :  .  Worker is functional
[10:52:48.157] |  :  .  |  :  .  |  :  requestNode() ... done
[10:52:48.157] |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:48.157] |  :  .  |  :  .  |  requestWorker() ... done
[10:52:48.157] |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:52:48.157] |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:52:48.158] |  :  .  |  :  .  |  launchFuture() ...
[10:52:48.158] |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:48.158] |  :  .  |  :  .  |  :  getFutureData() ...
[10:52:48.158] |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:52:48.158] |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:52:48.158] |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:52:48.158] |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:52:48.158] |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:52:48.158] |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:52:48.158] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:48.159] |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:52:48.159] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:48.159] |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:52:48.159] |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:52:48.159] |  :  .  |  :  .  |  :  getFutureData() ... done
[10:52:48.159] |  :  .  |  :  .  |  :  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'add', earlySignal = 0) ...
[10:52:48.159] |  :  .  |  :  .  |  :  .  Appended future to position #1
[10:52:48.159] |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:52:48.160] |  :  .  |  :  .  |  :  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'add', earlySignal = 0) ... done
[10:52:48.160] |  :  .  |  :  .  |  launchFuture() ... done
[10:52:48.160] |  :  .  |  :  .  |  MultisessionFuture started
[10:52:48.160] |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:52:48.160] |  :  .  |  :  Launching futures ... done
[10:52:48.160] |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:48.160] |  :  .  |  Using MultisessionFutureBackend ... done
[10:52:48.160] |  :  .  run() for Future (‘MultisessionFuture’) ... done
[10:52:48.160] |  :  .  result() for ClusterFuture ...
[10:52:48.161] |  :  .  |  assertValidConnection() ...
[10:52:48.161] |  :  .  |  :  cluster node index: 1
[10:52:48.161] |  :  .  |  assertValidConnection() ... done
[10:52:48.161] |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:52:48.161] |  :  .  |  :  cluster node index: 1
[10:52:48.203] |  :  .  |  :  [1] TRUE
[10:52:48.204] |  :  .  |  :  received data:
[10:52:48.204] |  :  .  |  :  List of 5
[10:52:48.204] |  :  .  |  :   $ type   : chr "VALUE"
[10:52:48.204] |  :  .  |  :   $ value  :List of 13
[10:52:48.204] |  :  .  |  :    ..$ value            : num 2
[10:52:48.204] |  :  .  |  :    ..$ visible          : logi TRUE
[10:52:48.204] |  :  .  |  :    ..$ stdout           : chr ""
[10:52:48.204] |  :  .  |  :    ..$ conditions       : list()
[10:52:48.204] |  :  .  |  :    ..$ rng              : logi FALSE
[10:52:48.204] |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:52:48.204] |  :  .  |  :    ..$ misuseConnections:List of 3
[10:52:48.204] |  :  .  |  :    .. ..$ added   : NULL
[10:52:48.204] |  :  .  |  :    .. ..$ removed : NULL
[10:52:48.204] |  :  .  |  :    .. ..$ replaced: NULL
[10:52:48.204] |  :  .  |  :    ..$ misuseDevices    : NULL
[10:52:48.204] |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:48"
[10:52:48.204] |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:48"
[10:52:48.204] |  :  .  |  :    ..$ session_uuid     : chr "67f9ebf230b8b620840400d84ab8fe62"
[10:52:48.204] |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:52:48.204] |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:48.204] |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:48.204] |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:48.204] |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:48.204] |  :  .  |  :    .. .. ..$ pid   : int 69476
[10:52:48.204] |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:47"
[10:52:48.204] |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:52:48.204] |  :  .  |  :    ..$ r_info           :List of 4
[10:52:48.204] |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:48.204] |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:52:48.204] |  :  .  |  :    .. ..$ os           : chr "unix"
[10:52:48.204] |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:52:48.204] |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:52:48.204] |  :  .  |  :    ..$ version          : chr "1.8"
[10:52:48.204] |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:52:48.204] |  :  .  |  :   $ success: logi TRUE
[10:52:48.204] |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:52:48.204] |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:48.204] |  :  .  |  :   $ tag    : NULL
[10:52:48.214] |  :  .  |  :  Received FutureResult
[10:52:48.214] |  :  .  |  :  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'remove', earlySignal = 0) ...
[10:52:48.214] |  :  .  |  :  .  Removed future from position #1
[10:52:48.214] |  :  .  |  :  .  Number of registered futures: 0
[10:52:48.215] |  :  .  |  :  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'remove', earlySignal = 0) ... done
[10:52:48.215] |  :  .  |  :  Erased future from future backend
[10:52:48.215] |  :  .  |  :  result() for ClusterFuture ...
[10:52:48.215] |  :  .  |  :  .  result already collected: FutureResult
[10:52:48.215] |  :  .  |  :  result() for ClusterFuture ... done
[10:52:48.215] |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:48.215] |  :  .  result() for ClusterFuture ... done
[10:52:48.215] |  :  .  result() for ClusterFuture ...
[10:52:48.215] |  :  .  |  result already collected: FutureResult
[10:52:48.215] |  :  .  result() for ClusterFuture ... done
[10:52:48.216] |  :  .  getGlobalsAndPackages() ...
[10:52:48.216] |  :  .  |  Searching for globals ...
[10:52:48.217] |  :  .  |  :  globals found: [3] ‘{’, ‘*’, ‘a’
[10:52:48.217] |  :  .  |  Searching for globals ... DONE
[10:52:48.217] |  :  .  |  Resolving globals: FALSE
[10:52:48.217] |  :  .  |  Search for packages associated with the globals ...
[10:52:48.217] |  :  .  |  :  Packages associated with globals: [1] ‘base’
[10:52:48.217] |  :  .  |  :  Packages: [1] ‘base’
[10:52:48.218] |  :  .  |  Search for packages associated with the globals ... DONE
[10:52:48.218] |  :  .  |  Packages after dropping 'base': [0] 
[10:52:48.218] |  :  .  |  globals: [1] ‘a’
[10:52:48.218] |  :  .  |  packages: [0] 
[10:52:48.218] |  :  .  getGlobalsAndPackages() ... done
[10:52:48.218] |  :  .  run() for Future (‘Future’) ...
[10:52:48.218] |  :  .  |  state: ‘created’
[10:52:48.218] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:48.219] |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:48.219] |  :  .  |  Using MultisessionFutureBackend ...
[10:52:48.219] |  :  .  |  :  Launching futures ...
[10:52:48.219] |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:52:48.219] |  :  .  |  :  .  |  Workers: [n=2]
[10:52:48.219] |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:48.221] |  :  .  |  :  .  |  FutureRegistry: ‘workers-e1d835c01e909644686c2c8b11ad7b30’
[10:52:48.221] |  :  .  |  :  .  |  requestWorker() ...
[10:52:48.221] |  :  .  |  :  .  |  :  requestNode() ...
[10:52:48.221] |  :  .  |  :  .  |  :  .  Number of workers: 2
[10:52:48.221] |  :  .  |  :  .  |  :  .  Polling for a free worker ...
[10:52:48.221] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'list', earlySignal = 0) ...
[10:52:48.221] |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:52:48.221] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:52:48.221] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'list', earlySignal = 0) ... done
[10:52:48.221] |  :  .  |  :  .  |  :  .  |  Total time: 0
[10:52:48.222] |  :  .  |  :  .  |  :  .  Polling for a free worker ... done
[10:52:48.222] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'list', earlySignal = 0) ...
[10:52:48.222] |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:52:48.222] |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:48.222] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'list', earlySignal = 0) ... done
[10:52:48.222] |  :  .  |  :  .  |  :  .  Index of first available worker: 1
[10:52:48.222] |  :  .  |  :  .  |  :  .  Validate that the worker is functional ...
[10:52:48.300] |  :  .  |  :  .  |  :  .  |  Worker is functional
[10:52:48.301] |  :  .  |  :  .  |  :  .  requestNode() ... done
[10:52:48.301] |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:48.301] |  :  .  |  :  .  |  :  requestWorker() ... done
[10:52:48.301] |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ...
[10:52:48.301] |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:52:48.301] |  :  .  |  :  .  |  :  launchFuture() ...
[10:52:48.302] |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:48.302] |  :  .  |  :  .  |  :  .  getFutureData() ...
[10:52:48.302] |  :  .  |  :  .  |  :  .  |  getFutureCore() ...
[10:52:48.302] |  :  .  |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:52:48.302] |  :  .  |  :  .  |  :  .  |  getFutureCore() ... done
[10:52:48.302] |  :  .  |  :  .  |  :  .  |  getFutureCapture() ...
[10:52:48.302] |  :  .  |  :  .  |  :  .  |  getFutureCapture() ... done
[10:52:48.302] |  :  .  |  :  .  |  :  .  |  getFutureContext() ...
[10:52:48.302] |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:48.302] |  :  .  |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:52:48.303] |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:48.303] |  :  .  |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:52:48.303] |  :  .  |  :  .  |  :  .  |  getFutureContext() ... done
[10:52:48.303] |  :  .  |  :  .  |  :  .  getFutureData() ... done
[10:52:48.303] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'add', earlySignal = 0) ...
[10:52:48.303] |  :  .  |  :  .  |  :  .  |  Appended future to position #1
[10:52:48.303] |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:52:48.304] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'add', earlySignal = 0) ... done
[10:52:48.304] |  :  .  |  :  .  |  :  launchFuture() ... done
[10:52:48.304] |  :  .  |  :  .  |  :  MultisessionFuture started
[10:52:48.304] |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:52:48.304] |  :  .  |  :  .  Launching futures ... done
[10:52:48.304] |  :  .  |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:48.304] |  :  .  |  :  Using MultisessionFutureBackend ... done
[10:52:48.304] |  :  .  |  run() for Future (‘MultisessionFuture’) ... done
[10:52:48.304] |  :  .  |  result() for ClusterFuture ...
[10:52:48.305] |  :  .  |  :  assertValidConnection() ...
[10:52:48.305] |  :  .  |  :  .  cluster node index: 1
[10:52:48.305] |  :  .  |  :  assertValidConnection() ... done
[10:52:48.305] |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:52:48.305] |  :  .  |  :  .  cluster node index: 1
[10:52:48.347] |  :  .  |  :  .  [1] TRUE
[10:52:48.348] |  :  .  |  :  .  received data:
[10:52:48.348] |  :  .  |  :  .  List of 5
[10:52:48.348] |  :  .  |  :  .   $ type   : chr "VALUE"
[10:52:48.348] |  :  .  |  :  .   $ value  :List of 13
[10:52:48.348] |  :  .  |  :  .    ..$ value            : num 2
[10:52:48.348] |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:52:48.348] |  :  .  |  :  .    ..$ stdout           : chr ""
[10:52:48.348] |  :  .  |  :  .    ..$ conditions       : list()
[10:52:48.348] |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:52:48.348] |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:52:48.348] |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:52:48.348] |  :  .  |  :  .    .. ..$ added   : NULL
[10:52:48.348] |  :  .  |  :  .    .. ..$ removed : NULL
[10:52:48.348] |  :  .  |  :  .    .. ..$ replaced: NULL
[10:52:48.348] |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:52:48.348] |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:48"
[10:52:48.348] |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:48"
[10:52:48.348] |  :  .  |  :  .    ..$ session_uuid     : chr "67f9ebf230b8b620840400d84ab8fe62"
[10:52:48.348] |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:52:48.348] |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:48.348] |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:48.348] |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:48.348] |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:48.348] |  :  .  |  :  .    .. .. ..$ pid   : int 69476
[10:52:48.348] |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:47"
[10:52:48.348] |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:52:48.348] |  :  .  |  :  .    ..$ r_info           :List of 4
[10:52:48.348] |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:48.348] |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:52:48.348] |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:52:48.348] |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:52:48.348] |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:52:48.348] |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:52:48.348] |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:52:48.348] |  :  .  |  :  .   $ success: logi TRUE
[10:52:48.348] |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:52:48.348] |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:48.348] |  :  .  |  :  .   $ tag    : NULL
[10:52:48.358] |  :  .  |  :  .  Received FutureResult
[10:52:48.358] |  :  .  |  :  .  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'remove', earlySignal = 0) ...
[10:52:48.358] |  :  .  |  :  .  |  Removed future from position #1
[10:52:48.358] |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:48.358] |  :  .  |  :  .  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'remove', earlySignal = 0) ... done
[10:52:48.359] |  :  .  |  :  .  Erased future from future backend
[10:52:48.359] |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:48.359] |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:48.359] |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:48.359] |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:48.359] |  :  .  |  result() for ClusterFuture ... done
[10:52:48.359] |  :  .  |  result() for ClusterFuture ...
[10:52:48.359] |  :  .  |  :  result already collected: FutureResult
[10:52:48.359] |  :  .  |  result() for ClusterFuture ... done
[10:52:48.360] |  :  .  |  getGlobalsAndPackages() ...
[10:52:48.360] |  :  .  |  :  Searching for globals ...
[10:52:48.361] |  :  .  |  :  .  globals found: [3] ‘{’, ‘*’, ‘a’
[10:52:48.361] |  :  .  |  :  Searching for globals ... DONE
[10:52:48.361] |  :  .  |  :  Resolving globals: FALSE
[10:52:48.361] |  :  .  |  :  Search for packages associated with the globals ...
[10:52:48.361] |  :  .  |  :  .  Packages associated with globals: [1] ‘base’
[10:52:48.361] |  :  .  |  :  .  Packages: [1] ‘base’
[10:52:48.362] |  :  .  |  :  Search for packages associated with the globals ... DONE
[10:52:48.362] |  :  .  |  :  Packages after dropping 'base': [0] 
[10:52:48.362] |  :  .  |  :  globals: [1] ‘a’
[10:52:48.362] |  :  .  |  :  packages: [0] 
[10:52:48.362] |  :  .  |  getGlobalsAndPackages() ... done
[10:52:48.362] |  :  .  |  run() for Future (‘Future’) ...
[10:52:48.362] |  :  .  |  :  state: ‘created’
[10:52:48.362] |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:48.363] |  :  .  |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:48.363] |  :  .  |  :  Using MultisessionFutureBackend ...
[10:52:48.363] |  :  .  |  :  .  Launching futures ...
[10:52:48.363] |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:52:48.363] |  :  .  |  :  .  |  :  Workers: [n=2]
[10:52:48.363] |  :  .  |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:48.365] |  :  .  |  :  .  |  :  FutureRegistry: ‘workers-e1d835c01e909644686c2c8b11ad7b30’
[10:52:48.365] |  :  .  |  :  .  |  :  requestWorker() ...
[10:52:48.365] |  :  .  |  :  .  |  :  .  requestNode() ...
[10:52:48.365] |  :  .  |  :  .  |  :  .  |  Number of workers: 2
[10:52:48.365] |  :  .  |  :  .  |  :  .  |  Polling for a free worker ...
[10:52:48.365] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'list', earlySignal = 0) ...
[10:52:48.365] |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:52:48.365] |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:52:48.365] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'list', earlySignal = 0) ... done
[10:52:48.366] |  :  .  |  :  .  |  :  .  |  :  Total time: 0
[10:52:48.366] |  :  .  |  :  .  |  :  .  |  Polling for a free worker ... done
[10:52:48.366] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'list', earlySignal = 0) ...
[10:52:48.366] |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:52:48.366] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:52:48.366] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'list', earlySignal = 0) ... done
[10:52:48.366] |  :  .  |  :  .  |  :  .  |  Index of first available worker: 1
[10:52:48.366] |  :  .  |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:52:48.445] |  :  .  |  :  .  |  :  .  |  :  Worker is functional
[10:52:48.445] |  :  .  |  :  .  |  :  .  |  requestNode() ... done
[10:52:48.446] |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:52:48.446] |  :  .  |  :  .  |  :  .  requestWorker() ... done
[10:52:48.446] |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:52:48.446] |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:52:48.446] |  :  .  |  :  .  |  :  .  launchFuture() ...
[10:52:48.447] |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:52:48.447] |  :  .  |  :  .  |  :  .  |  getFutureData() ...
[10:52:48.447] |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ...
[10:52:48.447] |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:48.447] |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:52:48.447] |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:52:48.447] |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:52:48.447] |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ...
[10:52:48.447] |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:48.447] |  :  .  |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:48.448] |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:48.448] |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:48.448] |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:52:48.448] |  :  .  |  :  .  |  :  .  |  getFutureData() ... done
[10:52:48.448] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'add', earlySignal = 0) ...
[10:52:48.448] |  :  .  |  :  .  |  :  .  |  :  Appended future to position #1
[10:52:48.448] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:52:48.449] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'add', earlySignal = 0) ... done
[10:52:48.449] |  :  .  |  :  .  |  :  .  launchFuture() ... done
[10:52:48.449] |  :  .  |  :  .  |  :  .  MultisessionFuture started
[10:52:48.449] |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:52:48.449] |  :  .  |  :  .  |  Launching futures ... done
[10:52:48.449] |  :  .  |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:48.449] |  :  .  |  :  .  Using MultisessionFutureBackend ... done
[10:52:48.449] |  :  .  |  :  run() for Future (‘MultisessionFuture’) ... done
[10:52:48.449] |  :  .  |  :  result() for ClusterFuture ...
[10:52:48.450] |  :  .  |  :  .  assertValidConnection() ...
[10:52:48.450] |  :  .  |  :  .  |  cluster node index: 1
[10:52:48.450] |  :  .  |  :  .  assertValidConnection() ... done
[10:52:48.450] |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:52:48.450] |  :  .  |  :  .  |  cluster node index: 1
[10:52:48.492] |  :  .  |  :  .  |  [1] TRUE
[10:52:48.493] |  :  .  |  :  .  |  received data:
[10:52:48.493] |  :  .  |  :  .  |  List of 5
[10:52:48.493] |  :  .  |  :  .  |   $ type   : chr "VALUE"
[10:52:48.493] |  :  .  |  :  .  |   $ value  :List of 13
[10:52:48.493] |  :  .  |  :  .  |    ..$ value            : num 2
[10:52:48.493] |  :  .  |  :  .  |    ..$ visible          : logi TRUE
[10:52:48.493] |  :  .  |  :  .  |    ..$ stdout           : chr ""
[10:52:48.493] |  :  .  |  :  .  |    ..$ conditions       : list()
[10:52:48.493] |  :  .  |  :  .  |    ..$ rng              : logi FALSE
[10:52:48.493] |  :  .  |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:52:48.493] |  :  .  |  :  .  |    ..$ misuseConnections:List of 3
[10:52:48.493] |  :  .  |  :  .  |    .. ..$ added   : NULL
[10:52:48.493] |  :  .  |  :  .  |    .. ..$ removed : NULL
[10:52:48.493] |  :  .  |  :  .  |    .. ..$ replaced: NULL
[10:52:48.493] |  :  .  |  :  .  |    ..$ misuseDevices    : NULL
[10:52:48.493] |  :  .  |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:48"
[10:52:48.493] |  :  .  |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:48"
[10:52:48.493] |  :  .  |  :  .  |    ..$ session_uuid     : chr "67f9ebf230b8b620840400d84ab8fe62"
[10:52:48.493] |  :  .  |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:52:48.493] |  :  .  |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:48.493] |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:48.493] |  :  .  |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:48.493] |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:48.493] |  :  .  |  :  .  |    .. .. ..$ pid   : int 69476
[10:52:48.493] |  :  .  |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:47"
[10:52:48.493] |  :  .  |  :  .  |    .. .. ..$ random: int 2147483647
[10:52:48.493] |  :  .  |  :  .  |    ..$ r_info           :List of 4
[10:52:48.493] |  :  .  |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:48.493] |  :  .  |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:52:48.493] |  :  .  |  :  .  |    .. ..$ os           : chr "unix"
[10:52:48.493] |  :  .  |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:52:48.493] |  :  .  |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:52:48.493] |  :  .  |  :  .  |    ..$ version          : chr "1.8"
[10:52:48.493] |  :  .  |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:52:48.493] |  :  .  |  :  .  |   $ success: logi TRUE
[10:52:48.493] |  :  .  |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:52:48.493] |  :  .  |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:48.493] |  :  .  |  :  .  |   $ tag    : NULL
[10:52:48.504] |  :  .  |  :  .  |  Received FutureResult
[10:52:48.505] |  :  .  |  :  .  |  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'remove', earlySignal = 0) ...
[10:52:48.505] |  :  .  |  :  .  |  :  Removed future from position #1
[10:52:48.505] |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:52:48.505] |  :  .  |  :  .  |  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'remove', earlySignal = 0) ... done
[10:52:48.505] |  :  .  |  :  .  |  Erased future from future backend
[10:52:48.505] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:48.505] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:52:48.505] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:52:48.505] |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:48.505] |  :  .  |  :  result() for ClusterFuture ... done
[10:52:48.506] |  :  .  |  :  result() for ClusterFuture ...
[10:52:48.506] |  :  .  |  :  .  result already collected: FutureResult
[10:52:48.506] |  :  .  |  :  result() for ClusterFuture ... done
[10:52:48.506] |  :  .  |  :  getGlobalsAndPackages() ...
[10:52:48.506] |  :  .  |  :  .  Searching for globals ...
[10:52:48.507] |  :  .  |  :  .  |  globals found: [3] ‘{’, ‘*’, ‘a’
[10:52:48.507] |  :  .  |  :  .  Searching for globals ... DONE
[10:52:48.507] |  :  .  |  :  .  Resolving globals: FALSE
[10:52:48.507] |  :  .  |  :  .  Search for packages associated with the globals ...
[10:52:48.508] |  :  .  |  :  .  |  Packages associated with globals: [1] ‘base’
[10:52:48.508] |  :  .  |  :  .  |  Packages: [1] ‘base’
[10:52:48.508] |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:52:48.508] |  :  .  |  :  .  Packages after dropping 'base': [0] 
[10:52:48.508] |  :  .  |  :  .  globals: [1] ‘a’
[10:52:48.508] |  :  .  |  :  .  packages: [0] 
[10:52:48.508] |  :  .  |  :  getGlobalsAndPackages() ... done
[10:52:48.509] |  :  .  |  :  run() for Future (‘Future’) ...
[10:52:48.509] |  :  .  |  :  .  state: ‘created’
[10:52:48.509] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:48.509] |  :  .  |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:48.509] |  :  .  |  :  .  Using MultisessionFutureBackend ...
[10:52:48.509] |  :  .  |  :  .  |  Launching futures ...
[10:52:48.509] |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:52:48.509] |  :  .  |  :  .  |  :  .  Workers: [n=2]
[10:52:48.509] |  :  .  |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:48.511] |  :  .  |  :  .  |  :  .  FutureRegistry: ‘workers-e1d835c01e909644686c2c8b11ad7b30’
[10:52:48.511] |  :  .  |  :  .  |  :  .  requestWorker() ...
[10:52:48.511] |  :  .  |  :  .  |  :  .  |  requestNode() ...
[10:52:48.511] |  :  .  |  :  .  |  :  .  |  :  Number of workers: 2
[10:52:48.511] |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:52:48.511] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'list', earlySignal = 0) ...
[10:52:48.512] |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:52:48.512] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:48.512] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'list', earlySignal = 0) ... done
[10:52:48.512] |  :  .  |  :  .  |  :  .  |  :  .  Total time: 0
[10:52:48.512] |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:52:48.512] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'list', earlySignal = 0) ...
[10:52:48.512] |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:52:48.512] |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:52:48.512] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'list', earlySignal = 0) ... done
[10:52:48.512] |  :  .  |  :  .  |  :  .  |  :  Index of first available worker: 1
[10:52:48.512] |  :  .  |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:52:48.594] |  :  .  |  :  .  |  :  .  |  :  .  Worker is functional
[10:52:48.595] |  :  .  |  :  .  |  :  .  |  :  requestNode() ... done
[10:52:48.595] |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:48.595] |  :  .  |  :  .  |  :  .  |  requestWorker() ... done
[10:52:48.595] |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:52:48.595] |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:52:48.596] |  :  .  |  :  .  |  :  .  |  launchFuture() ...
[10:52:48.596] |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:48.596] |  :  .  |  :  .  |  :  .  |  :  getFutureData() ...
[10:52:48.596] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:52:48.596] |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:52:48.596] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:52:48.596] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:52:48.596] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:52:48.596] |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:52:48.596] |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:48.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:52:48.597] |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:48.597] |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:52:48.597] |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:52:48.597] |  :  .  |  :  .  |  :  .  |  :  getFutureData() ... done
[10:52:48.597] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'add', earlySignal = 0) ...
[10:52:48.597] |  :  .  |  :  .  |  :  .  |  :  .  Appended future to position #1
[10:52:48.598] |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:52:48.598] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'add', earlySignal = 0) ... done
[10:52:48.598] |  :  .  |  :  .  |  :  .  |  launchFuture() ... done
[10:52:48.598] |  :  .  |  :  .  |  :  .  |  MultisessionFuture started
[10:52:48.598] |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:52:48.598] |  :  .  |  :  .  |  :  Launching futures ... done
[10:52:48.598] |  :  .  |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:48.598] |  :  .  |  :  .  |  Using MultisessionFutureBackend ... done
[10:52:48.598] |  :  .  |  :  .  run() for Future (‘MultisessionFuture’) ... done
[10:52:48.599] |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:48.599] |  :  .  |  :  .  |  assertValidConnection() ...
[10:52:48.599] |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:48.599] |  :  .  |  :  .  |  assertValidConnection() ... done
[10:52:48.599] |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:52:48.599] |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:48.641] |  :  .  |  :  .  |  :  [1] TRUE
[10:52:48.642] |  :  .  |  :  .  |  :  received data:
[10:52:48.642] |  :  .  |  :  .  |  :  List of 5
[10:52:48.642] |  :  .  |  :  .  |  :   $ type   : chr "VALUE"
[10:52:48.642] |  :  .  |  :  .  |  :   $ value  :List of 13
[10:52:48.642] |  :  .  |  :  .  |  :    ..$ value            : num 2
[10:52:48.642] |  :  .  |  :  .  |  :    ..$ visible          : logi TRUE
[10:52:48.642] |  :  .  |  :  .  |  :    ..$ stdout           : chr ""
[10:52:48.642] |  :  .  |  :  .  |  :    ..$ conditions       : list()
[10:52:48.642] |  :  .  |  :  .  |  :    ..$ rng              : logi FALSE
[10:52:48.642] |  :  .  |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:52:48.642] |  :  .  |  :  .  |  :    ..$ misuseConnections:List of 3
[10:52:48.642] |  :  .  |  :  .  |  :    .. ..$ added   : NULL
[10:52:48.642] |  :  .  |  :  .  |  :    .. ..$ removed : NULL
[10:52:48.642] |  :  .  |  :  .  |  :    .. ..$ replaced: NULL
[10:52:48.642] |  :  .  |  :  .  |  :    ..$ misuseDevices    : NULL
[10:52:48.642] |  :  .  |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:48"
[10:52:48.642] |  :  .  |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:48"
[10:52:48.642] |  :  .  |  :  .  |  :    ..$ session_uuid     : chr "67f9ebf230b8b620840400d84ab8fe62"
[10:52:48.642] |  :  .  |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:52:48.642] |  :  .  |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:48.642] |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:48.642] |  :  .  |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:48.642] |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:48.642] |  :  .  |  :  .  |  :    .. .. ..$ pid   : int 69476
[10:52:48.642] |  :  .  |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:47"
[10:52:48.642] |  :  .  |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:52:48.642] |  :  .  |  :  .  |  :    ..$ r_info           :List of 4
[10:52:48.642] |  :  .  |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:48.642] |  :  .  |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:52:48.642] |  :  .  |  :  .  |  :    .. ..$ os           : chr "unix"
[10:52:48.642] |  :  .  |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:52:48.642] |  :  .  |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:52:48.642] |  :  .  |  :  .  |  :    ..$ version          : chr "1.8"
[10:52:48.642] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:52:48.642] |  :  .  |  :  .  |  :   $ success: logi TRUE
[10:52:48.642] |  :  .  |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.003 0.001 0.003 0 0
[10:52:48.642] |  :  .  |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:48.642] |  :  .  |  :  .  |  :   $ tag    : NULL
[10:52:48.652] |  :  .  |  :  .  |  :  Received FutureResult
[10:52:48.652] |  :  .  |  :  .  |  :  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'remove', earlySignal = 0) ...
[10:52:48.652] |  :  .  |  :  .  |  :  .  Removed future from position #1
[10:52:48.652] |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:52:48.652] |  :  .  |  :  .  |  :  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'remove', earlySignal = 0) ... done
[10:52:48.653] |  :  .  |  :  .  |  :  Erased future from future backend
[10:52:48.653] |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:52:48.653] |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:52:48.653] |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:52:48.653] |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:48.653] |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:48.653] |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:48.653] |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:48.653] |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:48.654] |  :  .  |  :  .  getGlobalsAndPackages() ...
[10:52:48.654] |  :  .  |  :  .  |  Searching for globals ...
[10:52:48.655] |  :  .  |  :  .  |  :  globals found: [3] ‘{’, ‘*’, ‘a’
[10:52:48.655] |  :  .  |  :  .  |  Searching for globals ... DONE
[10:52:48.655] |  :  .  |  :  .  |  Resolving globals: FALSE
[10:52:48.655] |  :  .  |  :  .  |  Search for packages associated with the globals ...
[10:52:48.655] |  :  .  |  :  .  |  :  Packages associated with globals: [1] ‘base’
[10:52:48.655] |  :  .  |  :  .  |  :  Packages: [1] ‘base’
[10:52:48.656] |  :  .  |  :  .  |  Search for packages associated with the globals ... DONE
[10:52:48.656] |  :  .  |  :  .  |  Packages after dropping 'base': [0] 
[10:52:48.656] |  :  .  |  :  .  |  globals: [1] ‘a’
[10:52:48.656] |  :  .  |  :  .  |  packages: [0] 
[10:52:48.656] |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:52:48.656] |  :  .  |  :  .  run() for Future (‘Future’) ...
[10:52:48.656] |  :  .  |  :  .  |  state: ‘created’
[10:52:48.656] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:48.657] |  :  .  |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:48.657] |  :  .  |  :  .  |  Using MultisessionFutureBackend ...
[10:52:48.657] |  :  .  |  :  .  |  :  Launching futures ...
[10:52:48.657] |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:52:48.657] |  :  .  |  :  .  |  :  .  |  Workers: [n=2]
[10:52:48.657] |  :  .  |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:48.659] |  :  .  |  :  .  |  :  .  |  FutureRegistry: ‘workers-e1d835c01e909644686c2c8b11ad7b30’
[10:52:48.659] |  :  .  |  :  .  |  :  .  |  requestWorker() ...
[10:52:48.659] |  :  .  |  :  .  |  :  .  |  :  requestNode() ...
[10:52:48.659] |  :  .  |  :  .  |  :  .  |  :  .  Number of workers: 2
[10:52:48.659] |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ...
[10:52:48.659] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'list', earlySignal = 0) ...
[10:52:48.659] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:52:48.659] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:52:48.660] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'list', earlySignal = 0) ... done
[10:52:48.660] |  :  .  |  :  .  |  :  .  |  :  .  |  Total time: 0
[10:52:48.660] |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ... done
[10:52:48.660] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'list', earlySignal = 0) ...
[10:52:48.660] |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:52:48.660] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:48.660] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'list', earlySignal = 0) ... done
[10:52:48.660] |  :  .  |  :  .  |  :  .  |  :  .  Index of first available worker: 1
[10:52:48.660] |  :  .  |  :  .  |  :  .  |  :  .  Validate that the worker is functional ...
[10:52:48.740] |  :  .  |  :  .  |  :  .  |  :  .  |  Worker is functional
[10:52:48.740] |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ... done
[10:52:48.740] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:48.740] |  :  .  |  :  .  |  :  .  |  :  requestWorker() ... done
[10:52:48.740] |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ...
[10:52:48.741] |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:52:48.741] |  :  .  |  :  .  |  :  .  |  :  launchFuture() ...
[10:52:48.741] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:48.741] |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ...
[10:52:48.741] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ...
[10:52:48.741] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:52:48.741] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ... done
[10:52:48.741] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ...
[10:52:48.741] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ... done
[10:52:48.741] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ...
[10:52:48.742] |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:48.742] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:52:48.742] |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:48.742] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:52:48.742] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ... done
[10:52:48.742] |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ... done
[10:52:48.742] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'add', earlySignal = 0) ...
[10:52:48.743] |  :  .  |  :  .  |  :  .  |  :  .  |  Appended future to position #1
[10:52:48.743] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:52:48.743] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'add', earlySignal = 0) ... done
[10:52:48.743] |  :  .  |  :  .  |  :  .  |  :  launchFuture() ... done
[10:52:48.743] |  :  .  |  :  .  |  :  .  |  :  MultisessionFuture started
[10:52:48.743] |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:52:48.743] |  :  .  |  :  .  |  :  .  Launching futures ... done
[10:52:48.743] |  :  .  |  :  .  |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:48.743] |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ... done
[10:52:48.743] |  :  .  |  :  .  |  run() for Future (‘MultisessionFuture’) ... done
[10:52:48.744] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:48.744] |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:52:48.744] |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:48.744] |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:52:48.744] |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:52:48.744] |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:48.786] |  :  .  |  :  .  |  :  .  [1] TRUE
[10:52:48.787] |  :  .  |  :  .  |  :  .  received data:
[10:52:48.787] |  :  .  |  :  .  |  :  .  List of 5
[10:52:48.787] |  :  .  |  :  .  |  :  .   $ type   : chr "VALUE"
[10:52:48.787] |  :  .  |  :  .  |  :  .   $ value  :List of 13
[10:52:48.787] |  :  .  |  :  .  |  :  .    ..$ value            : num 2
[10:52:48.787] |  :  .  |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:52:48.787] |  :  .  |  :  .  |  :  .    ..$ stdout           : chr ""
[10:52:48.787] |  :  .  |  :  .  |  :  .    ..$ conditions       : list()
[10:52:48.787] |  :  .  |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:52:48.787] |  :  .  |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:52:48.787] |  :  .  |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:52:48.787] |  :  .  |  :  .  |  :  .    .. ..$ added   : NULL
[10:52:48.787] |  :  .  |  :  .  |  :  .    .. ..$ removed : NULL
[10:52:48.787] |  :  .  |  :  .  |  :  .    .. ..$ replaced: NULL
[10:52:48.787] |  :  .  |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:52:48.787] |  :  .  |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:48"
[10:52:48.787] |  :  .  |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:48"
[10:52:48.787] |  :  .  |  :  .  |  :  .    ..$ session_uuid     : chr "67f9ebf230b8b620840400d84ab8fe62"
[10:52:48.787] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:52:48.787] |  :  .  |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:48.787] |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:48.787] |  :  .  |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:48.787] |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:48.787] |  :  .  |  :  .  |  :  .    .. .. ..$ pid   : int 69476
[10:52:48.787] |  :  .  |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:47"
[10:52:48.787] |  :  .  |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:52:48.787] |  :  .  |  :  .  |  :  .    ..$ r_info           :List of 4
[10:52:48.787] |  :  .  |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:48.787] |  :  .  |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:52:48.787] |  :  .  |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:52:48.787] |  :  .  |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:52:48.787] |  :  .  |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:52:48.787] |  :  .  |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:52:48.787] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:52:48.787] |  :  .  |  :  .  |  :  .   $ success: logi TRUE
[10:52:48.787] |  :  .  |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.003 0.001 0.003 0 0
[10:52:48.787] |  :  .  |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:48.787] |  :  .  |  :  .  |  :  .   $ tag    : NULL
[10:52:48.798] |  :  .  |  :  .  |  :  .  Received FutureResult
[10:52:48.798] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'remove', earlySignal = 0) ...
[10:52:48.798] |  :  .  |  :  .  |  :  .  |  Removed future from position #1
[10:52:48.799] |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:48.799] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-e1d835c01e909644686c2c8b11ad7b30', action = 'remove', earlySignal = 0) ... done
[10:52:48.799] |  :  .  |  :  .  |  :  .  Erased future from future backend
[10:52:48.799] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:48.799] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:48.799] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:48.799] |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:48.799] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:52:48.799] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:48.799] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:52:48.800] |  :  .  |  :  .  |  result() for ClusterFuture ... done
*** futureAssign() with ‘multisession’ futures ... DONE
Testing with 2 cores ... DONE

> message("*** futureAssign() - lazy = TRUE / FALSE ... DONE")
*** futureAssign() - lazy = TRUE / FALSE ... DONE

> message("*** futureAssign() ... DONE")
*** futureAssign() ... DONE
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=1s, sys.self=0.09s, elapsed=2s, user.child=0.5s, sys.child=0.5s
Test ‘futureAssign’ ... success
> 
