
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script incl/testme/test-resolve.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future:::testme("resolve")
Test ‘resolve’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future/testme/test-resolve.R’

> library(future)
[10:54:16.300] Option 'future.startup.script': TRUE
[10:54:16.301] Future startup scripts considered: ‘.future.R’, ‘~/.future.R’
[10:54:16.301] Future startup scripts found: <none>

> library(listenv)

> options(future.debug = FALSE)

> sleep <- function(n) Sys.sleep(0.01 * n)

> strategies <- supportedStrategies()

> message("*** resolve() ...")
*** resolve() ...

> message("*** resolve() for default ...")
*** resolve() for default ...

> x <- 1

> y <- resolve(x)

> stopifnot(identical(y, x))

> message("*** resolve() for default ... DONE")
*** resolve() for default ... DONE

> for (strategy in strategies) {
+     message(sprintf("- plan('%s') ...", strategy))
+     plan(strategy)
+     if (strategy == "multisession" && ava .... [TRUNCATED] 
- plan('sequential') ...
*** resolve() for lists ...
*** resolve() for lists ... DONE
*** resolve() for environments ...
*** resolve() for environments ... DONE
*** resolve() for list environments ...
*** resolve() for list environments ... DONE
- plan('sequential') ...
- plan('multicore') ...
*** resolve() for lists ...
*** resolve() for lists ... DONE
*** resolve() for environments ...
*** resolve() for environments ... DONE
*** resolve() for list environments ...
*** resolve() for list environments ... DONE
- plan('multicore') ...
- plan('multisession') ...
*** resolve() for Future objects ...
- result = FALSE, recursive = FALSE ...
- w/ exception ...
- result = FALSE, recursive = FALSE ... DONE
- result = FALSE, recursive = TRUE ...
- w/ exception ...
- result = FALSE, recursive = TRUE ... DONE
- result = FALSE, recursive = -1 ...
- w/ exception ...
- result = FALSE, recursive = -1 ... DONE
- result = FALSE, recursive = 0 ...
- w/ exception ...
- result = FALSE, recursive = 0 ... DONE
- result = FALSE, recursive = 1 ...
- w/ exception ...
- result = FALSE, recursive = 1 ... DONE
- result = FALSE, recursive = 2 ...
- w/ exception ...
- result = FALSE, recursive = 2 ... DONE
- result = FALSE, recursive = Inf ...
- w/ exception ...
- result = FALSE, recursive = Inf ... DONE
- result = TRUE, recursive = FALSE ...
- w/ exception ...
- result = TRUE, recursive = FALSE ... DONE
- result = TRUE, recursive = TRUE ...
- w/ exception ...
- result = TRUE, recursive = TRUE ... DONE
- result = TRUE, recursive = -1 ...
- w/ exception ...
- result = TRUE, recursive = -1 ... DONE
- result = TRUE, recursive = 0 ...
- w/ exception ...
- result = TRUE, recursive = 0 ... DONE
- result = TRUE, recursive = 1 ...
- w/ exception ...
- result = TRUE, recursive = 1 ... DONE
- result = TRUE, recursive = 2 ...
- w/ exception ...
- result = TRUE, recursive = 2 ... DONE
- result = TRUE, recursive = Inf ...
- w/ exception ...
- result = TRUE, recursive = Inf ... DONE
*** resolve() for Future objects ... DONE
*** resolve() for lists ...
*** resolve() for lists ... DONE
*** resolve() for environments ...
*** resolve() for environments ... DONE
*** resolve() for list environments ...
*** resolve() for list environments ... DONE
- plan('multisession') ...

> message("*** resolve() - globals with non-trustful length() ...")
*** resolve() - globals with non-trustful length() ...

> length.CantTrustLength <- function(x) length(unclass(x)) + 
+     1

> .length <- future:::.length

> x <- structure(as.list(1:3), class = c("CantTrustLength", 
+     "list"))

> str(list(n = length(x), n_true = .length(x)))
List of 2
 $ n     : int 4
 $ n_true: int 3

> stopifnot(length(x) > .length(x))

> x <- resolve(x)

> message("*** resolve() - globals with non-trustful length() ... DONE")
*** resolve() - globals with non-trustful length() ... DONE

> message("*** resolved() - default ...")
*** resolved() - default ...

> res <- resolved(42)

> stopifnot(isTRUE(res))

> message("*** resolved() - default ... DONE")
*** resolved() - default ... DONE

> message("*** resolve() ... DONE")
*** resolve() ... DONE
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=4s, sys.self=0.3s, elapsed=1e+01s, user.child=0.3s, sys.child=0.6s
Test ‘resolve’ ... success
> 
