
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script incl/testme/test-requestNode.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future:::testme("requestNode")
Test ‘requestNode’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future/testme/test-requestNode.R’

> library(future)
[10:54:12.822] Option 'future.startup.script': TRUE
[10:54:12.823] Future startup scripts considered: ‘.future.R’, ‘~/.future.R’
[10:54:12.823] Future startup scripts found: <none>

> message("*** requestNode() ...")
*** requestNode() ...

> message("*** requestNode() - exceptions ...")
*** requestNode() - exceptions ...

> workers <- makeClusterPSOCK(2)

> print(workers)
Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)

> res <- tryCatch({
+     requestNode(function() {
+     }, workers = workers, timeout = -1)
+ }, error = identity)

> stopifnot(inherits(res, "error"))

> res <- tryCatch({
+     requestNode(function() {
+     }, workers = workers, alpha = 0)
+ }, error = identity)

> stopifnot(inherits(res, "error"))

> parallel::stopCluster(workers)

> message("*** requestNode() - exceptions ... DONE")
*** requestNode() - exceptions ... DONE

> message("*** requestNode() - timeout ...")
*** requestNode() - timeout ...

> plan(cluster, workers = "localhost")
[10:54:13.310] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:13.311] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:54:13.312] |  :  all.equal() for FutureStrategyList ...
[10:54:13.312] |  :  .  New stack:
[10:54:13.312] |  :  .  List of 1
[10:54:13.312] |  :  .   $ :function (..., workers = "localhost", envir = parent.frame())  
[10:54:13.312] |  :  .    ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[10:54:13.312] |  :  .    ..- attr(*, "init")= logi TRUE
[10:54:13.312] |  :  .    ..- attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:54:13.312] |  :  .      interrupts = FALSE, persistent = FALSE, ...)  
[10:54:13.312] |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:54:13.312] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:54:13.312] |  :  .    ..- attr(*, "tweaks")=List of 1
[10:54:13.312] |  :  .    .. ..$ workers: chr "localhost"
[10:54:13.312] |  :  .    ..- attr(*, "call")= language plan(cluster, workers = "localhost")
[10:54:13.312] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:13.317] |  :  .  Old stack:
[10:54:13.317] |  :  .  List of 1
[10:54:13.317] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:13.317] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:13.317] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:13.317] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:13.317] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:13.317] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:54:13.317] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:13.319] |  :  .  Not identical
[10:54:13.319] |  :  .  all.equal() for future ...
[10:54:13.320] |  :  .  |  List of 2
[10:54:13.320] |  :  .  |   $ target :function (..., workers = "localhost", envir = parent.frame())  
[10:54:13.320] |  :  .  |    ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[10:54:13.320] |  :  .  |    ..- attr(*, "init")= logi TRUE
[10:54:13.320] |  :  .  |    ..- attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:54:13.320] |  :  .  |      interrupts = FALSE, persistent = FALSE, ...)  
[10:54:13.320] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:54:13.320] |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:54:13.320] |  :  .  |    ..- attr(*, "tweaks")=List of 1
[10:54:13.320] |  :  .  |    .. ..$ workers: chr "localhost"
[10:54:13.320] |  :  .  |    ..- attr(*, "call")= language plan(cluster, workers = "localhost")
[10:54:13.320] |  :  .  |   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:13.320] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:13.320] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:13.320] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:13.320] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:13.320] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:54:13.324] |  :  .  |  Formals differ
[10:54:13.324] |  :  .  all.equal() for future ... done
[10:54:13.324] |  :  .  Future strategies differ at level 1
[10:54:13.324] |  :  all.equal() for FutureStrategyList ... done
[10:54:13.324] |  :  plan(): Setting new future strategy stack:
[10:54:13.325] |  :  List of future strategies:
[10:54:13.325] |  :  1. cluster:
[10:54:13.325] |  :     - args: function (..., workers = "localhost", envir = parent.frame())
[10:54:13.325] |  :     - tweaked: TRUE
[10:54:13.325] |  :     - call: plan(cluster, workers = "localhost")
[10:54:13.325] |  :  List of 1
[10:54:13.325] |  :   $ :function (..., workers = "localhost", envir = parent.frame())  
[10:54:13.325] |  :    ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[10:54:13.325] |  :    ..- attr(*, "init")= logi TRUE
[10:54:13.325] |  :    ..- attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:54:13.325] |  :      interrupts = FALSE, persistent = FALSE, ...)  
[10:54:13.325] |  :    .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:54:13.325] |  :    ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:54:13.325] |  :    ..- attr(*, "tweaks")=List of 1
[10:54:13.325] |  :    .. ..$ workers: chr "localhost"
[10:54:13.325] |  :    ..- attr(*, "call")= language plan(cluster, workers = "localhost")
[10:54:13.325] |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:13.328] |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:54:13.328] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:13.328] |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:54:13.328] |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:13.329] |  :  .  Legacy shutdown of cluster workers ...
[10:54:13.329] |  :  .  |  Stopping existing cluster ...
[10:54:13.329] |  :  .  |  :  No pre-existing cluster. Skipping
[10:54:13.329] |  :  .  |  Stopping existing cluster ... done
[10:54:13.329] |  :  .  Legacy shutdown of cluster workers ... done
[10:54:13.329] |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:54:13.329] |  :  plan(): plan_init() of ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ...
[10:54:13.329] |  :  .  function (..., workers = "localhost", envir = parent.frame())  
[10:54:13.329] |  :  .   - attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[10:54:13.329] |  :  .   - attr(*, "init")= logi TRUE
[10:54:13.329] |  :  .   - attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:54:13.329] |  :  .      interrupts = FALSE, persistent = FALSE, ...)  
[10:54:13.329] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:54:13.329] |  :  .   - attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:54:13.329] |  :  .   - attr(*, "tweaks")=List of 1
[10:54:13.329] |  :  .    ..$ workers: chr "localhost"
[10:54:13.329] |  :  .   - attr(*, "call")= language plan(cluster, workers = "localhost")
[10:54:13.332] |  :  .  init: TRUE
[10:54:13.332] |  :  .  makeFutureBackend(<tweaked>) ...
[10:54:13.332] |  :  .  |  Backend function: <‘NULL’>
[10:54:13.332] |  :  .  |  ClusterFutureBackend(..., persistent = FALSE, gc = TRUE, earlySignal = TRUE) ...
[10:54:13.332] |  :  .  |  :  workers: [n=1] ‘localhost’
[10:54:13.333] |  :  .  |  :  getCluster() ...
[10:54:13.333] |  :  .  |  :  getCluster() ... done
[10:54:13.333] |  :  .  |  :  Stopping existing cluster ...
[10:54:13.333] |  :  .  |  :  .  No pre-existing cluster. Skipping
[10:54:13.333] |  :  .  |  :  Stopping existing cluster ... done
[10:54:13.333] |  :  .  |  :  Starting new cluster ...
[10:54:13.333] |  :  .  |  :  .  makeCluster(workers, ...) ...
[10:54:13.333] |  :  .  |  :  .  |  Arguments:
[10:54:13.333] |  :  .  |  :  .  |  List of 1
[10:54:13.333] |  :  .  |  :  .  |   $ : chr "localhost"
[10:54:13.529] |  :  .  |  :  .  |  Generated cluster UUID
[10:54:13.529] |  :  .  |  :  .  |  Cluster UUID: ‘5f71be148305eced48401c2e168ca656’
[10:54:13.529] |  :  .  |  :  .  |  Socket cluster with 1 nodes where 1 node is on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:54:13.530] |  :  .  |  :  .  makeCluster(workers, ...) ... done
[10:54:13.530] |  :  .  |  :  .  Socket cluster with 1 nodes where 1 node is on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:54:13.531] |  :  .  |  :  Starting new cluster ... done
[10:54:13.531] |  :  .  |  :  Number of workers: 1
[10:54:13.531] |  :  .  |  :  Workers UUID: ‘5f71be148305eced48401c2e168ca656’
[10:54:13.532] |  :  .  |  ClusterFutureBackend(..., persistent = FALSE, gc = TRUE, earlySignal = TRUE) ... done
[10:54:13.532] |  :  .  |  Backend: <‘ClusterFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:54:13.532] |  :  .  makeFutureBackend(<tweaked>) ... done
[10:54:13.532] |  :  plan(): plan_init() of ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ... done
[10:54:13.532] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:13.532] |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:54:13.533] |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:13.533] |  :  plan(): nbrOfWorkers() = 1
[10:54:13.533] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:54:13.533] plan(<tweaked>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done

> f <- future({
+     Sys.sleep(0.2)
+     1
+ })
[10:54:13.534] getGlobalsAndPackages() ...
[10:54:13.534] |  Searching for globals ...
[10:54:13.543] |  :  globals found: [2] ‘{’, ‘Sys.sleep’
[10:54:13.543] |  Searching for globals ... DONE
[10:54:13.543] |  Resolving globals: FALSE
[10:54:13.543] |  Search for packages associated with the globals ...
[10:54:13.543] |  :  Packages associated with globals: [1] ‘base’
[10:54:13.544] |  :  Packages: [1] ‘base’
[10:54:13.544] |  Search for packages associated with the globals ... DONE
[10:54:13.544] |  Packages after dropping 'base': [0] 
[10:54:13.544] |  globals: [0] 
[10:54:13.544] |  packages: [0] 
[10:54:13.544] getGlobalsAndPackages() ... done
[10:54:13.545] run() for Future (‘Future’) ...
[10:54:13.545] |  state: ‘created’
[10:54:13.546] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:13.546] |  plan(<tweaked>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:13.546] |  Using ClusterFutureBackend ...
[10:54:13.546] |  :  Launching futures ...
[10:54:13.547] |  :  .  launchFuture() for ClusterFutureBackend ...
[10:54:13.547] |  :  .  |  Workers: [n=1]
[10:54:13.547] |  :  .  |  Socket cluster with 1 nodes where 1 node is on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:54:13.548] |  :  .  |  FutureRegistry: ‘workers-5f71be148305eced48401c2e168ca656’
[10:54:13.548] |  :  .  |  requestWorker() ...
[10:54:13.548] |  :  .  |  :  requestNode() ...
[10:54:13.548] |  :  .  |  :  .  Number of workers: 1
[10:54:13.549] |  :  .  |  :  .  Polling for a free worker ...
[10:54:13.549] |  :  .  |  :  .  |  FutureRegistry('workers-5f71be148305eced48401c2e168ca656', action = 'list', earlySignal = 0) ...
[10:54:13.549] |  :  .  |  :  .  |  :  Created empty registry ‘workers-5f71be148305eced48401c2e168ca656’
[10:54:13.549] |  :  .  |  :  .  |  :  Listing all futures
[10:54:13.549] |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:54:13.549] |  :  .  |  :  .  |  FutureRegistry('workers-5f71be148305eced48401c2e168ca656', action = 'list', earlySignal = 0) ... done
[10:54:13.549] |  :  .  |  :  .  |  Total time: 0
[10:54:13.549] |  :  .  |  :  .  Polling for a free worker ... done
[10:54:13.550] |  :  .  |  :  .  FutureRegistry('workers-5f71be148305eced48401c2e168ca656', action = 'list', earlySignal = 0) ...
[10:54:13.550] |  :  .  |  :  .  |  Listing all futures
[10:54:13.550] |  :  .  |  :  .  |  Number of registered futures: 0
[10:54:13.550] |  :  .  |  :  .  FutureRegistry('workers-5f71be148305eced48401c2e168ca656', action = 'list', earlySignal = 0) ... done
[10:54:13.550] |  :  .  |  :  .  Index of first available worker: 1
[10:54:13.550] |  :  .  |  :  .  Validate that the worker is functional ...
[10:54:13.607] |  :  .  |  :  .  |  Worker is functional
[10:54:13.607] |  :  .  |  :  .  requestNode() ... done
[10:54:13.608] |  :  .  |  :  .  cluster node index: 1
[10:54:13.608] |  :  .  |  :  requestWorker() ... done
[10:54:13.608] |  :  .  |  :  eraseGlobalEnvironment() ...
[10:54:13.609] |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:54:13.609] |  :  .  |  :  launchFuture() ...
[10:54:13.609] |  :  .  |  :  .  cluster node index: 1
[10:54:13.609] |  :  .  |  :  .  getFutureData() ...
[10:54:13.609] |  :  .  |  :  .  |  getFutureCore() ...
[10:54:13.609] |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:54:13.610] |  :  .  |  :  .  |  getFutureCore() ... done
[10:54:13.610] |  :  .  |  :  .  |  getFutureCapture() ...
[10:54:13.610] |  :  .  |  :  .  |  getFutureCapture() ... done
[10:54:13.610] |  :  .  |  :  .  |  getFutureContext() ...
[10:54:13.610] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:13.610] |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:54:13.611] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:13.611] |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:54:13.611] |  :  .  |  :  .  |  getFutureContext() ... done
[10:54:13.611] |  :  .  |  :  .  getFutureData() ... done
[10:54:13.612] |  :  .  |  :  .  FutureRegistry('workers-5f71be148305eced48401c2e168ca656', action = 'add', earlySignal = 0) ...
[10:54:13.612] |  :  .  |  :  .  |  Appended future to position #1
[10:54:13.612] |  :  .  |  :  .  |  Number of registered futures: 1
[10:54:13.612] |  :  .  |  :  .  FutureRegistry('workers-5f71be148305eced48401c2e168ca656', action = 'add', earlySignal = 0) ... done
[10:54:13.612] |  :  .  |  :  launchFuture() ... done
[10:54:13.612] |  :  .  |  :  ClusterFuture started
[10:54:13.612] |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:54:13.613] |  :  .  Launching futures ... done
[10:54:13.613] |  :  .  Future launched: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:54:13.613] |  :  Using ClusterFutureBackend ... done
[10:54:13.613] |  run() for Future (‘ClusterFuture’) ... done

> res <- tryCatch({
+     requestNode(function() {
+     }, workers = f$workers, timeout = 0.5, delta = 0.1)
+ }, error = identity)

> stopifnot(inherits(res, "error"))

> v <- value(f)
[10:54:13.614] |  result() for ClusterFuture ...
[10:54:13.614] |  :  assertValidConnection() ...
[10:54:13.615] |  :  .  cluster node index: 1
[10:54:13.615] |  :  assertValidConnection() ... done
[10:54:13.616] |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:54:13.616] |  :  .  cluster node index: 1
[10:54:13.902] |  :  .  [1] TRUE
[10:54:13.903] |  :  .  received data:
[10:54:13.903] |  :  .  List of 5
[10:54:13.903] |  :  .   $ type   : chr "VALUE"
[10:54:13.903] |  :  .   $ value  :List of 13
[10:54:13.903] |  :  .    ..$ value            : num 1
[10:54:13.903] |  :  .    ..$ visible          : logi TRUE
[10:54:13.903] |  :  .    ..$ stdout           : chr ""
[10:54:13.903] |  :  .    ..$ conditions       : list()
[10:54:13.903] |  :  .    ..$ rng              : logi FALSE
[10:54:13.903] |  :  .    ..$ misuseGlobalEnv  : NULL
[10:54:13.903] |  :  .    ..$ misuseConnections:List of 3
[10:54:13.903] |  :  .    .. ..$ added   : NULL
[10:54:13.903] |  :  .    .. ..$ removed : NULL
[10:54:13.903] |  :  .    .. ..$ replaced: NULL
[10:54:13.903] |  :  .    ..$ misuseDevices    : NULL
[10:54:13.903] |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:54:13"
[10:54:13.903] |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:54:13"
[10:54:13.903] |  :  .    ..$ session_uuid     : chr "fd4e926beddd1e75a927ef698b0fac9f"
[10:54:13.903] |  :  .    .. ..- attr(*, "source")=List of 5
[10:54:13.903] |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:54:13.903] |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:54:13.903] |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:54:13.903] |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:54:13.903] |  :  .    .. .. ..$ pid   : int 75487
[10:54:13.903] |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:54:13"
[10:54:13.903] |  :  .    .. .. ..$ random: int 2147483647
[10:54:13.903] |  :  .    ..$ r_info           :List of 4
[10:54:13.903] |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:54:13.903] |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:54:13.903] |  :  .    .. ..$ os           : chr "unix"
[10:54:13.903] |  :  .    .. ..$ os_name      : chr "Linux"
[10:54:13.903] |  :  .    .. ..$ captures_utf8: logi TRUE
[10:54:13.903] |  :  .    ..$ version          : chr "1.8"
[10:54:13.903] |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:54:13.903] |  :  .   $ success: logi TRUE
[10:54:13.903] |  :  .   $ time   : 'proc_time' Named num [1:5] 0.045 0.004 0.25 0 0
[10:54:13.903] |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:54:13.903] |  :  .   $ tag    : NULL
[10:54:13.917] |  :  .  Received FutureResult
[10:54:13.917] |  :  .  FutureRegistry('workers-5f71be148305eced48401c2e168ca656', action = 'remove', earlySignal = 0) ...
[10:54:13.919] |  :  .  |  Removed future from position #1
[10:54:13.920] |  :  .  |  Number of registered futures: 0
[10:54:13.920] |  :  .  FutureRegistry('workers-5f71be148305eced48401c2e168ca656', action = 'remove', earlySignal = 0) ... done
[10:54:13.920] |  :  .  Erased future from future backend
[10:54:13.920] |  :  .  result() for ClusterFuture ...
[10:54:13.920] |  :  .  |  result already collected: FutureResult
[10:54:13.920] |  :  .  result() for ClusterFuture ... done
[10:54:13.920] |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:54:13.921] |  result() for ClusterFuture ... done
[10:54:13.921] |  result() for ClusterFuture ...
[10:54:13.921] |  :  result already collected: FutureResult
[10:54:13.921] |  result() for ClusterFuture ... done

> print(v)
[1] 1

> stopifnot(v == 1)

> plan(sequential)
[10:54:13.921] |  plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:13.921] |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:54:13.921] |  :  .  all.equal() for FutureStrategyList ...
[10:54:13.922] |  :  .  |  New stack:
[10:54:13.922] |  :  .  |  List of 1
[10:54:13.922] |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:13.922] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:13.922] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:13.922] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:13.922] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:13.922] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:54:13.922] |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:13.924] |  :  .  |  Old stack:
[10:54:13.924] |  :  .  |  List of 1
[10:54:13.924] |  :  .  |   $ :function (..., workers = "localhost", envir = parent.frame())  
[10:54:13.924] |  :  .  |    ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[10:54:13.924] |  :  .  |    ..- attr(*, "init")= chr "done"
[10:54:13.924] |  :  .  |    ..- attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:54:13.924] |  :  .  |      interrupts = FALSE, persistent = FALSE, ...)  
[10:54:13.924] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:54:13.924] |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:54:13.924] |  :  .  |    ..- attr(*, "tweaks")=List of 1
[10:54:13.924] |  :  .  |    .. ..$ workers: chr "localhost"
[10:54:13.924] |  :  .  |    ..- attr(*, "call")= language plan(cluster, workers = "localhost")
[10:54:13.924] |  :  .  |    ..- attr(*, "backend")=Classes 'ClusterFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55883a2fc3a8> 
[10:54:13.924] |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:54:13.924] |  :  .  |      interrupts = FALSE, persistent = FALSE, ...)  
[10:54:13.924] |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:54:13.924] |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:13.928] |  :  .  |  Not identical
[10:54:13.928] |  :  .  |  all.equal() for future ...
[10:54:13.928] |  :  .  |  :  List of 2
[10:54:13.928] |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:13.928] |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:13.928] |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:13.928] |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:13.928] |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:13.928] |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:54:13.928] |  :  .  |  :   $ current:function (..., workers = "localhost", envir = parent.frame())  
[10:54:13.928] |  :  .  |  :    ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[10:54:13.928] |  :  .  |  :    ..- attr(*, "init")= chr "done"
[10:54:13.928] |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:54:13.928] |  :  .  |  :      interrupts = FALSE, persistent = FALSE, ...)  
[10:54:13.928] |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:54:13.928] |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:54:13.928] |  :  .  |  :    ..- attr(*, "tweaks")=List of 1
[10:54:13.928] |  :  .  |  :    .. ..$ workers: chr "localhost"
[10:54:13.928] |  :  .  |  :    ..- attr(*, "call")= language plan(cluster, workers = "localhost")
[10:54:13.928] |  :  .  |  :    ..- attr(*, "backend")=Classes 'ClusterFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55883a2fc3a8> 
[10:54:13.928] |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableWorkers(), gc = TRUE, earlySignal = TRUE, 
[10:54:13.928] |  :  .  |  :      interrupts = FALSE, persistent = FALSE, ...)  
[10:54:13.928] |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[10:54:13.933] |  :  .  |  :  Formals differ
[10:54:13.933] |  :  .  |  all.equal() for future ... done
[10:54:13.933] |  :  .  |  Future strategies differ at level 1
[10:54:13.933] |  :  .  all.equal() for FutureStrategyList ... done
[10:54:13.934] |  :  .  plan(): Setting new future strategy stack:
[10:54:13.934] |  :  .  List of future strategies:
[10:54:13.934] |  :  .  1. sequential:
[10:54:13.934] |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:54:13.934] |  :  .     - tweaked: FALSE
[10:54:13.934] |  :  .     - call: plan(sequential)
[10:54:13.934] |  :  .  List of 1
[10:54:13.934] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:13.934] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:13.934] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:13.934] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:13.934] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:13.934] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:54:13.934] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:13.936] |  :  .  plan(): plan_cleanup(‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:54:13.936] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:13.937] |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:54:13.937] |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:13.937] |  :  .  |  stopWorkers() for ClusterFutureBackend ...
[10:54:13.937] |  :  .  |  :  Interrupt active futures ...
[10:54:13.938] |  :  .  |  :  .  Number of futures: 0
[10:54:13.938] |  :  .  |  :  Interrupt active futures ... done
[10:54:13.938] |  :  .  |  :  Clear future registry ...
[10:54:13.938] |  :  .  |  :  Clear future registry ... done
[10:54:13.939] |  :  .  |  :  Stop cluster workers ...
[10:54:13.939] |  :  .  |  :  .  Stopping existing cluster ...
[10:54:13.939] |  :  .  |  :  .  |  Cluster to shut down:
[10:54:13.939] |  :  .  |  :  .  |  Socket cluster with 1 nodes where 1 node is on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:54:13.948] |  :  .  |  :  .  |  Stopped cluster: ‘NULL’
[10:54:13.949] |  :  .  |  :  .  Stopping existing cluster ... done
[10:54:13.949] |  :  .  |  :  Stop cluster workers ... done
[10:54:13.949] |  :  .  |  stopWorkers() for ClusterFutureBackend ... done
[10:54:13.949] |  :  .  |  Legacy shutdown of cluster workers ...
[10:54:13.949] |  :  .  |  :  Stopping existing cluster ...
[10:54:13.949] |  :  .  |  :  .  No pre-existing cluster. Skipping
[10:54:13.949] |  :  .  |  :  Stopping existing cluster ... done
[10:54:13.949] |  :  .  |  Legacy shutdown of cluster workers ... done
[10:54:13.949] |  :  .  plan(): plan_cleanup(‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:54:13.950] |  :  .  plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[10:54:13.950] |  :  .  |  function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:13.950] |  :  .  |   - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:13.950] |  :  .  |   - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:13.950] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:13.950] |  :  .  |   - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:13.950] |  :  .  |   - attr(*, "call")= language plan(sequential)
[10:54:13.952] |  :  .  |  init: NULL
[10:54:13.952] |  :  .  plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[10:54:13.952] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:13.952] |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:54:13.952] |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:13.952] |  :  .  Backend function: <‘NULL’>
[10:54:13.952] |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:54:13.953] |  :  .  plan(): nbrOfWorkers() = 1
[10:54:13.953] |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:54:13.953] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done

> message("*** requestNode() - timeout ... DONE")
*** requestNode() - timeout ... DONE

> message("*** requestNode() ... DONE")
*** requestNode() ... DONE
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=0.2s, sys.self=0.01s, elapsed=1s, user.child=0.2s, sys.child=0.3s
Test ‘requestNode’ ... success
> 
