
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script incl/testme/test-globals,tricky.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future:::testme("globals,tricky")
Test ‘globals,tricky’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future/testme/test-globals,tricky.R’

> library(future)
[10:53:29.949] Option 'future.startup.script': TRUE
[10:53:29.950] Future startup scripts considered: ‘.future.R’, ‘~/.future.R’
[10:53:29.950] Future startup scripts found: <none>

> library(listenv)

> oopts <- c(oopts, options(future.globals.resolve = TRUE, 
+     future.globals.onMissing = "error"))

> message("*** Tricky use cases related to globals ...")
*** Tricky use cases related to globals ...

> for (cores in 1:availCores) {
+     message(sprintf("Testing with %d cores ...", cores))
+     options(mc.cores = cores)
+     message("availableCor ..." ... [TRUNCATED] 
Testing with 1 cores ...
availableCores(): 1
- Local variables with the same name as globals ...
- plan('sequential') ...
[10:53:30.017] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.018] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:53:30.018] |  :  all.equal() for FutureStrategyList ...
[10:53:30.018] |  :  .  New stack:
[10:53:30.018] |  :  .  List of 1
[10:53:30.018] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.018] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.018] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.018] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.018] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.018] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:30.018] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.021] |  :  .  Old stack:
[10:53:30.021] |  :  .  List of 1
[10:53:30.021] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.021] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.021] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.021] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.021] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.021] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:53:30.021] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.024] |  :  .  Not identical
[10:53:30.024] |  :  .  all.equal() for future ...
[10:53:30.024] |  :  .  |  List of 2
[10:53:30.024] |  :  .  |   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.024] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.024] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.024] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.024] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.024] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:30.024] |  :  .  |   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.024] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.024] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.024] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.024] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.024] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:30.028] |  :  .  all.equal() for future ... done
[10:53:30.028] |  :  all.equal() for FutureStrategyList ... done
[10:53:30.028] |  :  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.028] |  :  List of future strategies:
[10:53:30.028] |  :  1. sequential:
[10:53:30.028] |  :     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.028] |  :     - tweaked: FALSE
[10:53:30.028] |  :     - call: plan(sequential)
[10:53:30.029] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:53:30.029] plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
Method for identifying globals: 'conservative' ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:30.031] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:30.032] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:30.038] |  :  globals found: [3] ‘{’, ‘<-’, ‘*’
[10:53:30.038] |  Searching for globals ... DONE
[10:53:30.038] |  Resolving globals: TRUE
[10:53:30.038] |  Resolving any globals that are futures ...
[10:53:30.039] |  :  globals: [3] ‘{’, ‘<-’, ‘*’
[10:53:30.039] |  Resolving any globals that are futures ... DONE
[10:53:30.039] |  Search for packages associated with the globals ...
[10:53:30.039] |  :  Packages associated with globals: [1] ‘base’
[10:53:30.039] |  :  Packages: [1] ‘base’
[10:53:30.040] |  Search for packages associated with the globals ... DONE
[10:53:30.040] |  Packages after dropping 'base': [0] 
[10:53:30.040] |  globals: [0] 
[10:53:30.040] |  packages: [0] 
[10:53:30.040] getGlobalsAndPackages() ... done
[10:53:30.041] run() for Future (‘Future’) ...
[10:53:30.041] |  state: ‘created’
[10:53:30.041] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.041] |  :  makeFutureBackend(<sequential>) ...
[10:53:30.041] |  :  .  Backend function: <‘NULL’>
[10:53:30.041] |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:30.041] |  :  makeFutureBackend(<sequential>) ... done
[10:53:30.041] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.042] |  Using SequentialFutureBackend ...
[10:53:30.042] |  :  Launching futures ...
[10:53:30.042] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:30.042] |  :  .  |  getFutureData() ...
[10:53:30.042] |  :  .  |  :  getFutureCore() ...
[10:53:30.042] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:30.042] |  :  .  |  :  getFutureCore() ... done
[10:53:30.043] |  :  .  |  :  getFutureCapture() ...
[10:53:30.043] |  :  .  |  :  getFutureCapture() ... done
[10:53:30.043] |  :  .  |  :  getFutureContext() ...
[10:53:30.043] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.043] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:30.043] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.043] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:30.043] |  :  .  |  :  getFutureContext() ... done
[10:53:30.044] |  :  .  |  getFutureData() ... done
[10:53:30.045] |  :  .  |  attachPackages() ...
[10:53:30.045] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.045] |  :  .  |  attachPackages() ... DONE
[10:53:30.045] |  :  .  |  attachPackages() ...
[10:53:30.045] |  :  .  |  :  packages: [n=0] 
[10:53:30.045] |  :  .  |  attachPackages() ... DONE
[10:53:30.045] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.046] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:30.046] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.046] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.046] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.046] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:30.047] |  :  .  |  :  .  |  New stack:
[10:53:30.047] |  :  .  |  :  .  |  List of 1
[10:53:30.047] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.047] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.047] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.047] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.047] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.047] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.047] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.049] |  :  .  |  :  .  |  Old stack:
[10:53:30.049] |  :  .  |  :  .  |  List of 1
[10:53:30.049] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.049] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.049] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.049] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.049] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.049] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:30.049] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.049] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.049] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.049] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.052] |  :  .  |  :  .  |  Not identical
[10:53:30.052] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:30.052] |  :  .  |  :  .  |  :  List of 2
[10:53:30.052] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.052] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.052] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.052] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.052] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.052] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.052] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.052] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.052] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.052] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.052] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.052] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.052] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.052] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.052] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.057] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:30.057] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:30.057] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.057] |  :  .  |  :  .  List of future strategies:
[10:53:30.057] |  :  .  |  :  .  1. sequential:
[10:53:30.057] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.057] |  :  .  |  :  .     - tweaked: FALSE
[10:53:30.057] |  :  .  |  :  .     - call: plan(sequential)
[10:53:30.060] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.060] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.062] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.062] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.062] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.062] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:30.063] |  :  .  |  :  .  |  :  New stack:
[10:53:30.063] |  :  .  |  :  .  |  :  List of 1
[10:53:30.063] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.063] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.063] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.063] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.063] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.063] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.063] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.063] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.063] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.063] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.066] |  :  .  |  :  .  |  :  Old stack:
[10:53:30.066] |  :  .  |  :  .  |  :  List of 1
[10:53:30.066] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.066] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.066] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.066] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.066] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.066] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.066] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.066] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.066] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.066] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.069] |  :  .  |  :  .  |  :  Identical
[10:53:30.069] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:30.069] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.069] |  :  .  |  :  .  |  List of future strategies:
[10:53:30.069] |  :  .  |  :  .  |  1. sequential:
[10:53:30.069] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.069] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:30.069] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:30.070] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.070] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.070] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.070] |  :  .  |  SequentialFuture started (and completed)
[10:53:30.070] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:30.070] |  :  Launching futures ... done
[10:53:30.071] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:30.071] |  Using SequentialFutureBackend ... done
[10:53:30.071] run() for Future (‘SequentialFuture’) ... done
y = 6
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:30.072] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:30.072] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:30.073] |  :  globals found: [3] ‘{’, ‘<-’, ‘*’
[10:53:30.073] |  Searching for globals ... DONE
[10:53:30.074] |  Resolving globals: TRUE
[10:53:30.074] |  Resolving any globals that are futures ...
[10:53:30.074] |  :  globals: [3] ‘{’, ‘<-’, ‘*’
[10:53:30.074] |  Resolving any globals that are futures ... DONE
[10:53:30.074] |  Search for packages associated with the globals ...
[10:53:30.074] |  :  Packages associated with globals: [1] ‘base’
[10:53:30.074] |  :  Packages: [1] ‘base’
[10:53:30.075] |  Search for packages associated with the globals ... DONE
[10:53:30.075] |  Packages after dropping 'base': [0] 
[10:53:30.075] |  globals: [0] 
[10:53:30.075] |  packages: [0] 
[10:53:30.075] getGlobalsAndPackages() ... done
[10:53:30.075] run() for Future (‘Future’) ...
[10:53:30.075] |  state: ‘created’
[10:53:30.076] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.076] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.076] |  Using SequentialFutureBackend ...
[10:53:30.076] |  :  Launching futures ...
[10:53:30.076] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:30.076] |  :  .  |  getFutureData() ...
[10:53:30.076] |  :  .  |  :  getFutureCore() ...
[10:53:30.076] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:30.076] |  :  .  |  :  getFutureCore() ... done
[10:53:30.076] |  :  .  |  :  getFutureCapture() ...
[10:53:30.077] |  :  .  |  :  getFutureCapture() ... done
[10:53:30.077] |  :  .  |  :  getFutureContext() ...
[10:53:30.077] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.077] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:30.077] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.077] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:30.077] |  :  .  |  :  getFutureContext() ... done
[10:53:30.077] |  :  .  |  getFutureData() ... done
[10:53:30.077] |  :  .  |  attachPackages() ...
[10:53:30.078] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.078] |  :  .  |  attachPackages() ... DONE
[10:53:30.078] |  :  .  |  attachPackages() ...
[10:53:30.078] |  :  .  |  :  packages: [n=0] 
[10:53:30.078] |  :  .  |  attachPackages() ... DONE
[10:53:30.078] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.078] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:30.079] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.079] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.079] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.079] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:30.079] |  :  .  |  :  .  |  New stack:
[10:53:30.079] |  :  .  |  :  .  |  List of 1
[10:53:30.079] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.079] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.079] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.079] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.079] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.079] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.079] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.081] |  :  .  |  :  .  |  Old stack:
[10:53:30.081] |  :  .  |  :  .  |  List of 1
[10:53:30.081] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.081] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.081] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.081] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.081] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.081] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:30.081] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.081] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.081] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.081] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.086] |  :  .  |  :  .  |  Not identical
[10:53:30.086] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:30.086] |  :  .  |  :  .  |  :  List of 2
[10:53:30.086] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.086] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.086] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.086] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.086] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.086] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.086] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.086] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.086] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.086] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.086] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.086] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.086] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.086] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.086] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.090] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:30.090] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:30.090] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.091] |  :  .  |  :  .  List of future strategies:
[10:53:30.091] |  :  .  |  :  .  1. sequential:
[10:53:30.091] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.091] |  :  .  |  :  .     - tweaked: FALSE
[10:53:30.091] |  :  .  |  :  .     - call: plan(sequential)
[10:53:30.091] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.091] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.093] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.093] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.093] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.093] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:30.093] |  :  .  |  :  .  |  :  New stack:
[10:53:30.093] |  :  .  |  :  .  |  :  List of 1
[10:53:30.093] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.093] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.093] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.093] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.093] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.093] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.093] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.093] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.093] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.093] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.096] |  :  .  |  :  .  |  :  Old stack:
[10:53:30.096] |  :  .  |  :  .  |  :  List of 1
[10:53:30.096] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.096] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.096] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.096] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.096] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.096] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.096] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.096] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.096] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.096] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.099] |  :  .  |  :  .  |  :  Identical
[10:53:30.099] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:30.099] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.099] |  :  .  |  :  .  |  List of future strategies:
[10:53:30.099] |  :  .  |  :  .  |  1. sequential:
[10:53:30.099] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.099] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:30.099] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:30.100] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.100] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.100] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.100] |  :  .  |  SequentialFuture started (and completed)
[10:53:30.100] |  :  .  |  signalConditions() ...
[10:53:30.100] |  :  .  |  :  include = ‘immediateCondition’
[10:53:30.100] |  :  .  |  :  exclude = 
[10:53:30.100] |  :  .  |  :  resignal = FALSE
[10:53:30.101] |  :  .  |  :  Number of conditions: 1
[10:53:30.101] |  :  .  |  signalConditions() ... done
[10:53:30.101] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:30.101] |  :  Launching futures ... done
[10:53:30.101] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:30.101] |  Using SequentialFutureBackend ... done
[10:53:30.101] run() for Future (‘SequentialFuture’) ... done
[10:53:30.101] signalConditions() ...
[10:53:30.101] |  include = ‘immediateCondition’
[10:53:30.101] |  exclude = 
[10:53:30.102] |  resignal = FALSE
[10:53:30.102] |  Number of conditions: 1
[10:53:30.102] signalConditions() ... done
[10:53:30.102] Future state: ‘finished’
[10:53:30.102] signalConditions() ...
[10:53:30.102] |  include = ‘condition’
[10:53:30.102] |  exclude = ‘immediateCondition’
[10:53:30.102] |  resignal = TRUE
[10:53:30.102] |  Number of conditions: 1
[10:53:30.102] |  Condition #1: ‘simpleError’, ‘error’, ‘condition’
[10:53:30.102] signalConditions() ... done
List of 1
 $ res: 'try-error' chr "Error in eval(quote({ : object 'a' not found\n"
  ..- attr(*, "condition")=List of 3
  .. ..$ message    : chr "object 'a' not found"
  .. ..$ call       : language eval(quote({     { ...
  .. ..$ future.info:List of 5
  .. .. ..$ condition:List of 2
  .. .. .. ..$ message: chr "object 'a' not found"
  .. .. .. ..$ call   : language eval(quote({     { ...
  .. .. .. ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
  .. .. ..$ calls    :List of 27
  .. .. .. ..$ : language future:::testme("globals,tricky")
  .. .. .. ..$ : language source(file.path(path, "run.R"))
  .. .. .. ..$ : language withVisible(eval(ei, envir))
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language source(testme[["script"]], echo = TRUE)
  .. .. .. ..$ : language withVisible(eval(ei, envir))
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language y %<-% {     b <- a ...
  .. .. .. ..$ : language eval(fassignment, envir = envir, enclos = baseenv())
  .. .. .. ..$ : language eval(fassignment, envir = envir, enclos = baseenv())
  .. .. .. ..$ : language y %<-% {     b <- a ...
  .. .. .. ..$ : language futureAssignInternal(target, expr, envir = envir, substitute = FALSE)
  .. .. .. ..$ : language futureAssign(name, expr, envir = envir, assign.env = assign.env, substitute = FALSE)
  .. .. .. ..$ : language do.call(future::future, args = future.args, envir = envir)
  .. .. .. ..$ : language (function (expr, envir = parent.frame(), substitute = TRUE, lazy = FALSE,      seed = FALSE, globals = TRUE, pack| __truncated__ ...
  .. .. .. ..$ : language Future(expr, substitute = FALSE, envir = envir, lazy = TRUE, seed = seed,      globals = globals, packages = pack| __truncated__ ...
  .. .. .. ..$ : language eval(expr, envir = globalenv())
  .. .. .. ..$ : language eval(expr, envir = globalenv())
  .. .. .. ..$ : language local({     { ...
  .. .. .. ..$ : language eval.parent(substitute(eval(quote(expr), envir)))
  .. .. .. ..$ : language eval(expr, p)
  .. .. .. ..$ : language eval(expr, p)
  .. .. .. ..$ : language eval(quote({     { ...
  .. .. .. ..$ : language eval(quote({     { ...
  .. .. .. ..$ : language eval(quote({     { ...
  .. .. ..$ session  :List of 6
  .. .. .. ..$ r         :List of 14
  .. .. .. .. ..$ platform      : chr "x86_64-pc-linux-gnu"
  .. .. .. .. ..$ arch          : chr "x86_64"
  .. .. .. .. ..$ os            : chr "linux-gnu"
  .. .. .. .. ..$ system        : chr "x86_64, linux-gnu"
  .. .. .. .. ..$ status        : chr ""
  .. .. .. .. ..$ major         : chr "4"
  .. .. .. .. ..$ minor         : chr "5.0"
  .. .. .. .. ..$ year          : chr "2025"
  .. .. .. .. ..$ month         : chr "04"
  .. .. .. .. ..$ day           : chr "11"
  .. .. .. .. ..$ svn rev       : chr "88135"
  .. .. .. .. ..$ language      : chr "R"
  .. .. .. .. ..$ version.string: chr "R version 4.5.0 (2025-04-11)"
  .. .. .. .. ..$ nickname      : chr "How About a Twenty-Six"
  .. .. .. ..$ locale    : chr "LC_CTYPE=en_US.UTF-8;LC_NUMERIC=C;LC_TIME=en_US.UTF-8;LC_COLLATE=en_US.UTF-8;LC_MONETARY=en_US.UTF-8;LC_MESSAGE"| __truncated__
  .. .. .. ..$ rngkind   : chr [1:3] "Mersenne-Twister" "Inversion" "Rejection"
  .. .. .. ..$ namespaces: chr [1:16] "compiler" "parallelly" "graphics" "tools" ...
  .. .. .. ..$ search    : chr [1:12] ".GlobalEnv" "package:listenv" "package:future" "testme" ...
  .. .. .. ..$ system    : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
  .. .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
  .. .. ..$ timestamp: POSIXct[1:1], format: "2025-05-06 10:53:30"
  .. .. ..$ signaled : int 1
  .. ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:30.121] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:30.121] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:30.123] |  :  globals found: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:30.123] |  Searching for globals ... DONE
[10:53:30.124] |  Resolving globals: TRUE
[10:53:30.124] |  Resolving any globals that are futures ...
[10:53:30.124] |  :  globals: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:30.124] |  Resolving any globals that are futures ... DONE
[10:53:30.124] |  Search for packages associated with the globals ...
[10:53:30.124] |  :  Packages associated with globals: [1] ‘base’
[10:53:30.124] |  :  Packages: [1] ‘base’
[10:53:30.125] |  Search for packages associated with the globals ... DONE
[10:53:30.125] |  Resolving futures part of globals (recursively) ...
[10:53:30.125] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:30.125] |  :  .  recursive: 99
[10:53:30.126] |  :  .  length: 1
[10:53:30.126] |  :  .  elements: ‘ii’
[10:53:30.126] |  :  .  'obj' is atomic
[10:53:30.126] |  :  .  length: 0 (resolved future 1)
[10:53:30.126] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:30.126] |  :  globals: [1] ‘ii’
[10:53:30.126] |  Resolving futures part of globals (recursively) ... DONE
[10:53:30.126] |  Packages after dropping 'base': [0] 
[10:53:30.127] |  globals: [1] ‘ii’
[10:53:30.127] |  packages: [0] 
[10:53:30.127] getGlobalsAndPackages() ... done
[10:53:30.127] run() for Future (‘Future’) ...
[10:53:30.127] |  state: ‘created’
[10:53:30.127] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.127] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.127] |  Using SequentialFutureBackend ...
[10:53:30.128] |  :  Launching futures ...
[10:53:30.128] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:30.128] |  :  .  |  getFutureData() ...
[10:53:30.128] |  :  .  |  :  getFutureCore() ...
[10:53:30.128] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:30.128] |  :  .  |  :  getFutureCore() ... done
[10:53:30.128] |  :  .  |  :  getFutureCapture() ...
[10:53:30.128] |  :  .  |  :  getFutureCapture() ... done
[10:53:30.128] |  :  .  |  :  getFutureContext() ...
[10:53:30.128] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.128] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:30.129] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.129] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:30.129] |  :  .  |  :  getFutureContext() ... done
[10:53:30.129] |  :  .  |  getFutureData() ... done
[10:53:30.129] |  :  .  |  attachPackages() ...
[10:53:30.129] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.129] |  :  .  |  attachPackages() ... DONE
[10:53:30.129] |  :  .  |  attachPackages() ...
[10:53:30.129] |  :  .  |  :  packages: [n=0] 
[10:53:30.130] |  :  .  |  attachPackages() ... DONE
[10:53:30.130] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.130] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:30.130] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.130] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.130] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.131] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:30.131] |  :  .  |  :  .  |  New stack:
[10:53:30.131] |  :  .  |  :  .  |  List of 1
[10:53:30.131] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.131] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.131] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.131] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.131] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.131] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.131] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.133] |  :  .  |  :  .  |  Old stack:
[10:53:30.133] |  :  .  |  :  .  |  List of 1
[10:53:30.133] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.133] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.133] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.133] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.133] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.133] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:30.133] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.133] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.133] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.133] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.136] |  :  .  |  :  .  |  Not identical
[10:53:30.136] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:30.136] |  :  .  |  :  .  |  :  List of 2
[10:53:30.136] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.136] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.136] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.136] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.136] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.136] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.136] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.136] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.136] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.136] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.136] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.136] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.136] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.136] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.136] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.140] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:30.140] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:30.140] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.140] |  :  .  |  :  .  List of future strategies:
[10:53:30.140] |  :  .  |  :  .  1. sequential:
[10:53:30.140] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.140] |  :  .  |  :  .     - tweaked: FALSE
[10:53:30.140] |  :  .  |  :  .     - call: plan(sequential)
[10:53:30.141] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.141] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.141] |  :  .  |  assign_globals() ...
[10:53:30.141] |  :  .  |  List of 1
[10:53:30.141] |  :  .  |   $ ii: int 1
[10:53:30.141] |  :  .  |   - attr(*, "where")=List of 1
[10:53:30.141] |  :  .  |    ..$ ii:<environment: R_EmptyEnv> 
[10:53:30.141] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:30.141] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:30.141] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:30.141] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:30.145] |  :  .  |  - copied ‘ii’ to environment
[10:53:30.145] |  :  .  |  assign_globals() ... done
[10:53:30.146] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.146] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.146] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.147] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:30.147] |  :  .  |  :  .  |  :  New stack:
[10:53:30.147] |  :  .  |  :  .  |  :  List of 1
[10:53:30.147] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.147] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.147] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.147] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.147] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.147] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.147] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.147] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.147] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.147] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.150] |  :  .  |  :  .  |  :  Old stack:
[10:53:30.150] |  :  .  |  :  .  |  :  List of 1
[10:53:30.150] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.150] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.150] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.150] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.150] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.150] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.150] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.150] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.150] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.150] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.152] |  :  .  |  :  .  |  :  Identical
[10:53:30.153] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:30.153] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.153] |  :  .  |  :  .  |  List of future strategies:
[10:53:30.153] |  :  .  |  :  .  |  1. sequential:
[10:53:30.153] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.153] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:30.153] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:30.153] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.153] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.153] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.154] |  :  .  |  SequentialFuture started (and completed)
[10:53:30.154] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:30.154] |  :  Launching futures ... done
[10:53:30.154] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:30.154] |  Using SequentialFutureBackend ... done
[10:53:30.154] run() for Future (‘SequentialFuture’) ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:30.155] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:30.155] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:30.156] |  :  globals found: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:30.156] |  Searching for globals ... DONE
[10:53:30.156] |  Resolving globals: TRUE
[10:53:30.156] |  Resolving any globals that are futures ...
[10:53:30.157] |  :  globals: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:30.157] |  Resolving any globals that are futures ... DONE
[10:53:30.157] |  Search for packages associated with the globals ...
[10:53:30.157] |  :  Packages associated with globals: [1] ‘base’
[10:53:30.157] |  :  Packages: [1] ‘base’
[10:53:30.157] |  Search for packages associated with the globals ... DONE
[10:53:30.157] |  Resolving futures part of globals (recursively) ...
[10:53:30.158] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:30.158] |  :  .  recursive: 99
[10:53:30.158] |  :  .  length: 1
[10:53:30.158] |  :  .  elements: ‘ii’
[10:53:30.158] |  :  .  'obj' is atomic
[10:53:30.158] |  :  .  length: 0 (resolved future 1)
[10:53:30.158] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:30.158] |  :  globals: [1] ‘ii’
[10:53:30.158] |  Resolving futures part of globals (recursively) ... DONE
[10:53:30.159] |  Packages after dropping 'base': [0] 
[10:53:30.159] |  globals: [1] ‘ii’
[10:53:30.159] |  packages: [0] 
[10:53:30.159] getGlobalsAndPackages() ... done
[10:53:30.159] run() for Future (‘Future’) ...
[10:53:30.159] |  state: ‘created’
[10:53:30.159] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.159] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.159] |  Using SequentialFutureBackend ...
[10:53:30.160] |  :  Launching futures ...
[10:53:30.160] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:30.160] |  :  .  |  getFutureData() ...
[10:53:30.160] |  :  .  |  :  getFutureCore() ...
[10:53:30.160] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:30.160] |  :  .  |  :  getFutureCore() ... done
[10:53:30.160] |  :  .  |  :  getFutureCapture() ...
[10:53:30.160] |  :  .  |  :  getFutureCapture() ... done
[10:53:30.160] |  :  .  |  :  getFutureContext() ...
[10:53:30.160] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.160] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:30.161] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.161] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:30.161] |  :  .  |  :  getFutureContext() ... done
[10:53:30.161] |  :  .  |  getFutureData() ... done
[10:53:30.161] |  :  .  |  attachPackages() ...
[10:53:30.161] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.161] |  :  .  |  attachPackages() ... DONE
[10:53:30.161] |  :  .  |  attachPackages() ...
[10:53:30.161] |  :  .  |  :  packages: [n=0] 
[10:53:30.162] |  :  .  |  attachPackages() ... DONE
[10:53:30.162] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.162] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:30.162] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.162] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.163] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.163] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:30.163] |  :  .  |  :  .  |  New stack:
[10:53:30.163] |  :  .  |  :  .  |  List of 1
[10:53:30.163] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.163] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.163] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.163] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.163] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.163] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.163] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.166] |  :  .  |  :  .  |  Old stack:
[10:53:30.166] |  :  .  |  :  .  |  List of 1
[10:53:30.166] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.166] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.166] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.166] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.166] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.166] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:30.166] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.166] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.166] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.166] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.169] |  :  .  |  :  .  |  Not identical
[10:53:30.169] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:30.169] |  :  .  |  :  .  |  :  List of 2
[10:53:30.169] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.169] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.169] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.169] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.169] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.169] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.169] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.169] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.169] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.169] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.169] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.169] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.169] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.169] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.169] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.174] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:30.174] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:30.174] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.174] |  :  .  |  :  .  List of future strategies:
[10:53:30.174] |  :  .  |  :  .  1. sequential:
[10:53:30.174] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.174] |  :  .  |  :  .     - tweaked: FALSE
[10:53:30.174] |  :  .  |  :  .     - call: plan(sequential)
[10:53:30.175] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.175] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.175] |  :  .  |  assign_globals() ...
[10:53:30.175] |  :  .  |  List of 1
[10:53:30.175] |  :  .  |   $ ii: int 2
[10:53:30.175] |  :  .  |   - attr(*, "where")=List of 1
[10:53:30.175] |  :  .  |    ..$ ii:<environment: R_EmptyEnv> 
[10:53:30.175] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:30.175] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:30.175] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:30.175] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:30.177] |  :  .  |  - copied ‘ii’ to environment
[10:53:30.177] |  :  .  |  assign_globals() ... done
[10:53:30.179] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.179] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.179] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.179] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:30.179] |  :  .  |  :  .  |  :  New stack:
[10:53:30.179] |  :  .  |  :  .  |  :  List of 1
[10:53:30.179] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.179] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.179] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.179] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.179] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.179] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.179] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.179] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.179] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.179] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.182] |  :  .  |  :  .  |  :  Old stack:
[10:53:30.182] |  :  .  |  :  .  |  :  List of 1
[10:53:30.182] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.182] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.182] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.182] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.182] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.182] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.182] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.182] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.182] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.182] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.186] |  :  .  |  :  .  |  :  Identical
[10:53:30.186] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:30.186] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.187] |  :  .  |  :  .  |  List of future strategies:
[10:53:30.187] |  :  .  |  :  .  |  1. sequential:
[10:53:30.187] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.187] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:30.187] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:30.187] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.187] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.187] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.187] |  :  .  |  SequentialFuture started (and completed)
[10:53:30.187] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:30.188] |  :  Launching futures ... done
[10:53:30.188] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:30.188] |  Using SequentialFutureBackend ... done
[10:53:30.188] run() for Future (‘SequentialFuture’) ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:30.188] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:30.189] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:30.190] |  :  globals found: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:30.190] |  Searching for globals ... DONE
[10:53:30.190] |  Resolving globals: TRUE
[10:53:30.190] |  Resolving any globals that are futures ...
[10:53:30.190] |  :  globals: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:30.190] |  Resolving any globals that are futures ... DONE
[10:53:30.191] |  Search for packages associated with the globals ...
[10:53:30.191] |  :  Packages associated with globals: [1] ‘base’
[10:53:30.191] |  :  Packages: [1] ‘base’
[10:53:30.191] |  Search for packages associated with the globals ... DONE
[10:53:30.191] |  Resolving futures part of globals (recursively) ...
[10:53:30.192] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:30.192] |  :  .  recursive: 99
[10:53:30.192] |  :  .  length: 1
[10:53:30.192] |  :  .  elements: ‘ii’
[10:53:30.192] |  :  .  'obj' is atomic
[10:53:30.192] |  :  .  length: 0 (resolved future 1)
[10:53:30.192] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:30.192] |  :  globals: [1] ‘ii’
[10:53:30.192] |  Resolving futures part of globals (recursively) ... DONE
[10:53:30.193] |  Packages after dropping 'base': [0] 
[10:53:30.193] |  globals: [1] ‘ii’
[10:53:30.193] |  packages: [0] 
[10:53:30.193] getGlobalsAndPackages() ... done
[10:53:30.193] run() for Future (‘Future’) ...
[10:53:30.193] |  state: ‘created’
[10:53:30.193] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.193] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.193] |  Using SequentialFutureBackend ...
[10:53:30.193] |  :  Launching futures ...
[10:53:30.194] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:30.194] |  :  .  |  getFutureData() ...
[10:53:30.194] |  :  .  |  :  getFutureCore() ...
[10:53:30.194] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:30.194] |  :  .  |  :  getFutureCore() ... done
[10:53:30.194] |  :  .  |  :  getFutureCapture() ...
[10:53:30.194] |  :  .  |  :  getFutureCapture() ... done
[10:53:30.194] |  :  .  |  :  getFutureContext() ...
[10:53:30.194] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.194] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:30.195] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.195] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:30.195] |  :  .  |  :  getFutureContext() ... done
[10:53:30.195] |  :  .  |  getFutureData() ... done
[10:53:30.195] |  :  .  |  attachPackages() ...
[10:53:30.195] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.195] |  :  .  |  attachPackages() ... DONE
[10:53:30.195] |  :  .  |  attachPackages() ...
[10:53:30.195] |  :  .  |  :  packages: [n=0] 
[10:53:30.196] |  :  .  |  attachPackages() ... DONE
[10:53:30.196] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.196] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:30.196] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.196] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.197] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.197] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:30.197] |  :  .  |  :  .  |  New stack:
[10:53:30.197] |  :  .  |  :  .  |  List of 1
[10:53:30.197] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.197] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.197] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.197] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.197] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.197] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.197] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.199] |  :  .  |  :  .  |  Old stack:
[10:53:30.199] |  :  .  |  :  .  |  List of 1
[10:53:30.199] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.199] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.199] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.199] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.199] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.199] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:30.199] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.199] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.199] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.199] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.202] |  :  .  |  :  .  |  Not identical
[10:53:30.202] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:30.202] |  :  .  |  :  .  |  :  List of 2
[10:53:30.202] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.202] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.202] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.202] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.202] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.202] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.202] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.202] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.202] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.202] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.202] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.202] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.202] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.202] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.202] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.208] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:30.208] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:30.208] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.208] |  :  .  |  :  .  List of future strategies:
[10:53:30.208] |  :  .  |  :  .  1. sequential:
[10:53:30.208] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.208] |  :  .  |  :  .     - tweaked: FALSE
[10:53:30.208] |  :  .  |  :  .     - call: plan(sequential)
[10:53:30.208] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.209] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.209] |  :  .  |  assign_globals() ...
[10:53:30.209] |  :  .  |  List of 1
[10:53:30.209] |  :  .  |   $ ii: int 3
[10:53:30.209] |  :  .  |   - attr(*, "where")=List of 1
[10:53:30.209] |  :  .  |    ..$ ii:<environment: R_EmptyEnv> 
[10:53:30.209] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:30.209] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:30.209] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:30.209] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:30.211] |  :  .  |  - copied ‘ii’ to environment
[10:53:30.211] |  :  .  |  assign_globals() ... done
[10:53:30.213] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.213] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.213] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.213] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:30.213] |  :  .  |  :  .  |  :  New stack:
[10:53:30.213] |  :  .  |  :  .  |  :  List of 1
[10:53:30.213] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.213] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.213] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.213] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.213] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.213] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.213] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.213] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.213] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.213] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.216] |  :  .  |  :  .  |  :  Old stack:
[10:53:30.216] |  :  .  |  :  .  |  :  List of 1
[10:53:30.216] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.216] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.216] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.216] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.216] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.216] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.216] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.216] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.216] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.216] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.219] |  :  .  |  :  .  |  :  Identical
[10:53:30.219] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:30.219] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.219] |  :  .  |  :  .  |  List of future strategies:
[10:53:30.219] |  :  .  |  :  .  |  1. sequential:
[10:53:30.219] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.219] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:30.219] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:30.220] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.220] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.220] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.220] |  :  .  |  SequentialFuture started (and completed)
[10:53:30.220] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:30.220] |  :  Launching futures ... done
[10:53:30.220] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:30.221] |  Using SequentialFutureBackend ... done
[10:53:30.221] run() for Future (‘SequentialFuture’) ... done
[1] 1 2 3
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:30.222] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:30.222] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:30.224] |  :  globals found: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:30.224] |  Searching for globals ... DONE
[10:53:30.224] |  Resolving globals: TRUE
[10:53:30.224] |  Resolving any globals that are futures ...
[10:53:30.224] |  :  globals: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:30.225] |  Resolving any globals that are futures ... DONE
[10:53:30.225] |  Search for packages associated with the globals ...
[10:53:30.225] |  :  Packages associated with globals: [1] ‘base’
[10:53:30.225] |  :  Packages: [1] ‘base’
[10:53:30.225] |  Search for packages associated with the globals ... DONE
[10:53:30.225] |  Resolving futures part of globals (recursively) ...
[10:53:30.226] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:30.226] |  :  .  recursive: 99
[10:53:30.226] |  :  .  length: 1
[10:53:30.226] |  :  .  elements: ‘ii’
[10:53:30.226] |  :  .  'obj' is atomic
[10:53:30.226] |  :  .  length: 0 (resolved future 1)
[10:53:30.226] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:30.226] |  :  globals: [1] ‘ii’
[10:53:30.226] |  Resolving futures part of globals (recursively) ... DONE
[10:53:30.226] |  Packages after dropping 'base': [0] 
[10:53:30.226] |  globals: [1] ‘ii’
[10:53:30.227] |  packages: [0] 
[10:53:30.227] getGlobalsAndPackages() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:30.227] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:30.227] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:30.229] |  :  globals found: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:30.229] |  Searching for globals ... DONE
[10:53:30.229] |  Resolving globals: TRUE
[10:53:30.229] |  Resolving any globals that are futures ...
[10:53:30.229] |  :  globals: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:30.229] |  Resolving any globals that are futures ... DONE
[10:53:30.229] |  Search for packages associated with the globals ...
[10:53:30.230] |  :  Packages associated with globals: [1] ‘base’
[10:53:30.230] |  :  Packages: [1] ‘base’
[10:53:30.230] |  Search for packages associated with the globals ... DONE
[10:53:30.230] |  Resolving futures part of globals (recursively) ...
[10:53:30.230] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:30.230] |  :  .  recursive: 99
[10:53:30.230] |  :  .  length: 1
[10:53:30.230] |  :  .  elements: ‘ii’
[10:53:30.231] |  :  .  'obj' is atomic
[10:53:30.231] |  :  .  length: 0 (resolved future 1)
[10:53:30.231] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:30.231] |  :  globals: [1] ‘ii’
[10:53:30.231] |  Resolving futures part of globals (recursively) ... DONE
[10:53:30.231] |  Packages after dropping 'base': [0] 
[10:53:30.231] |  globals: [1] ‘ii’
[10:53:30.231] |  packages: [0] 
[10:53:30.231] getGlobalsAndPackages() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:30.232] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:30.232] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:30.233] |  :  globals found: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:30.233] |  Searching for globals ... DONE
[10:53:30.234] |  Resolving globals: TRUE
[10:53:30.234] |  Resolving any globals that are futures ...
[10:53:30.234] |  :  globals: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:30.234] |  Resolving any globals that are futures ... DONE
[10:53:30.234] |  Search for packages associated with the globals ...
[10:53:30.234] |  :  Packages associated with globals: [1] ‘base’
[10:53:30.234] |  :  Packages: [1] ‘base’
[10:53:30.234] |  Search for packages associated with the globals ... DONE
[10:53:30.235] |  Resolving futures part of globals (recursively) ...
[10:53:30.235] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:30.235] |  :  .  recursive: 99
[10:53:30.235] |  :  .  length: 1
[10:53:30.235] |  :  .  elements: ‘ii’
[10:53:30.235] |  :  .  'obj' is atomic
[10:53:30.235] |  :  .  length: 0 (resolved future 1)
[10:53:30.235] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:30.235] |  :  globals: [1] ‘ii’
[10:53:30.236] |  Resolving futures part of globals (recursively) ... DONE
[10:53:30.236] |  Packages after dropping 'base': [0] 
[10:53:30.236] |  globals: [1] ‘ii’
[10:53:30.236] |  packages: [0] 
[10:53:30.236] getGlobalsAndPackages() ... done
[10:53:30.236] run() for Future (‘Future’) ...
[10:53:30.236] |  state: ‘created’
[10:53:30.236] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.237] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.237] |  Using SequentialFutureBackend ...
[10:53:30.237] |  :  Launching futures ...
[10:53:30.237] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:30.237] |  :  .  |  getFutureData() ...
[10:53:30.237] |  :  .  |  :  getFutureCore() ...
[10:53:30.237] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:30.237] |  :  .  |  :  getFutureCore() ... done
[10:53:30.237] |  :  .  |  :  getFutureCapture() ...
[10:53:30.237] |  :  .  |  :  getFutureCapture() ... done
[10:53:30.237] |  :  .  |  :  getFutureContext() ...
[10:53:30.238] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.238] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:30.238] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.238] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:30.238] |  :  .  |  :  getFutureContext() ... done
[10:53:30.238] |  :  .  |  getFutureData() ... done
[10:53:30.238] |  :  .  |  attachPackages() ...
[10:53:30.238] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.238] |  :  .  |  attachPackages() ... DONE
[10:53:30.238] |  :  .  |  attachPackages() ...
[10:53:30.239] |  :  .  |  :  packages: [n=0] 
[10:53:30.239] |  :  .  |  attachPackages() ... DONE
[10:53:30.239] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.239] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:30.239] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.239] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.240] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.240] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:30.240] |  :  .  |  :  .  |  New stack:
[10:53:30.240] |  :  .  |  :  .  |  List of 1
[10:53:30.240] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.240] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.240] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.240] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.240] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.240] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.240] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.243] |  :  .  |  :  .  |  Old stack:
[10:53:30.243] |  :  .  |  :  .  |  List of 1
[10:53:30.243] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.243] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.243] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.243] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.243] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.243] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:30.243] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.243] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.243] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.243] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.246] |  :  .  |  :  .  |  Not identical
[10:53:30.246] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:30.246] |  :  .  |  :  .  |  :  List of 2
[10:53:30.246] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.246] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.246] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.246] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.246] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.246] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.246] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.246] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.246] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.246] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.246] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.246] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.246] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.246] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.246] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.250] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:30.251] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:30.251] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.251] |  :  .  |  :  .  List of future strategies:
[10:53:30.251] |  :  .  |  :  .  1. sequential:
[10:53:30.251] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.251] |  :  .  |  :  .     - tweaked: FALSE
[10:53:30.251] |  :  .  |  :  .     - call: plan(sequential)
[10:53:30.251] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.251] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.251] |  :  .  |  assign_globals() ...
[10:53:30.252] |  :  .  |  List of 1
[10:53:30.252] |  :  .  |   $ ii: int 1
[10:53:30.252] |  :  .  |   - attr(*, "where")=List of 1
[10:53:30.252] |  :  .  |    ..$ ii:<environment: R_EmptyEnv> 
[10:53:30.252] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:30.252] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:30.252] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:30.252] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:30.254] |  :  .  |  - copied ‘ii’ to environment
[10:53:30.254] |  :  .  |  assign_globals() ... done
[10:53:30.256] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.256] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.256] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.256] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:30.256] |  :  .  |  :  .  |  :  New stack:
[10:53:30.256] |  :  .  |  :  .  |  :  List of 1
[10:53:30.256] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.256] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.256] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.256] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.256] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.256] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.256] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.256] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.256] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.256] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.259] |  :  .  |  :  .  |  :  Old stack:
[10:53:30.259] |  :  .  |  :  .  |  :  List of 1
[10:53:30.259] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.259] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.259] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.259] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.259] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.259] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.259] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.259] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.259] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.259] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.263] |  :  .  |  :  .  |  :  Identical
[10:53:30.263] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:30.263] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.263] |  :  .  |  :  .  |  List of future strategies:
[10:53:30.263] |  :  .  |  :  .  |  1. sequential:
[10:53:30.263] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.263] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:30.263] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:30.263] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.263] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.264] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.264] |  :  .  |  SequentialFuture started (and completed)
[10:53:30.264] |  :  .  |  signalConditions() ...
[10:53:30.264] |  :  .  |  :  include = ‘immediateCondition’
[10:53:30.264] |  :  .  |  :  exclude = 
[10:53:30.264] |  :  .  |  :  resignal = FALSE
[10:53:30.264] |  :  .  |  :  Number of conditions: 1
[10:53:30.264] |  :  .  |  signalConditions() ... done
[10:53:30.264] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:30.265] |  :  Launching futures ... done
[10:53:30.265] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:30.265] |  Using SequentialFutureBackend ... done
[10:53:30.265] run() for Future (‘SequentialFuture’) ... done
[10:53:30.265] signalConditions() ...
[10:53:30.265] |  include = ‘immediateCondition’
[10:53:30.265] |  exclude = 
[10:53:30.265] |  resignal = FALSE
[10:53:30.265] |  Number of conditions: 1
[10:53:30.265] signalConditions() ... done
[10:53:30.265] Future state: ‘finished’
[10:53:30.266] signalConditions() ...
[10:53:30.266] |  include = ‘condition’
[10:53:30.266] |  exclude = ‘immediateCondition’
[10:53:30.266] |  resignal = TRUE
[10:53:30.266] |  Number of conditions: 1
[10:53:30.266] |  Condition #1: ‘simpleError’, ‘error’, ‘condition’
[10:53:30.266] signalConditions() ... done
List of 1
 $ res: 'try-error' chr "Error in eval(quote({ : object 'a' not found\n"
  ..- attr(*, "condition")=List of 3
  .. ..$ message    : chr "object 'a' not found"
  .. ..$ call       : language eval(quote({     { ...
  .. ..$ future.info:List of 5
  .. .. ..$ condition:List of 2
  .. .. .. ..$ message: chr "object 'a' not found"
  .. .. .. ..$ call   : language eval(quote({     { ...
  .. .. .. ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
  .. .. ..$ calls    :List of 27
  .. .. .. ..$ : language future:::testme("globals,tricky")
  .. .. .. ..$ : language source(file.path(path, "run.R"))
  .. .. .. ..$ : language withVisible(eval(ei, envir))
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language source(testme[["script"]], echo = TRUE)
  .. .. .. ..$ : language withVisible(eval(ei, envir))
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language res[[ii]] %<-% {     b <- a * ii ...
  .. .. .. ..$ : language eval(fassignment, envir = envir, enclos = baseenv())
  .. .. .. ..$ : language eval(fassignment, envir = envir, enclos = baseenv())
  .. .. .. ..$ : language res[[ii]] %<-% {     b <- a * ii ...
  .. .. .. ..$ : language futureAssignInternal(target, expr, envir = envir, substitute = FALSE)
  .. .. .. ..$ : language futureAssign(name, expr, envir = envir, assign.env = assign.env, substitute = FALSE)
  .. .. .. ..$ : language do.call(future::future, args = future.args, envir = envir)
  .. .. .. ..$ : language (function (expr, envir = parent.frame(), substitute = TRUE, lazy = FALSE,      seed = FALSE, globals = TRUE, pack| __truncated__ ...
  .. .. .. ..$ : language Future(expr, substitute = FALSE, envir = envir, lazy = TRUE, seed = seed,      globals = globals, packages = pack| __truncated__ ...
  .. .. .. ..$ : language eval(expr, envir = globalenv())
  .. .. .. ..$ : language eval(expr, envir = globalenv())
  .. .. .. ..$ : language local({     { ...
  .. .. .. ..$ : language eval.parent(substitute(eval(quote(expr), envir)))
  .. .. .. ..$ : language eval(expr, p)
  .. .. .. ..$ : language eval(expr, p)
  .. .. .. ..$ : language eval(quote({     { ...
  .. .. .. ..$ : language eval(quote({     { ...
  .. .. .. ..$ : language eval(quote({     { ...
  .. .. ..$ session  :List of 6
  .. .. .. ..$ r         :List of 14
  .. .. .. .. ..$ platform      : chr "x86_64-pc-linux-gnu"
  .. .. .. .. ..$ arch          : chr "x86_64"
  .. .. .. .. ..$ os            : chr "linux-gnu"
  .. .. .. .. ..$ system        : chr "x86_64, linux-gnu"
  .. .. .. .. ..$ status        : chr ""
  .. .. .. .. ..$ major         : chr "4"
  .. .. .. .. ..$ minor         : chr "5.0"
  .. .. .. .. ..$ year          : chr "2025"
  .. .. .. .. ..$ month         : chr "04"
  .. .. .. .. ..$ day           : chr "11"
  .. .. .. .. ..$ svn rev       : chr "88135"
  .. .. .. .. ..$ language      : chr "R"
  .. .. .. .. ..$ version.string: chr "R version 4.5.0 (2025-04-11)"
  .. .. .. .. ..$ nickname      : chr "How About a Twenty-Six"
  .. .. .. ..$ locale    : chr "LC_CTYPE=en_US.UTF-8;LC_NUMERIC=C;LC_TIME=en_US.UTF-8;LC_COLLATE=en_US.UTF-8;LC_MONETARY=en_US.UTF-8;LC_MESSAGE"| __truncated__
  .. .. .. ..$ rngkind   : chr [1:3] "Mersenne-Twister" "Inversion" "Rejection"
  .. .. .. ..$ namespaces: chr [1:16] "compiler" "parallelly" "graphics" "tools" ...
  .. .. .. ..$ search    : chr [1:12] ".GlobalEnv" "package:listenv" "package:future" "testme" ...
  .. .. .. ..$ system    : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
  .. .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
  .. .. ..$ timestamp: POSIXct[1:1], format: "2025-05-06 10:53:30"
  .. .. ..$ signaled : int 1
  .. ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:30.284] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:30.284] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:30.285] |  :  globals found: [0] 
[10:53:30.285] |  Searching for globals ... DONE
[10:53:30.285] |  globals: [0] <none>
[10:53:30.285] |  packages: [0] <none>
[10:53:30.285] getGlobalsAndPackages() ... done
[10:53:30.285] run() for Future (‘Future’) ...
[10:53:30.286] |  state: ‘created’
[10:53:30.286] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.286] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.286] |  Using SequentialFutureBackend ...
[10:53:30.286] |  :  Launching futures ...
[10:53:30.286] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:30.286] |  :  .  |  getFutureData() ...
[10:53:30.286] |  :  .  |  :  getFutureCore() ...
[10:53:30.286] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:30.286] |  :  .  |  :  getFutureCore() ... done
[10:53:30.287] |  :  .  |  :  getFutureCapture() ...
[10:53:30.287] |  :  .  |  :  getFutureCapture() ... done
[10:53:30.287] |  :  .  |  :  getFutureContext() ...
[10:53:30.287] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.287] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:30.287] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.287] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:30.287] |  :  .  |  :  getFutureContext() ... done
[10:53:30.287] |  :  .  |  getFutureData() ... done
[10:53:30.287] |  :  .  |  attachPackages() ...
[10:53:30.288] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.288] |  :  .  |  attachPackages() ... DONE
[10:53:30.288] |  :  .  |  attachPackages() ...
[10:53:30.288] |  :  .  |  :  packages: [n=0] 
[10:53:30.288] |  :  .  |  attachPackages() ... DONE
[10:53:30.288] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.288] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:30.289] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.289] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.289] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.289] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:30.289] |  :  .  |  :  .  |  New stack:
[10:53:30.289] |  :  .  |  :  .  |  List of 1
[10:53:30.289] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.289] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.289] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.289] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.289] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.289] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.289] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.291] |  :  .  |  :  .  |  Old stack:
[10:53:30.291] |  :  .  |  :  .  |  List of 1
[10:53:30.291] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.291] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.291] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.291] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.291] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.291] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:30.291] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.291] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.291] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.291] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.294] |  :  .  |  :  .  |  Not identical
[10:53:30.294] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:30.294] |  :  .  |  :  .  |  :  List of 2
[10:53:30.294] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.294] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.294] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.294] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.294] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.294] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.294] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.294] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.294] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.294] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.294] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.294] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.294] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.294] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.294] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.300] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:30.300] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:30.300] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.300] |  :  .  |  :  .  List of future strategies:
[10:53:30.300] |  :  .  |  :  .  1. sequential:
[10:53:30.300] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.300] |  :  .  |  :  .     - tweaked: FALSE
[10:53:30.300] |  :  .  |  :  .     - call: plan(sequential)
[10:53:30.301] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.301] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.302] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.302] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.302] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.302] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:30.303] |  :  .  |  :  .  |  :  New stack:
[10:53:30.303] |  :  .  |  :  .  |  :  List of 1
[10:53:30.303] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.303] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.303] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.303] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.303] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.303] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.303] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.303] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.303] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.303] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.305] |  :  .  |  :  .  |  :  Old stack:
[10:53:30.306] |  :  .  |  :  .  |  :  List of 1
[10:53:30.306] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.306] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.306] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.306] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.306] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.306] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.306] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.306] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.306] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.306] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.308] |  :  .  |  :  .  |  :  Identical
[10:53:30.308] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:30.309] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.309] |  :  .  |  :  .  |  List of future strategies:
[10:53:30.309] |  :  .  |  :  .  |  1. sequential:
[10:53:30.309] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.309] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:30.309] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:30.309] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.309] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.309] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.309] |  :  .  |  SequentialFuture started (and completed)
[10:53:30.310] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:30.310] |  :  Launching futures ... done
[10:53:30.310] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:30.310] |  Using SequentialFutureBackend ... done
[10:53:30.310] run() for Future (‘SequentialFuture’) ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:30.310] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:30.310] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:30.311] |  :  globals found: [3] ‘+’, ‘value’, ‘a’
[10:53:30.311] |  Searching for globals ... DONE
[10:53:30.312] |  Resolving globals: TRUE
[10:53:30.312] |  Resolving any globals that are futures ...
[10:53:30.312] |  :  globals: [3] ‘+’, ‘value’, ‘a’
[10:53:30.312] |  Resolving any globals that are futures ... DONE
[10:53:30.312] |  Search for packages associated with the globals ...
[10:53:30.312] |  :  Packages associated with globals: [2] ‘base’, ‘future’
[10:53:30.312] |  :  Packages: [2] ‘base’, ‘future’
[10:53:30.312] |  Search for packages associated with the globals ... DONE
[10:53:30.313] |  Resolving futures part of globals (recursively) ...
[10:53:30.313] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:30.313] |  :  .  recursive: 99
[10:53:30.313] |  :  .  length: 1
[10:53:30.313] |  :  .  elements: ‘a’
[10:53:30.313] |  :  .  'obj' is SequentialFuture
[10:53:30.313] |  :  .  resolved() for ‘SequentialFuture’ ...
[10:53:30.313] |  :  .  |  state: ‘finished’
[10:53:30.314] |  :  .  |  run: TRUE
[10:53:30.314] |  :  .  |  result: ‘FutureResult’
[10:53:30.314] |  :  .  resolved() for ‘SequentialFuture’ ... done
[10:53:30.314] |  :  .  Future #1
[10:53:30.314] |  :  .  value(obj, ...) ...
[10:53:30.314] |  :  .  value(obj, ...) ... done
[10:53:30.314] |  :  .  resolve(obj, ...) ...
[10:53:30.314] |  :  .  |  resolved() for ‘SequentialFuture’ ...
[10:53:30.315] |  :  .  |  :  state: ‘finished’
[10:53:30.315] |  :  .  |  :  run: TRUE
[10:53:30.315] |  :  .  |  :  result: ‘FutureResult’
[10:53:30.315] |  :  .  |  resolved() for ‘SequentialFuture’ ... done
[10:53:30.315] |  :  .  |  A SequentialFuture was resolved
[10:53:30.315] |  :  .  resolve(obj, ...) ... done
[10:53:30.315] |  :  .  resolved() for ‘SequentialFuture’ ...
[10:53:30.315] |  :  .  |  state: ‘finished’
[10:53:30.315] |  :  .  |  run: TRUE
[10:53:30.315] |  :  .  |  result: ‘FutureResult’
[10:53:30.315] |  :  .  resolved() for ‘SequentialFuture’ ... done
[10:53:30.316] |  :  .  length: 0 (resolved future 1)
[10:53:30.316] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:30.316] |  :  globals: [1] ‘a’
[10:53:30.316] |  Resolving futures part of globals (recursively) ... DONE
[10:53:30.316] |  Packages after dropping 'base': [1] ‘future’
[10:53:30.317] |  Packages after dropping non-attached packages: [1] ‘future’
[10:53:30.317] |  globals: [1] ‘a’
[10:53:30.317] |  packages: [1] ‘future’
[10:53:30.317] getGlobalsAndPackages() ... done
[10:53:30.318] run() for Future (‘Future’) ...
[10:53:30.318] |  state: ‘created’
[10:53:30.318] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.318] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.318] |  Using SequentialFutureBackend ...
[10:53:30.318] |  :  Launching futures ...
[10:53:30.318] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:30.318] |  :  .  |  getFutureData() ...
[10:53:30.318] |  :  .  |  :  getFutureCore() ...
[10:53:30.318] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘future’
[10:53:30.319] |  :  .  |  :  getFutureCore() ... done
[10:53:30.319] |  :  .  |  :  getFutureCapture() ...
[10:53:30.319] |  :  .  |  :  getFutureCapture() ... done
[10:53:30.319] |  :  .  |  :  getFutureContext() ...
[10:53:30.319] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.319] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:30.319] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.319] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:30.319] |  :  .  |  :  getFutureContext() ... done
[10:53:30.319] |  :  .  |  getFutureData() ... done
[10:53:30.320] |  :  .  |  attachPackages() ...
[10:53:30.320] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.320] |  :  .  |  attachPackages() ... DONE
[10:53:30.320] |  :  .  |  attachPackages() ...
[10:53:30.320] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.320] |  :  .  |  attachPackages() ... DONE
[10:53:30.320] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.320] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:30.321] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.321] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.321] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.321] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:30.321] |  :  .  |  :  .  |  New stack:
[10:53:30.321] |  :  .  |  :  .  |  List of 1
[10:53:30.321] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.321] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.321] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.321] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.321] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.321] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.321] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.323] |  :  .  |  :  .  |  Old stack:
[10:53:30.324] |  :  .  |  :  .  |  List of 1
[10:53:30.324] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.324] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.324] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.324] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.324] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.324] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:30.324] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.324] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.324] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.324] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.326] |  :  .  |  :  .  |  Not identical
[10:53:30.326] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:30.327] |  :  .  |  :  .  |  :  List of 2
[10:53:30.327] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.327] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.327] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.327] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.327] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.327] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.327] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.327] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.327] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.327] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.327] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.327] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.327] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.327] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.327] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.331] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:30.331] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:30.331] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.331] |  :  .  |  :  .  List of future strategies:
[10:53:30.331] |  :  .  |  :  .  1. sequential:
[10:53:30.331] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.331] |  :  .  |  :  .     - tweaked: FALSE
[10:53:30.331] |  :  .  |  :  .     - call: plan(sequential)
[10:53:30.332] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.332] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.332] |  :  .  |  assign_globals() ...
[10:53:30.332] |  :  .  |  List of 1
[10:53:30.332] |  :  .  |   $ a:Classes 'SequentialFuture', 'UniprocessFuture', 'Future' <environment: 0x560a71592310> 
[10:53:30.332] |  :  .  |   - attr(*, "where")=List of 1
[10:53:30.332] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:53:30.332] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:30.332] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:30.332] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:30.332] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:30.362] |  :  .  |  - copied ‘a’ to environment
[10:53:30.362] |  :  .  |  assign_globals() ... done
[10:53:30.364] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.364] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.364] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.364] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:30.364] |  :  .  |  :  .  |  :  New stack:
[10:53:30.364] |  :  .  |  :  .  |  :  List of 1
[10:53:30.364] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.364] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.364] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.364] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.364] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.364] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.364] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.364] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.364] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.364] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.367] |  :  .  |  :  .  |  :  Old stack:
[10:53:30.367] |  :  .  |  :  .  |  :  List of 1
[10:53:30.367] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.367] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.367] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.367] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.367] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.367] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.367] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.367] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.367] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.367] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.370] |  :  .  |  :  .  |  :  Identical
[10:53:30.370] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:30.370] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.370] |  :  .  |  :  .  |  List of future strategies:
[10:53:30.370] |  :  .  |  :  .  |  1. sequential:
[10:53:30.370] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.370] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:30.370] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:30.371] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.371] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.371] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.371] |  :  .  |  SequentialFuture started (and completed)
[10:53:30.371] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:30.372] |  :  Launching futures ... done
[10:53:30.372] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:30.372] |  Using SequentialFutureBackend ... done
[10:53:30.372] run() for Future (‘SequentialFuture’) ... done
value(b) = 2
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:30.372] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:30.373] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:30.373] |  :  globals found: [0] 
[10:53:30.373] |  Searching for globals ... DONE
[10:53:30.373] |  globals: [0] <none>
[10:53:30.373] |  packages: [0] <none>
[10:53:30.373] getGlobalsAndPackages() ... done
[10:53:30.374] run() for Future (‘Future’) ...
[10:53:30.374] |  state: ‘created’
[10:53:30.374] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.374] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.374] |  Using SequentialFutureBackend ...
[10:53:30.374] |  :  Launching futures ...
[10:53:30.374] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:30.374] |  :  .  |  getFutureData() ...
[10:53:30.374] |  :  .  |  :  getFutureCore() ...
[10:53:30.375] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:30.375] |  :  .  |  :  getFutureCore() ... done
[10:53:30.375] |  :  .  |  :  getFutureCapture() ...
[10:53:30.375] |  :  .  |  :  getFutureCapture() ... done
[10:53:30.375] |  :  .  |  :  getFutureContext() ...
[10:53:30.375] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.375] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:30.375] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.375] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:30.375] |  :  .  |  :  getFutureContext() ... done
[10:53:30.376] |  :  .  |  getFutureData() ... done
[10:53:30.376] |  :  .  |  attachPackages() ...
[10:53:30.376] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.376] |  :  .  |  attachPackages() ... DONE
[10:53:30.376] |  :  .  |  attachPackages() ...
[10:53:30.376] |  :  .  |  :  packages: [n=0] 
[10:53:30.376] |  :  .  |  attachPackages() ... DONE
[10:53:30.377] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.377] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:30.377] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.377] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.377] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.377] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:30.377] |  :  .  |  :  .  |  New stack:
[10:53:30.378] |  :  .  |  :  .  |  List of 1
[10:53:30.378] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.378] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.378] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.378] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.378] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.378] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.378] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.380] |  :  .  |  :  .  |  Old stack:
[10:53:30.380] |  :  .  |  :  .  |  List of 1
[10:53:30.380] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.380] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.380] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.380] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.380] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.380] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:30.380] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.380] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.380] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.380] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.383] |  :  .  |  :  .  |  Not identical
[10:53:30.383] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:30.383] |  :  .  |  :  .  |  :  List of 2
[10:53:30.383] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.383] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.383] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.383] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.383] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.383] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.383] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.383] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.383] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.383] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.383] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.383] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.383] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.383] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.383] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.388] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:30.389] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:30.389] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.389] |  :  .  |  :  .  List of future strategies:
[10:53:30.389] |  :  .  |  :  .  1. sequential:
[10:53:30.389] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.389] |  :  .  |  :  .     - tweaked: FALSE
[10:53:30.389] |  :  .  |  :  .     - call: plan(sequential)
[10:53:30.389] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.389] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.391] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.391] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.391] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.391] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:30.391] |  :  .  |  :  .  |  :  New stack:
[10:53:30.391] |  :  .  |  :  .  |  :  List of 1
[10:53:30.391] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.391] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.391] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.391] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.391] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.391] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.391] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.391] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.391] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.391] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.394] |  :  .  |  :  .  |  :  Old stack:
[10:53:30.394] |  :  .  |  :  .  |  :  List of 1
[10:53:30.394] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.394] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.394] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.394] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.394] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.394] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.394] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.394] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.394] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.394] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.397] |  :  .  |  :  .  |  :  Identical
[10:53:30.397] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:30.397] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.397] |  :  .  |  :  .  |  List of future strategies:
[10:53:30.397] |  :  .  |  :  .  |  1. sequential:
[10:53:30.397] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.397] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:30.397] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:30.398] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.398] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.398] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.398] |  :  .  |  SequentialFuture started (and completed)
[10:53:30.398] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:30.398] |  :  Launching futures ... done
[10:53:30.398] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:30.398] |  Using SequentialFutureBackend ... done
[10:53:30.399] run() for Future (‘SequentialFuture’) ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:30.399] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:30.399] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:30.400] |  :  globals found: [3] ‘+’, ‘value’, ‘a’
[10:53:30.400] |  Searching for globals ... DONE
[10:53:30.400] |  Resolving globals: TRUE
[10:53:30.400] |  Resolving any globals that are futures ...
[10:53:30.400] |  :  globals: [3] ‘+’, ‘value’, ‘a’
[10:53:30.400] |  Resolving any globals that are futures ... DONE
[10:53:30.401] |  Search for packages associated with the globals ...
[10:53:30.401] |  :  Packages associated with globals: [2] ‘base’, ‘future’
[10:53:30.401] |  :  Packages: [2] ‘base’, ‘future’
[10:53:30.401] |  Search for packages associated with the globals ... DONE
[10:53:30.401] |  Resolving futures part of globals (recursively) ...
[10:53:30.401] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:30.401] |  :  .  recursive: 99
[10:53:30.402] |  :  .  length: 1
[10:53:30.402] |  :  .  elements: ‘a’
[10:53:30.402] |  :  .  'obj' is SequentialFuture
[10:53:30.402] |  :  .  resolved() for ‘SequentialFuture’ ...
[10:53:30.402] |  :  .  |  state: ‘finished’
[10:53:30.402] |  :  .  |  run: TRUE
[10:53:30.402] |  :  .  |  result: ‘FutureResult’
[10:53:30.402] |  :  .  resolved() for ‘SequentialFuture’ ... done
[10:53:30.402] |  :  .  Future #1
[10:53:30.402] |  :  .  value(obj, ...) ...
[10:53:30.403] |  :  .  value(obj, ...) ... done
[10:53:30.403] |  :  .  resolve(obj, ...) ...
[10:53:30.403] |  :  .  |  resolved() for ‘SequentialFuture’ ...
[10:53:30.403] |  :  .  |  :  state: ‘finished’
[10:53:30.403] |  :  .  |  :  run: TRUE
[10:53:30.403] |  :  .  |  :  result: ‘FutureResult’
[10:53:30.403] |  :  .  |  resolved() for ‘SequentialFuture’ ... done
[10:53:30.403] |  :  .  |  A SequentialFuture was resolved
[10:53:30.403] |  :  .  resolve(obj, ...) ... done
[10:53:30.403] |  :  .  resolved() for ‘SequentialFuture’ ...
[10:53:30.404] |  :  .  |  state: ‘finished’
[10:53:30.404] |  :  .  |  run: TRUE
[10:53:30.404] |  :  .  |  result: ‘FutureResult’
[10:53:30.404] |  :  .  resolved() for ‘SequentialFuture’ ... done
[10:53:30.405] |  :  .  length: 0 (resolved future 1)
[10:53:30.405] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:30.405] |  :  globals: [1] ‘a’
[10:53:30.405] |  Resolving futures part of globals (recursively) ... DONE
[10:53:30.405] |  Packages after dropping 'base': [1] ‘future’
[10:53:30.405] |  Packages after dropping non-attached packages: [1] ‘future’
[10:53:30.405] |  globals: [1] ‘a’
[10:53:30.405] |  packages: [1] ‘future’
[10:53:30.406] getGlobalsAndPackages() ... done
[10:53:30.406] run() for Future (‘Future’) ...
[10:53:30.406] |  state: ‘created’
[10:53:30.406] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.406] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.406] |  Using SequentialFutureBackend ...
[10:53:30.406] |  :  Launching futures ...
[10:53:30.406] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:30.407] |  :  .  |  getFutureData() ...
[10:53:30.407] |  :  .  |  :  getFutureCore() ...
[10:53:30.407] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘future’
[10:53:30.407] |  :  .  |  :  getFutureCore() ... done
[10:53:30.407] |  :  .  |  :  getFutureCapture() ...
[10:53:30.407] |  :  .  |  :  getFutureCapture() ... done
[10:53:30.407] |  :  .  |  :  getFutureContext() ...
[10:53:30.407] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.407] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:30.407] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.407] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:30.408] |  :  .  |  :  getFutureContext() ... done
[10:53:30.408] |  :  .  |  getFutureData() ... done
[10:53:30.408] |  :  .  |  attachPackages() ...
[10:53:30.408] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.408] |  :  .  |  attachPackages() ... DONE
[10:53:30.408] |  :  .  |  attachPackages() ...
[10:53:30.408] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.408] |  :  .  |  attachPackages() ... DONE
[10:53:30.409] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.409] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:30.409] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.409] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.409] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.409] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:30.410] |  :  .  |  :  .  |  New stack:
[10:53:30.410] |  :  .  |  :  .  |  List of 1
[10:53:30.410] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.410] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.410] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.410] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.410] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.410] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.410] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.412] |  :  .  |  :  .  |  Old stack:
[10:53:30.412] |  :  .  |  :  .  |  List of 1
[10:53:30.412] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.412] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.412] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.412] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.412] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.412] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:30.412] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.412] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.412] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.412] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.415] |  :  .  |  :  .  |  Not identical
[10:53:30.415] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:30.415] |  :  .  |  :  .  |  :  List of 2
[10:53:30.415] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.415] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.415] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.415] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.415] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.415] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.415] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.415] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.415] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.415] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.415] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.415] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.415] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.415] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.415] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.419] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:30.419] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:30.419] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.419] |  :  .  |  :  .  List of future strategies:
[10:53:30.419] |  :  .  |  :  .  1. sequential:
[10:53:30.419] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.419] |  :  .  |  :  .     - tweaked: FALSE
[10:53:30.419] |  :  .  |  :  .     - call: plan(sequential)
[10:53:30.420] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.420] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.420] |  :  .  |  assign_globals() ...
[10:53:30.420] |  :  .  |  List of 1
[10:53:30.420] |  :  .  |   $ a:Classes 'SequentialFuture', 'UniprocessFuture', 'Future' <environment: 0x560a71931410> 
[10:53:30.420] |  :  .  |   - attr(*, "where")=List of 1
[10:53:30.420] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:53:30.420] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:30.420] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:30.420] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:30.420] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:30.423] |  :  .  |  - copied ‘a’ to environment
[10:53:30.423] |  :  .  |  assign_globals() ... done
[10:53:30.424] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.424] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.425] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.425] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:30.425] |  :  .  |  :  .  |  :  New stack:
[10:53:30.425] |  :  .  |  :  .  |  :  List of 1
[10:53:30.425] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.425] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.425] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.425] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.425] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.425] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.425] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.425] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.425] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.425] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.428] |  :  .  |  :  .  |  :  Old stack:
[10:53:30.428] |  :  .  |  :  .  |  :  List of 1
[10:53:30.428] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.428] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.428] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.428] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.428] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.428] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.428] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.428] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.428] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.428] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.431] |  :  .  |  :  .  |  :  Identical
[10:53:30.431] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:30.431] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.431] |  :  .  |  :  .  |  List of future strategies:
[10:53:30.431] |  :  .  |  :  .  |  1. sequential:
[10:53:30.431] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.431] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:30.431] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:30.432] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.432] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.432] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.432] |  :  .  |  SequentialFuture started (and completed)
[10:53:30.432] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:30.432] |  :  Launching futures ... done
[10:53:30.432] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:30.433] |  Using SequentialFutureBackend ... done
[10:53:30.433] run() for Future (‘SequentialFuture’) ... done
value(b) = 2
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:30.433] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:30.433] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:30.434] |  :  globals found: [0] 
[10:53:30.434] |  Searching for globals ... DONE
[10:53:30.434] |  globals: [0] <none>
[10:53:30.434] |  packages: [0] <none>
[10:53:30.434] getGlobalsAndPackages() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:30.434] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:30.435] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:30.436] |  :  globals found: [3] ‘+’, ‘value’, ‘a’
[10:53:30.436] |  Searching for globals ... DONE
[10:53:30.436] |  Resolving globals: TRUE
[10:53:30.436] |  Resolving any globals that are futures ...
[10:53:30.436] |  :  globals: [3] ‘+’, ‘value’, ‘a’
[10:53:30.436] |  Resolving any globals that are futures ... DONE
[10:53:30.436] |  Search for packages associated with the globals ...
[10:53:30.436] |  :  Packages associated with globals: [2] ‘base’, ‘future’
[10:53:30.437] |  :  Packages: [2] ‘base’, ‘future’
[10:53:30.437] |  Search for packages associated with the globals ... DONE
[10:53:30.437] |  Resolving futures part of globals (recursively) ...
[10:53:30.437] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:30.437] |  :  .  recursive: 99
[10:53:30.437] |  :  .  length: 1
[10:53:30.437] |  :  .  elements: ‘a’
[10:53:30.437] |  :  .  'obj' is Future
[10:53:30.437] |  :  .  run() for Future (‘Future’) ...
[10:53:30.437] |  :  .  |  state: ‘created’
[10:53:30.438] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.438] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.438] |  :  .  |  Using SequentialFutureBackend ...
[10:53:30.438] |  :  .  |  :  Launching futures ...
[10:53:30.438] |  :  .  |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:30.438] |  :  .  |  :  .  |  getFutureData() ...
[10:53:30.438] |  :  .  |  :  .  |  :  getFutureCore() ...
[10:53:30.438] |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:30.438] |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:53:30.438] |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:53:30.439] |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:53:30.439] |  :  .  |  :  .  |  :  getFutureContext() ...
[10:53:30.439] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.439] |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:30.439] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.439] |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:30.439] |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:53:30.439] |  :  .  |  :  .  |  getFutureData() ... done
[10:53:30.439] |  :  .  |  :  .  |  attachPackages() ...
[10:53:30.439] |  :  .  |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.440] |  :  .  |  :  .  |  attachPackages() ... DONE
[10:53:30.440] |  :  .  |  :  .  |  attachPackages() ...
[10:53:30.440] |  :  .  |  :  .  |  :  packages: [n=0] 
[10:53:30.440] |  :  .  |  :  .  |  attachPackages() ... DONE
[10:53:30.440] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.440] |  :  .  |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:30.440] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.441] |  :  .  |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.441] |  :  .  |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.441] |  :  .  |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:30.441] |  :  .  |  :  .  |  :  .  |  New stack:
[10:53:30.441] |  :  .  |  :  .  |  :  .  |  List of 1
[10:53:30.441] |  :  .  |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.441] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.441] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.441] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.441] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.441] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.441] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.443] |  :  .  |  :  .  |  :  .  |  Old stack:
[10:53:30.443] |  :  .  |  :  .  |  :  .  |  List of 1
[10:53:30.443] |  :  .  |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.443] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.443] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.443] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.443] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.443] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:30.443] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.443] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.443] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.443] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.447] |  :  .  |  :  .  |  :  .  |  Not identical
[10:53:30.447] |  :  .  |  :  .  |  :  .  |  all.equal() for future ...
[10:53:30.447] |  :  .  |  :  .  |  :  .  |  :  List of 2
[10:53:30.447] |  :  .  |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.447] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.447] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.447] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.447] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.447] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.447] |  :  .  |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.447] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.447] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.447] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.447] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.447] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.447] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.447] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.447] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.452] |  :  .  |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:30.452] |  :  .  |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:30.452] |  :  .  |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.452] |  :  .  |  :  .  |  :  .  List of future strategies:
[10:53:30.452] |  :  .  |  :  .  |  :  .  1. sequential:
[10:53:30.452] |  :  .  |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.452] |  :  .  |  :  .  |  :  .     - tweaked: FALSE
[10:53:30.452] |  :  .  |  :  .  |  :  .     - call: plan(sequential)
[10:53:30.452] |  :  .  |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.452] |  :  .  |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.454] |  :  .  |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.454] |  :  .  |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.454] |  :  .  |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.454] |  :  .  |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:30.454] |  :  .  |  :  .  |  :  .  |  :  New stack:
[10:53:30.454] |  :  .  |  :  .  |  :  .  |  :  List of 1
[10:53:30.454] |  :  .  |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.454] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.454] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.454] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.454] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.454] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.454] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.454] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.454] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.454] |  :  .  |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.457] |  :  .  |  :  .  |  :  .  |  :  Old stack:
[10:53:30.457] |  :  .  |  :  .  |  :  .  |  :  List of 1
[10:53:30.457] |  :  .  |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.457] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.457] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.457] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.457] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.457] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.457] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.457] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.457] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.457] |  :  .  |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.460] |  :  .  |  :  .  |  :  .  |  :  Identical
[10:53:30.460] |  :  .  |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:30.461] |  :  .  |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.461] |  :  .  |  :  .  |  :  .  |  List of future strategies:
[10:53:30.461] |  :  .  |  :  .  |  :  .  |  1. sequential:
[10:53:30.461] |  :  .  |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.461] |  :  .  |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:30.461] |  :  .  |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:30.461] |  :  .  |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.461] |  :  .  |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.461] |  :  .  |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.461] |  :  .  |  :  .  |  SequentialFuture started (and completed)
[10:53:30.462] |  :  .  |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:30.462] |  :  .  |  :  Launching futures ... done
[10:53:30.462] |  :  .  |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:30.462] |  :  .  |  Using SequentialFutureBackend ... done
[10:53:30.462] |  :  .  run() for Future (‘SequentialFuture’) ... done
[10:53:30.462] |  :  .  resolved() for ‘SequentialFuture’ ...
[10:53:30.462] |  :  .  |  state: ‘finished’
[10:53:30.462] |  :  .  |  run: TRUE
[10:53:30.462] |  :  .  |  result: ‘FutureResult’
[10:53:30.463] |  :  .  resolved() for ‘SequentialFuture’ ... done
[10:53:30.463] |  :  .  Future #1
[10:53:30.463] |  :  .  value(obj, ...) ...
[10:53:30.463] |  :  .  value(obj, ...) ... done
[10:53:30.463] |  :  .  resolve(obj, ...) ...
[10:53:30.463] |  :  .  |  resolved() for ‘SequentialFuture’ ...
[10:53:30.463] |  :  .  |  :  state: ‘finished’
[10:53:30.463] |  :  .  |  :  run: TRUE
[10:53:30.463] |  :  .  |  :  result: ‘FutureResult’
[10:53:30.464] |  :  .  |  resolved() for ‘SequentialFuture’ ... done
[10:53:30.464] |  :  .  |  A SequentialFuture was resolved
[10:53:30.464] |  :  .  resolve(obj, ...) ... done
[10:53:30.464] |  :  .  resolved() for ‘SequentialFuture’ ...
[10:53:30.464] |  :  .  |  state: ‘finished’
[10:53:30.464] |  :  .  |  run: TRUE
[10:53:30.464] |  :  .  |  result: ‘FutureResult’
[10:53:30.464] |  :  .  resolved() for ‘SequentialFuture’ ... done
[10:53:30.464] |  :  .  length: 0 (resolved future 1)
[10:53:30.464] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:30.465] |  :  globals: [1] ‘a’
[10:53:30.465] |  Resolving futures part of globals (recursively) ... DONE
[10:53:30.465] |  Packages after dropping 'base': [1] ‘future’
[10:53:30.465] |  Packages after dropping non-attached packages: [1] ‘future’
[10:53:30.465] |  globals: [1] ‘a’
[10:53:30.465] |  packages: [1] ‘future’
[10:53:30.465] getGlobalsAndPackages() ... done
[10:53:30.465] run() for Future (‘Future’) ...
[10:53:30.467] |  state: ‘created’
[10:53:30.467] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.467] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.467] |  Using SequentialFutureBackend ...
[10:53:30.467] |  :  Launching futures ...
[10:53:30.468] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:30.468] |  :  .  |  getFutureData() ...
[10:53:30.468] |  :  .  |  :  getFutureCore() ...
[10:53:30.468] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘future’
[10:53:30.468] |  :  .  |  :  getFutureCore() ... done
[10:53:30.468] |  :  .  |  :  getFutureCapture() ...
[10:53:30.468] |  :  .  |  :  getFutureCapture() ... done
[10:53:30.468] |  :  .  |  :  getFutureContext() ...
[10:53:30.468] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.469] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:30.469] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.469] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:30.469] |  :  .  |  :  getFutureContext() ... done
[10:53:30.469] |  :  .  |  getFutureData() ... done
[10:53:30.469] |  :  .  |  attachPackages() ...
[10:53:30.469] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.469] |  :  .  |  attachPackages() ... DONE
[10:53:30.470] |  :  .  |  attachPackages() ...
[10:53:30.470] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.470] |  :  .  |  attachPackages() ... DONE
[10:53:30.470] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.470] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:30.470] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.471] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.471] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.471] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:30.471] |  :  .  |  :  .  |  New stack:
[10:53:30.471] |  :  .  |  :  .  |  List of 1
[10:53:30.471] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.471] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.471] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.471] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.471] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.471] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.471] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.473] |  :  .  |  :  .  |  Old stack:
[10:53:30.473] |  :  .  |  :  .  |  List of 1
[10:53:30.473] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.473] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.473] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.473] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.473] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.473] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:30.473] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.473] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.473] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.473] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.476] |  :  .  |  :  .  |  Not identical
[10:53:30.476] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:30.476] |  :  .  |  :  .  |  :  List of 2
[10:53:30.476] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.476] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.476] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.476] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.476] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.476] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.476] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.476] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.476] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.476] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.476] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.476] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.476] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.476] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.476] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.481] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:30.481] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:30.481] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.481] |  :  .  |  :  .  List of future strategies:
[10:53:30.481] |  :  .  |  :  .  1. sequential:
[10:53:30.481] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.481] |  :  .  |  :  .     - tweaked: FALSE
[10:53:30.481] |  :  .  |  :  .     - call: plan(sequential)
[10:53:30.482] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.482] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.482] |  :  .  |  assign_globals() ...
[10:53:30.482] |  :  .  |  List of 1
[10:53:30.482] |  :  .  |   $ a:Classes 'SequentialFuture', 'UniprocessFuture', 'Future' <environment: 0x560a716c2290> 
[10:53:30.482] |  :  .  |   - attr(*, "where")=List of 1
[10:53:30.482] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:53:30.482] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:30.482] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:30.482] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:30.482] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:30.484] |  :  .  |  - copied ‘a’ to environment
[10:53:30.485] |  :  .  |  assign_globals() ... done
[10:53:30.486] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.486] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.486] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.486] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:30.486] |  :  .  |  :  .  |  :  New stack:
[10:53:30.487] |  :  .  |  :  .  |  :  List of 1
[10:53:30.487] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.487] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.487] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.487] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.487] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.487] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.487] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.487] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.487] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.487] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.491] |  :  .  |  :  .  |  :  Old stack:
[10:53:30.491] |  :  .  |  :  .  |  :  List of 1
[10:53:30.491] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.491] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.491] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.491] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.491] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.491] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.491] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.491] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.491] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.491] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.494] |  :  .  |  :  .  |  :  Identical
[10:53:30.494] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:30.494] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.494] |  :  .  |  :  .  |  List of future strategies:
[10:53:30.494] |  :  .  |  :  .  |  1. sequential:
[10:53:30.494] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.494] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:30.494] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:30.494] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.494] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.494] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.495] |  :  .  |  SequentialFuture started (and completed)
[10:53:30.495] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:30.495] |  :  Launching futures ... done
[10:53:30.495] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:30.495] |  Using SequentialFutureBackend ... done
[10:53:30.495] run() for Future (‘SequentialFuture’) ... done
value(b) = 2
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:30.496] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:30.496] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:30.496] |  :  globals found: [0] 
[10:53:30.497] |  Searching for globals ... DONE
[10:53:30.497] |  globals: [0] <none>
[10:53:30.497] |  packages: [0] <none>
[10:53:30.497] getGlobalsAndPackages() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:30.497] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:30.497] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:30.498] |  :  globals found: [3] ‘+’, ‘value’, ‘a’
[10:53:30.498] |  Searching for globals ... DONE
[10:53:30.498] |  Resolving globals: TRUE
[10:53:30.499] |  Resolving any globals that are futures ...
[10:53:30.499] |  :  globals: [3] ‘+’, ‘value’, ‘a’
[10:53:30.499] |  Resolving any globals that are futures ... DONE
[10:53:30.499] |  Search for packages associated with the globals ...
[10:53:30.499] |  :  Packages associated with globals: [2] ‘base’, ‘future’
[10:53:30.499] |  :  Packages: [2] ‘base’, ‘future’
[10:53:30.499] |  Search for packages associated with the globals ... DONE
[10:53:30.499] |  Resolving futures part of globals (recursively) ...
[10:53:30.500] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:30.500] |  :  .  recursive: 99
[10:53:30.500] |  :  .  length: 1
[10:53:30.500] |  :  .  elements: ‘a’
[10:53:30.500] |  :  .  'obj' is Future
[10:53:30.500] |  :  .  run() for Future (‘Future’) ...
[10:53:30.500] |  :  .  |  state: ‘created’
[10:53:30.500] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.500] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.501] |  :  .  |  Using SequentialFutureBackend ...
[10:53:30.501] |  :  .  |  :  Launching futures ...
[10:53:30.501] |  :  .  |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:30.501] |  :  .  |  :  .  |  getFutureData() ...
[10:53:30.501] |  :  .  |  :  .  |  :  getFutureCore() ...
[10:53:30.501] |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:30.501] |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:53:30.501] |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:53:30.501] |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:53:30.501] |  :  .  |  :  .  |  :  getFutureContext() ...
[10:53:30.502] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.502] |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:30.502] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.502] |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:30.502] |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:53:30.502] |  :  .  |  :  .  |  getFutureData() ... done
[10:53:30.502] |  :  .  |  :  .  |  attachPackages() ...
[10:53:30.502] |  :  .  |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.502] |  :  .  |  :  .  |  attachPackages() ... DONE
[10:53:30.503] |  :  .  |  :  .  |  attachPackages() ...
[10:53:30.503] |  :  .  |  :  .  |  :  packages: [n=0] 
[10:53:30.503] |  :  .  |  :  .  |  attachPackages() ... DONE
[10:53:30.503] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.503] |  :  .  |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:30.503] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.503] |  :  .  |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.504] |  :  .  |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.504] |  :  .  |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:30.504] |  :  .  |  :  .  |  :  .  |  New stack:
[10:53:30.504] |  :  .  |  :  .  |  :  .  |  List of 1
[10:53:30.504] |  :  .  |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.504] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.504] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.504] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.504] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.504] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.504] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.506] |  :  .  |  :  .  |  :  .  |  Old stack:
[10:53:30.506] |  :  .  |  :  .  |  :  .  |  List of 1
[10:53:30.506] |  :  .  |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.506] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.506] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.506] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.506] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.506] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:30.506] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.506] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.506] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.506] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.510] |  :  .  |  :  .  |  :  .  |  Not identical
[10:53:30.510] |  :  .  |  :  .  |  :  .  |  all.equal() for future ...
[10:53:30.510] |  :  .  |  :  .  |  :  .  |  :  List of 2
[10:53:30.510] |  :  .  |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.510] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.510] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.510] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.510] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.510] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.510] |  :  .  |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.510] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.510] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.510] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.510] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.510] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.510] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.510] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.510] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.515] |  :  .  |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:30.515] |  :  .  |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:30.515] |  :  .  |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.515] |  :  .  |  :  .  |  :  .  List of future strategies:
[10:53:30.515] |  :  .  |  :  .  |  :  .  1. sequential:
[10:53:30.515] |  :  .  |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.515] |  :  .  |  :  .  |  :  .     - tweaked: FALSE
[10:53:30.515] |  :  .  |  :  .  |  :  .     - call: plan(sequential)
[10:53:30.516] |  :  .  |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.516] |  :  .  |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.517] |  :  .  |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.517] |  :  .  |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.517] |  :  .  |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.517] |  :  .  |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:30.518] |  :  .  |  :  .  |  :  .  |  :  New stack:
[10:53:30.518] |  :  .  |  :  .  |  :  .  |  :  List of 1
[10:53:30.518] |  :  .  |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.518] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.518] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.518] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.518] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.518] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.518] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.518] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.518] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.518] |  :  .  |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.520] |  :  .  |  :  .  |  :  .  |  :  Old stack:
[10:53:30.521] |  :  .  |  :  .  |  :  .  |  :  List of 1
[10:53:30.521] |  :  .  |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.521] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.521] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.521] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.521] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.521] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.521] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.521] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.521] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.521] |  :  .  |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.523] |  :  .  |  :  .  |  :  .  |  :  Identical
[10:53:30.523] |  :  .  |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:30.524] |  :  .  |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.524] |  :  .  |  :  .  |  :  .  |  List of future strategies:
[10:53:30.524] |  :  .  |  :  .  |  :  .  |  1. sequential:
[10:53:30.524] |  :  .  |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.524] |  :  .  |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:30.524] |  :  .  |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:30.524] |  :  .  |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.524] |  :  .  |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.524] |  :  .  |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.524] |  :  .  |  :  .  |  SequentialFuture started (and completed)
[10:53:30.524] |  :  .  |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:30.525] |  :  .  |  :  Launching futures ... done
[10:53:30.525] |  :  .  |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:30.525] |  :  .  |  Using SequentialFutureBackend ... done
[10:53:30.525] |  :  .  run() for Future (‘SequentialFuture’) ... done
[10:53:30.525] |  :  .  resolved() for ‘SequentialFuture’ ...
[10:53:30.525] |  :  .  |  state: ‘finished’
[10:53:30.525] |  :  .  |  run: TRUE
[10:53:30.525] |  :  .  |  result: ‘FutureResult’
[10:53:30.525] |  :  .  resolved() for ‘SequentialFuture’ ... done
[10:53:30.525] |  :  .  Future #1
[10:53:30.526] |  :  .  value(obj, ...) ...
[10:53:30.526] |  :  .  value(obj, ...) ... done
[10:53:30.526] |  :  .  resolve(obj, ...) ...
[10:53:30.526] |  :  .  |  resolved() for ‘SequentialFuture’ ...
[10:53:30.526] |  :  .  |  :  state: ‘finished’
[10:53:30.526] |  :  .  |  :  run: TRUE
[10:53:30.526] |  :  .  |  :  result: ‘FutureResult’
[10:53:30.526] |  :  .  |  resolved() for ‘SequentialFuture’ ... done
[10:53:30.526] |  :  .  |  A SequentialFuture was resolved
[10:53:30.526] |  :  .  resolve(obj, ...) ... done
[10:53:30.527] |  :  .  resolved() for ‘SequentialFuture’ ...
[10:53:30.527] |  :  .  |  state: ‘finished’
[10:53:30.527] |  :  .  |  run: TRUE
[10:53:30.527] |  :  .  |  result: ‘FutureResult’
[10:53:30.527] |  :  .  resolved() for ‘SequentialFuture’ ... done
[10:53:30.527] |  :  .  length: 0 (resolved future 1)
[10:53:30.527] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:30.527] |  :  globals: [1] ‘a’
[10:53:30.527] |  Resolving futures part of globals (recursively) ... DONE
[10:53:30.527] |  Packages after dropping 'base': [1] ‘future’
[10:53:30.528] |  Packages after dropping non-attached packages: [1] ‘future’
[10:53:30.528] |  globals: [1] ‘a’
[10:53:30.528] |  packages: [1] ‘future’
[10:53:30.528] getGlobalsAndPackages() ... done
[10:53:30.528] run() for Future (‘Future’) ...
[10:53:30.528] |  state: ‘created’
[10:53:30.529] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.529] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.529] |  Using SequentialFutureBackend ...
[10:53:30.529] |  :  Launching futures ...
[10:53:30.530] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:30.530] |  :  .  |  getFutureData() ...
[10:53:30.530] |  :  .  |  :  getFutureCore() ...
[10:53:30.530] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘future’
[10:53:30.530] |  :  .  |  :  getFutureCore() ... done
[10:53:30.530] |  :  .  |  :  getFutureCapture() ...
[10:53:30.530] |  :  .  |  :  getFutureCapture() ... done
[10:53:30.530] |  :  .  |  :  getFutureContext() ...
[10:53:30.530] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.530] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:30.531] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.531] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:30.531] |  :  .  |  :  getFutureContext() ... done
[10:53:30.531] |  :  .  |  getFutureData() ... done
[10:53:30.531] |  :  .  |  attachPackages() ...
[10:53:30.531] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.531] |  :  .  |  attachPackages() ... DONE
[10:53:30.531] |  :  .  |  attachPackages() ...
[10:53:30.531] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.532] |  :  .  |  attachPackages() ... DONE
[10:53:30.532] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.532] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:30.532] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.532] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.532] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.533] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:30.533] |  :  .  |  :  .  |  New stack:
[10:53:30.533] |  :  .  |  :  .  |  List of 1
[10:53:30.533] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.533] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.533] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.533] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.533] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.533] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.533] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.535] |  :  .  |  :  .  |  Old stack:
[10:53:30.535] |  :  .  |  :  .  |  List of 1
[10:53:30.535] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.535] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.535] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.535] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.535] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.535] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:30.535] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.535] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.535] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.535] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.538] |  :  .  |  :  .  |  Not identical
[10:53:30.538] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:30.538] |  :  .  |  :  .  |  :  List of 2
[10:53:30.538] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.538] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.538] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.538] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.538] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.538] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.538] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.538] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.538] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.538] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.538] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.538] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.538] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.538] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.538] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.542] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:30.542] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:30.543] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.543] |  :  .  |  :  .  List of future strategies:
[10:53:30.543] |  :  .  |  :  .  1. sequential:
[10:53:30.543] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.543] |  :  .  |  :  .     - tweaked: FALSE
[10:53:30.543] |  :  .  |  :  .     - call: plan(sequential)
[10:53:30.543] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.543] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.543] |  :  .  |  assign_globals() ...
[10:53:30.543] |  :  .  |  List of 1
[10:53:30.543] |  :  .  |   $ a:Classes 'SequentialFuture', 'UniprocessFuture', 'Future' <environment: 0x560a716410c0> 
[10:53:30.543] |  :  .  |   - attr(*, "where")=List of 1
[10:53:30.543] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:53:30.543] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:30.543] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:30.543] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:30.543] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:30.546] |  :  .  |  - copied ‘a’ to environment
[10:53:30.546] |  :  .  |  assign_globals() ... done
[10:53:30.547] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.547] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.548] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.548] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:30.548] |  :  .  |  :  .  |  :  New stack:
[10:53:30.548] |  :  .  |  :  .  |  :  List of 1
[10:53:30.548] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.548] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.548] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.548] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.548] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.548] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.548] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.548] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.548] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.548] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.552] |  :  .  |  :  .  |  :  Old stack:
[10:53:30.552] |  :  .  |  :  .  |  :  List of 1
[10:53:30.552] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.552] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.552] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.552] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.552] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.552] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.552] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.552] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.552] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.552] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.554] |  :  .  |  :  .  |  :  Identical
[10:53:30.555] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:30.555] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.555] |  :  .  |  :  .  |  List of future strategies:
[10:53:30.555] |  :  .  |  :  .  |  1. sequential:
[10:53:30.555] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.555] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:30.555] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:30.555] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.555] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.555] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.555] |  :  .  |  SequentialFuture started (and completed)
[10:53:30.556] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:30.556] |  :  Launching futures ... done
[10:53:30.556] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:30.556] |  Using SequentialFutureBackend ... done
[10:53:30.556] run() for Future (‘SequentialFuture’) ... done
value(b) = 2
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:30.556] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:30.557] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:30.557] |  :  globals found: [2] ‘{’, ‘pkg’
[10:53:30.558] |  Searching for globals ... DONE
[10:53:30.558] |  Resolving globals: TRUE
[10:53:30.558] |  Resolving any globals that are futures ...
[10:53:30.558] |  :  globals: [2] ‘{’, ‘pkg’
[10:53:30.558] |  Resolving any globals that are futures ... DONE
[10:53:30.558] |  Search for packages associated with the globals ...
[10:53:30.558] |  :  Packages associated with globals: [1] ‘base’
[10:53:30.558] |  :  Packages: [1] ‘base’
[10:53:30.559] |  Search for packages associated with the globals ... DONE
[10:53:30.559] |  Resolving futures part of globals (recursively) ...
[10:53:30.559] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:30.559] |  :  .  recursive: 99
[10:53:30.559] |  :  .  length: 1
[10:53:30.559] |  :  .  elements: ‘pkg’
[10:53:30.559] |  :  .  'obj' is atomic
[10:53:30.559] |  :  .  length: 0 (resolved future 1)
[10:53:30.559] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:30.560] |  :  globals: [1] ‘pkg’
[10:53:30.560] |  Resolving futures part of globals (recursively) ... DONE
[10:53:30.560] |  Packages after dropping 'base': [0] 
[10:53:30.560] |  globals: [1] ‘pkg’
[10:53:30.560] |  packages: [0] 
[10:53:30.560] getGlobalsAndPackages() ... done
[10:53:30.560] run() for Future (‘Future’) ...
[10:53:30.560] |  state: ‘created’
[10:53:30.560] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.560] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.561] |  Using SequentialFutureBackend ...
[10:53:30.561] |  :  Launching futures ...
[10:53:30.561] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:30.561] |  :  .  |  getFutureData() ...
[10:53:30.561] |  :  .  |  :  getFutureCore() ...
[10:53:30.561] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:30.561] |  :  .  |  :  getFutureCore() ... done
[10:53:30.561] |  :  .  |  :  getFutureCapture() ...
[10:53:30.561] |  :  .  |  :  getFutureCapture() ... done
[10:53:30.561] |  :  .  |  :  getFutureContext() ...
[10:53:30.562] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.562] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:30.562] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.562] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:30.562] |  :  .  |  :  getFutureContext() ... done
[10:53:30.562] |  :  .  |  getFutureData() ... done
[10:53:30.562] |  :  .  |  attachPackages() ...
[10:53:30.562] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.562] |  :  .  |  attachPackages() ... DONE
[10:53:30.562] |  :  .  |  attachPackages() ...
[10:53:30.563] |  :  .  |  :  packages: [n=0] 
[10:53:30.563] |  :  .  |  attachPackages() ... DONE
[10:53:30.563] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.563] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:30.563] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.563] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.564] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.564] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:30.564] |  :  .  |  :  .  |  New stack:
[10:53:30.564] |  :  .  |  :  .  |  List of 1
[10:53:30.564] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.564] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.564] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.564] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.564] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.564] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.564] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.566] |  :  .  |  :  .  |  Old stack:
[10:53:30.566] |  :  .  |  :  .  |  List of 1
[10:53:30.566] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.566] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.566] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.566] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.566] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.566] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:30.566] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.566] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.566] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.566] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.570] |  :  .  |  :  .  |  Not identical
[10:53:30.570] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:30.570] |  :  .  |  :  .  |  :  List of 2
[10:53:30.570] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.570] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.570] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.570] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.570] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.570] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.570] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.570] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.570] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.570] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.570] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.570] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.570] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.570] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.570] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.574] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:30.574] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:30.575] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.575] |  :  .  |  :  .  List of future strategies:
[10:53:30.575] |  :  .  |  :  .  1. sequential:
[10:53:30.575] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.575] |  :  .  |  :  .     - tweaked: FALSE
[10:53:30.575] |  :  .  |  :  .     - call: plan(sequential)
[10:53:30.575] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.575] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.575] |  :  .  |  assign_globals() ...
[10:53:30.575] |  :  .  |  List of 1
[10:53:30.575] |  :  .  |   $ pkg: chr "foo"
[10:53:30.575] |  :  .  |   - attr(*, "where")=List of 1
[10:53:30.575] |  :  .  |    ..$ pkg:<environment: R_EmptyEnv> 
[10:53:30.575] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:30.575] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:30.575] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:30.575] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:30.578] |  :  .  |  - copied ‘pkg’ to environment
[10:53:30.578] |  :  .  |  assign_globals() ... done
[10:53:30.579] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.579] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.579] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.579] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:30.580] |  :  .  |  :  .  |  :  New stack:
[10:53:30.580] |  :  .  |  :  .  |  :  List of 1
[10:53:30.580] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.580] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.580] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.580] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.580] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.580] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.580] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.580] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.580] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.580] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.583] |  :  .  |  :  .  |  :  Old stack:
[10:53:30.583] |  :  .  |  :  .  |  :  List of 1
[10:53:30.583] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.583] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.583] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.583] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.583] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.583] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.583] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.583] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.583] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.583] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.585] |  :  .  |  :  .  |  :  Identical
[10:53:30.585] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:30.586] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.586] |  :  .  |  :  .  |  List of future strategies:
[10:53:30.586] |  :  .  |  :  .  |  1. sequential:
[10:53:30.586] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.586] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:30.586] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:30.586] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.586] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.586] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.587] |  :  .  |  SequentialFuture started (and completed)
[10:53:30.587] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:30.587] |  :  Launching futures ... done
[10:53:30.587] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:30.587] |  Using SequentialFutureBackend ... done
[10:53:30.587] run() for Future (‘SequentialFuture’) ... done
value(f) = ‘foo’
Method for identifying globals: 'conservative' ... DONE
Method for identifying globals: 'ordered' ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:30.588] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:30.589] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:30.591] |  :  globals found: [4] ‘{’, ‘<-’, ‘a’, ‘*’
[10:53:30.591] |  Searching for globals ... DONE
[10:53:30.591] |  Resolving globals: TRUE
[10:53:30.591] |  Resolving any globals that are futures ...
[10:53:30.591] |  :  globals: [4] ‘{’, ‘<-’, ‘a’, ‘*’
[10:53:30.591] |  Resolving any globals that are futures ... DONE
[10:53:30.592] |  Search for packages associated with the globals ...
[10:53:30.592] |  :  Packages associated with globals: [1] ‘base’
[10:53:30.592] |  :  Packages: [1] ‘base’
[10:53:30.592] |  Search for packages associated with the globals ... DONE
[10:53:30.592] |  Resolving futures part of globals (recursively) ...
[10:53:30.592] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:30.592] |  :  .  recursive: 99
[10:53:30.593] |  :  .  length: 1
[10:53:30.593] |  :  .  elements: ‘a’
[10:53:30.593] |  :  .  'obj' is atomic
[10:53:30.593] |  :  .  length: 0 (resolved future 1)
[10:53:30.593] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:30.593] |  :  globals: [1] ‘a’
[10:53:30.593] |  Resolving futures part of globals (recursively) ... DONE
[10:53:30.593] |  Packages after dropping 'base': [0] 
[10:53:30.593] |  globals: [1] ‘a’
[10:53:30.593] |  packages: [0] 
[10:53:30.594] getGlobalsAndPackages() ... done
[10:53:30.594] run() for Future (‘Future’) ...
[10:53:30.594] |  state: ‘created’
[10:53:30.594] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.594] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.594] |  Using SequentialFutureBackend ...
[10:53:30.594] |  :  Launching futures ...
[10:53:30.594] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:30.594] |  :  .  |  getFutureData() ...
[10:53:30.595] |  :  .  |  :  getFutureCore() ...
[10:53:30.595] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:30.595] |  :  .  |  :  getFutureCore() ... done
[10:53:30.595] |  :  .  |  :  getFutureCapture() ...
[10:53:30.595] |  :  .  |  :  getFutureCapture() ... done
[10:53:30.595] |  :  .  |  :  getFutureContext() ...
[10:53:30.595] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.595] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:30.595] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.595] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:30.595] |  :  .  |  :  getFutureContext() ... done
[10:53:30.596] |  :  .  |  getFutureData() ... done
[10:53:30.596] |  :  .  |  attachPackages() ...
[10:53:30.596] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.596] |  :  .  |  attachPackages() ... DONE
[10:53:30.596] |  :  .  |  attachPackages() ...
[10:53:30.596] |  :  .  |  :  packages: [n=0] 
[10:53:30.596] |  :  .  |  attachPackages() ... DONE
[10:53:30.596] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.597] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:30.597] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.597] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.597] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.597] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:30.597] |  :  .  |  :  .  |  New stack:
[10:53:30.597] |  :  .  |  :  .  |  List of 1
[10:53:30.597] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.597] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.597] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.597] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.597] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.597] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.597] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.599] |  :  .  |  :  .  |  Old stack:
[10:53:30.600] |  :  .  |  :  .  |  List of 1
[10:53:30.600] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.600] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.600] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.600] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.600] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.600] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:30.600] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.600] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.600] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.600] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.602] |  :  .  |  :  .  |  Not identical
[10:53:30.602] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:30.602] |  :  .  |  :  .  |  :  List of 2
[10:53:30.602] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.602] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.602] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.602] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.602] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.602] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.602] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.602] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.602] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.602] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.602] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.602] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.602] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.602] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.602] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.608] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:30.608] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:30.608] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.608] |  :  .  |  :  .  List of future strategies:
[10:53:30.608] |  :  .  |  :  .  1. sequential:
[10:53:30.608] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.608] |  :  .  |  :  .     - tweaked: FALSE
[10:53:30.608] |  :  .  |  :  .     - call: plan(sequential)
[10:53:30.608] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.608] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.609] |  :  .  |  assign_globals() ...
[10:53:30.609] |  :  .  |  List of 1
[10:53:30.609] |  :  .  |   $ a: num 3
[10:53:30.609] |  :  .  |   - attr(*, "where")=List of 1
[10:53:30.609] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:53:30.609] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:30.609] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:30.609] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:30.609] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:30.611] |  :  .  |  - copied ‘a’ to environment
[10:53:30.611] |  :  .  |  assign_globals() ... done
[10:53:30.613] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.613] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.613] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.613] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:30.613] |  :  .  |  :  .  |  :  New stack:
[10:53:30.613] |  :  .  |  :  .  |  :  List of 1
[10:53:30.613] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.613] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.613] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.613] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.613] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.613] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.613] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.613] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.613] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.613] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.616] |  :  .  |  :  .  |  :  Old stack:
[10:53:30.616] |  :  .  |  :  .  |  :  List of 1
[10:53:30.616] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.616] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.616] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.616] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.616] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.616] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.616] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.616] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.616] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.616] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.619] |  :  .  |  :  .  |  :  Identical
[10:53:30.619] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:30.619] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.619] |  :  .  |  :  .  |  List of future strategies:
[10:53:30.619] |  :  .  |  :  .  |  1. sequential:
[10:53:30.619] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.619] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:30.619] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:30.619] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.620] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.620] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.620] |  :  .  |  SequentialFuture started (and completed)
[10:53:30.620] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:30.620] |  :  Launching futures ... done
[10:53:30.620] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:30.620] |  Using SequentialFutureBackend ... done
[10:53:30.620] run() for Future (‘SequentialFuture’) ... done
y = 6
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:30.621] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:30.621] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:30.623] |  :  globals found: [4] ‘{’, ‘<-’, ‘a’, ‘*’
[10:53:30.623] |  Searching for globals ... DONE
[10:53:30.623] |  Resolving globals: TRUE
[10:53:30.623] |  Resolving any globals that are futures ...
[10:53:30.623] |  :  globals: [4] ‘{’, ‘<-’, ‘a’, ‘*’
[10:53:30.623] |  Resolving any globals that are futures ... DONE
[10:53:30.623] |  Search for packages associated with the globals ...
[10:53:30.624] |  :  Packages associated with globals: [1] ‘base’
[10:53:30.624] |  :  Packages: [1] ‘base’
[10:53:30.624] |  Search for packages associated with the globals ... DONE
[10:53:30.624] |  Resolving futures part of globals (recursively) ...
[10:53:30.624] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:30.624] |  :  .  recursive: 99
[10:53:30.624] |  :  .  length: 1
[10:53:30.624] |  :  .  elements: ‘a’
[10:53:30.625] |  :  .  'obj' is atomic
[10:53:30.625] |  :  .  length: 0 (resolved future 1)
[10:53:30.625] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:30.625] |  :  globals: [1] ‘a’
[10:53:30.625] |  Resolving futures part of globals (recursively) ... DONE
[10:53:30.625] |  Packages after dropping 'base': [0] 
[10:53:30.626] |  globals: [1] ‘a’
[10:53:30.626] |  packages: [0] 
[10:53:30.626] getGlobalsAndPackages() ... done
[10:53:30.626] run() for Future (‘Future’) ...
[10:53:30.626] |  state: ‘created’
[10:53:30.627] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.627] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.627] |  Using SequentialFutureBackend ...
[10:53:30.627] |  :  Launching futures ...
[10:53:30.627] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:30.627] |  :  .  |  getFutureData() ...
[10:53:30.627] |  :  .  |  :  getFutureCore() ...
[10:53:30.627] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:30.627] |  :  .  |  :  getFutureCore() ... done
[10:53:30.627] |  :  .  |  :  getFutureCapture() ...
[10:53:30.628] |  :  .  |  :  getFutureCapture() ... done
[10:53:30.628] |  :  .  |  :  getFutureContext() ...
[10:53:30.628] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.628] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:30.628] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.628] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:30.628] |  :  .  |  :  getFutureContext() ... done
[10:53:30.628] |  :  .  |  getFutureData() ... done
[10:53:30.628] |  :  .  |  attachPackages() ...
[10:53:30.629] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.629] |  :  .  |  attachPackages() ... DONE
[10:53:30.629] |  :  .  |  attachPackages() ...
[10:53:30.629] |  :  .  |  :  packages: [n=0] 
[10:53:30.629] |  :  .  |  attachPackages() ... DONE
[10:53:30.629] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.629] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:30.630] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.630] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.630] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.630] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:30.630] |  :  .  |  :  .  |  New stack:
[10:53:30.630] |  :  .  |  :  .  |  List of 1
[10:53:30.630] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.630] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.630] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.630] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.630] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.630] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.630] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.632] |  :  .  |  :  .  |  Old stack:
[10:53:30.632] |  :  .  |  :  .  |  List of 1
[10:53:30.632] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.632] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.632] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.632] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.632] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.632] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:30.632] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.632] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.632] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.632] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.635] |  :  .  |  :  .  |  Not identical
[10:53:30.635] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:30.635] |  :  .  |  :  .  |  :  List of 2
[10:53:30.635] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.635] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.635] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.635] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.635] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.635] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.635] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.635] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.635] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.635] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.635] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.635] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.635] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.635] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.635] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.640] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:30.640] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:30.640] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.640] |  :  .  |  :  .  List of future strategies:
[10:53:30.640] |  :  .  |  :  .  1. sequential:
[10:53:30.640] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.640] |  :  .  |  :  .     - tweaked: FALSE
[10:53:30.640] |  :  .  |  :  .     - call: plan(sequential)
[10:53:30.640] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.640] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.641] |  :  .  |  assign_globals() ...
[10:53:30.641] |  :  .  |  List of 1
[10:53:30.641] |  :  .  |   $ a: num 3
[10:53:30.641] |  :  .  |   - attr(*, "where")=List of 1
[10:53:30.641] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:53:30.641] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:30.641] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:30.641] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:30.641] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:30.643] |  :  .  |  - copied ‘a’ to environment
[10:53:30.643] |  :  .  |  assign_globals() ... done
[10:53:30.645] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.645] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.645] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.646] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:30.646] |  :  .  |  :  .  |  :  New stack:
[10:53:30.646] |  :  .  |  :  .  |  :  List of 1
[10:53:30.646] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.646] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.646] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.646] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.646] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.646] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.646] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.646] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.646] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.646] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.649] |  :  .  |  :  .  |  :  Old stack:
[10:53:30.649] |  :  .  |  :  .  |  :  List of 1
[10:53:30.649] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.649] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.649] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.649] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.649] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.649] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.649] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.649] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.649] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.649] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.651] |  :  .  |  :  .  |  :  Identical
[10:53:30.652] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:30.652] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.652] |  :  .  |  :  .  |  List of future strategies:
[10:53:30.652] |  :  .  |  :  .  |  1. sequential:
[10:53:30.652] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.652] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:30.652] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:30.652] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.652] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.652] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.653] |  :  .  |  SequentialFuture started (and completed)
[10:53:30.653] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:30.653] |  :  Launching futures ... done
[10:53:30.653] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:30.653] |  Using SequentialFutureBackend ... done
[10:53:30.653] run() for Future (‘SequentialFuture’) ... done
y = 6
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:30.654] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:30.654] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:30.656] |  :  globals found: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:30.656] |  Searching for globals ... DONE
[10:53:30.656] |  Resolving globals: TRUE
[10:53:30.656] |  Resolving any globals that are futures ...
[10:53:30.656] |  :  globals: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:30.656] |  Resolving any globals that are futures ... DONE
[10:53:30.656] |  Search for packages associated with the globals ...
[10:53:30.657] |  :  Packages associated with globals: [1] ‘base’
[10:53:30.657] |  :  Packages: [1] ‘base’
[10:53:30.657] |  Search for packages associated with the globals ... DONE
[10:53:30.657] |  Resolving futures part of globals (recursively) ...
[10:53:30.657] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:30.657] |  :  .  recursive: 99
[10:53:30.657] |  :  .  length: 2
[10:53:30.657] |  :  .  elements: ‘a’, ‘ii’
[10:53:30.658] |  :  .  'obj' is atomic
[10:53:30.658] |  :  .  length: 1 (resolved future 1)
[10:53:30.658] |  :  .  'obj' is atomic
[10:53:30.658] |  :  .  length: 0 (resolved future 2)
[10:53:30.658] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:30.658] |  :  globals: [2] ‘a’, ‘ii’
[10:53:30.658] |  Resolving futures part of globals (recursively) ... DONE
[10:53:30.658] |  Packages after dropping 'base': [0] 
[10:53:30.658] |  globals: [2] ‘a’, ‘ii’
[10:53:30.658] |  packages: [0] 
[10:53:30.659] getGlobalsAndPackages() ... done
[10:53:30.659] run() for Future (‘Future’) ...
[10:53:30.659] |  state: ‘created’
[10:53:30.659] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.659] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.659] |  Using SequentialFutureBackend ...
[10:53:30.659] |  :  Launching futures ...
[10:53:30.659] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:30.659] |  :  .  |  getFutureData() ...
[10:53:30.660] |  :  .  |  :  getFutureCore() ...
[10:53:30.660] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:30.660] |  :  .  |  :  getFutureCore() ... done
[10:53:30.660] |  :  .  |  :  getFutureCapture() ...
[10:53:30.660] |  :  .  |  :  getFutureCapture() ... done
[10:53:30.660] |  :  .  |  :  getFutureContext() ...
[10:53:30.660] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.660] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:30.660] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.660] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:30.660] |  :  .  |  :  getFutureContext() ... done
[10:53:30.661] |  :  .  |  getFutureData() ... done
[10:53:30.661] |  :  .  |  attachPackages() ...
[10:53:30.661] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.661] |  :  .  |  attachPackages() ... DONE
[10:53:30.661] |  :  .  |  attachPackages() ...
[10:53:30.661] |  :  .  |  :  packages: [n=0] 
[10:53:30.661] |  :  .  |  attachPackages() ... DONE
[10:53:30.661] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.662] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:30.662] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.662] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.662] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.662] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:30.662] |  :  .  |  :  .  |  New stack:
[10:53:30.662] |  :  .  |  :  .  |  List of 1
[10:53:30.662] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.662] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.662] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.662] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.662] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.662] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.662] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.665] |  :  .  |  :  .  |  Old stack:
[10:53:30.665] |  :  .  |  :  .  |  List of 1
[10:53:30.665] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.665] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.665] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.665] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.665] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.665] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:30.665] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.665] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.665] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.665] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.668] |  :  .  |  :  .  |  Not identical
[10:53:30.668] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:30.668] |  :  .  |  :  .  |  :  List of 2
[10:53:30.668] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.668] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.668] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.668] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.668] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.668] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.668] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.668] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.668] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.668] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.668] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.668] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.668] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.668] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.668] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.673] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:30.673] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:30.673] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.673] |  :  .  |  :  .  List of future strategies:
[10:53:30.673] |  :  .  |  :  .  1. sequential:
[10:53:30.673] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.673] |  :  .  |  :  .     - tweaked: FALSE
[10:53:30.673] |  :  .  |  :  .     - call: plan(sequential)
[10:53:30.673] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.674] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.674] |  :  .  |  assign_globals() ...
[10:53:30.674] |  :  .  |  List of 2
[10:53:30.674] |  :  .  |   $ a : num 1
[10:53:30.674] |  :  .  |   $ ii: int 1
[10:53:30.674] |  :  .  |   - attr(*, "where")=List of 2
[10:53:30.674] |  :  .  |    ..$ a :<environment: R_EmptyEnv> 
[10:53:30.674] |  :  .  |    ..$ ii:<environment: R_EmptyEnv> 
[10:53:30.674] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:30.674] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:30.674] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:30.674] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:30.677] |  :  .  |  - copied ‘a’ to environment
[10:53:30.677] |  :  .  |  - copied ‘ii’ to environment
[10:53:30.677] |  :  .  |  assign_globals() ... done
[10:53:30.678] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.678] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.678] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.679] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:30.679] |  :  .  |  :  .  |  :  New stack:
[10:53:30.679] |  :  .  |  :  .  |  :  List of 1
[10:53:30.679] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.679] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.679] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.679] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.679] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.679] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.679] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.679] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.679] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.679] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.682] |  :  .  |  :  .  |  :  Old stack:
[10:53:30.683] |  :  .  |  :  .  |  :  List of 1
[10:53:30.683] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.683] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.683] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.683] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.683] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.683] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.683] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.683] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.683] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.683] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.685] |  :  .  |  :  .  |  :  Identical
[10:53:30.686] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:30.686] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.686] |  :  .  |  :  .  |  List of future strategies:
[10:53:30.686] |  :  .  |  :  .  |  1. sequential:
[10:53:30.686] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.686] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:30.686] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:30.686] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.686] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.686] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.687] |  :  .  |  SequentialFuture started (and completed)
[10:53:30.687] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:30.687] |  :  Launching futures ... done
[10:53:30.687] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:30.687] |  Using SequentialFutureBackend ... done
[10:53:30.687] run() for Future (‘SequentialFuture’) ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:30.688] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:30.688] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:30.690] |  :  globals found: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:30.690] |  Searching for globals ... DONE
[10:53:30.690] |  Resolving globals: TRUE
[10:53:30.690] |  Resolving any globals that are futures ...
[10:53:30.690] |  :  globals: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:30.690] |  Resolving any globals that are futures ... DONE
[10:53:30.690] |  Search for packages associated with the globals ...
[10:53:30.690] |  :  Packages associated with globals: [1] ‘base’
[10:53:30.691] |  :  Packages: [1] ‘base’
[10:53:30.691] |  Search for packages associated with the globals ... DONE
[10:53:30.691] |  Resolving futures part of globals (recursively) ...
[10:53:30.691] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:30.691] |  :  .  recursive: 99
[10:53:30.691] |  :  .  length: 2
[10:53:30.691] |  :  .  elements: ‘a’, ‘ii’
[10:53:30.691] |  :  .  'obj' is atomic
[10:53:30.692] |  :  .  length: 1 (resolved future 1)
[10:53:30.692] |  :  .  'obj' is atomic
[10:53:30.692] |  :  .  length: 0 (resolved future 2)
[10:53:30.692] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:30.692] |  :  globals: [2] ‘a’, ‘ii’
[10:53:30.692] |  Resolving futures part of globals (recursively) ... DONE
[10:53:30.692] |  Packages after dropping 'base': [0] 
[10:53:30.692] |  globals: [2] ‘a’, ‘ii’
[10:53:30.692] |  packages: [0] 
[10:53:30.692] getGlobalsAndPackages() ... done
[10:53:30.693] run() for Future (‘Future’) ...
[10:53:30.693] |  state: ‘created’
[10:53:30.693] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.693] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.693] |  Using SequentialFutureBackend ...
[10:53:30.693] |  :  Launching futures ...
[10:53:30.693] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:30.693] |  :  .  |  getFutureData() ...
[10:53:30.693] |  :  .  |  :  getFutureCore() ...
[10:53:30.694] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:30.694] |  :  .  |  :  getFutureCore() ... done
[10:53:30.694] |  :  .  |  :  getFutureCapture() ...
[10:53:30.694] |  :  .  |  :  getFutureCapture() ... done
[10:53:30.694] |  :  .  |  :  getFutureContext() ...
[10:53:30.694] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.694] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:30.694] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.694] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:30.694] |  :  .  |  :  getFutureContext() ... done
[10:53:30.694] |  :  .  |  getFutureData() ... done
[10:53:30.695] |  :  .  |  attachPackages() ...
[10:53:30.695] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.695] |  :  .  |  attachPackages() ... DONE
[10:53:30.695] |  :  .  |  attachPackages() ...
[10:53:30.695] |  :  .  |  :  packages: [n=0] 
[10:53:30.695] |  :  .  |  attachPackages() ... DONE
[10:53:30.695] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.695] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:30.696] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.696] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.696] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.696] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:30.696] |  :  .  |  :  .  |  New stack:
[10:53:30.696] |  :  .  |  :  .  |  List of 1
[10:53:30.696] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.696] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.696] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.696] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.696] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.696] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.696] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.698] |  :  .  |  :  .  |  Old stack:
[10:53:30.699] |  :  .  |  :  .  |  List of 1
[10:53:30.699] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.699] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.699] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.699] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.699] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.699] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:30.699] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.699] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.699] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.699] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.703] |  :  .  |  :  .  |  Not identical
[10:53:30.703] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:30.703] |  :  .  |  :  .  |  :  List of 2
[10:53:30.703] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.703] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.703] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.703] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.703] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.703] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.703] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.703] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.703] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.703] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.703] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.703] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.703] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.703] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.703] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.707] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:30.707] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:30.707] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.707] |  :  .  |  :  .  List of future strategies:
[10:53:30.707] |  :  .  |  :  .  1. sequential:
[10:53:30.707] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.707] |  :  .  |  :  .     - tweaked: FALSE
[10:53:30.707] |  :  .  |  :  .     - call: plan(sequential)
[10:53:30.708] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.708] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.708] |  :  .  |  assign_globals() ...
[10:53:30.708] |  :  .  |  List of 2
[10:53:30.708] |  :  .  |   $ a : num 1
[10:53:30.708] |  :  .  |   $ ii: int 2
[10:53:30.708] |  :  .  |   - attr(*, "where")=List of 2
[10:53:30.708] |  :  .  |    ..$ a :<environment: R_EmptyEnv> 
[10:53:30.708] |  :  .  |    ..$ ii:<environment: R_EmptyEnv> 
[10:53:30.708] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:30.708] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:30.708] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:30.708] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:30.711] |  :  .  |  - copied ‘a’ to environment
[10:53:30.711] |  :  .  |  - copied ‘ii’ to environment
[10:53:30.711] |  :  .  |  assign_globals() ... done
[10:53:30.713] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.713] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.713] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.713] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:30.713] |  :  .  |  :  .  |  :  New stack:
[10:53:30.713] |  :  .  |  :  .  |  :  List of 1
[10:53:30.713] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.713] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.713] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.713] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.713] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.713] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.713] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.713] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.713] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.713] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.716] |  :  .  |  :  .  |  :  Old stack:
[10:53:30.716] |  :  .  |  :  .  |  :  List of 1
[10:53:30.716] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.716] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.716] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.716] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.716] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.716] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.716] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.716] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.716] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.716] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.720] |  :  .  |  :  .  |  :  Identical
[10:53:30.720] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:30.720] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.720] |  :  .  |  :  .  |  List of future strategies:
[10:53:30.720] |  :  .  |  :  .  |  1. sequential:
[10:53:30.720] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.720] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:30.720] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:30.721] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.721] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.721] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.721] |  :  .  |  SequentialFuture started (and completed)
[10:53:30.721] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:30.721] |  :  Launching futures ... done
[10:53:30.721] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:30.721] |  Using SequentialFutureBackend ... done
[10:53:30.722] run() for Future (‘SequentialFuture’) ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:30.722] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:30.722] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:30.724] |  :  globals found: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:30.724] |  Searching for globals ... DONE
[10:53:30.724] |  Resolving globals: TRUE
[10:53:30.724] |  Resolving any globals that are futures ...
[10:53:30.724] |  :  globals: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:30.725] |  Resolving any globals that are futures ... DONE
[10:53:30.725] |  Search for packages associated with the globals ...
[10:53:30.725] |  :  Packages associated with globals: [1] ‘base’
[10:53:30.725] |  :  Packages: [1] ‘base’
[10:53:30.725] |  Search for packages associated with the globals ... DONE
[10:53:30.725] |  Resolving futures part of globals (recursively) ...
[10:53:30.726] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:30.726] |  :  .  recursive: 99
[10:53:30.726] |  :  .  length: 2
[10:53:30.726] |  :  .  elements: ‘a’, ‘ii’
[10:53:30.726] |  :  .  'obj' is atomic
[10:53:30.726] |  :  .  length: 1 (resolved future 1)
[10:53:30.726] |  :  .  'obj' is atomic
[10:53:30.726] |  :  .  length: 0 (resolved future 2)
[10:53:30.726] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:30.726] |  :  globals: [2] ‘a’, ‘ii’
[10:53:30.727] |  Resolving futures part of globals (recursively) ... DONE
[10:53:30.727] |  Packages after dropping 'base': [0] 
[10:53:30.727] |  globals: [2] ‘a’, ‘ii’
[10:53:30.727] |  packages: [0] 
[10:53:30.727] getGlobalsAndPackages() ... done
[10:53:30.727] run() for Future (‘Future’) ...
[10:53:30.727] |  state: ‘created’
[10:53:30.727] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.727] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.728] |  Using SequentialFutureBackend ...
[10:53:30.728] |  :  Launching futures ...
[10:53:30.728] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:30.728] |  :  .  |  getFutureData() ...
[10:53:30.728] |  :  .  |  :  getFutureCore() ...
[10:53:30.728] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:30.728] |  :  .  |  :  getFutureCore() ... done
[10:53:30.728] |  :  .  |  :  getFutureCapture() ...
[10:53:30.728] |  :  .  |  :  getFutureCapture() ... done
[10:53:30.728] |  :  .  |  :  getFutureContext() ...
[10:53:30.728] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.729] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:30.729] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.729] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:30.729] |  :  .  |  :  getFutureContext() ... done
[10:53:30.729] |  :  .  |  getFutureData() ... done
[10:53:30.729] |  :  .  |  attachPackages() ...
[10:53:30.729] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.729] |  :  .  |  attachPackages() ... DONE
[10:53:30.729] |  :  .  |  attachPackages() ...
[10:53:30.729] |  :  .  |  :  packages: [n=0] 
[10:53:30.730] |  :  .  |  attachPackages() ... DONE
[10:53:30.730] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.730] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:30.730] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.730] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.730] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.731] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:30.731] |  :  .  |  :  .  |  New stack:
[10:53:30.731] |  :  .  |  :  .  |  List of 1
[10:53:30.731] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.731] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.731] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.731] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.731] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.731] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.731] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.733] |  :  .  |  :  .  |  Old stack:
[10:53:30.733] |  :  .  |  :  .  |  List of 1
[10:53:30.733] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.733] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.733] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.733] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.733] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.733] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:30.733] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.733] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.733] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.733] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.736] |  :  .  |  :  .  |  Not identical
[10:53:30.736] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:30.736] |  :  .  |  :  .  |  :  List of 2
[10:53:30.736] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.736] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.736] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.736] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.736] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.736] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.736] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.736] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.736] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.736] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.736] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.736] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.736] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.736] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.736] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.741] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:30.741] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:30.741] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.741] |  :  .  |  :  .  List of future strategies:
[10:53:30.741] |  :  .  |  :  .  1. sequential:
[10:53:30.741] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.741] |  :  .  |  :  .     - tweaked: FALSE
[10:53:30.741] |  :  .  |  :  .     - call: plan(sequential)
[10:53:30.742] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.742] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.742] |  :  .  |  assign_globals() ...
[10:53:30.742] |  :  .  |  List of 2
[10:53:30.742] |  :  .  |   $ a : num 1
[10:53:30.742] |  :  .  |   $ ii: int 3
[10:53:30.742] |  :  .  |   - attr(*, "where")=List of 2
[10:53:30.742] |  :  .  |    ..$ a :<environment: R_EmptyEnv> 
[10:53:30.742] |  :  .  |    ..$ ii:<environment: R_EmptyEnv> 
[10:53:30.742] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:30.742] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:30.742] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:30.742] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:30.745] |  :  .  |  - copied ‘a’ to environment
[10:53:30.745] |  :  .  |  - copied ‘ii’ to environment
[10:53:30.745] |  :  .  |  assign_globals() ... done
[10:53:30.747] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.747] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.747] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.747] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:30.747] |  :  .  |  :  .  |  :  New stack:
[10:53:30.747] |  :  .  |  :  .  |  :  List of 1
[10:53:30.747] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.747] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.747] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.747] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.747] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.747] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.747] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.747] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.747] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.747] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.750] |  :  .  |  :  .  |  :  Old stack:
[10:53:30.750] |  :  .  |  :  .  |  :  List of 1
[10:53:30.750] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.750] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.750] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.750] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.750] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.750] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.750] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.750] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.750] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.750] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.753] |  :  .  |  :  .  |  :  Identical
[10:53:30.753] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:30.753] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.753] |  :  .  |  :  .  |  List of future strategies:
[10:53:30.753] |  :  .  |  :  .  |  1. sequential:
[10:53:30.753] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.753] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:30.753] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:30.753] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.754] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.754] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.755] |  :  .  |  SequentialFuture started (and completed)
[10:53:30.755] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:30.755] |  :  Launching futures ... done
[10:53:30.755] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:30.755] |  Using SequentialFutureBackend ... done
[10:53:30.755] run() for Future (‘SequentialFuture’) ... done
[1] 1 2 3
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:30.756] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:30.756] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:30.758] |  :  globals found: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:30.758] |  Searching for globals ... DONE
[10:53:30.758] |  Resolving globals: TRUE
[10:53:30.758] |  Resolving any globals that are futures ...
[10:53:30.758] |  :  globals: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:30.759] |  Resolving any globals that are futures ... DONE
[10:53:30.759] |  Search for packages associated with the globals ...
[10:53:30.759] |  :  Packages associated with globals: [1] ‘base’
[10:53:30.759] |  :  Packages: [1] ‘base’
[10:53:30.759] |  Search for packages associated with the globals ... DONE
[10:53:30.759] |  Resolving futures part of globals (recursively) ...
[10:53:30.760] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:30.760] |  :  .  recursive: 99
[10:53:30.760] |  :  .  length: 2
[10:53:30.760] |  :  .  elements: ‘a’, ‘ii’
[10:53:30.760] |  :  .  'obj' is atomic
[10:53:30.760] |  :  .  length: 1 (resolved future 1)
[10:53:30.760] |  :  .  'obj' is atomic
[10:53:30.760] |  :  .  length: 0 (resolved future 2)
[10:53:30.760] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:30.760] |  :  globals: [2] ‘a’, ‘ii’
[10:53:30.761] |  Resolving futures part of globals (recursively) ... DONE
[10:53:30.761] |  Packages after dropping 'base': [0] 
[10:53:30.761] |  globals: [2] ‘a’, ‘ii’
[10:53:30.761] |  packages: [0] 
[10:53:30.761] getGlobalsAndPackages() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:30.761] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:30.762] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:30.764] |  :  globals found: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:30.764] |  Searching for globals ... DONE
[10:53:30.764] |  Resolving globals: TRUE
[10:53:30.764] |  Resolving any globals that are futures ...
[10:53:30.764] |  :  globals: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:30.764] |  Resolving any globals that are futures ... DONE
[10:53:30.764] |  Search for packages associated with the globals ...
[10:53:30.764] |  :  Packages associated with globals: [1] ‘base’
[10:53:30.765] |  :  Packages: [1] ‘base’
[10:53:30.765] |  Search for packages associated with the globals ... DONE
[10:53:30.765] |  Resolving futures part of globals (recursively) ...
[10:53:30.765] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:30.765] |  :  .  recursive: 99
[10:53:30.765] |  :  .  length: 2
[10:53:30.765] |  :  .  elements: ‘a’, ‘ii’
[10:53:30.765] |  :  .  'obj' is atomic
[10:53:30.765] |  :  .  length: 1 (resolved future 1)
[10:53:30.766] |  :  .  'obj' is atomic
[10:53:30.766] |  :  .  length: 0 (resolved future 2)
[10:53:30.766] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:30.766] |  :  globals: [2] ‘a’, ‘ii’
[10:53:30.766] |  Resolving futures part of globals (recursively) ... DONE
[10:53:30.766] |  Packages after dropping 'base': [0] 
[10:53:30.766] |  globals: [2] ‘a’, ‘ii’
[10:53:30.766] |  packages: [0] 
[10:53:30.766] getGlobalsAndPackages() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:30.767] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:30.767] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:30.769] |  :  globals found: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:30.769] |  Searching for globals ... DONE
[10:53:30.769] |  Resolving globals: TRUE
[10:53:30.769] |  Resolving any globals that are futures ...
[10:53:30.769] |  :  globals: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:30.769] |  Resolving any globals that are futures ... DONE
[10:53:30.769] |  Search for packages associated with the globals ...
[10:53:30.770] |  :  Packages associated with globals: [1] ‘base’
[10:53:30.770] |  :  Packages: [1] ‘base’
[10:53:30.770] |  Search for packages associated with the globals ... DONE
[10:53:30.770] |  Resolving futures part of globals (recursively) ...
[10:53:30.770] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:30.771] |  :  .  recursive: 99
[10:53:30.771] |  :  .  length: 2
[10:53:30.771] |  :  .  elements: ‘a’, ‘ii’
[10:53:30.771] |  :  .  'obj' is atomic
[10:53:30.771] |  :  .  length: 1 (resolved future 1)
[10:53:30.771] |  :  .  'obj' is atomic
[10:53:30.771] |  :  .  length: 0 (resolved future 2)
[10:53:30.771] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:30.773] |  :  globals: [2] ‘a’, ‘ii’
[10:53:30.773] |  Resolving futures part of globals (recursively) ... DONE
[10:53:30.774] |  Packages after dropping 'base': [0] 
[10:53:30.774] |  globals: [2] ‘a’, ‘ii’
[10:53:30.774] |  packages: [0] 
[10:53:30.774] getGlobalsAndPackages() ... done
[10:53:30.774] run() for Future (‘Future’) ...
[10:53:30.774] |  state: ‘created’
[10:53:30.774] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.775] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.775] |  Using SequentialFutureBackend ...
[10:53:30.775] |  :  Launching futures ...
[10:53:30.775] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:30.775] |  :  .  |  getFutureData() ...
[10:53:30.775] |  :  .  |  :  getFutureCore() ...
[10:53:30.775] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:30.775] |  :  .  |  :  getFutureCore() ... done
[10:53:30.775] |  :  .  |  :  getFutureCapture() ...
[10:53:30.775] |  :  .  |  :  getFutureCapture() ... done
[10:53:30.776] |  :  .  |  :  getFutureContext() ...
[10:53:30.776] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.776] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:30.776] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.776] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:30.776] |  :  .  |  :  getFutureContext() ... done
[10:53:30.776] |  :  .  |  getFutureData() ... done
[10:53:30.776] |  :  .  |  attachPackages() ...
[10:53:30.777] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.777] |  :  .  |  attachPackages() ... DONE
[10:53:30.777] |  :  .  |  attachPackages() ...
[10:53:30.777] |  :  .  |  :  packages: [n=0] 
[10:53:30.777] |  :  .  |  attachPackages() ... DONE
[10:53:30.777] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.777] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:30.778] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.778] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.778] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.778] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:30.778] |  :  .  |  :  .  |  New stack:
[10:53:30.778] |  :  .  |  :  .  |  List of 1
[10:53:30.778] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.778] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.778] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.778] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.778] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.778] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.778] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.781] |  :  .  |  :  .  |  Old stack:
[10:53:30.781] |  :  .  |  :  .  |  List of 1
[10:53:30.781] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.781] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.781] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.781] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.781] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.781] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:30.781] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.781] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.781] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.781] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.783] |  :  .  |  :  .  |  Not identical
[10:53:30.784] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:30.784] |  :  .  |  :  .  |  :  List of 2
[10:53:30.784] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.784] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.784] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.784] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.784] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.784] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.784] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.784] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.784] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.784] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.784] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.784] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.784] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.784] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.784] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.788] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:30.788] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:30.788] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.788] |  :  .  |  :  .  List of future strategies:
[10:53:30.788] |  :  .  |  :  .  1. sequential:
[10:53:30.788] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.788] |  :  .  |  :  .     - tweaked: FALSE
[10:53:30.788] |  :  .  |  :  .     - call: plan(sequential)
[10:53:30.789] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.789] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.789] |  :  .  |  assign_globals() ...
[10:53:30.789] |  :  .  |  List of 2
[10:53:30.789] |  :  .  |   $ a : num 1
[10:53:30.789] |  :  .  |   $ ii: int 1
[10:53:30.789] |  :  .  |   - attr(*, "where")=List of 2
[10:53:30.789] |  :  .  |    ..$ a :<environment: R_EmptyEnv> 
[10:53:30.789] |  :  .  |    ..$ ii:<environment: R_EmptyEnv> 
[10:53:30.789] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:30.789] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:30.789] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:30.789] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:30.792] |  :  .  |  - copied ‘a’ to environment
[10:53:30.792] |  :  .  |  - copied ‘ii’ to environment
[10:53:30.793] |  :  .  |  assign_globals() ... done
[10:53:30.795] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.795] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.795] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.796] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:30.796] |  :  .  |  :  .  |  :  New stack:
[10:53:30.796] |  :  .  |  :  .  |  :  List of 1
[10:53:30.796] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.796] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.796] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.796] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.796] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.796] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.796] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.796] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.796] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.796] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.799] |  :  .  |  :  .  |  :  Old stack:
[10:53:30.799] |  :  .  |  :  .  |  :  List of 1
[10:53:30.799] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.799] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.799] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.799] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.799] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.799] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.799] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.799] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.799] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.799] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.802] |  :  .  |  :  .  |  :  Identical
[10:53:30.802] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:30.802] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.802] |  :  .  |  :  .  |  List of future strategies:
[10:53:30.802] |  :  .  |  :  .  |  1. sequential:
[10:53:30.802] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.802] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:30.802] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:30.802] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.803] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.803] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.803] |  :  .  |  SequentialFuture started (and completed)
[10:53:30.803] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:30.803] |  :  Launching futures ... done
[10:53:30.803] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:30.803] |  Using SequentialFutureBackend ... done
[10:53:30.803] run() for Future (‘SequentialFuture’) ... done
[10:53:30.804] run() for Future (‘Future’) ...
[10:53:30.804] |  state: ‘created’
[10:53:30.804] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.804] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.804] |  Using SequentialFutureBackend ...
[10:53:30.804] |  :  Launching futures ...
[10:53:30.804] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:30.804] |  :  .  |  getFutureData() ...
[10:53:30.804] |  :  .  |  :  getFutureCore() ...
[10:53:30.804] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:30.805] |  :  .  |  :  getFutureCore() ... done
[10:53:30.805] |  :  .  |  :  getFutureCapture() ...
[10:53:30.805] |  :  .  |  :  getFutureCapture() ... done
[10:53:30.805] |  :  .  |  :  getFutureContext() ...
[10:53:30.805] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.805] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:30.805] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.805] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:30.805] |  :  .  |  :  getFutureContext() ... done
[10:53:30.805] |  :  .  |  getFutureData() ... done
[10:53:30.806] |  :  .  |  attachPackages() ...
[10:53:30.806] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.806] |  :  .  |  attachPackages() ... DONE
[10:53:30.806] |  :  .  |  attachPackages() ...
[10:53:30.806] |  :  .  |  :  packages: [n=0] 
[10:53:30.806] |  :  .  |  attachPackages() ... DONE
[10:53:30.806] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.806] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:30.807] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.807] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.807] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.807] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:30.807] |  :  .  |  :  .  |  New stack:
[10:53:30.807] |  :  .  |  :  .  |  List of 1
[10:53:30.807] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.807] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.807] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.807] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.807] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.807] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.807] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.809] |  :  .  |  :  .  |  Old stack:
[10:53:30.810] |  :  .  |  :  .  |  List of 1
[10:53:30.810] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.810] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.810] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.810] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.810] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.810] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:30.810] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.810] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.810] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.810] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.812] |  :  .  |  :  .  |  Not identical
[10:53:30.812] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:30.812] |  :  .  |  :  .  |  :  List of 2
[10:53:30.812] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.812] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.812] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.812] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.812] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.812] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.812] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.812] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.812] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.812] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.812] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.812] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.812] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.812] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.812] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.818] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:30.818] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:30.818] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.818] |  :  .  |  :  .  List of future strategies:
[10:53:30.818] |  :  .  |  :  .  1. sequential:
[10:53:30.818] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.818] |  :  .  |  :  .     - tweaked: FALSE
[10:53:30.818] |  :  .  |  :  .     - call: plan(sequential)
[10:53:30.819] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.819] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.819] |  :  .  |  assign_globals() ...
[10:53:30.819] |  :  .  |  List of 2
[10:53:30.819] |  :  .  |   $ a : num 1
[10:53:30.819] |  :  .  |   $ ii: int 2
[10:53:30.819] |  :  .  |   - attr(*, "where")=List of 2
[10:53:30.819] |  :  .  |    ..$ a :<environment: R_EmptyEnv> 
[10:53:30.819] |  :  .  |    ..$ ii:<environment: R_EmptyEnv> 
[10:53:30.819] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:30.819] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:30.819] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:30.819] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:30.822] |  :  .  |  - copied ‘a’ to environment
[10:53:30.822] |  :  .  |  - copied ‘ii’ to environment
[10:53:30.822] |  :  .  |  assign_globals() ... done
[10:53:30.824] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.824] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.824] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.824] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:30.824] |  :  .  |  :  .  |  :  New stack:
[10:53:30.824] |  :  .  |  :  .  |  :  List of 1
[10:53:30.824] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.824] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.824] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.824] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.824] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.824] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.824] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.824] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.824] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.824] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.827] |  :  .  |  :  .  |  :  Old stack:
[10:53:30.827] |  :  .  |  :  .  |  :  List of 1
[10:53:30.827] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.827] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.827] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.827] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.827] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.827] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.827] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.827] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.827] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.827] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.830] |  :  .  |  :  .  |  :  Identical
[10:53:30.830] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:30.830] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.830] |  :  .  |  :  .  |  List of future strategies:
[10:53:30.830] |  :  .  |  :  .  |  1. sequential:
[10:53:30.830] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.830] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:30.830] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:30.830] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.831] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.831] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.831] |  :  .  |  SequentialFuture started (and completed)
[10:53:30.831] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:30.831] |  :  Launching futures ... done
[10:53:30.831] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:30.831] |  Using SequentialFutureBackend ... done
[10:53:30.831] run() for Future (‘SequentialFuture’) ... done
[10:53:30.832] run() for Future (‘Future’) ...
[10:53:30.832] |  state: ‘created’
[10:53:30.832] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.832] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.832] |  Using SequentialFutureBackend ...
[10:53:30.832] |  :  Launching futures ...
[10:53:30.832] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:30.832] |  :  .  |  getFutureData() ...
[10:53:30.832] |  :  .  |  :  getFutureCore() ...
[10:53:30.832] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:30.832] |  :  .  |  :  getFutureCore() ... done
[10:53:30.833] |  :  .  |  :  getFutureCapture() ...
[10:53:30.833] |  :  .  |  :  getFutureCapture() ... done
[10:53:30.833] |  :  .  |  :  getFutureContext() ...
[10:53:30.833] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.833] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:30.833] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.833] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:30.833] |  :  .  |  :  getFutureContext() ... done
[10:53:30.833] |  :  .  |  getFutureData() ... done
[10:53:30.833] |  :  .  |  attachPackages() ...
[10:53:30.834] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.835] |  :  .  |  attachPackages() ... DONE
[10:53:30.835] |  :  .  |  attachPackages() ...
[10:53:30.835] |  :  .  |  :  packages: [n=0] 
[10:53:30.835] |  :  .  |  attachPackages() ... DONE
[10:53:30.835] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.835] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:30.835] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.836] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.836] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.836] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:30.836] |  :  .  |  :  .  |  New stack:
[10:53:30.836] |  :  .  |  :  .  |  List of 1
[10:53:30.836] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.836] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.836] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.836] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.836] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.836] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.836] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.838] |  :  .  |  :  .  |  Old stack:
[10:53:30.838] |  :  .  |  :  .  |  List of 1
[10:53:30.838] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.838] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.838] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.838] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.838] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.838] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:30.838] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.838] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.838] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.838] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.841] |  :  .  |  :  .  |  Not identical
[10:53:30.841] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:30.841] |  :  .  |  :  .  |  :  List of 2
[10:53:30.841] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.841] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.841] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.841] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.841] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.841] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.841] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.841] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.841] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.841] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.841] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.841] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.841] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.841] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.841] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.846] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:30.846] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:30.846] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.846] |  :  .  |  :  .  List of future strategies:
[10:53:30.846] |  :  .  |  :  .  1. sequential:
[10:53:30.846] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.846] |  :  .  |  :  .     - tweaked: FALSE
[10:53:30.846] |  :  .  |  :  .     - call: plan(sequential)
[10:53:30.846] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.847] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.847] |  :  .  |  assign_globals() ...
[10:53:30.847] |  :  .  |  List of 2
[10:53:30.847] |  :  .  |   $ a : num 1
[10:53:30.847] |  :  .  |   $ ii: int 3
[10:53:30.847] |  :  .  |   - attr(*, "where")=List of 2
[10:53:30.847] |  :  .  |    ..$ a :<environment: R_EmptyEnv> 
[10:53:30.847] |  :  .  |    ..$ ii:<environment: R_EmptyEnv> 
[10:53:30.847] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:30.847] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:30.847] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:30.847] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:30.850] |  :  .  |  - copied ‘a’ to environment
[10:53:30.850] |  :  .  |  - copied ‘ii’ to environment
[10:53:30.850] |  :  .  |  assign_globals() ... done
[10:53:30.851] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.851] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.851] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.851] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:30.852] |  :  .  |  :  .  |  :  New stack:
[10:53:30.852] |  :  .  |  :  .  |  :  List of 1
[10:53:30.852] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.852] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.852] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.852] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.852] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.852] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.852] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.852] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.852] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.852] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.856] |  :  .  |  :  .  |  :  Old stack:
[10:53:30.856] |  :  .  |  :  .  |  :  List of 1
[10:53:30.856] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.856] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.856] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.856] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.856] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.856] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.856] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.856] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.856] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.856] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.859] |  :  .  |  :  .  |  :  Identical
[10:53:30.859] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:30.860] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.860] |  :  .  |  :  .  |  List of future strategies:
[10:53:30.860] |  :  .  |  :  .  |  1. sequential:
[10:53:30.860] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.860] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:30.860] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:30.860] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.860] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.860] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.860] |  :  .  |  SequentialFuture started (and completed)
[10:53:30.861] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:30.861] |  :  Launching futures ... done
[10:53:30.861] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:30.861] |  Using SequentialFutureBackend ... done
[10:53:30.861] run() for Future (‘SequentialFuture’) ... done
[1] 1 2 3
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:30.861] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:30.862] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:30.862] |  :  globals found: [0] 
[10:53:30.862] |  Searching for globals ... DONE
[10:53:30.862] |  globals: [0] <none>
[10:53:30.862] |  packages: [0] <none>
[10:53:30.862] getGlobalsAndPackages() ... done
[10:53:30.863] run() for Future (‘Future’) ...
[10:53:30.863] |  state: ‘created’
[10:53:30.863] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.863] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.863] |  Using SequentialFutureBackend ...
[10:53:30.863] |  :  Launching futures ...
[10:53:30.863] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:30.863] |  :  .  |  getFutureData() ...
[10:53:30.864] |  :  .  |  :  getFutureCore() ...
[10:53:30.864] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:30.864] |  :  .  |  :  getFutureCore() ... done
[10:53:30.864] |  :  .  |  :  getFutureCapture() ...
[10:53:30.864] |  :  .  |  :  getFutureCapture() ... done
[10:53:30.864] |  :  .  |  :  getFutureContext() ...
[10:53:30.864] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.864] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:30.864] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.864] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:30.865] |  :  .  |  :  getFutureContext() ... done
[10:53:30.865] |  :  .  |  getFutureData() ... done
[10:53:30.865] |  :  .  |  attachPackages() ...
[10:53:30.865] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.865] |  :  .  |  attachPackages() ... DONE
[10:53:30.865] |  :  .  |  attachPackages() ...
[10:53:30.865] |  :  .  |  :  packages: [n=0] 
[10:53:30.865] |  :  .  |  attachPackages() ... DONE
[10:53:30.866] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.866] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:30.866] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.866] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.866] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.866] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:30.866] |  :  .  |  :  .  |  New stack:
[10:53:30.867] |  :  .  |  :  .  |  List of 1
[10:53:30.867] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.867] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.867] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.867] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.867] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.867] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.867] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.869] |  :  .  |  :  .  |  Old stack:
[10:53:30.869] |  :  .  |  :  .  |  List of 1
[10:53:30.869] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.869] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.869] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.869] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.869] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.869] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:30.869] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.869] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.869] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.869] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.872] |  :  .  |  :  .  |  Not identical
[10:53:30.872] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:30.872] |  :  .  |  :  .  |  :  List of 2
[10:53:30.872] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.872] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.872] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.872] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.872] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.872] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.872] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.872] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.872] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.872] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.872] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.872] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.872] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.872] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.872] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.878] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:30.878] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:30.878] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.878] |  :  .  |  :  .  List of future strategies:
[10:53:30.878] |  :  .  |  :  .  1. sequential:
[10:53:30.878] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.878] |  :  .  |  :  .     - tweaked: FALSE
[10:53:30.878] |  :  .  |  :  .     - call: plan(sequential)
[10:53:30.878] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.878] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.880] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.880] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.880] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.880] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:30.880] |  :  .  |  :  .  |  :  New stack:
[10:53:30.880] |  :  .  |  :  .  |  :  List of 1
[10:53:30.880] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.880] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.880] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.880] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.880] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.880] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.880] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.880] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.880] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.880] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.883] |  :  .  |  :  .  |  :  Old stack:
[10:53:30.883] |  :  .  |  :  .  |  :  List of 1
[10:53:30.883] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.883] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.883] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.883] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.883] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.883] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.883] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.883] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.883] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.883] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.886] |  :  .  |  :  .  |  :  Identical
[10:53:30.886] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:30.886] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.886] |  :  .  |  :  .  |  List of future strategies:
[10:53:30.886] |  :  .  |  :  .  |  1. sequential:
[10:53:30.886] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.886] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:30.886] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:30.887] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.887] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.887] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.887] |  :  .  |  SequentialFuture started (and completed)
[10:53:30.887] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:30.887] |  :  Launching futures ... done
[10:53:30.887] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:30.888] |  Using SequentialFutureBackend ... done
[10:53:30.888] run() for Future (‘SequentialFuture’) ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:30.888] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:30.888] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:30.889] |  :  globals found: [3] ‘+’, ‘value’, ‘a’
[10:53:30.889] |  Searching for globals ... DONE
[10:53:30.889] |  Resolving globals: TRUE
[10:53:30.889] |  Resolving any globals that are futures ...
[10:53:30.889] |  :  globals: [3] ‘+’, ‘value’, ‘a’
[10:53:30.889] |  Resolving any globals that are futures ... DONE
[10:53:30.889] |  Search for packages associated with the globals ...
[10:53:30.890] |  :  Packages associated with globals: [2] ‘base’, ‘future’
[10:53:30.890] |  :  Packages: [2] ‘base’, ‘future’
[10:53:30.890] |  Search for packages associated with the globals ... DONE
[10:53:30.890] |  Resolving futures part of globals (recursively) ...
[10:53:30.890] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:30.890] |  :  .  recursive: 99
[10:53:30.890] |  :  .  length: 1
[10:53:30.891] |  :  .  elements: ‘a’
[10:53:30.891] |  :  .  'obj' is SequentialFuture
[10:53:30.891] |  :  .  resolved() for ‘SequentialFuture’ ...
[10:53:30.891] |  :  .  |  state: ‘finished’
[10:53:30.891] |  :  .  |  run: TRUE
[10:53:30.891] |  :  .  |  result: ‘FutureResult’
[10:53:30.891] |  :  .  resolved() for ‘SequentialFuture’ ... done
[10:53:30.891] |  :  .  Future #1
[10:53:30.891] |  :  .  value(obj, ...) ...
[10:53:30.891] |  :  .  value(obj, ...) ... done
[10:53:30.892] |  :  .  resolve(obj, ...) ...
[10:53:30.892] |  :  .  |  resolved() for ‘SequentialFuture’ ...
[10:53:30.892] |  :  .  |  :  state: ‘finished’
[10:53:30.892] |  :  .  |  :  run: TRUE
[10:53:30.892] |  :  .  |  :  result: ‘FutureResult’
[10:53:30.892] |  :  .  |  resolved() for ‘SequentialFuture’ ... done
[10:53:30.892] |  :  .  |  A SequentialFuture was resolved
[10:53:30.892] |  :  .  resolve(obj, ...) ... done
[10:53:30.892] |  :  .  resolved() for ‘SequentialFuture’ ...
[10:53:30.892] |  :  .  |  state: ‘finished’
[10:53:30.893] |  :  .  |  run: TRUE
[10:53:30.893] |  :  .  |  result: ‘FutureResult’
[10:53:30.893] |  :  .  resolved() for ‘SequentialFuture’ ... done
[10:53:30.893] |  :  .  length: 0 (resolved future 1)
[10:53:30.893] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:30.893] |  :  globals: [1] ‘a’
[10:53:30.893] |  Resolving futures part of globals (recursively) ... DONE
[10:53:30.893] |  Packages after dropping 'base': [1] ‘future’
[10:53:30.893] |  Packages after dropping non-attached packages: [1] ‘future’
[10:53:30.894] |  globals: [1] ‘a’
[10:53:30.894] |  packages: [1] ‘future’
[10:53:30.894] getGlobalsAndPackages() ... done
[10:53:30.895] run() for Future (‘Future’) ...
[10:53:30.895] |  state: ‘created’
[10:53:30.895] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.895] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.895] |  Using SequentialFutureBackend ...
[10:53:30.895] |  :  Launching futures ...
[10:53:30.895] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:30.896] |  :  .  |  getFutureData() ...
[10:53:30.896] |  :  .  |  :  getFutureCore() ...
[10:53:30.896] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘future’
[10:53:30.896] |  :  .  |  :  getFutureCore() ... done
[10:53:30.896] |  :  .  |  :  getFutureCapture() ...
[10:53:30.896] |  :  .  |  :  getFutureCapture() ... done
[10:53:30.896] |  :  .  |  :  getFutureContext() ...
[10:53:30.896] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.896] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:30.896] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.897] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:30.897] |  :  .  |  :  getFutureContext() ... done
[10:53:30.897] |  :  .  |  getFutureData() ... done
[10:53:30.897] |  :  .  |  attachPackages() ...
[10:53:30.897] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.897] |  :  .  |  attachPackages() ... DONE
[10:53:30.897] |  :  .  |  attachPackages() ...
[10:53:30.897] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.897] |  :  .  |  attachPackages() ... DONE
[10:53:30.898] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.898] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:30.898] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.898] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.898] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.899] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:30.899] |  :  .  |  :  .  |  New stack:
[10:53:30.899] |  :  .  |  :  .  |  List of 1
[10:53:30.899] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.899] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.899] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.899] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.899] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.899] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.899] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.901] |  :  .  |  :  .  |  Old stack:
[10:53:30.901] |  :  .  |  :  .  |  List of 1
[10:53:30.901] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.901] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.901] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.901] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.901] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.901] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:30.901] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.901] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.901] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.901] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.904] |  :  .  |  :  .  |  Not identical
[10:53:30.904] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:30.904] |  :  .  |  :  .  |  :  List of 2
[10:53:30.904] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.904] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.904] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.904] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.904] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.904] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.904] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.904] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.904] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.904] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.904] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.904] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.904] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.904] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.904] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.908] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:30.908] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:30.908] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.908] |  :  .  |  :  .  List of future strategies:
[10:53:30.908] |  :  .  |  :  .  1. sequential:
[10:53:30.908] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.908] |  :  .  |  :  .     - tweaked: FALSE
[10:53:30.908] |  :  .  |  :  .     - call: plan(sequential)
[10:53:30.909] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.909] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.909] |  :  .  |  assign_globals() ...
[10:53:30.909] |  :  .  |  List of 1
[10:53:30.909] |  :  .  |   $ a:Classes 'SequentialFuture', 'UniprocessFuture', 'Future' <environment: 0x560a706cffb0> 
[10:53:30.909] |  :  .  |   - attr(*, "where")=List of 1
[10:53:30.909] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:53:30.909] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:30.909] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:30.909] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:30.909] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:30.912] |  :  .  |  - copied ‘a’ to environment
[10:53:30.912] |  :  .  |  assign_globals() ... done
[10:53:30.914] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.914] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.914] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.914] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:30.914] |  :  .  |  :  .  |  :  New stack:
[10:53:30.915] |  :  .  |  :  .  |  :  List of 1
[10:53:30.915] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.915] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.915] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.915] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.915] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.915] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.915] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.915] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.915] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.915] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.918] |  :  .  |  :  .  |  :  Old stack:
[10:53:30.918] |  :  .  |  :  .  |  :  List of 1
[10:53:30.918] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.918] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.918] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.918] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.918] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.918] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.918] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.918] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.918] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.918] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.920] |  :  .  |  :  .  |  :  Identical
[10:53:30.920] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:30.921] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.921] |  :  .  |  :  .  |  List of future strategies:
[10:53:30.921] |  :  .  |  :  .  |  1. sequential:
[10:53:30.921] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.921] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:30.921] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:30.921] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.921] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.921] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.921] |  :  .  |  SequentialFuture started (and completed)
[10:53:30.922] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:30.922] |  :  Launching futures ... done
[10:53:30.922] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:30.922] |  Using SequentialFutureBackend ... done
[10:53:30.922] run() for Future (‘SequentialFuture’) ... done
value(b) = 2
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:30.922] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:30.923] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:30.923] |  :  globals found: [0] 
[10:53:30.923] |  Searching for globals ... DONE
[10:53:30.923] |  globals: [0] <none>
[10:53:30.923] |  packages: [0] <none>
[10:53:30.923] getGlobalsAndPackages() ... done
[10:53:30.924] run() for Future (‘Future’) ...
[10:53:30.924] |  state: ‘created’
[10:53:30.924] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.924] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.924] |  Using SequentialFutureBackend ...
[10:53:30.924] |  :  Launching futures ...
[10:53:30.924] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:30.924] |  :  .  |  getFutureData() ...
[10:53:30.924] |  :  .  |  :  getFutureCore() ...
[10:53:30.924] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:30.925] |  :  .  |  :  getFutureCore() ... done
[10:53:30.925] |  :  .  |  :  getFutureCapture() ...
[10:53:30.925] |  :  .  |  :  getFutureCapture() ... done
[10:53:30.925] |  :  .  |  :  getFutureContext() ...
[10:53:30.925] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.925] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:30.925] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.925] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:30.925] |  :  .  |  :  getFutureContext() ... done
[10:53:30.925] |  :  .  |  getFutureData() ... done
[10:53:30.926] |  :  .  |  attachPackages() ...
[10:53:30.926] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.926] |  :  .  |  attachPackages() ... DONE
[10:53:30.926] |  :  .  |  attachPackages() ...
[10:53:30.926] |  :  .  |  :  packages: [n=0] 
[10:53:30.926] |  :  .  |  attachPackages() ... DONE
[10:53:30.926] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.926] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:30.927] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.927] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.927] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.927] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:30.927] |  :  .  |  :  .  |  New stack:
[10:53:30.927] |  :  .  |  :  .  |  List of 1
[10:53:30.927] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.927] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.927] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.927] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.927] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.927] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.927] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.929] |  :  .  |  :  .  |  Old stack:
[10:53:30.929] |  :  .  |  :  .  |  List of 1
[10:53:30.929] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.929] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.929] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.929] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.929] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.929] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:30.929] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.929] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.929] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.929] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.932] |  :  .  |  :  .  |  Not identical
[10:53:30.933] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:30.933] |  :  .  |  :  .  |  :  List of 2
[10:53:30.933] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.933] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.933] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.933] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.933] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.933] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.933] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.933] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.933] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.933] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.933] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.933] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.933] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.933] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.933] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.938] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:30.938] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:30.938] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.938] |  :  .  |  :  .  List of future strategies:
[10:53:30.938] |  :  .  |  :  .  1. sequential:
[10:53:30.938] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.938] |  :  .  |  :  .     - tweaked: FALSE
[10:53:30.938] |  :  .  |  :  .     - call: plan(sequential)
[10:53:30.938] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.939] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.940] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.940] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.940] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.940] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:30.940] |  :  .  |  :  .  |  :  New stack:
[10:53:30.940] |  :  .  |  :  .  |  :  List of 1
[10:53:30.940] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.940] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.940] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.940] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.940] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.940] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.940] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.940] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.940] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.940] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.943] |  :  .  |  :  .  |  :  Old stack:
[10:53:30.943] |  :  .  |  :  .  |  :  List of 1
[10:53:30.943] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.943] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.943] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.943] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.943] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.943] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.943] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.943] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.943] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.943] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.946] |  :  .  |  :  .  |  :  Identical
[10:53:30.946] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:30.946] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.946] |  :  .  |  :  .  |  List of future strategies:
[10:53:30.946] |  :  .  |  :  .  |  1. sequential:
[10:53:30.946] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.946] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:30.946] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:30.947] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.947] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.947] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.947] |  :  .  |  SequentialFuture started (and completed)
[10:53:30.947] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:30.947] |  :  Launching futures ... done
[10:53:30.948] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:30.948] |  Using SequentialFutureBackend ... done
[10:53:30.948] run() for Future (‘SequentialFuture’) ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:30.948] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:30.948] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:30.949] |  :  globals found: [3] ‘+’, ‘value’, ‘a’
[10:53:30.949] |  Searching for globals ... DONE
[10:53:30.949] |  Resolving globals: TRUE
[10:53:30.949] |  Resolving any globals that are futures ...
[10:53:30.949] |  :  globals: [3] ‘+’, ‘value’, ‘a’
[10:53:30.949] |  Resolving any globals that are futures ... DONE
[10:53:30.949] |  Search for packages associated with the globals ...
[10:53:30.950] |  :  Packages associated with globals: [2] ‘base’, ‘future’
[10:53:30.950] |  :  Packages: [2] ‘base’, ‘future’
[10:53:30.950] |  Search for packages associated with the globals ... DONE
[10:53:30.950] |  Resolving futures part of globals (recursively) ...
[10:53:30.950] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:30.950] |  :  .  recursive: 99
[10:53:30.951] |  :  .  length: 1
[10:53:30.951] |  :  .  elements: ‘a’
[10:53:30.951] |  :  .  'obj' is SequentialFuture
[10:53:30.951] |  :  .  resolved() for ‘SequentialFuture’ ...
[10:53:30.951] |  :  .  |  state: ‘finished’
[10:53:30.951] |  :  .  |  run: TRUE
[10:53:30.952] |  :  .  |  result: ‘FutureResult’
[10:53:30.952] |  :  .  resolved() for ‘SequentialFuture’ ... done
[10:53:30.952] |  :  .  Future #1
[10:53:30.952] |  :  .  value(obj, ...) ...
[10:53:30.952] |  :  .  value(obj, ...) ... done
[10:53:30.952] |  :  .  resolve(obj, ...) ...
[10:53:30.953] |  :  .  |  resolved() for ‘SequentialFuture’ ...
[10:53:30.953] |  :  .  |  :  state: ‘finished’
[10:53:30.953] |  :  .  |  :  run: TRUE
[10:53:30.953] |  :  .  |  :  result: ‘FutureResult’
[10:53:30.953] |  :  .  |  resolved() for ‘SequentialFuture’ ... done
[10:53:30.953] |  :  .  |  A SequentialFuture was resolved
[10:53:30.953] |  :  .  resolve(obj, ...) ... done
[10:53:30.953] |  :  .  resolved() for ‘SequentialFuture’ ...
[10:53:30.953] |  :  .  |  state: ‘finished’
[10:53:30.953] |  :  .  |  run: TRUE
[10:53:30.953] |  :  .  |  result: ‘FutureResult’
[10:53:30.954] |  :  .  resolved() for ‘SequentialFuture’ ... done
[10:53:30.954] |  :  .  length: 0 (resolved future 1)
[10:53:30.954] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:30.954] |  :  globals: [1] ‘a’
[10:53:30.954] |  Resolving futures part of globals (recursively) ... DONE
[10:53:30.954] |  Packages after dropping 'base': [1] ‘future’
[10:53:30.954] |  Packages after dropping non-attached packages: [1] ‘future’
[10:53:30.954] |  globals: [1] ‘a’
[10:53:30.954] |  packages: [1] ‘future’
[10:53:30.955] getGlobalsAndPackages() ... done
[10:53:30.955] run() for Future (‘Future’) ...
[10:53:30.955] |  state: ‘created’
[10:53:30.955] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.955] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.955] |  Using SequentialFutureBackend ...
[10:53:30.955] |  :  Launching futures ...
[10:53:30.955] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:30.956] |  :  .  |  getFutureData() ...
[10:53:30.956] |  :  .  |  :  getFutureCore() ...
[10:53:30.956] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘future’
[10:53:30.956] |  :  .  |  :  getFutureCore() ... done
[10:53:30.956] |  :  .  |  :  getFutureCapture() ...
[10:53:30.956] |  :  .  |  :  getFutureCapture() ... done
[10:53:30.956] |  :  .  |  :  getFutureContext() ...
[10:53:30.956] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.956] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:30.956] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.956] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:30.957] |  :  .  |  :  getFutureContext() ... done
[10:53:30.957] |  :  .  |  getFutureData() ... done
[10:53:30.957] |  :  .  |  attachPackages() ...
[10:53:30.957] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.957] |  :  .  |  attachPackages() ... DONE
[10:53:30.957] |  :  .  |  attachPackages() ...
[10:53:30.957] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.957] |  :  .  |  attachPackages() ... DONE
[10:53:30.958] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.958] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:30.958] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.958] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.958] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.958] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:30.958] |  :  .  |  :  .  |  New stack:
[10:53:30.959] |  :  .  |  :  .  |  List of 1
[10:53:30.959] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.959] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.959] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.959] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.959] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.959] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.959] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.961] |  :  .  |  :  .  |  Old stack:
[10:53:30.961] |  :  .  |  :  .  |  List of 1
[10:53:30.961] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.961] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.961] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.961] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.961] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.961] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:30.961] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.961] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.961] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.961] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.963] |  :  .  |  :  .  |  Not identical
[10:53:30.964] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:30.964] |  :  .  |  :  .  |  :  List of 2
[10:53:30.964] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.964] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.964] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.964] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.964] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.964] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.964] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.964] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.964] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.964] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.964] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.964] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.964] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.964] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.964] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.968] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:30.968] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:30.968] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.968] |  :  .  |  :  .  List of future strategies:
[10:53:30.968] |  :  .  |  :  .  1. sequential:
[10:53:30.968] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.968] |  :  .  |  :  .     - tweaked: FALSE
[10:53:30.968] |  :  .  |  :  .     - call: plan(sequential)
[10:53:30.969] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.969] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.969] |  :  .  |  assign_globals() ...
[10:53:30.969] |  :  .  |  List of 1
[10:53:30.969] |  :  .  |   $ a:Classes 'SequentialFuture', 'UniprocessFuture', 'Future' <environment: 0x560a71646d08> 
[10:53:30.969] |  :  .  |   - attr(*, "where")=List of 1
[10:53:30.969] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:53:30.969] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:30.969] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:30.969] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:30.969] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:30.972] |  :  .  |  - copied ‘a’ to environment
[10:53:30.972] |  :  .  |  assign_globals() ... done
[10:53:30.974] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.974] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.974] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.974] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:30.974] |  :  .  |  :  .  |  :  New stack:
[10:53:30.974] |  :  .  |  :  .  |  :  List of 1
[10:53:30.974] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.974] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.974] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.974] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.974] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.974] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.974] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.974] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.974] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.974] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.977] |  :  .  |  :  .  |  :  Old stack:
[10:53:30.977] |  :  .  |  :  .  |  :  List of 1
[10:53:30.977] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.977] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.977] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.977] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.977] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.977] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.977] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.977] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.977] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.977] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.980] |  :  .  |  :  .  |  :  Identical
[10:53:30.980] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:30.980] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:30.980] |  :  .  |  :  .  |  List of future strategies:
[10:53:30.980] |  :  .  |  :  .  |  1. sequential:
[10:53:30.980] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:30.980] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:30.980] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:30.981] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:30.981] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.981] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:30.981] |  :  .  |  SequentialFuture started (and completed)
[10:53:30.981] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:30.981] |  :  Launching futures ... done
[10:53:30.981] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:30.982] |  Using SequentialFutureBackend ... done
[10:53:30.982] run() for Future (‘SequentialFuture’) ... done
value(b) = 2
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:30.982] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:30.982] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:30.983] |  :  globals found: [0] 
[10:53:30.983] |  Searching for globals ... DONE
[10:53:30.983] |  globals: [0] <none>
[10:53:30.983] |  packages: [0] <none>
[10:53:30.983] getGlobalsAndPackages() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:30.983] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:30.984] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:30.984] |  :  globals found: [3] ‘+’, ‘value’, ‘a’
[10:53:30.984] |  Searching for globals ... DONE
[10:53:30.984] |  Resolving globals: TRUE
[10:53:30.985] |  Resolving any globals that are futures ...
[10:53:30.985] |  :  globals: [3] ‘+’, ‘value’, ‘a’
[10:53:30.985] |  Resolving any globals that are futures ... DONE
[10:53:30.985] |  Search for packages associated with the globals ...
[10:53:30.985] |  :  Packages associated with globals: [2] ‘base’, ‘future’
[10:53:30.985] |  :  Packages: [2] ‘base’, ‘future’
[10:53:30.985] |  Search for packages associated with the globals ... DONE
[10:53:30.985] |  Resolving futures part of globals (recursively) ...
[10:53:30.986] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:30.986] |  :  .  recursive: 99
[10:53:30.986] |  :  .  length: 1
[10:53:30.986] |  :  .  elements: ‘a’
[10:53:30.986] |  :  .  'obj' is Future
[10:53:30.986] |  :  .  run() for Future (‘Future’) ...
[10:53:30.986] |  :  .  |  state: ‘created’
[10:53:30.986] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.986] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.987] |  :  .  |  Using SequentialFutureBackend ...
[10:53:30.987] |  :  .  |  :  Launching futures ...
[10:53:30.987] |  :  .  |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:30.987] |  :  .  |  :  .  |  getFutureData() ...
[10:53:30.987] |  :  .  |  :  .  |  :  getFutureCore() ...
[10:53:30.987] |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:30.987] |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:53:30.987] |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:53:30.987] |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:53:30.987] |  :  .  |  :  .  |  :  getFutureContext() ...
[10:53:30.987] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.988] |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:30.988] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.988] |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:30.988] |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:53:30.988] |  :  .  |  :  .  |  getFutureData() ... done
[10:53:30.988] |  :  .  |  :  .  |  attachPackages() ...
[10:53:30.988] |  :  .  |  :  .  |  :  packages: [n=1] ‘future’
[10:53:30.988] |  :  .  |  :  .  |  attachPackages() ... DONE
[10:53:30.988] |  :  .  |  :  .  |  attachPackages() ...
[10:53:30.989] |  :  .  |  :  .  |  :  packages: [n=0] 
[10:53:30.989] |  :  .  |  :  .  |  attachPackages() ... DONE
[10:53:30.989] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:30.990] |  :  .  |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:30.990] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:30.990] |  :  .  |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:30.990] |  :  .  |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:30.991] |  :  .  |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:30.991] |  :  .  |  :  .  |  :  .  |  New stack:
[10:53:30.991] |  :  .  |  :  .  |  :  .  |  List of 1
[10:53:30.991] |  :  .  |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.991] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.991] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.991] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.991] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.991] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.991] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.993] |  :  .  |  :  .  |  :  .  |  Old stack:
[10:53:30.993] |  :  .  |  :  .  |  :  .  |  List of 1
[10:53:30.993] |  :  .  |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.993] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.993] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.993] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.993] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.993] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:30.993] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.993] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.993] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.993] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:30.996] |  :  .  |  :  .  |  :  .  |  Not identical
[10:53:30.996] |  :  .  |  :  .  |  :  .  |  all.equal() for future ...
[10:53:30.996] |  :  .  |  :  .  |  :  .  |  :  List of 2
[10:53:30.996] |  :  .  |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.996] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.996] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.996] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.996] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.996] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:30.996] |  :  .  |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:30.996] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:30.996] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.996] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.996] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:30.996] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:30.996] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:30.996] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:30.996] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.000] |  :  .  |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:31.000] |  :  .  |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:31.001] |  :  .  |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:31.001] |  :  .  |  :  .  |  :  .  List of future strategies:
[10:53:31.001] |  :  .  |  :  .  |  :  .  1. sequential:
[10:53:31.001] |  :  .  |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:31.001] |  :  .  |  :  .  |  :  .     - tweaked: FALSE
[10:53:31.001] |  :  .  |  :  .  |  :  .     - call: plan(sequential)
[10:53:31.001] |  :  .  |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.001] |  :  .  |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.003] |  :  .  |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.003] |  :  .  |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.003] |  :  .  |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.003] |  :  .  |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:31.003] |  :  .  |  :  .  |  :  .  |  :  New stack:
[10:53:31.003] |  :  .  |  :  .  |  :  .  |  :  List of 1
[10:53:31.003] |  :  .  |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.003] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.003] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.003] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.003] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.003] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:31.003] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.003] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.003] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.003] |  :  .  |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.006] |  :  .  |  :  .  |  :  .  |  :  Old stack:
[10:53:31.006] |  :  .  |  :  .  |  :  .  |  :  List of 1
[10:53:31.006] |  :  .  |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.006] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.006] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.006] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.006] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.006] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:31.006] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.006] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.006] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.006] |  :  .  |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.010] |  :  .  |  :  .  |  :  .  |  :  Identical
[10:53:31.010] |  :  .  |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:31.010] |  :  .  |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:31.010] |  :  .  |  :  .  |  :  .  |  List of future strategies:
[10:53:31.010] |  :  .  |  :  .  |  :  .  |  1. sequential:
[10:53:31.010] |  :  .  |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:31.010] |  :  .  |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:31.010] |  :  .  |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:31.011] |  :  .  |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.011] |  :  .  |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.011] |  :  .  |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.011] |  :  .  |  :  .  |  SequentialFuture started (and completed)
[10:53:31.011] |  :  .  |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:31.011] |  :  .  |  :  Launching futures ... done
[10:53:31.011] |  :  .  |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:31.012] |  :  .  |  Using SequentialFutureBackend ... done
[10:53:31.012] |  :  .  run() for Future (‘SequentialFuture’) ... done
[10:53:31.012] |  :  .  resolved() for ‘SequentialFuture’ ...
[10:53:31.012] |  :  .  |  state: ‘finished’
[10:53:31.012] |  :  .  |  run: TRUE
[10:53:31.012] |  :  .  |  result: ‘FutureResult’
[10:53:31.012] |  :  .  resolved() for ‘SequentialFuture’ ... done
[10:53:31.012] |  :  .  Future #1
[10:53:31.012] |  :  .  value(obj, ...) ...
[10:53:31.012] |  :  .  value(obj, ...) ... done
[10:53:31.013] |  :  .  resolve(obj, ...) ...
[10:53:31.013] |  :  .  |  resolved() for ‘SequentialFuture’ ...
[10:53:31.013] |  :  .  |  :  state: ‘finished’
[10:53:31.013] |  :  .  |  :  run: TRUE
[10:53:31.013] |  :  .  |  :  result: ‘FutureResult’
[10:53:31.013] |  :  .  |  resolved() for ‘SequentialFuture’ ... done
[10:53:31.013] |  :  .  |  A SequentialFuture was resolved
[10:53:31.013] |  :  .  resolve(obj, ...) ... done
[10:53:31.013] |  :  .  resolved() for ‘SequentialFuture’ ...
[10:53:31.013] |  :  .  |  state: ‘finished’
[10:53:31.014] |  :  .  |  run: TRUE
[10:53:31.014] |  :  .  |  result: ‘FutureResult’
[10:53:31.014] |  :  .  resolved() for ‘SequentialFuture’ ... done
[10:53:31.014] |  :  .  length: 0 (resolved future 1)
[10:53:31.014] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:31.014] |  :  globals: [1] ‘a’
[10:53:31.014] |  Resolving futures part of globals (recursively) ... DONE
[10:53:31.014] |  Packages after dropping 'base': [1] ‘future’
[10:53:31.014] |  Packages after dropping non-attached packages: [1] ‘future’
[10:53:31.014] |  globals: [1] ‘a’
[10:53:31.015] |  packages: [1] ‘future’
[10:53:31.015] getGlobalsAndPackages() ... done
[10:53:31.015] run() for Future (‘Future’) ...
[10:53:31.015] |  state: ‘created’
[10:53:31.015] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.015] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.015] |  Using SequentialFutureBackend ...
[10:53:31.015] |  :  Launching futures ...
[10:53:31.015] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:31.016] |  :  .  |  getFutureData() ...
[10:53:31.016] |  :  .  |  :  getFutureCore() ...
[10:53:31.016] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘future’
[10:53:31.016] |  :  .  |  :  getFutureCore() ... done
[10:53:31.016] |  :  .  |  :  getFutureCapture() ...
[10:53:31.016] |  :  .  |  :  getFutureCapture() ... done
[10:53:31.016] |  :  .  |  :  getFutureContext() ...
[10:53:31.016] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.016] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:31.016] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.016] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:31.017] |  :  .  |  :  getFutureContext() ... done
[10:53:31.017] |  :  .  |  getFutureData() ... done
[10:53:31.017] |  :  .  |  attachPackages() ...
[10:53:31.017] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:31.017] |  :  .  |  attachPackages() ... DONE
[10:53:31.017] |  :  .  |  attachPackages() ...
[10:53:31.017] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:31.017] |  :  .  |  attachPackages() ... DONE
[10:53:31.018] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.018] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:31.018] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.018] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.018] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.018] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:31.019] |  :  .  |  :  .  |  New stack:
[10:53:31.019] |  :  .  |  :  .  |  List of 1
[10:53:31.019] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.019] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.019] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.019] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.019] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.019] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.019] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.021] |  :  .  |  :  .  |  Old stack:
[10:53:31.021] |  :  .  |  :  .  |  List of 1
[10:53:31.021] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.021] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.021] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.021] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.021] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.021] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:31.021] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.021] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.021] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.021] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.023] |  :  .  |  :  .  |  Not identical
[10:53:31.024] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:31.024] |  :  .  |  :  .  |  :  List of 2
[10:53:31.024] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.024] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.024] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.024] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.024] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.024] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.024] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.024] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.024] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.024] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.024] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.024] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:31.024] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.024] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.024] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.029] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:31.029] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:31.029] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:31.029] |  :  .  |  :  .  List of future strategies:
[10:53:31.029] |  :  .  |  :  .  1. sequential:
[10:53:31.029] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:31.029] |  :  .  |  :  .     - tweaked: FALSE
[10:53:31.029] |  :  .  |  :  .     - call: plan(sequential)
[10:53:31.030] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.030] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.030] |  :  .  |  assign_globals() ...
[10:53:31.030] |  :  .  |  List of 1
[10:53:31.030] |  :  .  |   $ a:Classes 'SequentialFuture', 'UniprocessFuture', 'Future' <environment: 0x560a719b9988> 
[10:53:31.030] |  :  .  |   - attr(*, "where")=List of 1
[10:53:31.030] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:53:31.030] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:31.030] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:31.030] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:31.030] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:31.032] |  :  .  |  - copied ‘a’ to environment
[10:53:31.033] |  :  .  |  assign_globals() ... done
[10:53:31.034] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.034] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.034] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.034] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:31.035] |  :  .  |  :  .  |  :  New stack:
[10:53:31.035] |  :  .  |  :  .  |  :  List of 1
[10:53:31.035] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.035] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.035] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.035] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.035] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.035] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:31.035] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.035] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.035] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.035] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.037] |  :  .  |  :  .  |  :  Old stack:
[10:53:31.037] |  :  .  |  :  .  |  :  List of 1
[10:53:31.037] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.037] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.037] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.037] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.037] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.037] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:31.037] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.037] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.037] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.037] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.040] |  :  .  |  :  .  |  :  Identical
[10:53:31.040] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:31.040] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:31.040] |  :  .  |  :  .  |  List of future strategies:
[10:53:31.040] |  :  .  |  :  .  |  1. sequential:
[10:53:31.040] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:31.040] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:31.040] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:31.041] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.041] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.041] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.041] |  :  .  |  SequentialFuture started (and completed)
[10:53:31.041] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:31.041] |  :  Launching futures ... done
[10:53:31.042] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:31.042] |  Using SequentialFutureBackend ... done
[10:53:31.042] run() for Future (‘SequentialFuture’) ... done
value(b) = 2
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:31.042] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:31.042] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:31.043] |  :  globals found: [0] 
[10:53:31.043] |  Searching for globals ... DONE
[10:53:31.043] |  globals: [0] <none>
[10:53:31.043] |  packages: [0] <none>
[10:53:31.043] getGlobalsAndPackages() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:31.043] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:31.044] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:31.044] |  :  globals found: [3] ‘+’, ‘value’, ‘a’
[10:53:31.046] |  Searching for globals ... DONE
[10:53:31.046] |  Resolving globals: TRUE
[10:53:31.046] |  Resolving any globals that are futures ...
[10:53:31.046] |  :  globals: [3] ‘+’, ‘value’, ‘a’
[10:53:31.046] |  Resolving any globals that are futures ... DONE
[10:53:31.046] |  Search for packages associated with the globals ...
[10:53:31.046] |  :  Packages associated with globals: [2] ‘base’, ‘future’
[10:53:31.047] |  :  Packages: [2] ‘base’, ‘future’
[10:53:31.047] |  Search for packages associated with the globals ... DONE
[10:53:31.047] |  Resolving futures part of globals (recursively) ...
[10:53:31.047] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:31.047] |  :  .  recursive: 99
[10:53:31.047] |  :  .  length: 1
[10:53:31.047] |  :  .  elements: ‘a’
[10:53:31.047] |  :  .  'obj' is Future
[10:53:31.047] |  :  .  run() for Future (‘Future’) ...
[10:53:31.048] |  :  .  |  state: ‘created’
[10:53:31.048] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.048] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.048] |  :  .  |  Using SequentialFutureBackend ...
[10:53:31.048] |  :  .  |  :  Launching futures ...
[10:53:31.048] |  :  .  |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:31.048] |  :  .  |  :  .  |  getFutureData() ...
[10:53:31.048] |  :  .  |  :  .  |  :  getFutureCore() ...
[10:53:31.048] |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:31.049] |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:53:31.049] |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:53:31.049] |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:53:31.049] |  :  .  |  :  .  |  :  getFutureContext() ...
[10:53:31.049] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.049] |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:31.049] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.049] |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:31.049] |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:53:31.049] |  :  .  |  :  .  |  getFutureData() ... done
[10:53:31.050] |  :  .  |  :  .  |  attachPackages() ...
[10:53:31.050] |  :  .  |  :  .  |  :  packages: [n=1] ‘future’
[10:53:31.050] |  :  .  |  :  .  |  attachPackages() ... DONE
[10:53:31.050] |  :  .  |  :  .  |  attachPackages() ...
[10:53:31.050] |  :  .  |  :  .  |  :  packages: [n=0] 
[10:53:31.050] |  :  .  |  :  .  |  attachPackages() ... DONE
[10:53:31.050] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.051] |  :  .  |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:31.051] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.051] |  :  .  |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.051] |  :  .  |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.051] |  :  .  |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:31.051] |  :  .  |  :  .  |  :  .  |  New stack:
[10:53:31.051] |  :  .  |  :  .  |  :  .  |  List of 1
[10:53:31.051] |  :  .  |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.051] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.051] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.051] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.051] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.051] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.051] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.053] |  :  .  |  :  .  |  :  .  |  Old stack:
[10:53:31.054] |  :  .  |  :  .  |  :  .  |  List of 1
[10:53:31.054] |  :  .  |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.054] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.054] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.054] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.054] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.054] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:31.054] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.054] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.054] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.054] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.056] |  :  .  |  :  .  |  :  .  |  Not identical
[10:53:31.056] |  :  .  |  :  .  |  :  .  |  all.equal() for future ...
[10:53:31.057] |  :  .  |  :  .  |  :  .  |  :  List of 2
[10:53:31.057] |  :  .  |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.057] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.057] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.057] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.057] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.057] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.057] |  :  .  |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.057] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.057] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.057] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.057] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.057] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:31.057] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.057] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.057] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.061] |  :  .  |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:31.061] |  :  .  |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:31.061] |  :  .  |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:31.061] |  :  .  |  :  .  |  :  .  List of future strategies:
[10:53:31.061] |  :  .  |  :  .  |  :  .  1. sequential:
[10:53:31.061] |  :  .  |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:31.061] |  :  .  |  :  .  |  :  .     - tweaked: FALSE
[10:53:31.061] |  :  .  |  :  .  |  :  .     - call: plan(sequential)
[10:53:31.062] |  :  .  |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.062] |  :  .  |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.064] |  :  .  |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.065] |  :  .  |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.065] |  :  .  |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.066] |  :  .  |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:31.066] |  :  .  |  :  .  |  :  .  |  :  New stack:
[10:53:31.066] |  :  .  |  :  .  |  :  .  |  :  List of 1
[10:53:31.066] |  :  .  |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.066] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.066] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.066] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.066] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.066] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:31.066] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.066] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.066] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.066] |  :  .  |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.069] |  :  .  |  :  .  |  :  .  |  :  Old stack:
[10:53:31.069] |  :  .  |  :  .  |  :  .  |  :  List of 1
[10:53:31.069] |  :  .  |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.069] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.069] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.069] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.069] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.069] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:31.069] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.069] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.069] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.069] |  :  .  |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.072] |  :  .  |  :  .  |  :  .  |  :  Identical
[10:53:31.073] |  :  .  |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:31.073] |  :  .  |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:31.073] |  :  .  |  :  .  |  :  .  |  List of future strategies:
[10:53:31.073] |  :  .  |  :  .  |  :  .  |  1. sequential:
[10:53:31.073] |  :  .  |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:31.073] |  :  .  |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:31.073] |  :  .  |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:31.073] |  :  .  |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.073] |  :  .  |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.073] |  :  .  |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.074] |  :  .  |  :  .  |  SequentialFuture started (and completed)
[10:53:31.074] |  :  .  |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:31.074] |  :  .  |  :  Launching futures ... done
[10:53:31.074] |  :  .  |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:31.074] |  :  .  |  Using SequentialFutureBackend ... done
[10:53:31.074] |  :  .  run() for Future (‘SequentialFuture’) ... done
[10:53:31.074] |  :  .  resolved() for ‘SequentialFuture’ ...
[10:53:31.074] |  :  .  |  state: ‘finished’
[10:53:31.074] |  :  .  |  run: TRUE
[10:53:31.075] |  :  .  |  result: ‘FutureResult’
[10:53:31.075] |  :  .  resolved() for ‘SequentialFuture’ ... done
[10:53:31.075] |  :  .  Future #1
[10:53:31.075] |  :  .  value(obj, ...) ...
[10:53:31.075] |  :  .  value(obj, ...) ... done
[10:53:31.075] |  :  .  resolve(obj, ...) ...
[10:53:31.075] |  :  .  |  resolved() for ‘SequentialFuture’ ...
[10:53:31.075] |  :  .  |  :  state: ‘finished’
[10:53:31.075] |  :  .  |  :  run: TRUE
[10:53:31.076] |  :  .  |  :  result: ‘FutureResult’
[10:53:31.076] |  :  .  |  resolved() for ‘SequentialFuture’ ... done
[10:53:31.076] |  :  .  |  A SequentialFuture was resolved
[10:53:31.076] |  :  .  resolve(obj, ...) ... done
[10:53:31.076] |  :  .  resolved() for ‘SequentialFuture’ ...
[10:53:31.076] |  :  .  |  state: ‘finished’
[10:53:31.076] |  :  .  |  run: TRUE
[10:53:31.076] |  :  .  |  result: ‘FutureResult’
[10:53:31.076] |  :  .  resolved() for ‘SequentialFuture’ ... done
[10:53:31.076] |  :  .  length: 0 (resolved future 1)
[10:53:31.077] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:31.077] |  :  globals: [1] ‘a’
[10:53:31.077] |  Resolving futures part of globals (recursively) ... DONE
[10:53:31.077] |  Packages after dropping 'base': [1] ‘future’
[10:53:31.077] |  Packages after dropping non-attached packages: [1] ‘future’
[10:53:31.077] |  globals: [1] ‘a’
[10:53:31.077] |  packages: [1] ‘future’
[10:53:31.077] getGlobalsAndPackages() ... done
[10:53:31.078] run() for Future (‘Future’) ...
[10:53:31.078] |  state: ‘created’
[10:53:31.078] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.078] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.078] |  Using SequentialFutureBackend ...
[10:53:31.078] |  :  Launching futures ...
[10:53:31.078] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:31.078] |  :  .  |  getFutureData() ...
[10:53:31.078] |  :  .  |  :  getFutureCore() ...
[10:53:31.078] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘future’
[10:53:31.079] |  :  .  |  :  getFutureCore() ... done
[10:53:31.079] |  :  .  |  :  getFutureCapture() ...
[10:53:31.079] |  :  .  |  :  getFutureCapture() ... done
[10:53:31.079] |  :  .  |  :  getFutureContext() ...
[10:53:31.079] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.079] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:31.079] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.079] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:31.079] |  :  .  |  :  getFutureContext() ... done
[10:53:31.080] |  :  .  |  getFutureData() ... done
[10:53:31.080] |  :  .  |  attachPackages() ...
[10:53:31.080] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:31.080] |  :  .  |  attachPackages() ... DONE
[10:53:31.080] |  :  .  |  attachPackages() ...
[10:53:31.080] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:31.080] |  :  .  |  attachPackages() ... DONE
[10:53:31.081] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.081] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:31.081] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.081] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.081] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.081] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:31.081] |  :  .  |  :  .  |  New stack:
[10:53:31.082] |  :  .  |  :  .  |  List of 1
[10:53:31.082] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.082] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.082] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.082] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.082] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.082] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.082] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.084] |  :  .  |  :  .  |  Old stack:
[10:53:31.084] |  :  .  |  :  .  |  List of 1
[10:53:31.084] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.084] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.084] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.084] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.084] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.084] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:31.084] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.084] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.084] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.084] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.088] |  :  .  |  :  .  |  Not identical
[10:53:31.088] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:31.089] |  :  .  |  :  .  |  :  List of 2
[10:53:31.089] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.089] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.089] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.089] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.089] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.089] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.089] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.089] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.089] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.089] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.089] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.089] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:31.089] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.089] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.089] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.093] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:31.093] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:31.093] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:31.094] |  :  .  |  :  .  List of future strategies:
[10:53:31.094] |  :  .  |  :  .  1. sequential:
[10:53:31.094] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:31.094] |  :  .  |  :  .     - tweaked: FALSE
[10:53:31.094] |  :  .  |  :  .     - call: plan(sequential)
[10:53:31.094] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.094] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.094] |  :  .  |  assign_globals() ...
[10:53:31.094] |  :  .  |  List of 1
[10:53:31.094] |  :  .  |   $ a:Classes 'SequentialFuture', 'UniprocessFuture', 'Future' <environment: 0x560a72156f58> 
[10:53:31.094] |  :  .  |   - attr(*, "where")=List of 1
[10:53:31.094] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:53:31.094] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:31.094] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:31.094] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:31.094] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:31.097] |  :  .  |  - copied ‘a’ to environment
[10:53:31.097] |  :  .  |  assign_globals() ... done
[10:53:31.098] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.098] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.099] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.099] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:31.099] |  :  .  |  :  .  |  :  New stack:
[10:53:31.099] |  :  .  |  :  .  |  :  List of 1
[10:53:31.099] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.099] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.099] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.099] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.099] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.099] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:31.099] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.099] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.099] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.099] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.102] |  :  .  |  :  .  |  :  Old stack:
[10:53:31.102] |  :  .  |  :  .  |  :  List of 1
[10:53:31.102] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.102] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.102] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.102] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.102] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.102] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:31.102] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.102] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.102] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.102] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.106] |  :  .  |  :  .  |  :  Identical
[10:53:31.106] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:31.106] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:31.106] |  :  .  |  :  .  |  List of future strategies:
[10:53:31.106] |  :  .  |  :  .  |  1. sequential:
[10:53:31.106] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:31.106] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:31.106] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:31.107] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.107] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.107] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.107] |  :  .  |  SequentialFuture started (and completed)
[10:53:31.107] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:31.107] |  :  Launching futures ... done
[10:53:31.107] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:31.108] |  Using SequentialFutureBackend ... done
[10:53:31.108] run() for Future (‘SequentialFuture’) ... done
value(b) = 2
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:31.108] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:31.108] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:31.109] |  :  globals found: [2] ‘{’, ‘pkg’
[10:53:31.109] |  Searching for globals ... DONE
[10:53:31.109] |  Resolving globals: TRUE
[10:53:31.110] |  Resolving any globals that are futures ...
[10:53:31.110] |  :  globals: [2] ‘{’, ‘pkg’
[10:53:31.110] |  Resolving any globals that are futures ... DONE
[10:53:31.110] |  Search for packages associated with the globals ...
[10:53:31.110] |  :  Packages associated with globals: [1] ‘base’
[10:53:31.110] |  :  Packages: [1] ‘base’
[10:53:31.110] |  Search for packages associated with the globals ... DONE
[10:53:31.110] |  Resolving futures part of globals (recursively) ...
[10:53:31.111] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:31.111] |  :  .  recursive: 99
[10:53:31.111] |  :  .  length: 1
[10:53:31.111] |  :  .  elements: ‘pkg’
[10:53:31.111] |  :  .  'obj' is atomic
[10:53:31.111] |  :  .  length: 0 (resolved future 1)
[10:53:31.111] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:31.111] |  :  globals: [1] ‘pkg’
[10:53:31.111] |  Resolving futures part of globals (recursively) ... DONE
[10:53:31.112] |  Packages after dropping 'base': [0] 
[10:53:31.112] |  globals: [1] ‘pkg’
[10:53:31.112] |  packages: [0] 
[10:53:31.112] getGlobalsAndPackages() ... done
[10:53:31.112] run() for Future (‘Future’) ...
[10:53:31.112] |  state: ‘created’
[10:53:31.112] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.112] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.112] |  Using SequentialFutureBackend ...
[10:53:31.113] |  :  Launching futures ...
[10:53:31.113] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:31.113] |  :  .  |  getFutureData() ...
[10:53:31.113] |  :  .  |  :  getFutureCore() ...
[10:53:31.113] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:31.113] |  :  .  |  :  getFutureCore() ... done
[10:53:31.113] |  :  .  |  :  getFutureCapture() ...
[10:53:31.113] |  :  .  |  :  getFutureCapture() ... done
[10:53:31.113] |  :  .  |  :  getFutureContext() ...
[10:53:31.113] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.114] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:31.114] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.114] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:31.114] |  :  .  |  :  getFutureContext() ... done
[10:53:31.114] |  :  .  |  getFutureData() ... done
[10:53:31.114] |  :  .  |  attachPackages() ...
[10:53:31.114] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:31.114] |  :  .  |  attachPackages() ... DONE
[10:53:31.114] |  :  .  |  attachPackages() ...
[10:53:31.114] |  :  .  |  :  packages: [n=0] 
[10:53:31.115] |  :  .  |  attachPackages() ... DONE
[10:53:31.115] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.115] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:31.115] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.115] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.116] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.116] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:31.116] |  :  .  |  :  .  |  New stack:
[10:53:31.116] |  :  .  |  :  .  |  List of 1
[10:53:31.116] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.116] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.116] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.116] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.116] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.116] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.116] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.118] |  :  .  |  :  .  |  Old stack:
[10:53:31.118] |  :  .  |  :  .  |  List of 1
[10:53:31.118] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.118] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.118] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.118] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.118] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.118] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:31.118] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.118] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.118] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.118] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.121] |  :  .  |  :  .  |  Not identical
[10:53:31.121] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:31.121] |  :  .  |  :  .  |  :  List of 2
[10:53:31.121] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.121] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.121] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.121] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.121] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.121] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.121] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.121] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.121] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.121] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.121] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.121] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:31.121] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.121] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.121] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.127] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:31.127] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:31.127] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:31.127] |  :  .  |  :  .  List of future strategies:
[10:53:31.127] |  :  .  |  :  .  1. sequential:
[10:53:31.127] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:31.127] |  :  .  |  :  .     - tweaked: FALSE
[10:53:31.127] |  :  .  |  :  .     - call: plan(sequential)
[10:53:31.127] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.128] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.128] |  :  .  |  assign_globals() ...
[10:53:31.128] |  :  .  |  List of 1
[10:53:31.128] |  :  .  |   $ pkg: chr "foo"
[10:53:31.128] |  :  .  |   - attr(*, "where")=List of 1
[10:53:31.128] |  :  .  |    ..$ pkg:<environment: R_EmptyEnv> 
[10:53:31.128] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:31.128] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:31.128] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:31.128] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:31.130] |  :  .  |  - copied ‘pkg’ to environment
[10:53:31.130] |  :  .  |  assign_globals() ... done
[10:53:31.132] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.132] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.132] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.132] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:31.132] |  :  .  |  :  .  |  :  New stack:
[10:53:31.132] |  :  .  |  :  .  |  :  List of 1
[10:53:31.132] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.132] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.132] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.132] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.132] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.132] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:31.132] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.132] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.132] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.132] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.135] |  :  .  |  :  .  |  :  Old stack:
[10:53:31.135] |  :  .  |  :  .  |  :  List of 1
[10:53:31.135] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.135] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.135] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.135] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.135] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.135] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:31.135] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.135] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.135] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.135] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.138] |  :  .  |  :  .  |  :  Identical
[10:53:31.138] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:31.138] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:31.138] |  :  .  |  :  .  |  List of future strategies:
[10:53:31.138] |  :  .  |  :  .  |  1. sequential:
[10:53:31.138] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:31.138] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:31.138] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:31.139] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.139] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.139] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.139] |  :  .  |  SequentialFuture started (and completed)
[10:53:31.139] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:31.139] |  :  Launching futures ... done
[10:53:31.139] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:31.139] |  Using SequentialFutureBackend ... done
[10:53:31.140] run() for Future (‘SequentialFuture’) ... done
value(f) = ‘foo’
Method for identifying globals: 'ordered' ... DONE
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:31.140] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:31.140] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:31.143] |  :  globals found: [3] ‘{’, ‘<-’, ‘+’
[10:53:31.143] |  Searching for globals ... DONE
[10:53:31.143] |  Resolving globals: TRUE
[10:53:31.143] |  Resolving any globals that are futures ...
[10:53:31.143] |  :  globals: [3] ‘{’, ‘<-’, ‘+’
[10:53:31.144] |  Resolving any globals that are futures ... DONE
[10:53:31.144] |  Search for packages associated with the globals ...
[10:53:31.144] |  :  Packages associated with globals: [1] ‘base’
[10:53:31.144] |  :  Packages: [1] ‘base’
[10:53:31.144] |  Search for packages associated with the globals ... DONE
[10:53:31.144] |  Packages after dropping 'base': [0] 
[10:53:31.144] |  globals: [0] 
[10:53:31.145] |  packages: [0] 
[10:53:31.145] getGlobalsAndPackages() ... done
[10:53:31.145] run() for Future (‘Future’) ...
[10:53:31.145] |  state: ‘created’
[10:53:31.145] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.145] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.145] |  Using SequentialFutureBackend ...
[10:53:31.145] |  :  Launching futures ...
[10:53:31.145] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:31.146] |  :  .  |  getFutureData() ...
[10:53:31.146] |  :  .  |  :  getFutureCore() ...
[10:53:31.146] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:31.146] |  :  .  |  :  getFutureCore() ... done
[10:53:31.146] |  :  .  |  :  getFutureCapture() ...
[10:53:31.146] |  :  .  |  :  getFutureCapture() ... done
[10:53:31.146] |  :  .  |  :  getFutureContext() ...
[10:53:31.146] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.146] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:31.146] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.147] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:31.147] |  :  .  |  :  getFutureContext() ... done
[10:53:31.147] |  :  .  |  getFutureData() ... done
[10:53:31.147] |  :  .  |  attachPackages() ...
[10:53:31.147] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:31.147] |  :  .  |  attachPackages() ... DONE
[10:53:31.147] |  :  .  |  attachPackages() ...
[10:53:31.147] |  :  .  |  :  packages: [n=0] 
[10:53:31.147] |  :  .  |  attachPackages() ... DONE
[10:53:31.148] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.148] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:31.148] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.148] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.148] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.148] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:31.148] |  :  .  |  :  .  |  New stack:
[10:53:31.149] |  :  .  |  :  .  |  List of 1
[10:53:31.149] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.149] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.149] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.149] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.149] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.149] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.149] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.151] |  :  .  |  :  .  |  Old stack:
[10:53:31.151] |  :  .  |  :  .  |  List of 1
[10:53:31.151] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.151] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.151] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.151] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.151] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.151] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:31.151] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.151] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.151] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.151] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.154] |  :  .  |  :  .  |  Not identical
[10:53:31.154] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:31.154] |  :  .  |  :  .  |  :  List of 2
[10:53:31.154] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.154] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.154] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.154] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.154] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.154] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.154] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.154] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.154] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.154] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.154] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.154] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:31.154] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.154] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.154] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.158] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:31.158] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:31.159] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:31.159] |  :  .  |  :  .  List of future strategies:
[10:53:31.159] |  :  .  |  :  .  1. sequential:
[10:53:31.159] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:31.159] |  :  .  |  :  .     - tweaked: FALSE
[10:53:31.159] |  :  .  |  :  .     - call: plan(sequential)
[10:53:31.160] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.160] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.162] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.162] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.162] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.162] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:31.162] |  :  .  |  :  .  |  :  New stack:
[10:53:31.162] |  :  .  |  :  .  |  :  List of 1
[10:53:31.162] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.162] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.162] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.162] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.162] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.162] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:31.162] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.162] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.162] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.162] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.165] |  :  .  |  :  .  |  :  Old stack:
[10:53:31.165] |  :  .  |  :  .  |  :  List of 1
[10:53:31.165] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.165] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.165] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.165] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.165] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.165] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:31.165] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.165] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.165] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.165] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.168] |  :  .  |  :  .  |  :  Identical
[10:53:31.168] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:31.168] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:31.168] |  :  .  |  :  .  |  List of future strategies:
[10:53:31.168] |  :  .  |  :  .  |  1. sequential:
[10:53:31.168] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:31.168] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:31.168] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:31.169] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.169] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.169] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.169] |  :  .  |  SequentialFuture started (and completed)
[10:53:31.169] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:31.169] |  :  Launching futures ... done
[10:53:31.169] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:31.169] |  Using SequentialFutureBackend ... done
[10:53:31.170] run() for Future (‘SequentialFuture’) ... done
value(f) = ‘1’
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:31.170] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:31.170] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:31.172] |  :  globals found: [4] ‘{’, ‘<-’, ‘x’, ‘+’
[10:53:31.172] |  Searching for globals ... DONE
[10:53:31.172] |  Resolving globals: TRUE
[10:53:31.172] |  Resolving any globals that are futures ...
[10:53:31.172] |  :  globals: [4] ‘{’, ‘<-’, ‘x’, ‘+’
[10:53:31.172] |  Resolving any globals that are futures ... DONE
[10:53:31.172] |  Search for packages associated with the globals ...
[10:53:31.173] |  :  Packages associated with globals: [1] ‘base’
[10:53:31.173] |  :  Packages: [1] ‘base’
[10:53:31.173] |  Search for packages associated with the globals ... DONE
[10:53:31.173] |  Resolving futures part of globals (recursively) ...
[10:53:31.173] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:31.173] |  :  .  recursive: 99
[10:53:31.173] |  :  .  length: 1
[10:53:31.173] |  :  .  elements: ‘x’
[10:53:31.174] |  :  .  'obj' is atomic
[10:53:31.174] |  :  .  length: 0 (resolved future 1)
[10:53:31.174] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:31.174] |  :  globals: [1] ‘x’
[10:53:31.174] |  Resolving futures part of globals (recursively) ... DONE
[10:53:31.174] |  Packages after dropping 'base': [0] 
[10:53:31.174] |  globals: [1] ‘x’
[10:53:31.174] |  packages: [0] 
[10:53:31.174] getGlobalsAndPackages() ... done
[10:53:31.175] run() for Future (‘Future’) ...
[10:53:31.175] |  state: ‘created’
[10:53:31.175] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.175] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.175] |  Using SequentialFutureBackend ...
[10:53:31.175] |  :  Launching futures ...
[10:53:31.175] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:31.175] |  :  .  |  getFutureData() ...
[10:53:31.175] |  :  .  |  :  getFutureCore() ...
[10:53:31.175] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:31.176] |  :  .  |  :  getFutureCore() ... done
[10:53:31.176] |  :  .  |  :  getFutureCapture() ...
[10:53:31.176] |  :  .  |  :  getFutureCapture() ... done
[10:53:31.176] |  :  .  |  :  getFutureContext() ...
[10:53:31.176] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.176] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:31.176] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.176] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:31.176] |  :  .  |  :  getFutureContext() ... done
[10:53:31.176] |  :  .  |  getFutureData() ... done
[10:53:31.177] |  :  .  |  attachPackages() ...
[10:53:31.177] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:31.179] |  :  .  |  attachPackages() ... DONE
[10:53:31.179] |  :  .  |  attachPackages() ...
[10:53:31.179] |  :  .  |  :  packages: [n=0] 
[10:53:31.179] |  :  .  |  attachPackages() ... DONE
[10:53:31.180] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.180] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:31.180] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.180] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.180] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.181] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:31.181] |  :  .  |  :  .  |  New stack:
[10:53:31.181] |  :  .  |  :  .  |  List of 1
[10:53:31.181] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.181] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.181] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.181] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.181] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.181] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.181] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.183] |  :  .  |  :  .  |  Old stack:
[10:53:31.183] |  :  .  |  :  .  |  List of 1
[10:53:31.183] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.183] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.183] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.183] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.183] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.183] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:31.183] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.183] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.183] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.183] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.186] |  :  .  |  :  .  |  Not identical
[10:53:31.186] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:31.186] |  :  .  |  :  .  |  :  List of 2
[10:53:31.186] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.186] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.186] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.186] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.186] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.186] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.186] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.186] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.186] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.186] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.186] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.186] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:31.186] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.186] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.186] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.191] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:31.191] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:31.191] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:31.191] |  :  .  |  :  .  List of future strategies:
[10:53:31.191] |  :  .  |  :  .  1. sequential:
[10:53:31.191] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:31.191] |  :  .  |  :  .     - tweaked: FALSE
[10:53:31.191] |  :  .  |  :  .     - call: plan(sequential)
[10:53:31.192] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.192] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.192] |  :  .  |  assign_globals() ...
[10:53:31.192] |  :  .  |  List of 1
[10:53:31.192] |  :  .  |   $ x: num 1
[10:53:31.192] |  :  .  |   - attr(*, "where")=List of 1
[10:53:31.192] |  :  .  |    ..$ x:<environment: R_EmptyEnv> 
[10:53:31.192] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:31.192] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:31.192] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:31.192] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:31.195] |  :  .  |  - copied ‘x’ to environment
[10:53:31.195] |  :  .  |  assign_globals() ... done
[10:53:31.196] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.196] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.196] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.196] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:31.197] |  :  .  |  :  .  |  :  New stack:
[10:53:31.197] |  :  .  |  :  .  |  :  List of 1
[10:53:31.197] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.197] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.197] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.197] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.197] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.197] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:31.197] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.197] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.197] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.197] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.201] |  :  .  |  :  .  |  :  Old stack:
[10:53:31.201] |  :  .  |  :  .  |  :  List of 1
[10:53:31.201] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.201] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.201] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.201] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.201] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.201] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:31.201] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.201] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.201] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.201] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.204] |  :  .  |  :  .  |  :  Identical
[10:53:31.204] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:31.204] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:31.204] |  :  .  |  :  .  |  List of future strategies:
[10:53:31.204] |  :  .  |  :  .  |  1. sequential:
[10:53:31.204] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:31.204] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:31.204] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:31.205] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.205] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.205] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.205] |  :  .  |  SequentialFuture started (and completed)
[10:53:31.205] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:31.205] |  :  Launching futures ... done
[10:53:31.205] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:31.205] |  Using SequentialFutureBackend ... done
[10:53:31.206] run() for Future (‘SequentialFuture’) ... done
value(f) = ‘2’
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:31.206] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:31.206] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:31.208] |  :  globals found: [3] ‘{’, ‘<-’, ‘x’
[10:53:31.208] |  Searching for globals ... DONE
[10:53:31.208] |  Resolving globals: TRUE
[10:53:31.208] |  Resolving any globals that are futures ...
[10:53:31.208] |  :  globals: [3] ‘{’, ‘<-’, ‘x’
[10:53:31.209] |  Resolving any globals that are futures ... DONE
[10:53:31.209] |  Search for packages associated with the globals ...
[10:53:31.209] |  :  Packages associated with globals: [1] ‘base’
[10:53:31.209] |  :  Packages: [1] ‘base’
[10:53:31.209] |  Search for packages associated with the globals ... DONE
[10:53:31.209] |  Resolving futures part of globals (recursively) ...
[10:53:31.210] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:31.210] |  :  .  recursive: 99
[10:53:31.210] |  :  .  length: 1
[10:53:31.210] |  :  .  elements: ‘x’
[10:53:31.210] |  :  .  'obj' is function
[10:53:31.210] |  :  .  resolve(obj, ...) ...
[10:53:31.210] |  :  .  resolve(obj, ...) ... done
[10:53:31.210] |  :  .  length: 0 (resolved future 1)
[10:53:31.210] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:31.210] |  :  globals: [1] ‘x’
[10:53:31.211] |  Resolving futures part of globals (recursively) ... DONE
[10:53:31.211] |  Packages after dropping 'base': [0] 
[10:53:31.211] |  globals: [1] ‘x’
[10:53:31.211] |  packages: [0] 
[10:53:31.211] getGlobalsAndPackages() ... done
[10:53:31.211] run() for Future (‘Future’) ...
[10:53:31.211] |  state: ‘created’
[10:53:31.211] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.211] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.212] |  Using SequentialFutureBackend ...
[10:53:31.212] |  :  Launching futures ...
[10:53:31.212] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:53:31.212] |  :  .  |  getFutureData() ...
[10:53:31.212] |  :  .  |  :  getFutureCore() ...
[10:53:31.212] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:31.212] |  :  .  |  :  getFutureCore() ... done
[10:53:31.212] |  :  .  |  :  getFutureCapture() ...
[10:53:31.212] |  :  .  |  :  getFutureCapture() ... done
[10:53:31.212] |  :  .  |  :  getFutureContext() ...
[10:53:31.213] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.213] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:31.213] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.213] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:31.213] |  :  .  |  :  getFutureContext() ... done
[10:53:31.213] |  :  .  |  getFutureData() ... done
[10:53:31.213] |  :  .  |  attachPackages() ...
[10:53:31.213] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:31.213] |  :  .  |  attachPackages() ... DONE
[10:53:31.214] |  :  .  |  attachPackages() ...
[10:53:31.214] |  :  .  |  :  packages: [n=0] 
[10:53:31.214] |  :  .  |  attachPackages() ... DONE
[10:53:31.214] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.214] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:31.214] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.214] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.215] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.215] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:31.215] |  :  .  |  :  .  |  New stack:
[10:53:31.215] |  :  .  |  :  .  |  List of 1
[10:53:31.215] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.215] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.215] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.215] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.215] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.215] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.215] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.217] |  :  .  |  :  .  |  Old stack:
[10:53:31.217] |  :  .  |  :  .  |  List of 1
[10:53:31.217] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.217] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.217] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.217] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.217] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.217] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:31.217] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.217] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.217] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.217] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.221] |  :  .  |  :  .  |  Not identical
[10:53:31.221] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:31.221] |  :  .  |  :  .  |  :  List of 2
[10:53:31.221] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.221] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.221] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.221] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.221] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.221] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.221] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.221] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.221] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.221] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.221] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.221] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:31.221] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.221] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.221] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.226] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:31.226] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:31.226] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:31.226] |  :  .  |  :  .  List of future strategies:
[10:53:31.226] |  :  .  |  :  .  1. sequential:
[10:53:31.226] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:31.226] |  :  .  |  :  .     - tweaked: FALSE
[10:53:31.226] |  :  .  |  :  .     - call: plan(sequential)
[10:53:31.227] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.227] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.227] |  :  .  |  assign_globals() ...
[10:53:31.227] |  :  .  |  List of 1
[10:53:31.227] |  :  .  |   $ x:function ()  
[10:53:31.227] |  :  .  |   - attr(*, "where")=List of 1
[10:53:31.227] |  :  .  |    ..$ x:<environment: R_EmptyEnv> 
[10:53:31.227] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:31.227] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:31.227] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:31.227] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:31.229] |  :  .  |  - reassign environment for ‘x’ [where=emptyenv()]
[10:53:31.229] |  :  .  |  - copied ‘x’ to environment
[10:53:31.229] |  :  .  |  assign_globals() ... done
[10:53:31.231] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.231] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.231] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.231] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:31.231] |  :  .  |  :  .  |  :  New stack:
[10:53:31.231] |  :  .  |  :  .  |  :  List of 1
[10:53:31.231] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.231] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.231] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.231] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.231] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.231] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:31.231] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.231] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.231] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.231] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.234] |  :  .  |  :  .  |  :  Old stack:
[10:53:31.234] |  :  .  |  :  .  |  :  List of 1
[10:53:31.234] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.234] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.234] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.234] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.234] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.234] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:31.234] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.234] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.234] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.234] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.237] |  :  .  |  :  .  |  :  Identical
[10:53:31.237] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:31.237] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:31.237] |  :  .  |  :  .  |  List of future strategies:
[10:53:31.237] |  :  .  |  :  .  |  1. sequential:
[10:53:31.237] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:31.237] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:31.237] |  :  .  |  :  .  |     - call: plan(sequential)
[10:53:31.238] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.238] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.238] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.238] |  :  .  |  SequentialFuture started (and completed)
[10:53:31.238] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:53:31.238] |  :  Launching futures ... done
[10:53:31.238] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:53:31.239] |  Using SequentialFutureBackend ... done
[10:53:31.240] run() for Future (‘SequentialFuture’) ... done
value(f) = ‘TRUE’
[10:53:31.240] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.240] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:53:31.240] |  :  all.equal() for FutureStrategyList ...
[10:53:31.240] |  :  .  New stack:
[10:53:31.240] |  :  .  List of 1
[10:53:31.240] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.240] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.240] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.240] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.240] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.240] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:53:31.240] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.243] |  :  .  Old stack:
[10:53:31.243] |  :  .  List of 1
[10:53:31.243] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.243] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.243] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.243] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.243] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.243] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:53:31.243] |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.243] |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.243] |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.243] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.246] |  :  .  Not identical
[10:53:31.246] |  :  .  all.equal() for future ...
[10:53:31.246] |  :  .  |  List of 2
[10:53:31.246] |  :  .  |   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.246] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.246] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.246] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.246] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.246] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:31.246] |  :  .  |   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.246] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.246] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.246] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.246] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.246] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:31.246] |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.246] |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.246] |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.250] |  :  .  all.equal() for future ... done
[10:53:31.250] |  :  all.equal() for FutureStrategyList ... done
[10:53:31.250] |  :  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:53:31.251] |  :  List of future strategies:
[10:53:31.251] |  :  1. sequential:
[10:53:31.251] |  :     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:31.251] |  :     - tweaked: FALSE
[10:53:31.251] |  :     - call: plan(sequential)
[10:53:31.251] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:53:31.251] plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
Testing with 1 cores ... DONE
Testing with 2 cores ...
availableCores(): 2
- Local variables with the same name as globals ...
- plan('multicore') ...
[10:53:31.253] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.253] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:53:31.253] |  :  all.equal() for FutureStrategyList ...
[10:53:31.253] |  :  .  New stack:
[10:53:31.253] |  :  .  List of 1
[10:53:31.253] |  :  .   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.253] |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.253] |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.253] |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.253] |  :  .      ...)  
[10:53:31.253] |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.253] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.253] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:31.253] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.255] |  :  .  Old stack:
[10:53:31.256] |  :  .  List of 1
[10:53:31.256] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.256] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.256] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.256] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.256] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.256] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:53:31.256] |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.256] |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.256] |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.256] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.259] |  :  .  Not identical
[10:53:31.259] |  :  .  all.equal() for future ...
[10:53:31.259] |  :  .  |  List of 2
[10:53:31.259] |  :  .  |   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.259] |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.259] |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.259] |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.259] |  :  .  |      ...)  
[10:53:31.259] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.259] |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.259] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:31.259] |  :  .  |   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.259] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.259] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.259] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.259] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.259] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:31.259] |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7159c818> 
[10:53:31.259] |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.259] |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.264] |  :  .  |  Formals differ
[10:53:31.264] |  :  .  all.equal() for future ... done
[10:53:31.264] |  :  .  Future strategies differ at level 1
[10:53:31.264] |  :  all.equal() for FutureStrategyList ... done
[10:53:31.264] |  :  plan(): Setting new future strategy stack:
[10:53:31.264] |  :  List of future strategies:
[10:53:31.264] |  :  1. multicore:
[10:53:31.264] |  :     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:31.264] |  :     - tweaked: FALSE
[10:53:31.264] |  :     - call: plan(strategy)
[10:53:31.265] |  :  List of 1
[10:53:31.265] |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.265] |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.265] |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.265] |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.265] |  :      ...)  
[10:53:31.265] |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.265] |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.265] |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:31.265] |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.267] |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:53:31.267] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.267] |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:31.267] |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.267] |  :  .  Legacy shutdown of cluster workers ...
[10:53:31.268] |  :  .  |  Stopping existing cluster ...
[10:53:31.268] |  :  .  |  :  No pre-existing cluster. Skipping
[10:53:31.268] |  :  .  |  Stopping existing cluster ... done
[10:53:31.268] |  :  .  Legacy shutdown of cluster workers ... done
[10:53:31.268] |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:53:31.268] |  :  plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ...
[10:53:31.268] |  :  .  function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.268] |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.268] |  :  .   - attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.268] |  :  .   - attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.268] |  :  .      ...)  
[10:53:31.268] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.268] |  :  .   - attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.268] |  :  .   - attr(*, "call")= language plan(strategy)
[10:53:31.270] |  :  .  init: NULL
[10:53:31.270] |  :  plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ... done
[10:53:31.270] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.270] |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:31.270] |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.271] |  :  Backend function: <‘NULL’>
[10:53:31.272] |  :  Backend: <‘MulticoreFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:31.272] |  :  plan(): nbrOfWorkers() = 2
[10:53:31.272] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:53:31.273] plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
Method for identifying globals: 'conservative' ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:31.273] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:31.273] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:31.275] |  :  globals found: [3] ‘{’, ‘<-’, ‘*’
[10:53:31.275] |  Searching for globals ... DONE
[10:53:31.275] |  Resolving globals: TRUE
[10:53:31.275] |  Resolving any globals that are futures ...
[10:53:31.275] |  :  globals: [3] ‘{’, ‘<-’, ‘*’
[10:53:31.275] |  Resolving any globals that are futures ... DONE
[10:53:31.275] |  Search for packages associated with the globals ...
[10:53:31.275] |  :  Packages associated with globals: [1] ‘base’
[10:53:31.276] |  :  Packages: [1] ‘base’
[10:53:31.276] |  Search for packages associated with the globals ... DONE
[10:53:31.276] |  Packages after dropping 'base': [0] 
[10:53:31.276] |  globals: [0] 
[10:53:31.276] |  packages: [0] 
[10:53:31.276] getGlobalsAndPackages() ... done
[10:53:31.276] run() for Future (‘Future’) ...
[10:53:31.276] |  state: ‘created’
[10:53:31.276] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.277] |  :  makeFutureBackend(<multicore>) ...
[10:53:31.277] |  :  .  Backend function: <‘NULL’>
[10:53:31.289] |  :  .  Backend: <‘MulticoreFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:31.289] |  :  makeFutureBackend(<multicore>) ... done
[10:53:31.289] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.289] |  Using MulticoreFutureBackend ...
[10:53:31.290] |  :  Launching futures ...
[10:53:31.290] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:31.290] |  :  .  |  getFutureData() ...
[10:53:31.290] |  :  .  |  :  getFutureCore() ...
[10:53:31.290] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:31.290] |  :  .  |  :  getFutureCore() ... done
[10:53:31.290] |  :  .  |  :  getFutureCapture() ...
[10:53:31.290] |  :  .  |  :  getFutureCapture() ... done
[10:53:31.290] |  :  .  |  :  getFutureContext() ...
[10:53:31.291] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.291] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:31.291] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.291] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:31.291] |  :  .  |  :  getFutureContext() ... done
[10:53:31.291] |  :  .  |  getFutureData() ... done
[10:53:31.292] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:31.292] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:31.295] |  :  .  |  MulticoreFuture started
[10:53:31.295] |  :  .  |  attachPackages() ...
[10:53:31.295] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:31.295] |  :  Launching futures ... done
[10:53:31.295] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:31.296] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:31.296] |  :  .  |  attachPackages() ... DONE
[10:53:31.296] |  Using MulticoreFutureBackend ... done
[10:53:31.296] |  :  .  |  attachPackages() ...
[10:53:31.296] run() for Future (‘MulticoreFuture’) ... done
[10:53:31.296] |  :  .  |  :  packages: [n=0] 
[10:53:31.296] |  :  .  |  attachPackages() ... DONE
[10:53:31.297] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.298] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:31.298] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.299] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.299] result() for MulticoreFuture ...
[10:53:31.299] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.299] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:31.299] |  :  .  |  :  .  |  New stack:
[10:53:31.300] |  :  .  |  :  .  |  List of 1
[10:53:31.300] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.300] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.300] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.300] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.300] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.300] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.300] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.304] |  :  .  |  :  .  |  Old stack:
[10:53:31.304] |  :  .  |  :  .  |  List of 1
[10:53:31.304] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.304] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.304] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.304] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.304] |  :  .  |  :  .  |      ...)  
[10:53:31.304] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.304] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.304] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:31.304] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.304] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.304] |  :  .  |  :  .  |      ...)  
[10:53:31.304] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.304] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.313] |  :  .  |  :  .  |  Not identical
[10:53:31.313] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:31.313] |  :  .  |  :  .  |  :  List of 2
[10:53:31.313] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.313] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.313] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.313] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.313] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.313] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.313] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.313] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.313] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.313] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.313] |  :  .  |  :  .  |  :      ...)  
[10:53:31.313] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.313] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.313] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:31.313] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.313] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.313] |  :  .  |  :  .  |  :      ...)  
[10:53:31.313] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.322] |  :  .  |  :  .  |  :  Formals differ
[10:53:31.322] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:31.322] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:31.323] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:31.323] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:31.323] |  :  .  |  :  .  List of future strategies:
[10:53:31.323] |  :  .  |  :  .  1. sequential:
[10:53:31.323] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:31.323] |  :  .  |  :  .     - tweaked: FALSE
[10:53:31.323] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.324] |  :  .  |  :  .  List of 1
[10:53:31.324] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.324] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.324] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.324] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.324] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.324] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.324] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.327] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:31.327] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:31.327] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.327] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:31.327] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.328] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:31.328] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:31.328] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:31.328] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.328] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.331] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.331] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.331] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.331] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:31.331] |  :  .  |  :  .  |  :  New stack:
[10:53:31.331] |  :  .  |  :  .  |  :  List of 1
[10:53:31.331] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.331] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.331] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.331] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.331] |  :  .  |  :  .  |  :      ...)  
[10:53:31.331] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.331] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.331] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:31.331] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.331] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.331] |  :  .  |  :  .  |  :      ...)  
[10:53:31.331] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.331] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.335] |  :  .  |  :  .  |  :  Old stack:
[10:53:31.335] |  :  .  |  :  .  |  :  List of 1
[10:53:31.335] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.335] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.335] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.335] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.335] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.335] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.335] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.337] |  :  .  |  :  .  |  :  Not identical
[10:53:31.337] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:31.337] |  :  .  |  :  .  |  :  .  List of 2
[10:53:31.337] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.337] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.337] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.337] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.337] |  :  .  |  :  .  |  :  .      ...)  
[10:53:31.337] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.337] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.337] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:31.337] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.337] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.337] |  :  .  |  :  .  |  :  .      ...)  
[10:53:31.337] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.337] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.337] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.337] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.337] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.337] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.337] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.343] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:31.344] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:31.344] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:31.344] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:31.344] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:31.344] |  :  .  |  :  .  |  List of future strategies:
[10:53:31.344] |  :  .  |  :  .  |  1. multicore:
[10:53:31.344] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:31.344] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:31.344] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:31.344] |  :  .  |  :  .  |  List of 1
[10:53:31.344] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.344] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.344] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.344] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.344] |  :  .  |  :  .  |      ...)  
[10:53:31.344] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.344] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.344] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:31.344] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.344] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.344] |  :  .  |  :  .  |      ...)  
[10:53:31.344] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.344] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.348] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:31.348] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:31.348] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.348] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:31.348] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.348] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:31.348] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.349] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.349] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.350] |  readImmediateCondition() ...
[10:53:31.350] |    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:31.350] |   - Number of RDS files: 0
[10:53:31.350] |  readImmediateCondition() ... DONE
[10:53:31.354] |  result() for MulticoreFuture ...
[10:53:31.354] |  result() for MulticoreFuture ... done
[10:53:31.354] result() for MulticoreFuture ... done
[10:53:31.355] result() for MulticoreFuture ...
[10:53:31.355] result() for MulticoreFuture ... done
y = 6
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:31.356] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:31.356] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:31.361] |  :  globals found: [3] ‘{’, ‘<-’, ‘*’
[10:53:31.361] |  Searching for globals ... DONE
[10:53:31.361] |  Resolving globals: TRUE
[10:53:31.362] |  Resolving any globals that are futures ...
[10:53:31.362] |  :  globals: [3] ‘{’, ‘<-’, ‘*’
[10:53:31.362] |  Resolving any globals that are futures ... DONE
[10:53:31.362] |  Search for packages associated with the globals ...
[10:53:31.363] |  :  Packages associated with globals: [1] ‘base’
[10:53:31.363] |  :  Packages: [1] ‘base’
[10:53:31.363] |  Search for packages associated with the globals ... DONE
[10:53:31.363] |  Packages after dropping 'base': [0] 
[10:53:31.364] |  globals: [0] 
[10:53:31.364] |  packages: [0] 
[10:53:31.364] getGlobalsAndPackages() ... done
[10:53:31.364] run() for Future (‘Future’) ...
[10:53:31.365] |  state: ‘created’
[10:53:31.365] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.365] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.365] |  Using MulticoreFutureBackend ...
[10:53:31.365] |  :  Launching futures ...
[10:53:31.365] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:31.366] |  :  .  |  getFutureData() ...
[10:53:31.366] |  :  .  |  :  getFutureCore() ...
[10:53:31.366] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:31.366] |  :  .  |  :  getFutureCore() ... done
[10:53:31.366] |  :  .  |  :  getFutureCapture() ...
[10:53:31.366] |  :  .  |  :  getFutureCapture() ... done
[10:53:31.367] |  :  .  |  :  getFutureContext() ...
[10:53:31.367] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.367] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:31.367] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.367] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:31.367] |  :  .  |  :  getFutureContext() ... done
[10:53:31.368] |  :  .  |  getFutureData() ... done
[10:53:31.368] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:31.368] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:31.370] |  :  .  |  MulticoreFuture started
[10:53:31.371] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:31.371] |  :  .  |  attachPackages() ...
[10:53:31.371] |  :  Launching futures ... done
[10:53:31.372] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:31.372] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:31.372] |  :  .  |  attachPackages() ... DONE
[10:53:31.372] |  Using MulticoreFutureBackend ... done
[10:53:31.373] |  :  .  |  attachPackages() ...
[10:53:31.373] run() for Future (‘MulticoreFuture’) ... done
[10:53:31.373] |  :  .  |  :  packages: [n=0] 
[10:53:31.373] result() for MulticoreFuture ...
[10:53:31.373] |  :  .  |  attachPackages() ... DONE
[10:53:31.375] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.375] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:31.376] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.376] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.377] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.377] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:31.377] |  :  .  |  :  .  |  New stack:
[10:53:31.378] |  :  .  |  :  .  |  List of 1
[10:53:31.378] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.378] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.378] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.378] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.378] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.378] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.378] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.382] |  :  .  |  :  .  |  Old stack:
[10:53:31.382] |  :  .  |  :  .  |  List of 1
[10:53:31.382] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.382] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.382] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.382] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.382] |  :  .  |  :  .  |      ...)  
[10:53:31.382] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.382] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.382] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:31.382] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.382] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.382] |  :  .  |  :  .  |      ...)  
[10:53:31.382] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.382] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.387] |  :  .  |  :  .  |  Not identical
[10:53:31.387] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:31.387] |  :  .  |  :  .  |  :  List of 2
[10:53:31.387] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.387] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.387] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.387] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.387] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.387] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.387] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.387] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.387] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.387] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.387] |  :  .  |  :  .  |  :      ...)  
[10:53:31.387] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.387] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.387] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:31.387] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.387] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.387] |  :  .  |  :  .  |  :      ...)  
[10:53:31.387] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.395] |  :  .  |  :  .  |  :  Formals differ
[10:53:31.395] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:31.395] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:31.395] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:31.395] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:31.395] |  :  .  |  :  .  List of future strategies:
[10:53:31.395] |  :  .  |  :  .  1. sequential:
[10:53:31.395] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:31.395] |  :  .  |  :  .     - tweaked: FALSE
[10:53:31.395] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.396] |  :  .  |  :  .  List of 1
[10:53:31.396] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.396] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.396] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.396] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.396] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.396] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.396] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.402] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:31.402] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:31.402] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.402] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:31.402] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.403] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:31.403] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:31.403] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:31.403] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.403] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.407] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.407] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.407] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.407] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:31.407] |  :  .  |  :  .  |  :  New stack:
[10:53:31.407] |  :  .  |  :  .  |  :  List of 1
[10:53:31.407] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.407] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.407] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.407] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.407] |  :  .  |  :  .  |  :      ...)  
[10:53:31.407] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.407] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.407] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:31.407] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.407] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.407] |  :  .  |  :  .  |  :      ...)  
[10:53:31.407] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.407] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.410] |  :  .  |  :  .  |  :  Old stack:
[10:53:31.411] |  :  .  |  :  .  |  :  List of 1
[10:53:31.411] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.411] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.411] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.411] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.411] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.411] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.411] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.413] |  :  .  |  :  .  |  :  Not identical
[10:53:31.413] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:31.413] |  :  .  |  :  .  |  :  .  List of 2
[10:53:31.413] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.413] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.413] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.413] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.413] |  :  .  |  :  .  |  :  .      ...)  
[10:53:31.413] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.413] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.413] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:31.413] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.413] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.413] |  :  .  |  :  .  |  :  .      ...)  
[10:53:31.413] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.413] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.413] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.413] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.413] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.413] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.413] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.417] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:31.418] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:31.418] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:31.418] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:31.418] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:31.418] |  :  .  |  :  .  |  List of future strategies:
[10:53:31.418] |  :  .  |  :  .  |  1. multicore:
[10:53:31.418] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:31.418] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:31.418] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:31.418] |  :  .  |  :  .  |  List of 1
[10:53:31.418] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.418] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.418] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.418] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.418] |  :  .  |  :  .  |      ...)  
[10:53:31.418] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.418] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.418] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:31.418] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.418] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.418] |  :  .  |  :  .  |      ...)  
[10:53:31.418] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.418] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.423] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:31.423] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:31.423] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.423] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:31.424] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.424] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:31.424] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.424] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.424] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.425] |  readImmediateCondition() ...
[10:53:31.425] |    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:31.426] |   - Number of RDS files: 0
[10:53:31.426] |  readImmediateCondition() ... DONE
[10:53:31.426] |  result() for MulticoreFuture ...
[10:53:31.426] |  result() for MulticoreFuture ... done
[10:53:31.427] |  signalConditions() ...
[10:53:31.427] |  :  include = ‘immediateCondition’
[10:53:31.427] |  :  exclude = 
[10:53:31.427] |  :  resignal = FALSE
[10:53:31.427] |  :  Number of conditions: 1
[10:53:31.427] |  signalConditions() ... done
[10:53:31.427] result() for MulticoreFuture ... done
[10:53:31.428] result() for MulticoreFuture ...
[10:53:31.428] result() for MulticoreFuture ... done
[10:53:31.428] signalConditions() ...
[10:53:31.428] |  include = ‘immediateCondition’
[10:53:31.428] |  exclude = 
[10:53:31.428] |  resignal = FALSE
[10:53:31.428] |  Number of conditions: 1
[10:53:31.428] signalConditions() ... done
[10:53:31.429] Future state: ‘finished’
[10:53:31.429] result() for MulticoreFuture ...
[10:53:31.429] result() for MulticoreFuture ... done
[10:53:31.429] signalConditions() ...
[10:53:31.429] |  include = ‘condition’
[10:53:31.429] |  exclude = ‘immediateCondition’
[10:53:31.429] |  resignal = TRUE
[10:53:31.430] |  Number of conditions: 1
[10:53:31.430] |  Condition #1: ‘simpleError’, ‘error’, ‘condition’
[10:53:31.430] signalConditions() ... done
List of 1
 $ res: 'try-error' chr "Error in eval(quote({ : object 'a' not found\n"
  ..- attr(*, "condition")=List of 3
  .. ..$ message    : chr "object 'a' not found"
  .. ..$ call       : language eval(quote({     { ...
  .. ..$ future.info:List of 5
  .. .. ..$ condition:List of 2
  .. .. .. ..$ message: chr "object 'a' not found"
  .. .. .. ..$ call   : language eval(quote({     { ...
  .. .. .. ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
  .. .. ..$ calls    :List of 27
  .. .. .. ..$ : language future:::testme("globals,tricky")
  .. .. .. ..$ : language source(file.path(path, "run.R"))
  .. .. .. ..$ : language withVisible(eval(ei, envir))
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language source(testme[["script"]], echo = TRUE)
  .. .. .. ..$ : language withVisible(eval(ei, envir))
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language y %<-% {     b <- a ...
  .. .. .. ..$ : language eval(fassignment, envir = envir, enclos = baseenv())
  .. .. .. ..$ : language eval(fassignment, envir = envir, enclos = baseenv())
  .. .. .. ..$ : language y %<-% {     b <- a ...
  .. .. .. ..$ : language futureAssignInternal(target, expr, envir = envir, substitute = FALSE)
  .. .. .. ..$ : language futureAssign(name, expr, envir = envir, assign.env = assign.env, substitute = FALSE)
  .. .. .. ..$ : language do.call(future::future, args = future.args, envir = envir)
  .. .. .. ..$ : language (function (expr, envir = parent.frame(), substitute = TRUE, lazy = FALSE,      seed = FALSE, globals = TRUE, pack| __truncated__ ...
  .. .. .. ..$ : language Future(expr, substitute = FALSE, envir = envir, lazy = TRUE, seed = seed,      globals = globals, packages = pack| __truncated__ ...
  .. .. .. ..$ : language eval(expr, envir = globalenv())
  .. .. .. ..$ : language eval(expr, envir = globalenv())
  .. .. .. ..$ : language local({     { ...
  .. .. .. ..$ : language eval.parent(substitute(eval(quote(expr), envir)))
  .. .. .. ..$ : language eval(expr, p)
  .. .. .. ..$ : language eval(expr, p)
  .. .. .. ..$ : language eval(quote({     { ...
  .. .. .. ..$ : language eval(quote({     { ...
  .. .. .. ..$ : language eval(quote({     { ...
  .. .. ..$ session  :List of 6
  .. .. .. ..$ r         :List of 14
  .. .. .. .. ..$ platform      : chr "x86_64-pc-linux-gnu"
  .. .. .. .. ..$ arch          : chr "x86_64"
  .. .. .. .. ..$ os            : chr "linux-gnu"
  .. .. .. .. ..$ system        : chr "x86_64, linux-gnu"
  .. .. .. .. ..$ status        : chr ""
  .. .. .. .. ..$ major         : chr "4"
  .. .. .. .. ..$ minor         : chr "5.0"
  .. .. .. .. ..$ year          : chr "2025"
  .. .. .. .. ..$ month         : chr "04"
  .. .. .. .. ..$ day           : chr "11"
  .. .. .. .. ..$ svn rev       : chr "88135"
  .. .. .. .. ..$ language      : chr "R"
  .. .. .. .. ..$ version.string: chr "R version 4.5.0 (2025-04-11)"
  .. .. .. .. ..$ nickname      : chr "How About a Twenty-Six"
  .. .. .. ..$ locale    : chr "LC_CTYPE=en_US.UTF-8;LC_NUMERIC=C;LC_TIME=en_US.UTF-8;LC_COLLATE=en_US.UTF-8;LC_MONETARY=en_US.UTF-8;LC_MESSAGE"| __truncated__
  .. .. .. ..$ rngkind   : chr [1:3] "Mersenne-Twister" "Inversion" "Rejection"
  .. .. .. ..$ namespaces: chr [1:16] "compiler" "parallelly" "graphics" "tools" ...
  .. .. .. ..$ search    : chr [1:12] ".GlobalEnv" "package:listenv" "package:future" "testme" ...
  .. .. .. ..$ system    : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
  .. .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
  .. .. ..$ timestamp: POSIXct[1:1], format: "2025-05-06 10:53:31"
  .. .. ..$ signaled : int 1
  .. ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:31.455] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:31.455] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:31.457] |  :  globals found: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:31.457] |  Searching for globals ... DONE
[10:53:31.457] |  Resolving globals: TRUE
[10:53:31.457] |  Resolving any globals that are futures ...
[10:53:31.458] |  :  globals: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:31.458] |  Resolving any globals that are futures ... DONE
[10:53:31.458] |  Search for packages associated with the globals ...
[10:53:31.458] |  :  Packages associated with globals: [1] ‘base’
[10:53:31.458] |  :  Packages: [1] ‘base’
[10:53:31.458] |  Search for packages associated with the globals ... DONE
[10:53:31.459] |  Resolving futures part of globals (recursively) ...
[10:53:31.459] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:31.459] |  :  .  recursive: 99
[10:53:31.459] |  :  .  length: 1
[10:53:31.459] |  :  .  elements: ‘ii’
[10:53:31.459] |  :  .  'obj' is atomic
[10:53:31.459] |  :  .  length: 0 (resolved future 1)
[10:53:31.460] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:31.460] |  :  globals: [1] ‘ii’
[10:53:31.460] |  Resolving futures part of globals (recursively) ... DONE
[10:53:31.460] |  Packages after dropping 'base': [0] 
[10:53:31.460] |  globals: [1] ‘ii’
[10:53:31.460] |  packages: [0] 
[10:53:31.460] getGlobalsAndPackages() ... done
[10:53:31.460] run() for Future (‘Future’) ...
[10:53:31.461] |  state: ‘created’
[10:53:31.461] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.461] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.461] |  Using MulticoreFutureBackend ...
[10:53:31.461] |  :  Launching futures ...
[10:53:31.461] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:31.461] |  :  .  |  getFutureData() ...
[10:53:31.461] |  :  .  |  :  getFutureCore() ...
[10:53:31.461] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:31.462] |  :  .  |  :  getFutureCore() ... done
[10:53:31.462] |  :  .  |  :  getFutureCapture() ...
[10:53:31.462] |  :  .  |  :  getFutureCapture() ... done
[10:53:31.462] |  :  .  |  :  getFutureContext() ...
[10:53:31.462] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.462] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:31.462] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.462] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:31.462] |  :  .  |  :  getFutureContext() ... done
[10:53:31.463] |  :  .  |  getFutureData() ... done
[10:53:31.463] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:31.463] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:31.465] |  :  .  |  MulticoreFuture started
[10:53:31.465] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:31.466] |  :  Launching futures ... done
[10:53:31.466] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:31.466] |  :  .  |  attachPackages() ...
[10:53:31.466] |  Using MulticoreFutureBackend ... done
[10:53:31.466] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:31.466] run() for Future (‘MulticoreFuture’) ... done
[10:53:31.466] |  :  .  |  attachPackages() ... DONE
[10:53:31.467] |  :  .  |  attachPackages() ...
[10:53:31.467] |  :  .  |  :  packages: [n=0] 
[10:53:31.467] |  :  .  |  attachPackages() ... DONE
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:31.468] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:31.468] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.468] |  Searching for globals ...
[10:53:31.468] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:31.468] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.469] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.471] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.472] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:31.472] |  :  .  |  :  .  |  New stack:
[10:53:31.476] |  :  globals found: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:31.476] |  Searching for globals ... DONE
[10:53:31.476] |  Resolving globals: TRUE
[10:53:31.477] |  Resolving any globals that are futures ...
[10:53:31.477] |  :  globals: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:31.477] |  Resolving any globals that are futures ... DONE
[10:53:31.477] |  Search for packages associated with the globals ...
[10:53:31.478] |  :  Packages associated with globals: [1] ‘base’
[10:53:31.478] |  :  Packages: [1] ‘base’
[10:53:31.472] |  :  .  |  :  .  |  List of 1
[10:53:31.472] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.472] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.472] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.472] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.472] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.472] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.472] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.478] |  Search for packages associated with the globals ... DONE
[10:53:31.479] |  :  .  |  :  .  |  Old stack:
[10:53:31.479] |  Resolving futures part of globals (recursively) ...
[10:53:31.479] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:31.479] |  :  .  recursive: 99
[10:53:31.480] |  :  .  length: 1
[10:53:31.480] |  :  .  elements: ‘ii’
[10:53:31.480] |  :  .  'obj' is atomic
[10:53:31.480] |  :  .  length: 0 (resolved future 1)
[10:53:31.480] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:31.480] |  :  globals: [1] ‘ii’
[10:53:31.481] |  Resolving futures part of globals (recursively) ... DONE
[10:53:31.481] |  Packages after dropping 'base': [0] 
[10:53:31.481] |  globals: [1] ‘ii’
[10:53:31.481] |  packages: [0] 
[10:53:31.482] getGlobalsAndPackages() ... done
[10:53:31.482] run() for Future (‘Future’) ...
[10:53:31.482] |  state: ‘created’
[10:53:31.482] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.483] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.483] |  Using MulticoreFutureBackend ...
[10:53:31.483] |  :  Launching futures ...
[10:53:31.483] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:31.483] |  :  .  |  getFutureData() ...
[10:53:31.484] |  :  .  |  :  getFutureCore() ...
[10:53:31.484] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:31.484] |  :  .  |  :  getFutureCore() ... done
[10:53:31.484] |  :  .  |  :  getFutureCapture() ...
[10:53:31.479] |  :  .  |  :  .  |  List of 1
[10:53:31.479] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.479] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.479] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.479] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.479] |  :  .  |  :  .  |      ...)  
[10:53:31.479] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.479] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.479] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:31.479] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.479] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.479] |  :  .  |  :  .  |      ...)  
[10:53:31.479] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.479] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.484] |  :  .  |  :  getFutureCapture() ... done
[10:53:31.484] |  :  .  |  :  .  |  Not identical
[10:53:31.484] |  :  .  |  :  getFutureContext() ...
[10:53:31.484] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.484] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:31.485] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:31.485] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.485] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:31.485] |  :  .  |  :  getFutureContext() ... done
[10:53:31.485] |  :  .  |  getFutureData() ... done
[10:53:31.486] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:31.486] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:31.488] |  :  .  |  MulticoreFuture started
[10:53:31.489] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:31.489] |  :  Launching futures ... done
[10:53:31.489] |  :  .  |  attachPackages() ...
[10:53:31.489] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:31.489] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:31.490] |  Using MulticoreFutureBackend ... done
[10:53:31.490] |  :  .  |  attachPackages() ... DONE
[10:53:31.490] run() for Future (‘MulticoreFuture’) ... done
[10:53:31.485] |  :  .  |  :  .  |  :  List of 2
[10:53:31.485] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.485] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.485] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.485] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.485] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.485] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.485] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.485] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.485] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.485] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.485] |  :  .  |  :  .  |  :      ...)  
[10:53:31.485] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.485] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.485] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:31.485] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.485] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.485] |  :  .  |  :  .  |  :      ...)  
[10:53:31.485] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.490] |  :  .  |  attachPackages() ...
[10:53:31.491] |  :  .  |  :  packages: [n=0] 
[10:53:31.491] |  :  .  |  attachPackages() ... DONE
[10:53:31.491] |  :  .  |  :  .  |  :  Formals differ
[10:53:31.491] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:31.491] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:31.491] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:31.492] |  :  .  |  :  .  plan(): Setting new future strategy stack:
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:31.492] |  :  .  |  :  .  List of future strategies:
[10:53:31.492] |  :  .  |  :  .  1. sequential:
[10:53:31.492] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:31.492] |  :  .  |  :  .     - tweaked: FALSE
[10:53:31.492] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.492] getGlobalsAndPackages() ...
[10:53:31.492] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:31.492] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:31.493] |  Searching for globals ...
[10:53:31.493] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:31.494] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.494] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.494] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:31.495] |  :  .  |  :  .  |  New stack:
[10:53:31.492] |  :  .  |  :  .  List of 1
[10:53:31.492] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.492] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.492] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.492] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.492] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.492] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.492] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.495] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:31.495] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:31.495] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.495] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:31.496] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.496] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:31.496] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:31.496] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:31.496] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.497] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.497] |  :  .  |  assign_globals() ...
[10:53:31.498] |  :  globals found: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:31.498] |  Searching for globals ... DONE
[10:53:31.499] |  Resolving globals: TRUE
[10:53:31.499] |  Resolving any globals that are futures ...
[10:53:31.499] |  :  globals: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:31.499] |  Resolving any globals that are futures ... DONE
[10:53:31.499] |  Search for packages associated with the globals ...
[10:53:31.500] |  :  Packages associated with globals: [1] ‘base’
[10:53:31.495] |  :  .  |  :  .  |  List of 1
[10:53:31.495] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.495] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.495] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.495] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.495] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.495] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.495] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.501] |  :  Packages: [1] ‘base’
[10:53:31.501] |  :  .  |  :  .  |  Old stack:
[10:53:31.501] |  Search for packages associated with the globals ... DONE
[10:53:31.501] |  Resolving futures part of globals (recursively) ...
[10:53:31.497] |  :  .  |  List of 1
[10:53:31.497] |  :  .  |   $ ii: int 1
[10:53:31.497] |  :  .  |   - attr(*, "where")=List of 1
[10:53:31.497] |  :  .  |    ..$ ii:<environment: R_EmptyEnv> 
[10:53:31.497] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:31.497] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:31.497] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:31.497] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:31.502] |  :  .  |  - copied ‘ii’ to environment
[10:53:31.502] |  :  .  |  assign_globals() ... done
[10:53:31.502] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:31.502] |  :  .  recursive: 99
[10:53:31.502] |  :  .  length: 1
[10:53:31.502] |  :  .  elements: ‘ii’
[10:53:31.503] |  :  .  'obj' is atomic
[10:53:31.503] |  :  .  length: 0 (resolved future 1)
[10:53:31.503] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:31.503] |  :  globals: [1] ‘ii’
[10:53:31.504] |  Resolving futures part of globals (recursively) ... DONE
[10:53:31.504] |  Packages after dropping 'base': [0] 
[10:53:31.504] |  globals: [1] ‘ii’
[10:53:31.504] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.504] |  packages: [0] 
[10:53:31.505] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.505] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.505] getGlobalsAndPackages() ... done
[10:53:31.505] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:31.505] |  :  .  |  :  .  |  :  New stack:
[10:53:31.505] run() for Future (‘Future’) ...
[10:53:31.505] |  state: ‘created’
[10:53:31.506] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.506] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.506] |  Using MulticoreFutureBackend ...
[10:53:31.506] |  :  Launching futures ...
[10:53:31.507] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:31.507] |  :  .  |  getFutureData() ...
[10:53:31.507] |  :  .  |  :  getFutureCore() ...
[10:53:31.507] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:31.508] |  :  .  |  :  getFutureCore() ... done
[10:53:31.508] |  :  .  |  :  getFutureCapture() ...
[10:53:31.508] |  :  .  |  :  getFutureCapture() ... done
[10:53:31.508] |  :  .  |  :  getFutureContext() ...
[10:53:31.501] |  :  .  |  :  .  |  List of 1
[10:53:31.501] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(co[10:53:31.509] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
nstraints = "multicore"), gc = FALSE, 
[10:53:31.501] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.501] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.501] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.501] |  :  .  |  :  .  |      ...)  
[10:53:31.501] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.501] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.501] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:31.501] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.501] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.501] |  :  .  |  :  .  |      ...)  
[10:53:31.501] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.501] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.509] |  :  .  |  :  .  |  Not identical
[10:53:31.509] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:31.509] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.509] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:31.505] |  :  .  |  :  .  |  :  List of 1
[10:53:31.505] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.505] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.505] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.505] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.505] |  :  .  |  :  .  |  :      ...)  
[10:53:31.505] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.505] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.505] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:31.505] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.505] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.505] |  :  .  |  :  .  |  :      ...)  
[10:53:31.505] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.505] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.509] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:31.509] |  :  .  |  :  .  |  :  Old stack:
[10:53:31.509] |  :  .  |  :  getFutureContext() ... done
[10:53:31.510] |  :  .  |  getFutureData() ... done
[10:53:31.510] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:31.511] |  :  .  |  :  Poll #1 (0): usedCores() = 2, workers = 2
[10:53:31.509] |  :  .  |  :  .  |  :  List of 1
[10:53:31.509] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.509] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.509] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.509] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.509] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.509] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.509] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.512] |  :  .  |  :  .  |  :  Not identical
[10:53:31.512] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:31.512] |  :  .  |  :  .  |  :  .  List of 2
[10:53:31.512] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.512] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.512] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.512] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.512] |  :  .  |  :  .  |  :  .      ...)  
[10:53:31.512] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.512] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.512] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:31.512] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.512] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.512] |  :  .  |  :  .  |  :  .      ...)  
[10:53:31.512] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.512] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.512] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.512] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.512] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.512] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.512] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.516] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:31.517] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:31.517] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:31.517] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:31.517] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:31.517] |  :  .  |  :  .  |  List of future strategies:
[10:53:31.517] |  :  .  |  :  .  |  1. multicore:
[10:53:31.517] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:31.517] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:31.517] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:31.509] |  :  .  |  :  .  |  :  List of 2
[10:53:31.509] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.509] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.509] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.509] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.509] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.509] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.509] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.509] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.509] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.509] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.509] |  :  .  |  :  .  |  :      ...)  
[10:53:31.509] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.509] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.509] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:31.509] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.509] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.509] |  :  .  |  :  .  |  :      ...)  
[10:53:31.509] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.517] |  :  .  |  :  .  |  List of 1
[10:53:31.517] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.517] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.517] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.517] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.517] |  :  .  |  :  .  |      ...)  
[10:53:31.517] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.517] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.517] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:31.517] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.517] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.517] |  :  .  |  :  .  |      ...)  
[10:53:31.517] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.517] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.520] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:31.521] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:31.521] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.521] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:31.521] |  :  .  |  :  .  |  :  Formals differ
[10:53:31.521] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.521] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:31.521] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.521] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:31.521] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.521] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:31.522] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:31.522] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:31.522] |  :  .  |  :  .  List of future strategies:
[10:53:31.522] |  :  .  |  :  .  1. sequential:
[10:53:31.522] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:31.522] |  :  .  |  :  .     - tweaked: FALSE
[10:53:31.522] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.523] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.523] |  :  .  |  :  readImmediateCondition() ...
[10:53:31.524] |  :  .  |  :    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:31.524] |  :  .  |  :   - Number of RDS files: 0
[10:53:31.524] |  :  .  |  :  readImmediateCondition() ... DONE
[10:53:31.524] |  :  .  |  :  result() for MulticoreFuture ...
[10:53:31.525] |  :  .  |  :  .  readImmediateCondition() ...
[10:53:31.526] |  :  .  |  :  .    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:31.526] |  :  .  |  :  .   - Number of RDS files: 0
[10:53:31.526] |  :  .  |  :  .  readImmediateCondition() ... DONE
[10:53:31.526] |  :  .  |  :  .  result() for MulticoreFuture ...
[10:53:31.527] |  :  .  |  :  .  result() for MulticoreFuture ... done
[10:53:31.527] |  :  .  |  :  result() for MulticoreFuture ... done
[10:53:31.527] |  :  .  |  :  result() for MulticoreFuture ...
[10:53:31.527] |  :  .  |  :  result() for MulticoreFuture ... done
[10:53:31.523] |  :  .  |  :  .  List of 1
[10:53:31.523] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.523] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.523] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.523] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.523] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.523] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.523] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.528] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:31.529] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:31.529] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:31.529] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.529] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:31.529] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.530] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:31.530] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:31.530] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:31.531] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.531] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.531] |  :  .  |  assign_globals() ...
[10:53:31.531] |  :  .  |  MulticoreFuture started
[10:53:31.532] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:31.532] |  :  .  |  attachPackages() ...
[10:53:31.532] |  :  Launching futures ... done
[10:53:31.532] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:31.532] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:31.532] |  :  .  |  attachPackages() ... DONE
[10:53:31.532] |  Using MulticoreFutureBackend ... done
[10:53:31.533] |  :  .  |  attachPackages() ...
[10:53:31.533] run() for Future (‘MulticoreFuture’) ... done
[10:53:31.533] |  :  .  |  :  packages: [n=0] 
[10:53:31.531] |  :  .  |  List of 1
[10:53:31.531] |  :  .  |   $ ii: int 2
[10:53:31.531] |  :  .  |   - attr(*, "where")=List of 1
[10:53:31.531] |  :  .  |    ..$ ii:<environment: R_EmptyEnv> 
[10:53:31.531] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:31.531] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:31.531] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:31.531] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:31.533] |  :  .  |  attachPackages() ... DONE
[10:53:31.533] result() for MulticoreFuture ...
[10:53:31.536] |  :  .  |  - copied ‘ii’ to environment
[10:53:31.536] |  :  .  |  assign_globals() ... done
[10:53:31.537] result() for MulticoreFuture ... done
[10:53:31.537] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.537] result() for MulticoreFuture ...
[10:53:31.538] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:31.538] result() for MulticoreFuture ... done
[10:53:31.538] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.538] result() for MulticoreFuture ...
[10:53:31.539] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.540] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.540] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.540] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.540] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.540] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:31.540] |  :  .  |  :  .  |  :  New stack:
[10:53:31.540] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:31.541] |  :  .  |  :  .  |  New stack:
[10:53:31.540] |  :  .  |  :  .  |  :  List of 1
[10:53:31.540] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.540] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.540] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.540] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.540] |  :  .  |  :  .  |  :      ...)  
[10:53:31.540] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.540] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.540] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:31.540] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.540] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.540] |  :  .  |  :  .  |  :      ...)  
[10:53:31.540] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.540] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.544] |  :  .  |  :  .  |  :  Old stack:
[10:53:31.544] |  :  .  |  :  .  |  :  List of 1
[10:53:31.544] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.544] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.544] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.544] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.544] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.544] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.544] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.546] |  :  .  |  :  .  |  :  Not identical
[10:53:31.546] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:31.541] |  :  .  |  :  .  |  List of 1
[10:53:31.541] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.541] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.541] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.541] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.541] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.541] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.541] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.547] |  :  .  |  :  .  |  Old stack:
[10:53:31.547] |  :  .  |  :  .  |  List of 1
[10:53:31.547] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.547] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.547] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.547] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.547] |  :  .  |  :  .  |      ...)  
[10:53:31.547] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.547] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.547] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:31.547] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.547] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.547] |  :  .  |  :  .  |      ...)  
[10:53:31.547] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.547] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.546] |  :  .  |  :  .  |  :  .  List of 2
[10:53:31.546] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.546] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.546] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.546] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.546] |  :  .  |  :  .  |  :  .      ...)  
[10:53:31.546] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.546] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.546] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:31.546] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.546] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.546] |  :  .  |  :  .  |  :  .      ...)  
[10:53:31.546] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.546] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.546] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.546] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.546] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.546] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.546] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.553] |  :  .  |  :  .  |  Not identical
[10:53:31.553] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:31.554] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:31.554] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:31.554] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:31.554] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:31.554] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:31.554] |  :  .  |  :  .  |  List of future strategies:
[10:53:31.554] |  :  .  |  :  .  |  1. multicore:
[10:53:31.554] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:31.554] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:31.554] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:31.555] |  :  .  |  :  .  |  List of 1
[10:53:31.555] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.555] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.555] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.555] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.555] |  :  .  |  :  .  |      ...)  
[10:53:31.555] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.555] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.555] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:31.555] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.555] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.555] |  :  .  |  :  .  |      ...)  
[10:53:31.555] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.555] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.558] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:31.558] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:31.558] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.558] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:31.559] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.559] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:31.559] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.553] |  :  .  |  :  .  |  :  List of 2
[10:53:31.553] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.553] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.553] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.553] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.553] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.553] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.553] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.553] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.553] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.553] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.553] |  :  .  |  :  .  |  :      ...)  
[10:53:31.553] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.553] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.553] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:31.553] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.553] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.553] |  :  .  |  :  .  |  :      ...)  
[10:53:31.553] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.559] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.559] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.559] |  :  .  |  :  .  |  :  Formals differ
[10:53:31.560] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:31.560] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:31.560] |  readImmediateCondition() ...
[10:53:31.560] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:31.560] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:31.560] |    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:31.560] |  :  .  |  :  .  List of future strategies:
[10:53:31.560] |  :  .  |  :  .  1. sequential:
[10:53:31.560] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:31.560] |  :  .  |  :  .     - tweaked: FALSE
[10:53:31.560] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.560] |   - Number of RDS files: 0
[10:53:31.561] |  readImmediateCondition() ... DONE
[10:53:31.561] |  result() for MulticoreFuture ...
[10:53:31.562] |  result() for MulticoreFuture ... done
[10:53:31.562] result() for MulticoreFuture ... done
[10:53:31.562] result() for MulticoreFuture ...
[10:53:31.562] result() for MulticoreFuture ... done
[10:53:31.563] result() for MulticoreFuture ...
[10:53:31.561] |  :  .  |  :  .  List of 1
[10:53:31.561] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.561] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.561] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.561] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.561] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.561] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.561] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.563] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:31.564] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:31.564] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.564] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:31.564] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.564] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:31.565] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:31.565] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:31.565] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.565] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.565] |  :  .  |  assign_globals() ...
[10:53:31.565] |  :  .  |  List of 1
[10:53:31.565] |  :  .  |   $ ii: int 3
[10:53:31.565] |  :  .  |   - attr(*, "where")=List of 1
[10:53:31.565] |  :  .  |    ..$ ii:<environment: R_EmptyEnv> 
[10:53:31.565] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:31.565] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:31.565] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:31.565] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:31.570] |  :  .  |  - copied ‘ii’ to environment
[10:53:31.570] |  :  .  |  assign_globals() ... done
[10:53:31.572] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.573] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.573] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.573] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:31.573] |  :  .  |  :  .  |  :  New stack:
[10:53:31.573] |  :  .  |  :  .  |  :  List of 1
[10:53:31.573] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.573] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.573] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.573] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.573] |  :  .  |  :  .  |  :      ...)  
[10:53:31.573] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.573] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.573] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:31.573] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.573] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.573] |  :  .  |  :  .  |  :      ...)  
[10:53:31.573] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.573] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.576] |  :  .  |  :  .  |  :  Old stack:
[10:53:31.577] |  :  .  |  :  .  |  :  List of 1
[10:53:31.577] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.577] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.577] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.577] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.577] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.577] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.577] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.579] |  :  .  |  :  .  |  :  Not identical
[10:53:31.579] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:31.579] |  :  .  |  :  .  |  :  .  List of 2
[10:53:31.579] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.579] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.579] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.579] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.579] |  :  .  |  :  .  |  :  .      ...)  
[10:53:31.579] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.579] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.579] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:31.579] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.579] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.579] |  :  .  |  :  .  |  :  .      ...)  
[10:53:31.579] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.579] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.579] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.579] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.579] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.579] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.579] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.583] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:31.584] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:31.584] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:31.584] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:31.584] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:31.584] |  :  .  |  :  .  |  List of future strategies:
[10:53:31.584] |  :  .  |  :  .  |  1. multicore:
[10:53:31.584] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:31.584] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:31.584] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:31.584] |  :  .  |  :  .  |  List of 1
[10:53:31.584] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.584] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.584] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.584] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.584] |  :  .  |  :  .  |      ...)  
[10:53:31.584] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.584] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.584] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:31.584] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.584] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.584] |  :  .  |  :  .  |      ...)  
[10:53:31.584] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.584] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.589] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:31.589] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:31.589] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.589] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:31.589] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.589] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:31.589] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.590] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.590] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.590] |  readImmediateCondition() ...
[10:53:31.590] |    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:31.591] |   - Number of RDS files: 0
[10:53:31.591] |  readImmediateCondition() ... DONE
[10:53:31.591] |  result() for MulticoreFuture ...
[10:53:31.591] |  result() for MulticoreFuture ... done
[10:53:31.592] result() for MulticoreFuture ... done
[10:53:31.592] result() for MulticoreFuture ...
[10:53:31.592] result() for MulticoreFuture ... done
[1] 1 2 3
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:31.593] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:31.593] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:31.596] |  :  globals found: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:31.596] |  Searching for globals ... DONE
[10:53:31.597] |  Resolving globals: TRUE
[10:53:31.597] |  Resolving any globals that are futures ...
[10:53:31.597] |  :  globals: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:31.597] |  Resolving any globals that are futures ... DONE
[10:53:31.597] |  Search for packages associated with the globals ...
[10:53:31.597] |  :  Packages associated with globals: [1] ‘base’
[10:53:31.598] |  :  Packages: [1] ‘base’
[10:53:31.598] |  Search for packages associated with the globals ... DONE
[10:53:31.598] |  Resolving futures part of globals (recursively) ...
[10:53:31.598] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:31.598] |  :  .  recursive: 99
[10:53:31.599] |  :  .  length: 1
[10:53:31.599] |  :  .  elements: ‘ii’
[10:53:31.599] |  :  .  'obj' is atomic
[10:53:31.599] |  :  .  length: 0 (resolved future 1)
[10:53:31.599] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:31.599] |  :  globals: [1] ‘ii’
[10:53:31.599] |  Resolving futures part of globals (recursively) ... DONE
[10:53:31.600] |  Packages after dropping 'base': [0] 
[10:53:31.600] |  globals: [1] ‘ii’
[10:53:31.600] |  packages: [0] 
[10:53:31.600] getGlobalsAndPackages() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:31.601] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:31.601] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:31.602] |  :  globals found: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:31.603] |  Searching for globals ... DONE
[10:53:31.603] |  Resolving globals: TRUE
[10:53:31.603] |  Resolving any globals that are futures ...
[10:53:31.603] |  :  globals: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:31.603] |  Resolving any globals that are futures ... DONE
[10:53:31.603] |  Search for packages associated with the globals ...
[10:53:31.603] |  :  Packages associated with globals: [1] ‘base’
[10:53:31.604] |  :  Packages: [1] ‘base’
[10:53:31.604] |  Search for packages associated with the globals ... DONE
[10:53:31.604] |  Resolving futures part of globals (recursively) ...
[10:53:31.604] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:31.604] |  :  .  recursive: 99
[10:53:31.604] |  :  .  length: 1
[10:53:31.604] |  :  .  elements: ‘ii’
[10:53:31.605] |  :  .  'obj' is atomic
[10:53:31.605] |  :  .  length: 0 (resolved future 1)
[10:53:31.605] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:31.605] |  :  globals: [1] ‘ii’
[10:53:31.605] |  Resolving futures part of globals (recursively) ... DONE
[10:53:31.605] |  Packages after dropping 'base': [0] 
[10:53:31.605] |  globals: [1] ‘ii’
[10:53:31.605] |  packages: [0] 
[10:53:31.606] getGlobalsAndPackages() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:31.606] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:31.606] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:31.608] |  :  globals found: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:31.608] |  Searching for globals ... DONE
[10:53:31.608] |  Resolving globals: TRUE
[10:53:31.608] |  Resolving any globals that are futures ...
[10:53:31.608] |  :  globals: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:31.609] |  Resolving any globals that are futures ... DONE
[10:53:31.609] |  Search for packages associated with the globals ...
[10:53:31.609] |  :  Packages associated with globals: [1] ‘base’
[10:53:31.609] |  :  Packages: [1] ‘base’
[10:53:31.609] |  Search for packages associated with the globals ... DONE
[10:53:31.609] |  Resolving futures part of globals (recursively) ...
[10:53:31.610] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:31.610] |  :  .  recursive: 99
[10:53:31.610] |  :  .  length: 1
[10:53:31.610] |  :  .  elements: ‘ii’
[10:53:31.610] |  :  .  'obj' is atomic
[10:53:31.610] |  :  .  length: 0 (resolved future 1)
[10:53:31.612] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:31.612] |  :  globals: [1] ‘ii’
[10:53:31.612] |  Resolving futures part of globals (recursively) ... DONE
[10:53:31.612] |  Packages after dropping 'base': [0] 
[10:53:31.612] |  globals: [1] ‘ii’
[10:53:31.612] |  packages: [0] 
[10:53:31.613] getGlobalsAndPackages() ... done
[10:53:31.613] run() for Future (‘Future’) ...
[10:53:31.613] |  state: ‘created’
[10:53:31.613] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.613] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.613] |  Using MulticoreFutureBackend ...
[10:53:31.614] |  :  Launching futures ...
[10:53:31.614] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:31.614] |  :  .  |  getFutureData() ...
[10:53:31.614] |  :  .  |  :  getFutureCore() ...
[10:53:31.614] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:31.614] |  :  .  |  :  getFutureCore() ... done
[10:53:31.614] |  :  .  |  :  getFutureCapture() ...
[10:53:31.614] |  :  .  |  :  getFutureCapture() ... done
[10:53:31.614] |  :  .  |  :  getFutureContext() ...
[10:53:31.615] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.615] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:31.615] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.615] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:31.615] |  :  .  |  :  getFutureContext() ... done
[10:53:31.615] |  :  .  |  getFutureData() ... done
[10:53:31.615] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:31.616] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:31.617] |  :  .  |  MulticoreFuture started
[10:53:31.618] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:31.618] |  :  .  |  attachPackages() ...
[10:53:31.618] |  :  Launching futures ... done
[10:53:31.619] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:31.619] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:31.619] |  :  .  |  attachPackages() ... DONE
[10:53:31.619] |  Using MulticoreFutureBackend ... done
[10:53:31.620] |  :  .  |  attachPackages() ...
[10:53:31.620] run() for Future (‘MulticoreFuture’) ... done
[10:53:31.620] |  :  .  |  :  packages: [n=0] 
[10:53:31.620] result() for MulticoreFuture ...
[10:53:31.621] |  :  .  |  attachPackages() ... DONE
[10:53:31.622] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.622] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:31.623] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.623] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.624] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.624] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:31.625] |  :  .  |  :  .  |  New stack:
[10:53:31.625] |  :  .  |  :  .  |  List of 1
[10:53:31.625] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.625] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.625] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.625] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.625] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.625] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.625] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.630] |  :  .  |  :  .  |  Old stack:
[10:53:31.630] |  :  .  |  :  .  |  List of 1
[10:53:31.630] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.630] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.630] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.630] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.630] |  :  .  |  :  .  |      ...)  
[10:53:31.630] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.630] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.630] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:31.630] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.630] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.630] |  :  .  |  :  .  |      ...)  
[10:53:31.630] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.630] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.635] |  :  .  |  :  .  |  Not identical
[10:53:31.635] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:31.635] |  :  .  |  :  .  |  :  List of 2
[10:53:31.635] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.635] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.635] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.635] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.635] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.635] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.635] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.635] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.635] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.635] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.635] |  :  .  |  :  .  |  :      ...)  
[10:53:31.635] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.635] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.635] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:31.635] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.635] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.635] |  :  .  |  :  .  |  :      ...)  
[10:53:31.635] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.641] |  :  .  |  :  .  |  :  Formals differ
[10:53:31.641] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:31.642] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:31.642] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:31.642] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:31.642] |  :  .  |  :  .  List of future strategies:
[10:53:31.642] |  :  .  |  :  .  1. sequential:
[10:53:31.642] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:31.642] |  :  .  |  :  .     - tweaked: FALSE
[10:53:31.642] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.643] |  :  .  |  :  .  List of 1
[10:53:31.643] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.643] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.643] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.643] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.643] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.643] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.643] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.648] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:31.648] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:31.648] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.648] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:31.648] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.649] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:31.649] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:31.649] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:31.649] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.650] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.650] |  :  .  |  assign_globals() ...
[10:53:31.650] |  :  .  |  List of 1
[10:53:31.650] |  :  .  |   $ ii: int 1
[10:53:31.650] |  :  .  |   - attr(*, "where")=List of 1
[10:53:31.650] |  :  .  |    ..$ ii:<environment: R_EmptyEnv> 
[10:53:31.650] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:31.650] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:31.650] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:31.650] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:31.653] |  :  .  |  - copied ‘ii’ to environment
[10:53:31.653] |  :  .  |  assign_globals() ... done
[10:53:31.656] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.656] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.656] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.656] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:31.656] |  :  .  |  :  .  |  :  New stack:
[10:53:31.656] |  :  .  |  :  .  |  :  List of 1
[10:53:31.656] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.656] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.656] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.656] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.656] |  :  .  |  :  .  |  :      ...)  
[10:53:31.656] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.656] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.656] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:31.656] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.656] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.656] |  :  .  |  :  .  |  :      ...)  
[10:53:31.656] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.656] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.659] |  :  .  |  :  .  |  :  Old stack:
[10:53:31.659] |  :  .  |  :  .  |  :  List of 1
[10:53:31.659] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.659] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.659] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.659] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.659] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.659] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.659] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.662] |  :  .  |  :  .  |  :  Not identical
[10:53:31.662] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:31.662] |  :  .  |  :  .  |  :  .  List of 2
[10:53:31.662] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.662] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.662] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.662] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.662] |  :  .  |  :  .  |  :  .      ...)  
[10:53:31.662] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.662] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.662] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:31.662] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.662] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.662] |  :  .  |  :  .  |  :  .      ...)  
[10:53:31.662] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.662] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.662] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.662] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.662] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.662] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.662] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.668] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:31.668] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:31.668] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:31.668] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:31.668] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:31.668] |  :  .  |  :  .  |  List of future strategies:
[10:53:31.668] |  :  .  |  :  .  |  1. multicore:
[10:53:31.668] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:31.668] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:31.668] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:31.669] |  :  .  |  :  .  |  List of 1
[10:53:31.669] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.669] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.669] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.669] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.669] |  :  .  |  :  .  |      ...)  
[10:53:31.669] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.669] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.669] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:31.669] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.669] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.669] |  :  .  |  :  .  |      ...)  
[10:53:31.669] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.669] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.672] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:31.672] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:31.672] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.672] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:31.673] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.673] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:31.673] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.673] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.673] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.674] |  readImmediateCondition() ...
[10:53:31.674] |    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:31.675] |   - Number of RDS files: 0
[10:53:31.675] |  readImmediateCondition() ... DONE
[10:53:31.675] |  result() for MulticoreFuture ...
[10:53:31.675] |  result() for MulticoreFuture ... done
[10:53:31.676] |  signalConditions() ...
[10:53:31.676] |  :  include = ‘immediateCondition’
[10:53:31.676] |  :  exclude = 
[10:53:31.676] |  :  resignal = FALSE
[10:53:31.676] |  :  Number of conditions: 1
[10:53:31.677] |  signalConditions() ... done
[10:53:31.677] result() for MulticoreFuture ... done
[10:53:31.677] result() for MulticoreFuture ...
[10:53:31.677] result() for MulticoreFuture ... done
[10:53:31.677] signalConditions() ...
[10:53:31.677] |  include = ‘immediateCondition’
[10:53:31.678] |  exclude = 
[10:53:31.678] |  resignal = FALSE
[10:53:31.678] |  Number of conditions: 1
[10:53:31.678] signalConditions() ... done
[10:53:31.678] Future state: ‘finished’
[10:53:31.678] result() for MulticoreFuture ...
[10:53:31.678] result() for MulticoreFuture ... done
[10:53:31.679] signalConditions() ...
[10:53:31.679] |  include = ‘condition’
[10:53:31.679] |  exclude = ‘immediateCondition’
[10:53:31.679] |  resignal = TRUE
[10:53:31.679] |  Number of conditions: 1
[10:53:31.679] |  Condition #1: ‘simpleError’, ‘error’, ‘condition’
[10:53:31.679] signalConditions() ... done
List of 1
 $ res: 'try-error' chr "Error in eval(quote({ : object 'a' not found\n"
  ..- attr(*, "condition")=List of 3
  .. ..$ message    : chr "object 'a' not found"
  .. ..$ call       : language eval(quote({     { ...
  .. ..$ future.info:List of 5
  .. .. ..$ condition:List of 2
  .. .. .. ..$ message: chr "object 'a' not found"
  .. .. .. ..$ call   : language eval(quote({     { ...
  .. .. .. ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
  .. .. ..$ calls    :List of 27
  .. .. .. ..$ : language future:::testme("globals,tricky")
  .. .. .. ..$ : language source(file.path(path, "run.R"))
  .. .. .. ..$ : language withVisible(eval(ei, envir))
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language source(testme[["script"]], echo = TRUE)
  .. .. .. ..$ : language withVisible(eval(ei, envir))
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language res[[ii]] %<-% {     b <- a * ii ...
  .. .. .. ..$ : language eval(fassignment, envir = envir, enclos = baseenv())
  .. .. .. ..$ : language eval(fassignment, envir = envir, enclos = baseenv())
  .. .. .. ..$ : language res[[ii]] %<-% {     b <- a * ii ...
  .. .. .. ..$ : language futureAssignInternal(target, expr, envir = envir, substitute = FALSE)
  .. .. .. ..$ : language futureAssign(name, expr, envir = envir, assign.env = assign.env, substitute = FALSE)
  .. .. .. ..$ : language do.call(future::future, args = future.args, envir = envir)
  .. .. .. ..$ : language (function (expr, envir = parent.frame(), substitute = TRUE, lazy = FALSE,      seed = FALSE, globals = TRUE, pack| __truncated__ ...
  .. .. .. ..$ : language Future(expr, substitute = FALSE, envir = envir, lazy = TRUE, seed = seed,      globals = globals, packages = pack| __truncated__ ...
  .. .. .. ..$ : language eval(expr, envir = globalenv())
  .. .. .. ..$ : language eval(expr, envir = globalenv())
  .. .. .. ..$ : language local({     { ...
  .. .. .. ..$ : language eval.parent(substitute(eval(quote(expr), envir)))
  .. .. .. ..$ : language eval(expr, p)
  .. .. .. ..$ : language eval(expr, p)
  .. .. .. ..$ : language eval(quote({     { ...
  .. .. .. ..$ : language eval(quote({     { ...
  .. .. .. ..$ : language eval(quote({     { ...
  .. .. ..$ session  :List of 6
  .. .. .. ..$ r         :List of 14
  .. .. .. .. ..$ platform      : chr "x86_64-pc-linux-gnu"
  .. .. .. .. ..$ arch          : chr "x86_64"
  .. .. .. .. ..$ os            : chr "linux-gnu"
  .. .. .. .. ..$ system        : chr "x86_64, linux-gnu"
  .. .. .. .. ..$ status        : chr ""
  .. .. .. .. ..$ major         : chr "4"
  .. .. .. .. ..$ minor         : chr "5.0"
  .. .. .. .. ..$ year          : chr "2025"
  .. .. .. .. ..$ month         : chr "04"
  .. .. .. .. ..$ day           : chr "11"
  .. .. .. .. ..$ svn rev       : chr "88135"
  .. .. .. .. ..$ language      : chr "R"
  .. .. .. .. ..$ version.string: chr "R version 4.5.0 (2025-04-11)"
  .. .. .. .. ..$ nickname      : chr "How About a Twenty-Six"
  .. .. .. ..$ locale    : chr "LC_CTYPE=en_US.UTF-8;LC_NUMERIC=C;LC_TIME=en_US.UTF-8;LC_COLLATE=en_US.UTF-8;LC_MONETARY=en_US.UTF-8;LC_MESSAGE"| __truncated__
  .. .. .. ..$ rngkind   : chr [1:3] "Mersenne-Twister" "Inversion" "Rejection"
  .. .. .. ..$ namespaces: chr [1:16] "compiler" "parallelly" "graphics" "tools" ...
  .. .. .. ..$ search    : chr [1:12] ".GlobalEnv" "package:listenv" "package:future" "testme" ...
  .. .. .. ..$ system    : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
  .. .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
  .. .. ..$ timestamp: POSIXct[1:1], format: "2025-05-06 10:53:31"
  .. .. ..$ signaled : int 1
  .. ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:31.703] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:31.703] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:31.704] |  :  globals found: [0] 
[10:53:31.704] |  Searching for globals ... DONE
[10:53:31.704] |  globals: [0] <none>
[10:53:31.704] |  packages: [0] <none>
[10:53:31.704] getGlobalsAndPackages() ... done
[10:53:31.705] run() for Future (‘Future’) ...
[10:53:31.705] |  state: ‘created’
[10:53:31.705] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.705] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.705] |  Using MulticoreFutureBackend ...
[10:53:31.705] |  :  Launching futures ...
[10:53:31.705] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:31.705] |  :  .  |  getFutureData() ...
[10:53:31.705] |  :  .  |  :  getFutureCore() ...
[10:53:31.706] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:31.706] |  :  .  |  :  getFutureCore() ... done
[10:53:31.706] |  :  .  |  :  getFutureCapture() ...
[10:53:31.706] |  :  .  |  :  getFutureCapture() ... done
[10:53:31.706] |  :  .  |  :  getFutureContext() ...
[10:53:31.706] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.706] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:31.706] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.706] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:31.706] |  :  .  |  :  getFutureContext() ... done
[10:53:31.707] |  :  .  |  getFutureData() ... done
[10:53:31.707] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:31.707] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:31.709] |  :  .  |  MulticoreFuture started
[10:53:31.709] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:31.709] |  :  Launching futures ... done
[10:53:31.710] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:31.710] |  :  .  |  attachPackages() ...
[10:53:31.710] |  Using MulticoreFutureBackend ... done
[10:53:31.710] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:31.710] run() for Future (‘MulticoreFuture’) ... done
[10:53:31.710] |  :  .  |  attachPackages() ... DONE
[10:53:31.710] |  :  .  |  attachPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:31.711] |  :  .  |  :  packages: [n=0] 
[10:53:31.711] getGlobalsAndPackages() ...
[10:53:31.711] |  :  .  |  attachPackages() ... DONE
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:31.711] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:31.712] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.712] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:31.712] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.713] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.713] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.713] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:31.713] |  :  .  |  :  .  |  New stack:
[10:53:31.713] |  :  globals found: [3] ‘+’, ‘value’, ‘a’
[10:53:31.714] |  Searching for globals ... DONE
[10:53:31.714] |  Resolving globals: TRUE
[10:53:31.714] |  Resolving any globals that are futures ...
[10:53:31.714] |  :  globals: [3] ‘+’, ‘value’, ‘a’
[10:53:31.714] |  Resolving any globals that are futures ... DONE
[10:53:31.715] |  Search for packages associated with the globals ...
[10:53:31.715] |  :  Packages associated with globals: [2] ‘base’, ‘future’
[10:53:31.715] |  :  Packages: [2] ‘base’, ‘future’
[10:53:31.716] |  Search for packages associated with the globals ... DONE
[10:53:31.716] |  Resolving futures part of globals (recursively) ...
[10:53:31.716] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:31.716] |  :  .  recursive: 99
[10:53:31.717] |  :  .  length: 1
[10:53:31.717] |  :  .  elements: ‘a’
[10:53:31.713] |  :  .  |  :  .  |  List of 1
[10:53:31.713] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.713] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.713] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.713] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.713] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.713] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.713] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.717] |  :  .  'obj' is MulticoreFuture
[10:53:31.717] |  :  .  |  :  .  |  Old stack:
[10:53:31.717] |  :  .  |  :  .  |  List of 1
[10:53:31.717] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.717] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.717] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.717] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.717] |  :  .  |  :  .  |      ...)  
[10:53:31.717] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.717] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.717] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:31.717] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.717] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.717] |  :  .  |  :  .  |      ...)  
[10:53:31.717] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.717] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.727] |  :  .  |  :  .  |  Not identical
[10:53:31.727] |  :  .  readImmediateCondition() ...
[10:53:31.727] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:31.727] |  :  .    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:31.728] |  :  .   - Number of RDS files: 0
[10:53:31.728] |  :  .  readImmediateCondition() ... DONE
[10:53:31.728] |  :  .  |  :  .  |  :  List of 2
[10:53:31.728] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.728] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.728] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.728] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.728] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.728] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.728] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.728] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.728] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.728] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.728] |  :  .  |  :  .  |  :      ...)  
[10:53:31.728] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.728] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.728] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:31.728] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.728] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.728] |  :  .  |  :  .  |  :      ...)  
[10:53:31.728] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.735] |  :  .  |  :  .  |  :  Formals differ
[10:53:31.735] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:31.735] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:31.735] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:31.736] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:31.736] |  :  .  |  :  .  List of future strategies:
[10:53:31.736] |  :  .  |  :  .  1. sequential:
[10:53:31.736] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:31.736] |  :  .  |  :  .     - tweaked: FALSE
[10:53:31.736] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.738] |  :  .  'obj' is MulticoreFuture
[10:53:31.736] |  :  .  |  :  .  List of 1
[10:53:31.736] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.736] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.736] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.736] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.736] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.736] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.736] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.739] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:31.739] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:31.739] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.739] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:31.740] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.740] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:31.740] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:31.740] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:31.740] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.740] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.743] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.743] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.743] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.743] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:31.743] |  :  .  |  :  .  |  :  New stack:
[10:53:31.743] |  :  .  |  :  .  |  :  List of 1
[10:53:31.743] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.743] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.743] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.743] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.743] |  :  .  |  :  .  |  :      ...)  
[10:53:31.743] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.743] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.743] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:31.743] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.743] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.743] |  :  .  |  :  .  |  :      ...)  
[10:53:31.743] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.743] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.748] |  :  .  |  :  .  |  :  Old stack:
[10:53:31.748] |  :  .  readImmediateCondition() ...
[10:53:31.749] |  :  .    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:31.749] |  :  .   - Number of RDS files: 0
[10:53:31.749] |  :  .  readImmediateCondition() ... DONE
[10:53:31.748] |  :  .  |  :  .  |  :  List of 1
[10:53:31.748] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.748] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.748] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.748] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.748] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.748] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.748] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.750] |  :  .  |  :  .  |  :  Not identical
[10:53:31.750] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:31.750] |  :  .  |  :  .  |  :  .  List of 2
[10:53:31.750] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.750] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.750] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.750] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.750] |  :  .  |  :  .  |  :  .      ...)  
[10:53:31.750] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.750] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.750] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:31.750] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.750] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.750] |  :  .  |  :  .  |  :  .      ...)  
[10:53:31.750] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.750] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.750] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.750] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.750] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.750] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.750] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.755] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:31.755] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:31.755] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:31.755] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:31.755] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:31.755] |  :  .  |  :  .  |  List of future strategies:
[10:53:31.755] |  :  .  |  :  .  |  1. multicore:
[10:53:31.755] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:31.755] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:31.755] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:31.756] |  :  .  |  :  .  |  List of 1
[10:53:31.756] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.756] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.756] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.756] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.756] |  :  .  |  :  .  |      ...)  
[10:53:31.756] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.756] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.756] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:31.756] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.756] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.756] |  :  .  |  :  .  |      ...)  
[10:53:31.756] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.756] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.758] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:31.759] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:31.759] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.759] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:31.759] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.759] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:31.759] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.759] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.759] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.759] |  :  .  'obj' is MulticoreFuture
[10:53:31.761] |  :  .  readImmediateCondition() ...
[10:53:31.761] |  :  .    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:31.762] |  :  .   - Number of RDS files: 0
[10:53:31.762] |  :  .  readImmediateCondition() ... DONE
[10:53:31.762] |  :  .  Future #1
[10:53:31.762] |  :  .  value(obj, ...) ...
[10:53:31.762] |  :  .  |  result() for MulticoreFuture ...
[10:53:31.763] |  :  .  |  :  readImmediateCondition() ...
[10:53:31.763] |  :  .  |  :    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:31.764] |  :  .  |  :   - Number of RDS files: 0
[10:53:31.764] |  :  .  |  :  readImmediateCondition() ... DONE
[10:53:31.764] |  :  .  |  :  result() for MulticoreFuture ...
[10:53:31.764] |  :  .  |  :  result() for MulticoreFuture ... done
[10:53:31.765] |  :  .  |  result() for MulticoreFuture ... done
[10:53:31.765] |  :  .  |  result() for MulticoreFuture ...
[10:53:31.765] |  :  .  |  result() for MulticoreFuture ... done
[10:53:31.765] |  :  .  value(obj, ...) ... done
[10:53:31.765] |  :  .  resolve(obj, ...) ...
[10:53:31.766] |  :  .  |  A MulticoreFuture was resolved
[10:53:31.766] |  :  .  resolve(obj, ...) ... done
[10:53:31.766] |  :  .  length: 0 (resolved future 1)
[10:53:31.766] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:31.766] |  :  globals: [1] ‘a’
[10:53:31.767] |  Resolving futures part of globals (recursively) ... DONE
[10:53:31.767] |  Packages after dropping 'base': [1] ‘future’
[10:53:31.767] |  Packages after dropping non-attached packages: [1] ‘future’
[10:53:31.767] |  globals: [1] ‘a’
[10:53:31.767] |  packages: [1] ‘future’
[10:53:31.768] getGlobalsAndPackages() ... done
[10:53:31.768] run() for Future (‘Future’) ...
[10:53:31.768] |  state: ‘created’
[10:53:31.768] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.768] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.769] |  Using MulticoreFutureBackend ...
[10:53:31.769] |  :  Launching futures ...
[10:53:31.769] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:31.769] |  :  .  |  getFutureData() ...
[10:53:31.769] |  :  .  |  :  getFutureCore() ...
[10:53:31.769] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘future’
[10:53:31.770] |  :  .  |  :  getFutureCore() ... done
[10:53:31.770] |  :  .  |  :  getFutureCapture() ...
[10:53:31.770] |  :  .  |  :  getFutureCapture() ... done
[10:53:31.770] |  :  .  |  :  getFutureContext() ...
[10:53:31.770] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.770] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:31.771] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.771] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:31.771] |  :  .  |  :  getFutureContext() ... done
[10:53:31.771] |  :  .  |  getFutureData() ... done
[10:53:31.771] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:31.772] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:31.773] |  :  .  |  MulticoreFuture started
[10:53:31.774] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:31.774] |  :  .  |  attachPackages() ...
[10:53:31.774] |  :  Launching futures ... done
[10:53:31.774] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:31.774] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:31.775] |  Using MulticoreFutureBackend ... done
[10:53:31.775] |  :  .  |  attachPackages() ... DONE
[10:53:31.775] |  :  .  |  attachPackages() ...
[10:53:31.775] run() for Future (‘MulticoreFuture’) ... done
[10:53:31.775] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:31.775] result() for MulticoreFuture ...
[10:53:31.775] |  :  .  |  attachPackages() ... DONE
[10:53:31.776] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.777] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:31.777] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.778] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.778] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.778] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:31.779] |  :  .  |  :  .  |  New stack:
[10:53:31.779] |  :  .  |  :  .  |  List of 1
[10:53:31.779] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.779] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.779] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.779] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.779] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.779] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.779] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.783] |  :  .  |  :  .  |  Old stack:
[10:53:31.783] |  :  .  |  :  .  |  List of 1
[10:53:31.783] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.783] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.783] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.783] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.783] |  :  .  |  :  .  |      ...)  
[10:53:31.783] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.783] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.783] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:31.783] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.783] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.783] |  :  .  |  :  .  |      ...)  
[10:53:31.783] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.783] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.789] |  :  .  |  :  .  |  Not identical
[10:53:31.789] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:31.789] |  :  .  |  :  .  |  :  List of 2
[10:53:31.789] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.789] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.789] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.789] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.789] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.789] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.789] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.789] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.789] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.789] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.789] |  :  .  |  :  .  |  :      ...)  
[10:53:31.789] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.789] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.789] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:31.789] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.789] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.789] |  :  .  |  :  .  |  :      ...)  
[10:53:31.789] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.799] |  :  .  |  :  .  |  :  Formals differ
[10:53:31.800] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:31.800] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:31.800] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:31.800] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:31.800] |  :  .  |  :  .  List of future strategies:
[10:53:31.800] |  :  .  |  :  .  1. sequential:
[10:53:31.800] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:31.800] |  :  .  |  :  .     - tweaked: FALSE
[10:53:31.800] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.801] |  :  .  |  :  .  List of 1
[10:53:31.801] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.801] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.801] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.801] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.801] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.801] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.801] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.805] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:31.805] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:31.805] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.805] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:31.805] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.806] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:31.806] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:31.806] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:31.806] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.806] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.807] |  :  .  |  assign_globals() ...
[10:53:31.807] |  :  .  |  List of 1
[10:53:31.807] |  :  .  |   $ a:Classes 'MulticoreFuture', 'MultiprocessFuture', 'Future' <environment: 0x560a7155fc70> 
[10:53:31.807] |  :  .  |   - attr(*, "where")=List of 1
[10:53:31.807] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:53:31.807] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:31.807] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:31.807] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:31.807] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:31.810] |  :  .  |  - copied ‘a’ to environment
[10:53:31.810] |  :  .  |  assign_globals() ... done
[10:53:31.813] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.813] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.813] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.813] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:31.813] |  :  .  |  :  .  |  :  New stack:
[10:53:31.814] |  :  .  |  :  .  |  :  List of 1
[10:53:31.814] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.814] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.814] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.814] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.814] |  :  .  |  :  .  |  :      ...)  
[10:53:31.814] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.814] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.814] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:31.814] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.814] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.814] |  :  .  |  :  .  |  :      ...)  
[10:53:31.814] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.814] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.817] |  :  .  |  :  .  |  :  Old stack:
[10:53:31.817] |  :  .  |  :  .  |  :  List of 1
[10:53:31.817] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.817] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.817] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.817] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.817] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.817] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.817] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.819] |  :  .  |  :  .  |  :  Not identical
[10:53:31.819] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:31.819] |  :  .  |  :  .  |  :  .  List of 2
[10:53:31.819] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.819] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.819] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.819] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.819] |  :  .  |  :  .  |  :  .      ...)  
[10:53:31.819] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.819] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.819] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:31.819] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.819] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.819] |  :  .  |  :  .  |  :  .      ...)  
[10:53:31.819] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.819] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.819] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.819] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.819] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.819] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.819] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.826] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:31.826] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:31.826] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:31.826] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:31.826] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:31.826] |  :  .  |  :  .  |  List of future strategies:
[10:53:31.826] |  :  .  |  :  .  |  1. multicore:
[10:53:31.826] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:31.826] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:31.826] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:31.827] |  :  .  |  :  .  |  List of 1
[10:53:31.827] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.827] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.827] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.827] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.827] |  :  .  |  :  .  |      ...)  
[10:53:31.827] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.827] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.827] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:31.827] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.827] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.827] |  :  .  |  :  .  |      ...)  
[10:53:31.827] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.827] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.830] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:31.830] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:31.830] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.830] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:31.830] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.830] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:31.830] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.830] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.831] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.831] |  readImmediateCondition() ...
[10:53:31.831] |    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:31.832] |   - Number of RDS files: 0
[10:53:31.832] |  readImmediateCondition() ... DONE
[10:53:31.832] |  result() for MulticoreFuture ...
[10:53:31.832] |  result() for MulticoreFuture ... done
[10:53:31.832] |  signalConditions() ...
[10:53:31.833] |  :  include = ‘immediateCondition’
[10:53:31.833] |  :  exclude = 
[10:53:31.833] |  :  resignal = FALSE
[10:53:31.833] |  :  Number of conditions: 4
[10:53:31.833] |  signalConditions() ... done
[10:53:31.833] result() for MulticoreFuture ... done
[10:53:31.833] result() for MulticoreFuture ...
[10:53:31.834] result() for MulticoreFuture ... done
[10:53:31.834] signalConditions() ...
[10:53:31.834] |  include = ‘immediateCondition’
[10:53:31.834] |  exclude = 
[10:53:31.834] |  resignal = FALSE
[10:53:31.834] |  Number of conditions: 4
[10:53:31.834] signalConditions() ... done
[10:53:31.835] Future state: ‘finished’
[10:53:31.835] result() for MulticoreFuture ...
[10:53:31.835] result() for MulticoreFuture ... done
[10:53:31.835] signalConditions() ...
[10:53:31.835] |  include = ‘condition’
[10:53:31.835] |  exclude = ‘immediateCondition’
[10:53:31.835] |  resignal = TRUE
[10:53:31.836] |  Number of conditions: 4
[10:53:31.836] |  Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:31.810] |  :  .  |  result() for MulticoreFuture ...
[10:53:31.836] |  Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:31.810] |  :  .  |  result() for MulticoreFuture ... done
[10:53:31.836] |  Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:31.811] |  :  .  |  result() for MulticoreFuture ...
[10:53:31.836] |  Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:31.811] |  :  .  |  result() for MulticoreFuture ... done
[10:53:31.836] signalConditions() ... done
value(b) = 2
[10:53:31.837] result() for MulticoreFuture ...
[10:53:31.837] result() for MulticoreFuture ... done
[10:53:31.837] result() for MulticoreFuture ...
[10:53:31.837] result() for MulticoreFuture ... done
[10:53:31.837] signalConditions() ...
[10:53:31.837] |  include = ‘immediateCondition’
[10:53:31.837] |  exclude = 
[10:53:31.838] |  resignal = FALSE
[10:53:31.838] |  Number of conditions: 4
[10:53:31.838] signalConditions() ... done
[10:53:31.838] Future state: ‘finished’
[10:53:31.838] result() for MulticoreFuture ...
[10:53:31.838] result() for MulticoreFuture ... done
[10:53:31.838] signalConditions() ...
[10:53:31.838] |  include = ‘condition’
[10:53:31.839] |  exclude = ‘immediateCondition’
[10:53:31.839] |  resignal = TRUE
[10:53:31.839] |  Number of conditions: 4
[10:53:31.839] |  Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:31.810] |  :  .  |  result() for MulticoreFuture ...
[10:53:31.839] |  Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:31.810] |  :  .  |  result() for MulticoreFuture ... done
[10:53:31.839] |  Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:31.811] |  :  .  |  result() for MulticoreFuture ...
[10:53:31.839] |  Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:31.811] |  :  .  |  result() for MulticoreFuture ... done
[10:53:31.840] signalConditions() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:31.840] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:31.840] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:31.841] |  :  globals found: [0] 
[10:53:31.841] |  Searching for globals ... DONE
[10:53:31.841] |  globals: [0] <none>
[10:53:31.842] |  packages: [0] <none>
[10:53:31.842] getGlobalsAndPackages() ... done
[10:53:31.842] run() for Future (‘Future’) ...
[10:53:31.842] |  state: ‘created’
[10:53:31.842] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.842] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.842] |  Using MulticoreFutureBackend ...
[10:53:31.843] |  :  Launching futures ...
[10:53:31.843] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:31.843] |  :  .  |  getFutureData() ...
[10:53:31.843] |  :  .  |  :  getFutureCore() ...
[10:53:31.843] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:31.843] |  :  .  |  :  getFutureCore() ... done
[10:53:31.843] |  :  .  |  :  getFutureCapture() ...
[10:53:31.844] |  :  .  |  :  getFutureCapture() ... done
[10:53:31.844] |  :  .  |  :  getFutureContext() ...
[10:53:31.844] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.844] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:31.844] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.844] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:31.844] |  :  .  |  :  getFutureContext() ... done
[10:53:31.845] |  :  .  |  getFutureData() ... done
[10:53:31.845] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:31.845] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:31.847] |  :  .  |  MulticoreFuture started
[10:53:31.847] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:31.847] |  :  Launching futures ... done
[10:53:31.847] |  :  .  |  attachPackages() ...
[10:53:31.848] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:31.848] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:31.848] |  Using MulticoreFutureBackend ... done
[10:53:31.848] run() for Future (‘MulticoreFuture’) ... done
[10:53:31.848] |  :  .  |  attachPackages() ... DONE
[10:53:31.848] |  :  .  |  attachPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:31.848] |  :  .  |  :  packages: [n=0] 
[10:53:31.849] |  :  .  |  attachPackages() ... DONE
[10:53:31.849] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:31.852] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.852] |  Searching for globals ...
[10:53:31.852] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:31.853] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.853] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.854] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.854] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:31.855] |  :  .  |  :  .  |  New stack:
[10:53:31.856] |  :  globals found: [3] ‘+’, ‘value’, ‘a’
[10:53:31.856] |  Searching for globals ... DONE
[10:53:31.856] |  Resolving globals: TRUE
[10:53:31.857] |  Resolving any globals that are futures ...
[10:53:31.857] |  :  globals: [3] ‘+’, ‘value’, ‘a’
[10:53:31.857] |  Resolving any globals that are futures ... DONE
[10:53:31.857] |  Search for packages associated with the globals ...
[10:53:31.858] |  :  Packages associated with globals: [2] ‘base’, ‘future’
[10:53:31.858] |  :  Packages: [2] ‘base’, ‘future’
[10:53:31.859] |  Search for packages associated with the globals ... DONE
[10:53:31.859] |  Resolving futures part of globals (recursively) ...
[10:53:31.859] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:31.860] |  :  .  recursive: 99
[10:53:31.860] |  :  .  length: 1
[10:53:31.860] |  :  .  elements: ‘a’
[10:53:31.860] |  :  .  'obj' is MulticoreFuture
[10:53:31.855] |  :  .  |  :  .  |  List of 1
[10:53:31.855] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.855] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.855] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.855] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.855] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.855] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.855] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.861] |  :  .  |  :  .  |  Old stack:
[10:53:31.861] |  :  .  |  :  .  |  List of 1
[10:53:31.861] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.861] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.861] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.861] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.861] |  :  .  |  :  .  |      ...)  
[10:53:31.861] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.861] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.861] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:31.861] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.861] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.861] |  :  .  |  :  .  |      ...)  
[10:53:31.861] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.861] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.868] |  :  .  |  :  .  |  Not identical
[10:53:31.869] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:31.871] |  :  .  readImmediateCondition() ...
[10:53:31.871] |  :  .    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:31.871] |  :  .   - Number of RDS files: 0
[10:53:31.871] |  :  .  readImmediateCondition() ... DONE
[10:53:31.869] |  :  .  |  :  .  |  :  List of 2
[10:53:31.869] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.869] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.869] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.869] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.869] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.869] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.869] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.869] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.869] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.869] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.869] |  :  .  |  :  .  |  :      ...)  
[10:53:31.869] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.869] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.869] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:31.869] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.869] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.869] |  :  .  |  :  .  |  :      ...)  
[10:53:31.869] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.876] |  :  .  |  :  .  |  :  Formals differ
[10:53:31.876] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:31.876] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:31.876] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:31.876] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:31.876] |  :  .  |  :  .  List of future strategies:
[10:53:31.876] |  :  .  |  :  .  1. sequential:
[10:53:31.876] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:31.876] |  :  .  |  :  .     - tweaked: FALSE
[10:53:31.876] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.877] |  :  .  |  :  .  List of 1
[10:53:31.877] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.877] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.877] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.877] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.877] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.877] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.877] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.880] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:31.880] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:31.880] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.880] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:31.880] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.881] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:31.881] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:31.881] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:31.881] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.881] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.882] |  :  .  'obj' is MulticoreFuture
[10:53:31.885] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.885] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.885] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.886] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:31.886] |  :  .  |  :  .  |  :  New stack:
[10:53:31.886] |  :  .  |  :  .  |  :  List of 1
[10:53:31.886] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.886] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.886] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.886] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.886] |  :  .  |  :  .  |  :      ...)  
[10:53:31.886] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.886] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.886] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:31.886] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.886] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.886] |  :  .  |  :  .  |  :      ...)  
[10:53:31.886] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.886] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.889] |  :  .  |  :  .  |  :  Old stack:
[10:53:31.889] |  :  .  |  :  .  |  :  List of 1
[10:53:31.889] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.889] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.889] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.889] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.889] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.889] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.889] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.891] |  :  .  |  :  .  |  :  Not identical
[10:53:31.892] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:31.892] |  :  .  readImmediateCondition() ...
[10:53:31.892] |  :  .    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:31.893] |  :  .   - Number of RDS files: 0
[10:53:31.893] |  :  .  readImmediateCondition() ... DONE
[10:53:31.892] |  :  .  |  :  .  |  :  .  List of 2
[10:53:31.892] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.892] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.892] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.892] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.892] |  :  .  |  :  .  |  :  .      ...)  
[10:53:31.892] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.892] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.892] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:31.892] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.892] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.892] |  :  .  |  :  .  |  :  .      ...)  
[10:53:31.892] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.892] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.892] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.892] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.892] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.892] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.892] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.896] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:31.896] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:31.896] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:31.896] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:31.896] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:31.897] |  :  .  |  :  .  |  List of future strategies:
[10:53:31.897] |  :  .  |  :  .  |  1. multicore:
[10:53:31.897] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:31.897] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:31.897] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:31.897] |  :  .  |  :  .  |  List of 1
[10:53:31.897] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.897] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.897] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.897] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.897] |  :  .  |  :  .  |      ...)  
[10:53:31.897] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.897] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.897] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:31.897] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.897] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.897] |  :  .  |  :  .  |      ...)  
[10:53:31.897] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.897] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.900] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:31.900] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:31.900] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.900] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:31.900] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.900] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:31.901] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.901] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.901] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.903] |  :  .  'obj' is MulticoreFuture
[10:53:31.903] |  :  .  readImmediateCondition() ...
[10:53:31.903] |  :  .    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:31.904] |  :  .   - Number of RDS files: 0
[10:53:31.904] |  :  .  readImmediateCondition() ... DONE
[10:53:31.904] |  :  .  Future #1
[10:53:31.904] |  :  .  value(obj, ...) ...
[10:53:31.904] |  :  .  |  result() for MulticoreFuture ...
[10:53:31.905] |  :  .  |  :  readImmediateCondition() ...
[10:53:31.905] |  :  .  |  :    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:31.905] |  :  .  |  :   - Number of RDS files: 0
[10:53:31.906] |  :  .  |  :  readImmediateCondition() ... DONE
[10:53:31.906] |  :  .  |  :  result() for MulticoreFuture ...
[10:53:31.906] |  :  .  |  :  result() for MulticoreFuture ... done
[10:53:31.906] |  :  .  |  result() for MulticoreFuture ... done
[10:53:31.906] |  :  .  |  result() for MulticoreFuture ...
[10:53:31.907] |  :  .  |  result() for MulticoreFuture ... done
[10:53:31.907] |  :  .  value(obj, ...) ... done
[10:53:31.907] |  :  .  resolve(obj, ...) ...
[10:53:31.907] |  :  .  |  A MulticoreFuture was resolved
[10:53:31.907] |  :  .  resolve(obj, ...) ... done
[10:53:31.907] |  :  .  length: 0 (resolved future 1)
[10:53:31.907] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:31.908] |  :  globals: [1] ‘a’
[10:53:31.908] |  Resolving futures part of globals (recursively) ... DONE
[10:53:31.908] |  Packages after dropping 'base': [1] ‘future’
[10:53:31.908] |  Packages after dropping non-attached packages: [1] ‘future’
[10:53:31.908] |  globals: [1] ‘a’
[10:53:31.908] |  packages: [1] ‘future’
[10:53:31.908] getGlobalsAndPackages() ... done
[10:53:31.909] run() for Future (‘Future’) ...
[10:53:31.909] |  state: ‘created’
[10:53:31.909] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.909] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.909] |  Using MulticoreFutureBackend ...
[10:53:31.909] |  :  Launching futures ...
[10:53:31.910] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:31.910] |  :  .  |  getFutureData() ...
[10:53:31.910] |  :  .  |  :  getFutureCore() ...
[10:53:31.910] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘future’
[10:53:31.910] |  :  .  |  :  getFutureCore() ... done
[10:53:31.910] |  :  .  |  :  getFutureCapture() ...
[10:53:31.910] |  :  .  |  :  getFutureCapture() ... done
[10:53:31.910] |  :  .  |  :  getFutureContext() ...
[10:53:31.911] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.911] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:31.911] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.911] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:31.911] |  :  .  |  :  getFutureContext() ... done
[10:53:31.911] |  :  .  |  getFutureData() ... done
[10:53:31.911] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:31.912] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:31.913] |  :  .  |  MulticoreFuture started
[10:53:31.914] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:31.914] |  :  Launching futures ... done
[10:53:31.914] |  :  .  |  attachPackages() ...
[10:53:31.914] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:31.914] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:31.915] |  Using MulticoreFutureBackend ... done
[10:53:31.915] |  :  .  |  attachPackages() ... DONE
[10:53:31.915] run() for Future (‘MulticoreFuture’) ... done
[10:53:31.915] |  :  .  |  attachPackages() ...
[10:53:31.915] result() for MulticoreFuture ...
[10:53:31.915] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:31.915] |  :  .  |  attachPackages() ... DONE
[10:53:31.916] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.917] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:31.917] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.917] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.918] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.918] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:31.918] |  :  .  |  :  .  |  New stack:
[10:53:31.918] |  :  .  |  :  .  |  List of 1
[10:53:31.918] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.918] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.918] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.918] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.918] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.918] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.918] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.923] |  :  .  |  :  .  |  Old stack:
[10:53:31.923] |  :  .  |  :  .  |  List of 1
[10:53:31.923] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.923] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.923] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.923] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.923] |  :  .  |  :  .  |      ...)  
[10:53:31.923] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.923] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.923] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:31.923] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.923] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.923] |  :  .  |  :  .  |      ...)  
[10:53:31.923] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.923] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.931] |  :  .  |  :  .  |  Not identical
[10:53:31.931] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:31.932] |  :  .  |  :  .  |  :  List of 2
[10:53:31.932] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.932] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.932] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.932] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.932] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.932] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.932] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.932] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.932] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.932] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.932] |  :  .  |  :  .  |  :      ...)  
[10:53:31.932] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.932] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.932] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:31.932] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.932] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.932] |  :  .  |  :  .  |  :      ...)  
[10:53:31.932] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.942] |  :  .  |  :  .  |  :  Formals differ
[10:53:31.942] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:31.942] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:31.942] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:31.942] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:31.943] |  :  .  |  :  .  List of future strategies:
[10:53:31.943] |  :  .  |  :  .  1. sequential:
[10:53:31.943] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:31.943] |  :  .  |  :  .     - tweaked: FALSE
[10:53:31.943] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.943] |  :  .  |  :  .  List of 1
[10:53:31.943] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.943] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.943] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.943] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.943] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.943] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.943] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.946] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:31.947] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:31.947] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.947] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:31.947] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.947] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:31.948] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:31.948] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:31.948] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.948] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.948] |  :  .  |  assign_globals() ...
[10:53:31.948] |  :  .  |  List of 1
[10:53:31.948] |  :  .  |   $ a:Classes 'MulticoreFuture', 'MultiprocessFuture', 'Future' <environment: 0x560a719e3880> 
[10:53:31.948] |  :  .  |   - attr(*, "where")=List of 1
[10:53:31.948] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:53:31.948] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:31.948] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:31.948] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:31.948] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:31.951] |  :  .  |  - copied ‘a’ to environment
[10:53:31.951] |  :  .  |  assign_globals() ... done
[10:53:31.954] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.954] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:31.954] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:31.955] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:31.955] |  :  .  |  :  .  |  :  New stack:
[10:53:31.955] |  :  .  |  :  .  |  :  List of 1
[10:53:31.955] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.955] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.955] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.955] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.955] |  :  .  |  :  .  |  :      ...)  
[10:53:31.955] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.955] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.955] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:31.955] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.955] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.955] |  :  .  |  :  .  |  :      ...)  
[10:53:31.955] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.955] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.960] |  :  .  |  :  .  |  :  Old stack:
[10:53:31.960] |  :  .  |  :  .  |  :  List of 1
[10:53:31.960] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.960] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.960] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.960] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.960] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.960] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.960] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.962] |  :  .  |  :  .  |  :  Not identical
[10:53:31.962] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:31.963] |  :  .  |  :  .  |  :  .  List of 2
[10:53:31.963] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.963] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.963] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.963] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.963] |  :  .  |  :  .  |  :  .      ...)  
[10:53:31.963] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.963] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.963] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:31.963] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.963] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.963] |  :  .  |  :  .  |  :  .      ...)  
[10:53:31.963] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.963] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:31.963] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:31.963] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:31.963] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.963] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:31.963] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:31.967] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:31.967] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:31.968] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:31.968] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:31.968] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:31.968] |  :  .  |  :  .  |  List of future strategies:
[10:53:31.968] |  :  .  |  :  .  |  1. multicore:
[10:53:31.968] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:31.968] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:31.968] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:31.968] |  :  .  |  :  .  |  List of 1
[10:53:31.968] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:31.968] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:31.968] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:31.968] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.968] |  :  .  |  :  .  |      ...)  
[10:53:31.968] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.968] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.968] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:31.968] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:31.968] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:31.968] |  :  .  |  :  .  |      ...)  
[10:53:31.968] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:31.968] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:31.971] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:31.971] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:31.971] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.972] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:31.972] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.972] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:31.972] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:31.972] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.972] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:31.973] |  readImmediateCondition() ...
[10:53:31.973] |    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:31.973] |   - Number of RDS files: 0
[10:53:31.973] |  readImmediateCondition() ... DONE
[10:53:31.974] |  result() for MulticoreFuture ...
[10:53:31.974] |  result() for MulticoreFuture ... done
[10:53:31.974] |  signalConditions() ...
[10:53:31.974] |  :  include = ‘immediateCondition’
[10:53:31.974] |  :  exclude = 
[10:53:31.974] |  :  resignal = FALSE
[10:53:31.974] |  :  Number of conditions: 4
[10:53:31.975] |  signalConditions() ... done
[10:53:31.975] result() for MulticoreFuture ... done
[10:53:31.975] result() for MulticoreFuture ...
[10:53:31.975] result() for MulticoreFuture ... done
[10:53:31.975] signalConditions() ...
[10:53:31.975] |  include = ‘immediateCondition’
[10:53:31.975] |  exclude = 
[10:53:31.975] |  resignal = FALSE
[10:53:31.976] |  Number of conditions: 4
[10:53:31.976] signalConditions() ... done
[10:53:31.976] Future state: ‘finished’
[10:53:31.976] result() for MulticoreFuture ...
[10:53:31.976] result() for MulticoreFuture ... done
[10:53:31.976] signalConditions() ...
[10:53:31.976] |  include = ‘condition’
[10:53:31.977] |  exclude = ‘immediateCondition’
[10:53:31.977] |  resignal = TRUE
[10:53:31.977] |  Number of conditions: 4
[10:53:31.977] |  Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:31.951] |  :  .  |  result() for MulticoreFuture ...
[10:53:31.977] |  Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:31.952] |  :  .  |  result() for MulticoreFuture ... done
[10:53:31.977] |  Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:31.952] |  :  .  |  result() for MulticoreFuture ...
[10:53:31.977] |  Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:31.952] |  :  .  |  result() for MulticoreFuture ... done
[10:53:31.978] signalConditions() ... done
value(b) = 2
[10:53:31.978] result() for MulticoreFuture ...
[10:53:31.978] result() for MulticoreFuture ... done
[10:53:31.978] result() for MulticoreFuture ...
[10:53:31.978] result() for MulticoreFuture ... done
[10:53:31.978] signalConditions() ...
[10:53:31.979] |  include = ‘immediateCondition’
[10:53:31.979] |  exclude = 
[10:53:31.979] |  resignal = FALSE
[10:53:31.979] |  Number of conditions: 4
[10:53:31.979] signalConditions() ... done
[10:53:31.979] Future state: ‘finished’
[10:53:31.979] result() for MulticoreFuture ...
[10:53:31.979] result() for MulticoreFuture ... done
[10:53:31.980] signalConditions() ...
[10:53:31.980] |  include = ‘condition’
[10:53:31.980] |  exclude = ‘immediateCondition’
[10:53:31.980] |  resignal = TRUE
[10:53:31.980] |  Number of conditions: 4
[10:53:31.980] |  Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:31.951] |  :  .  |  result() for MulticoreFuture ...
[10:53:31.980] |  Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:31.952] |  :  .  |  result() for MulticoreFuture ... done
[10:53:31.980] |  Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:31.952] |  :  .  |  result() for MulticoreFuture ...
[10:53:31.981] |  Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:31.952] |  :  .  |  result() for MulticoreFuture ... done
[10:53:31.981] signalConditions() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:31.981] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:31.981] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:31.985] |  :  globals found: [0] 
[10:53:31.985] |  Searching for globals ... DONE
[10:53:31.985] |  globals: [0] <none>
[10:53:31.985] |  packages: [0] <none>
[10:53:31.985] getGlobalsAndPackages() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:31.986] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:31.986] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:31.988] |  :  globals found: [3] ‘+’, ‘value’, ‘a’
[10:53:31.988] |  Searching for globals ... DONE
[10:53:31.989] |  Resolving globals: TRUE
[10:53:31.989] |  Resolving any globals that are futures ...
[10:53:31.989] |  :  globals: [3] ‘+’, ‘value’, ‘a’
[10:53:31.989] |  Resolving any globals that are futures ... DONE
[10:53:31.989] |  Search for packages associated with the globals ...
[10:53:31.989] |  :  Packages associated with globals: [2] ‘base’, ‘future’
[10:53:31.990] |  :  Packages: [2] ‘base’, ‘future’
[10:53:31.990] |  Search for packages associated with the globals ... DONE
[10:53:31.990] |  Resolving futures part of globals (recursively) ...
[10:53:31.991] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:31.991] |  :  .  recursive: 99
[10:53:31.991] |  :  .  length: 1
[10:53:31.991] |  :  .  elements: ‘a’
[10:53:31.991] |  :  .  'obj' is Future
[10:53:31.991] |  :  .  run() for Future (‘Future’) ...
[10:53:31.992] |  :  .  |  state: ‘created’
[10:53:31.992] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.992] |  :  .  |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.992] |  :  .  |  Using MulticoreFutureBackend ...
[10:53:31.992] |  :  .  |  :  Launching futures ...
[10:53:31.992] |  :  .  |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:31.992] |  :  .  |  :  .  |  getFutureData() ...
[10:53:31.993] |  :  .  |  :  .  |  :  getFutureCore() ...
[10:53:31.993] |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:31.993] |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:53:31.993] |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:53:31.993] |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:53:31.993] |  :  .  |  :  .  |  :  getFutureContext() ...
[10:53:31.993] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:31.994] |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:31.994] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:31.994] |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:31.994] |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:53:31.994] |  :  .  |  :  .  |  getFutureData() ... done
[10:53:31.994] |  :  .  |  :  .  |  requestCore(..., workers = 2) ...
[10:53:31.995] |  :  .  |  :  .  |  requestCore(..., workers = 2) ...
[10:53:31.996] |  :  .  |  :  .  |  MulticoreFuture started
[10:53:31.997] |  :  .  |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:31.997] |  :  .  |  :  Launching futures ... done
[10:53:31.997] |  :  .  |  :  .  |  attachPackages() ...
[10:53:31.997] |  :  .  |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:31.997] |  :  .  |  :  .  |  :  packages: [n=1] ‘future’
[10:53:31.998] |  :  .  |  Using MulticoreFutureBackend ... done
[10:53:31.998] |  :  .  run() for Future (‘MulticoreFuture’) ... done
[10:53:31.998] |  :  .  |  :  .  |  attachPackages() ... DONE
[10:53:31.998] |  :  .  |  :  .  |  attachPackages() ...
[10:53:31.998] |  :  .  |  :  .  |  :  packages: [n=0] 
[10:53:31.998] |  :  .  |  :  .  |  attachPackages() ... DONE
[10:53:31.999] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.000] |  :  .  |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:32.000] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.001] |  :  .  |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.001] |  :  .  |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:32.001] |  :  .  |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:32.001] |  :  .  |  :  .  |  :  .  |  New stack:
[10:53:32.002] |  :  .  |  :  .  |  :  .  |  List of 1
[10:53:32.002] |  :  .  |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.002] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.002] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.002] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.002] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.002] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.002] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.006] |  :  .  |  :  .  |  :  .  |  Old stack:
[10:53:32.008] |  :  .  readImmediateCondition() ...
[10:53:32.008] |  :  .    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:32.009] |  :  .   - Number of RDS files: 0
[10:53:32.009] |  :  .  readImmediateCondition() ... DONE
[10:53:32.006] |  :  .  |  :  .  |  :  .  |  List of 1
[10:53:32.006] |  :  .  |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.006] |  :  .  |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.006] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.006] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.006] |  :  .  |  :  .  |  :  .  |      ...)  
[10:53:32.006] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.006] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.006] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:32.006] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.006] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.006] |  :  .  |  :  .  |  :  .  |      ...)  
[10:53:32.006] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.006] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.012] |  :  .  |  :  .  |  :  .  |  Not identical
[10:53:32.012] |  :  .  |  :  .  |  :  .  |  all.equal() for future ...
[10:53:32.019] |  :  .  'obj' is MulticoreFuture
[10:53:32.012] |  :  .  |  :  .  |  :  .  |  :  List of 2
[10:53:32.012] |  :  .  |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.012] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.012] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.012] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.012] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.012] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.012] |  :  .  |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.012] |  :  .  |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.012] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.012] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.012] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:53:32.012] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.012] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.012] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:32.012] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.012] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.012] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:53:32.012] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.023] |  :  .  |  :  .  |  :  .  |  :  Formals differ
[10:53:32.024] |  :  .  |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:32.024] |  :  .  |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:32.024] |  :  .  |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:32.024] |  :  .  |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:32.024] |  :  .  |  :  .  |  :  .  List of future strategies:
[10:53:32.024] |  :  .  |  :  .  |  :  .  1. sequential:
[10:53:32.024] |  :  .  |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:32.024] |  :  .  |  :  .  |  :  .     - tweaked: FALSE
[10:53:32.024] |  :  .  |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.025] |  :  .  |  :  .  |  :  .  List of 1
[10:53:32.025] |  :  .  |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.025] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.025] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.025] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.025] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.025] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.025] |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.029] |  :  .  |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:32.029] |  :  .  |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:32.029] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.029] |  :  .  |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:32.029] |  :  .  |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.030] |  :  .  readImmediateCondition() ...
[10:53:32.030] |  :  .  |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:32.030] |  :  .    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:32.030] |  :  .  |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:32.030] |  :  .   - Number of RDS files: 0
[10:53:32.030] |  :  .  |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:32.030] |  :  .  readImmediateCondition() ... DONE
[10:53:32.030] |  :  .  |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:32.031] |  :  .  |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.033] |  :  .  |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.033] |  :  .  |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.033] |  :  .  |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:32.033] |  :  .  |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:32.033] |  :  .  |  :  .  |  :  .  |  :  New stack:
[10:53:32.033] |  :  .  |  :  .  |  :  .  |  :  List of 1
[10:53:32.033] |  :  .  |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.033] |  :  .  |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.033] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.033] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.033] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:53:32.033] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.033] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.033] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:32.033] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.033] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.033] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:53:32.033] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.033] |  :  .  |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.036] |  :  .  |  :  .  |  :  .  |  :  Old stack:
[10:53:32.037] |  :  .  |  :  .  |  :  .  |  :  List of 1
[10:53:32.037] |  :  .  |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.037] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.037] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.037] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.037] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.037] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.037] |  :  .  |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.039] |  :  .  |  :  .  |  :  .  |  :  Not identical
[10:53:32.039] |  :  .  |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:32.040] |  :  .  'obj' is MulticoreFuture
[10:53:32.039] |  :  .  |  :  .  |  :  .  |  :  .  List of 2
[10:53:32.039] |  :  .  |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.039] |  :  .  |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.039] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.039] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.039] |  :  .  |  :  .  |  :  .  |  :  .      ...)  
[10:53:32.039] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.039] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.039] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:32.039] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.039] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.039] |  :  .  |  :  .  |  :  .  |  :  .      ...)  
[10:53:32.039] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.039] |  :  .  |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.039] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.039] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.039] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.039] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.039] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.046] |  :  .  |  :  .  |  :  .  |  :  .  Formals differ
[10:53:32.046] |  :  .  |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:32.046] |  :  .  |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:32.046] |  :  .  |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:32.046] |  :  .  |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:32.046] |  :  .  |  :  .  |  :  .  |  List of future strategies:
[10:53:32.046] |  :  .  |  :  .  |  :  .  |  1. multicore:
[10:53:32.046] |  :  .  |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:32.046] |  :  .  |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:32.046] |  :  .  |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:32.047] |  :  .  |  :  .  |  :  .  |  List of 1
[10:53:32.047] |  :  .  |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.047] |  :  .  |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.047] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.047] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.047] |  :  .  |  :  .  |  :  .  |      ...)  
[10:53:32.047] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.047] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.047] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:32.047] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.047] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.047] |  :  .  |  :  .  |  :  .  |      ...)  
[10:53:32.047] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.047] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.050] |  :  .  |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:32.050] |  :  .  |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:32.050] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.050] |  :  .  |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:32.050] |  :  .  |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.050] |  :  .  |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:32.051] |  :  .  |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:32.051] |  :  .  |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.051] |  :  .  |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.051] |  :  .  readImmediateCondition() ...
[10:53:32.051] |  :  .    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:32.051] |  :  .   - Number of RDS files: 0
[10:53:32.051] |  :  .  readImmediateCondition() ... DONE
[10:53:32.062] |  :  .  'obj' is MulticoreFuture
[10:53:32.062] |  :  .  readImmediateCondition() ...
[10:53:32.062] |  :  .    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:32.062] |  :  .   - Number of RDS files: 0
[10:53:32.062] |  :  .  readImmediateCondition() ... DONE
[10:53:32.063] |  :  .  Future #1
[10:53:32.063] |  :  .  value(obj, ...) ...
[10:53:32.063] |  :  .  |  result() for MulticoreFuture ...
[10:53:32.064] |  :  .  |  :  readImmediateCondition() ...
[10:53:32.064] |  :  .  |  :    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:32.064] |  :  .  |  :   - Number of RDS files: 0
[10:53:32.064] |  :  .  |  :  readImmediateCondition() ... DONE
[10:53:32.064] |  :  .  |  :  result() for MulticoreFuture ...
[10:53:32.064] |  :  .  |  :  result() for MulticoreFuture ... done
[10:53:32.065] |  :  .  |  result() for MulticoreFuture ... done
[10:53:32.065] |  :  .  |  result() for MulticoreFuture ...
[10:53:32.065] |  :  .  |  result() for MulticoreFuture ... done
[10:53:32.065] |  :  .  value(obj, ...) ... done
[10:53:32.065] |  :  .  resolve(obj, ...) ...
[10:53:32.065] |  :  .  |  A MulticoreFuture was resolved
[10:53:32.066] |  :  .  resolve(obj, ...) ... done
[10:53:32.066] |  :  .  length: 0 (resolved future 1)
[10:53:32.066] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:32.066] |  :  globals: [1] ‘a’
[10:53:32.066] |  Resolving futures part of globals (recursively) ... DONE
[10:53:32.066] |  Packages after dropping 'base': [1] ‘future’
[10:53:32.067] |  Packages after dropping non-attached packages: [1] ‘future’
[10:53:32.067] |  globals: [1] ‘a’
[10:53:32.067] |  packages: [1] ‘future’
[10:53:32.067] getGlobalsAndPackages() ... done
[10:53:32.067] run() for Future (‘Future’) ...
[10:53:32.068] |  state: ‘created’
[10:53:32.068] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.068] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.068] |  Using MulticoreFutureBackend ...
[10:53:32.068] |  :  Launching futures ...
[10:53:32.068] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:32.068] |  :  .  |  getFutureData() ...
[10:53:32.069] |  :  .  |  :  getFutureCore() ...
[10:53:32.069] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘future’
[10:53:32.069] |  :  .  |  :  getFutureCore() ... done
[10:53:32.069] |  :  .  |  :  getFutureCapture() ...
[10:53:32.069] |  :  .  |  :  getFutureCapture() ... done
[10:53:32.069] |  :  .  |  :  getFutureContext() ...
[10:53:32.069] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.070] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:32.070] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.070] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:32.070] |  :  .  |  :  getFutureContext() ... done
[10:53:32.070] |  :  .  |  getFutureData() ... done
[10:53:32.070] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:32.071] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:32.072] |  :  .  |  MulticoreFuture started
[10:53:32.073] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:32.073] |  :  Launching futures ... done
[10:53:32.073] |  :  .  |  attachPackages() ...
[10:53:32.073] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:32.073] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:32.073] |  Using MulticoreFutureBackend ... done
[10:53:32.074] |  :  .  |  attachPackages() ... DONE
[10:53:32.073] run() for Future (‘MulticoreFuture’) ... done
[10:53:32.074] |  :  .  |  attachPackages() ...
[10:53:32.074] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:32.074] result() for MulticoreFuture ...
[10:53:32.074] |  :  .  |  attachPackages() ... DONE
[10:53:32.075] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.075] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:32.076] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.076] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.076] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:32.077] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:32.077] |  :  .  |  :  .  |  New stack:
[10:53:32.077] |  :  .  |  :  .  |  List of 1
[10:53:32.077] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.077] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.077] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.077] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.077] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.077] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.077] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.087] |  :  .  |  :  .  |  Old stack:
[10:53:32.087] |  :  .  |  :  .  |  List of 1
[10:53:32.087] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.087] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.087] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.087] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.087] |  :  .  |  :  .  |      ...)  
[10:53:32.087] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.087] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.087] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:32.087] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.087] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.087] |  :  .  |  :  .  |      ...)  
[10:53:32.087] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.087] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.094] |  :  .  |  :  .  |  Not identical
[10:53:32.094] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:32.094] |  :  .  |  :  .  |  :  List of 2
[10:53:32.094] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.094] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.094] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.094] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.094] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.094] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.094] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.094] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.094] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.094] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.094] |  :  .  |  :  .  |  :      ...)  
[10:53:32.094] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.094] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.094] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:32.094] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.094] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.094] |  :  .  |  :  .  |  :      ...)  
[10:53:32.094] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.101] |  :  .  |  :  .  |  :  Formals differ
[10:53:32.101] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:32.101] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:32.101] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:32.102] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:32.102] |  :  .  |  :  .  List of future strategies:
[10:53:32.102] |  :  .  |  :  .  1. sequential:
[10:53:32.102] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:32.102] |  :  .  |  :  .     - tweaked: FALSE
[10:53:32.102] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.102] |  :  .  |  :  .  List of 1
[10:53:32.102] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.102] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.102] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.102] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.102] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.102] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.102] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.105] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:32.106] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:32.106] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.106] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:32.106] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.106] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:32.107] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:32.107] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:32.107] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:32.107] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.107] |  :  .  |  assign_globals() ...
[10:53:32.107] |  :  .  |  List of 1
[10:53:32.107] |  :  .  |   $ a:Classes 'MulticoreFuture', 'MultiprocessFuture', 'Future' <environment: 0x560a71647e98> 
[10:53:32.107] |  :  .  |   - attr(*, "where")=List of 1
[10:53:32.107] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:53:32.107] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:32.107] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:32.107] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:32.107] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:32.112] |  :  .  |  - copied ‘a’ to environment
[10:53:32.112] |  :  .  |  assign_globals() ... done
[10:53:32.116] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.116] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.116] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:32.116] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:32.116] |  :  .  |  :  .  |  :  New stack:
[10:53:32.116] |  :  .  |  :  .  |  :  List of 1
[10:53:32.116] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.116] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.116] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.116] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.116] |  :  .  |  :  .  |  :      ...)  
[10:53:32.116] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.116] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.116] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:32.116] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.116] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.116] |  :  .  |  :  .  |  :      ...)  
[10:53:32.116] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.116] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.120] |  :  .  |  :  .  |  :  Old stack:
[10:53:32.120] |  :  .  |  :  .  |  :  List of 1
[10:53:32.120] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.120] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.120] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.120] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.120] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.120] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.120] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.122] |  :  .  |  :  .  |  :  Not identical
[10:53:32.122] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:32.122] |  :  .  |  :  .  |  :  .  List of 2
[10:53:32.122] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.122] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.122] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.122] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.122] |  :  .  |  :  .  |  :  .      ...)  
[10:53:32.122] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.122] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.122] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:32.122] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.122] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.122] |  :  .  |  :  .  |  :  .      ...)  
[10:53:32.122] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.122] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.122] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.122] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.122] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.122] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.122] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.127] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:32.127] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:32.127] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:32.127] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:32.127] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:32.127] |  :  .  |  :  .  |  List of future strategies:
[10:53:32.127] |  :  .  |  :  .  |  1. multicore:
[10:53:32.127] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:32.127] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:32.127] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:32.127] |  :  .  |  :  .  |  List of 1
[10:53:32.127] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.127] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.127] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.127] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.127] |  :  .  |  :  .  |      ...)  
[10:53:32.127] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.127] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.127] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:32.127] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.127] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.127] |  :  .  |  :  .  |      ...)  
[10:53:32.127] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.127] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.132] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:32.132] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:32.132] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.133] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:32.133] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.133] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:32.133] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:32.133] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.133] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.134] |  readImmediateCondition() ...
[10:53:32.134] |    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:32.134] |   - Number of RDS files: 0
[10:53:32.134] |  readImmediateCondition() ... DONE
[10:53:32.135] |  result() for MulticoreFuture ...
[10:53:32.135] |  result() for MulticoreFuture ... done
[10:53:32.135] |  signalConditions() ...
[10:53:32.135] |  :  include = ‘immediateCondition’
[10:53:32.135] |  :  exclude = 
[10:53:32.135] |  :  resignal = FALSE
[10:53:32.135] |  :  Number of conditions: 4
[10:53:32.136] |  signalConditions() ... done
[10:53:32.136] result() for MulticoreFuture ... done
[10:53:32.136] result() for MulticoreFuture ...
[10:53:32.136] result() for MulticoreFuture ... done
[10:53:32.136] signalConditions() ...
[10:53:32.136] |  include = ‘immediateCondition’
[10:53:32.136] |  exclude = 
[10:53:32.136] |  resignal = FALSE
[10:53:32.139] |  Number of conditions: 4
[10:53:32.139] signalConditions() ... done
[10:53:32.139] Future state: ‘finished’
[10:53:32.139] result() for MulticoreFuture ...
[10:53:32.140] result() for MulticoreFuture ... done
[10:53:32.140] signalConditions() ...
[10:53:32.140] |  include = ‘condition’
[10:53:32.140] |  exclude = ‘immediateCondition’
[10:53:32.141] |  resignal = TRUE
[10:53:32.141] |  Number of conditions: 4
[10:53:32.141] |  Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:32.112] |  :  .  |  result() for MulticoreFuture ...
[10:53:32.141] |  Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:32.113] |  :  .  |  result() for MulticoreFuture ... done
[10:53:32.141] |  Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:32.113] |  :  .  |  result() for MulticoreFuture ...
[10:53:32.142] |  Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:32.113] |  :  .  |  result() for MulticoreFuture ... done
[10:53:32.142] signalConditions() ... done
value(b) = 2
[10:53:32.142] result() for MulticoreFuture ...
[10:53:32.143] result() for MulticoreFuture ... done
[10:53:32.143] result() for MulticoreFuture ...
[10:53:32.143] result() for MulticoreFuture ... done
[10:53:32.143] signalConditions() ...
[10:53:32.143] |  include = ‘immediateCondition’
[10:53:32.143] |  exclude = 
[10:53:32.144] |  resignal = FALSE
[10:53:32.144] |  Number of conditions: 4
[10:53:32.144] signalConditions() ... done
[10:53:32.144] Future state: ‘finished’
[10:53:32.144] result() for MulticoreFuture ...
[10:53:32.144] result() for MulticoreFuture ... done
[10:53:32.145] signalConditions() ...
[10:53:32.145] |  include = ‘condition’
[10:53:32.145] |  exclude = ‘immediateCondition’
[10:53:32.145] |  resignal = TRUE
[10:53:32.145] |  Number of conditions: 4
[10:53:32.145] |  Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:32.112] |  :  .  |  result() for MulticoreFuture ...
[10:53:32.145] |  Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:32.113] |  :  .  |  result() for MulticoreFuture ... done
[10:53:32.146] |  Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:32.113] |  :  .  |  result() for MulticoreFuture ...
[10:53:32.146] |  Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:32.113] |  :  .  |  result() for MulticoreFuture ... done
[10:53:32.146] signalConditions() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:32.147] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:32.147] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:32.148] |  :  globals found: [0] 
[10:53:32.148] |  Searching for globals ... DONE
[10:53:32.148] |  globals: [0] <none>
[10:53:32.148] |  packages: [0] <none>
[10:53:32.149] getGlobalsAndPackages() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:32.149] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:32.149] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:32.151] |  :  globals found: [3] ‘+’, ‘value’, ‘a’
[10:53:32.151] |  Searching for globals ... DONE
[10:53:32.151] |  Resolving globals: TRUE
[10:53:32.152] |  Resolving any globals that are futures ...
[10:53:32.152] |  :  globals: [3] ‘+’, ‘value’, ‘a’
[10:53:32.152] |  Resolving any globals that are futures ... DONE
[10:53:32.152] |  Search for packages associated with the globals ...
[10:53:32.152] |  :  Packages associated with globals: [2] ‘base’, ‘future’
[10:53:32.153] |  :  Packages: [2] ‘base’, ‘future’
[10:53:32.153] |  Search for packages associated with the globals ... DONE
[10:53:32.153] |  Resolving futures part of globals (recursively) ...
[10:53:32.154] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:32.154] |  :  .  recursive: 99
[10:53:32.154] |  :  .  length: 1
[10:53:32.154] |  :  .  elements: ‘a’
[10:53:32.154] |  :  .  'obj' is Future
[10:53:32.155] |  :  .  run() for Future (‘Future’) ...
[10:53:32.155] |  :  .  |  state: ‘created’
[10:53:32.155] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.155] |  :  .  |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.155] |  :  .  |  Using MulticoreFutureBackend ...
[10:53:32.155] |  :  .  |  :  Launching futures ...
[10:53:32.156] |  :  .  |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:32.156] |  :  .  |  :  .  |  getFutureData() ...
[10:53:32.156] |  :  .  |  :  .  |  :  getFutureCore() ...
[10:53:32.156] |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:32.156] |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:53:32.156] |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:53:32.157] |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:53:32.157] |  :  .  |  :  .  |  :  getFutureContext() ...
[10:53:32.157] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.157] |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:32.157] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.157] |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:32.158] |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:53:32.158] |  :  .  |  :  .  |  getFutureData() ... done
[10:53:32.158] |  :  .  |  :  .  |  requestCore(..., workers = 2) ...
[10:53:32.158] |  :  .  |  :  .  |  requestCore(..., workers = 2) ...
[10:53:32.161] |  :  .  |  :  .  |  MulticoreFuture started
[10:53:32.162] |  :  .  |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:32.163] |  :  .  |  :  .  |  attachPackages() ...
[10:53:32.164] |  :  .  |  :  .  |  :  packages: [n=1] ‘future’
[10:53:32.164] |  :  .  |  :  .  |  attachPackages() ... DONE
[10:53:32.165] |  :  .  |  :  .  |  attachPackages() ...
[10:53:32.162] |  :  .  |  :  Launching futures ... done
[10:53:32.165] |  :  .  |  :  .  |  :  packages: [n=0] 
[10:53:32.165] |  :  .  |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:32.165] |  :  .  |  :  .  |  attachPackages() ... DONE
[10:53:32.165] |  :  .  |  Using MulticoreFutureBackend ... done
[10:53:32.166] |  :  .  run() for Future (‘MulticoreFuture’) ... done
[10:53:32.167] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.167] |  :  .  |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:32.168] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.168] |  :  .  |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.169] |  :  .  |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:32.169] |  :  .  |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:32.169] |  :  .  |  :  .  |  :  .  |  New stack:
[10:53:32.169] |  :  .  |  :  .  |  :  .  |  List of 1
[10:53:32.169] |  :  .  |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.169] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.169] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.169] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.169] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.169] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.169] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.174] |  :  .  |  :  .  |  :  .  |  Old stack:
[10:53:32.176] |  :  .  readImmediateCondition() ...
[10:53:32.176] |  :  .    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:32.177] |  :  .   - Number of RDS files: 0
[10:53:32.177] |  :  .  readImmediateCondition() ... DONE
[10:53:32.174] |  :  .  |  :  .  |  :  .  |  List of 1
[10:53:32.174] |  :  .  |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.174] |  :  .  |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.174] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.174] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.174] |  :  .  |  :  .  |  :  .  |      ...)  
[10:53:32.174] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.174] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.174] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:32.174] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.174] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.174] |  :  .  |  :  .  |  :  .  |      ...)  
[10:53:32.174] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.174] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.185] |  :  .  |  :  .  |  :  .  |  Not identical
[10:53:32.186] |  :  .  |  :  .  |  :  .  |  all.equal() for future ...
[10:53:32.187] |  :  .  'obj' is MulticoreFuture
[10:53:32.186] |  :  .  |  :  .  |  :  .  |  :  List of 2
[10:53:32.186] |  :  .  |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.186] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.186] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.186] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.186] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.186] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.186] |  :  .  |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.186] |  :  .  |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.186] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.186] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.186] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:53:32.186] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.186] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.186] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:32.186] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.186] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.186] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:53:32.186] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.195] |  :  .  |  :  .  |  :  .  |  :  Formals differ
[10:53:32.195] |  :  .  |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:32.195] |  :  .  |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:32.195] |  :  .  |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:32.195] |  :  .  |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:32.196] |  :  .  |  :  .  |  :  .  List of future strategies:
[10:53:32.196] |  :  .  |  :  .  |  :  .  1. sequential:
[10:53:32.196] |  :  .  |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:32.196] |  :  .  |  :  .  |  :  .     - tweaked: FALSE
[10:53:32.196] |  :  .  |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.198] |  :  .  readImmediateCondition() ...
[10:53:32.198] |  :  .    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:32.198] |  :  .   - Number of RDS files: 0
[10:53:32.199] |  :  .  readImmediateCondition() ... DONE
[10:53:32.196] |  :  .  |  :  .  |  :  .  List of 1
[10:53:32.196] |  :  .  |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.196] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.196] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.196] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.196] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.196] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.196] |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.200] |  :  .  |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:32.200] |  :  .  |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:32.200] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.200] |  :  .  |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:32.200] |  :  .  |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.201] |  :  .  |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:32.201] |  :  .  |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:32.201] |  :  .  |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:32.201] |  :  .  |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:32.201] |  :  .  |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.203] |  :  .  |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.204] |  :  .  |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.204] |  :  .  |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:32.204] |  :  .  |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:32.204] |  :  .  |  :  .  |  :  .  |  :  New stack:
[10:53:32.204] |  :  .  |  :  .  |  :  .  |  :  List of 1
[10:53:32.204] |  :  .  |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.204] |  :  .  |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.204] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.204] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.204] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:53:32.204] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.204] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.204] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:32.204] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.204] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.204] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:53:32.204] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.204] |  :  .  |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.207] |  :  .  |  :  .  |  :  .  |  :  Old stack:
[10:53:32.209] |  :  .  'obj' is MulticoreFuture
[10:53:32.207] |  :  .  |  :  .  |  :  .  |  :  List of 1
[10:53:32.207] |  :  .  |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.207] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.207] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.207] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.207] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.207] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.207] |  :  .  |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.212] |  :  .  |  :  .  |  :  .  |  :  Not identical
[10:53:32.212] |  :  .  |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:32.212] |  :  .  |  :  .  |  :  .  |  :  .  List of 2
[10:53:32.212] |  :  .  |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.212] |  :  .  |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.212] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.212] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.212] |  :  .  |  :  .  |  :  .  |  :  .      ...)  
[10:53:32.212] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.212] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.212] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:32.212] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.212] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.212] |  :  .  |  :  .  |  :  .  |  :  .      ...)  
[10:53:32.212] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.212] |  :  .  |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.212] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.212] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.212] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.212] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.212] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.217] |  :  .  |  :  .  |  :  .  |  :  .  Formals differ
[10:53:32.217] |  :  .  |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:32.218] |  :  .  |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:32.218] |  :  .  |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:32.218] |  :  .  |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:32.218] |  :  .  |  :  .  |  :  .  |  List of future strategies:
[10:53:32.218] |  :  .  |  :  .  |  :  .  |  1. multicore:
[10:53:32.218] |  :  .  |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:32.218] |  :  .  |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:32.218] |  :  .  |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:32.219] |  :  .  readImmediateCondition() ...
[10:53:32.219] |  :  .    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:32.220] |  :  .   - Number of RDS files: 0
[10:53:32.220] |  :  .  readImmediateCondition() ... DONE
[10:53:32.218] |  :  .  |  :  .  |  :  .  |  List of 1
[10:53:32.218] |  :  .  |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.218] |  :  .  |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.218] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.218] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.218] |  :  .  |  :  .  |  :  .  |      ...)  
[10:53:32.218] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.218] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.218] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:32.218] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.218] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.218] |  :  .  |  :  .  |  :  .  |      ...)  
[10:53:32.218] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.218] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.222] |  :  .  |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:32.222] |  :  .  |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:32.222] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.222] |  :  .  |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:32.222] |  :  .  |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.222] |  :  .  |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:32.223] |  :  .  |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:32.223] |  :  .  |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.223] |  :  .  |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.230] |  :  .  'obj' is MulticoreFuture
[10:53:32.231] |  :  .  readImmediateCondition() ...
[10:53:32.231] |  :  .    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:32.231] |  :  .   - Number of RDS files: 0
[10:53:32.231] |  :  .  readImmediateCondition() ... DONE
[10:53:32.231] |  :  .  Future #1
[10:53:32.231] |  :  .  value(obj, ...) ...
[10:53:32.232] |  :  .  |  result() for MulticoreFuture ...
[10:53:32.232] |  :  .  |  :  readImmediateCondition() ...
[10:53:32.232] |  :  .  |  :    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:32.233] |  :  .  |  :   - Number of RDS files: 0
[10:53:32.233] |  :  .  |  :  readImmediateCondition() ... DONE
[10:53:32.233] |  :  .  |  :  result() for MulticoreFuture ...
[10:53:32.233] |  :  .  |  :  result() for MulticoreFuture ... done
[10:53:32.234] |  :  .  |  result() for MulticoreFuture ... done
[10:53:32.234] |  :  .  |  result() for MulticoreFuture ...
[10:53:32.234] |  :  .  |  result() for MulticoreFuture ... done
[10:53:32.234] |  :  .  value(obj, ...) ... done
[10:53:32.234] |  :  .  resolve(obj, ...) ...
[10:53:32.235] |  :  .  |  A MulticoreFuture was resolved
[10:53:32.235] |  :  .  resolve(obj, ...) ... done
[10:53:32.235] |  :  .  length: 0 (resolved future 1)
[10:53:32.235] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:32.236] |  :  globals: [1] ‘a’
[10:53:32.236] |  Resolving futures part of globals (recursively) ... DONE
[10:53:32.236] |  Packages after dropping 'base': [1] ‘future’
[10:53:32.236] |  Packages after dropping non-attached packages: [1] ‘future’
[10:53:32.237] |  globals: [1] ‘a’
[10:53:32.237] |  packages: [1] ‘future’
[10:53:32.237] getGlobalsAndPackages() ... done
[10:53:32.238] run() for Future (‘Future’) ...
[10:53:32.238] |  state: ‘created’
[10:53:32.240] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.240] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.240] |  Using MulticoreFutureBackend ...
[10:53:32.240] |  :  Launching futures ...
[10:53:32.241] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:32.241] |  :  .  |  getFutureData() ...
[10:53:32.241] |  :  .  |  :  getFutureCore() ...
[10:53:32.241] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘future’
[10:53:32.242] |  :  .  |  :  getFutureCore() ... done
[10:53:32.242] |  :  .  |  :  getFutureCapture() ...
[10:53:32.242] |  :  .  |  :  getFutureCapture() ... done
[10:53:32.242] |  :  .  |  :  getFutureContext() ...
[10:53:32.242] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.243] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:32.243] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.243] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:32.243] |  :  .  |  :  getFutureContext() ... done
[10:53:32.243] |  :  .  |  getFutureData() ... done
[10:53:32.244] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:32.244] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:32.246] |  :  .  |  MulticoreFuture started
[10:53:32.247] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:32.247] |  :  .  |  attachPackages() ...
[10:53:32.247] |  :  Launching futures ... done
[10:53:32.247] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:32.248] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:32.248] |  :  .  |  attachPackages() ... DONE
[10:53:32.248] |  Using MulticoreFutureBackend ... done
[10:53:32.249] |  :  .  |  attachPackages() ...
[10:53:32.249] run() for Future (‘MulticoreFuture’) ... done
[10:53:32.249] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:32.249] result() for MulticoreFuture ...
[10:53:32.250] |  :  .  |  attachPackages() ... DONE
[10:53:32.251] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.251] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:32.252] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.253] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.253] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:32.254] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:32.254] |  :  .  |  :  .  |  New stack:
[10:53:32.254] |  :  .  |  :  .  |  List of 1
[10:53:32.254] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.254] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.254] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.254] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.254] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.254] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.254] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.260] |  :  .  |  :  .  |  Old stack:
[10:53:32.260] |  :  .  |  :  .  |  List of 1
[10:53:32.260] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.260] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.260] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.260] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.260] |  :  .  |  :  .  |      ...)  
[10:53:32.260] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.260] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.260] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:32.260] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.260] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.260] |  :  .  |  :  .  |      ...)  
[10:53:32.260] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.260] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.265] |  :  .  |  :  .  |  Not identical
[10:53:32.265] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:32.265] |  :  .  |  :  .  |  :  List of 2
[10:53:32.265] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.265] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.265] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.265] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.265] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.265] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.265] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.265] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.265] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.265] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.265] |  :  .  |  :  .  |  :      ...)  
[10:53:32.265] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.265] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.265] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:32.265] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.265] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.265] |  :  .  |  :  .  |  :      ...)  
[10:53:32.265] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.272] |  :  .  |  :  .  |  :  Formals differ
[10:53:32.272] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:32.272] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:32.272] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:32.272] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:32.272] |  :  .  |  :  .  List of future strategies:
[10:53:32.272] |  :  .  |  :  .  1. sequential:
[10:53:32.272] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:32.272] |  :  .  |  :  .     - tweaked: FALSE
[10:53:32.272] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.273] |  :  .  |  :  .  List of 1
[10:53:32.273] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.273] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.273] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.273] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.273] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.273] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.273] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.278] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:32.278] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:32.279] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.279] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:32.279] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.279] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:32.279] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:32.280] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:32.280] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:32.280] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.280] |  :  .  |  assign_globals() ...
[10:53:32.280] |  :  .  |  List of 1
[10:53:32.280] |  :  .  |   $ a:Classes 'MulticoreFuture', 'MultiprocessFuture', 'Future' <environment: 0x560a70b18210> 
[10:53:32.280] |  :  .  |   - attr(*, "where")=List of 1
[10:53:32.280] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:53:32.280] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:32.280] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:32.280] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:32.280] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:32.283] |  :  .  |  - copied ‘a’ to environment
[10:53:32.283] |  :  .  |  assign_globals() ... done
[10:53:32.286] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.287] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.287] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:32.287] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:32.287] |  :  .  |  :  .  |  :  New stack:
[10:53:32.287] |  :  .  |  :  .  |  :  List of 1
[10:53:32.287] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.287] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.287] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.287] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.287] |  :  .  |  :  .  |  :      ...)  
[10:53:32.287] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.287] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.287] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:32.287] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.287] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.287] |  :  .  |  :  .  |  :      ...)  
[10:53:32.287] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.287] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.290] |  :  .  |  :  .  |  :  Old stack:
[10:53:32.290] |  :  .  |  :  .  |  :  List of 1
[10:53:32.290] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.290] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.290] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.290] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.290] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.290] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.290] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.293] |  :  .  |  :  .  |  :  Not identical
[10:53:32.293] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:32.293] |  :  .  |  :  .  |  :  .  List of 2
[10:53:32.293] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.293] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.293] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.293] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.293] |  :  .  |  :  .  |  :  .      ...)  
[10:53:32.293] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.293] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.293] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:32.293] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.293] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.293] |  :  .  |  :  .  |  :  .      ...)  
[10:53:32.293] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.293] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.293] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.293] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.293] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.293] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.293] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.299] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:32.299] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:32.300] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:32.300] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:32.300] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:32.300] |  :  .  |  :  .  |  List of future strategies:
[10:53:32.300] |  :  .  |  :  .  |  1. multicore:
[10:53:32.300] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:32.300] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:32.300] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:32.300] |  :  .  |  :  .  |  List of 1
[10:53:32.300] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.300] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.300] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.300] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.300] |  :  .  |  :  .  |      ...)  
[10:53:32.300] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.300] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.300] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:32.300] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.300] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.300] |  :  .  |  :  .  |      ...)  
[10:53:32.300] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.300] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.304] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:32.304] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:32.304] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.304] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:32.304] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.304] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:32.305] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:32.305] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.305] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.305] |  readImmediateCondition() ...
[10:53:32.306] |    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:32.306] |   - Number of RDS files: 0
[10:53:32.306] |  readImmediateCondition() ... DONE
[10:53:32.307] |  result() for MulticoreFuture ...
[10:53:32.307] |  result() for MulticoreFuture ... done
[10:53:32.307] |  signalConditions() ...
[10:53:32.307] |  :  include = ‘immediateCondition’
[10:53:32.307] |  :  exclude = 
[10:53:32.308] |  :  resignal = FALSE
[10:53:32.308] |  :  Number of conditions: 4
[10:53:32.308] |  signalConditions() ... done
[10:53:32.308] result() for MulticoreFuture ... done
[10:53:32.308] result() for MulticoreFuture ...
[10:53:32.309] result() for MulticoreFuture ... done
[10:53:32.309] signalConditions() ...
[10:53:32.309] |  include = ‘immediateCondition’
[10:53:32.309] |  exclude = 
[10:53:32.309] |  resignal = FALSE
[10:53:32.309] |  Number of conditions: 4
[10:53:32.310] signalConditions() ... done
[10:53:32.310] Future state: ‘finished’
[10:53:32.310] result() for MulticoreFuture ...
[10:53:32.310] result() for MulticoreFuture ... done
[10:53:32.310] signalConditions() ...
[10:53:32.311] |  include = ‘condition’
[10:53:32.311] |  exclude = ‘immediateCondition’
[10:53:32.311] |  resignal = TRUE
[10:53:32.311] |  Number of conditions: 4
[10:53:32.311] |  Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:32.284] |  :  .  |  result() for MulticoreFuture ...
[10:53:32.311] |  Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:32.284] |  :  .  |  result() for MulticoreFuture ... done
[10:53:32.311] |  Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:32.284] |  :  .  |  result() for MulticoreFuture ...
[10:53:32.312] |  Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:32.284] |  :  .  |  result() for MulticoreFuture ... done
[10:53:32.312] signalConditions() ... done
value(b) = 2
[10:53:32.312] result() for MulticoreFuture ...
[10:53:32.312] result() for MulticoreFuture ... done
[10:53:32.312] result() for MulticoreFuture ...
[10:53:32.312] result() for MulticoreFuture ... done
[10:53:32.312] signalConditions() ...
[10:53:32.313] |  include = ‘immediateCondition’
[10:53:32.313] |  exclude = 
[10:53:32.313] |  resignal = FALSE
[10:53:32.313] |  Number of conditions: 4
[10:53:32.313] signalConditions() ... done
[10:53:32.313] Future state: ‘finished’
[10:53:32.313] result() for MulticoreFuture ...
[10:53:32.313] result() for MulticoreFuture ... done
[10:53:32.314] signalConditions() ...
[10:53:32.314] |  include = ‘condition’
[10:53:32.314] |  exclude = ‘immediateCondition’
[10:53:32.314] |  resignal = TRUE
[10:53:32.314] |  Number of conditions: 4
[10:53:32.314] |  Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:32.284] |  :  .  |  result() for MulticoreFuture ...
[10:53:32.314] |  Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:32.284] |  :  .  |  result() for MulticoreFuture ... done
[10:53:32.314] |  Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:32.284] |  :  .  |  result() for MulticoreFuture ...
[10:53:32.315] |  Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:32.284] |  :  .  |  result() for MulticoreFuture ... done
[10:53:32.315] signalConditions() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:32.315] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:32.315] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:32.317] |  :  globals found: [2] ‘{’, ‘pkg’
[10:53:32.317] |  Searching for globals ... DONE
[10:53:32.317] |  Resolving globals: TRUE
[10:53:32.317] |  Resolving any globals that are futures ...
[10:53:32.317] |  :  globals: [2] ‘{’, ‘pkg’
[10:53:32.317] |  Resolving any globals that are futures ... DONE
[10:53:32.317] |  Search for packages associated with the globals ...
[10:53:32.318] |  :  Packages associated with globals: [1] ‘base’
[10:53:32.318] |  :  Packages: [1] ‘base’
[10:53:32.318] |  Search for packages associated with the globals ... DONE
[10:53:32.318] |  Resolving futures part of globals (recursively) ...
[10:53:32.318] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:32.319] |  :  .  recursive: 99
[10:53:32.319] |  :  .  length: 1
[10:53:32.319] |  :  .  elements: ‘pkg’
[10:53:32.319] |  :  .  'obj' is atomic
[10:53:32.319] |  :  .  length: 0 (resolved future 1)
[10:53:32.319] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:32.319] |  :  globals: [1] ‘pkg’
[10:53:32.319] |  Resolving futures part of globals (recursively) ... DONE
[10:53:32.320] |  Packages after dropping 'base': [0] 
[10:53:32.320] |  globals: [1] ‘pkg’
[10:53:32.320] |  packages: [0] 
[10:53:32.320] getGlobalsAndPackages() ... done
[10:53:32.320] run() for Future (‘Future’) ...
[10:53:32.320] |  state: ‘created’
[10:53:32.320] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.321] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.321] |  Using MulticoreFutureBackend ...
[10:53:32.321] |  :  Launching futures ...
[10:53:32.321] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:32.321] |  :  .  |  getFutureData() ...
[10:53:32.321] |  :  .  |  :  getFutureCore() ...
[10:53:32.321] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:32.321] |  :  .  |  :  getFutureCore() ... done
[10:53:32.321] |  :  .  |  :  getFutureCapture() ...
[10:53:32.322] |  :  .  |  :  getFutureCapture() ... done
[10:53:32.322] |  :  .  |  :  getFutureContext() ...
[10:53:32.322] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.322] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:32.322] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.322] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:32.322] |  :  .  |  :  getFutureContext() ... done
[10:53:32.323] |  :  .  |  getFutureData() ... done
[10:53:32.323] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:32.323] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:32.325] |  :  .  |  MulticoreFuture started
[10:53:32.325] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:32.325] |  :  Launching futures ... done
[10:53:32.325] |  :  .  |  attachPackages() ...
[10:53:32.325] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:32.326] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:32.326] |  Using MulticoreFutureBackend ... done
[10:53:32.326] run() for Future (‘MulticoreFuture’) ... done
[10:53:32.326] |  :  .  |  attachPackages() ... DONE
[10:53:32.326] |  :  .  |  attachPackages() ...
[10:53:32.326] result() for MulticoreFuture ...
[10:53:32.326] |  :  .  |  :  packages: [n=0] 
[10:53:32.326] |  :  .  |  attachPackages() ... DONE
[10:53:32.327] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.328] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:32.328] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.329] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.332] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:32.333] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:32.333] |  :  .  |  :  .  |  New stack:
[10:53:32.334] |  :  .  |  :  .  |  List of 1
[10:53:32.334] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.334] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.334] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.334] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.334] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.334] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.334] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.341] |  :  .  |  :  .  |  Old stack:
[10:53:32.341] |  :  .  |  :  .  |  List of 1
[10:53:32.341] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.341] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.341] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.341] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.341] |  :  .  |  :  .  |      ...)  
[10:53:32.341] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.341] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.341] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:32.341] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.341] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.341] |  :  .  |  :  .  |      ...)  
[10:53:32.341] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.341] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.347] |  :  .  |  :  .  |  Not identical
[10:53:32.347] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:32.347] |  :  .  |  :  .  |  :  List of 2
[10:53:32.347] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.347] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.347] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.347] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.347] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.347] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.347] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.347] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.347] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.347] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.347] |  :  .  |  :  .  |  :      ...)  
[10:53:32.347] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.347] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.347] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:32.347] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.347] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.347] |  :  .  |  :  .  |  :      ...)  
[10:53:32.347] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.354] |  :  .  |  :  .  |  :  Formals differ
[10:53:32.354] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:32.354] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:32.354] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:32.354] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:32.354] |  :  .  |  :  .  List of future strategies:
[10:53:32.354] |  :  .  |  :  .  1. sequential:
[10:53:32.354] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:32.354] |  :  .  |  :  .     - tweaked: FALSE
[10:53:32.354] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.355] |  :  .  |  :  .  List of 1
[10:53:32.355] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.355] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.355] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.355] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.355] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.355] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.355] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.358] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:32.358] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:32.358] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.358] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:32.358] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.359] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:32.359] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:32.359] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:32.359] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:32.359] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.359] |  :  .  |  assign_globals() ...
[10:53:32.360] |  :  .  |  List of 1
[10:53:32.360] |  :  .  |   $ pkg: chr "foo"
[10:53:32.360] |  :  .  |   - attr(*, "where")=List of 1
[10:53:32.360] |  :  .  |    ..$ pkg:<environment: R_EmptyEnv> 
[10:53:32.360] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:32.360] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:32.360] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:32.360] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:32.365] |  :  .  |  - copied ‘pkg’ to environment
[10:53:32.365] |  :  .  |  assign_globals() ... done
[10:53:32.367] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.367] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.367] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:32.368] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:32.368] |  :  .  |  :  .  |  :  New stack:
[10:53:32.368] |  :  .  |  :  .  |  :  List of 1
[10:53:32.368] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.368] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.368] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.368] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.368] |  :  .  |  :  .  |  :      ...)  
[10:53:32.368] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.368] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.368] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:32.368] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.368] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.368] |  :  .  |  :  .  |  :      ...)  
[10:53:32.368] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.368] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.371] |  :  .  |  :  .  |  :  Old stack:
[10:53:32.371] |  :  .  |  :  .  |  :  List of 1
[10:53:32.371] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.371] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.371] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.371] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.371] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.371] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.371] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.374] |  :  .  |  :  .  |  :  Not identical
[10:53:32.374] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:32.374] |  :  .  |  :  .  |  :  .  List of 2
[10:53:32.374] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.374] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.374] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.374] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.374] |  :  .  |  :  .  |  :  .      ...)  
[10:53:32.374] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.374] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.374] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:32.374] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.374] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.374] |  :  .  |  :  .  |  :  .      ...)  
[10:53:32.374] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.374] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.374] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.374] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.374] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.374] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.374] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.378] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:32.378] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:32.378] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:32.379] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:32.379] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:32.379] |  :  .  |  :  .  |  List of future strategies:
[10:53:32.379] |  :  .  |  :  .  |  1. multicore:
[10:53:32.379] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:32.379] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:32.379] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:32.379] |  :  .  |  :  .  |  List of 1
[10:53:32.379] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.379] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.379] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.379] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.379] |  :  .  |  :  .  |      ...)  
[10:53:32.379] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.379] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.379] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:32.379] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.379] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.379] |  :  .  |  :  .  |      ...)  
[10:53:32.379] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.379] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.384] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:32.384] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:32.384] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.384] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:32.385] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.385] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:32.385] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:32.385] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.385] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.386] |  readImmediateCondition() ...
[10:53:32.386] |    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:32.386] |   - Number of RDS files: 0
[10:53:32.386] |  readImmediateCondition() ... DONE
[10:53:32.386] |  result() for MulticoreFuture ...
[10:53:32.389] |  result() for MulticoreFuture ... done
[10:53:32.389] result() for MulticoreFuture ... done
[10:53:32.389] result() for MulticoreFuture ...
[10:53:32.390] result() for MulticoreFuture ... done
value(f) = ‘foo’
Method for identifying globals: 'conservative' ... DONE
Method for identifying globals: 'ordered' ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:32.391] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:32.392] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:32.396] |  :  globals found: [4] ‘{’, ‘<-’, ‘a’, ‘*’
[10:53:32.396] |  Searching for globals ... DONE
[10:53:32.396] |  Resolving globals: TRUE
[10:53:32.396] |  Resolving any globals that are futures ...
[10:53:32.397] |  :  globals: [4] ‘{’, ‘<-’, ‘a’, ‘*’
[10:53:32.397] |  Resolving any globals that are futures ... DONE
[10:53:32.397] |  Search for packages associated with the globals ...
[10:53:32.397] |  :  Packages associated with globals: [1] ‘base’
[10:53:32.398] |  :  Packages: [1] ‘base’
[10:53:32.398] |  Search for packages associated with the globals ... DONE
[10:53:32.398] |  Resolving futures part of globals (recursively) ...
[10:53:32.398] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:32.399] |  :  .  recursive: 99
[10:53:32.399] |  :  .  length: 1
[10:53:32.399] |  :  .  elements: ‘a’
[10:53:32.399] |  :  .  'obj' is atomic
[10:53:32.399] |  :  .  length: 0 (resolved future 1)
[10:53:32.399] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:32.399] |  :  globals: [1] ‘a’
[10:53:32.400] |  Resolving futures part of globals (recursively) ... DONE
[10:53:32.400] |  Packages after dropping 'base': [0] 
[10:53:32.400] |  globals: [1] ‘a’
[10:53:32.400] |  packages: [0] 
[10:53:32.400] getGlobalsAndPackages() ... done
[10:53:32.400] run() for Future (‘Future’) ...
[10:53:32.401] |  state: ‘created’
[10:53:32.401] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.401] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.401] |  Using MulticoreFutureBackend ...
[10:53:32.401] |  :  Launching futures ...
[10:53:32.401] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:32.401] |  :  .  |  getFutureData() ...
[10:53:32.402] |  :  .  |  :  getFutureCore() ...
[10:53:32.402] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:32.402] |  :  .  |  :  getFutureCore() ... done
[10:53:32.402] |  :  .  |  :  getFutureCapture() ...
[10:53:32.402] |  :  .  |  :  getFutureCapture() ... done
[10:53:32.402] |  :  .  |  :  getFutureContext() ...
[10:53:32.402] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.402] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:32.402] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.403] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:32.403] |  :  .  |  :  getFutureContext() ... done
[10:53:32.403] |  :  .  |  getFutureData() ... done
[10:53:32.403] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:32.403] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:32.405] |  :  .  |  MulticoreFuture started
[10:53:32.406] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:32.406] |  :  Launching futures ... done
[10:53:32.406] |  :  .  |  attachPackages() ...
[10:53:32.406] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:32.406] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:32.406] |  Using MulticoreFutureBackend ... done
[10:53:32.406] run() for Future (‘MulticoreFuture’) ... done
[10:53:32.407] |  :  .  |  attachPackages() ... DONE
[10:53:32.407] |  :  .  |  attachPackages() ...
[10:53:32.407] |  :  .  |  :  packages: [n=0] 
[10:53:32.407] |  :  .  |  attachPackages() ... DONE
[10:53:32.407] result() for MulticoreFuture ...
[10:53:32.408] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.408] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:32.409] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.409] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.410] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:32.410] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:32.410] |  :  .  |  :  .  |  New stack:
[10:53:32.410] |  :  .  |  :  .  |  List of 1
[10:53:32.410] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.410] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.410] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.410] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.410] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.410] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.410] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.415] |  :  .  |  :  .  |  Old stack:
[10:53:32.415] |  :  .  |  :  .  |  List of 1
[10:53:32.415] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.415] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.415] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.415] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.415] |  :  .  |  :  .  |      ...)  
[10:53:32.415] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.415] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.415] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:32.415] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.415] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.415] |  :  .  |  :  .  |      ...)  
[10:53:32.415] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.415] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.420] |  :  .  |  :  .  |  Not identical
[10:53:32.420] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:32.421] |  :  .  |  :  .  |  :  List of 2
[10:53:32.421] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.421] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.421] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.421] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.421] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.421] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.421] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.421] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.421] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.421] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.421] |  :  .  |  :  .  |  :      ...)  
[10:53:32.421] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.421] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.421] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:32.421] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.421] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.421] |  :  .  |  :  .  |  :      ...)  
[10:53:32.421] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.436] |  :  .  |  :  .  |  :  Formals differ
[10:53:32.436] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:32.437] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:32.437] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:32.437] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:32.437] |  :  .  |  :  .  List of future strategies:
[10:53:32.437] |  :  .  |  :  .  1. sequential:
[10:53:32.437] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:32.437] |  :  .  |  :  .     - tweaked: FALSE
[10:53:32.437] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.438] |  :  .  |  :  .  List of 1
[10:53:32.438] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.438] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.438] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.438] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.438] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.438] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.438] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.442] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:32.442] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:32.442] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.442] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:32.443] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.443] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:32.443] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:32.443] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:32.444] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:32.444] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.444] |  :  .  |  assign_globals() ...
[10:53:32.444] |  :  .  |  List of 1
[10:53:32.444] |  :  .  |   $ a: num 3
[10:53:32.444] |  :  .  |   - attr(*, "where")=List of 1
[10:53:32.444] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:53:32.444] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:32.444] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:32.444] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:32.444] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:32.447] |  :  .  |  - copied ‘a’ to environment
[10:53:32.447] |  :  .  |  assign_globals() ... done
[10:53:32.449] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.449] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.450] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:32.450] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:32.450] |  :  .  |  :  .  |  :  New stack:
[10:53:32.450] |  :  .  |  :  .  |  :  List of 1
[10:53:32.450] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.450] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.450] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.450] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.450] |  :  .  |  :  .  |  :      ...)  
[10:53:32.450] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.450] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.450] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:32.450] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.450] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.450] |  :  .  |  :  .  |  :      ...)  
[10:53:32.450] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.450] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.455] |  :  .  |  :  .  |  :  Old stack:
[10:53:32.455] |  :  .  |  :  .  |  :  List of 1
[10:53:32.455] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.455] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.455] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.455] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.455] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.455] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.455] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.457] |  :  .  |  :  .  |  :  Not identical
[10:53:32.457] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:32.457] |  :  .  |  :  .  |  :  .  List of 2
[10:53:32.457] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.457] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.457] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.457] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.457] |  :  .  |  :  .  |  :  .      ...)  
[10:53:32.457] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.457] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.457] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:32.457] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.457] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.457] |  :  .  |  :  .  |  :  .      ...)  
[10:53:32.457] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.457] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.457] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.457] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.457] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.457] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.457] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.462] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:32.462] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:32.462] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:32.462] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:32.462] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:32.462] |  :  .  |  :  .  |  List of future strategies:
[10:53:32.462] |  :  .  |  :  .  |  1. multicore:
[10:53:32.462] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:32.462] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:32.462] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:32.463] |  :  .  |  :  .  |  List of 1
[10:53:32.463] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.463] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.463] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.463] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.463] |  :  .  |  :  .  |      ...)  
[10:53:32.463] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.463] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.463] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:32.463] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.463] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.463] |  :  .  |  :  .  |      ...)  
[10:53:32.463] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.463] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.466] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:32.466] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:32.466] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.466] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:32.466] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.466] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:32.466] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:32.467] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.467] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.467] |  readImmediateCondition() ...
[10:53:32.467] |    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:32.468] |   - Number of RDS files: 0
[10:53:32.468] |  readImmediateCondition() ... DONE
[10:53:32.468] |  result() for MulticoreFuture ...
[10:53:32.468] |  result() for MulticoreFuture ... done
[10:53:32.469] result() for MulticoreFuture ... done
[10:53:32.469] result() for MulticoreFuture ...
[10:53:32.469] result() for MulticoreFuture ... done
y = 6
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:32.470] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:32.470] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:32.473] |  :  globals found: [4] ‘{’, ‘<-’, ‘a’, ‘*’
[10:53:32.473] |  Searching for globals ... DONE
[10:53:32.473] |  Resolving globals: TRUE
[10:53:32.474] |  Resolving any globals that are futures ...
[10:53:32.474] |  :  globals: [4] ‘{’, ‘<-’, ‘a’, ‘*’
[10:53:32.474] |  Resolving any globals that are futures ... DONE
[10:53:32.474] |  Search for packages associated with the globals ...
[10:53:32.474] |  :  Packages associated with globals: [1] ‘base’
[10:53:32.475] |  :  Packages: [1] ‘base’
[10:53:32.475] |  Search for packages associated with the globals ... DONE
[10:53:32.475] |  Resolving futures part of globals (recursively) ...
[10:53:32.475] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:32.475] |  :  .  recursive: 99
[10:53:32.476] |  :  .  length: 1
[10:53:32.476] |  :  .  elements: ‘a’
[10:53:32.476] |  :  .  'obj' is atomic
[10:53:32.476] |  :  .  length: 0 (resolved future 1)
[10:53:32.476] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:32.476] |  :  globals: [1] ‘a’
[10:53:32.476] |  Resolving futures part of globals (recursively) ... DONE
[10:53:32.477] |  Packages after dropping 'base': [0] 
[10:53:32.477] |  globals: [1] ‘a’
[10:53:32.477] |  packages: [0] 
[10:53:32.477] getGlobalsAndPackages() ... done
[10:53:32.477] run() for Future (‘Future’) ...
[10:53:32.478] |  state: ‘created’
[10:53:32.478] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.478] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.478] |  Using MulticoreFutureBackend ...
[10:53:32.480] |  :  Launching futures ...
[10:53:32.480] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:32.480] |  :  .  |  getFutureData() ...
[10:53:32.481] |  :  .  |  :  getFutureCore() ...
[10:53:32.481] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:32.481] |  :  .  |  :  getFutureCore() ... done
[10:53:32.481] |  :  .  |  :  getFutureCapture() ...
[10:53:32.481] |  :  .  |  :  getFutureCapture() ... done
[10:53:32.482] |  :  .  |  :  getFutureContext() ...
[10:53:32.482] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.482] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:32.482] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.482] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:32.483] |  :  .  |  :  getFutureContext() ... done
[10:53:32.483] |  :  .  |  getFutureData() ... done
[10:53:32.483] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:32.483] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:32.485] |  :  .  |  MulticoreFuture started
[10:53:32.486] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:32.486] |  :  .  |  attachPackages() ...
[10:53:32.487] |  :  Launching futures ... done
[10:53:32.487] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:32.487] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:32.488] |  :  .  |  attachPackages() ... DONE
[10:53:32.488] |  Using MulticoreFutureBackend ... done
[10:53:32.488] |  :  .  |  attachPackages() ...
[10:53:32.488] run() for Future (‘MulticoreFuture’) ... done
[10:53:32.488] |  :  .  |  :  packages: [n=0] 
[10:53:32.489] result() for MulticoreFuture ...
[10:53:32.489] |  :  .  |  attachPackages() ... DONE
[10:53:32.490] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.491] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:32.492] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.493] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.494] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:32.494] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:32.495] |  :  .  |  :  .  |  New stack:
[10:53:32.495] |  :  .  |  :  .  |  List of 1
[10:53:32.495] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.495] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.495] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.495] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.495] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.495] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.495] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.503] |  :  .  |  :  .  |  Old stack:
[10:53:32.503] |  :  .  |  :  .  |  List of 1
[10:53:32.503] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.503] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.503] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.503] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.503] |  :  .  |  :  .  |      ...)  
[10:53:32.503] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.503] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.503] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:32.503] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.503] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.503] |  :  .  |  :  .  |      ...)  
[10:53:32.503] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.503] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.508] |  :  .  |  :  .  |  Not identical
[10:53:32.508] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:32.508] |  :  .  |  :  .  |  :  List of 2
[10:53:32.508] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.508] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.508] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.508] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.508] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.508] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.508] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.508] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.508] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.508] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.508] |  :  .  |  :  .  |  :      ...)  
[10:53:32.508] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.508] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.508] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:32.508] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.508] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.508] |  :  .  |  :  .  |  :      ...)  
[10:53:32.508] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.514] |  :  .  |  :  .  |  :  Formals differ
[10:53:32.515] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:32.515] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:32.515] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:32.515] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:32.515] |  :  .  |  :  .  List of future strategies:
[10:53:32.515] |  :  .  |  :  .  1. sequential:
[10:53:32.515] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:32.515] |  :  .  |  :  .     - tweaked: FALSE
[10:53:32.515] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.516] |  :  .  |  :  .  List of 1
[10:53:32.516] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.516] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.516] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.516] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.516] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.516] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.516] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.521] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:32.521] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:32.521] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.522] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:32.522] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.522] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:32.522] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:32.522] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:32.523] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:32.523] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.523] |  :  .  |  assign_globals() ...
[10:53:32.523] |  :  .  |  List of 1
[10:53:32.523] |  :  .  |   $ a: num 3
[10:53:32.523] |  :  .  |   - attr(*, "where")=List of 1
[10:53:32.523] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:53:32.523] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:32.523] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:32.523] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:32.523] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:32.526] |  :  .  |  - copied ‘a’ to environment
[10:53:32.526] |  :  .  |  assign_globals() ... done
[10:53:32.528] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.529] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.529] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:32.529] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:32.529] |  :  .  |  :  .  |  :  New stack:
[10:53:32.529] |  :  .  |  :  .  |  :  List of 1
[10:53:32.529] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.529] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.529] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.529] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.529] |  :  .  |  :  .  |  :      ...)  
[10:53:32.529] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.529] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.529] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:32.529] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.529] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.529] |  :  .  |  :  .  |  :      ...)  
[10:53:32.529] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.529] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.532] |  :  .  |  :  .  |  :  Old stack:
[10:53:32.532] |  :  .  |  :  .  |  :  List of 1
[10:53:32.532] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.532] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.532] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.532] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.532] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.532] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.532] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.534] |  :  .  |  :  .  |  :  Not identical
[10:53:32.534] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:32.535] |  :  .  |  :  .  |  :  .  List of 2
[10:53:32.535] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.535] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.535] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.535] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.535] |  :  .  |  :  .  |  :  .      ...)  
[10:53:32.535] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.535] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.535] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:32.535] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.535] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.535] |  :  .  |  :  .  |  :  .      ...)  
[10:53:32.535] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.535] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.535] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.535] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.535] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.535] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.535] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.541] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:32.541] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:32.541] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:32.541] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:32.541] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:32.541] |  :  .  |  :  .  |  List of future strategies:
[10:53:32.541] |  :  .  |  :  .  |  1. multicore:
[10:53:32.541] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:32.541] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:32.541] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:32.542] |  :  .  |  :  .  |  List of 1
[10:53:32.542] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.542] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.542] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.542] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.542] |  :  .  |  :  .  |      ...)  
[10:53:32.542] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.542] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.542] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:32.542] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.542] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.542] |  :  .  |  :  .  |      ...)  
[10:53:32.542] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.542] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.545] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:32.545] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:32.545] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.545] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:32.545] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.546] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:32.546] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:32.546] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.546] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.546] |  readImmediateCondition() ...
[10:53:32.547] |    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:32.547] |   - Number of RDS files: 0
[10:53:32.547] |  readImmediateCondition() ... DONE
[10:53:32.548] |  result() for MulticoreFuture ...
[10:53:32.548] |  result() for MulticoreFuture ... done
[10:53:32.548] result() for MulticoreFuture ... done
[10:53:32.548] result() for MulticoreFuture ...
[10:53:32.549] result() for MulticoreFuture ... done
y = 6
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:32.550] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:32.551] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:32.554] |  :  globals found: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:32.554] |  Searching for globals ... DONE
[10:53:32.554] |  Resolving globals: TRUE
[10:53:32.554] |  Resolving any globals that are futures ...
[10:53:32.555] |  :  globals: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:32.555] |  Resolving any globals that are futures ... DONE
[10:53:32.555] |  Search for packages associated with the globals ...
[10:53:32.555] |  :  Packages associated with globals: [1] ‘base’
[10:53:32.555] |  :  Packages: [1] ‘base’
[10:53:32.556] |  Search for packages associated with the globals ... DONE
[10:53:32.556] |  Resolving futures part of globals (recursively) ...
[10:53:32.556] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:32.556] |  :  .  recursive: 99
[10:53:32.556] |  :  .  length: 2
[10:53:32.556] |  :  .  elements: ‘a’, ‘ii’
[10:53:32.557] |  :  .  'obj' is atomic
[10:53:32.557] |  :  .  length: 1 (resolved future 1)
[10:53:32.557] |  :  .  'obj' is atomic
[10:53:32.557] |  :  .  length: 0 (resolved future 2)
[10:53:32.557] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:32.557] |  :  globals: [2] ‘a’, ‘ii’
[10:53:32.557] |  Resolving futures part of globals (recursively) ... DONE
[10:53:32.558] |  Packages after dropping 'base': [0] 
[10:53:32.558] |  globals: [2] ‘a’, ‘ii’
[10:53:32.558] |  packages: [0] 
[10:53:32.558] getGlobalsAndPackages() ... done
[10:53:32.558] run() for Future (‘Future’) ...
[10:53:32.558] |  state: ‘created’
[10:53:32.558] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.559] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.559] |  Using MulticoreFutureBackend ...
[10:53:32.559] |  :  Launching futures ...
[10:53:32.559] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:32.559] |  :  .  |  getFutureData() ...
[10:53:32.559] |  :  .  |  :  getFutureCore() ...
[10:53:32.559] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:32.559] |  :  .  |  :  getFutureCore() ... done
[10:53:32.560] |  :  .  |  :  getFutureCapture() ...
[10:53:32.560] |  :  .  |  :  getFutureCapture() ... done
[10:53:32.560] |  :  .  |  :  getFutureContext() ...
[10:53:32.560] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.560] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:32.560] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.560] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:32.560] |  :  .  |  :  getFutureContext() ... done
[10:53:32.561] |  :  .  |  getFutureData() ... done
[10:53:32.561] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:32.561] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:32.563] |  :  .  |  MulticoreFuture started
[10:53:32.563] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:32.564] |  :  Launching futures ... done
[10:53:32.564] |  :  .  |  attachPackages() ...
[10:53:32.564] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:32.564] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:32.564] |  Using MulticoreFutureBackend ... done
[10:53:32.564] run() for Future (‘MulticoreFuture’) ... done
[10:53:32.564] |  :  .  |  attachPackages() ... DONE
[10:53:32.564] |  :  .  |  attachPackages() ...
[10:53:32.565] |  :  .  |  :  packages: [n=0] 
[10:53:32.565] |  :  .  |  attachPackages() ... DONE
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:32.566] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:32.566] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.566] |  Searching for globals ...
[10:53:32.566] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:32.566] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.567] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.567] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:32.567] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:32.567] |  :  .  |  :  .  |  New stack:
[10:53:32.570] |  :  globals found: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:32.570] |  Searching for globals ... DONE
[10:53:32.571] |  Resolving globals: TRUE
[10:53:32.571] |  Resolving any globals that are futures ...
[10:53:32.571] |  :  globals: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:32.568] |  :  .  |  :  .  |  List of 1
[10:53:32.568] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.568] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.568] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.568] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.568] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.568] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.568] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.571] |  Resolving any globals that are futures ... DONE
[10:53:32.571] |  :  .  |  :  .  |  Old stack:
[10:53:32.571] |  Search for packages associated with the globals ...
[10:53:32.572] |  :  Packages associated with globals: [1] ‘base’
[10:53:32.575] |  :  Packages: [1] ‘base’
[10:53:32.575] |  Search for packages associated with the globals ... DONE
[10:53:32.575] |  Resolving futures part of globals (recursively) ...
[10:53:32.576] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:32.576] |  :  .  recursive: 99
[10:53:32.577] |  :  .  length: 2
[10:53:32.577] |  :  .  elements: ‘a’, ‘ii’
[10:53:32.577] |  :  .  'obj' is atomic
[10:53:32.578] |  :  .  length: 1 (resolved future 1)
[10:53:32.578] |  :  .  'obj' is atomic
[10:53:32.578] |  :  .  length: 0 (resolved future 2)
[10:53:32.578] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:32.578] |  :  globals: [2] ‘a’, ‘ii’
[10:53:32.579] |  Resolving futures part of globals (recursively) ... DONE
[10:53:32.579] |  Packages after dropping 'base': [0] 
[10:53:32.579] |  globals: [2] ‘a’, ‘ii’
[10:53:32.579] |  packages: [0] 
[10:53:32.580] getGlobalsAndPackages() ... done
[10:53:32.580] run() for Future (‘Future’) ...
[10:53:32.580] |  state: ‘created’
[10:53:32.581] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.581] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.581] |  Using MulticoreFutureBackend ...
[10:53:32.581] |  :  Launching futures ...
[10:53:32.571] |  :  .  |  :  .  |  List of 1
[10:53:32.571] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.571] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.571] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.571] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.571] |  :  .  |  :  .  |      ...)  
[10:53:32.571] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.571] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.571] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:32.571] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.571] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.571] |  :  .  |  :  .  |      ...)  
[10:53:32.571] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.571] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.581] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:32.581] |  :  .  |  :  .  |  Not identical
[10:53:32.581] |  :  .  |  getFutureData() ...
[10:53:32.581] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:32.582] |  :  .  |  :  getFutureCore() ...
[10:53:32.582] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:32.582] |  :  .  |  :  getFutureCore() ... done
[10:53:32.582] |  :  .  |  :  getFutureCapture() ...
[10:53:32.582] |  :  .  |  :  getFutureCapture() ... done
[10:53:32.582] |  :  .  |  :  getFutureContext() ...
[10:53:32.583] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.583] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:32.583] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.583] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:32.583] |  :  .  |  :  getFutureContext() ... done
[10:53:32.584] |  :  .  |  getFutureData() ... done
[10:53:32.584] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:32.584] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:32.586] |  :  .  |  MulticoreFuture started
[10:53:32.587] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:32.588] |  :  .  |  attachPackages() ...
[10:53:32.582] |  :  .  |  :  .  |  :  List of 2
[10:53:32.582] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.582] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.582] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.582] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.582] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.582] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.582] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.582] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.582] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.582] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.582] |  :  .  |  :  .  |  :      ...)  
[10:53:32.582] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.582] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.582] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:32.582] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.582] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.582] |  :  .  |  :  .  |  :      ...)  
[10:53:32.582] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.588] |  :  Launching futures ... done
[10:53:32.588] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:32.589] |  :  .  |  :  .  |  :  Formals differ
[10:53:32.589] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:32.589] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:32.589] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:32.589] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:32.589] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:32.589] |  :  .  |  attachPackages() ... DONE
[10:53:32.589] |  Using MulticoreFutureBackend ... done
[10:53:32.590] |  :  .  |  attachPackages() ...
[10:53:32.590] run() for Future (‘MulticoreFuture’) ... done
[10:53:32.589] |  :  .  |  :  .  List of future strategies:
[10:53:32.589] |  :  .  |  :  .  1. sequential:
[10:53:32.589] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:32.589] |  :  .  |  :  .     - tweaked: FALSE
[10:53:32.589] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.590] |  :  .  |  :  packages: [n=0] 
[10:53:32.591] |  :  .  |  attachPackages() ... DONE
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:32.592] getGlobalsAndPackages() ...
[10:53:32.592] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:32.590] |  :  .  |  :  .  List of 1
[10:53:32.590] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.590] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.590] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.590] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.590] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.590] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.590] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.593] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:32.593] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:32.593] |  Searching for globals ...
[10:53:32.593] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:32.593] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.593] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:32.593] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:32.593] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.594] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:32.594] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.594] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:32.594] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:32.594] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:32.594] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:32.594] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.595] |  :  .  |  assign_globals() ...
[10:53:32.594] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:32.595] |  :  .  |  :  .  |  New stack:
[10:53:32.595] |  :  .  |  List of 2
[10:53:32.595] |  :  .  |   $ a : num 1
[10:53:32.595] |  :  .  |   $ ii: int 1
[10:53:32.595] |  :  .  |   - attr(*, "where")=List of 2
[10:53:32.595] |  :  .  |    ..$ a :<environment: R_EmptyEnv> 
[10:53:32.595] |  :  .  |    ..$ ii:<environment: R_EmptyEnv> 
[10:53:32.595] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:32.595] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:32.595] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:32.595] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:32.598] |  :  .  |  - copied ‘a’ to environment
[10:53:32.598] |  :  .  |  - copied ‘ii’ to environment
[10:53:32.598] |  :  .  |  assign_globals() ... done
[10:53:32.600] |  :  globals found: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:32.600] |  Searching for globals ... DONE
[10:53:32.600] |  Resolving globals: TRUE
[10:53:32.600] |  Resolving any globals that are futures ...
[10:53:32.601] |  :  globals: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:32.595] |  :  .  |  :  .  |  List of 1
[10:53:32.595] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.595] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.595] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.595] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.595] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.595] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.595] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.601] |  Resolving any globals that are futures ... DONE
[10:53:32.601] |  :  .  |  :  .  |  Old stack:
[10:53:32.601] |  Search for packages associated with the globals ...
[10:53:32.602] |  :  Packages associated with globals: [1] ‘base’
[10:53:32.602] |  :  Packages: [1] ‘base’
[10:53:32.603] |  Search for packages associated with the globals ... DONE
[10:53:32.603] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.603] |  Resolving futures part of globals (recursively) ...
[10:53:32.603] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.603] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:32.603] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:32.603] |  :  .  |  :  .  |  :  New stack:
[10:53:32.603] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:32.604] |  :  .  recursive: 99
[10:53:32.604] |  :  .  length: 2
[10:53:32.604] |  :  .  elements: ‘a’, ‘ii’
[10:53:32.604] |  :  .  'obj' is atomic
[10:53:32.605] |  :  .  length: 1 (resolved future 1)
[10:53:32.605] |  :  .  'obj' is atomic
[10:53:32.605] |  :  .  length: 0 (resolved future 2)
[10:53:32.605] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:32.606] |  :  globals: [2] ‘a’, ‘ii’
[10:53:32.606] |  Resolving futures part of globals (recursively) ... DONE
[10:53:32.606] |  Packages after dropping 'base': [0] 
[10:53:32.606] |  globals: [2] ‘a’, ‘ii’
[10:53:32.607] |  packages: [0] 
[10:53:32.607] getGlobalsAndPackages() ... done
[10:53:32.607] run() for Future (‘Future’) ...
[10:53:32.604] |  :  .  |  :  .  |  :  List of 1
[10:53:32.604] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.604] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.604] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.604] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.604] |  :  .  |  :  .  |  :      ...)  
[10:53:32.604] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.604] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.604] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:32.604] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.604] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.604] |  :  .  |  :  .  |  :      ...)  
[10:53:32.604] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.604] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.608] |  :  .  |  :  .  |  :  Old stack:
[10:53:32.608] |  state: ‘created’
[10:53:32.608] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.608] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.608] |  Using MulticoreFutureBackend ...
[10:53:32.601] |  :  .  |  :  .  |  List of 1
[10:53:32.601] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.601] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.601] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.601] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.601] |  :  .  |  :  .  |      ...)  
[10:53:32.601] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.601] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.601] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:32.601] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.601] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.601] |  :  .  |  :  .  |      ...)  
[10:53:32.601] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.601] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.608] |  :  Launching futures ...
[10:53:32.609] |  :  .  |  :  .  |  Not identical
[10:53:32.609] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:32.609] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:32.609] |  :  .  |  getFutureData() ...
[10:53:32.609] |  :  .  |  :  getFutureCore() ...
[10:53:32.609] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:32.610] |  :  .  |  :  getFutureCore() ... done
[10:53:32.610] |  :  .  |  :  getFutureCapture() ...
[10:53:32.608] |  :  .  |  :  .  |  :  List of 1
[10:53:32.608] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.608] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.608] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.608] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.608] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.608] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.608] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.610] |  :  .  |  :  getFutureCapture() ... done
[10:53:32.610] |  :  .  |  :  .  |  :  Not identical
[10:53:32.610] |  :  .  |  :  getFutureContext() ...
[10:53:32.610] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:32.610] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.611] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:32.611] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.611] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:32.611] |  :  .  |  :  getFutureContext() ... done
[10:53:32.612] |  :  .  |  getFutureData() ... done
[10:53:32.612] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:32.613] |  :  .  |  :  Poll #1 (0): usedCores() = 2, workers = 2
[10:53:32.610] |  :  .  |  :  .  |  :  .  List of 2
[10:53:32.610] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.610] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.610] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.610] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.610] |  :  .  |  :  .  |  :  .      ...)  
[10:53:32.610] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.610] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.610] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:32.610] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.610] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.610] |  :  .  |  :  .  |  :  .      ...)  
[10:53:32.610] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.610] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.610] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.610] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.610] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.610] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.610] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.615] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:32.615] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:32.615] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:32.616] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:32.616] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:32.616] |  :  .  |  :  .  |  List of future strategies:
[10:53:32.616] |  :  .  |  :  .  |  1. multicore:
[10:53:32.616] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:32.616] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:32.616] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:32.616] |  :  .  |  :  .  |  List of 1
[10:53:32.616] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.616] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.616] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.616] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.616] |  :  .  |  :  .  |      ...)  
[10:53:32.616] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.616] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.616] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:32.616] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.616] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.616] |  :  .  |  :  .  |      ...)  
[10:53:32.616] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.616] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.619] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:32.609] |  :  .  |  :  .  |  :  List of 2
[10:53:32.609] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.609] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.609] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.609] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.609] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.609] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.609] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.609] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.609] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.609] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.609] |  :  .  |  :  .  |  :      ...)  
[10:53:32.609] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.609] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.609] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:32.609] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.609] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.609] |  :  .  |  :  .  |  :      ...)  
[10:53:32.609] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.621] |  :  .  |  :  .  |  :  Formals differ
[10:53:32.621] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:32.621] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:32.621] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:32.621] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:32.622] |  :  .  |  :  .  List of future strategies:
[10:53:32.622] |  :  .  |  :  .  1. sequential:
[10:53:32.622] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:32.622] |  :  .  |  :  .     - tweaked: FALSE
[10:53:32.622] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.619] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:32.624] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.624] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:32.625] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.625] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:32.625] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:32.625] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.625] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.622] |  :  .  |  :  .  List of 1
[10:53:32.622] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.622] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.622] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.622] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.622] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.622] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.622] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.627] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:32.628] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:32.628] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.628] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:32.629] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.629] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:32.629] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:32.630] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:32.630] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:32.630] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.631] |  :  .  |  assign_globals() ...
[10:53:32.631] |  :  .  |  List of 2
[10:53:32.631] |  :  .  |   $ a : num 1
[10:53:32.631] |  :  .  |   $ ii: int 2
[10:53:32.631] |  :  .  |   - attr(*, "where")=List of 2
[10:53:32.631] |  :  .  |    ..$ a :<environment: R_EmptyEnv> 
[10:53:32.631] |  :  .  |    ..$ ii:<environment: R_EmptyEnv> 
[10:53:32.631] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:32.631] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:32.631] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:32.631] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:32.636] |  :  .  |  - copied ‘a’ to environment
[10:53:32.636] |  :  .  |  - copied ‘ii’ to environment
[10:53:32.637] |  :  .  |  assign_globals() ... done
[10:53:32.639] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.639] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.640] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:32.640] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:32.640] |  :  .  |  :  .  |  :  New stack:
[10:53:32.640] |  :  .  |  :  .  |  :  List of 1
[10:53:32.640] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.640] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.640] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.640] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.640] |  :  .  |  :  .  |  :      ...)  
[10:53:32.640] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.640] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.640] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:32.640] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.640] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.640] |  :  .  |  :  .  |  :      ...)  
[10:53:32.640] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.640] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.643] |  :  .  |  :  .  |  :  Old stack:
[10:53:32.643] |  :  .  |  :  .  |  :  List of 1
[10:53:32.643] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.643] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.643] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.643] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.643] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.643] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.643] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.645] |  :  .  |  :  .  |  :  Not identical
[10:53:32.645] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:32.650] |  :  .  |  :  .  |  :  .  List of 2
[10:53:32.650] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.650] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.650] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.650] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.650] |  :  .  |  :  .  |  :  .      ...)  
[10:53:32.650] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.650] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.650] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:32.650] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.650] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.650] |  :  .  |  :  .  |  :  .      ...)  
[10:53:32.650] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.650] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.650] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.650] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.650] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.650] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.650] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.655] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:32.656] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:32.656] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:32.656] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:32.656] |  :  .  |  :  readImmediateCondition() ...
[10:53:32.656] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:32.656] |  :  .  |  :    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:32.656] |  :  .  |  :   - Number of RDS files: 0
[10:53:32.656] |  :  .  |  :  readImmediateCondition() ... DONE
[10:53:32.656] |  :  .  |  :  .  |  List of future strategies:
[10:53:32.656] |  :  .  |  :  .  |  1. multicore:
[10:53:32.656] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:32.656] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:32.656] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:32.656] |  :  .  |  :  result() for MulticoreFuture ...
[10:53:32.657] |  :  .  |  :  .  readImmediateCondition() ...
[10:53:32.657] |  :  .  |  :  .    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:32.657] |  :  .  |  :  .   - Number of RDS files: 0
[10:53:32.657] |  :  .  |  :  .  readImmediateCondition() ... DONE
[10:53:32.658] |  :  .  |  :  .  result() for MulticoreFuture ...
[10:53:32.658] |  :  .  |  :  .  result() for MulticoreFuture ... done
[10:53:32.658] |  :  .  |  :  result() for MulticoreFuture ... done
[10:53:32.658] |  :  .  |  :  result() for MulticoreFuture ...
[10:53:32.658] |  :  .  |  :  result() for MulticoreFuture ... done
[10:53:32.659] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:32.656] |  :  .  |  :  .  |  List of 1
[10:53:32.656] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.656] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.656] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.656] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.656] |  :  .  |  :  .  |      ...)  
[10:53:32.656] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.656] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.656] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:32.656] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.656] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.656] |  :  .  |  :  .  |      ...)  
[10:53:32.656] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.656] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.661] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:32.661] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:32.661] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.661] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:32.662] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.661] |  :  .  |  MulticoreFuture started
[10:53:32.662] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:32.662] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:32.662] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.662] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.662] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:32.662] |  :  .  |  attachPackages() ...
[10:53:32.663] |  :  Launching futures ... done
[10:53:32.663] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:32.663] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:32.664] |  :  .  |  attachPackages() ... DONE
[10:53:32.664] |  Using MulticoreFutureBackend ... done
[10:53:32.664] |  :  .  |  attachPackages() ...
[10:53:32.664] run() for Future (‘MulticoreFuture’) ... done
[10:53:32.665] |  :  .  |  :  packages: [n=0] 
[10:53:32.665] |  :  .  |  attachPackages() ... DONE
[10:53:32.666] result() for MulticoreFuture ...
[10:53:32.666] result() for MulticoreFuture ... done
[10:53:32.667] result() for MulticoreFuture ...
[10:53:32.667] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.667] result() for MulticoreFuture ... done
[10:53:32.667] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:32.668] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.668] result() for MulticoreFuture ...
[10:53:32.669] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.669] |  readImmediateCondition() ...
[10:53:32.669] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:32.670] |    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:32.670] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:32.670] |   - Number of RDS files: 0
[10:53:32.670] |  :  .  |  :  .  |  New stack:
[10:53:32.671] |  readImmediateCondition() ... DONE
[10:53:32.671] |  result() for MulticoreFuture ...
[10:53:32.671] |  result() for MulticoreFuture ... done
[10:53:32.672] result() for MulticoreFuture ... done
[10:53:32.672] result() for MulticoreFuture ...
[10:53:32.672] result() for MulticoreFuture ... done
[10:53:32.673] result() for MulticoreFuture ...
[10:53:32.671] |  :  .  |  :  .  |  List of 1
[10:53:32.671] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.671] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.671] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.671] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.671] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.671] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.671] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.677] |  :  .  |  :  .  |  Old stack:
[10:53:32.677] |  :  .  |  :  .  |  List of 1
[10:53:32.677] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.677] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.677] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.677] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.677] |  :  .  |  :  .  |      ...)  
[10:53:32.677] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.677] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.677] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:32.677] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.677] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.677] |  :  .  |  :  .  |      ...)  
[10:53:32.677] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.677] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.682] |  :  .  |  :  .  |  Not identical
[10:53:32.682] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:32.682] |  :  .  |  :  .  |  :  List of 2
[10:53:32.682] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.682] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.682] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.682] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.682] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.682] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.682] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.682] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.682] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.682] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.682] |  :  .  |  :  .  |  :      ...)  
[10:53:32.682] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.682] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.682] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:32.682] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.682] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.682] |  :  .  |  :  .  |  :      ...)  
[10:53:32.682] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.688] |  :  .  |  :  .  |  :  Formals differ
[10:53:32.689] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:32.689] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:32.689] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:32.689] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:32.689] |  :  .  |  :  .  List of future strategies:
[10:53:32.689] |  :  .  |  :  .  1. sequential:
[10:53:32.689] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:32.689] |  :  .  |  :  .     - tweaked: FALSE
[10:53:32.689] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.690] |  :  .  |  :  .  List of 1
[10:53:32.690] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.690] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.690] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.690] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.690] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.690] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.690] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.695] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:32.695] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:32.695] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.695] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:32.696] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.696] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:32.696] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:32.696] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:32.697] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:32.697] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.697] |  :  .  |  assign_globals() ...
[10:53:32.697] |  :  .  |  List of 2
[10:53:32.697] |  :  .  |   $ a : num 1
[10:53:32.697] |  :  .  |   $ ii: int 3
[10:53:32.697] |  :  .  |   - attr(*, "where")=List of 2
[10:53:32.697] |  :  .  |    ..$ a :<environment: R_EmptyEnv> 
[10:53:32.697] |  :  .  |    ..$ ii:<environment: R_EmptyEnv> 
[10:53:32.697] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:32.697] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:32.697] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:32.697] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:32.701] |  :  .  |  - copied ‘a’ to environment
[10:53:32.701] |  :  .  |  - copied ‘ii’ to environment
[10:53:32.701] |  :  .  |  assign_globals() ... done
[10:53:32.704] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.704] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.704] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:32.704] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:32.704] |  :  .  |  :  .  |  :  New stack:
[10:53:32.704] |  :  .  |  :  .  |  :  List of 1
[10:53:32.704] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.704] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.704] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.704] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.704] |  :  .  |  :  .  |  :      ...)  
[10:53:32.704] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.704] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.704] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:32.704] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.704] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.704] |  :  .  |  :  .  |  :      ...)  
[10:53:32.704] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.704] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.707] |  :  .  |  :  .  |  :  Old stack:
[10:53:32.707] |  :  .  |  :  .  |  :  List of 1
[10:53:32.707] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.707] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.707] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.707] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.707] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.707] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.707] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.709] |  :  .  |  :  .  |  :  Not identical
[10:53:32.710] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:32.710] |  :  .  |  :  .  |  :  .  List of 2
[10:53:32.710] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.710] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.710] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.710] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.710] |  :  .  |  :  .  |  :  .      ...)  
[10:53:32.710] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.710] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.710] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:32.710] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.710] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.710] |  :  .  |  :  .  |  :  .      ...)  
[10:53:32.710] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.710] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.710] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.710] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.710] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.710] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.710] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.715] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:32.715] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:32.715] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:32.716] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:32.716] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:32.716] |  :  .  |  :  .  |  List of future strategies:
[10:53:32.716] |  :  .  |  :  .  |  1. multicore:
[10:53:32.716] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:32.716] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:32.716] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:32.716] |  :  .  |  :  .  |  List of 1
[10:53:32.716] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.716] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.716] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.716] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.716] |  :  .  |  :  .  |      ...)  
[10:53:32.716] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.716] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.716] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:32.716] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.716] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.716] |  :  .  |  :  .  |      ...)  
[10:53:32.716] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.716] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.719] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:32.719] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:32.720] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.720] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:32.720] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.720] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:32.720] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:32.720] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.720] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.721] |  readImmediateCondition() ...
[10:53:32.721] |    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:32.721] |   - Number of RDS files: 0
[10:53:32.722] |  readImmediateCondition() ... DONE
[10:53:32.722] |  result() for MulticoreFuture ...
[10:53:32.722] |  result() for MulticoreFuture ... done
[10:53:32.722] result() for MulticoreFuture ... done
[10:53:32.723] result() for MulticoreFuture ...
[10:53:32.723] result() for MulticoreFuture ... done
[1] 1 2 3
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:32.724] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:32.725] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:32.728] |  :  globals found: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:32.728] |  Searching for globals ... DONE
[10:53:32.728] |  Resolving globals: TRUE
[10:53:32.728] |  Resolving any globals that are futures ...
[10:53:32.728] |  :  globals: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:32.729] |  Resolving any globals that are futures ... DONE
[10:53:32.729] |  Search for packages associated with the globals ...
[10:53:32.729] |  :  Packages associated with globals: [1] ‘base’
[10:53:32.729] |  :  Packages: [1] ‘base’
[10:53:32.730] |  Search for packages associated with the globals ... DONE
[10:53:32.730] |  Resolving futures part of globals (recursively) ...
[10:53:32.730] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:32.730] |  :  .  recursive: 99
[10:53:32.730] |  :  .  length: 2
[10:53:32.730] |  :  .  elements: ‘a’, ‘ii’
[10:53:32.730] |  :  .  'obj' is atomic
[10:53:32.731] |  :  .  length: 1 (resolved future 1)
[10:53:32.731] |  :  .  'obj' is atomic
[10:53:32.731] |  :  .  length: 0 (resolved future 2)
[10:53:32.731] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:32.731] |  :  globals: [2] ‘a’, ‘ii’
[10:53:32.731] |  Resolving futures part of globals (recursively) ... DONE
[10:53:32.731] |  Packages after dropping 'base': [0] 
[10:53:32.732] |  globals: [2] ‘a’, ‘ii’
[10:53:32.732] |  packages: [0] 
[10:53:32.732] getGlobalsAndPackages() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:32.732] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:32.733] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:32.735] |  :  globals found: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:32.735] |  Searching for globals ... DONE
[10:53:32.735] |  Resolving globals: TRUE
[10:53:32.735] |  Resolving any globals that are futures ...
[10:53:32.736] |  :  globals: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:32.736] |  Resolving any globals that are futures ... DONE
[10:53:32.736] |  Search for packages associated with the globals ...
[10:53:32.736] |  :  Packages associated with globals: [1] ‘base’
[10:53:32.736] |  :  Packages: [1] ‘base’
[10:53:32.736] |  Search for packages associated with the globals ... DONE
[10:53:32.737] |  Resolving futures part of globals (recursively) ...
[10:53:32.737] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:32.737] |  :  .  recursive: 99
[10:53:32.737] |  :  .  length: 2
[10:53:32.737] |  :  .  elements: ‘a’, ‘ii’
[10:53:32.737] |  :  .  'obj' is atomic
[10:53:32.737] |  :  .  length: 1 (resolved future 1)
[10:53:32.738] |  :  .  'obj' is atomic
[10:53:32.738] |  :  .  length: 0 (resolved future 2)
[10:53:32.738] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:32.740] |  :  globals: [2] ‘a’, ‘ii’
[10:53:32.740] |  Resolving futures part of globals (recursively) ... DONE
[10:53:32.740] |  Packages after dropping 'base': [0] 
[10:53:32.740] |  globals: [2] ‘a’, ‘ii’
[10:53:32.740] |  packages: [0] 
[10:53:32.741] getGlobalsAndPackages() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:32.741] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:32.742] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:32.744] |  :  globals found: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:32.744] |  Searching for globals ... DONE
[10:53:32.744] |  Resolving globals: TRUE
[10:53:32.745] |  Resolving any globals that are futures ...
[10:53:32.745] |  :  globals: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:32.745] |  Resolving any globals that are futures ... DONE
[10:53:32.745] |  Search for packages associated with the globals ...
[10:53:32.745] |  :  Packages associated with globals: [1] ‘base’
[10:53:32.746] |  :  Packages: [1] ‘base’
[10:53:32.746] |  Search for packages associated with the globals ... DONE
[10:53:32.746] |  Resolving futures part of globals (recursively) ...
[10:53:32.746] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:32.746] |  :  .  recursive: 99
[10:53:32.746] |  :  .  length: 2
[10:53:32.746] |  :  .  elements: ‘a’, ‘ii’
[10:53:32.747] |  :  .  'obj' is atomic
[10:53:32.747] |  :  .  length: 1 (resolved future 1)
[10:53:32.747] |  :  .  'obj' is atomic
[10:53:32.747] |  :  .  length: 0 (resolved future 2)
[10:53:32.747] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:32.747] |  :  globals: [2] ‘a’, ‘ii’
[10:53:32.747] |  Resolving futures part of globals (recursively) ... DONE
[10:53:32.747] |  Packages after dropping 'base': [0] 
[10:53:32.748] |  globals: [2] ‘a’, ‘ii’
[10:53:32.748] |  packages: [0] 
[10:53:32.748] getGlobalsAndPackages() ... done
[10:53:32.748] run() for Future (‘Future’) ...
[10:53:32.748] |  state: ‘created’
[10:53:32.748] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.748] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.749] |  Using MulticoreFutureBackend ...
[10:53:32.749] |  :  Launching futures ...
[10:53:32.749] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:32.749] |  :  .  |  getFutureData() ...
[10:53:32.749] |  :  .  |  :  getFutureCore() ...
[10:53:32.749] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:32.749] |  :  .  |  :  getFutureCore() ... done
[10:53:32.749] |  :  .  |  :  getFutureCapture() ...
[10:53:32.749] |  :  .  |  :  getFutureCapture() ... done
[10:53:32.750] |  :  .  |  :  getFutureContext() ...
[10:53:32.750] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.750] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:32.750] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.750] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:32.750] |  :  .  |  :  getFutureContext() ... done
[10:53:32.750] |  :  .  |  getFutureData() ... done
[10:53:32.750] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:32.751] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:32.752] |  :  .  |  MulticoreFuture started
[10:53:32.753] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:32.753] |  :  Launching futures ... done
[10:53:32.753] |  :  .  |  attachPackages() ...
[10:53:32.753] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:32.753] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:32.754] |  Using MulticoreFutureBackend ... done
[10:53:32.754] |  :  .  |  attachPackages() ... DONE
[10:53:32.754] run() for Future (‘MulticoreFuture’) ... done
[10:53:32.754] |  :  .  |  attachPackages() ...
[10:53:32.754] |  :  .  |  :  packages: [n=0] 
[10:53:32.754] result() for MulticoreFuture ...
[10:53:32.754] |  :  .  |  attachPackages() ... DONE
[10:53:32.755] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.755] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:32.756] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.756] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.757] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:32.757] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:32.757] |  :  .  |  :  .  |  New stack:
[10:53:32.757] |  :  .  |  :  .  |  List of 1
[10:53:32.757] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.757] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.757] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.757] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.757] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.757] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.757] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.762] |  :  .  |  :  .  |  Old stack:
[10:53:32.762] |  :  .  |  :  .  |  List of 1
[10:53:32.762] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.762] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.762] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.762] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.762] |  :  .  |  :  .  |      ...)  
[10:53:32.762] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.762] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.762] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:32.762] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.762] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.762] |  :  .  |  :  .  |      ...)  
[10:53:32.762] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.762] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.767] |  :  .  |  :  .  |  Not identical
[10:53:32.767] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:32.767] |  :  .  |  :  .  |  :  List of 2
[10:53:32.767] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.767] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.767] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.767] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.767] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.767] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.767] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.767] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.767] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.767] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.767] |  :  .  |  :  .  |  :      ...)  
[10:53:32.767] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.767] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.767] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:32.767] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.767] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.767] |  :  .  |  :  .  |  :      ...)  
[10:53:32.767] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.779] |  :  .  |  :  .  |  :  Formals differ
[10:53:32.780] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:32.780] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:32.780] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:32.780] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:32.780] |  :  .  |  :  .  List of future strategies:
[10:53:32.780] |  :  .  |  :  .  1. sequential:
[10:53:32.780] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:32.780] |  :  .  |  :  .     - tweaked: FALSE
[10:53:32.780] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.781] |  :  .  |  :  .  List of 1
[10:53:32.781] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.781] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.781] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.781] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.781] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.781] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.781] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.784] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:32.784] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:32.785] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.785] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:32.785] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.785] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:32.786] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:32.786] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:32.786] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:32.786] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.786] |  :  .  |  assign_globals() ...
[10:53:32.786] |  :  .  |  List of 2
[10:53:32.786] |  :  .  |   $ a : num 1
[10:53:32.786] |  :  .  |   $ ii: int 1
[10:53:32.786] |  :  .  |   - attr(*, "where")=List of 2
[10:53:32.786] |  :  .  |    ..$ a :<environment: R_EmptyEnv> 
[10:53:32.786] |  :  .  |    ..$ ii:<environment: R_EmptyEnv> 
[10:53:32.786] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:32.786] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:32.786] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:32.786] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:32.790] |  :  .  |  - copied ‘a’ to environment
[10:53:32.790] |  :  .  |  - copied ‘ii’ to environment
[10:53:32.790] |  :  .  |  assign_globals() ... done
[10:53:32.792] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.792] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.793] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:32.793] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:32.793] |  :  .  |  :  .  |  :  New stack:
[10:53:32.793] |  :  .  |  :  .  |  :  List of 1
[10:53:32.793] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.793] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.793] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.793] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.793] |  :  .  |  :  .  |  :      ...)  
[10:53:32.793] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.793] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.793] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:32.793] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.793] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.793] |  :  .  |  :  .  |  :      ...)  
[10:53:32.793] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.793] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.796] |  :  .  |  :  .  |  :  Old stack:
[10:53:32.796] |  :  .  |  :  .  |  :  List of 1
[10:53:32.796] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.796] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.796] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.796] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.796] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.796] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.796] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.800] |  :  .  |  :  .  |  :  Not identical
[10:53:32.800] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:32.800] |  :  .  |  :  .  |  :  .  List of 2
[10:53:32.800] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.800] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.800] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.800] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.800] |  :  .  |  :  .  |  :  .      ...)  
[10:53:32.800] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.800] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.800] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:32.800] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.800] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.800] |  :  .  |  :  .  |  :  .      ...)  
[10:53:32.800] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.800] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.800] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.800] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.800] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.800] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.800] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.805] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:32.805] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:32.805] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:32.805] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:32.805] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:32.805] |  :  .  |  :  .  |  List of future strategies:
[10:53:32.805] |  :  .  |  :  .  |  1. multicore:
[10:53:32.805] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:32.805] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:32.805] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:32.806] |  :  .  |  :  .  |  List of 1
[10:53:32.806] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.806] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.806] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.806] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.806] |  :  .  |  :  .  |      ...)  
[10:53:32.806] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.806] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.806] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:32.806] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.806] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.806] |  :  .  |  :  .  |      ...)  
[10:53:32.806] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.806] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.809] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:32.809] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:32.809] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.809] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:32.809] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.809] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:32.810] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:32.810] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.810] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.810] |  readImmediateCondition() ...
[10:53:32.811] |    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:32.811] |   - Number of RDS files: 0
[10:53:32.811] |  readImmediateCondition() ... DONE
[10:53:32.811] |  result() for MulticoreFuture ...
[10:53:32.811] |  result() for MulticoreFuture ... done
[10:53:32.812] result() for MulticoreFuture ... done
[10:53:32.812] result() for MulticoreFuture ...
[10:53:32.812] result() for MulticoreFuture ... done
[10:53:32.812] run() for Future (‘Future’) ...
[10:53:32.812] |  state: ‘created’
[10:53:32.813] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.813] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.813] |  Using MulticoreFutureBackend ...
[10:53:32.813] |  :  Launching futures ...
[10:53:32.813] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:32.813] |  :  .  |  getFutureData() ...
[10:53:32.814] |  :  .  |  :  getFutureCore() ...
[10:53:32.814] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:32.814] |  :  .  |  :  getFutureCore() ... done
[10:53:32.814] |  :  .  |  :  getFutureCapture() ...
[10:53:32.814] |  :  .  |  :  getFutureCapture() ... done
[10:53:32.814] |  :  .  |  :  getFutureContext() ...
[10:53:32.814] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.814] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:32.815] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.815] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:32.815] |  :  .  |  :  getFutureContext() ... done
[10:53:32.815] |  :  .  |  getFutureData() ... done
[10:53:32.815] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:32.816] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:32.817] |  :  .  |  MulticoreFuture started
[10:53:32.818] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:32.818] |  :  Launching futures ... done
[10:53:32.818] |  :  .  |  attachPackages() ...
[10:53:32.818] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:32.818] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:32.819] |  Using MulticoreFutureBackend ... done
[10:53:32.819] run() for Future (‘MulticoreFuture’) ... done
[10:53:32.819] |  :  .  |  attachPackages() ... DONE
[10:53:32.819] |  :  .  |  attachPackages() ...
[10:53:32.819] result() for MulticoreFuture ...
[10:53:32.819] |  :  .  |  :  packages: [n=0] 
[10:53:32.819] |  :  .  |  attachPackages() ... DONE
[10:53:32.820] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.820] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:32.821] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.821] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.822] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:32.822] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:32.822] |  :  .  |  :  .  |  New stack:
[10:53:32.822] |  :  .  |  :  .  |  List of 1
[10:53:32.822] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.822] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.822] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.822] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.822] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.822] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.822] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.827] |  :  .  |  :  .  |  Old stack:
[10:53:32.827] |  :  .  |  :  .  |  List of 1
[10:53:32.827] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.827] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.827] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.827] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.827] |  :  .  |  :  .  |      ...)  
[10:53:32.827] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.827] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.827] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:32.827] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.827] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.827] |  :  .  |  :  .  |      ...)  
[10:53:32.827] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.827] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.838] |  :  .  |  :  .  |  Not identical
[10:53:32.838] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:32.838] |  :  .  |  :  .  |  :  List of 2
[10:53:32.838] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.838] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.838] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.838] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.838] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.838] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.838] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.838] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.838] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.838] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.838] |  :  .  |  :  .  |  :      ...)  
[10:53:32.838] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.838] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.838] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:32.838] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.838] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.838] |  :  .  |  :  .  |  :      ...)  
[10:53:32.838] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.846] |  :  .  |  :  .  |  :  Formals differ
[10:53:32.846] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:32.846] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:32.846] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:32.846] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:32.847] |  :  .  |  :  .  List of future strategies:
[10:53:32.847] |  :  .  |  :  .  1. sequential:
[10:53:32.847] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:32.847] |  :  .  |  :  .     - tweaked: FALSE
[10:53:32.847] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.847] |  :  .  |  :  .  List of 1
[10:53:32.847] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.847] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.847] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.847] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.847] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.847] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.847] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.850] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:32.850] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:32.850] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.850] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:32.850] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.851] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:32.851] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:32.851] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:32.851] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:32.851] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.851] |  :  .  |  assign_globals() ...
[10:53:32.852] |  :  .  |  List of 2
[10:53:32.852] |  :  .  |   $ a : num 1
[10:53:32.852] |  :  .  |   $ ii: int 2
[10:53:32.852] |  :  .  |   - attr(*, "where")=List of 2
[10:53:32.852] |  :  .  |    ..$ a :<environment: R_EmptyEnv> 
[10:53:32.852] |  :  .  |    ..$ ii:<environment: R_EmptyEnv> 
[10:53:32.852] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:32.852] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:32.852] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:32.852] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:32.855] |  :  .  |  - copied ‘a’ to environment
[10:53:32.855] |  :  .  |  - copied ‘ii’ to environment
[10:53:32.855] |  :  .  |  assign_globals() ... done
[10:53:32.857] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.858] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.859] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:32.859] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:32.859] |  :  .  |  :  .  |  :  New stack:
[10:53:32.860] |  :  .  |  :  .  |  :  List of 1
[10:53:32.860] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.860] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.860] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.860] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.860] |  :  .  |  :  .  |  :      ...)  
[10:53:32.860] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.860] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.860] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:32.860] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.860] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.860] |  :  .  |  :  .  |  :      ...)  
[10:53:32.860] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.860] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.863] |  :  .  |  :  .  |  :  Old stack:
[10:53:32.863] |  :  .  |  :  .  |  :  List of 1
[10:53:32.863] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.863] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.863] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.863] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.863] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.863] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.863] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.865] |  :  .  |  :  .  |  :  Not identical
[10:53:32.865] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:32.865] |  :  .  |  :  .  |  :  .  List of 2
[10:53:32.865] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.865] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.865] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.865] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.865] |  :  .  |  :  .  |  :  .      ...)  
[10:53:32.865] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.865] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.865] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:32.865] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.865] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.865] |  :  .  |  :  .  |  :  .      ...)  
[10:53:32.865] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.865] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.865] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.865] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.865] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.865] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.865] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.870] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:32.870] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:32.870] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:32.870] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:32.870] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:32.870] |  :  .  |  :  .  |  List of future strategies:
[10:53:32.870] |  :  .  |  :  .  |  1. multicore:
[10:53:32.870] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:32.870] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:32.870] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:32.870] |  :  .  |  :  .  |  List of 1
[10:53:32.870] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.870] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.870] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.870] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.870] |  :  .  |  :  .  |      ...)  
[10:53:32.870] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.870] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.870] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:32.870] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.870] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.870] |  :  .  |  :  .  |      ...)  
[10:53:32.870] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.870] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.874] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:32.875] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:32.875] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.875] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:32.875] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.875] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:32.875] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:32.876] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.876] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.876] |  readImmediateCondition() ...
[10:53:32.877] |    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:32.877] |   - Number of RDS files: 0
[10:53:32.877] |  readImmediateCondition() ... DONE
[10:53:32.877] |  result() for MulticoreFuture ...
[10:53:32.878] |  result() for MulticoreFuture ... done
[10:53:32.878] result() for MulticoreFuture ... done
[10:53:32.878] result() for MulticoreFuture ...
[10:53:32.878] result() for MulticoreFuture ... done
[10:53:32.878] run() for Future (‘Future’) ...
[10:53:32.879] |  state: ‘created’
[10:53:32.879] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.879] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.879] |  Using MulticoreFutureBackend ...
[10:53:32.879] |  :  Launching futures ...
[10:53:32.879] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:32.880] |  :  .  |  getFutureData() ...
[10:53:32.880] |  :  .  |  :  getFutureCore() ...
[10:53:32.880] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:32.880] |  :  .  |  :  getFutureCore() ... done
[10:53:32.880] |  :  .  |  :  getFutureCapture() ...
[10:53:32.880] |  :  .  |  :  getFutureCapture() ... done
[10:53:32.880] |  :  .  |  :  getFutureContext() ...
[10:53:32.880] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.881] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:32.881] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.881] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:32.881] |  :  .  |  :  getFutureContext() ... done
[10:53:32.881] |  :  .  |  getFutureData() ... done
[10:53:32.882] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:32.882] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:32.884] |  :  .  |  MulticoreFuture started
[10:53:32.884] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:32.884] |  :  .  |  attachPackages() ...
[10:53:32.888] |  :  Launching futures ... done
[10:53:32.888] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:32.888] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:32.889] |  :  .  |  attachPackages() ... DONE
[10:53:32.889] |  Using MulticoreFutureBackend ... done
[10:53:32.889] |  :  .  |  attachPackages() ...
[10:53:32.889] run() for Future (‘MulticoreFuture’) ... done
[10:53:32.889] |  :  .  |  :  packages: [n=0] 
[10:53:32.889] result() for MulticoreFuture ...
[10:53:32.890] |  :  .  |  attachPackages() ... DONE
[10:53:32.891] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.891] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:32.892] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.893] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.893] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:32.894] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:32.894] |  :  .  |  :  .  |  New stack:
[10:53:32.894] |  :  .  |  :  .  |  List of 1
[10:53:32.894] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.894] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.894] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.894] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.894] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.894] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.894] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.901] |  :  .  |  :  .  |  Old stack:
[10:53:32.901] |  :  .  |  :  .  |  List of 1
[10:53:32.901] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.901] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.901] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.901] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.901] |  :  .  |  :  .  |      ...)  
[10:53:32.901] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.901] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.901] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:32.901] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.901] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.901] |  :  .  |  :  .  |      ...)  
[10:53:32.901] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.901] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.906] |  :  .  |  :  .  |  Not identical
[10:53:32.906] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:32.907] |  :  .  |  :  .  |  :  List of 2
[10:53:32.907] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.907] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.907] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.907] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.907] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.907] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.907] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.907] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.907] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.907] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.907] |  :  .  |  :  .  |  :      ...)  
[10:53:32.907] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.907] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.907] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:32.907] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.907] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.907] |  :  .  |  :  .  |  :      ...)  
[10:53:32.907] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.913] |  :  .  |  :  .  |  :  Formals differ
[10:53:32.913] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:32.913] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:32.913] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:32.913] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:32.913] |  :  .  |  :  .  List of future strategies:
[10:53:32.913] |  :  .  |  :  .  1. sequential:
[10:53:32.913] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:32.913] |  :  .  |  :  .     - tweaked: FALSE
[10:53:32.913] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.914] |  :  .  |  :  .  List of 1
[10:53:32.914] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.914] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.914] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.914] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.914] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.914] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.914] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.917] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:32.917] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:32.917] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.917] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:32.917] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.918] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:32.918] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:32.918] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:32.918] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:32.918] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.918] |  :  .  |  assign_globals() ...
[10:53:32.919] |  :  .  |  List of 2
[10:53:32.919] |  :  .  |   $ a : num 1
[10:53:32.919] |  :  .  |   $ ii: int 3
[10:53:32.919] |  :  .  |   - attr(*, "where")=List of 2
[10:53:32.919] |  :  .  |    ..$ a :<environment: R_EmptyEnv> 
[10:53:32.919] |  :  .  |    ..$ ii:<environment: R_EmptyEnv> 
[10:53:32.919] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:32.919] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:32.919] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:32.919] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:32.924] |  :  .  |  - copied ‘a’ to environment
[10:53:32.924] |  :  .  |  - copied ‘ii’ to environment
[10:53:32.924] |  :  .  |  assign_globals() ... done
[10:53:32.926] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.927] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.927] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:32.927] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:32.927] |  :  .  |  :  .  |  :  New stack:
[10:53:32.927] |  :  .  |  :  .  |  :  List of 1
[10:53:32.927] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.927] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.927] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.927] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.927] |  :  .  |  :  .  |  :      ...)  
[10:53:32.927] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.927] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.927] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:32.927] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.927] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.927] |  :  .  |  :  .  |  :      ...)  
[10:53:32.927] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.927] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.931] |  :  .  |  :  .  |  :  Old stack:
[10:53:32.931] |  :  .  |  :  .  |  :  List of 1
[10:53:32.931] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.931] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.931] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.931] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.931] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.931] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.931] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.933] |  :  .  |  :  .  |  :  Not identical
[10:53:32.933] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:32.933] |  :  .  |  :  .  |  :  .  List of 2
[10:53:32.933] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.933] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.933] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.933] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.933] |  :  .  |  :  .  |  :  .      ...)  
[10:53:32.933] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.933] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.933] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:32.933] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.933] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.933] |  :  .  |  :  .  |  :  .      ...)  
[10:53:32.933] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.933] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.933] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.933] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.933] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.933] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.933] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.938] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:32.938] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:32.938] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:32.938] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:32.938] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:32.938] |  :  .  |  :  .  |  List of future strategies:
[10:53:32.938] |  :  .  |  :  .  |  1. multicore:
[10:53:32.938] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:32.938] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:32.938] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:32.939] |  :  .  |  :  .  |  List of 1
[10:53:32.939] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.939] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.939] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.939] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.939] |  :  .  |  :  .  |      ...)  
[10:53:32.939] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.939] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.939] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:32.939] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.939] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.939] |  :  .  |  :  .  |      ...)  
[10:53:32.939] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.939] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.943] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:32.943] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:32.943] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.944] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:32.944] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.944] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:32.944] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:32.944] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.944] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.945] |  readImmediateCondition() ...
[10:53:32.945] |    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:32.945] |   - Number of RDS files: 0
[10:53:32.946] |  readImmediateCondition() ... DONE
[10:53:32.946] |  result() for MulticoreFuture ...
[10:53:32.946] |  result() for MulticoreFuture ... done
[10:53:32.946] result() for MulticoreFuture ... done
[10:53:32.947] result() for MulticoreFuture ...
[10:53:32.947] result() for MulticoreFuture ... done
[1] 1 2 3
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:32.948] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:32.948] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:32.949] |  :  globals found: [0] 
[10:53:32.949] |  Searching for globals ... DONE
[10:53:32.950] |  globals: [0] <none>
[10:53:32.950] |  packages: [0] <none>
[10:53:32.950] getGlobalsAndPackages() ... done
[10:53:32.950] run() for Future (‘Future’) ...
[10:53:32.950] |  state: ‘created’
[10:53:32.951] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.951] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.951] |  Using MulticoreFutureBackend ...
[10:53:32.951] |  :  Launching futures ...
[10:53:32.951] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:32.952] |  :  .  |  getFutureData() ...
[10:53:32.952] |  :  .  |  :  getFutureCore() ...
[10:53:32.952] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:32.952] |  :  .  |  :  getFutureCore() ... done
[10:53:32.952] |  :  .  |  :  getFutureCapture() ...
[10:53:32.952] |  :  .  |  :  getFutureCapture() ... done
[10:53:32.953] |  :  .  |  :  getFutureContext() ...
[10:53:32.953] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.953] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:32.953] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.953] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:32.953] |  :  .  |  :  getFutureContext() ... done
[10:53:32.954] |  :  .  |  getFutureData() ... done
[10:53:32.954] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:32.954] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:32.956] |  :  .  |  MulticoreFuture started
[10:53:32.957] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:32.957] |  :  .  |  attachPackages() ...
[10:53:32.958] |  :  Launching futures ... done
[10:53:32.958] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:32.958] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:32.959] |  :  .  |  attachPackages() ... DONE
[10:53:32.959] |  Using MulticoreFutureBackend ... done
[10:53:32.959] |  :  .  |  attachPackages() ...
[10:53:32.959] run() for Future (‘MulticoreFuture’) ... done
[10:53:32.959] |  :  .  |  :  packages: [n=0] 
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:32.960] |  :  .  |  attachPackages() ... DONE
[10:53:32.960] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:32.961] |  Searching for globals ...
[10:53:32.961] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:32.961] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:32.962] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.962] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.963] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:32.963] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:32.963] |  :  .  |  :  .  |  New stack:
[10:53:32.964] |  :  globals found: [3] ‘+’, ‘value’, ‘a’
[10:53:32.964] |  Searching for globals ... DONE
[10:53:32.964] |  Resolving globals: TRUE
[10:53:32.964] |  Resolving any globals that are futures ...
[10:53:32.964] |  :  globals: [3] ‘+’, ‘value’, ‘a’
[10:53:32.965] |  Resolving any globals that are futures ... DONE
[10:53:32.965] |  Search for packages associated with the globals ...
[10:53:32.965] |  :  Packages associated with globals: [2] ‘base’, ‘future’
[10:53:32.966] |  :  Packages: [2] ‘base’, ‘future’
[10:53:32.966] |  Search for packages associated with the globals ... DONE
[10:53:32.966] |  Resolving futures part of globals (recursively) ...
[10:53:32.966] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:32.967] |  :  .  recursive: 99
[10:53:32.967] |  :  .  length: 1
[10:53:32.967] |  :  .  elements: ‘a’
[10:53:32.967] |  :  .  'obj' is MulticoreFuture
[10:53:32.964] |  :  .  |  :  .  |  List of 1
[10:53:32.964] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.964] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.964] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.964] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.964] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.964] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.964] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.968] |  :  .  |  :  .  |  Old stack:
[10:53:32.968] |  :  .  |  :  .  |  List of 1
[10:53:32.968] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.968] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.968] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.968] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.968] |  :  .  |  :  .  |      ...)  
[10:53:32.968] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.968] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.968] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:32.968] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.968] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.968] |  :  .  |  :  .  |      ...)  
[10:53:32.968] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.968] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.973] |  :  .  |  :  .  |  Not identical
[10:53:32.973] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:32.977] |  :  .  readImmediateCondition() ...
[10:53:32.978] |  :  .    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:32.978] |  :  .   - Number of RDS files: 0
[10:53:32.978] |  :  .  readImmediateCondition() ... DONE
[10:53:32.973] |  :  .  |  :  .  |  :  List of 2
[10:53:32.973] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.973] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.973] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.973] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.973] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.973] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.973] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.973] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.973] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.973] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.973] |  :  .  |  :  .  |  :      ...)  
[10:53:32.973] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.973] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.973] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:32.973] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.973] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.973] |  :  .  |  :  .  |  :      ...)  
[10:53:32.973] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.980] |  :  .  |  :  .  |  :  Formals differ
[10:53:32.982] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:32.982] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:32.982] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:32.982] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:32.982] |  :  .  |  :  .  List of future strategies:
[10:53:32.982] |  :  .  |  :  .  1. sequential:
[10:53:32.982] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:32.982] |  :  .  |  :  .     - tweaked: FALSE
[10:53:32.982] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.983] |  :  .  |  :  .  List of 1
[10:53:32.983] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.983] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.983] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.983] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.983] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.983] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.983] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.986] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:32.987] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:32.987] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:32.987] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:32.987] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:32.987] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:32.988] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:32.988] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:32.988] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:32.988] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:32.988] |  :  .  'obj' is MulticoreFuture
[10:53:32.991] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.991] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:32.991] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:32.991] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:32.991] |  :  .  |  :  .  |  :  New stack:
[10:53:32.991] |  :  .  |  :  .  |  :  List of 1
[10:53:32.991] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.991] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.991] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.991] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.991] |  :  .  |  :  .  |  :      ...)  
[10:53:32.991] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.991] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.991] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:32.991] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.991] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.991] |  :  .  |  :  .  |  :      ...)  
[10:53:32.991] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.991] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.994] |  :  .  |  :  .  |  :  Old stack:
[10:53:32.995] |  :  .  |  :  .  |  :  List of 1
[10:53:32.995] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.995] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.995] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.995] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.995] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.995] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:32.995] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:32.997] |  :  .  |  :  .  |  :  Not identical
[10:53:32.997] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:32.999] |  :  .  readImmediateCondition() ...
[10:53:32.999] |  :  .    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:32.999] |  :  .   - Number of RDS files: 0
[10:53:32.999] |  :  .  readImmediateCondition() ... DONE
[10:53:32.997] |  :  .  |  :  .  |  :  .  List of 2
[10:53:32.997] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:32.997] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:32.997] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:32.997] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.997] |  :  .  |  :  .  |  :  .      ...)  
[10:53:32.997] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.997] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.997] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:32.997] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:32.997] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:32.997] |  :  .  |  :  .  |  :  .      ...)  
[10:53:32.997] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:32.997] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:32.997] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:32.997] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:32.997] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.997] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:32.997] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.001] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:33.002] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:33.002] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:33.002] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:33.002] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:33.002] |  :  .  |  :  .  |  List of future strategies:
[10:53:33.002] |  :  .  |  :  .  |  1. multicore:
[10:53:33.002] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:33.002] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:33.002] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:33.004] |  :  .  |  :  .  |  List of 1
[10:53:33.004] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.004] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.004] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.004] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.004] |  :  .  |  :  .  |      ...)  
[10:53:33.004] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.004] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.004] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:33.004] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.004] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.004] |  :  .  |  :  .  |      ...)  
[10:53:33.004] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.004] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.007] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:33.007] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:33.008] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.008] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:33.008] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.008] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:33.008] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:33.008] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.008] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.009] |  :  .  'obj' is MulticoreFuture
[10:53:33.010] |  :  .  readImmediateCondition() ...
[10:53:33.010] |  :  .    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:33.010] |  :  .   - Number of RDS files: 0
[10:53:33.010] |  :  .  readImmediateCondition() ... DONE
[10:53:33.010] |  :  .  Future #1
[10:53:33.011] |  :  .  value(obj, ...) ...
[10:53:33.011] |  :  .  |  result() for MulticoreFuture ...
[10:53:33.011] |  :  .  |  :  readImmediateCondition() ...
[10:53:33.011] |  :  .  |  :    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:33.012] |  :  .  |  :   - Number of RDS files: 0
[10:53:33.012] |  :  .  |  :  readImmediateCondition() ... DONE
[10:53:33.012] |  :  .  |  :  result() for MulticoreFuture ...
[10:53:33.012] |  :  .  |  :  result() for MulticoreFuture ... done
[10:53:33.012] |  :  .  |  result() for MulticoreFuture ... done
[10:53:33.012] |  :  .  |  result() for MulticoreFuture ...
[10:53:33.013] |  :  .  |  result() for MulticoreFuture ... done
[10:53:33.013] |  :  .  value(obj, ...) ... done
[10:53:33.013] |  :  .  resolve(obj, ...) ...
[10:53:33.013] |  :  .  |  A MulticoreFuture was resolved
[10:53:33.013] |  :  .  resolve(obj, ...) ... done
[10:53:33.013] |  :  .  length: 0 (resolved future 1)
[10:53:33.013] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:33.014] |  :  globals: [1] ‘a’
[10:53:33.014] |  Resolving futures part of globals (recursively) ... DONE
[10:53:33.014] |  Packages after dropping 'base': [1] ‘future’
[10:53:33.014] |  Packages after dropping non-attached packages: [1] ‘future’
[10:53:33.014] |  globals: [1] ‘a’
[10:53:33.014] |  packages: [1] ‘future’
[10:53:33.014] getGlobalsAndPackages() ... done
[10:53:33.015] run() for Future (‘Future’) ...
[10:53:33.015] |  state: ‘created’
[10:53:33.015] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.015] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.015] |  Using MulticoreFutureBackend ...
[10:53:33.015] |  :  Launching futures ...
[10:53:33.016] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:33.016] |  :  .  |  getFutureData() ...
[10:53:33.016] |  :  .  |  :  getFutureCore() ...
[10:53:33.016] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘future’
[10:53:33.016] |  :  .  |  :  getFutureCore() ... done
[10:53:33.016] |  :  .  |  :  getFutureCapture() ...
[10:53:33.016] |  :  .  |  :  getFutureCapture() ... done
[10:53:33.016] |  :  .  |  :  getFutureContext() ...
[10:53:33.017] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.017] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:33.017] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.017] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:33.017] |  :  .  |  :  getFutureContext() ... done
[10:53:33.017] |  :  .  |  getFutureData() ... done
[10:53:33.017] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:33.018] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:33.019] |  :  .  |  MulticoreFuture started
[10:53:33.020] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:33.020] |  :  Launching futures ... done
[10:53:33.020] |  :  .  |  attachPackages() ...
[10:53:33.020] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:33.020] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:33.021] |  Using MulticoreFutureBackend ... done
[10:53:33.021] run() for Future (‘MulticoreFuture’) ... done
[10:53:33.021] |  :  .  |  attachPackages() ... DONE
[10:53:33.021] |  :  .  |  attachPackages() ...
[10:53:33.021] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:33.021] result() for MulticoreFuture ...
[10:53:33.021] |  :  .  |  attachPackages() ... DONE
[10:53:33.022] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.023] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:33.023] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.024] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.024] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:33.024] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:33.024] |  :  .  |  :  .  |  New stack:
[10:53:33.025] |  :  .  |  :  .  |  List of 1
[10:53:33.025] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.025] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.025] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.025] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.025] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.025] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.025] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.035] |  :  .  |  :  .  |  Old stack:
[10:53:33.036] |  :  .  |  :  .  |  List of 1
[10:53:33.036] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.036] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.036] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.036] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.036] |  :  .  |  :  .  |      ...)  
[10:53:33.036] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.036] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.036] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:33.036] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.036] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.036] |  :  .  |  :  .  |      ...)  
[10:53:33.036] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.036] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.042] |  :  .  |  :  .  |  Not identical
[10:53:33.043] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:33.043] |  :  .  |  :  .  |  :  List of 2
[10:53:33.043] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.043] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.043] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.043] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.043] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.043] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.043] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.043] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.043] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.043] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.043] |  :  .  |  :  .  |  :      ...)  
[10:53:33.043] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.043] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.043] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:33.043] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.043] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.043] |  :  .  |  :  .  |  :      ...)  
[10:53:33.043] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.050] |  :  .  |  :  .  |  :  Formals differ
[10:53:33.050] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:33.050] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:33.050] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:33.050] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:33.050] |  :  .  |  :  .  List of future strategies:
[10:53:33.050] |  :  .  |  :  .  1. sequential:
[10:53:33.050] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:33.050] |  :  .  |  :  .     - tweaked: FALSE
[10:53:33.050] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.051] |  :  .  |  :  .  List of 1
[10:53:33.051] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.051] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.051] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.051] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.051] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.051] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.051] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.053] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:33.054] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:33.054] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.054] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:33.054] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.054] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:33.055] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:33.055] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:33.055] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:33.055] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.055] |  :  .  |  assign_globals() ...
[10:53:33.055] |  :  .  |  List of 1
[10:53:33.055] |  :  .  |   $ a:Classes 'MulticoreFuture', 'MultiprocessFuture', 'Future' <environment: 0x560a721c11b8> 
[10:53:33.055] |  :  .  |   - attr(*, "where")=List of 1
[10:53:33.055] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:53:33.055] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:33.055] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:33.055] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:33.055] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:33.058] |  :  .  |  - copied ‘a’ to environment
[10:53:33.058] |  :  .  |  assign_globals() ... done
[10:53:33.063] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.063] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.063] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:33.063] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:33.063] |  :  .  |  :  .  |  :  New stack:
[10:53:33.064] |  :  .  |  :  .  |  :  List of 1
[10:53:33.064] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.064] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.064] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.064] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.064] |  :  .  |  :  .  |  :      ...)  
[10:53:33.064] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.064] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.064] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:33.064] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.064] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.064] |  :  .  |  :  .  |  :      ...)  
[10:53:33.064] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.064] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.067] |  :  .  |  :  .  |  :  Old stack:
[10:53:33.067] |  :  .  |  :  .  |  :  List of 1
[10:53:33.067] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.067] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.067] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.067] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.067] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.067] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.067] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.069] |  :  .  |  :  .  |  :  Not identical
[10:53:33.069] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:33.070] |  :  .  |  :  .  |  :  .  List of 2
[10:53:33.070] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.070] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.070] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.070] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.070] |  :  .  |  :  .  |  :  .      ...)  
[10:53:33.070] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.070] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.070] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:33.070] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.070] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.070] |  :  .  |  :  .  |  :  .      ...)  
[10:53:33.070] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.070] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.070] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.070] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.070] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.070] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.070] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.074] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:33.074] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:33.074] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:33.074] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:33.074] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:33.074] |  :  .  |  :  .  |  List of future strategies:
[10:53:33.074] |  :  .  |  :  .  |  1. multicore:
[10:53:33.074] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:33.074] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:33.074] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:33.075] |  :  .  |  :  .  |  List of 1
[10:53:33.075] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.075] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.075] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.075] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.075] |  :  .  |  :  .  |      ...)  
[10:53:33.075] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.075] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.075] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:33.075] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.075] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.075] |  :  .  |  :  .  |      ...)  
[10:53:33.075] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.075] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.078] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:33.078] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:33.078] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.079] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:33.079] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.079] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:33.080] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:33.080] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.080] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.080] |  readImmediateCondition() ...
[10:53:33.081] |    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:33.081] |   - Number of RDS files: 0
[10:53:33.081] |  readImmediateCondition() ... DONE
[10:53:33.081] |  result() for MulticoreFuture ...
[10:53:33.082] |  result() for MulticoreFuture ... done
[10:53:33.082] |  signalConditions() ...
[10:53:33.082] |  :  include = ‘immediateCondition’
[10:53:33.082] |  :  exclude = 
[10:53:33.082] |  :  resignal = FALSE
[10:53:33.082] |  :  Number of conditions: 4
[10:53:33.082] |  signalConditions() ... done
[10:53:33.083] result() for MulticoreFuture ... done
[10:53:33.085] result() for MulticoreFuture ...
[10:53:33.085] result() for MulticoreFuture ... done
[10:53:33.085] signalConditions() ...
[10:53:33.085] |  include = ‘immediateCondition’
[10:53:33.086] |  exclude = 
[10:53:33.086] |  resignal = FALSE
[10:53:33.086] |  Number of conditions: 4
[10:53:33.086] signalConditions() ... done
[10:53:33.086] Future state: ‘finished’
[10:53:33.087] result() for MulticoreFuture ...
[10:53:33.087] result() for MulticoreFuture ... done
[10:53:33.087] signalConditions() ...
[10:53:33.087] |  include = ‘condition’
[10:53:33.087] |  exclude = ‘immediateCondition’
[10:53:33.088] |  resignal = TRUE
[10:53:33.088] |  Number of conditions: 4
[10:53:33.088] |  Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.060] |  :  .  |  result() for MulticoreFuture ...
[10:53:33.088] |  Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.060] |  :  .  |  result() for MulticoreFuture ... done
[10:53:33.089] |  Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.060] |  :  .  |  result() for MulticoreFuture ...
[10:53:33.089] |  Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.061] |  :  .  |  result() for MulticoreFuture ... done
[10:53:33.089] signalConditions() ... done
value(b) = 2
[10:53:33.089] result() for MulticoreFuture ...
[10:53:33.090] result() for MulticoreFuture ... done
[10:53:33.090] result() for MulticoreFuture ...
[10:53:33.090] result() for MulticoreFuture ... done
[10:53:33.090] signalConditions() ...
[10:53:33.090] |  include = ‘immediateCondition’
[10:53:33.090] |  exclude = 
[10:53:33.091] |  resignal = FALSE
[10:53:33.091] |  Number of conditions: 4
[10:53:33.091] signalConditions() ... done
[10:53:33.091] Future state: ‘finished’
[10:53:33.091] result() for MulticoreFuture ...
[10:53:33.091] result() for MulticoreFuture ... done
[10:53:33.092] signalConditions() ...
[10:53:33.092] |  include = ‘condition’
[10:53:33.092] |  exclude = ‘immediateCondition’
[10:53:33.092] |  resignal = TRUE
[10:53:33.092] |  Number of conditions: 4
[10:53:33.092] |  Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.060] |  :  .  |  result() for MulticoreFuture ...
[10:53:33.093] |  Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.060] |  :  .  |  result() for MulticoreFuture ... done
[10:53:33.093] |  Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.060] |  :  .  |  result() for MulticoreFuture ...
[10:53:33.093] |  Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.061] |  :  .  |  result() for MulticoreFuture ... done
[10:53:33.093] signalConditions() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:33.094] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:33.094] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:33.095] |  :  globals found: [0] 
[10:53:33.095] |  Searching for globals ... DONE
[10:53:33.095] |  globals: [0] <none>
[10:53:33.095] |  packages: [0] <none>
[10:53:33.095] getGlobalsAndPackages() ... done
[10:53:33.096] run() for Future (‘Future’) ...
[10:53:33.096] |  state: ‘created’
[10:53:33.096] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.096] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.096] |  Using MulticoreFutureBackend ...
[10:53:33.097] |  :  Launching futures ...
[10:53:33.097] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:33.097] |  :  .  |  getFutureData() ...
[10:53:33.097] |  :  .  |  :  getFutureCore() ...
[10:53:33.097] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:33.097] |  :  .  |  :  getFutureCore() ... done
[10:53:33.097] |  :  .  |  :  getFutureCapture() ...
[10:53:33.098] |  :  .  |  :  getFutureCapture() ... done
[10:53:33.098] |  :  .  |  :  getFutureContext() ...
[10:53:33.098] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.098] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:33.098] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.098] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:33.098] |  :  .  |  :  getFutureContext() ... done
[10:53:33.098] |  :  .  |  getFutureData() ... done
[10:53:33.099] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:33.099] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:33.101] |  :  .  |  MulticoreFuture started
[10:53:33.101] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:33.101] |  :  Launching futures ... done
[10:53:33.101] |  :  .  |  attachPackages() ...
[10:53:33.102] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:33.102] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:33.102] |  Using MulticoreFutureBackend ... done
[10:53:33.102] run() for Future (‘MulticoreFuture’) ... done
[10:53:33.102] |  :  .  |  attachPackages() ... DONE
[10:53:33.102] |  :  .  |  attachPackages() ...
[10:53:33.103] |  :  .  |  :  packages: [n=0] 
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:33.103] |  :  .  |  attachPackages() ... DONE
[10:53:33.103] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:33.103] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:33.104] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.104] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:33.104] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.105] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.105] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:33.105] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:33.105] |  :  .  |  :  .  |  New stack:
[10:53:33.106] |  :  globals found: [3] ‘+’, ‘value’, ‘a’
[10:53:33.106] |  Searching for globals ... DONE
[10:53:33.106] |  Resolving globals: TRUE
[10:53:33.106] |  Resolving any globals that are futures ...
[10:53:33.106] |  :  globals: [3] ‘+’, ‘value’, ‘a’
[10:53:33.107] |  Resolving any globals that are futures ... DONE
[10:53:33.107] |  Search for packages associated with the globals ...
[10:53:33.107] |  :  Packages associated with globals: [2] ‘base’, ‘future’
[10:53:33.108] |  :  Packages: [2] ‘base’, ‘future’
[10:53:33.108] |  Search for packages associated with the globals ... DONE
[10:53:33.108] |  Resolving futures part of globals (recursively) ...
[10:53:33.109] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:33.109] |  :  .  recursive: 99
[10:53:33.109] |  :  .  length: 1
[10:53:33.109] |  :  .  elements: ‘a’
[10:53:33.109] |  :  .  'obj' is MulticoreFuture
[10:53:33.106] |  :  .  |  :  .  |  List of 1
[10:53:33.106] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.106] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.106] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.106] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.106] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.106] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.106] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.110] |  :  .  |  :  .  |  Old stack:
[10:53:33.110] |  :  .  |  :  .  |  List of 1
[10:53:33.110] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.110] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.110] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.110] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.110] |  :  .  |  :  .  |      ...)  
[10:53:33.110] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.110] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.110] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:33.110] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.110] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.110] |  :  .  |  :  .  |      ...)  
[10:53:33.110] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.110] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.115] |  :  .  |  :  .  |  Not identical
[10:53:33.115] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:33.119] |  :  .  readImmediateCondition() ...
[10:53:33.120] |  :  .    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:33.120] |  :  .   - Number of RDS files: 0
[10:53:33.120] |  :  .  readImmediateCondition() ... DONE
[10:53:33.115] |  :  .  |  :  .  |  :  List of 2
[10:53:33.115] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.115] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.115] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.115] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.115] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.115] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.115] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.115] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.115] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.115] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.115] |  :  .  |  :  .  |  :      ...)  
[10:53:33.115] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.115] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.115] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:33.115] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.115] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.115] |  :  .  |  :  .  |  :      ...)  
[10:53:33.115] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.126] |  :  .  |  :  .  |  :  Formals differ
[10:53:33.127] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:33.127] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:33.127] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:33.127] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:33.127] |  :  .  |  :  .  List of future strategies:
[10:53:33.127] |  :  .  |  :  .  1. sequential:
[10:53:33.127] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:33.127] |  :  .  |  :  .     - tweaked: FALSE
[10:53:33.127] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.130] |  :  .  'obj' is MulticoreFuture
[10:53:33.128] |  :  .  |  :  .  List of 1
[10:53:33.128] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.128] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.128] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.128] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.128] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.128] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.128] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.131] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:33.132] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:33.132] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.132] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:33.132] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.132] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:33.133] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:33.133] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:33.133] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:33.133] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.136] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.136] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.136] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:33.136] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:33.136] |  :  .  |  :  .  |  :  New stack:
[10:53:33.136] |  :  .  |  :  .  |  :  List of 1
[10:53:33.136] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.136] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.136] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.136] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.136] |  :  .  |  :  .  |  :      ...)  
[10:53:33.136] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.136] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.136] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:33.136] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.136] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.136] |  :  .  |  :  .  |  :      ...)  
[10:53:33.136] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.136] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.139] |  :  .  |  :  .  |  :  Old stack:
[10:53:33.141] |  :  .  readImmediateCondition() ...
[10:53:33.141] |  :  .    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:33.141] |  :  .   - Number of RDS files: 0
[10:53:33.139] |  :  .  |  :  .  |  :  List of 1
[10:53:33.139] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.139] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.139] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.139] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.139] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.139] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.139] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.141] |  :  .  readImmediateCondition() ... DONE
[10:53:33.141] |  :  .  |  :  .  |  :  Not identical
[10:53:33.141] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:33.142] |  :  .  |  :  .  |  :  .  List of 2
[10:53:33.142] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.142] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.142] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.142] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.142] |  :  .  |  :  .  |  :  .      ...)  
[10:53:33.142] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.142] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.142] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:33.142] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.142] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.142] |  :  .  |  :  .  |  :  .      ...)  
[10:53:33.142] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.142] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.142] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.142] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.142] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.142] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.142] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.148] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:33.148] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:33.148] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:33.148] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:33.148] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:33.148] |  :  .  |  :  .  |  List of future strategies:
[10:53:33.148] |  :  .  |  :  .  |  1. multicore:
[10:53:33.148] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:33.148] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:33.148] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:33.152] |  :  .  'obj' is MulticoreFuture
[10:53:33.149] |  :  .  |  :  .  |  List of 1
[10:53:33.149] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.149] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.149] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.149] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.149] |  :  .  |  :  .  |      ...)  
[10:53:33.149] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.149] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.149] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:33.149] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.149] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.149] |  :  .  |  :  .  |      ...)  
[10:53:33.149] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.149] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.152] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:33.152] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:33.152] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.152] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:33.153] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.153] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:33.153] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:33.153] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.153] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.153] |  :  .  readImmediateCondition() ...
[10:53:33.153] |  :  .    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:33.154] |  :  .   - Number of RDS files: 0
[10:53:33.154] |  :  .  readImmediateCondition() ... DONE
[10:53:33.154] |  :  .  Future #1
[10:53:33.154] |  :  .  value(obj, ...) ...
[10:53:33.154] |  :  .  |  result() for MulticoreFuture ...
[10:53:33.155] |  :  .  |  :  readImmediateCondition() ...
[10:53:33.155] |  :  .  |  :    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:33.155] |  :  .  |  :   - Number of RDS files: 0
[10:53:33.155] |  :  .  |  :  readImmediateCondition() ... DONE
[10:53:33.156] |  :  .  |  :  result() for MulticoreFuture ...
[10:53:33.156] |  :  .  |  :  result() for MulticoreFuture ... done
[10:53:33.156] |  :  .  |  result() for MulticoreFuture ... done
[10:53:33.156] |  :  .  |  result() for MulticoreFuture ...
[10:53:33.156] |  :  .  |  result() for MulticoreFuture ... done
[10:53:33.156] |  :  .  value(obj, ...) ... done
[10:53:33.157] |  :  .  resolve(obj, ...) ...
[10:53:33.157] |  :  .  |  A MulticoreFuture was resolved
[10:53:33.157] |  :  .  resolve(obj, ...) ... done
[10:53:33.157] |  :  .  length: 0 (resolved future 1)
[10:53:33.157] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:33.157] |  :  globals: [1] ‘a’
[10:53:33.157] |  Resolving futures part of globals (recursively) ... DONE
[10:53:33.158] |  Packages after dropping 'base': [1] ‘future’
[10:53:33.158] |  Packages after dropping non-attached packages: [1] ‘future’
[10:53:33.158] |  globals: [1] ‘a’
[10:53:33.158] |  packages: [1] ‘future’
[10:53:33.158] getGlobalsAndPackages() ... done
[10:53:33.159] run() for Future (‘Future’) ...
[10:53:33.159] |  state: ‘created’
[10:53:33.159] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.159] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.159] |  Using MulticoreFutureBackend ...
[10:53:33.159] |  :  Launching futures ...
[10:53:33.160] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:33.160] |  :  .  |  getFutureData() ...
[10:53:33.160] |  :  .  |  :  getFutureCore() ...
[10:53:33.160] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘future’
[10:53:33.160] |  :  .  |  :  getFutureCore() ... done
[10:53:33.160] |  :  .  |  :  getFutureCapture() ...
[10:53:33.160] |  :  .  |  :  getFutureCapture() ... done
[10:53:33.162] |  :  .  |  :  getFutureContext() ...
[10:53:33.163] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.163] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:33.163] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.163] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:33.163] |  :  .  |  :  getFutureContext() ... done
[10:53:33.164] |  :  .  |  getFutureData() ... done
[10:53:33.164] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:33.164] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:33.166] |  :  .  |  MulticoreFuture started
[10:53:33.167] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:33.167] |  :  .  |  attachPackages() ...
[10:53:33.167] |  :  Launching futures ... done
[10:53:33.168] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:33.168] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:33.168] |  :  .  |  attachPackages() ... DONE
[10:53:33.168] |  Using MulticoreFutureBackend ... done
[10:53:33.169] |  :  .  |  attachPackages() ...
[10:53:33.169] run() for Future (‘MulticoreFuture’) ... done
[10:53:33.169] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:33.170] result() for MulticoreFuture ...
[10:53:33.170] |  :  .  |  attachPackages() ... DONE
[10:53:33.171] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.172] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:33.172] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.173] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.174] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:33.174] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:33.175] |  :  .  |  :  .  |  New stack:
[10:53:33.175] |  :  .  |  :  .  |  List of 1
[10:53:33.175] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.175] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.175] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.175] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.175] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.175] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.175] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.181] |  :  .  |  :  .  |  Old stack:
[10:53:33.181] |  :  .  |  :  .  |  List of 1
[10:53:33.181] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.181] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.181] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.181] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.181] |  :  .  |  :  .  |      ...)  
[10:53:33.181] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.181] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.181] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:33.181] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.181] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.181] |  :  .  |  :  .  |      ...)  
[10:53:33.181] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.181] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.187] |  :  .  |  :  .  |  Not identical
[10:53:33.187] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:33.187] |  :  .  |  :  .  |  :  List of 2
[10:53:33.187] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.187] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.187] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.187] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.187] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.187] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.187] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.187] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.187] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.187] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.187] |  :  .  |  :  .  |  :      ...)  
[10:53:33.187] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.187] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.187] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:33.187] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.187] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.187] |  :  .  |  :  .  |  :      ...)  
[10:53:33.187] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.194] |  :  .  |  :  .  |  :  Formals differ
[10:53:33.194] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:33.194] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:33.194] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:33.195] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:33.195] |  :  .  |  :  .  List of future strategies:
[10:53:33.195] |  :  .  |  :  .  1. sequential:
[10:53:33.195] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:33.195] |  :  .  |  :  .     - tweaked: FALSE
[10:53:33.195] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.195] |  :  .  |  :  .  List of 1
[10:53:33.195] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.195] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.195] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.195] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.195] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.195] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.195] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.198] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:33.199] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:33.199] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.199] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:33.199] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.199] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:33.202] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:33.202] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:33.202] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:33.202] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.203] |  :  .  |  assign_globals() ...
[10:53:33.203] |  :  .  |  List of 1
[10:53:33.203] |  :  .  |   $ a:Classes 'MulticoreFuture', 'MultiprocessFuture', 'Future' <environment: 0x560a72282140> 
[10:53:33.203] |  :  .  |   - attr(*, "where")=List of 1
[10:53:33.203] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:53:33.203] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:33.203] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:33.203] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:33.203] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:33.206] |  :  .  |  - copied ‘a’ to environment
[10:53:33.206] |  :  .  |  assign_globals() ... done
[10:53:33.210] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.210] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.210] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:33.210] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:33.211] |  :  .  |  :  .  |  :  New stack:
[10:53:33.211] |  :  .  |  :  .  |  :  List of 1
[10:53:33.211] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.211] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.211] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.211] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.211] |  :  .  |  :  .  |  :      ...)  
[10:53:33.211] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.211] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.211] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:33.211] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.211] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.211] |  :  .  |  :  .  |  :      ...)  
[10:53:33.211] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.211] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.214] |  :  .  |  :  .  |  :  Old stack:
[10:53:33.214] |  :  .  |  :  .  |  :  List of 1
[10:53:33.214] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.214] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.214] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.214] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.214] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.214] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.214] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.216] |  :  .  |  :  .  |  :  Not identical
[10:53:33.216] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:33.216] |  :  .  |  :  .  |  :  .  List of 2
[10:53:33.216] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.216] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.216] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.216] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.216] |  :  .  |  :  .  |  :  .      ...)  
[10:53:33.216] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.216] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.216] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:33.216] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.216] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.216] |  :  .  |  :  .  |  :  .      ...)  
[10:53:33.216] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.216] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.216] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.216] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.216] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.216] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.216] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.221] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:33.221] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:33.221] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:33.221] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:33.221] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:33.222] |  :  .  |  :  .  |  List of future strategies:
[10:53:33.222] |  :  .  |  :  .  |  1. multicore:
[10:53:33.222] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:33.222] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:33.222] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:33.222] |  :  .  |  :  .  |  List of 1
[10:53:33.222] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.222] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.222] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.222] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.222] |  :  .  |  :  .  |      ...)  
[10:53:33.222] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.222] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.222] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:33.222] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.222] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.222] |  :  .  |  :  .  |      ...)  
[10:53:33.222] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.222] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.227] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:33.227] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:33.227] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.227] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:33.227] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.228] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:33.228] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:33.228] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.228] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.228] |  readImmediateCondition() ...
[10:53:33.229] |    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:33.229] |   - Number of RDS files: 0
[10:53:33.229] |  readImmediateCondition() ... DONE
[10:53:33.230] |  result() for MulticoreFuture ...
[10:53:33.230] |  result() for MulticoreFuture ... done
[10:53:33.230] |  signalConditions() ...
[10:53:33.230] |  :  include = ‘immediateCondition’
[10:53:33.231] |  :  exclude = 
[10:53:33.231] |  :  resignal = FALSE
[10:53:33.231] |  :  Number of conditions: 4
[10:53:33.231] |  signalConditions() ... done
[10:53:33.231] result() for MulticoreFuture ... done
[10:53:33.232] result() for MulticoreFuture ...
[10:53:33.232] result() for MulticoreFuture ... done
[10:53:33.232] signalConditions() ...
[10:53:33.232] |  include = ‘immediateCondition’
[10:53:33.232] |  exclude = 
[10:53:33.232] |  resignal = FALSE
[10:53:33.233] |  Number of conditions: 4
[10:53:33.233] signalConditions() ... done
[10:53:33.233] Future state: ‘finished’
[10:53:33.233] result() for MulticoreFuture ...
[10:53:33.233] result() for MulticoreFuture ... done
[10:53:33.234] signalConditions() ...
[10:53:33.234] |  include = ‘condition’
[10:53:33.234] |  exclude = ‘immediateCondition’
[10:53:33.234] |  resignal = TRUE
[10:53:33.234] |  Number of conditions: 4
[10:53:33.234] |  Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.207] |  :  .  |  result() for MulticoreFuture ...
[10:53:33.235] |  Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.207] |  :  .  |  result() for MulticoreFuture ... done
[10:53:33.235] |  Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.207] |  :  .  |  result() for MulticoreFuture ...
[10:53:33.235] |  Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.207] |  :  .  |  result() for MulticoreFuture ... done
[10:53:33.235] signalConditions() ... done
value(b) = 2
[10:53:33.236] result() for MulticoreFuture ...
[10:53:33.236] result() for MulticoreFuture ... done
[10:53:33.236] result() for MulticoreFuture ...
[10:53:33.236] result() for MulticoreFuture ... done
[10:53:33.236] signalConditions() ...
[10:53:33.236] |  include = ‘immediateCondition’
[10:53:33.237] |  exclude = 
[10:53:33.237] |  resignal = FALSE
[10:53:33.237] |  Number of conditions: 4
[10:53:33.237] signalConditions() ... done
[10:53:33.237] Future state: ‘finished’
[10:53:33.237] result() for MulticoreFuture ...
[10:53:33.237] result() for MulticoreFuture ... done
[10:53:33.238] signalConditions() ...
[10:53:33.238] |  include = ‘condition’
[10:53:33.238] |  exclude = ‘immediateCondition’
[10:53:33.238] |  resignal = TRUE
[10:53:33.238] |  Number of conditions: 4
[10:53:33.238] |  Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.207] |  :  .  |  result() for MulticoreFuture ...
[10:53:33.238] |  Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.207] |  :  .  |  result() for MulticoreFuture ... done
[10:53:33.239] |  Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.207] |  :  .  |  result() for MulticoreFuture ...
[10:53:33.239] |  Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.207] |  :  .  |  result() for MulticoreFuture ... done
[10:53:33.239] signalConditions() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:33.239] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:33.239] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:33.240] |  :  globals found: [0] 
[10:53:33.240] |  Searching for globals ... DONE
[10:53:33.240] |  globals: [0] <none>
[10:53:33.240] |  packages: [0] <none>
[10:53:33.241] getGlobalsAndPackages() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:33.241] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:33.241] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:33.242] |  :  globals found: [3] ‘+’, ‘value’, ‘a’
[10:53:33.242] |  Searching for globals ... DONE
[10:53:33.243] |  Resolving globals: TRUE
[10:53:33.243] |  Resolving any globals that are futures ...
[10:53:33.243] |  :  globals: [3] ‘+’, ‘value’, ‘a’
[10:53:33.243] |  Resolving any globals that are futures ... DONE
[10:53:33.243] |  Search for packages associated with the globals ...
[10:53:33.243] |  :  Packages associated with globals: [2] ‘base’, ‘future’
[10:53:33.244] |  :  Packages: [2] ‘base’, ‘future’
[10:53:33.244] |  Search for packages associated with the globals ... DONE
[10:53:33.244] |  Resolving futures part of globals (recursively) ...
[10:53:33.244] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:33.244] |  :  .  recursive: 99
[10:53:33.244] |  :  .  length: 1
[10:53:33.244] |  :  .  elements: ‘a’
[10:53:33.245] |  :  .  'obj' is Future
[10:53:33.245] |  :  .  run() for Future (‘Future’) ...
[10:53:33.245] |  :  .  |  state: ‘created’
[10:53:33.245] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.245] |  :  .  |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.245] |  :  .  |  Using MulticoreFutureBackend ...
[10:53:33.245] |  :  .  |  :  Launching futures ...
[10:53:33.245] |  :  .  |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:33.246] |  :  .  |  :  .  |  getFutureData() ...
[10:53:33.246] |  :  .  |  :  .  |  :  getFutureCore() ...
[10:53:33.246] |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:33.246] |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:53:33.246] |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:53:33.246] |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:53:33.246] |  :  .  |  :  .  |  :  getFutureContext() ...
[10:53:33.246] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.247] |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:33.247] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.247] |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:33.247] |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:53:33.247] |  :  .  |  :  .  |  getFutureData() ... done
[10:53:33.247] |  :  .  |  :  .  |  requestCore(..., workers = 2) ...
[10:53:33.248] |  :  .  |  :  .  |  requestCore(..., workers = 2) ...
[10:53:33.249] |  :  .  |  :  .  |  MulticoreFuture started
[10:53:33.250] |  :  .  |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:33.250] |  :  .  |  :  Launching futures ... done
[10:53:33.250] |  :  .  |  :  .  |  attachPackages() ...
[10:53:33.250] |  :  .  |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:33.250] |  :  .  |  :  .  |  :  packages: [n=1] ‘future’
[10:53:33.250] |  :  .  |  Using MulticoreFutureBackend ... done
[10:53:33.251] |  :  .  run() for Future (‘MulticoreFuture’) ... done
[10:53:33.251] |  :  .  |  :  .  |  attachPackages() ... DONE
[10:53:33.251] |  :  .  |  :  .  |  attachPackages() ...
[10:53:33.251] |  :  .  |  :  .  |  :  packages: [n=0] 
[10:53:33.251] |  :  .  |  :  .  |  attachPackages() ... DONE
[10:53:33.252] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.252] |  :  .  |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:33.253] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.253] |  :  .  |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.254] |  :  .  |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:33.254] |  :  .  |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:33.254] |  :  .  |  :  .  |  :  .  |  New stack:
[10:53:33.261] |  :  .  readImmediateCondition() ...
[10:53:33.261] |  :  .    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:33.261] |  :  .   - Number of RDS files: 0
[10:53:33.262] |  :  .  readImmediateCondition() ... DONE
[10:53:33.254] |  :  .  |  :  .  |  :  .  |  List of 1
[10:53:33.254] |  :  .  |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.254] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.254] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.254] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.254] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.254] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.254] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.263] |  :  .  |  :  .  |  :  .  |  Old stack:
[10:53:33.264] |  :  .  |  :  .  |  :  .  |  List of 1
[10:53:33.264] |  :  .  |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.264] |  :  .  |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.264] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.264] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.264] |  :  .  |  :  .  |  :  .  |      ...)  
[10:53:33.264] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.264] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.264] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:33.264] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.264] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.264] |  :  .  |  :  .  |  :  .  |      ...)  
[10:53:33.264] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.264] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.270] |  :  .  |  :  .  |  :  .  |  Not identical
[10:53:33.271] |  :  .  |  :  .  |  :  .  |  all.equal() for future ...
[10:53:33.272] |  :  .  'obj' is MulticoreFuture
[10:53:33.271] |  :  .  |  :  .  |  :  .  |  :  List of 2
[10:53:33.271] |  :  .  |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.271] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.271] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.271] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.271] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.271] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.271] |  :  .  |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.271] |  :  .  |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.271] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.271] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.271] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:53:33.271] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.271] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.271] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:33.271] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.271] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.271] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:53:33.271] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.278] |  :  .  |  :  .  |  :  .  |  :  Formals differ
[10:53:33.278] |  :  .  |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:33.278] |  :  .  |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:33.278] |  :  .  |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:33.278] |  :  .  |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:33.278] |  :  .  |  :  .  |  :  .  List of future strategies:
[10:53:33.278] |  :  .  |  :  .  |  :  .  1. sequential:
[10:53:33.278] |  :  .  |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:33.278] |  :  .  |  :  .  |  :  .     - tweaked: FALSE
[10:53:33.278] |  :  .  |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.279] |  :  .  |  :  .  |  :  .  List of 1
[10:53:33.279] |  :  .  |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.279] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.279] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.279] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.279] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.279] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.279] |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.281] |  :  .  |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:33.282] |  :  .  |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:33.282] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.282] |  :  .  |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:33.282] |  :  .  |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.282] |  :  .  readImmediateCondition() ...
[10:53:33.282] |  :  .  |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:33.282] |  :  .    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:33.283] |  :  .  |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:33.283] |  :  .   - Number of RDS files: 0
[10:53:33.283] |  :  .  |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:33.283] |  :  .  readImmediateCondition() ... DONE
[10:53:33.283] |  :  .  |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:33.283] |  :  .  |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.285] |  :  .  |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.285] |  :  .  |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.285] |  :  .  |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:33.286] |  :  .  |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:33.286] |  :  .  |  :  .  |  :  .  |  :  New stack:
[10:53:33.286] |  :  .  |  :  .  |  :  .  |  :  List of 1
[10:53:33.286] |  :  .  |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.286] |  :  .  |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.286] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.286] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.286] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:53:33.286] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.286] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.286] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:33.286] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.286] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.286] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:53:33.286] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.286] |  :  .  |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.291] |  :  .  |  :  .  |  :  .  |  :  Old stack:
[10:53:33.291] |  :  .  |  :  .  |  :  .  |  :  List of 1
[10:53:33.291] |  :  .  |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.291] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.291] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.291] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.291] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.291] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.291] |  :  .  |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.293] |  :  .  |  :  .  |  :  .  |  :  Not identical
[10:53:33.293] |  :  .  |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:33.293] |  :  .  'obj' is MulticoreFuture
[10:53:33.293] |  :  .  |  :  .  |  :  .  |  :  .  List of 2
[10:53:33.293] |  :  .  |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.293] |  :  .  |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.293] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.293] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.293] |  :  .  |  :  .  |  :  .  |  :  .      ...)  
[10:53:33.293] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.293] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.293] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:33.293] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.293] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.293] |  :  .  |  :  .  |  :  .  |  :  .      ...)  
[10:53:33.293] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.293] |  :  .  |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.293] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.293] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.293] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.293] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.293] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.298] |  :  .  |  :  .  |  :  .  |  :  .  Formals differ
[10:53:33.298] |  :  .  |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:33.298] |  :  .  |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:33.298] |  :  .  |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:33.298] |  :  .  |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:33.298] |  :  .  |  :  .  |  :  .  |  List of future strategies:
[10:53:33.298] |  :  .  |  :  .  |  :  .  |  1. multicore:
[10:53:33.298] |  :  .  |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:33.298] |  :  .  |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:33.298] |  :  .  |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:33.299] |  :  .  |  :  .  |  :  .  |  List of 1
[10:53:33.299] |  :  .  |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.299] |  :  .  |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.299] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.299] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.299] |  :  .  |  :  .  |  :  .  |      ...)  
[10:53:33.299] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.299] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.299] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:33.299] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.299] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.299] |  :  .  |  :  .  |  :  .  |      ...)  
[10:53:33.299] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.299] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.302] |  :  .  |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:33.302] |  :  .  |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:33.302] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.302] |  :  .  |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:33.302] |  :  .  |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.302] |  :  .  |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:33.302] |  :  .  |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:33.302] |  :  .  |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.303] |  :  .  |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.303] |  :  .  readImmediateCondition() ...
[10:53:33.303] |  :  .    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:33.303] |  :  .   - Number of RDS files: 0
[10:53:33.303] |  :  .  readImmediateCondition() ... DONE
[10:53:33.304] |  :  .  Future #1
[10:53:33.304] |  :  .  value(obj, ...) ...
[10:53:33.304] |  :  .  |  result() for MulticoreFuture ...
[10:53:33.305] |  :  .  |  :  readImmediateCondition() ...
[10:53:33.305] |  :  .  |  :    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:33.305] |  :  .  |  :   - Number of RDS files: 0
[10:53:33.305] |  :  .  |  :  readImmediateCondition() ... DONE
[10:53:33.305] |  :  .  |  :  result() for MulticoreFuture ...
[10:53:33.308] |  :  .  |  :  result() for MulticoreFuture ... done
[10:53:33.308] |  :  .  |  result() for MulticoreFuture ... done
[10:53:33.308] |  :  .  |  result() for MulticoreFuture ...
[10:53:33.309] |  :  .  |  result() for MulticoreFuture ... done
[10:53:33.309] |  :  .  value(obj, ...) ... done
[10:53:33.309] |  :  .  resolve(obj, ...) ...
[10:53:33.309] |  :  .  |  A MulticoreFuture was resolved
[10:53:33.310] |  :  .  resolve(obj, ...) ... done
[10:53:33.310] |  :  .  length: 0 (resolved future 1)
[10:53:33.310] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:33.310] |  :  globals: [1] ‘a’
[10:53:33.311] |  Resolving futures part of globals (recursively) ... DONE
[10:53:33.311] |  Packages after dropping 'base': [1] ‘future’
[10:53:33.311] |  Packages after dropping non-attached packages: [1] ‘future’
[10:53:33.311] |  globals: [1] ‘a’
[10:53:33.312] |  packages: [1] ‘future’
[10:53:33.312] getGlobalsAndPackages() ... done
[10:53:33.312] run() for Future (‘Future’) ...
[10:53:33.312] |  state: ‘created’
[10:53:33.313] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.313] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.313] |  Using MulticoreFutureBackend ...
[10:53:33.313] |  :  Launching futures ...
[10:53:33.314] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:33.314] |  :  .  |  getFutureData() ...
[10:53:33.314] |  :  .  |  :  getFutureCore() ...
[10:53:33.314] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘future’
[10:53:33.314] |  :  .  |  :  getFutureCore() ... done
[10:53:33.314] |  :  .  |  :  getFutureCapture() ...
[10:53:33.315] |  :  .  |  :  getFutureCapture() ... done
[10:53:33.315] |  :  .  |  :  getFutureContext() ...
[10:53:33.315] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.315] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:33.315] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.315] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:33.316] |  :  .  |  :  getFutureContext() ... done
[10:53:33.316] |  :  .  |  getFutureData() ... done
[10:53:33.316] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:33.316] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:33.318] |  :  .  |  MulticoreFuture started
[10:53:33.319] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:33.319] |  :  .  |  attachPackages() ...
[10:53:33.319] |  :  Launching futures ... done
[10:53:33.320] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:33.320] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:33.320] |  :  .  |  attachPackages() ... DONE
[10:53:33.320] |  Using MulticoreFutureBackend ... done
[10:53:33.321] |  :  .  |  attachPackages() ...
[10:53:33.321] run() for Future (‘MulticoreFuture’) ... done
[10:53:33.321] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:33.321] result() for MulticoreFuture ...
[10:53:33.322] |  :  .  |  attachPackages() ... DONE
[10:53:33.323] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.323] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:33.324] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.325] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.325] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:33.326] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:33.326] |  :  .  |  :  .  |  New stack:
[10:53:33.326] |  :  .  |  :  .  |  List of 1
[10:53:33.326] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.326] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.326] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.326] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.326] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.326] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.326] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.331] |  :  .  |  :  .  |  Old stack:
[10:53:33.331] |  :  .  |  :  .  |  List of 1
[10:53:33.331] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.331] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.331] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.331] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.331] |  :  .  |  :  .  |      ...)  
[10:53:33.331] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.331] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.331] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:33.331] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.331] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.331] |  :  .  |  :  .  |      ...)  
[10:53:33.331] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.331] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.336] |  :  .  |  :  .  |  Not identical
[10:53:33.336] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:33.336] |  :  .  |  :  .  |  :  List of 2
[10:53:33.336] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.336] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.336] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.336] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.336] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.336] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.336] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.336] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.336] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.336] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.336] |  :  .  |  :  .  |  :      ...)  
[10:53:33.336] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.336] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.336] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:33.336] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.336] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.336] |  :  .  |  :  .  |  :      ...)  
[10:53:33.336] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.342] |  :  .  |  :  .  |  :  Formals differ
[10:53:33.343] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:33.343] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:33.343] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:33.343] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:33.343] |  :  .  |  :  .  List of future strategies:
[10:53:33.343] |  :  .  |  :  .  1. sequential:
[10:53:33.343] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:33.343] |  :  .  |  :  .     - tweaked: FALSE
[10:53:33.343] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.346] |  :  .  |  :  .  List of 1
[10:53:33.346] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.346] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.346] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.346] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.346] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.346] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.346] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.349] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:33.349] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:33.349] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.350] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:33.350] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.350] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:33.350] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:33.350] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:33.351] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:33.351] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.351] |  :  .  |  assign_globals() ...
[10:53:33.351] |  :  .  |  List of 1
[10:53:33.351] |  :  .  |   $ a:Classes 'MulticoreFuture', 'MultiprocessFuture', 'Future' <environment: 0x560a6fe16848> 
[10:53:33.351] |  :  .  |   - attr(*, "where")=List of 1
[10:53:33.351] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:53:33.351] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:33.351] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:33.351] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:33.351] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:33.354] |  :  .  |  - copied ‘a’ to environment
[10:53:33.354] |  :  .  |  assign_globals() ... done
[10:53:33.357] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.357] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.357] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:33.357] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:33.357] |  :  .  |  :  .  |  :  New stack:
[10:53:33.357] |  :  .  |  :  .  |  :  List of 1
[10:53:33.357] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.357] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.357] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.357] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.357] |  :  .  |  :  .  |  :      ...)  
[10:53:33.357] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.357] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.357] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:33.357] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.357] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.357] |  :  .  |  :  .  |  :      ...)  
[10:53:33.357] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.357] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.360] |  :  .  |  :  .  |  :  Old stack:
[10:53:33.361] |  :  .  |  :  .  |  :  List of 1
[10:53:33.361] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.361] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.361] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.361] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.361] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.361] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.361] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.363] |  :  .  |  :  .  |  :  Not identical
[10:53:33.363] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:33.363] |  :  .  |  :  .  |  :  .  List of 2
[10:53:33.363] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.363] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.363] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.363] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.363] |  :  .  |  :  .  |  :  .      ...)  
[10:53:33.363] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.363] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.363] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:33.363] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.363] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.363] |  :  .  |  :  .  |  :  .      ...)  
[10:53:33.363] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.363] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.363] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.363] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.363] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.363] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.363] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.369] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:33.369] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:33.369] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:33.369] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:33.369] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:33.369] |  :  .  |  :  .  |  List of future strategies:
[10:53:33.369] |  :  .  |  :  .  |  1. multicore:
[10:53:33.369] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:33.369] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:33.369] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:33.370] |  :  .  |  :  .  |  List of 1
[10:53:33.370] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.370] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.370] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.370] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.370] |  :  .  |  :  .  |      ...)  
[10:53:33.370] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.370] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.370] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:33.370] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.370] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.370] |  :  .  |  :  .  |      ...)  
[10:53:33.370] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.370] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.373] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:33.373] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:33.373] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.374] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:33.374] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.374] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:33.374] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:33.374] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.374] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.375] |  readImmediateCondition() ...
[10:53:33.375] |    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:33.376] |   - Number of RDS files: 0
[10:53:33.376] |  readImmediateCondition() ... DONE
[10:53:33.376] |  result() for MulticoreFuture ...
[10:53:33.377] |  result() for MulticoreFuture ... done
[10:53:33.377] |  signalConditions() ...
[10:53:33.377] |  :  include = ‘immediateCondition’
[10:53:33.377] |  :  exclude = 
[10:53:33.377] |  :  resignal = FALSE
[10:53:33.378] |  :  Number of conditions: 4
[10:53:33.378] |  signalConditions() ... done
[10:53:33.378] result() for MulticoreFuture ... done
[10:53:33.378] result() for MulticoreFuture ...
[10:53:33.378] result() for MulticoreFuture ... done
[10:53:33.379] signalConditions() ...
[10:53:33.379] |  include = ‘immediateCondition’
[10:53:33.379] |  exclude = 
[10:53:33.379] |  resignal = FALSE
[10:53:33.379] |  Number of conditions: 4
[10:53:33.379] signalConditions() ... done
[10:53:33.380] Future state: ‘finished’
[10:53:33.380] result() for MulticoreFuture ...
[10:53:33.380] result() for MulticoreFuture ... done
[10:53:33.380] signalConditions() ...
[10:53:33.380] |  include = ‘condition’
[10:53:33.380] |  exclude = ‘immediateCondition’
[10:53:33.380] |  resignal = TRUE
[10:53:33.381] |  Number of conditions: 4
[10:53:33.381] |  Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.354] |  :  .  |  result() for MulticoreFuture ...
[10:53:33.381] |  Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.355] |  :  .  |  result() for MulticoreFuture ... done
[10:53:33.381] |  Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.355] |  :  .  |  result() for MulticoreFuture ...
[10:53:33.381] |  Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.355] |  :  .  |  result() for MulticoreFuture ... done
[10:53:33.381] signalConditions() ... done
value(b) = 2
[10:53:33.382] result() for MulticoreFuture ...
[10:53:33.382] result() for MulticoreFuture ... done
[10:53:33.382] result() for MulticoreFuture ...
[10:53:33.382] result() for MulticoreFuture ... done
[10:53:33.382] signalConditions() ...
[10:53:33.382] |  include = ‘immediateCondition’
[10:53:33.382] |  exclude = 
[10:53:33.383] |  resignal = FALSE
[10:53:33.383] |  Number of conditions: 4
[10:53:33.383] signalConditions() ... done
[10:53:33.383] Future state: ‘finished’
[10:53:33.383] result() for MulticoreFuture ...
[10:53:33.383] result() for MulticoreFuture ... done
[10:53:33.383] signalConditions() ...
[10:53:33.383] |  include = ‘condition’
[10:53:33.384] |  exclude = ‘immediateCondition’
[10:53:33.384] |  resignal = TRUE
[10:53:33.384] |  Number of conditions: 4
[10:53:33.384] |  Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.354] |  :  .  |  result() for MulticoreFuture ...
[10:53:33.384] |  Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.355] |  :  .  |  result() for MulticoreFuture ... done
[10:53:33.384] |  Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.355] |  :  .  |  result() for MulticoreFuture ...
[10:53:33.384] |  Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.355] |  :  .  |  result() for MulticoreFuture ... done
[10:53:33.385] signalConditions() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:33.385] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:33.385] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:33.386] |  :  globals found: [0] 
[10:53:33.386] |  Searching for globals ... DONE
[10:53:33.386] |  globals: [0] <none>
[10:53:33.386] |  packages: [0] <none>
[10:53:33.386] getGlobalsAndPackages() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:33.387] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:33.387] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:33.388] |  :  globals found: [3] ‘+’, ‘value’, ‘a’
[10:53:33.388] |  Searching for globals ... DONE
[10:53:33.388] |  Resolving globals: TRUE
[10:53:33.388] |  Resolving any globals that are futures ...
[10:53:33.389] |  :  globals: [3] ‘+’, ‘value’, ‘a’
[10:53:33.389] |  Resolving any globals that are futures ... DONE
[10:53:33.389] |  Search for packages associated with the globals ...
[10:53:33.389] |  :  Packages associated with globals: [2] ‘base’, ‘future’
[10:53:33.389] |  :  Packages: [2] ‘base’, ‘future’
[10:53:33.389] |  Search for packages associated with the globals ... DONE
[10:53:33.390] |  Resolving futures part of globals (recursively) ...
[10:53:33.390] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:33.390] |  :  .  recursive: 99
[10:53:33.390] |  :  .  length: 1
[10:53:33.390] |  :  .  elements: ‘a’
[10:53:33.390] |  :  .  'obj' is Future
[10:53:33.391] |  :  .  run() for Future (‘Future’) ...
[10:53:33.391] |  :  .  |  state: ‘created’
[10:53:33.391] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.391] |  :  .  |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.391] |  :  .  |  Using MulticoreFutureBackend ...
[10:53:33.391] |  :  .  |  :  Launching futures ...
[10:53:33.391] |  :  .  |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:33.392] |  :  .  |  :  .  |  getFutureData() ...
[10:53:33.392] |  :  .  |  :  .  |  :  getFutureCore() ...
[10:53:33.392] |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:33.392] |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:53:33.392] |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:53:33.392] |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:53:33.392] |  :  .  |  :  .  |  :  getFutureContext() ...
[10:53:33.392] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.392] |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:33.393] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.393] |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:33.395] |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:53:33.395] |  :  .  |  :  .  |  getFutureData() ... done
[10:53:33.396] |  :  .  |  :  .  |  requestCore(..., workers = 2) ...
[10:53:33.396] |  :  .  |  :  .  |  requestCore(..., workers = 2) ...
[10:53:33.398] |  :  .  |  :  .  |  MulticoreFuture started
[10:53:33.399] |  :  .  |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:33.399] |  :  .  |  :  .  |  attachPackages() ...
[10:53:33.399] |  :  .  |  :  Launching futures ... done
[10:53:33.399] |  :  .  |  :  .  |  :  packages: [n=1] ‘future’
[10:53:33.400] |  :  .  |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:33.400] |  :  .  |  :  .  |  attachPackages() ... DONE
[10:53:33.400] |  :  .  |  Using MulticoreFutureBackend ... done
[10:53:33.401] |  :  .  |  :  .  |  attachPackages() ...
[10:53:33.401] |  :  .  run() for Future (‘MulticoreFuture’) ... done
[10:53:33.401] |  :  .  |  :  .  |  :  packages: [n=0] 
[10:53:33.401] |  :  .  |  :  .  |  attachPackages() ... DONE
[10:53:33.403] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.403] |  :  .  |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:33.404] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.405] |  :  .  |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.406] |  :  .  |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:33.406] |  :  .  |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:33.406] |  :  .  |  :  .  |  :  .  |  New stack:
[10:53:33.411] |  :  .  readImmediateCondition() ...
[10:53:33.412] |  :  .    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:33.412] |  :  .   - Number of RDS files: 0
[10:53:33.412] |  :  .  readImmediateCondition() ... DONE
[10:53:33.407] |  :  .  |  :  .  |  :  .  |  List of 1
[10:53:33.407] |  :  .  |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.407] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.407] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.407] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.407] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.407] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.407] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.413] |  :  .  |  :  .  |  :  .  |  Old stack:
[10:53:33.413] |  :  .  |  :  .  |  :  .  |  List of 1
[10:53:33.413] |  :  .  |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.413] |  :  .  |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.413] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.413] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.413] |  :  .  |  :  .  |  :  .  |      ...)  
[10:53:33.413] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.413] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.413] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:33.413] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.413] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.413] |  :  .  |  :  .  |  :  .  |      ...)  
[10:53:33.413] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.413] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.419] |  :  .  |  :  .  |  :  .  |  Not identical
[10:53:33.419] |  :  .  |  :  .  |  :  .  |  all.equal() for future ...
[10:53:33.423] |  :  .  'obj' is MulticoreFuture
[10:53:33.419] |  :  .  |  :  .  |  :  .  |  :  List of 2
[10:53:33.419] |  :  .  |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.419] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.419] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.419] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.419] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.419] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.419] |  :  .  |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.419] |  :  .  |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.419] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.419] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.419] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:53:33.419] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.419] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.419] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:33.419] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.419] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.419] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:53:33.419] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.425] |  :  .  |  :  .  |  :  .  |  :  Formals differ
[10:53:33.425] |  :  .  |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:33.425] |  :  .  |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:33.425] |  :  .  |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:33.426] |  :  .  |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:33.426] |  :  .  |  :  .  |  :  .  List of future strategies:
[10:53:33.426] |  :  .  |  :  .  |  :  .  1. sequential:
[10:53:33.426] |  :  .  |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:33.426] |  :  .  |  :  .  |  :  .     - tweaked: FALSE
[10:53:33.426] |  :  .  |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.426] |  :  .  |  :  .  |  :  .  List of 1
[10:53:33.426] |  :  .  |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.426] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.426] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.426] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.426] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.426] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.426] |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.429] |  :  .  |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:33.429] |  :  .  |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:33.429] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.429] |  :  .  |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:33.430] |  :  .  |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.430] |  :  .  |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:33.430] |  :  .  |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:33.430] |  :  .  |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:33.430] |  :  .  |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:33.433] |  :  .  |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.433] |  :  .  readImmediateCondition() ...
[10:53:33.434] |  :  .    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:33.434] |  :  .   - Number of RDS files: 0
[10:53:33.434] |  :  .  readImmediateCondition() ... DONE
[10:53:33.435] |  :  .  |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.436] |  :  .  |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.436] |  :  .  |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:33.436] |  :  .  |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:33.436] |  :  .  |  :  .  |  :  .  |  :  New stack:
[10:53:33.436] |  :  .  |  :  .  |  :  .  |  :  List of 1
[10:53:33.436] |  :  .  |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.436] |  :  .  |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.436] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.436] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.436] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:53:33.436] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.436] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.436] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:33.436] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.436] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.436] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:53:33.436] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.436] |  :  .  |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.440] |  :  .  |  :  .  |  :  .  |  :  Old stack:
[10:53:33.440] |  :  .  |  :  .  |  :  .  |  :  List of 1
[10:53:33.440] |  :  .  |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.440] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.440] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.440] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.440] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.440] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.440] |  :  .  |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.442] |  :  .  |  :  .  |  :  .  |  :  Not identical
[10:53:33.443] |  :  .  |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:33.444] |  :  .  'obj' is MulticoreFuture
[10:53:33.443] |  :  .  |  :  .  |  :  .  |  :  .  List of 2
[10:53:33.443] |  :  .  |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.443] |  :  .  |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.443] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.443] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.443] |  :  .  |  :  .  |  :  .  |  :  .      ...)  
[10:53:33.443] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.443] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.443] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:33.443] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.443] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.443] |  :  .  |  :  .  |  :  .  |  :  .      ...)  
[10:53:33.443] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.443] |  :  .  |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.443] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.443] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.443] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.443] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.443] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.447] |  :  .  |  :  .  |  :  .  |  :  .  Formals differ
[10:53:33.448] |  :  .  |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:33.448] |  :  .  |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:33.448] |  :  .  |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:33.448] |  :  .  |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:33.448] |  :  .  |  :  .  |  :  .  |  List of future strategies:
[10:53:33.448] |  :  .  |  :  .  |  :  .  |  1. multicore:
[10:53:33.448] |  :  .  |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:33.448] |  :  .  |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:33.448] |  :  .  |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:33.448] |  :  .  |  :  .  |  :  .  |  List of 1
[10:53:33.448] |  :  .  |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.448] |  :  .  |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.448] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.448] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.448] |  :  .  |  :  .  |  :  .  |      ...)  
[10:53:33.448] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.448] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.448] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:33.448] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.448] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.448] |  :  .  |  :  .  |  :  .  |      ...)  
[10:53:33.448] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.448] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.451] |  :  .  |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:33.452] |  :  .  |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:33.452] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.452] |  :  .  |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:33.454] |  :  .  |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.454] |  :  .  |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:33.454] |  :  .  |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:33.454] |  :  .  |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.454] |  :  .  |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.455] |  :  .  readImmediateCondition() ...
[10:53:33.455] |  :  .    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:33.455] |  :  .   - Number of RDS files: 0
[10:53:33.456] |  :  .  readImmediateCondition() ... DONE
[10:53:33.456] |  :  .  Future #1
[10:53:33.456] |  :  .  value(obj, ...) ...
[10:53:33.456] |  :  .  |  result() for MulticoreFuture ...
[10:53:33.457] |  :  .  |  :  readImmediateCondition() ...
[10:53:33.457] |  :  .  |  :    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:33.458] |  :  .  |  :   - Number of RDS files: 0
[10:53:33.458] |  :  .  |  :  readImmediateCondition() ... DONE
[10:53:33.458] |  :  .  |  :  result() for MulticoreFuture ...
[10:53:33.458] |  :  .  |  :  result() for MulticoreFuture ... done
[10:53:33.459] |  :  .  |  result() for MulticoreFuture ... done
[10:53:33.459] |  :  .  |  result() for MulticoreFuture ...
[10:53:33.459] |  :  .  |  result() for MulticoreFuture ... done
[10:53:33.459] |  :  .  value(obj, ...) ... done
[10:53:33.459] |  :  .  resolve(obj, ...) ...
[10:53:33.460] |  :  .  |  A MulticoreFuture was resolved
[10:53:33.460] |  :  .  resolve(obj, ...) ... done
[10:53:33.460] |  :  .  length: 0 (resolved future 1)
[10:53:33.460] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:33.461] |  :  globals: [1] ‘a’
[10:53:33.461] |  Resolving futures part of globals (recursively) ... DONE
[10:53:33.461] |  Packages after dropping 'base': [1] ‘future’
[10:53:33.461] |  Packages after dropping non-attached packages: [1] ‘future’
[10:53:33.461] |  globals: [1] ‘a’
[10:53:33.462] |  packages: [1] ‘future’
[10:53:33.462] getGlobalsAndPackages() ... done
[10:53:33.462] run() for Future (‘Future’) ...
[10:53:33.462] |  state: ‘created’
[10:53:33.463] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.463] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.463] |  Using MulticoreFutureBackend ...
[10:53:33.463] |  :  Launching futures ...
[10:53:33.463] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:33.464] |  :  .  |  getFutureData() ...
[10:53:33.464] |  :  .  |  :  getFutureCore() ...
[10:53:33.464] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘future’
[10:53:33.464] |  :  .  |  :  getFutureCore() ... done
[10:53:33.464] |  :  .  |  :  getFutureCapture() ...
[10:53:33.464] |  :  .  |  :  getFutureCapture() ... done
[10:53:33.464] |  :  .  |  :  getFutureContext() ...
[10:53:33.465] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.465] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:33.465] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.465] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:33.465] |  :  .  |  :  getFutureContext() ... done
[10:53:33.465] |  :  .  |  getFutureData() ... done
[10:53:33.465] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:33.466] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:33.468] |  :  .  |  MulticoreFuture started
[10:53:33.468] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:33.468] |  :  Launching futures ... done
[10:53:33.468] |  :  .  |  attachPackages() ...
[10:53:33.469] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:33.469] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:33.469] |  Using MulticoreFutureBackend ... done
[10:53:33.469] |  :  .  |  attachPackages() ... DONE
[10:53:33.469] |  :  .  |  attachPackages() ...
[10:53:33.469] run() for Future (‘MulticoreFuture’) ... done
[10:53:33.470] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:33.470] result() for MulticoreFuture ...
[10:53:33.470] |  :  .  |  attachPackages() ... DONE
[10:53:33.471] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.471] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:33.471] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.472] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.473] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:33.473] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:33.473] |  :  .  |  :  .  |  New stack:
[10:53:33.473] |  :  .  |  :  .  |  List of 1
[10:53:33.473] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.473] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.473] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.473] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.473] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.473] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.473] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.478] |  :  .  |  :  .  |  Old stack:
[10:53:33.478] |  :  .  |  :  .  |  List of 1
[10:53:33.478] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.478] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.478] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.478] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.478] |  :  .  |  :  .  |      ...)  
[10:53:33.478] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.478] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.478] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:33.478] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.478] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.478] |  :  .  |  :  .  |      ...)  
[10:53:33.478] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.478] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.483] |  :  .  |  :  .  |  Not identical
[10:53:33.483] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:33.483] |  :  .  |  :  .  |  :  List of 2
[10:53:33.483] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.483] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.483] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.483] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.483] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.483] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.483] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.483] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.483] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.483] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.483] |  :  .  |  :  .  |  :      ...)  
[10:53:33.483] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.483] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.483] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:33.483] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.483] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.483] |  :  .  |  :  .  |  :      ...)  
[10:53:33.483] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.496] |  :  .  |  :  .  |  :  Formals differ
[10:53:33.496] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:33.497] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:33.497] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:33.497] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:33.497] |  :  .  |  :  .  List of future strategies:
[10:53:33.497] |  :  .  |  :  .  1. sequential:
[10:53:33.497] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:33.497] |  :  .  |  :  .     - tweaked: FALSE
[10:53:33.497] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.498] |  :  .  |  :  .  List of 1
[10:53:33.498] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.498] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.498] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.498] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.498] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.498] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.498] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.501] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:33.502] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:33.502] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.502] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:33.502] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.503] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:33.503] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:33.503] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:33.503] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:33.503] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.504] |  :  .  |  assign_globals() ...
[10:53:33.504] |  :  .  |  List of 1
[10:53:33.504] |  :  .  |   $ a:Classes 'MulticoreFuture', 'MultiprocessFuture', 'Future' <environment: 0x560a716008d0> 
[10:53:33.504] |  :  .  |   - attr(*, "where")=List of 1
[10:53:33.504] |  :  .  |    ..$ a:<environment: R_EmptyEnv> 
[10:53:33.504] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:33.504] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:33.504] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:33.504] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:33.507] |  :  .  |  - copied ‘a’ to environment
[10:53:33.507] |  :  .  |  assign_globals() ... done
[10:53:33.510] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.510] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.510] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:33.510] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:33.510] |  :  .  |  :  .  |  :  New stack:
[10:53:33.510] |  :  .  |  :  .  |  :  List of 1
[10:53:33.510] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.510] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.510] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.510] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.510] |  :  .  |  :  .  |  :      ...)  
[10:53:33.510] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.510] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.510] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:33.510] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.510] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.510] |  :  .  |  :  .  |  :      ...)  
[10:53:33.510] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.510] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.513] |  :  .  |  :  .  |  :  Old stack:
[10:53:33.514] |  :  .  |  :  .  |  :  List of 1
[10:53:33.514] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.514] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.514] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.514] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.514] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.514] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.514] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.518] |  :  .  |  :  .  |  :  Not identical
[10:53:33.518] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:33.518] |  :  .  |  :  .  |  :  .  List of 2
[10:53:33.518] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.518] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.518] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.518] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.518] |  :  .  |  :  .  |  :  .      ...)  
[10:53:33.518] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.518] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.518] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:33.518] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.518] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.518] |  :  .  |  :  .  |  :  .      ...)  
[10:53:33.518] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.518] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.518] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.518] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.518] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.518] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.518] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.523] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:33.523] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:33.523] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:33.524] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:33.524] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:33.524] |  :  .  |  :  .  |  List of future strategies:
[10:53:33.524] |  :  .  |  :  .  |  1. multicore:
[10:53:33.524] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:33.524] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:33.524] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:33.524] |  :  .  |  :  .  |  List of 1
[10:53:33.524] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.524] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.524] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.524] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.524] |  :  .  |  :  .  |      ...)  
[10:53:33.524] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.524] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.524] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:33.524] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.524] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.524] |  :  .  |  :  .  |      ...)  
[10:53:33.524] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.524] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.527] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:33.527] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:33.527] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.527] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:33.528] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.528] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:33.528] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:33.528] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.528] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.529] |  readImmediateCondition() ...
[10:53:33.529] |    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:33.529] |   - Number of RDS files: 0
[10:53:33.529] |  readImmediateCondition() ... DONE
[10:53:33.530] |  result() for MulticoreFuture ...
[10:53:33.530] |  result() for MulticoreFuture ... done
[10:53:33.530] |  signalConditions() ...
[10:53:33.530] |  :  include = ‘immediateCondition’
[10:53:33.530] |  :  exclude = 
[10:53:33.530] |  :  resignal = FALSE
[10:53:33.530] |  :  Number of conditions: 4
[10:53:33.531] |  signalConditions() ... done
[10:53:33.531] result() for MulticoreFuture ... done
[10:53:33.531] result() for MulticoreFuture ...
[10:53:33.531] result() for MulticoreFuture ... done
[10:53:33.531] signalConditions() ...
[10:53:33.531] |  include = ‘immediateCondition’
[10:53:33.531] |  exclude = 
[10:53:33.531] |  resignal = FALSE
[10:53:33.532] |  Number of conditions: 4
[10:53:33.532] signalConditions() ... done
[10:53:33.532] Future state: ‘finished’
[10:53:33.532] result() for MulticoreFuture ...
[10:53:33.532] result() for MulticoreFuture ... done
[10:53:33.532] signalConditions() ...
[10:53:33.532] |  include = ‘condition’
[10:53:33.533] |  exclude = ‘immediateCondition’
[10:53:33.533] |  resignal = TRUE
[10:53:33.533] |  Number of conditions: 4
[10:53:33.533] |  Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.507] |  :  .  |  result() for MulticoreFuture ...
[10:53:33.533] |  Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.507] |  :  .  |  result() for MulticoreFuture ... done
[10:53:33.533] |  Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.507] |  :  .  |  result() for MulticoreFuture ...
[10:53:33.534] |  Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.508] |  :  .  |  result() for MulticoreFuture ... done
[10:53:33.534] signalConditions() ... done
value(b) = 2
[10:53:33.534] result() for MulticoreFuture ...
[10:53:33.534] result() for MulticoreFuture ... done
[10:53:33.534] result() for MulticoreFuture ...
[10:53:33.534] result() for MulticoreFuture ... done
[10:53:33.535] signalConditions() ...
[10:53:33.535] |  include = ‘immediateCondition’
[10:53:33.535] |  exclude = 
[10:53:33.535] |  resignal = FALSE
[10:53:33.535] |  Number of conditions: 4
[10:53:33.535] signalConditions() ... done
[10:53:33.535] Future state: ‘finished’
[10:53:33.536] result() for MulticoreFuture ...
[10:53:33.536] result() for MulticoreFuture ... done
[10:53:33.536] signalConditions() ...
[10:53:33.536] |  include = ‘condition’
[10:53:33.536] |  exclude = ‘immediateCondition’
[10:53:33.536] |  resignal = TRUE
[10:53:33.536] |  Number of conditions: 4
[10:53:33.536] |  Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.507] |  :  .  |  result() for MulticoreFuture ...
[10:53:33.537] |  Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.507] |  :  .  |  result() for MulticoreFuture ... done
[10:53:33.537] |  Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.507] |  :  .  |  result() for MulticoreFuture ...
[10:53:33.537] |  Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[10:53:33.508] |  :  .  |  result() for MulticoreFuture ... done
[10:53:33.537] signalConditions() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:33.537] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:33.538] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:33.539] |  :  globals found: [2] ‘{’, ‘pkg’
[10:53:33.539] |  Searching for globals ... DONE
[10:53:33.539] |  Resolving globals: TRUE
[10:53:33.540] |  Resolving any globals that are futures ...
[10:53:33.540] |  :  globals: [2] ‘{’, ‘pkg’
[10:53:33.540] |  Resolving any globals that are futures ... DONE
[10:53:33.540] |  Search for packages associated with the globals ...
[10:53:33.540] |  :  Packages associated with globals: [1] ‘base’
[10:53:33.541] |  :  Packages: [1] ‘base’
[10:53:33.541] |  Search for packages associated with the globals ... DONE
[10:53:33.541] |  Resolving futures part of globals (recursively) ...
[10:53:33.543] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:33.544] |  :  .  recursive: 99
[10:53:33.544] |  :  .  length: 1
[10:53:33.544] |  :  .  elements: ‘pkg’
[10:53:33.544] |  :  .  'obj' is atomic
[10:53:33.544] |  :  .  length: 0 (resolved future 1)
[10:53:33.545] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:33.545] |  :  globals: [1] ‘pkg’
[10:53:33.545] |  Resolving futures part of globals (recursively) ... DONE
[10:53:33.545] |  Packages after dropping 'base': [0] 
[10:53:33.545] |  globals: [1] ‘pkg’
[10:53:33.546] |  packages: [0] 
[10:53:33.546] getGlobalsAndPackages() ... done
[10:53:33.546] run() for Future (‘Future’) ...
[10:53:33.546] |  state: ‘created’
[10:53:33.546] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.547] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.547] |  Using MulticoreFutureBackend ...
[10:53:33.547] |  :  Launching futures ...
[10:53:33.547] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:33.547] |  :  .  |  getFutureData() ...
[10:53:33.548] |  :  .  |  :  getFutureCore() ...
[10:53:33.548] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:33.548] |  :  .  |  :  getFutureCore() ... done
[10:53:33.548] |  :  .  |  :  getFutureCapture() ...
[10:53:33.548] |  :  .  |  :  getFutureCapture() ... done
[10:53:33.548] |  :  .  |  :  getFutureContext() ...
[10:53:33.549] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.549] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:33.549] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.549] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:33.549] |  :  .  |  :  getFutureContext() ... done
[10:53:33.549] |  :  .  |  getFutureData() ... done
[10:53:33.550] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:33.550] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:33.552] |  :  .  |  MulticoreFuture started
[10:53:33.553] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:33.553] |  :  .  |  attachPackages() ...
[10:53:33.553] |  :  Launching futures ... done
[10:53:33.553] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:33.554] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:33.554] |  :  .  |  attachPackages() ... DONE
[10:53:33.554] |  Using MulticoreFutureBackend ... done
[10:53:33.554] |  :  .  |  attachPackages() ...
[10:53:33.555] run() for Future (‘MulticoreFuture’) ... done
[10:53:33.555] |  :  .  |  :  packages: [n=0] 
[10:53:33.555] result() for MulticoreFuture ...
[10:53:33.555] |  :  .  |  attachPackages() ... DONE
[10:53:33.556] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.557] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:33.557] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.558] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.559] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:33.559] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:33.560] |  :  .  |  :  .  |  New stack:
[10:53:33.560] |  :  .  |  :  .  |  List of 1
[10:53:33.560] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.560] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.560] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.560] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.560] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.560] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.560] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.565] |  :  .  |  :  .  |  Old stack:
[10:53:33.565] |  :  .  |  :  .  |  List of 1
[10:53:33.565] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.565] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.565] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.565] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.565] |  :  .  |  :  .  |      ...)  
[10:53:33.565] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.565] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.565] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:33.565] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.565] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.565] |  :  .  |  :  .  |      ...)  
[10:53:33.565] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.565] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.570] |  :  .  |  :  .  |  Not identical
[10:53:33.570] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:33.570] |  :  .  |  :  .  |  :  List of 2
[10:53:33.570] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.570] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.570] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.570] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.570] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.570] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.570] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.570] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.570] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.570] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.570] |  :  .  |  :  .  |  :      ...)  
[10:53:33.570] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.570] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.570] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:33.570] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.570] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.570] |  :  .  |  :  .  |  :      ...)  
[10:53:33.570] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.577] |  :  .  |  :  .  |  :  Formals differ
[10:53:33.577] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:33.577] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:33.577] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:33.577] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:33.577] |  :  .  |  :  .  List of future strategies:
[10:53:33.577] |  :  .  |  :  .  1. sequential:
[10:53:33.577] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:33.577] |  :  .  |  :  .     - tweaked: FALSE
[10:53:33.577] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.578] |  :  .  |  :  .  List of 1
[10:53:33.578] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.578] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.578] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.578] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.578] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.578] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.578] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.583] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:33.584] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:33.584] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.584] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:33.584] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.584] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:33.585] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:33.585] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:33.585] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:33.585] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.585] |  :  .  |  assign_globals() ...
[10:53:33.585] |  :  .  |  List of 1
[10:53:33.585] |  :  .  |   $ pkg: chr "foo"
[10:53:33.585] |  :  .  |   - attr(*, "where")=List of 1
[10:53:33.585] |  :  .  |    ..$ pkg:<environment: R_EmptyEnv> 
[10:53:33.585] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:33.585] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:33.585] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:33.585] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:33.588] |  :  .  |  - copied ‘pkg’ to environment
[10:53:33.589] |  :  .  |  assign_globals() ... done
[10:53:33.591] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.591] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.591] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:33.591] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:33.591] |  :  .  |  :  .  |  :  New stack:
[10:53:33.591] |  :  .  |  :  .  |  :  List of 1
[10:53:33.591] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.591] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.591] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.591] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.591] |  :  .  |  :  .  |  :      ...)  
[10:53:33.591] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.591] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.591] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:33.591] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.591] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.591] |  :  .  |  :  .  |  :      ...)  
[10:53:33.591] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.591] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.594] |  :  .  |  :  .  |  :  Old stack:
[10:53:33.594] |  :  .  |  :  .  |  :  List of 1
[10:53:33.594] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.594] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.594] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.594] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.594] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.594] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.594] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.596] |  :  .  |  :  .  |  :  Not identical
[10:53:33.596] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:33.596] |  :  .  |  :  .  |  :  .  List of 2
[10:53:33.596] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.596] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.596] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.596] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.596] |  :  .  |  :  .  |  :  .      ...)  
[10:53:33.596] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.596] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.596] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:33.596] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.596] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.596] |  :  .  |  :  .  |  :  .      ...)  
[10:53:33.596] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.596] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.596] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.596] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.596] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.596] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.596] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.602] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:33.603] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:33.603] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:33.603] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:33.603] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:33.603] |  :  .  |  :  .  |  List of future strategies:
[10:53:33.603] |  :  .  |  :  .  |  1. multicore:
[10:53:33.603] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:33.603] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:33.603] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:33.603] |  :  .  |  :  .  |  List of 1
[10:53:33.603] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.603] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.603] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.603] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.603] |  :  .  |  :  .  |      ...)  
[10:53:33.603] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.603] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.603] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:33.603] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.603] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.603] |  :  .  |  :  .  |      ...)  
[10:53:33.603] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.603] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.607] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:33.607] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:33.607] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.607] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:33.607] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.607] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:33.607] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:33.607] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.608] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.608] |  readImmediateCondition() ...
[10:53:33.608] |    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:33.609] |   - Number of RDS files: 0
[10:53:33.609] |  readImmediateCondition() ... DONE
[10:53:33.609] |  result() for MulticoreFuture ...
[10:53:33.610] |  result() for MulticoreFuture ... done
[10:53:33.610] result() for MulticoreFuture ... done
[10:53:33.610] result() for MulticoreFuture ...
[10:53:33.610] result() for MulticoreFuture ... done
value(f) = ‘foo’
Method for identifying globals: 'ordered' ... DONE
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:33.611] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:33.612] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:33.615] |  :  globals found: [3] ‘{’, ‘<-’, ‘+’
[10:53:33.615] |  Searching for globals ... DONE
[10:53:33.615] |  Resolving globals: TRUE
[10:53:33.615] |  Resolving any globals that are futures ...
[10:53:33.615] |  :  globals: [3] ‘{’, ‘<-’, ‘+’
[10:53:33.616] |  Resolving any globals that are futures ... DONE
[10:53:33.616] |  Search for packages associated with the globals ...
[10:53:33.616] |  :  Packages associated with globals: [1] ‘base’
[10:53:33.616] |  :  Packages: [1] ‘base’
[10:53:33.617] |  Search for packages associated with the globals ... DONE
[10:53:33.617] |  Packages after dropping 'base': [0] 
[10:53:33.617] |  globals: [0] 
[10:53:33.617] |  packages: [0] 
[10:53:33.617] getGlobalsAndPackages() ... done
[10:53:33.617] run() for Future (‘Future’) ...
[10:53:33.617] |  state: ‘created’
[10:53:33.618] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.618] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.618] |  Using MulticoreFutureBackend ...
[10:53:33.618] |  :  Launching futures ...
[10:53:33.618] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:33.618] |  :  .  |  getFutureData() ...
[10:53:33.618] |  :  .  |  :  getFutureCore() ...
[10:53:33.619] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:33.619] |  :  .  |  :  getFutureCore() ... done
[10:53:33.619] |  :  .  |  :  getFutureCapture() ...
[10:53:33.619] |  :  .  |  :  getFutureCapture() ... done
[10:53:33.619] |  :  .  |  :  getFutureContext() ...
[10:53:33.619] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.619] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:33.619] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.620] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:33.620] |  :  .  |  :  getFutureContext() ... done
[10:53:33.620] |  :  .  |  getFutureData() ... done
[10:53:33.620] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:33.620] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:33.622] |  :  .  |  MulticoreFuture started
[10:53:33.622] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:33.623] |  :  Launching futures ... done
[10:53:33.623] |  :  .  |  attachPackages() ...
[10:53:33.623] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:33.623] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:33.623] |  Using MulticoreFutureBackend ... done
[10:53:33.623] |  :  .  |  attachPackages() ... DONE
[10:53:33.623] run() for Future (‘MulticoreFuture’) ... done
[10:53:33.624] |  :  .  |  attachPackages() ...
[10:53:33.624] |  :  .  |  :  packages: [n=0] 
[10:53:33.624] result() for MulticoreFuture ...
[10:53:33.624] |  :  .  |  attachPackages() ... DONE
[10:53:33.625] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.625] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:33.625] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.626] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.626] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:33.627] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:33.627] |  :  .  |  :  .  |  New stack:
[10:53:33.627] |  :  .  |  :  .  |  List of 1
[10:53:33.627] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.627] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.627] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.627] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.627] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.627] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.627] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.631] |  :  .  |  :  .  |  Old stack:
[10:53:33.631] |  :  .  |  :  .  |  List of 1
[10:53:33.631] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.631] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.631] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.631] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.631] |  :  .  |  :  .  |      ...)  
[10:53:33.631] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.631] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.631] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:33.631] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.631] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.631] |  :  .  |  :  .  |      ...)  
[10:53:33.631] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.631] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.642] |  :  .  |  :  .  |  Not identical
[10:53:33.642] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:33.642] |  :  .  |  :  .  |  :  List of 2
[10:53:33.642] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.642] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.642] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.642] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.642] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.642] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.642] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.642] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.642] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.642] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.642] |  :  .  |  :  .  |  :      ...)  
[10:53:33.642] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.642] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.642] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:33.642] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.642] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.642] |  :  .  |  :  .  |  :      ...)  
[10:53:33.642] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.650] |  :  .  |  :  .  |  :  Formals differ
[10:53:33.650] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:33.650] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:33.650] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:33.650] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:33.651] |  :  .  |  :  .  List of future strategies:
[10:53:33.651] |  :  .  |  :  .  1. sequential:
[10:53:33.651] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:33.651] |  :  .  |  :  .     - tweaked: FALSE
[10:53:33.651] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.651] |  :  .  |  :  .  List of 1
[10:53:33.651] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.651] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.651] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.651] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.651] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.651] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.651] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.654] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:33.654] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:33.654] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.654] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:33.654] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.655] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:33.655] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:33.655] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:33.655] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:33.655] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.657] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.658] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.658] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:33.658] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:33.658] |  :  .  |  :  .  |  :  New stack:
[10:53:33.658] |  :  .  |  :  .  |  :  List of 1
[10:53:33.658] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.658] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.658] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.658] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.658] |  :  .  |  :  .  |  :      ...)  
[10:53:33.658] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.658] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.658] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:33.658] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.658] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.658] |  :  .  |  :  .  |  :      ...)  
[10:53:33.658] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.658] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.663] |  :  .  |  :  .  |  :  Old stack:
[10:53:33.663] |  :  .  |  :  .  |  :  List of 1
[10:53:33.663] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.663] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.663] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.663] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.663] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.663] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.663] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.666] |  :  .  |  :  .  |  :  Not identical
[10:53:33.666] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:33.666] |  :  .  |  :  .  |  :  .  List of 2
[10:53:33.666] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.666] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.666] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.666] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.666] |  :  .  |  :  .  |  :  .      ...)  
[10:53:33.666] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.666] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.666] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:33.666] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.666] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.666] |  :  .  |  :  .  |  :  .      ...)  
[10:53:33.666] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.666] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.666] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.666] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.666] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.666] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.666] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.671] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:33.671] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:33.671] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:33.671] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:33.671] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:33.671] |  :  .  |  :  .  |  List of future strategies:
[10:53:33.671] |  :  .  |  :  .  |  1. multicore:
[10:53:33.671] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:33.671] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:33.671] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:33.671] |  :  .  |  :  .  |  List of 1
[10:53:33.671] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.671] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.671] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.671] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.671] |  :  .  |  :  .  |      ...)  
[10:53:33.671] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.671] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.671] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:33.671] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.671] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.671] |  :  .  |  :  .  |      ...)  
[10:53:33.671] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.671] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.674] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:33.675] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:33.675] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.675] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:33.675] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.675] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:33.675] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:33.675] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.675] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.676] |  readImmediateCondition() ...
[10:53:33.676] |    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:33.676] |   - Number of RDS files: 0
[10:53:33.677] |  readImmediateCondition() ... DONE
[10:53:33.677] |  result() for MulticoreFuture ...
[10:53:33.677] |  result() for MulticoreFuture ... done
[10:53:33.677] result() for MulticoreFuture ... done
[10:53:33.677] result() for MulticoreFuture ...
[10:53:33.677] result() for MulticoreFuture ... done
value(f) = ‘1’
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:33.678] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:33.678] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:33.681] |  :  globals found: [4] ‘{’, ‘<-’, ‘x’, ‘+’
[10:53:33.681] |  Searching for globals ... DONE
[10:53:33.681] |  Resolving globals: TRUE
[10:53:33.681] |  Resolving any globals that are futures ...
[10:53:33.682] |  :  globals: [4] ‘{’, ‘<-’, ‘x’, ‘+’
[10:53:33.682] |  Resolving any globals that are futures ... DONE
[10:53:33.682] |  Search for packages associated with the globals ...
[10:53:33.684] |  :  Packages associated with globals: [1] ‘base’
[10:53:33.685] |  :  Packages: [1] ‘base’
[10:53:33.685] |  Search for packages associated with the globals ... DONE
[10:53:33.685] |  Resolving futures part of globals (recursively) ...
[10:53:33.686] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:33.686] |  :  .  recursive: 99
[10:53:33.686] |  :  .  length: 1
[10:53:33.687] |  :  .  elements: ‘x’
[10:53:33.687] |  :  .  'obj' is atomic
[10:53:33.687] |  :  .  length: 0 (resolved future 1)
[10:53:33.687] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:33.687] |  :  globals: [1] ‘x’
[10:53:33.688] |  Resolving futures part of globals (recursively) ... DONE
[10:53:33.688] |  Packages after dropping 'base': [0] 
[10:53:33.688] |  globals: [1] ‘x’
[10:53:33.688] |  packages: [0] 
[10:53:33.688] getGlobalsAndPackages() ... done
[10:53:33.689] run() for Future (‘Future’) ...
[10:53:33.689] |  state: ‘created’
[10:53:33.689] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.689] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.690] |  Using MulticoreFutureBackend ...
[10:53:33.690] |  :  Launching futures ...
[10:53:33.690] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:33.690] |  :  .  |  getFutureData() ...
[10:53:33.690] |  :  .  |  :  getFutureCore() ...
[10:53:33.691] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:33.691] |  :  .  |  :  getFutureCore() ... done
[10:53:33.691] |  :  .  |  :  getFutureCapture() ...
[10:53:33.691] |  :  .  |  :  getFutureCapture() ... done
[10:53:33.691] |  :  .  |  :  getFutureContext() ...
[10:53:33.691] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.691] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:33.692] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.692] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:33.692] |  :  .  |  :  getFutureContext() ... done
[10:53:33.692] |  :  .  |  getFutureData() ... done
[10:53:33.692] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:33.693] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:33.695] |  :  .  |  MulticoreFuture started
[10:53:33.696] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:33.696] |  :  .  |  attachPackages() ...
[10:53:33.696] |  :  Launching futures ... done
[10:53:33.696] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:33.697] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:33.697] |  :  .  |  attachPackages() ... DONE
[10:53:33.697] |  Using MulticoreFutureBackend ... done
[10:53:33.697] |  :  .  |  attachPackages() ...
[10:53:33.698] run() for Future (‘MulticoreFuture’) ... done
[10:53:33.698] |  :  .  |  :  packages: [n=0] 
[10:53:33.698] result() for MulticoreFuture ...
[10:53:33.698] |  :  .  |  attachPackages() ... DONE
[10:53:33.699] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.700] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:33.701] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.701] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.702] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:33.702] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:33.703] |  :  .  |  :  .  |  New stack:
[10:53:33.703] |  :  .  |  :  .  |  List of 1
[10:53:33.703] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.703] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.703] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.703] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.703] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.703] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.703] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.708] |  :  .  |  :  .  |  Old stack:
[10:53:33.708] |  :  .  |  :  .  |  List of 1
[10:53:33.708] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.708] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.708] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.708] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.708] |  :  .  |  :  .  |      ...)  
[10:53:33.708] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.708] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.708] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:33.708] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.708] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.708] |  :  .  |  :  .  |      ...)  
[10:53:33.708] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.708] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.713] |  :  .  |  :  .  |  Not identical
[10:53:33.713] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:33.713] |  :  .  |  :  .  |  :  List of 2
[10:53:33.713] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.713] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.713] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.713] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.713] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.713] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.713] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.713] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.713] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.713] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.713] |  :  .  |  :  .  |  :      ...)  
[10:53:33.713] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.713] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.713] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:33.713] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.713] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.713] |  :  .  |  :  .  |  :      ...)  
[10:53:33.713] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.720] |  :  .  |  :  .  |  :  Formals differ
[10:53:33.720] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:33.722] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:33.722] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:33.723] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:33.723] |  :  .  |  :  .  List of future strategies:
[10:53:33.723] |  :  .  |  :  .  1. sequential:
[10:53:33.723] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:33.723] |  :  .  |  :  .     - tweaked: FALSE
[10:53:33.723] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.724] |  :  .  |  :  .  List of 1
[10:53:33.724] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.724] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.724] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.724] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.724] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.724] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.724] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.727] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:33.727] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:33.727] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.727] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:33.728] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.728] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:33.728] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:33.728] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:33.729] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:33.729] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.729] |  :  .  |  assign_globals() ...
[10:53:33.729] |  :  .  |  List of 1
[10:53:33.729] |  :  .  |   $ x: num 1
[10:53:33.729] |  :  .  |   - attr(*, "where")=List of 1
[10:53:33.729] |  :  .  |    ..$ x:<environment: R_EmptyEnv> 
[10:53:33.729] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:33.729] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:33.729] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:33.729] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:33.732] |  :  .  |  - copied ‘x’ to environment
[10:53:33.732] |  :  .  |  assign_globals() ... done
[10:53:33.735] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.735] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.735] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:33.735] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:33.735] |  :  .  |  :  .  |  :  New stack:
[10:53:33.735] |  :  .  |  :  .  |  :  List of 1
[10:53:33.735] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.735] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.735] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.735] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.735] |  :  .  |  :  .  |  :      ...)  
[10:53:33.735] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.735] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.735] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:33.735] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.735] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.735] |  :  .  |  :  .  |  :      ...)  
[10:53:33.735] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.735] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.738] |  :  .  |  :  .  |  :  Old stack:
[10:53:33.738] |  :  .  |  :  .  |  :  List of 1
[10:53:33.738] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.738] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.738] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.738] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.738] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.738] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.738] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.740] |  :  .  |  :  .  |  :  Not identical
[10:53:33.740] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:33.741] |  :  .  |  :  .  |  :  .  List of 2
[10:53:33.741] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.741] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.741] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.741] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.741] |  :  .  |  :  .  |  :  .      ...)  
[10:53:33.741] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.741] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.741] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:33.741] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.741] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.741] |  :  .  |  :  .  |  :  .      ...)  
[10:53:33.741] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.741] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.741] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.741] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.741] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.741] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.741] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.747] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:33.747] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:33.747] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:33.748] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:33.748] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:33.748] |  :  .  |  :  .  |  List of future strategies:
[10:53:33.748] |  :  .  |  :  .  |  1. multicore:
[10:53:33.748] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:33.748] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:33.748] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:33.748] |  :  .  |  :  .  |  List of 1
[10:53:33.748] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.748] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.748] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.748] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.748] |  :  .  |  :  .  |      ...)  
[10:53:33.748] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.748] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.748] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:33.748] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.748] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.748] |  :  .  |  :  .  |      ...)  
[10:53:33.748] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.748] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.751] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:33.752] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:33.752] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.752] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:33.752] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.752] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:33.752] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:33.752] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.753] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.753] |  readImmediateCondition() ...
[10:53:33.753] |    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:33.754] |   - Number of RDS files: 0
[10:53:33.754] |  readImmediateCondition() ... DONE
[10:53:33.754] |  result() for MulticoreFuture ...
[10:53:33.755] |  result() for MulticoreFuture ... done
[10:53:33.755] result() for MulticoreFuture ... done
[10:53:33.755] result() for MulticoreFuture ...
[10:53:33.755] result() for MulticoreFuture ... done
value(f) = ‘2’
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:33.756] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:33.757] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:33.759] |  :  globals found: [3] ‘{’, ‘<-’, ‘x’
[10:53:33.759] |  Searching for globals ... DONE
[10:53:33.760] |  Resolving globals: TRUE
[10:53:33.760] |  Resolving any globals that are futures ...
[10:53:33.760] |  :  globals: [3] ‘{’, ‘<-’, ‘x’
[10:53:33.760] |  Resolving any globals that are futures ... DONE
[10:53:33.760] |  Search for packages associated with the globals ...
[10:53:33.760] |  :  Packages associated with globals: [1] ‘base’
[10:53:33.761] |  :  Packages: [1] ‘base’
[10:53:33.761] |  Search for packages associated with the globals ... DONE
[10:53:33.761] |  Resolving futures part of globals (recursively) ...
[10:53:33.761] |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:33.762] |  :  .  recursive: 99
[10:53:33.762] |  :  .  length: 1
[10:53:33.762] |  :  .  elements: ‘x’
[10:53:33.762] |  :  .  'obj' is function
[10:53:33.762] |  :  .  resolve(obj, ...) ...
[10:53:33.762] |  :  .  resolve(obj, ...) ... done
[10:53:33.762] |  :  .  length: 0 (resolved future 1)
[10:53:33.762] |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:33.763] |  :  globals: [1] ‘x’
[10:53:33.763] |  Resolving futures part of globals (recursively) ... DONE
[10:53:33.763] |  Packages after dropping 'base': [0] 
[10:53:33.763] |  globals: [1] ‘x’
[10:53:33.763] |  packages: [0] 
[10:53:33.763] getGlobalsAndPackages() ... done
[10:53:33.763] run() for Future (‘Future’) ...
[10:53:33.764] |  state: ‘created’
[10:53:33.764] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.764] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.764] |  Using MulticoreFutureBackend ...
[10:53:33.764] |  :  Launching futures ...
[10:53:33.764] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:33.764] |  :  .  |  getFutureData() ...
[10:53:33.765] |  :  .  |  :  getFutureCore() ...
[10:53:33.765] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:33.765] |  :  .  |  :  getFutureCore() ... done
[10:53:33.765] |  :  .  |  :  getFutureCapture() ...
[10:53:33.765] |  :  .  |  :  getFutureCapture() ... done
[10:53:33.765] |  :  .  |  :  getFutureContext() ...
[10:53:33.765] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.765] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:33.766] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.766] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:33.766] |  :  .  |  :  getFutureContext() ... done
[10:53:33.766] |  :  .  |  getFutureData() ... done
[10:53:33.766] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:33.767] |  :  .  |  requestCore(..., workers = 2) ...
[10:53:33.768] |  :  .  |  MulticoreFuture started
[10:53:33.769] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:53:33.769] |  :  Launching futures ... done
[10:53:33.769] |  :  .  |  attachPackages() ...
[10:53:33.769] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:33.769] |  :  .  |  :  packages: [n=1] ‘future’
[10:53:33.769] |  Using MulticoreFutureBackend ... done
[10:53:33.770] run() for Future (‘MulticoreFuture’) ... done
[10:53:33.770] |  :  .  |  attachPackages() ... DONE
[10:53:33.770] |  :  .  |  attachPackages() ...
[10:53:33.770] result() for MulticoreFuture ...
[10:53:33.770] |  :  .  |  :  packages: [n=0] 
[10:53:33.770] |  :  .  |  attachPackages() ... DONE
[10:53:33.771] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.771] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:33.772] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.772] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.773] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:33.773] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:53:33.773] |  :  .  |  :  .  |  New stack:
[10:53:33.773] |  :  .  |  :  .  |  List of 1
[10:53:33.773] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.773] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.773] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.773] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.773] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.773] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.773] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.783] |  :  .  |  :  .  |  Old stack:
[10:53:33.783] |  :  .  |  :  .  |  List of 1
[10:53:33.783] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.783] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.783] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.783] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.783] |  :  .  |  :  .  |      ...)  
[10:53:33.783] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.783] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.783] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:33.783] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.783] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.783] |  :  .  |  :  .  |      ...)  
[10:53:33.783] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.783] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.790] |  :  .  |  :  .  |  Not identical
[10:53:33.790] |  :  .  |  :  .  |  all.equal() for future ...
[10:53:33.790] |  :  .  |  :  .  |  :  List of 2
[10:53:33.790] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.790] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.790] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.790] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.790] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.790] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.790] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.790] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.790] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.790] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.790] |  :  .  |  :  .  |  :      ...)  
[10:53:33.790] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.790] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.790] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:33.790] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.790] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.790] |  :  .  |  :  .  |  :      ...)  
[10:53:33.790] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.797] |  :  .  |  :  .  |  :  Formals differ
[10:53:33.797] |  :  .  |  :  .  |  all.equal() for future ... done
[10:53:33.798] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:53:33.798] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:53:33.798] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:53:33.798] |  :  .  |  :  .  List of future strategies:
[10:53:33.798] |  :  .  |  :  .  1. sequential:
[10:53:33.798] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:33.798] |  :  .  |  :  .     - tweaked: FALSE
[10:53:33.798] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.798] |  :  .  |  :  .  List of 1
[10:53:33.798] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.798] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.798] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.798] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.798] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.798] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.798] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.801] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:33.801] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:33.801] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.802] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:33.802] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.802] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:53:33.802] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:33.802] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:53:33.802] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:33.803] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.803] |  :  .  |  assign_globals() ...
[10:53:33.803] |  :  .  |  List of 1
[10:53:33.803] |  :  .  |   $ x:function ()  
[10:53:33.803] |  :  .  |   - attr(*, "where")=List of 1
[10:53:33.803] |  :  .  |    ..$ x:<environment: R_EmptyEnv> 
[10:53:33.803] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:53:33.803] |  :  .  |   - attr(*, "resolved")= logi TRUE
[10:53:33.803] |  :  .  |   - attr(*, "total_size")= num NA
[10:53:33.803] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:53:33.805] |  :  .  |  - reassign environment for ‘x’ [where=emptyenv()]
[10:53:33.806] |  :  .  |  - copied ‘x’ to environment
[10:53:33.806] |  :  .  |  assign_globals() ... done
[10:53:33.810] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.810] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:53:33.810] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:53:33.810] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:53:33.810] |  :  .  |  :  .  |  :  New stack:
[10:53:33.810] |  :  .  |  :  .  |  :  List of 1
[10:53:33.810] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.810] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.810] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.810] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.810] |  :  .  |  :  .  |  :      ...)  
[10:53:33.810] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.810] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.810] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:33.810] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.810] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.810] |  :  .  |  :  .  |  :      ...)  
[10:53:33.810] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.810] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.813] |  :  .  |  :  .  |  :  Old stack:
[10:53:33.814] |  :  .  |  :  .  |  :  List of 1
[10:53:33.814] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.814] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.814] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.814] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.814] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.814] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.814] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.816] |  :  .  |  :  .  |  :  Not identical
[10:53:33.816] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:53:33.816] |  :  .  |  :  .  |  :  .  List of 2
[10:53:33.816] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.816] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.816] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.816] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.816] |  :  .  |  :  .  |  :  .      ...)  
[10:53:33.816] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.816] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.816] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:33.816] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.816] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.816] |  :  .  |  :  .  |  :  .      ...)  
[10:53:33.816] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.816] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.816] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.816] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.816] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.816] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.816] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:53:33.820] |  :  .  |  :  .  |  :  .  Formals differ
[10:53:33.820] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:53:33.820] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:53:33.820] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:53:33.821] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:53:33.821] |  :  .  |  :  .  |  List of future strategies:
[10:53:33.821] |  :  .  |  :  .  |  1. multicore:
[10:53:33.821] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:33.821] |  :  .  |  :  .  |     - tweaked: FALSE
[10:53:33.821] |  :  .  |  :  .  |     - call: plan(strategy)
[10:53:33.821] |  :  .  |  :  .  |  List of 1
[10:53:33.821] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.821] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.821] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.821] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.821] |  :  .  |  :  .  |      ...)  
[10:53:33.821] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.821] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.821] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:33.821] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.821] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.821] |  :  .  |  :  .  |      ...)  
[10:53:33.821] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.821] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.824] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:53:33.824] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:53:33.826] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.826] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:33.826] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.826] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:53:33.826] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:53:33.826] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.826] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:53:33.827] |  readImmediateCondition() ...
[10:53:33.827] |    - path: ‘/tmp/Rtmp0djEst/.future/immediateConditions’
[10:53:33.828] |   - Number of RDS files: 0
[10:53:33.828] |  readImmediateCondition() ... DONE
[10:53:33.828] |  result() for MulticoreFuture ...
[10:53:33.828] |  result() for MulticoreFuture ... done
[10:53:33.828] result() for MulticoreFuture ... done
[10:53:33.828] result() for MulticoreFuture ...
[10:53:33.829] result() for MulticoreFuture ... done
value(f) = ‘TRUE’
[10:53:33.829] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.829] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:53:33.829] |  :  all.equal() for FutureStrategyList ...
[10:53:33.830] |  :  .  New stack:
[10:53:33.830] |  :  .  List of 1
[10:53:33.830] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.830] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.830] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.830] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.830] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.830] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:53:33.830] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.837] |  :  .  Old stack:
[10:53:33.837] |  :  .  List of 1
[10:53:33.837] |  :  .   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.837] |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.837] |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.837] |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.837] |  :  .      ...)  
[10:53:33.837] |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.837] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.837] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:33.837] |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.837] |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.837] |  :  .      ...)  
[10:53:33.837] |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.837] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.842] |  :  .  Not identical
[10:53:33.842] |  :  .  all.equal() for future ...
[10:53:33.842] |  :  .  |  List of 2
[10:53:33.842] |  :  .  |   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.842] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.842] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.842] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.842] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.842] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:33.842] |  :  .  |   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:53:33.842] |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:53:33.842] |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:53:33.842] |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.842] |  :  .  |      ...)  
[10:53:33.842] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.842] |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.842] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:33.842] |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a702bed90> 
[10:53:33.842] |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:53:33.842] |  :  .  |      ...)  
[10:53:33.842] |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:53:33.848] |  :  .  |  Formals differ
[10:53:33.848] |  :  .  all.equal() for future ... done
[10:53:33.849] |  :  .  Future strategies differ at level 1
[10:53:33.849] |  :  all.equal() for FutureStrategyList ... done
[10:53:33.849] |  :  plan(): Setting new future strategy stack:
[10:53:33.849] |  :  List of future strategies:
[10:53:33.849] |  :  1. sequential:
[10:53:33.849] |  :     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:33.849] |  :     - tweaked: FALSE
[10:53:33.849] |  :     - call: plan(sequential)
[10:53:33.849] |  :  List of 1
[10:53:33.849] |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.849] |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.849] |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.849] |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.849] |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.849] |  :    ..- attr(*, "call")= language plan(sequential)
[10:53:33.849] |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.852] |  :  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:53:33.852] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.852] |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:53:33.852] |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.853] |  :  .  Legacy shutdown of cluster workers ...
[10:53:33.854] |  :  .  |  Stopping existing cluster ...
[10:53:33.854] |  :  .  |  :  No pre-existing cluster. Skipping
[10:53:33.854] |  :  .  |  Stopping existing cluster ... done
[10:53:33.854] |  :  .  Legacy shutdown of cluster workers ... done
[10:53:33.854] |  :  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:53:33.854] |  :  plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[10:53:33.854] |  :  .  function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.854] |  :  .   - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.854] |  :  .   - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.854] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.854] |  :  .   - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.854] |  :  .   - attr(*, "call")= language plan(sequential)
[10:53:33.856] |  :  .  init: NULL
[10:53:33.856] |  :  plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[10:53:33.858] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.858] |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:33.858] |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.859] |  :  Backend function: <‘NULL’>
[10:53:33.859] |  :  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:33.859] |  :  plan(): nbrOfWorkers() = 1
[10:53:33.859] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:53:33.859] plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
- plan('multisession') ...
[10:53:33.859] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.860] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:53:33.860] |  :  all.equal() for FutureStrategyList ...
[10:53:33.860] |  :  .  New stack:
[10:53:33.860] |  :  .  List of 1
[10:53:33.860] |  :  .   $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:53:33.860] |  :  .      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.860] |  :  .    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:53:33.860] |  :  .    ..- attr(*, "init")= logi TRUE
[10:53:33.860] |  :  .    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:53:33.860] |  :  .    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:33.860] |  :  .    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:33.860] |  :  .    ..- attr(*, "untweakable")= chr "persistent"
[10:53:33.860] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:53:33.860] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.864] |  :  .  Old stack:
[10:53:33.864] |  :  .  List of 1
[10:53:33.864] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.864] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.864] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.864] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.864] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.864] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:53:33.864] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.866] |  :  .  Not identical
[10:53:33.866] |  :  .  all.equal() for future ...
[10:53:33.866] |  :  .  |  List of 2
[10:53:33.866] |  :  .  |   $ target :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:53:33.866] |  :  .  |      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.866] |  :  .  |    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:53:33.866] |  :  .  |    ..- attr(*, "init")= logi TRUE
[10:53:33.866] |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:53:33.866] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:33.866] |  :  .  |    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:33.866] |  :  .  |    ..- attr(*, "untweakable")= chr "persistent"
[10:53:33.866] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:53:33.866] |  :  .  |   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.866] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:33.866] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:33.866] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.866] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:33.866] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:53:33.871] |  :  .  |  Formals differ
[10:53:33.871] |  :  .  all.equal() for future ... done
[10:53:33.871] |  :  .  Future strategies differ at level 1
[10:53:33.871] |  :  all.equal() for FutureStrategyList ... done
[10:53:33.871] |  :  plan(): Setting new future strategy stack:
[10:53:33.871] |  :  List of future strategies:
[10:53:33.871] |  :  1. multisession:
[10:53:33.871] |  :     - args: function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:53:33.871] |  :     - tweaked: FALSE
[10:53:33.871] |  :     - call: plan(strategy)
[10:53:33.871] |  :  List of 1
[10:53:33.871] |  :   $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:53:33.871] |  :      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.871] |  :    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:53:33.871] |  :    ..- attr(*, "init")= logi TRUE
[10:53:33.871] |  :    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:53:33.871] |  :    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:33.871] |  :    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:33.871] |  :    ..- attr(*, "untweakable")= chr "persistent"
[10:53:33.871] |  :    ..- attr(*, "call")= language plan(strategy)
[10:53:33.871] |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:33.874] |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:53:33.874] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:33.874] |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:33.875] |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:33.875] |  :  .  Legacy shutdown of cluster workers ...
[10:53:33.875] |  :  .  |  Stopping existing cluster ...
[10:53:33.875] |  :  .  |  :  No pre-existing cluster. Skipping
[10:53:33.875] |  :  .  |  Stopping existing cluster ... done
[10:53:33.875] |  :  .  Legacy shutdown of cluster workers ... done
[10:53:33.875] |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:53:33.875] |  :  plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ...
[10:53:33.877] |  :  .  function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:53:33.877] |  :  .      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:33.877] |  :  .   - attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:53:33.877] |  :  .   - attr(*, "init")= logi TRUE
[10:53:33.877] |  :  .   - attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:53:33.877] |  :  .    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:33.877] |  :  .   - attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:33.877] |  :  .   - attr(*, "untweakable")= chr "persistent"
[10:53:33.877] |  :  .   - attr(*, "call")= language plan(strategy)
[10:53:33.880] |  :  .  init: TRUE
[10:53:33.880] |  :  .  makeFutureBackend(<multisession>) ...
[10:53:33.880] |  :  .  |  Backend function: <‘NULL’>
[10:53:33.882] |  :  .  |  ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ...
[10:53:33.882] |  :  .  |  :  workers: 2
[10:53:33.882] |  :  .  |  :  getCluster() ...
[10:53:33.882] |  :  .  |  :  getCluster() ... done
[10:53:33.882] |  :  .  |  :  Stopping existing cluster ...
[10:53:33.882] |  :  .  |  :  .  No pre-existing cluster. Skipping
[10:53:33.882] |  :  .  |  :  Stopping existing cluster ... done
[10:53:33.882] |  :  .  |  :  Starting new cluster ...
[10:53:33.882] |  :  .  |  :  .  makeCluster(workers, ...) ...
[10:53:33.883] |  :  .  |  :  .  |  Arguments:
[10:53:33.883] |  :  .  |  :  .  |  List of 2
[10:53:33.883] |  :  .  |  :  .  |   $             : int 2
[10:53:33.883] |  :  .  |  :  .  |   $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[10:53:34.373] |  :  .  |  :  .  |  Generated cluster UUID
[10:53:34.373] |  :  .  |  :  .  |  Cluster UUID: ‘674da372c1cdbb2f9cb15750fed89f93’
[10:53:34.373] |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:34.375] |  :  .  |  :  .  makeCluster(workers, ...) ... done
[10:53:34.376] |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:34.377] |  :  .  |  :  Starting new cluster ... done
[10:53:34.377] |  :  .  |  :  Number of workers: 2
[10:53:34.377] |  :  .  |  :  Workers UUID: ‘674da372c1cdbb2f9cb15750fed89f93’
[10:53:34.377] |  :  .  |  ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ... done
[10:53:34.378] |  :  .  |  Backend: <‘MultisessionFutureBackend’, ‘ClusterFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:34.378] |  :  .  makeFutureBackend(<multisession>) ... done
[10:53:34.378] |  :  plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ... done
[10:53:34.378] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:34.378] |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:53:34.378] |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:34.378] |  :  plan(): nbrOfWorkers() = 2
[10:53:34.378] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:53:34.378] plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
Method for identifying globals: 'conservative' ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:34.379] getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:34.379] |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:34.381] |  :  globals found: [3] ‘{’, ‘<-’, ‘*’
[10:53:34.381] |  Searching for globals ... DONE
[10:53:34.381] |  Resolving globals: TRUE
[10:53:34.381] |  Resolving any globals that are futures ...
[10:53:34.381] |  :  globals: [3] ‘{’, ‘<-’, ‘*’
[10:53:34.381] |  Resolving any globals that are futures ... DONE
[10:53:34.381] |  Search for packages associated with the globals ...
[10:53:34.382] |  :  Packages associated with globals: [1] ‘base’
[10:53:34.382] |  :  Packages: [1] ‘base’
[10:53:34.382] |  Search for packages associated with the globals ... DONE
[10:53:34.382] |  Packages after dropping 'base': [0] 
[10:53:34.382] |  globals: [0] 
[10:53:34.382] |  packages: [0] 
[10:53:34.382] getGlobalsAndPackages() ... done
[10:53:34.383] run() for Future (‘Future’) ...
[10:53:34.383] |  state: ‘created’
[10:53:34.383] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:34.383] |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:34.383] |  Using MultisessionFutureBackend ...
[10:53:34.383] |  :  Launching futures ...
[10:53:34.383] |  :  .  launchFuture() for ClusterFutureBackend ...
[10:53:34.384] |  :  .  |  Workers: [n=2]
[10:53:34.384] |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:34.385] |  :  .  |  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:34.385] |  :  .  |  requestWorker() ...
[10:53:34.385] |  :  .  |  :  requestNode() ...
[10:53:34.385] |  :  .  |  :  .  Number of workers: 2
[10:53:34.386] |  :  .  |  :  .  Polling for a free worker ...
[10:53:34.386] |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:34.386] |  :  .  |  :  .  |  :  Created empty registry ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:34.386] |  :  .  |  :  .  |  :  Listing all futures
[10:53:34.386] |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:53:34.386] |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:34.386] |  :  .  |  :  .  |  Total time: 0
[10:53:34.386] |  :  .  |  :  .  Polling for a free worker ... done
[10:53:34.386] |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:34.386] |  :  .  |  :  .  |  Listing all futures
[10:53:34.387] |  :  .  |  :  .  |  Number of registered futures: 0
[10:53:34.387] |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:34.387] |  :  .  |  :  .  Index of first available worker: 1
[10:53:34.387] |  :  .  |  :  .  Validate that the worker is functional ...
[10:53:34.446] |  :  .  |  :  .  |  Worker is functional
[10:53:34.446] |  :  .  |  :  .  requestNode() ... done
[10:53:34.446] |  :  .  |  :  .  cluster node index: 1
[10:53:34.447] |  :  .  |  :  requestWorker() ... done
[10:53:34.447] |  :  .  |  :  eraseGlobalEnvironment() ...
[10:53:34.448] |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:53:34.448] |  :  .  |  :  launchFuture() ...
[10:53:34.448] |  :  .  |  :  .  cluster node index: 1
[10:53:34.449] |  :  .  |  :  .  getFutureData() ...
[10:53:34.449] |  :  .  |  :  .  |  getFutureCore() ...
[10:53:34.449] |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:53:34.449] |  :  .  |  :  .  |  getFutureCore() ... done
[10:53:34.449] |  :  .  |  :  .  |  getFutureCapture() ...
[10:53:34.449] |  :  .  |  :  .  |  getFutureCapture() ... done
[10:53:34.449] |  :  .  |  :  .  |  getFutureContext() ...
[10:53:34.450] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:34.450] |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:53:34.450] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:34.450] |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:53:34.450] |  :  .  |  :  .  |  getFutureContext() ... done
[10:53:34.450] |  :  .  |  :  .  getFutureData() ... done
[10:53:34.451] |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:34.451] |  :  .  |  :  .  |  Appended future to position #1
[10:53:34.451] |  :  .  |  :  .  |  Number of registered futures: 1
[10:53:34.451] |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:34.451] |  :  .  |  :  launchFuture() ... done
[10:53:34.451] |  :  .  |  :  MultisessionFuture started
[10:53:34.452] |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:53:34.452] |  :  .  Launching futures ... done
[10:53:34.452] |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:34.452] |  :  Using MultisessionFutureBackend ... done
[10:53:34.452] |  run() for Future (‘MultisessionFuture’) ... done
[10:53:34.452] |  result() for ClusterFuture ...
[10:53:34.453] |  :  assertValidConnection() ...
[10:53:34.453] |  :  .  cluster node index: 1
[10:53:34.453] |  :  assertValidConnection() ... done
[10:53:34.454] |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:53:34.454] |  :  .  cluster node index: 1
[10:53:34.540] |  :  .  [1] TRUE
[10:53:34.540] |  :  .  received data:
[10:53:34.540] |  :  .  List of 5
[10:53:34.540] |  :  .   $ type   : chr "VALUE"
[10:53:34.540] |  :  .   $ value  :List of 13
[10:53:34.540] |  :  .    ..$ value            : NULL
[10:53:34.540] |  :  .    ..$ visible          : logi TRUE
[10:53:34.540] |  :  .    ..$ stdout           : chr ""
[10:53:34.540] |  :  .    ..$ conditions       :List of 1
[10:53:34.540] |  :  .    .. ..$ :List of 5
[10:53:34.540] |  :  .    .. .. ..$ condition:List of 2
[10:53:34.540] |  :  .    .. .. .. ..$ message: chr "object 'a' not found"
[10:53:34.540] |  :  .    .. .. .. ..$ call   : language eval(quote({     { ...
[10:53:34.540] |  :  .    .. .. .. ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
[10:53:34.540] |  :  .    .. .. ..$ calls    :List of 9
[10:53:34.540] |  :  .    .. .. .. ..$ : language eval(expr, envir = globalenv())
[10:53:34.540] |  :  .    .. .. .. ..$ : language eval(expr, envir = globalenv())
[10:53:34.540] |  :  .    .. .. .. ..$ : language local({     { ...
[10:53:34.540] |  :  .    .. .. .. ..$ : language eval.parent(substitute(eval(quote(expr), envir)))
[10:53:34.540] |  :  .    .. .. .. ..$ : language eval(expr, p)
[10:53:34.540] |  :  .    .. .. .. ..$ : language eval(expr, p)
[10:53:34.540] |  :  .    .. .. .. ..$ : language eval(quote({     { ...
[10:53:34.540] |  :  .    .. .. .. ..$ : language eval(quote({     { ...
[10:53:34.540] |  :  .    .. .. .. ..$ : language eval(quote({     { ...
[10:53:34.540] |  :  .    .. .. ..$ session  :List of 6
[10:53:34.540] |  :  .    .. .. .. ..$ r         :List of 14
[10:53:34.540] |  :  .    .. .. .. .. ..$ platform      : chr "x86_64-pc-linux-gnu"
[10:53:34.540] |  :  .    .. .. .. .. ..$ arch          : chr "x86_64"
[10:53:34.540] |  :  .    .. .. .. .. ..$ os            : chr "linux-gnu"
[10:53:34.540] |  :  .    .. .. .. .. ..$ system        : chr "x86_64, linux-gnu"
[10:53:34.540] |  :  .    .. .. .. .. ..$ status        : chr ""
[10:53:34.540] |  :  .    .. .. .. .. ..$ major         : chr "4"
[10:53:34.540] |  :  .    .. .. .. .. ..$ minor         : chr "5.0"
[10:53:34.540] |  :  .    .. .. .. .. ..$ year          : chr "2025"
[10:53:34.540] |  :  .    .. .. .. .. ..$ month         : chr "04"
[10:53:34.540] |  :  .    .. .. .. .. ..$ day           : chr "11"
[10:53:34.540] |  :  .    .. .. .. .. ..$ svn rev       : chr "88135"
[10:53:34.540] |  :  .    .. .. .. .. ..$ language      : chr "R"
[10:53:34.540] |  :  .    .. .. .. .. ..$ version.string: chr "R version 4.5.0 (2025-04-11)"
[10:53:34.540] |  :  .    .. .. .. .. ..$ nickname      : chr "How About a Twenty-Six"
[10:53:34.540] |  :  .    .. .. .. ..$ locale    : chr "LC_CTYPE=en_US.UTF-8;LC_NUMERIC=C;LC_TIME=en_US.UTF-8;LC_COLLATE=en_US.UTF-8;LC_MONETARY=en_US.UTF-8;LC_MESSAGE"| __truncated__
[10:53:34.540] |  :  .    .. .. .. ..$ rngkind   : chr [1:3] "Mersenne-Twister" "Inversion" "Rejection"
[10:53:34.540] |  :  .    .. .. .. ..$ namespaces: chr [1:16] "compiler" "parallelly" "graphics" "tools" ...
[10:53:34.540] |  :  .    .. .. .. ..$ search    : chr [1:10] ".GlobalEnv" "package:future" "package:stats" "package:graphics" ...
[10:53:34.540] |  :  .    .. .. .. ..$ system    : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:34.540] |  :  .    .. .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:34.540] |  :  .    .. .. ..$ timestamp: POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:34.540] |  :  .    .. .. ..$ signaled : int 0
[10:53:34.540] |  :  .    ..$ rng              : logi FALSE
[10:53:34.540] |  :  .    ..$ misuseGlobalEnv  : NULL
[10:53:34.540] |  :  .    ..$ misuseConnections:List of 3
[10:53:34.540] |  :  .    .. ..$ added   : NULL
[10:53:34.540] |  :  .    .. ..$ removed : NULL
[10:53:34.540] |  :  .    .. ..$ replaced: NULL
[10:53:34.540] |  :  .    ..$ misuseDevices    : NULL
[10:53:34.540] |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:34.540] |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:34.540] |  :  .    ..$ session_uuid     : chr "5d15a281f131932d962b0d409d3d3a4d"
[10:53:34.540] |  :  .    .. ..- attr(*, "source")=List of 5
[10:53:34.540] |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:34.540] |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:34.540] |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:34.540] |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:34.540] |  :  .    .. .. ..$ pid   : int 71859
[10:53:34.540] |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:34.540] |  :  .    .. .. ..$ random: int 2147483647
[10:53:34.540] |  :  .    ..$ r_info           :List of 4
[10:53:34.540] |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:34.540] |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:53:34.540] |  :  .    .. ..$ os           : chr "unix"
[10:53:34.540] |  :  .    .. ..$ os_name      : chr "Linux"
[10:53:34.540] |  :  .    .. ..$ captures_utf8: logi TRUE
[10:53:34.540] |  :  .    ..$ version          : chr "1.8"
[10:53:34.540] |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:53:34.540] |  :  .   $ success: logi TRUE
[10:53:34.540] |  :  .   $ time   : 'proc_time' Named num [1:5] 0.047 0.002 0.048 0 0
[10:53:34.540] |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:34.540] |  :  .   $ tag    : NULL
[10:53:34.567] |  :  .  Received FutureResult
[10:53:34.567] |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:34.567] |  :  .  |  Removed future from position #1
[10:53:34.567] |  :  .  |  Number of registered futures: 0
[10:53:34.567] |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:34.568] |  :  .  Erased future from future backend
[10:53:34.568] |  :  .  result() for ClusterFuture ...
[10:53:34.568] |  :  .  |  result already collected: FutureResult
[10:53:34.568] |  :  .  result() for ClusterFuture ... done
[10:53:34.568] |  :  .  signalConditions() ...
[10:53:34.568] |  :  .  |  include = ‘immediateCondition’
[10:53:34.568] |  :  .  |  exclude = 
[10:53:34.568] |  :  .  |  resignal = FALSE
[10:53:34.569] |  :  .  |  Number of conditions: 1
[10:53:34.569] |  :  .  signalConditions() ... done
[10:53:34.569] |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:34.569] |  result() for ClusterFuture ... done
[10:53:34.569] |  result() for ClusterFuture ...
[10:53:34.569] |  :  result already collected: FutureResult
[10:53:34.569] |  result() for ClusterFuture ... done
[10:53:34.569] |  signalConditions() ...
[10:53:34.569] |  :  include = ‘immediateCondition’
[10:53:34.570] |  :  exclude = 
[10:53:34.570] |  :  resignal = FALSE
[10:53:34.570] |  :  Number of conditions: 1
[10:53:34.570] |  signalConditions() ... done
[10:53:34.570] |  Future state: ‘finished’
[10:53:34.570] |  result() for ClusterFuture ...
[10:53:34.570] |  :  result already collected: FutureResult
[10:53:34.570] |  result() for ClusterFuture ... done
[10:53:34.571] |  signalConditions() ...
[10:53:34.571] |  :  include = ‘condition’
[10:53:34.571] |  :  exclude = ‘immediateCondition’
[10:53:34.571] |  :  resignal = TRUE
[10:53:34.571] |  :  Number of conditions: 1
[10:53:34.571] |  :  Condition #1: ‘simpleError’, ‘error’, ‘condition’
[10:53:34.571] |  signalConditions() ... done
List of 1
 $ res: 'try-error' chr "Error in eval(quote({ : object 'a' not found\n"
  ..- attr(*, "condition")=List of 3
  .. ..$ message    : chr "object 'a' not found"
  .. ..$ call       : language eval(quote({     { ...
  .. ..$ future.info:List of 5
  .. .. ..$ condition:List of 2
  .. .. .. ..$ message: chr "object 'a' not found"
  .. .. .. ..$ call   : language eval(quote({     { ...
  .. .. .. ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
  .. .. ..$ calls    :List of 24
  .. .. .. ..$ : language future:::testme("globals,tricky")
  .. .. .. ..$ : language source(file.path(path, "run.R"))
  .. .. .. ..$ : language withVisible(eval(ei, envir))
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language source(testme[["script"]], echo = TRUE)
  .. .. .. ..$ : language withVisible(eval(ei, envir))
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language y %<-% {     b <- a ...
  .. .. .. ..$ : language futureAssignInternal(target, expr, envir = envir, substitute = FALSE)
  .. .. .. ..$ : language futureAssign(name, expr, envir = envir, assign.env = assign.env, substitute = FALSE)
  .. .. .. ..$ : language do.call(future::future, args = future.args, envir = envir)
  .. .. .. ..$ : language (function (expr, envir = parent.frame(), substitute = TRUE, lazy = FALSE,      seed = FALSE, globals = TRUE, pack| __truncated__ ...
  .. .. .. ..$ : language Future(expr, substitute = FALSE, envir = envir, lazy = TRUE, seed = seed,      globals = globals, packages = pack| __truncated__ ...
  .. .. .. ..$ : language eval(expr, envir = globalenv())
  .. .. .. ..$ : language eval(expr, envir = globalenv())
  .. .. .. ..$ : language local({     { ...
  .. .. .. ..$ : language eval.parent(substitute(eval(quote(expr), envir)))
  .. .. .. ..$ : language eval(expr, p)
  .. .. .. ..$ : language eval(expr, p)
  .. .. .. ..$ : language eval(quote({     { ...
  .. .. .. ..$ : language eval(quote({     { ...
  .. .. .. ..$ : language eval(quote({     { ...
  .. .. ..$ session  :List of 6
  .. .. .. ..$ r         :List of 14
  .. .. .. .. ..$ platform      : chr "x86_64-pc-linux-gnu"
  .. .. .. .. ..$ arch          : chr "x86_64"
  .. .. .. .. ..$ os            : chr "linux-gnu"
  .. .. .. .. ..$ system        : chr "x86_64, linux-gnu"
  .. .. .. .. ..$ status        : chr ""
  .. .. .. .. ..$ major         : chr "4"
  .. .. .. .. ..$ minor         : chr "5.0"
  .. .. .. .. ..$ year          : chr "2025"
  .. .. .. .. ..$ month         : chr "04"
  .. .. .. .. ..$ day           : chr "11"
  .. .. .. .. ..$ svn rev       : chr "88135"
  .. .. .. .. ..$ language      : chr "R"
  .. .. .. .. ..$ version.string: chr "R version 4.5.0 (2025-04-11)"
  .. .. .. .. ..$ nickname      : chr "How About a Twenty-Six"
  .. .. .. ..$ locale    : chr "LC_CTYPE=en_US.UTF-8;LC_NUMERIC=C;LC_TIME=en_US.UTF-8;LC_COLLATE=en_US.UTF-8;LC_MONETARY=en_US.UTF-8;LC_MESSAGE"| __truncated__
  .. .. .. ..$ rngkind   : chr [1:3] "Mersenne-Twister" "Inversion" "Rejection"
  .. .. .. ..$ namespaces: chr [1:16] "compiler" "parallelly" "graphics" "tools" ...
  .. .. .. ..$ search    : chr [1:10] ".GlobalEnv" "package:future" "package:stats" "package:graphics" ...
  .. .. .. ..$ system    : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
  .. .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
  .. .. ..$ timestamp: POSIXct[1:1], format: "2025-05-06 10:53:34"
  .. .. ..$ signaled : int 1
  .. ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:34.593] |  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:34.593] |  :  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:34.597] |  :  .  globals found: [3] ‘{’, ‘<-’, ‘*’
[10:53:34.597] |  :  Searching for globals ... DONE
[10:53:34.598] |  :  Resolving globals: TRUE
[10:53:34.598] |  :  Resolving any globals that are futures ...
[10:53:34.598] |  :  .  globals: [3] ‘{’, ‘<-’, ‘*’
[10:53:34.598] |  :  Resolving any globals that are futures ... DONE
[10:53:34.598] |  :  Search for packages associated with the globals ...
[10:53:34.598] |  :  .  Packages associated with globals: [1] ‘base’
[10:53:34.598] |  :  .  Packages: [1] ‘base’
[10:53:34.598] |  :  Search for packages associated with the globals ... DONE
[10:53:34.599] |  :  Packages after dropping 'base': [0] 
[10:53:34.599] |  :  globals: [0] 
[10:53:34.599] |  :  packages: [0] 
[10:53:34.599] |  getGlobalsAndPackages() ... done
[10:53:34.599] |  run() for Future (‘Future’) ...
[10:53:34.599] |  :  state: ‘created’
[10:53:34.599] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:34.599] |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:34.600] |  :  Using MultisessionFutureBackend ...
[10:53:34.600] |  :  .  Launching futures ...
[10:53:34.600] |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:53:34.600] |  :  .  |  :  Workers: [n=2]
[10:53:34.600] |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:34.602] |  :  .  |  :  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:34.602] |  :  .  |  :  requestWorker() ...
[10:53:34.602] |  :  .  |  :  .  requestNode() ...
[10:53:34.602] |  :  .  |  :  .  |  Number of workers: 2
[10:53:34.602] |  :  .  |  :  .  |  Polling for a free worker ...
[10:53:34.602] |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:34.602] |  :  .  |  :  .  |  :  .  Listing all futures
[10:53:34.602] |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:53:34.602] |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:34.602] |  :  .  |  :  .  |  :  Total time: 0
[10:53:34.603] |  :  .  |  :  .  |  Polling for a free worker ... done
[10:53:34.603] |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:34.603] |  :  .  |  :  .  |  :  Listing all futures
[10:53:34.603] |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:53:34.603] |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:34.603] |  :  .  |  :  .  |  Index of first available worker: 1
[10:53:34.603] |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:53:34.644] |  :  .  |  :  .  |  :  Worker is functional
[10:53:34.644] |  :  .  |  :  .  |  requestNode() ... done
[10:53:34.644] |  :  .  |  :  .  |  cluster node index: 1
[10:53:34.644] |  :  .  |  :  .  requestWorker() ... done
[10:53:34.645] |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:53:34.645] |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:53:34.645] |  :  .  |  :  .  launchFuture() ...
[10:53:34.645] |  :  .  |  :  .  |  cluster node index: 1
[10:53:34.645] |  :  .  |  :  .  |  getFutureData() ...
[10:53:34.645] |  :  .  |  :  .  |  :  getFutureCore() ...
[10:53:34.645] |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:34.646] |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:53:34.646] |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:53:34.646] |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:53:34.646] |  :  .  |  :  .  |  :  getFutureContext() ...
[10:53:34.646] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:34.646] |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:34.646] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:34.646] |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:34.646] |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:53:34.646] |  :  .  |  :  .  |  getFutureData() ... done
[10:53:34.647] |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:34.647] |  :  .  |  :  .  |  :  Appended future to position #1
[10:53:34.647] |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:53:34.647] |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:34.647] |  :  .  |  :  .  launchFuture() ... done
[10:53:34.647] |  :  .  |  :  .  MultisessionFuture started
[10:53:34.647] |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:53:34.647] |  :  .  |  Launching futures ... done
[10:53:34.647] |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:34.648] |  :  .  Using MultisessionFutureBackend ... done
[10:53:34.648] |  :  run() for Future (‘MultisessionFuture’) ... done
[10:53:34.648] |  :  result() for ClusterFuture ...
[10:53:34.648] |  :  .  assertValidConnection() ...
[10:53:34.648] |  :  .  |  cluster node index: 1
[10:53:34.648] |  :  .  assertValidConnection() ... done
[10:53:34.648] |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:53:34.649] |  :  .  |  cluster node index: 1
[10:53:34.690] |  :  .  |  [1] TRUE
[10:53:34.691] |  :  .  |  received data:
[10:53:34.691] |  :  .  |  List of 5
[10:53:34.691] |  :  .  |   $ type   : chr "VALUE"
[10:53:34.691] |  :  .  |   $ value  :List of 13
[10:53:34.691] |  :  .  |    ..$ value            : NULL
[10:53:34.691] |  :  .  |    ..$ visible          : logi TRUE
[10:53:34.691] |  :  .  |    ..$ stdout           : chr ""
[10:53:34.691] |  :  .  |    ..$ conditions       :List of 1
[10:53:34.691] |  :  .  |    .. ..$ :List of 5
[10:53:34.691] |  :  .  |    .. .. ..$ condition:List of 2
[10:53:34.691] |  :  .  |    .. .. .. ..$ message: chr "object 'a' not found"
[10:53:34.691] |  :  .  |    .. .. .. ..$ call   : language eval(quote({     { ...
[10:53:34.691] |  :  .  |    .. .. .. ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
[10:53:34.691] |  :  .  |    .. .. ..$ calls    :List of 9
[10:53:34.691] |  :  .  |    .. .. .. ..$ : language eval(expr, envir = globalenv())
[10:53:34.691] |  :  .  |    .. .. .. ..$ : language eval(expr, envir = globalenv())
[10:53:34.691] |  :  .  |    .. .. .. ..$ : language local({     { ...
[10:53:34.691] |  :  .  |    .. .. .. ..$ : language eval.parent(substitute(eval(quote(expr), envir)))
[10:53:34.691] |  :  .  |    .. .. .. ..$ : language eval(expr, p)
[10:53:34.691] |  :  .  |    .. .. .. ..$ : language eval(expr, p)
[10:53:34.691] |  :  .  |    .. .. .. ..$ : language eval(quote({     { ...
[10:53:34.691] |  :  .  |    .. .. .. ..$ : language eval(quote({     { ...
[10:53:34.691] |  :  .  |    .. .. .. ..$ : language eval(quote({     { ...
[10:53:34.691] |  :  .  |    .. .. ..$ session  :List of 6
[10:53:34.691] |  :  .  |    .. .. .. ..$ r         :List of 14
[10:53:34.691] |  :  .  |    .. .. .. .. ..$ platform      : chr "x86_64-pc-linux-gnu"
[10:53:34.691] |  :  .  |    .. .. .. .. ..$ arch          : chr "x86_64"
[10:53:34.691] |  :  .  |    .. .. .. .. ..$ os            : chr "linux-gnu"
[10:53:34.691] |  :  .  |    .. .. .. .. ..$ system        : chr "x86_64, linux-gnu"
[10:53:34.691] |  :  .  |    .. .. .. .. ..$ status        : chr ""
[10:53:34.691] |  :  .  |    .. .. .. .. ..$ major         : chr "4"
[10:53:34.691] |  :  .  |    .. .. .. .. ..$ minor         : chr "5.0"
[10:53:34.691] |  :  .  |    .. .. .. .. ..$ year          : chr "2025"
[10:53:34.691] |  :  .  |    .. .. .. .. ..$ month         : chr "04"
[10:53:34.691] |  :  .  |    .. .. .. .. ..$ day           : chr "11"
[10:53:34.691] |  :  .  |    .. .. .. .. ..$ svn rev       : chr "88135"
[10:53:34.691] |  :  .  |    .. .. .. .. ..$ language      : chr "R"
[10:53:34.691] |  :  .  |    .. .. .. .. ..$ version.string: chr "R version 4.5.0 (2025-04-11)"
[10:53:34.691] |  :  .  |    .. .. .. .. ..$ nickname      : chr "How About a Twenty-Six"
[10:53:34.691] |  :  .  |    .. .. .. ..$ locale    : chr "LC_CTYPE=en_US.UTF-8;LC_NUMERIC=C;LC_TIME=en_US.UTF-8;LC_COLLATE=en_US.UTF-8;LC_MONETARY=en_US.UTF-8;LC_MESSAGE"| __truncated__
[10:53:34.691] |  :  .  |    .. .. .. ..$ rngkind   : chr [1:3] "Mersenne-Twister" "Inversion" "Rejection"
[10:53:34.691] |  :  .  |    .. .. .. ..$ namespaces: chr [1:16] "compiler" "parallelly" "graphics" "tools" ...
[10:53:34.691] |  :  .  |    .. .. .. ..$ search    : chr [1:10] ".GlobalEnv" "package:future" "package:stats" "package:graphics" ...
[10:53:34.691] |  :  .  |    .. .. .. ..$ system    : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:34.691] |  :  .  |    .. .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:34.691] |  :  .  |    .. .. ..$ timestamp: POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:34.691] |  :  .  |    .. .. ..$ signaled : int 0
[10:53:34.691] |  :  .  |    ..$ rng              : logi FALSE
[10:53:34.691] |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:53:34.691] |  :  .  |    ..$ misuseConnections:List of 3
[10:53:34.691] |  :  .  |    .. ..$ added   : NULL
[10:53:34.691] |  :  .  |    .. ..$ removed : NULL
[10:53:34.691] |  :  .  |    .. ..$ replaced: NULL
[10:53:34.691] |  :  .  |    ..$ misuseDevices    : NULL
[10:53:34.691] |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:34.691] |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:34.691] |  :  .  |    ..$ session_uuid     : chr "5d15a281f131932d962b0d409d3d3a4d"
[10:53:34.691] |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:53:34.691] |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:34.691] |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:34.691] |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:34.691] |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:34.691] |  :  .  |    .. .. ..$ pid   : int 71859
[10:53:34.691] |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:34.691] |  :  .  |    .. .. ..$ random: int 2147483647
[10:53:34.691] |  :  .  |    ..$ r_info           :List of 4
[10:53:34.691] |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:34.691] |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:53:34.691] |  :  .  |    .. ..$ os           : chr "unix"
[10:53:34.691] |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:53:34.691] |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:53:34.691] |  :  .  |    ..$ version          : chr "1.8"
[10:53:34.691] |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:53:34.691] |  :  .  |   $ success: logi TRUE
[10:53:34.691] |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:53:34.691] |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:34.691] |  :  .  |   $ tag    : NULL
[10:53:34.711] |  :  .  |  Received FutureResult
[10:53:34.711] |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:34.711] |  :  .  |  :  Removed future from position #1
[10:53:34.711] |  :  .  |  :  Number of registered futures: 0
[10:53:34.711] |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:34.712] |  :  .  |  Erased future from future backend
[10:53:34.712] |  :  .  |  result() for ClusterFuture ...
[10:53:34.712] |  :  .  |  :  result already collected: FutureResult
[10:53:34.712] |  :  .  |  result() for ClusterFuture ... done
[10:53:34.712] |  :  .  |  signalConditions() ...
[10:53:34.712] |  :  .  |  :  include = ‘immediateCondition’
[10:53:34.712] |  :  .  |  :  exclude = 
[10:53:34.712] |  :  .  |  :  resignal = FALSE
[10:53:34.712] |  :  .  |  :  Number of conditions: 1
[10:53:34.712] |  :  .  |  signalConditions() ... done
[10:53:34.712] |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:34.713] |  :  result() for ClusterFuture ... done
[10:53:34.713] |  :  result() for ClusterFuture ...
[10:53:34.713] |  :  .  result already collected: FutureResult
[10:53:34.713] |  :  result() for ClusterFuture ... done
[10:53:34.713] |  :  signalConditions() ...
[10:53:34.713] |  :  .  include = ‘immediateCondition’
[10:53:34.713] |  :  .  exclude = 
[10:53:34.713] |  :  .  resignal = FALSE
[10:53:34.713] |  :  .  Number of conditions: 1
[10:53:34.713] |  :  signalConditions() ... done
[10:53:34.714] |  :  Future state: ‘finished’
[10:53:34.714] |  :  result() for ClusterFuture ...
[10:53:34.714] |  :  .  result already collected: FutureResult
[10:53:34.714] |  :  result() for ClusterFuture ... done
[10:53:34.714] |  :  signalConditions() ...
[10:53:34.714] |  :  .  include = ‘condition’
[10:53:34.714] |  :  .  exclude = ‘immediateCondition’
[10:53:34.714] |  :  .  resignal = TRUE
[10:53:34.714] |  :  .  Number of conditions: 1
[10:53:34.714] |  :  .  Condition #1: ‘simpleError’, ‘error’, ‘condition’
[10:53:34.715] |  :  signalConditions() ... done
List of 1
 $ res: 'try-error' chr "Error in eval(quote({ : object 'a' not found\n"
  ..- attr(*, "condition")=List of 3
  .. ..$ message    : chr "object 'a' not found"
  .. ..$ call       : language eval(quote({     { ...
  .. ..$ future.info:List of 5
  .. .. ..$ condition:List of 2
  .. .. .. ..$ message: chr "object 'a' not found"
  .. .. .. ..$ call   : language eval(quote({     { ...
  .. .. .. ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
  .. .. ..$ calls    :List of 27
  .. .. .. ..$ : language future:::testme("globals,tricky")
  .. .. .. ..$ : language source(file.path(path, "run.R"))
  .. .. .. ..$ : language withVisible(eval(ei, envir))
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language source(testme[["script"]], echo = TRUE)
  .. .. .. ..$ : language withVisible(eval(ei, envir))
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language y %<-% {     b <- a ...
  .. .. .. ..$ : language eval(fassignment, envir = envir, enclos = baseenv())
  .. .. .. ..$ : language eval(fassignment, envir = envir, enclos = baseenv())
  .. .. .. ..$ : language y %<-% {     b <- a ...
  .. .. .. ..$ : language futureAssignInternal(target, expr, envir = envir, substitute = FALSE)
  .. .. .. ..$ : language futureAssign(name, expr, envir = envir, assign.env = assign.env, substitute = FALSE)
  .. .. .. ..$ : language do.call(future::future, args = future.args, envir = envir)
  .. .. .. ..$ : language (function (expr, envir = parent.frame(), substitute = TRUE, lazy = FALSE,      seed = FALSE, globals = TRUE, pack| __truncated__ ...
  .. .. .. ..$ : language Future(expr, substitute = FALSE, envir = envir, lazy = TRUE, seed = seed,      globals = globals, packages = pack| __truncated__ ...
  .. .. .. ..$ : language eval(expr, envir = globalenv())
  .. .. .. ..$ : language eval(expr, envir = globalenv())
  .. .. .. ..$ : language local({     { ...
  .. .. .. ..$ : language eval.parent(substitute(eval(quote(expr), envir)))
  .. .. .. ..$ : language eval(expr, p)
  .. .. .. ..$ : language eval(expr, p)
  .. .. .. ..$ : language eval(quote({     { ...
  .. .. .. ..$ : language eval(quote({     { ...
  .. .. .. ..$ : language eval(quote({     { ...
  .. .. ..$ session  :List of 6
  .. .. .. ..$ r         :List of 14
  .. .. .. .. ..$ platform      : chr "x86_64-pc-linux-gnu"
  .. .. .. .. ..$ arch          : chr "x86_64"
  .. .. .. .. ..$ os            : chr "linux-gnu"
  .. .. .. .. ..$ system        : chr "x86_64, linux-gnu"
  .. .. .. .. ..$ status        : chr ""
  .. .. .. .. ..$ major         : chr "4"
  .. .. .. .. ..$ minor         : chr "5.0"
  .. .. .. .. ..$ year          : chr "2025"
  .. .. .. .. ..$ month         : chr "04"
  .. .. .. .. ..$ day           : chr "11"
  .. .. .. .. ..$ svn rev       : chr "88135"
  .. .. .. .. ..$ language      : chr "R"
  .. .. .. .. ..$ version.string: chr "R version 4.5.0 (2025-04-11)"
  .. .. .. .. ..$ nickname      : chr "How About a Twenty-Six"
  .. .. .. ..$ locale    : chr "LC_CTYPE=en_US.UTF-8;LC_NUMERIC=C;LC_TIME=en_US.UTF-8;LC_COLLATE=en_US.UTF-8;LC_MONETARY=en_US.UTF-8;LC_MESSAGE"| __truncated__
  .. .. .. ..$ rngkind   : chr [1:3] "Mersenne-Twister" "Inversion" "Rejection"
  .. .. .. ..$ namespaces: chr [1:16] "compiler" "parallelly" "graphics" "tools" ...
  .. .. .. ..$ search    : chr [1:10] ".GlobalEnv" "package:future" "package:stats" "package:graphics" ...
  .. .. .. ..$ system    : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
  .. .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
  .. .. ..$ timestamp: POSIXct[1:1], format: "2025-05-06 10:53:34"
  .. .. ..$ signaled : int 1
  .. ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:34.732] |  :  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:34.732] |  :  .  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:34.734] |  :  .  |  globals found: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:34.734] |  :  .  Searching for globals ... DONE
[10:53:34.734] |  :  .  Resolving globals: TRUE
[10:53:34.734] |  :  .  Resolving any globals that are futures ...
[10:53:34.734] |  :  .  |  globals: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:34.734] |  :  .  Resolving any globals that are futures ... DONE
[10:53:34.734] |  :  .  Search for packages associated with the globals ...
[10:53:34.735] |  :  .  |  Packages associated with globals: [1] ‘base’
[10:53:34.735] |  :  .  |  Packages: [1] ‘base’
[10:53:34.735] |  :  .  Search for packages associated with the globals ... DONE
[10:53:34.735] |  :  .  Resolving futures part of globals (recursively) ...
[10:53:34.735] |  :  .  |  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:34.736] |  :  .  |  :  recursive: 99
[10:53:34.736] |  :  .  |  :  length: 1
[10:53:34.736] |  :  .  |  :  elements: ‘ii’
[10:53:34.736] |  :  .  |  :  'obj' is atomic
[10:53:34.736] |  :  .  |  :  length: 0 (resolved future 1)
[10:53:34.736] |  :  .  |  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:34.736] |  :  .  |  globals: [1] ‘ii’
[10:53:34.736] |  :  .  Resolving futures part of globals (recursively) ... DONE
[10:53:34.736] |  :  .  Packages after dropping 'base': [0] 
[10:53:34.736] |  :  .  globals: [1] ‘ii’
[10:53:34.737] |  :  .  packages: [0] 
[10:53:34.737] |  :  getGlobalsAndPackages() ... done
[10:53:34.737] |  :  run() for Future (‘Future’) ...
[10:53:34.737] |  :  .  state: ‘created’
[10:53:34.737] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:34.737] |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:34.737] |  :  .  Using MultisessionFutureBackend ...
[10:53:34.737] |  :  .  |  Launching futures ...
[10:53:34.738] |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:53:34.738] |  :  .  |  :  .  Workers: [n=2]
[10:53:34.738] |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:34.739] |  :  .  |  :  .  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:34.739] |  :  .  |  :  .  requestWorker() ...
[10:53:34.739] |  :  .  |  :  .  |  requestNode() ...
[10:53:34.740] |  :  .  |  :  .  |  :  Number of workers: 2
[10:53:34.740] |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:53:34.740] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:34.740] |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:53:34.740] |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:53:34.740] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:34.740] |  :  .  |  :  .  |  :  .  Total time: 0
[10:53:34.740] |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:53:34.740] |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:34.740] |  :  .  |  :  .  |  :  .  Listing all futures
[10:53:34.741] |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:53:34.741] |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:34.741] |  :  .  |  :  .  |  :  Index of first available worker: 1
[10:53:34.741] |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:53:34.821] |  :  .  |  :  .  |  :  .  Worker is functional
[10:53:34.821] |  :  .  |  :  .  |  :  requestNode() ... done
[10:53:34.822] |  :  .  |  :  .  |  :  cluster node index: 1
[10:53:34.822] |  :  .  |  :  .  |  requestWorker() ... done
[10:53:34.822] |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:53:34.822] |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:53:34.822] |  :  .  |  :  .  |  launchFuture() ...
[10:53:34.822] |  :  .  |  :  .  |  :  cluster node index: 1
[10:53:34.823] |  :  .  |  :  .  |  :  getFutureData() ...
[10:53:34.823] |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:53:34.823] |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:53:34.823] |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:53:34.823] |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:53:34.823] |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:53:34.823] |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:53:34.823] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:34.823] |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:53:34.823] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:34.824] |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:53:34.824] |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:53:34.824] |  :  .  |  :  .  |  :  getFutureData() ... done
[10:53:34.824] |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:34.824] |  :  .  |  :  .  |  :  .  Appended future to position #1
[10:53:34.824] |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:53:34.824] |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:34.824] |  :  .  |  :  .  |  launchFuture() ... done
[10:53:34.825] |  :  .  |  :  .  |  MultisessionFuture started
[10:53:34.825] |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:53:34.825] |  :  .  |  :  Launching futures ... done
[10:53:34.825] |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:34.825] |  :  .  |  Using MultisessionFutureBackend ... done
[10:53:34.825] |  :  .  run() for Future (‘MultisessionFuture’) ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:34.826] |  :  .  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:34.826] |  :  .  |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:34.827] |  :  .  |  :  globals found: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:34.827] |  :  .  |  Searching for globals ... DONE
[10:53:34.827] |  :  .  |  Resolving globals: TRUE
[10:53:34.828] |  :  .  |  Resolving any globals that are futures ...
[10:53:34.828] |  :  .  |  :  globals: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:34.828] |  :  .  |  Resolving any globals that are futures ... DONE
[10:53:34.828] |  :  .  |  Search for packages associated with the globals ...
[10:53:34.828] |  :  .  |  :  Packages associated with globals: [1] ‘base’
[10:53:34.828] |  :  .  |  :  Packages: [1] ‘base’
[10:53:34.828] |  :  .  |  Search for packages associated with the globals ... DONE
[10:53:34.829] |  :  .  |  Resolving futures part of globals (recursively) ...
[10:53:34.829] |  :  .  |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:34.829] |  :  .  |  :  .  recursive: 99
[10:53:34.829] |  :  .  |  :  .  length: 1
[10:53:34.829] |  :  .  |  :  .  elements: ‘ii’
[10:53:34.829] |  :  .  |  :  .  'obj' is atomic
[10:53:34.829] |  :  .  |  :  .  length: 0 (resolved future 1)
[10:53:34.829] |  :  .  |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:34.829] |  :  .  |  :  globals: [1] ‘ii’
[10:53:34.830] |  :  .  |  Resolving futures part of globals (recursively) ... DONE
[10:53:34.830] |  :  .  |  Packages after dropping 'base': [0] 
[10:53:34.830] |  :  .  |  globals: [1] ‘ii’
[10:53:34.830] |  :  .  |  packages: [0] 
[10:53:34.830] |  :  .  getGlobalsAndPackages() ... done
[10:53:34.830] |  :  .  run() for Future (‘Future’) ...
[10:53:34.830] |  :  .  |  state: ‘created’
[10:53:34.830] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:34.831] |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:34.831] |  :  .  |  Using MultisessionFutureBackend ...
[10:53:34.831] |  :  .  |  :  Launching futures ...
[10:53:34.831] |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:53:34.831] |  :  .  |  :  .  |  Workers: [n=2]
[10:53:34.831] |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:34.833] |  :  .  |  :  .  |  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:34.833] |  :  .  |  :  .  |  requestWorker() ...
[10:53:34.833] |  :  .  |  :  .  |  :  requestNode() ...
[10:53:34.833] |  :  .  |  :  .  |  :  .  Number of workers: 2
[10:53:34.833] |  :  .  |  :  .  |  :  .  Polling for a free worker ...
[10:53:34.833] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:34.833] |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:53:34.833] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:53:34.833] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:34.834] |  :  .  |  :  .  |  :  .  |  Total time: 0
[10:53:34.834] |  :  .  |  :  .  |  :  .  Polling for a free worker ... done
[10:53:34.834] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:34.834] |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:53:34.834] |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:53:34.834] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:34.834] |  :  .  |  :  .  |  :  .  Index of first available worker: 2
[10:53:34.834] |  :  .  |  :  .  |  :  .  Validate that the worker is functional ...
[10:53:34.900] |  :  .  |  :  .  |  :  .  |  Worker is functional
[10:53:34.900] |  :  .  |  :  .  |  :  .  requestNode() ... done
[10:53:34.900] |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:53:34.901] |  :  .  |  :  .  |  :  requestWorker() ... done
[10:53:34.901] |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ...
[10:53:34.901] |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:53:34.901] |  :  .  |  :  .  |  :  launchFuture() ...
[10:53:34.901] |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:53:34.902] |  :  .  |  :  .  |  :  .  getFutureData() ...
[10:53:34.902] |  :  .  |  :  .  |  :  .  |  getFutureCore() ...
[10:53:34.902] |  :  .  |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:53:34.902] |  :  .  |  :  .  |  :  .  |  getFutureCore() ... done
[10:53:34.902] |  :  .  |  :  .  |  :  .  |  getFutureCapture() ...
[10:53:34.902] |  :  .  |  :  .  |  :  .  |  getFutureCapture() ... done
[10:53:34.902] |  :  .  |  :  .  |  :  .  |  getFutureContext() ...
[10:53:34.902] |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:34.902] |  :  .  |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:53:34.903] |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:34.903] |  :  .  |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:53:34.903] |  :  .  |  :  .  |  :  .  |  getFutureContext() ... done
[10:53:34.903] |  :  .  |  :  .  |  :  .  getFutureData() ... done
[10:53:34.903] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:34.903] |  :  .  |  :  .  |  :  .  |  Appended future to position #2
[10:53:34.903] |  :  .  |  :  .  |  :  .  |  Number of registered futures: 2
[10:53:34.904] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:34.904] |  :  .  |  :  .  |  :  launchFuture() ... done
[10:53:34.904] |  :  .  |  :  .  |  :  MultisessionFuture started
[10:53:34.904] |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:53:34.904] |  :  .  |  :  .  Launching futures ... done
[10:53:34.904] |  :  .  |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:34.904] |  :  .  |  :  Using MultisessionFutureBackend ... done
[10:53:34.904] |  :  .  |  run() for Future (‘MultisessionFuture’) ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:34.905] |  :  .  |  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:34.905] |  :  .  |  :  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:34.907] |  :  .  |  :  .  globals found: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:34.907] |  :  .  |  :  Searching for globals ... DONE
[10:53:34.907] |  :  .  |  :  Resolving globals: TRUE
[10:53:34.907] |  :  .  |  :  Resolving any globals that are futures ...
[10:53:34.907] |  :  .  |  :  .  globals: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:34.907] |  :  .  |  :  Resolving any globals that are futures ... DONE
[10:53:34.907] |  :  .  |  :  Search for packages associated with the globals ...
[10:53:34.907] |  :  .  |  :  .  Packages associated with globals: [1] ‘base’
[10:53:34.908] |  :  .  |  :  .  Packages: [1] ‘base’
[10:53:34.908] |  :  .  |  :  Search for packages associated with the globals ... DONE
[10:53:34.908] |  :  .  |  :  Resolving futures part of globals (recursively) ...
[10:53:34.908] |  :  .  |  :  .  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:34.908] |  :  .  |  :  .  |  recursive: 99
[10:53:34.908] |  :  .  |  :  .  |  length: 1
[10:53:34.908] |  :  .  |  :  .  |  elements: ‘ii’
[10:53:34.909] |  :  .  |  :  .  |  'obj' is atomic
[10:53:34.909] |  :  .  |  :  .  |  length: 0 (resolved future 1)
[10:53:34.909] |  :  .  |  :  .  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:34.909] |  :  .  |  :  .  globals: [1] ‘ii’
[10:53:34.909] |  :  .  |  :  Resolving futures part of globals (recursively) ... DONE
[10:53:34.909] |  :  .  |  :  Packages after dropping 'base': [0] 
[10:53:34.909] |  :  .  |  :  globals: [1] ‘ii’
[10:53:34.909] |  :  .  |  :  packages: [0] 
[10:53:34.909] |  :  .  |  getGlobalsAndPackages() ... done
[10:53:34.910] |  :  .  |  run() for Future (‘Future’) ...
[10:53:34.910] |  :  .  |  :  state: ‘created’
[10:53:34.910] |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:34.910] |  :  .  |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:34.910] |  :  .  |  :  Using MultisessionFutureBackend ...
[10:53:34.910] |  :  .  |  :  .  Launching futures ...
[10:53:34.910] |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:53:34.910] |  :  .  |  :  .  |  :  Workers: [n=2]
[10:53:34.911] |  :  .  |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:34.912] |  :  .  |  :  .  |  :  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:34.912] |  :  .  |  :  .  |  :  requestWorker() ...
[10:53:34.912] |  :  .  |  :  .  |  :  .  requestNode() ...
[10:53:34.912] |  :  .  |  :  .  |  :  .  |  Number of workers: 2
[10:53:34.913] |  :  .  |  :  .  |  :  .  |  Polling for a free worker ...
[10:53:34.913] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:34.913] |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:53:34.913] |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 2
[10:53:34.913] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:34.913] |  :  .  |  :  .  |  :  .  |  :  Poll #1 (0): usedNodes() = 2, workers = 2
[10:53:34.923] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'collect-first', earlySignal = 1) ...
[10:53:34.923] |  :  .  |  :  .  |  :  .  |  :  .  collectValues('workers-674da372c1cdbb2f9cb15750fed89f93', firstOnly = TRUE) ...
[10:53:34.924] |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ...
[10:53:34.924] |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:53:34.924] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:53:34.925] |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:53:34.925] |  :  .  |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:53:34.925] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:53:34.925] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  [1] TRUE
[10:53:34.925] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  received data:
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  List of 5
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ type   : chr "VALUE"
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ value  :List of 13
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ value            : NULL
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ stdout           : chr ""
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ conditions       :List of 1
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ :List of 5
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ condition:List of 2
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..$ message: chr "object 'a' not found"
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..$ call   : language eval(quote({     { ...
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ calls    :List of 9
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..$ : language eval(expr, envir = globalenv())
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..$ : language eval(expr, envir = globalenv())
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..$ : language local({     { ...
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..$ : language eval.parent(substitute(eval(quote(expr), envir)))
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..$ : language eval(expr, p)
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..$ : language eval(expr, p)
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..$ : language eval(quote({     { ...
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..$ : language eval(quote({     { ...
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..$ : language eval(quote({     { ...
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ session  :List of 6
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..$ r         :List of 14
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. ..$ platform      : chr "x86_64-pc-linux-gnu"
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. ..$ arch          : chr "x86_64"
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. ..$ os            : chr "linux-gnu"
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. ..$ system        : chr "x86_64, linux-gnu"
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. ..$ status        : chr ""
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. ..$ major         : chr "4"
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. ..$ minor         : chr "5.0"
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. ..$ year          : chr "2025"
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. ..$ month         : chr "04"
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. ..$ day           : chr "11"
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. ..$ svn rev       : chr "88135"
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. ..$ language      : chr "R"
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. ..$ version.string: chr "R version 4.5.0 (2025-04-11)"
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. ..$ nickname      : chr "How About a Twenty-Six"
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..$ locale    : chr "LC_CTYPE=en_US.UTF-8;LC_NUMERIC=C;LC_TIME=en_US.UTF-8;LC_COLLATE=en_US.UTF-8;LC_MONETARY=en_US.UTF-8;LC_MESSAGE"| __truncated__
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..$ rngkind   : chr [1:3] "Mersenne-Twister" "Inversion" "Rejection"
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..$ namespaces: chr [1:16] "compiler" "parallelly" "graphics" "tools" ...
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..$ search    : chr [1:10] ".GlobalEnv" "package:future" "package:stats" "package:graphics" ...
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..$ system    : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ timestamp: POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ signaled : int 0
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ added   : NULL
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ removed : NULL
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ replaced: NULL
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ session_uuid     : chr "5d15a281f131932d962b0d409d3d3a4d"
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ pid   : int 71859
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ r_info           :List of 4
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ success: logi TRUE
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.005 0 0.005 0 0
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ tag    : NULL
[10:53:34.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Received FutureResult
[10:53:34.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:34.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Removed future from position #1
[10:53:34.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:53:34.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:34.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Erased future from future backend
[10:53:34.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:34.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:53:34.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:53:34.947] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditions() ...
[10:53:34.947] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  include = ‘immediateCondition’
[10:53:34.947] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  exclude = 
[10:53:34.947] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  resignal = FALSE
[10:53:34.947] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of conditions: 1
[10:53:34.947] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditions() ... done
[10:53:34.947] |  :  .  |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:34.947] |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ... done
[10:53:34.947] |  :  .  |  :  .  |  :  .  |  :  .  |  Future at position #1 is resolved ...
[10:53:34.947] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:34.947] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:34.948] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:34.948] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:34.948] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:34.948] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:34.948] |  :  .  |  :  .  |  :  .  |  :  .  |  :  signalConditions() ...
[10:53:34.948] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  include = ‘immediateCondition’
[10:53:34.948] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  exclude = 
[10:53:34.948] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  resignal = FALSE
[10:53:34.948] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of conditions: 1
[10:53:34.948] |  :  .  |  :  .  |  :  .  |  :  .  |  :  signalConditions() ... done
[10:53:34.949] |  :  .  |  :  .  |  :  .  |  :  .  |  Future at position #1 is resolved ... done
[10:53:34.949] |  :  .  |  :  .  |  :  .  |  :  .  collectValues('workers-674da372c1cdbb2f9cb15750fed89f93', firstOnly = TRUE) ... done
[10:53:34.949] |  :  .  |  :  .  |  :  .  |  :  .  Early signaling of 2 future candidates ...
[10:53:34.949] |  :  .  |  :  .  |  :  .  |  :  .  Number of futures with early signaling requested: 0
[10:53:34.949] |  :  .  |  :  .  |  :  .  |  :  .  Early signaling of 2 future candidates ... done
[10:53:34.949] |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 2
[10:53:34.949] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'collect-first', earlySignal = 1) ... done
[10:53:34.949] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:34.949] |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:53:34.949] |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:53:34.950] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:34.950] |  :  .  |  :  .  |  :  .  |  :  Total time: 0.0365846157073975
[10:53:34.950] |  :  .  |  :  .  |  :  .  |  Polling for a free worker ... done
[10:53:34.950] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:34.950] |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:53:34.950] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:53:34.950] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:34.950] |  :  .  |  :  .  |  :  .  |  Index of first available worker: 1
[10:53:34.950] |  :  .  |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:53:35.029] |  :  .  |  :  .  |  :  .  |  :  Worker is functional
[10:53:35.030] |  :  .  |  :  .  |  :  .  |  requestNode() ... done
[10:53:35.030] |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:53:35.030] |  :  .  |  :  .  |  :  .  requestWorker() ... done
[10:53:35.030] |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:53:35.031] |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:53:35.031] |  :  .  |  :  .  |  :  .  launchFuture() ...
[10:53:35.031] |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:53:35.031] |  :  .  |  :  .  |  :  .  |  getFutureData() ...
[10:53:35.031] |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ...
[10:53:35.031] |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:35.031] |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:53:35.031] |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:53:35.031] |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:53:35.031] |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ...
[10:53:35.032] |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:35.032] |  :  .  |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:35.032] |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:35.032] |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:35.032] |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:53:35.032] |  :  .  |  :  .  |  :  .  |  getFutureData() ... done
[10:53:35.032] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:35.033] |  :  .  |  :  .  |  :  .  |  :  Appended future to position #2
[10:53:35.033] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 2
[10:53:35.033] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:35.033] |  :  .  |  :  .  |  :  .  launchFuture() ... done
[10:53:35.033] |  :  .  |  :  .  |  :  .  MultisessionFuture started
[10:53:35.033] |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:53:35.033] |  :  .  |  :  .  |  Launching futures ... done
[10:53:35.033] |  :  .  |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:35.033] |  :  .  |  :  .  Using MultisessionFutureBackend ... done
[10:53:35.033] |  :  .  |  :  run() for Future (‘MultisessionFuture’) ... done
[10:53:35.034] |  :  .  |  :  result() for ClusterFuture ...
[10:53:35.034] |  :  .  |  :  .  result already collected: FutureResult
[10:53:35.034] |  :  .  |  :  result() for ClusterFuture ... done
[10:53:35.034] |  :  .  |  :  result() for ClusterFuture ...
[10:53:35.034] |  :  .  |  :  .  result already collected: FutureResult
[10:53:35.034] |  :  .  |  :  result() for ClusterFuture ... done
[10:53:35.034] |  :  .  |  :  signalConditions() ...
[10:53:35.034] |  :  .  |  :  .  include = ‘immediateCondition’
[10:53:35.034] |  :  .  |  :  .  exclude = 
[10:53:35.035] |  :  .  |  :  .  resignal = FALSE
[10:53:35.035] |  :  .  |  :  .  Number of conditions: 1
[10:53:35.035] |  :  .  |  :  signalConditions() ... done
[10:53:35.035] |  :  .  |  :  Future state: ‘finished’
[10:53:35.035] |  :  .  |  :  result() for ClusterFuture ...
[10:53:35.035] |  :  .  |  :  .  result already collected: FutureResult
[10:53:35.035] |  :  .  |  :  result() for ClusterFuture ... done
[10:53:35.035] |  :  .  |  :  signalConditions() ...
[10:53:35.035] |  :  .  |  :  .  include = ‘condition’
[10:53:35.035] |  :  .  |  :  .  exclude = ‘immediateCondition’
[10:53:35.036] |  :  .  |  :  .  resignal = TRUE
[10:53:35.036] |  :  .  |  :  .  Number of conditions: 1
[10:53:35.036] |  :  .  |  :  .  Condition #1: ‘simpleError’, ‘error’, ‘condition’
[10:53:35.036] |  :  .  |  :  signalConditions() ... done
List of 1
 $ res: 'try-error' chr "Error in eval(quote({ : object 'a' not found\n"
  ..- attr(*, "condition")=List of 3
  .. ..$ message    : chr "object 'a' not found"
  .. ..$ call       : language eval(quote({     { ...
  .. ..$ future.info:List of 5
  .. .. ..$ condition:List of 2
  .. .. .. ..$ message: chr "object 'a' not found"
  .. .. .. ..$ call   : language eval(quote({     { ...
  .. .. .. ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
  .. .. ..$ calls    :List of 24
  .. .. .. ..$ : language future:::testme("globals,tricky")
  .. .. .. ..$ : language source(file.path(path, "run.R"))
  .. .. .. ..$ : language withVisible(eval(ei, envir))
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language source(testme[["script"]], echo = TRUE)
  .. .. .. ..$ : language withVisible(eval(ei, envir))
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language res[[ii]] %<-% {     b <- a * ii ...
  .. .. .. ..$ : language futureAssignInternal(target, expr, envir = envir, substitute = FALSE)
  .. .. .. ..$ : language futureAssign(name, expr, envir = envir, assign.env = assign.env, substitute = FALSE)
  .. .. .. ..$ : language do.call(future::future, args = future.args, envir = envir)
  .. .. .. ..$ : language (function (expr, envir = parent.frame(), substitute = TRUE, lazy = FALSE,      seed = FALSE, globals = TRUE, pack| __truncated__ ...
  .. .. .. ..$ : language Future(expr, substitute = FALSE, envir = envir, lazy = TRUE, seed = seed,      globals = globals, packages = pack| __truncated__ ...
  .. .. .. ..$ : language eval(expr, envir = globalenv())
  .. .. .. ..$ : language eval(expr, envir = globalenv())
  .. .. .. ..$ : language local({     { ...
  .. .. .. ..$ : language eval.parent(substitute(eval(quote(expr), envir)))
  .. .. .. ..$ : language eval(expr, p)
  .. .. .. ..$ : language eval(expr, p)
  .. .. .. ..$ : language eval(quote({     { ...
  .. .. .. ..$ : language eval(quote({     { ...
  .. .. .. ..$ : language eval(quote({     { ...
  .. .. ..$ session  :List of 6
  .. .. .. ..$ r         :List of 14
  .. .. .. .. ..$ platform      : chr "x86_64-pc-linux-gnu"
  .. .. .. .. ..$ arch          : chr "x86_64"
  .. .. .. .. ..$ os            : chr "linux-gnu"
  .. .. .. .. ..$ system        : chr "x86_64, linux-gnu"
  .. .. .. .. ..$ status        : chr ""
  .. .. .. .. ..$ major         : chr "4"
  .. .. .. .. ..$ minor         : chr "5.0"
  .. .. .. .. ..$ year          : chr "2025"
  .. .. .. .. ..$ month         : chr "04"
  .. .. .. .. ..$ day           : chr "11"
  .. .. .. .. ..$ svn rev       : chr "88135"
  .. .. .. .. ..$ language      : chr "R"
  .. .. .. .. ..$ version.string: chr "R version 4.5.0 (2025-04-11)"
  .. .. .. .. ..$ nickname      : chr "How About a Twenty-Six"
  .. .. .. ..$ locale    : chr "LC_CTYPE=en_US.UTF-8;LC_NUMERIC=C;LC_TIME=en_US.UTF-8;LC_COLLATE=en_US.UTF-8;LC_MONETARY=en_US.UTF-8;LC_MESSAGE"| __truncated__
  .. .. .. ..$ rngkind   : chr [1:3] "Mersenne-Twister" "Inversion" "Rejection"
  .. .. .. ..$ namespaces: chr [1:16] "compiler" "parallelly" "graphics" "tools" ...
  .. .. .. ..$ search    : chr [1:10] ".GlobalEnv" "package:future" "package:stats" "package:graphics" ...
  .. .. .. ..$ system    : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
  .. .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
  .. .. ..$ timestamp: POSIXct[1:1], format: "2025-05-06 10:53:34"
  .. .. ..$ signaled : int 1
  .. ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:35.055] |  :  .  |  :  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:35.056] |  :  .  |  :  .  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:35.057] |  :  .  |  :  .  |  globals found: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:35.057] |  :  .  |  :  .  Searching for globals ... DONE
[10:53:35.057] |  :  .  |  :  .  Resolving globals: TRUE
[10:53:35.058] |  :  .  |  :  .  Resolving any globals that are futures ...
[10:53:35.058] |  :  .  |  :  .  |  globals: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:35.058] |  :  .  |  :  .  Resolving any globals that are futures ... DONE
[10:53:35.058] |  :  .  |  :  .  Search for packages associated with the globals ...
[10:53:35.058] |  :  .  |  :  .  |  Packages associated with globals: [1] ‘base’
[10:53:35.058] |  :  .  |  :  .  |  Packages: [1] ‘base’
[10:53:35.058] |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:53:35.059] |  :  .  |  :  .  Resolving futures part of globals (recursively) ...
[10:53:35.059] |  :  .  |  :  .  |  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:35.059] |  :  .  |  :  .  |  :  recursive: 99
[10:53:35.059] |  :  .  |  :  .  |  :  length: 1
[10:53:35.059] |  :  .  |  :  .  |  :  elements: ‘ii’
[10:53:35.059] |  :  .  |  :  .  |  :  'obj' is atomic
[10:53:35.059] |  :  .  |  :  .  |  :  length: 0 (resolved future 1)
[10:53:35.059] |  :  .  |  :  .  |  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:35.060] |  :  .  |  :  .  |  globals: [1] ‘ii’
[10:53:35.060] |  :  .  |  :  .  Resolving futures part of globals (recursively) ... DONE
[10:53:35.060] |  :  .  |  :  .  Packages after dropping 'base': [0] 
[10:53:35.060] |  :  .  |  :  .  globals: [1] ‘ii’
[10:53:35.060] |  :  .  |  :  .  packages: [0] 
[10:53:35.060] |  :  .  |  :  getGlobalsAndPackages() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:35.061] |  :  .  |  :  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:35.061] |  :  .  |  :  .  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:35.062] |  :  .  |  :  .  |  globals found: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:35.063] |  :  .  |  :  .  Searching for globals ... DONE
[10:53:35.063] |  :  .  |  :  .  Resolving globals: TRUE
[10:53:35.063] |  :  .  |  :  .  Resolving any globals that are futures ...
[10:53:35.063] |  :  .  |  :  .  |  globals: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:35.063] |  :  .  |  :  .  Resolving any globals that are futures ... DONE
[10:53:35.063] |  :  .  |  :  .  Search for packages associated with the globals ...
[10:53:35.063] |  :  .  |  :  .  |  Packages associated with globals: [1] ‘base’
[10:53:35.064] |  :  .  |  :  .  |  Packages: [1] ‘base’
[10:53:35.064] |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:53:35.064] |  :  .  |  :  .  Resolving futures part of globals (recursively) ...
[10:53:35.064] |  :  .  |  :  .  |  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:35.064] |  :  .  |  :  .  |  :  recursive: 99
[10:53:35.064] |  :  .  |  :  .  |  :  length: 1
[10:53:35.064] |  :  .  |  :  .  |  :  elements: ‘ii’
[10:53:35.064] |  :  .  |  :  .  |  :  'obj' is atomic
[10:53:35.065] |  :  .  |  :  .  |  :  length: 0 (resolved future 1)
[10:53:35.065] |  :  .  |  :  .  |  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:35.065] |  :  .  |  :  .  |  globals: [1] ‘ii’
[10:53:35.065] |  :  .  |  :  .  Resolving futures part of globals (recursively) ... DONE
[10:53:35.065] |  :  .  |  :  .  Packages after dropping 'base': [0] 
[10:53:35.065] |  :  .  |  :  .  globals: [1] ‘ii’
[10:53:35.065] |  :  .  |  :  .  packages: [0] 
[10:53:35.065] |  :  .  |  :  getGlobalsAndPackages() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:35.066] |  :  .  |  :  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:35.066] |  :  .  |  :  .  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:35.067] |  :  .  |  :  .  |  globals found: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:35.068] |  :  .  |  :  .  Searching for globals ... DONE
[10:53:35.068] |  :  .  |  :  .  Resolving globals: TRUE
[10:53:35.068] |  :  .  |  :  .  Resolving any globals that are futures ...
[10:53:35.068] |  :  .  |  :  .  |  globals: [4] ‘{’, ‘<-’, ‘*’, ‘ii’
[10:53:35.068] |  :  .  |  :  .  Resolving any globals that are futures ... DONE
[10:53:35.068] |  :  .  |  :  .  Search for packages associated with the globals ...
[10:53:35.068] |  :  .  |  :  .  |  Packages associated with globals: [1] ‘base’
[10:53:35.069] |  :  .  |  :  .  |  Packages: [1] ‘base’
[10:53:35.069] |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:53:35.069] |  :  .  |  :  .  Resolving futures part of globals (recursively) ...
[10:53:35.069] |  :  .  |  :  .  |  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:35.069] |  :  .  |  :  .  |  :  recursive: 99
[10:53:35.069] |  :  .  |  :  .  |  :  length: 1
[10:53:35.069] |  :  .  |  :  .  |  :  elements: ‘ii’
[10:53:35.069] |  :  .  |  :  .  |  :  'obj' is atomic
[10:53:35.070] |  :  .  |  :  .  |  :  length: 0 (resolved future 1)
[10:53:35.070] |  :  .  |  :  .  |  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:35.070] |  :  .  |  :  .  |  globals: [1] ‘ii’
[10:53:35.070] |  :  .  |  :  .  Resolving futures part of globals (recursively) ... DONE
[10:53:35.070] |  :  .  |  :  .  Packages after dropping 'base': [0] 
[10:53:35.070] |  :  .  |  :  .  globals: [1] ‘ii’
[10:53:35.070] |  :  .  |  :  .  packages: [0] 
[10:53:35.070] |  :  .  |  :  getGlobalsAndPackages() ... done
[10:53:35.071] |  :  .  |  :  run() for Future (‘Future’) ...
[10:53:35.071] |  :  .  |  :  .  state: ‘created’
[10:53:35.071] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:35.071] |  :  .  |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:35.071] |  :  .  |  :  .  Using MultisessionFutureBackend ...
[10:53:35.071] |  :  .  |  :  .  |  Launching futures ...
[10:53:35.071] |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:53:35.071] |  :  .  |  :  .  |  :  .  Workers: [n=2]
[10:53:35.071] |  :  .  |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:35.073] |  :  .  |  :  .  |  :  .  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:35.073] |  :  .  |  :  .  |  :  .  requestWorker() ...
[10:53:35.073] |  :  .  |  :  .  |  :  .  |  requestNode() ...
[10:53:35.073] |  :  .  |  :  .  |  :  .  |  :  Number of workers: 2
[10:53:35.073] |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:53:35.074] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:35.074] |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:53:35.074] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 2
[10:53:35.074] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:35.074] |  :  .  |  :  .  |  :  .  |  :  .  Poll #1 (0): usedNodes() = 2, workers = 2
[10:53:35.084] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'collect-first', earlySignal = 1) ...
[10:53:35.084] |  :  .  |  :  .  |  :  .  |  :  .  |  collectValues('workers-674da372c1cdbb2f9cb15750fed89f93', firstOnly = TRUE) ...
[10:53:35.085] |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:53:35.085] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:53:35.085] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:53:35.085] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  [1] TRUE
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  received data:
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  List of 5
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ type   : chr "VALUE"
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ value  :List of 13
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ value            : NULL
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ visible          : logi TRUE
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ stdout           : chr ""
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ conditions       :List of 1
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ :List of 5
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ condition:List of 2
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..$ message: chr "object 'a' not found"
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..$ call   : language eval(quote({     { ...
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ calls    :List of 9
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..$ : language eval(expr, envir = globalenv())
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..$ : language eval(expr, envir = globalenv())
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..$ : language local({     { ...
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..$ : language eval.parent(substitute(eval(quote(expr), envir)))
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..$ : language eval(expr, p)
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..$ : language eval(expr, p)
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..$ : language eval(quote({     { ...
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..$ : language eval(quote({     { ...
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..$ : language eval(quote({     { ...
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ session  :List of 6
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..$ r         :List of 14
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..$ platform      : chr "x86_64-pc-linux-gnu"
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..$ arch          : chr "x86_64"
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..$ os            : chr "linux-gnu"
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..$ system        : chr "x86_64, linux-gnu"
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..$ status        : chr ""
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..$ major         : chr "4"
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..$ minor         : chr "5.0"
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..$ year          : chr "2025"
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..$ month         : chr "04"
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..$ day           : chr "11"
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..$ svn rev       : chr "88135"
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..$ language      : chr "R"
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..$ version.string: chr "R version 4.5.0 (2025-04-11)"
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..$ nickname      : chr "How About a Twenty-Six"
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..$ locale    : chr "LC_CTYPE=en_US.UTF-8;LC_NUMERIC=C;LC_TIME=en_US.UTF-8;LC_COLLATE=en_US.UTF-8;LC_MONETARY=en_US.UTF-8;LC_MESSAGE"| __truncated__
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..$ rngkind   : chr [1:3] "Mersenne-Twister" "Inversion" "Rejection"
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..$ namespaces: chr [1:16] "compiler" "parallelly" "graphics" "tools" ...
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..$ search    : chr [1:10] ".GlobalEnv" "package:future" "package:stats" "package:graphics" ...
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..$ system    : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ timestamp: POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ signaled : int 0
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ rng              : logi FALSE
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseConnections:List of 3
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ added   : NULL
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ removed : NULL
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ replaced: NULL
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseDevices    : NULL
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ session_uuid     : chr "f3771e206c288202d2f9ce09bd7eec68"
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ pid   : int 71858
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ random: int 2147483647
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ r_info           :List of 4
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os           : chr "unix"
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ version          : chr "1.8"
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ success: logi TRUE
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.049 0.004 0.053 0 0
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:35.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ tag    : NULL
[10:53:35.106] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Received FutureResult
[10:53:35.107] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:35.107] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Removed future from position #1
[10:53:35.107] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:53:35.107] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:35.107] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Erased future from future backend
[10:53:35.107] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:35.107] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:53:35.107] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:53:35.107] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditions() ...
[10:53:35.108] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  include = ‘immediateCondition’
[10:53:35.108] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  exclude = 
[10:53:35.108] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  resignal = FALSE
[10:53:35.108] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of conditions: 1
[10:53:35.108] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditions() ... done
[10:53:35.108] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:35.108] |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:53:35.108] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Future at position #1 is resolved ...
[10:53:35.108] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:35.108] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:53:35.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:53:35.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:35.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:53:35.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:53:35.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditions() ...
[10:53:35.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  include = ‘immediateCondition’
[10:53:35.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  exclude = 
[10:53:35.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  resignal = FALSE
[10:53:35.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of conditions: 1
[10:53:35.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditions() ... done
[10:53:35.110] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Future at position #1 is resolved ... done
[10:53:35.110] |  :  .  |  :  .  |  :  .  |  :  .  |  collectValues('workers-674da372c1cdbb2f9cb15750fed89f93', firstOnly = TRUE) ... done
[10:53:35.110] |  :  .  |  :  .  |  :  .  |  :  .  |  Early signaling of 2 future candidates ...
[10:53:35.110] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of futures with early signaling requested: 0
[10:53:35.110] |  :  .  |  :  .  |  :  .  |  :  .  |  Early signaling of 2 future candidates ... done
[10:53:35.110] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 2
[10:53:35.110] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'collect-first', earlySignal = 1) ... done
[10:53:35.110] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:35.110] |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:53:35.110] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:53:35.111] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:35.111] |  :  .  |  :  .  |  :  .  |  :  .  Total time: 0.0366487503051758
[10:53:35.111] |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:53:35.111] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:35.111] |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:53:35.111] |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:53:35.111] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:35.111] |  :  .  |  :  .  |  :  .  |  :  Index of first available worker: 2
[10:53:35.111] |  :  .  |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:53:35.150] |  :  .  |  :  .  |  :  .  |  :  .  Worker is functional
[10:53:35.151] |  :  .  |  :  .  |  :  .  |  :  requestNode() ... done
[10:53:35.151] |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:53:35.151] |  :  .  |  :  .  |  :  .  |  requestWorker() ... done
[10:53:35.151] |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:53:35.151] |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:53:35.151] |  :  .  |  :  .  |  :  .  |  launchFuture() ...
[10:53:35.151] |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:53:35.152] |  :  .  |  :  .  |  :  .  |  :  getFutureData() ...
[10:53:35.152] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:53:35.152] |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:53:35.152] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:53:35.152] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:53:35.152] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:53:35.152] |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:53:35.152] |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:35.152] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:53:35.153] |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:35.153] |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:53:35.153] |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:53:35.153] |  :  .  |  :  .  |  :  .  |  :  getFutureData() ... done
[10:53:35.153] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:35.153] |  :  .  |  :  .  |  :  .  |  :  .  Appended future to position #2
[10:53:35.153] |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 2
[10:53:35.153] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:35.154] |  :  .  |  :  .  |  :  .  |  launchFuture() ... done
[10:53:35.154] |  :  .  |  :  .  |  :  .  |  MultisessionFuture started
[10:53:35.154] |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:53:35.154] |  :  .  |  :  .  |  :  Launching futures ... done
[10:53:35.154] |  :  .  |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:35.154] |  :  .  |  :  .  |  Using MultisessionFutureBackend ... done
[10:53:35.154] |  :  .  |  :  .  run() for Future (‘MultisessionFuture’) ... done
[10:53:35.154] |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:35.154] |  :  .  |  :  .  |  assertValidConnection() ...
[10:53:35.155] |  :  .  |  :  .  |  :  cluster node index: 2
[10:53:35.155] |  :  .  |  :  .  |  assertValidConnection() ... done
[10:53:35.155] |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:53:35.155] |  :  .  |  :  .  |  :  cluster node index: 2
[10:53:35.198] |  :  .  |  :  .  |  :  [1] TRUE
[10:53:35.198] |  :  .  |  :  .  |  :  received data:
[10:53:35.198] |  :  .  |  :  .  |  :  List of 5
[10:53:35.198] |  :  .  |  :  .  |  :   $ type   : chr "VALUE"
[10:53:35.198] |  :  .  |  :  .  |  :   $ value  :List of 13
[10:53:35.198] |  :  .  |  :  .  |  :    ..$ value            : NULL
[10:53:35.198] |  :  .  |  :  .  |  :    ..$ visible          : logi TRUE
[10:53:35.198] |  :  .  |  :  .  |  :    ..$ stdout           : chr ""
[10:53:35.198] |  :  .  |  :  .  |  :    ..$ conditions       :List of 1
[10:53:35.198] |  :  .  |  :  .  |  :    .. ..$ :List of 5
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. ..$ condition:List of 2
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. ..$ message: chr "object 'a' not found"
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. ..$ call   : language eval(quote({     { ...
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. ..$ calls    :List of 9
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval(expr, envir = globalenv())
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval(expr, envir = globalenv())
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. ..$ : language local({     { ...
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval.parent(substitute(eval(quote(expr), envir)))
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval(expr, p)
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval(expr, p)
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval(quote({     { ...
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval(quote({     { ...
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval(quote({     { ...
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. ..$ session  :List of 6
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. ..$ r         :List of 14
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. .. ..$ platform      : chr "x86_64-pc-linux-gnu"
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. .. ..$ arch          : chr "x86_64"
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. .. ..$ os            : chr "linux-gnu"
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. .. ..$ system        : chr "x86_64, linux-gnu"
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. .. ..$ status        : chr ""
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. .. ..$ major         : chr "4"
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. .. ..$ minor         : chr "5.0"
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. .. ..$ year          : chr "2025"
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. .. ..$ month         : chr "04"
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. .. ..$ day           : chr "11"
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. .. ..$ svn rev       : chr "88135"
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. .. ..$ language      : chr "R"
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. .. ..$ version.string: chr "R version 4.5.0 (2025-04-11)"
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. .. ..$ nickname      : chr "How About a Twenty-Six"
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. ..$ locale    : chr "LC_CTYPE=en_US.UTF-8;LC_NUMERIC=C;LC_TIME=en_US.UTF-8;LC_COLLATE=en_US.UTF-8;LC_MONETARY=en_US.UTF-8;LC_MESSAGE"| __truncated__
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. ..$ rngkind   : chr [1:3] "Mersenne-Twister" "Inversion" "Rejection"
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. ..$ namespaces: chr [1:16] "compiler" "parallelly" "graphics" "tools" ...
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. ..$ search    : chr [1:10] ".GlobalEnv" "package:future" "package:stats" "package:graphics" ...
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. ..$ system    : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. ..$ timestamp: POSIXct[1:1], format: "2025-05-06 10:53:35"
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. ..$ signaled : int 0
[10:53:35.198] |  :  .  |  :  .  |  :    ..$ rng              : logi FALSE
[10:53:35.198] |  :  .  |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:53:35.198] |  :  .  |  :  .  |  :    ..$ misuseConnections:List of 3
[10:53:35.198] |  :  .  |  :  .  |  :    .. ..$ added   : NULL
[10:53:35.198] |  :  .  |  :  .  |  :    .. ..$ removed : NULL
[10:53:35.198] |  :  .  |  :  .  |  :    .. ..$ replaced: NULL
[10:53:35.198] |  :  .  |  :  .  |  :    ..$ misuseDevices    : NULL
[10:53:35.198] |  :  .  |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:35"
[10:53:35.198] |  :  .  |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:35"
[10:53:35.198] |  :  .  |  :  .  |  :    ..$ session_uuid     : chr "f3771e206c288202d2f9ce09bd7eec68"
[10:53:35.198] |  :  .  |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. ..$ pid   : int 71858
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:53:35.198] |  :  .  |  :  .  |  :    ..$ r_info           :List of 4
[10:53:35.198] |  :  .  |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:35.198] |  :  .  |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:53:35.198] |  :  .  |  :  .  |  :    .. ..$ os           : chr "unix"
[10:53:35.198] |  :  .  |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:53:35.198] |  :  .  |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:53:35.198] |  :  .  |  :  .  |  :    ..$ version          : chr "1.8"
[10:53:35.198] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:53:35.198] |  :  .  |  :  .  |  :   $ success: logi TRUE
[10:53:35.198] |  :  .  |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.002 0.001 0.003 0 0
[10:53:35.198] |  :  .  |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:35.198] |  :  .  |  :  .  |  :   $ tag    : NULL
[10:53:35.220] |  :  .  |  :  .  |  :  Received FutureResult
[10:53:35.220] |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:35.220] |  :  .  |  :  .  |  :  .  Removed future from position #2
[10:53:35.220] |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:53:35.221] |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:35.221] |  :  .  |  :  .  |  :  Erased future from future backend
[10:53:35.221] |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:35.221] |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:35.221] |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:35.221] |  :  .  |  :  .  |  :  signalConditions() ...
[10:53:35.221] |  :  .  |  :  .  |  :  .  include = ‘immediateCondition’
[10:53:35.221] |  :  .  |  :  .  |  :  .  exclude = 
[10:53:35.221] |  :  .  |  :  .  |  :  .  resignal = FALSE
[10:53:35.221] |  :  .  |  :  .  |  :  .  Number of conditions: 1
[10:53:35.222] |  :  .  |  :  .  |  :  signalConditions() ... done
[10:53:35.222] |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:35.222] |  :  .  |  :  .  result() for ClusterFuture ... done
[10:53:35.222] |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:35.222] |  :  .  |  :  .  |  result already collected: FutureResult
[10:53:35.222] |  :  .  |  :  .  result() for ClusterFuture ... done
[10:53:35.222] |  :  .  |  :  .  signalConditions() ...
[10:53:35.222] |  :  .  |  :  .  |  include = ‘immediateCondition’
[10:53:35.222] |  :  .  |  :  .  |  exclude = 
[10:53:35.222] |  :  .  |  :  .  |  resignal = FALSE
[10:53:35.222] |  :  .  |  :  .  |  Number of conditions: 1
[10:53:35.223] |  :  .  |  :  .  signalConditions() ... done
[10:53:35.223] |  :  .  |  :  .  Future state: ‘finished’
[10:53:35.223] |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:35.223] |  :  .  |  :  .  |  result already collected: FutureResult
[10:53:35.223] |  :  .  |  :  .  result() for ClusterFuture ... done
[10:53:35.223] |  :  .  |  :  .  signalConditions() ...
[10:53:35.223] |  :  .  |  :  .  |  include = ‘condition’
[10:53:35.223] |  :  .  |  :  .  |  exclude = ‘immediateCondition’
[10:53:35.223] |  :  .  |  :  .  |  resignal = TRUE
[10:53:35.223] |  :  .  |  :  .  |  Number of conditions: 1
[10:53:35.223] |  :  .  |  :  .  |  Condition #1: ‘simpleError’, ‘error’, ‘condition’
[10:53:35.224] |  :  .  |  :  .  signalConditions() ... done
List of 1
 $ res: 'try-error' chr "Error in eval(quote({ : object 'a' not found\n"
  ..- attr(*, "condition")=List of 3
  .. ..$ message    : chr "object 'a' not found"
  .. ..$ call       : language eval(quote({     { ...
  .. ..$ future.info:List of 5
  .. .. ..$ condition:List of 2
  .. .. .. ..$ message: chr "object 'a' not found"
  .. .. .. ..$ call   : language eval(quote({     { ...
  .. .. .. ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
  .. .. ..$ calls    :List of 27
  .. .. .. ..$ : language future:::testme("globals,tricky")
  .. .. .. ..$ : language source(file.path(path, "run.R"))
  .. .. .. ..$ : language withVisible(eval(ei, envir))
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language source(testme[["script"]], echo = TRUE)
  .. .. .. ..$ : language withVisible(eval(ei, envir))
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language eval(ei, envir)
  .. .. .. ..$ : language res[[ii]] %<-% {     b <- a * ii ...
  .. .. .. ..$ : language eval(fassignment, envir = envir, enclos = baseenv())
  .. .. .. ..$ : language eval(fassignment, envir = envir, enclos = baseenv())
  .. .. .. ..$ : language res[[ii]] %<-% {     b <- a * ii ...
  .. .. .. ..$ : language futureAssignInternal(target, expr, envir = envir, substitute = FALSE)
  .. .. .. ..$ : language futureAssign(name, expr, envir = envir, assign.env = assign.env, substitute = FALSE)
  .. .. .. ..$ : language do.call(future::future, args = future.args, envir = envir)
  .. .. .. ..$ : language (function (expr, envir = parent.frame(), substitute = TRUE, lazy = FALSE,      seed = FALSE, globals = TRUE, pack| __truncated__ ...
  .. .. .. ..$ : language Future(expr, substitute = FALSE, envir = envir, lazy = TRUE, seed = seed,      globals = globals, packages = pack| __truncated__ ...
  .. .. .. ..$ : language eval(expr, envir = globalenv())
  .. .. .. ..$ : language eval(expr, envir = globalenv())
  .. .. .. ..$ : language local({     { ...
  .. .. .. ..$ : language eval.parent(substitute(eval(quote(expr), envir)))
  .. .. .. ..$ : language eval(expr, p)
  .. .. .. ..$ : language eval(expr, p)
  .. .. .. ..$ : language eval(quote({     { ...
  .. .. .. ..$ : language eval(quote({     { ...
  .. .. .. ..$ : language eval(quote({     { ...
  .. .. ..$ session  :List of 6
  .. .. .. ..$ r         :List of 14
  .. .. .. .. ..$ platform      : chr "x86_64-pc-linux-gnu"
  .. .. .. .. ..$ arch          : chr "x86_64"
  .. .. .. .. ..$ os            : chr "linux-gnu"
  .. .. .. .. ..$ system        : chr "x86_64, linux-gnu"
  .. .. .. .. ..$ status        : chr ""
  .. .. .. .. ..$ major         : chr "4"
  .. .. .. .. ..$ minor         : chr "5.0"
  .. .. .. .. ..$ year          : chr "2025"
  .. .. .. .. ..$ month         : chr "04"
  .. .. .. .. ..$ day           : chr "11"
  .. .. .. .. ..$ svn rev       : chr "88135"
  .. .. .. .. ..$ language      : chr "R"
  .. .. .. .. ..$ version.string: chr "R version 4.5.0 (2025-04-11)"
  .. .. .. .. ..$ nickname      : chr "How About a Twenty-Six"
  .. .. .. ..$ locale    : chr "LC_CTYPE=en_US.UTF-8;LC_NUMERIC=C;LC_TIME=en_US.UTF-8;LC_COLLATE=en_US.UTF-8;LC_MONETARY=en_US.UTF-8;LC_MESSAGE"| __truncated__
  .. .. .. ..$ rngkind   : chr [1:3] "Mersenne-Twister" "Inversion" "Rejection"
  .. .. .. ..$ namespaces: chr [1:16] "compiler" "parallelly" "graphics" "tools" ...
  .. .. .. ..$ search    : chr [1:10] ".GlobalEnv" "package:future" "package:stats" "package:graphics" ...
  .. .. .. ..$ system    : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
  .. .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
  .. .. ..$ timestamp: POSIXct[1:1], format: "2025-05-06 10:53:35"
  .. .. ..$ signaled : int 1
  .. ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:35.241] |  :  .  |  :  .  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:35.241] |  :  .  |  :  .  |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:35.242] |  :  .  |  :  .  |  :  globals found: [0] 
[10:53:35.242] |  :  .  |  :  .  |  Searching for globals ... DONE
[10:53:35.242] |  :  .  |  :  .  |  globals: [0] <none>
[10:53:35.242] |  :  .  |  :  .  |  packages: [0] <none>
[10:53:35.242] |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:53:35.242] |  :  .  |  :  .  run() for Future (‘Future’) ...
[10:53:35.243] |  :  .  |  :  .  |  state: ‘created’
[10:53:35.243] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:35.243] |  :  .  |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:35.243] |  :  .  |  :  .  |  Using MultisessionFutureBackend ...
[10:53:35.243] |  :  .  |  :  .  |  :  Launching futures ...
[10:53:35.243] |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:53:35.243] |  :  .  |  :  .  |  :  .  |  Workers: [n=2]
[10:53:35.243] |  :  .  |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:35.245] |  :  .  |  :  .  |  :  .  |  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:35.245] |  :  .  |  :  .  |  :  .  |  requestWorker() ...
[10:53:35.245] |  :  .  |  :  .  |  :  .  |  :  requestNode() ...
[10:53:35.245] |  :  .  |  :  .  |  :  .  |  :  .  Number of workers: 2
[10:53:35.245] |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ...
[10:53:35.245] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:35.245] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:53:35.246] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:53:35.246] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:35.246] |  :  .  |  :  .  |  :  .  |  :  .  |  Total time: 0
[10:53:35.246] |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ... done
[10:53:35.246] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:35.246] |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:53:35.246] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:53:35.246] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:35.246] |  :  .  |  :  .  |  :  .  |  :  .  Index of first available worker: 2
[10:53:35.246] |  :  .  |  :  .  |  :  .  |  :  .  Validate that the worker is functional ...
[10:53:35.326] |  :  .  |  :  .  |  :  .  |  :  .  |  Worker is functional
[10:53:35.326] |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ... done
[10:53:35.327] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:53:35.327] |  :  .  |  :  .  |  :  .  |  :  requestWorker() ... done
[10:53:35.327] |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ...
[10:53:35.327] |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:53:35.327] |  :  .  |  :  .  |  :  .  |  :  launchFuture() ...
[10:53:35.328] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:53:35.328] |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ...
[10:53:35.328] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ...
[10:53:35.328] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:53:35.328] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ... done
[10:53:35.328] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ...
[10:53:35.328] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ... done
[10:53:35.328] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ...
[10:53:35.328] |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:35.328] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:53:35.329] |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:35.329] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:53:35.329] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ... done
[10:53:35.329] |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ... done
[10:53:35.329] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:35.329] |  :  .  |  :  .  |  :  .  |  :  .  |  Appended future to position #2
[10:53:35.329] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 2
[10:53:35.329] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:35.330] |  :  .  |  :  .  |  :  .  |  :  launchFuture() ... done
[10:53:35.330] |  :  .  |  :  .  |  :  .  |  :  MultisessionFuture started
[10:53:35.330] |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:53:35.330] |  :  .  |  :  .  |  :  .  Launching futures ... done
[10:53:35.330] |  :  .  |  :  .  |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:35.330] |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ... done
[10:53:35.330] |  :  .  |  :  .  |  run() for Future (‘MultisessionFuture’) ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:35.330] |  :  .  |  :  .  |  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:35.331] |  :  .  |  :  .  |  :  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:35.332] |  :  .  |  :  .  |  :  .  globals found: [3] ‘+’, ‘value’, ‘a’
[10:53:35.332] |  :  .  |  :  .  |  :  Searching for globals ... DONE
[10:53:35.332] |  :  .  |  :  .  |  :  Resolving globals: TRUE
[10:53:35.332] |  :  .  |  :  .  |  :  Resolving any globals that are futures ...
[10:53:35.332] |  :  .  |  :  .  |  :  .  globals: [3] ‘+’, ‘value’, ‘a’
[10:53:35.332] |  :  .  |  :  .  |  :  Resolving any globals that are futures ... DONE
[10:53:35.332] |  :  .  |  :  .  |  :  Search for packages associated with the globals ...
[10:53:35.333] |  :  .  |  :  .  |  :  .  Packages associated with globals: [2] ‘base’, ‘future’
[10:53:35.333] |  :  .  |  :  .  |  :  .  Packages: [2] ‘base’, ‘future’
[10:53:35.333] |  :  .  |  :  .  |  :  Search for packages associated with the globals ... DONE
[10:53:35.333] |  :  .  |  :  .  |  :  Resolving futures part of globals (recursively) ...
[10:53:35.333] |  :  .  |  :  .  |  :  .  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:35.333] |  :  .  |  :  .  |  :  .  |  recursive: 99
[10:53:35.333] |  :  .  |  :  .  |  :  .  |  length: 1
[10:53:35.334] |  :  .  |  :  .  |  :  .  |  elements: ‘a’
[10:53:35.334] |  :  .  |  :  .  |  :  .  |  'obj' is MultisessionFuture
[10:53:35.334] |  :  .  |  :  .  |  :  .  |  isFutureResolved() ...
[10:53:35.334] |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:53:35.334] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:53:35.334] |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:53:35.345] |  :  .  |  :  .  |  :  .  |  isFutureResolved() ... done
[10:53:35.355] |  :  .  |  :  .  |  :  .  |  'obj' is MultisessionFuture
[10:53:35.355] |  :  .  |  :  .  |  :  .  |  isFutureResolved() ...
[10:53:35.356] |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:53:35.356] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:53:35.356] |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:53:35.366] |  :  .  |  :  .  |  :  .  |  isFutureResolved() ... done
[10:53:35.376] |  :  .  |  :  .  |  :  .  |  'obj' is MultisessionFuture
[10:53:35.377] |  :  .  |  :  .  |  :  .  |  isFutureResolved() ...
[10:53:35.377] |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:53:35.377] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:53:35.377] |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .  [1] TRUE
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .  received data:
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .  List of 5
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .   $ type   : chr "VALUE"
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .   $ value  :List of 13
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .    ..$ value            : num 1
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .    ..$ stdout           : chr ""
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .    ..$ conditions       : list()
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ added   : NULL
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ removed : NULL
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ replaced: NULL
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:35"
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:35"
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .    ..$ session_uuid     : chr "f3771e206c288202d2f9ce09bd7eec68"
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ pid   : int 71858
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .    ..$ r_info           :List of 4
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .   $ success: logi TRUE
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:35.378] |  :  .  |  :  .  |  :  .  |  :  .   $ tag    : NULL
[10:53:35.390] |  :  .  |  :  .  |  :  .  |  :  .  Received FutureResult
[10:53:35.390] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:35.390] |  :  .  |  :  .  |  :  .  |  :  .  |  Removed future from position #2
[10:53:35.390] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:53:35.391] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:35.391] |  :  .  |  :  .  |  :  .  |  :  .  Erased future from future backend
[10:53:35.391] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:35.391] |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:53:35.391] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:53:35.391] |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:35.391] |  :  .  |  :  .  |  :  .  |  isFutureResolved() ... done
[10:53:35.391] |  :  .  |  :  .  |  :  .  |  Future #1
[10:53:35.391] |  :  .  |  :  .  |  :  .  |  value(obj, ...) ...
[10:53:35.391] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:35.391] |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:35.392] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:35.392] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:35.392] |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:35.392] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:35.392] |  :  .  |  :  .  |  :  .  |  value(obj, ...) ... done
[10:53:35.392] |  :  .  |  :  .  |  :  .  |  resolve(obj, ...) ...
[10:53:35.392] |  :  .  |  :  .  |  :  .  |  :  A MultisessionFuture was resolved
[10:53:35.392] |  :  .  |  :  .  |  :  .  |  resolve(obj, ...) ... done
[10:53:35.392] |  :  .  |  :  .  |  :  .  |  length: 0 (resolved future 1)
[10:53:35.393] |  :  .  |  :  .  |  :  .  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:35.393] |  :  .  |  :  .  |  :  .  globals: [1] ‘a’
[10:53:35.393] |  :  .  |  :  .  |  :  Resolving futures part of globals (recursively) ... DONE
[10:53:35.393] |  :  .  |  :  .  |  :  Packages after dropping 'base': [1] ‘future’
[10:53:35.393] |  :  .  |  :  .  |  :  Packages after dropping non-attached packages: [1] ‘future’
[10:53:35.393] |  :  .  |  :  .  |  :  globals: [1] ‘a’
[10:53:35.393] |  :  .  |  :  .  |  :  packages: [1] ‘future’
[10:53:35.393] |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:53:35.394] |  :  .  |  :  .  |  run() for Future (‘Future’) ...
[10:53:35.394] |  :  .  |  :  .  |  :  state: ‘created’
[10:53:35.394] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:35.394] |  :  .  |  :  .  |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:35.394] |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ...
[10:53:35.394] |  :  .  |  :  .  |  :  .  Launching futures ...
[10:53:35.394] |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:53:35.394] |  :  .  |  :  .  |  :  .  |  :  Workers: [n=2]
[10:53:35.394] |  :  .  |  :  .  |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:35.396] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:35.396] |  :  .  |  :  .  |  :  .  |  :  requestWorker() ...
[10:53:35.396] |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ...
[10:53:35.396] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of workers: 2
[10:53:35.396] |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ...
[10:53:35.396] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:35.397] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:53:35.397] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:53:35.397] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:35.397] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Total time: 0
[10:53:35.397] |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ... done
[10:53:35.397] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:35.397] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:53:35.397] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:53:35.397] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:35.397] |  :  .  |  :  .  |  :  .  |  :  .  |  Index of first available worker: 2
[10:53:35.398] |  :  .  |  :  .  |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:53:35.477] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Worker is functional
[10:53:35.478] |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ... done
[10:53:35.478] |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:53:35.478] |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ... done
[10:53:35.478] |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:53:35.479] |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:53:35.479] |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ...
[10:53:35.479] |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:53:35.479] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ...
[10:53:35.479] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ...
[10:53:35.479] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘future’
[10:53:35.479] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:53:35.479] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:53:35.479] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:53:35.480] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ...
[10:53:35.480] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:35.480] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:35.480] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:35.480] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:35.480] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:53:35.480] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ... done
[10:53:35.492] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:35.492] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Appended future to position #2
[10:53:35.492] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 2
[10:53:35.492] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:35.493] |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ... done
[10:53:35.493] |  :  .  |  :  .  |  :  .  |  :  .  MultisessionFuture started
[10:53:35.493] |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:53:35.493] |  :  .  |  :  .  |  :  .  |  Launching futures ... done
[10:53:35.493] |  :  .  |  :  .  |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:35.493] |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ... done
[10:53:35.493] |  :  .  |  :  .  |  :  run() for Future (‘MultisessionFuture’) ... done
[10:53:35.493] |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:35.494] |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:53:35.494] |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:53:35.494] |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:53:35.494] |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:53:35.494] |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:53:35.536] |  :  .  |  :  .  |  :  .  |  [1] TRUE
[10:53:35.537] |  :  .  |  :  .  |  :  .  |  received data:
[10:53:35.537] |  :  .  |  :  .  |  :  .  |  List of 5
[10:53:35.537] |  :  .  |  :  .  |  :  .  |   $ type   : chr "VALUE"
[10:53:35.537] |  :  .  |  :  .  |  :  .  |   $ value  :List of 13
[10:53:35.537] |  :  .  |  :  .  |  :  .  |    ..$ value            : num 2
[10:53:35.537] |  :  .  |  :  .  |  :  .  |    ..$ visible          : logi TRUE
[10:53:35.537] |  :  .  |  :  .  |  :  .  |    ..$ stdout           : chr ""
[10:53:35.537] |  :  .  |  :  .  |  :  .  |    ..$ conditions       : list()
[10:53:35.537] |  :  .  |  :  .  |  :  .  |    ..$ rng              : logi FALSE
[10:53:35.537] |  :  .  |  :  .  |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:53:35.537] |  :  .  |  :  .  |  :  .  |    ..$ misuseConnections:List of 3
[10:53:35.537] |  :  .  |  :  .  |  :  .  |    .. ..$ added   : NULL
[10:53:35.537] |  :  .  |  :  .  |  :  .  |    .. ..$ removed : NULL
[10:53:35.537] |  :  .  |  :  .  |  :  .  |    .. ..$ replaced: NULL
[10:53:35.537] |  :  .  |  :  .  |  :  .  |    ..$ misuseDevices    : NULL
[10:53:35.537] |  :  .  |  :  .  |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:35"
[10:53:35.537] |  :  .  |  :  .  |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:35"
[10:53:35.537] |  :  .  |  :  .  |  :  .  |    ..$ session_uuid     : chr "f3771e206c288202d2f9ce09bd7eec68"
[10:53:35.537] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:53:35.537] |  :  .  |  :  .  |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:35.537] |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:35.537] |  :  .  |  :  .  |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:35.537] |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:35.537] |  :  .  |  :  .  |  :  .  |    .. .. ..$ pid   : int 71858
[10:53:35.537] |  :  .  |  :  .  |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:35.537] |  :  .  |  :  .  |  :  .  |    .. .. ..$ random: int 2147483647
[10:53:35.537] |  :  .  |  :  .  |  :  .  |    ..$ r_info           :List of 4
[10:53:35.537] |  :  .  |  :  .  |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:35.537] |  :  .  |  :  .  |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:53:35.537] |  :  .  |  :  .  |  :  .  |    .. ..$ os           : chr "unix"
[10:53:35.537] |  :  .  |  :  .  |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:53:35.537] |  :  .  |  :  .  |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:53:35.537] |  :  .  |  :  .  |  :  .  |    ..$ version          : chr "1.8"
[10:53:35.537] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:53:35.537] |  :  .  |  :  .  |  :  .  |   $ success: logi TRUE
[10:53:35.537] |  :  .  |  :  .  |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[10:53:35.537] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:35.537] |  :  .  |  :  .  |  :  .  |   $ tag    : NULL
[10:53:35.547] |  :  .  |  :  .  |  :  .  |  Received FutureResult
[10:53:35.547] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:35.547] |  :  .  |  :  .  |  :  .  |  :  Removed future from position #2
[10:53:35.547] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:53:35.548] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:35.548] |  :  .  |  :  .  |  :  .  |  Erased future from future backend
[10:53:35.548] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:35.548] |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:53:35.548] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:53:35.548] |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:35.548] |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:35.548] |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:35.548] |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:35.548] |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
value(b) = 2
[10:53:35.549] |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:35.549] |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:35.549] |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:35.549] |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:35.549] |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:35.549] |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:35.549] |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:35.550] |  :  .  |  :  .  |  :  .  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:35.550] |  :  .  |  :  .  |  :  .  |  globals found: [0] 
[10:53:35.550] |  :  .  |  :  .  |  :  .  Searching for globals ... DONE
[10:53:35.550] |  :  .  |  :  .  |  :  .  globals: [0] <none>
[10:53:35.550] |  :  .  |  :  .  |  :  .  packages: [0] <none>
[10:53:35.551] |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:53:35.551] |  :  .  |  :  .  |  :  run() for Future (‘Future’) ...
[10:53:35.551] |  :  .  |  :  .  |  :  .  state: ‘created’
[10:53:35.551] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:35.551] |  :  .  |  :  .  |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:35.551] |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ...
[10:53:35.551] |  :  .  |  :  .  |  :  .  |  Launching futures ...
[10:53:35.551] |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:53:35.552] |  :  .  |  :  .  |  :  .  |  :  .  Workers: [n=2]
[10:53:35.552] |  :  .  |  :  .  |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:35.553] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:35.553] |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ...
[10:53:35.554] |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ...
[10:53:35.554] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of workers: 2
[10:53:35.554] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:53:35.554] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:35.554] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:53:35.554] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:53:35.554] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:35.554] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Total time: 0
[10:53:35.554] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:53:35.554] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:35.555] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:53:35.555] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:53:35.555] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:35.555] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Index of first available worker: 2
[10:53:35.555] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:53:35.633] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Worker is functional
[10:53:35.633] |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ... done
[10:53:35.634] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:53:35.634] |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ... done
[10:53:35.634] |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:53:35.634] |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:53:35.634] |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ...
[10:53:35.635] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:53:35.635] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ...
[10:53:35.635] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:53:35.635] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:53:35.635] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:53:35.635] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:53:35.635] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:53:35.635] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:53:35.635] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:35.636] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:53:35.636] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:35.636] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:53:35.636] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:53:35.636] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ... done
[10:53:35.636] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:35.636] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Appended future to position #2
[10:53:35.636] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 2
[10:53:35.637] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:35.637] |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ... done
[10:53:35.637] |  :  .  |  :  .  |  :  .  |  :  .  |  MultisessionFuture started
[10:53:35.637] |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:53:35.637] |  :  .  |  :  .  |  :  .  |  :  Launching futures ... done
[10:53:35.637] |  :  .  |  :  .  |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:35.637] |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ... done
[10:53:35.637] |  :  .  |  :  .  |  :  .  run() for Future (‘MultisessionFuture’) ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:35.638] |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:35.638] |  :  .  |  :  .  |  :  .  |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:35.639] |  :  .  |  :  .  |  :  .  |  :  globals found: [3] ‘+’, ‘value’, ‘a’
[10:53:35.639] |  :  .  |  :  .  |  :  .  |  Searching for globals ... DONE
[10:53:35.639] |  :  .  |  :  .  |  :  .  |  Resolving globals: TRUE
[10:53:35.639] |  :  .  |  :  .  |  :  .  |  Resolving any globals that are futures ...
[10:53:35.639] |  :  .  |  :  .  |  :  .  |  :  globals: [3] ‘+’, ‘value’, ‘a’
[10:53:35.639] |  :  .  |  :  .  |  :  .  |  Resolving any globals that are futures ... DONE
[10:53:35.639] |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ...
[10:53:35.640] |  :  .  |  :  .  |  :  .  |  :  Packages associated with globals: [2] ‘base’, ‘future’
[10:53:35.640] |  :  .  |  :  .  |  :  .  |  :  Packages: [2] ‘base’, ‘future’
[10:53:35.640] |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ... DONE
[10:53:35.640] |  :  .  |  :  .  |  :  .  |  Resolving futures part of globals (recursively) ...
[10:53:35.640] |  :  .  |  :  .  |  :  .  |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:35.640] |  :  .  |  :  .  |  :  .  |  :  .  recursive: 99
[10:53:35.641] |  :  .  |  :  .  |  :  .  |  :  .  length: 1
[10:53:35.641] |  :  .  |  :  .  |  :  .  |  :  .  elements: ‘a’
[10:53:35.641] |  :  .  |  :  .  |  :  .  |  :  .  'obj' is MultisessionFuture
[10:53:35.641] |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:53:35.641] |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:53:35.641] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:53:35.642] |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:53:35.652] |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:53:35.662] |  :  .  |  :  .  |  :  .  |  :  .  'obj' is MultisessionFuture
[10:53:35.662] |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:53:35.663] |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:53:35.663] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:53:35.663] |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:53:35.673] |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:53:35.684] |  :  .  |  :  .  |  :  .  |  :  .  'obj' is MultisessionFuture
[10:53:35.684] |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:53:35.684] |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:53:35.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :  [1] TRUE
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :  received data:
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :  List of 5
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ type   : chr "VALUE"
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ value  :List of 13
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ value            : num 1
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ visible          : logi TRUE
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ stdout           : chr ""
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ conditions       : list()
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ rng              : logi FALSE
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseConnections:List of 3
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ added   : NULL
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ removed : NULL
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ replaced: NULL
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseDevices    : NULL
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:35"
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:35"
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ session_uuid     : chr "f3771e206c288202d2f9ce09bd7eec68"
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ pid   : int 71858
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ r_info           :List of 4
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os           : chr "unix"
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ version          : chr "1.8"
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ success: logi TRUE
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:35.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ tag    : NULL
[10:53:35.702] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Received FutureResult
[10:53:35.703] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:35.703] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Removed future from position #2
[10:53:35.703] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:53:35.703] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:35.703] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Erased future from future backend
[10:53:35.703] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:35.703] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:35.703] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:35.703] |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:35.703] |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:53:35.704] |  :  .  |  :  .  |  :  .  |  :  .  Future #1
[10:53:35.704] |  :  .  |  :  .  |  :  .  |  :  .  value(obj, ...) ...
[10:53:35.704] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:35.704] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:53:35.704] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:53:35.704] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:35.704] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:53:35.704] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:53:35.704] |  :  .  |  :  .  |  :  .  |  :  .  value(obj, ...) ... done
[10:53:35.704] |  :  .  |  :  .  |  :  .  |  :  .  resolve(obj, ...) ...
[10:53:35.705] |  :  .  |  :  .  |  :  .  |  :  .  |  A MultisessionFuture was resolved
[10:53:35.705] |  :  .  |  :  .  |  :  .  |  :  .  resolve(obj, ...) ... done
[10:53:35.705] |  :  .  |  :  .  |  :  .  |  :  .  length: 0 (resolved future 1)
[10:53:35.705] |  :  .  |  :  .  |  :  .  |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:35.705] |  :  .  |  :  .  |  :  .  |  :  globals: [1] ‘a’
[10:53:35.705] |  :  .  |  :  .  |  :  .  |  Resolving futures part of globals (recursively) ... DONE
[10:53:35.705] |  :  .  |  :  .  |  :  .  |  Packages after dropping 'base': [1] ‘future’
[10:53:35.705] |  :  .  |  :  .  |  :  .  |  Packages after dropping non-attached packages: [1] ‘future’
[10:53:35.706] |  :  .  |  :  .  |  :  .  |  globals: [1] ‘a’
[10:53:35.706] |  :  .  |  :  .  |  :  .  |  packages: [1] ‘future’
[10:53:35.706] |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:53:35.706] |  :  .  |  :  .  |  :  .  run() for Future (‘Future’) ...
[10:53:35.706] |  :  .  |  :  .  |  :  .  |  state: ‘created’
[10:53:35.706] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:35.706] |  :  .  |  :  .  |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:35.706] |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ...
[10:53:35.707] |  :  .  |  :  .  |  :  .  |  :  Launching futures ...
[10:53:35.707] |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:53:35.707] |  :  .  |  :  .  |  :  .  |  :  .  |  Workers: [n=2]
[10:53:35.707] |  :  .  |  :  .  |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:35.708] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:35.709] |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ...
[10:53:35.709] |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ...
[10:53:35.709] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of workers: 2
[10:53:35.709] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ...
[10:53:35.709] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:35.709] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:53:35.709] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:53:35.709] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:35.709] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Total time: 0
[10:53:35.709] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ... done
[10:53:35.710] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:35.710] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:53:35.710] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:53:35.710] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:35.710] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Index of first available worker: 2
[10:53:35.710] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Validate that the worker is functional ...
[10:53:35.795] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Worker is functional
[10:53:35.796] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ... done
[10:53:35.796] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:53:35.796] |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestWorker() ... done
[10:53:35.796] |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ...
[10:53:35.796] |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:53:35.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ...
[10:53:35.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:53:35.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ...
[10:53:35.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ...
[10:53:35.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 1): ‘future’
[10:53:35.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ... done
[10:53:35.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ...
[10:53:35.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ... done
[10:53:35.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ...
[10:53:35.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:35.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:53:35.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:35.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:53:35.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ... done
[10:53:35.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ... done
[10:53:35.810] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:35.810] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Appended future to position #2
[10:53:35.810] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 2
[10:53:35.810] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:35.811] |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ... done
[10:53:35.811] |  :  .  |  :  .  |  :  .  |  :  .  |  :  MultisessionFuture started
[10:53:35.811] |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:53:35.811] |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ... done
[10:53:35.811] |  :  .  |  :  .  |  :  .  |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:35.811] |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ... done
[10:53:35.811] |  :  .  |  :  .  |  :  .  |  run() for Future (‘MultisessionFuture’) ... done
[10:53:35.811] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:35.811] |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:53:35.812] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:53:35.812] |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:53:35.812] |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:53:35.812] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .  [1] TRUE
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .  received data:
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .  List of 5
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .   $ type   : chr "VALUE"
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .   $ value  :List of 13
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .    ..$ value            : num 2
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .    ..$ stdout           : chr ""
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .    ..$ conditions       : list()
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ added   : NULL
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ removed : NULL
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ replaced: NULL
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:35"
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:35"
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .    ..$ session_uuid     : chr "f3771e206c288202d2f9ce09bd7eec68"
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ pid   : int 71858
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .    ..$ r_info           :List of 4
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .   $ success: logi TRUE
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:35.854] |  :  .  |  :  .  |  :  .  |  :  .   $ tag    : NULL
[10:53:35.864] |  :  .  |  :  .  |  :  .  |  :  .  Received FutureResult
[10:53:35.865] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:35.865] |  :  .  |  :  .  |  :  .  |  :  .  |  Removed future from position #2
[10:53:35.865] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:53:35.865] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:35.865] |  :  .  |  :  .  |  :  .  |  :  .  Erased future from future backend
[10:53:35.865] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:35.865] |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:53:35.865] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:53:35.865] |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:35.865] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:53:35.866] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:35.866] |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:53:35.866] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
value(b) = 2
[10:53:35.866] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:35.866] |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:53:35.866] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:53:35.866] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:35.866] |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:53:35.866] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:35.867] |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:35.867] |  :  .  |  :  .  |  :  .  |  :  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:35.867] |  :  .  |  :  .  |  :  .  |  :  .  globals found: [0] 
[10:53:35.868] |  :  .  |  :  .  |  :  .  |  :  Searching for globals ... DONE
[10:53:35.868] |  :  .  |  :  .  |  :  .  |  :  globals: [0] <none>
[10:53:35.868] |  :  .  |  :  .  |  :  .  |  :  packages: [0] <none>
[10:53:35.868] |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:35.868] |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:35.868] |  :  .  |  :  .  |  :  .  |  :  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:35.869] |  :  .  |  :  .  |  :  .  |  :  .  globals found: [3] ‘+’, ‘value’, ‘a’
[10:53:35.869] |  :  .  |  :  .  |  :  .  |  :  Searching for globals ... DONE
[10:53:35.870] |  :  .  |  :  .  |  :  .  |  :  Resolving globals: TRUE
[10:53:35.870] |  :  .  |  :  .  |  :  .  |  :  Resolving any globals that are futures ...
[10:53:35.870] |  :  .  |  :  .  |  :  .  |  :  .  globals: [3] ‘+’, ‘value’, ‘a’
[10:53:35.870] |  :  .  |  :  .  |  :  .  |  :  Resolving any globals that are futures ... DONE
[10:53:35.870] |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ...
[10:53:35.870] |  :  .  |  :  .  |  :  .  |  :  .  Packages associated with globals: [2] ‘base’, ‘future’
[10:53:35.870] |  :  .  |  :  .  |  :  .  |  :  .  Packages: [2] ‘base’, ‘future’
[10:53:35.871] |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ... DONE
[10:53:35.871] |  :  .  |  :  .  |  :  .  |  :  Resolving futures part of globals (recursively) ...
[10:53:35.871] |  :  .  |  :  .  |  :  .  |  :  .  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:35.871] |  :  .  |  :  .  |  :  .  |  :  .  |  recursive: 99
[10:53:35.871] |  :  .  |  :  .  |  :  .  |  :  .  |  length: 1
[10:53:35.871] |  :  .  |  :  .  |  :  .  |  :  .  |  elements: ‘a’
[10:53:35.871] |  :  .  |  :  .  |  :  .  |  :  .  |  'obj' is Future
[10:53:35.871] |  :  .  |  :  .  |  :  .  |  :  .  |  run() for Future (‘Future’) ...
[10:53:35.871] |  :  .  |  :  .  |  :  .  |  :  .  |  :  state: ‘created’
[10:53:35.872] |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:35.872] |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:35.872] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ...
[10:53:35.872] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ...
[10:53:35.872] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:53:35.872] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Workers: [n=2]
[10:53:35.872] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:35.874] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:35.874] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestWorker() ...
[10:53:35.874] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ...
[10:53:35.874] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of workers: 2
[10:53:35.874] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ...
[10:53:35.874] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:35.874] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:53:35.875] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:53:35.875] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:35.875] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Total time: 0
[10:53:35.875] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ... done
[10:53:35.875] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:35.875] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:53:35.875] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:53:35.875] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:35.875] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Index of first available worker: 2
[10:53:35.875] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Validate that the worker is functional ...
Warning in serialize(data, node$con, xdr = FALSE) :
  'package:future' may not be available when loading
[10:53:35.955] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Worker is functional
[10:53:35.956] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ... done
[10:53:35.956] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:53:35.956] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ... done
[10:53:35.956] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:53:35.956] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:53:35.957] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ...
[10:53:35.957] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:53:35.957] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ...
[10:53:35.957] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ...
[10:53:35.957] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:35.957] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:53:35.957] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:53:35.957] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:53:35.957] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ...
[10:53:35.958] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:35.958] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:35.958] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:35.958] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:35.958] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:53:35.958] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ... done
[10:53:35.958] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:35.959] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Appended future to position #2
[10:53:35.959] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 2
[10:53:35.959] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:35.959] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ... done
[10:53:35.959] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  MultisessionFuture started
[10:53:35.959] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:53:35.959] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Launching futures ... done
[10:53:35.959] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:35.959] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ... done
[10:53:35.960] |  :  .  |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘MultisessionFuture’) ... done
[10:53:35.960] |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:53:35.960] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:53:35.960] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:53:35.960] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:53:35.971] |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:53:35.981] |  :  .  |  :  .  |  :  .  |  :  .  |  :  'obj' is MultisessionFuture
[10:53:35.981] |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:53:35.981] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:53:35.982] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:53:35.982] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:53:35.992] |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:53:36.002] |  :  .  |  :  .  |  :  .  |  :  .  |  :  'obj' is MultisessionFuture
[10:53:36.002] |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:53:36.003] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:53:36.003] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:53:36.003] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:53:36.003] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:53:36.003] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  [1] TRUE
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  received data:
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  List of 5
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ type   : chr "VALUE"
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ value  :List of 13
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ value            : num 1
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ visible          : logi TRUE
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ stdout           : chr ""
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ conditions       : list()
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ rng              : logi FALSE
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseConnections:List of 3
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ added   : NULL
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ removed : NULL
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ replaced: NULL
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseDevices    : NULL
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:35"
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:36"
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ session_uuid     : chr "f3771e206c288202d2f9ce09bd7eec68"
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ pid   : int 71858
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ random: int 2147483647
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ r_info           :List of 4
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os           : chr "unix"
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ version          : chr "1.8"
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ success: logi TRUE
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:36.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ tag    : NULL
[10:53:36.014] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Received FutureResult
[10:53:36.014] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:36.014] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Removed future from position #2
[10:53:36.015] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:53:36.015] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:36.015] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Erased future from future backend
[10:53:36.015] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:36.015] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:53:36.015] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:53:36.015] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:36.015] |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:53:36.015] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Future #1
[10:53:36.015] |  :  .  |  :  .  |  :  .  |  :  .  |  :  value(obj, ...) ...
[10:53:36.016] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:36.016] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:53:36.016] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:53:36.016] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:36.016] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:53:36.016] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:53:36.016] |  :  .  |  :  .  |  :  .  |  :  .  |  :  value(obj, ...) ... done
[10:53:36.016] |  :  .  |  :  .  |  :  .  |  :  .  |  :  resolve(obj, ...) ...
[10:53:36.016] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  A MultisessionFuture was resolved
[10:53:36.016] |  :  .  |  :  .  |  :  .  |  :  .  |  :  resolve(obj, ...) ... done
[10:53:36.017] |  :  .  |  :  .  |  :  .  |  :  .  |  :  length: 0 (resolved future 1)
[10:53:36.017] |  :  .  |  :  .  |  :  .  |  :  .  |  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:36.017] |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [1] ‘a’
[10:53:36.017] |  :  .  |  :  .  |  :  .  |  :  .  Resolving futures part of globals (recursively) ... DONE
[10:53:36.017] |  :  .  |  :  .  |  :  .  |  :  .  Packages after dropping 'base': [1] ‘future’
[10:53:36.017] |  :  .  |  :  .  |  :  .  |  :  .  Packages after dropping non-attached packages: [1] ‘future’
[10:53:36.017] |  :  .  |  :  .  |  :  .  |  :  .  globals: [1] ‘a’
[10:53:36.017] |  :  .  |  :  .  |  :  .  |  :  .  packages: [1] ‘future’
[10:53:36.018] |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:53:36.018] |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘Future’) ...
[10:53:36.018] |  :  .  |  :  .  |  :  .  |  :  .  state: ‘created’
[10:53:36.018] |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:36.018] |  :  .  |  :  .  |  :  .  |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:36.018] |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ...
[10:53:36.018] |  :  .  |  :  .  |  :  .  |  :  .  |  Launching futures ...
[10:53:36.018] |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:53:36.019] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Workers: [n=2]
[10:53:36.019] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:36.020] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:36.020] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ...
[10:53:36.020] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ...
[10:53:36.020] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of workers: 2
[10:53:36.021] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:53:36.021] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:36.021] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:53:36.021] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:53:36.021] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:36.021] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Total time: 0
[10:53:36.021] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:53:36.021] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:36.021] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:53:36.021] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:53:36.021] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:36.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Index of first available worker: 2
[10:53:36.022] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:53:36.100] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Worker is functional
[10:53:36.101] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ... done
[10:53:36.101] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:53:36.101] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ... done
[10:53:36.101] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:53:36.101] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:53:36.102] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ...
[10:53:36.102] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:53:36.102] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ...
[10:53:36.102] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:53:36.102] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 1): ‘future’
[10:53:36.102] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:53:36.102] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:53:36.102] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:53:36.102] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:53:36.102] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:36.103] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:53:36.103] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:36.103] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:53:36.103] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:53:36.103] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ... done
[10:53:36.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:36.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Appended future to position #2
[10:53:36.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 2
[10:53:36.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:36.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ... done
[10:53:36.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  MultisessionFuture started
[10:53:36.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:53:36.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Launching futures ... done
[10:53:36.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:36.115] |  :  .  |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ... done
[10:53:36.115] |  :  .  |  :  .  |  :  .  |  :  .  run() for Future (‘MultisessionFuture’) ... done
[10:53:36.115] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:36.116] |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:53:36.116] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:53:36.116] |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:53:36.116] |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:53:36.116] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :  [1] TRUE
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :  received data:
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :  List of 5
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ type   : chr "VALUE"
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ value  :List of 13
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ value            : num 2
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ visible          : logi TRUE
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ stdout           : chr ""
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ conditions       : list()
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ rng              : logi FALSE
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseConnections:List of 3
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ added   : NULL
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ removed : NULL
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ replaced: NULL
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseDevices    : NULL
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:36"
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:36"
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ session_uuid     : chr "f3771e206c288202d2f9ce09bd7eec68"
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ pid   : int 71858
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ r_info           :List of 4
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os           : chr "unix"
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ version          : chr "1.8"
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ success: logi TRUE
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:36.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ tag    : NULL
[10:53:36.170] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Received FutureResult
[10:53:36.170] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:36.170] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Removed future from position #2
[10:53:36.170] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:53:36.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:36.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Erased future from future backend
[10:53:36.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:36.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:36.171] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:36.171] |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:36.171] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:53:36.171] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:36.171] |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:53:36.171] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
value(b) = 2
[10:53:36.172] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:36.172] |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:53:36.172] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:53:36.172] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:36.172] |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:53:36.172] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:36.172] |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:36.173] |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:36.173] |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals found: [0] 
[10:53:36.173] |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ... DONE
[10:53:36.173] |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [0] <none>
[10:53:36.173] |  :  .  |  :  .  |  :  .  |  :  .  |  packages: [0] <none>
[10:53:36.174] |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:36.174] |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:36.174] |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:36.175] |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals found: [3] ‘+’, ‘value’, ‘a’
[10:53:36.175] |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ... DONE
[10:53:36.175] |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving globals: TRUE
[10:53:36.175] |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving any globals that are futures ...
[10:53:36.176] |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals: [3] ‘+’, ‘value’, ‘a’
[10:53:36.176] |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving any globals that are futures ... DONE
[10:53:36.176] |  :  .  |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ...
[10:53:36.176] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages associated with globals: [2] ‘base’, ‘future’
[10:53:36.176] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages: [2] ‘base’, ‘future’
[10:53:36.176] |  :  .  |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ... DONE
[10:53:36.176] |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving futures part of globals (recursively) ...
[10:53:36.177] |  :  .  |  :  .  |  :  .  |  :  .  |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:36.177] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  recursive: 99
[10:53:36.177] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  length: 1
[10:53:36.177] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  elements: ‘a’
[10:53:36.177] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  'obj' is Future
[10:53:36.177] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  run() for Future (‘Future’) ...
[10:53:36.177] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  state: ‘created’
[10:53:36.177] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:36.177] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:36.178] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ...
[10:53:36.178] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Launching futures ...
[10:53:36.178] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:53:36.178] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Workers: [n=2]
[10:53:36.178] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:36.180] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:36.180] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ...
[10:53:36.180] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ...
[10:53:36.180] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of workers: 2
[10:53:36.180] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ...
[10:53:36.180] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:36.180] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:53:36.180] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:53:36.180] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:36.180] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Total time: 0
[10:53:36.181] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ... done
[10:53:36.181] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:36.181] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:53:36.181] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:53:36.181] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:36.181] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Index of first available worker: 2
[10:53:36.181] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Validate that the worker is functional ...
Warning in serialize(data, node$con, xdr = FALSE) :
  'package:future' may not be available when loading
[10:53:36.261] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Worker is functional
[10:53:36.261] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ... done
[10:53:36.262] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:53:36.262] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestWorker() ... done
[10:53:36.262] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ...
[10:53:36.262] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:53:36.262] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ...
[10:53:36.263] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:53:36.263] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ...
[10:53:36.263] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ...
[10:53:36.263] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:53:36.263] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ... done
[10:53:36.263] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ...
[10:53:36.263] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ... done
[10:53:36.263] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ...
[10:53:36.263] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:36.263] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:53:36.264] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:36.264] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:53:36.264] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ... done
[10:53:36.264] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ... done
[10:53:36.264] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:36.264] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Appended future to position #2
[10:53:36.264] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 2
[10:53:36.265] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:36.265] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ... done
[10:53:36.265] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  MultisessionFuture started
[10:53:36.265] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:53:36.265] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ... done
[10:53:36.265] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:36.265] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ... done
[10:53:36.265] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  run() for Future (‘MultisessionFuture’) ... done
[10:53:36.265] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ...
[10:53:36.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:53:36.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:53:36.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:53:36.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ... done
[10:53:36.287] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  'obj' is MultisessionFuture
[10:53:36.287] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ...
[10:53:36.287] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:53:36.287] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:53:36.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:53:36.298] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ... done
[10:53:36.308] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  'obj' is MultisessionFuture
[10:53:36.308] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ...
[10:53:36.309] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:53:36.309] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:53:36.309] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:53:36.319] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ... done
[10:53:36.330] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  'obj' is MultisessionFuture
[10:53:36.330] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ...
[10:53:36.330] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:53:36.330] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:53:36.331] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:53:36.333] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:53:36.333] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  [1] TRUE
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  received data:
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  List of 5
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ type   : chr "VALUE"
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ value  :List of 13
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ value            : num 1
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ stdout           : chr ""
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ conditions       : list()
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ added   : NULL
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ removed : NULL
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ replaced: NULL
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:36"
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:36"
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ session_uuid     : chr "f3771e206c288202d2f9ce09bd7eec68"
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ pid   : int 71858
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ r_info           :List of 4
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ success: logi TRUE
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.028 0 0.028 0 0
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:36.334] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ tag    : NULL
[10:53:36.344] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Received FutureResult
[10:53:36.344] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:36.345] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Removed future from position #2
[10:53:36.345] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:53:36.345] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:36.345] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Erased future from future backend
[10:53:36.345] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:36.345] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:53:36.345] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:53:36.345] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:36.345] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ... done
[10:53:36.345] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Future #1
[10:53:36.346] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  value(obj, ...) ...
[10:53:36.346] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:36.346] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:36.346] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:36.346] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:36.346] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:36.346] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:36.346] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  value(obj, ...) ... done
[10:53:36.346] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  resolve(obj, ...) ...
[10:53:36.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  A MultisessionFuture was resolved
[10:53:36.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  resolve(obj, ...) ... done
[10:53:36.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  length: 0 (resolved future 1)
[10:53:36.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:36.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals: [1] ‘a’
[10:53:36.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Resolving futures part of globals (recursively) ... DONE
[10:53:36.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages after dropping 'base': [1] ‘future’
[10:53:36.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages after dropping non-attached packages: [1] ‘future’
[10:53:36.348] |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals: [1] ‘a’
[10:53:36.348] |  :  .  |  :  .  |  :  .  |  :  .  |  :  packages: [1] ‘future’
[10:53:36.348] |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:53:36.348] |  :  .  |  :  .  |  :  .  |  :  .  |  run() for Future (‘Future’) ...
[10:53:36.348] |  :  .  |  :  .  |  :  .  |  :  .  |  :  state: ‘created’
[10:53:36.348] |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:36.348] |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:36.348] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ...
[10:53:36.349] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ...
[10:53:36.349] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:53:36.349] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Workers: [n=2]
[10:53:36.349] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:36.350] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:36.351] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestWorker() ...
[10:53:36.351] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ...
[10:53:36.351] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of workers: 2
[10:53:36.351] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ...
[10:53:36.351] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:36.351] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:53:36.351] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:53:36.351] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:36.351] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Total time: 0
[10:53:36.351] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ... done
[10:53:36.352] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:36.352] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:53:36.352] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:53:36.352] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:36.352] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Index of first available worker: 2
[10:53:36.352] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:53:36.431] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Worker is functional
[10:53:36.431] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ... done
[10:53:36.432] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:53:36.432] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ... done
[10:53:36.432] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:53:36.432] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:53:36.432] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ...
[10:53:36.432] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:53:36.433] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ...
[10:53:36.433] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ...
[10:53:36.433] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘future’
[10:53:36.433] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:53:36.433] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:53:36.433] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:53:36.433] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ...
[10:53:36.433] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:36.433] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:36.434] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:36.434] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:36.434] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:53:36.434] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ... done
[10:53:36.445] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:36.445] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Appended future to position #2
[10:53:36.445] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 2
[10:53:36.445] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:36.445] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ... done
[10:53:36.446] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  MultisessionFuture started
[10:53:36.446] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:53:36.446] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Launching futures ... done
[10:53:36.446] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:36.446] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ... done
[10:53:36.446] |  :  .  |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘MultisessionFuture’) ... done
[10:53:36.446] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:36.446] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:53:36.446] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:53:36.447] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:53:36.447] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:53:36.447] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  [1] TRUE
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  received data:
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  List of 5
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ type   : chr "VALUE"
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ value  :List of 13
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ value            : num 2
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ visible          : logi TRUE
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ stdout           : chr ""
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ conditions       : list()
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ rng              : logi FALSE
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseConnections:List of 3
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ added   : NULL
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ removed : NULL
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ replaced: NULL
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseDevices    : NULL
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:36"
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:36"
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ session_uuid     : chr "f3771e206c288202d2f9ce09bd7eec68"
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ pid   : int 71858
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ random: int 2147483647
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ r_info           :List of 4
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os           : chr "unix"
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ version          : chr "1.8"
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ success: logi TRUE
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.004 0 0
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:36.489] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ tag    : NULL
[10:53:36.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Received FutureResult
[10:53:36.502] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:36.502] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Removed future from position #2
[10:53:36.502] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:53:36.502] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:36.502] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Erased future from future backend
[10:53:36.502] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:36.502] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:53:36.502] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:53:36.502] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:36.502] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:36.503] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:36.503] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:36.503] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
value(b) = 2
[10:53:36.503] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:36.503] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:36.503] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:36.503] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:36.503] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:36.503] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:36.504] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:36.504] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘conservative’
[10:53:36.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals found: [2] ‘{’, ‘pkg’
[10:53:36.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ... DONE
[10:53:36.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving globals: TRUE
[10:53:36.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving any globals that are futures ...
[10:53:36.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [2] ‘{’, ‘pkg’
[10:53:36.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving any globals that are futures ... DONE
[10:53:36.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ...
[10:53:36.506] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages associated with globals: [1] ‘base’
[10:53:36.506] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages: [1] ‘base’
[10:53:36.506] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:53:36.506] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving futures part of globals (recursively) ...
[10:53:36.506] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:36.506] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  recursive: 99
[10:53:36.507] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  length: 1
[10:53:36.507] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  elements: ‘pkg’
[10:53:36.507] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  'obj' is atomic
[10:53:36.507] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  length: 0 (resolved future 1)
[10:53:36.507] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:36.507] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [1] ‘pkg’
[10:53:36.507] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving futures part of globals (recursively) ... DONE
[10:53:36.507] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages after dropping 'base': [0] 
[10:53:36.507] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals: [1] ‘pkg’
[10:53:36.507] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  packages: [0] 
[10:53:36.508] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:53:36.508] |  :  .  |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘Future’) ...
[10:53:36.508] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  state: ‘created’
[10:53:36.508] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:36.508] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:36.508] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ...
[10:53:36.508] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Launching futures ...
[10:53:36.508] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:53:36.509] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Workers: [n=2]
[10:53:36.509] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:36.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:36.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ...
[10:53:36.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ...
[10:53:36.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of workers: 2
[10:53:36.511] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:53:36.511] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:36.511] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:53:36.511] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:53:36.511] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:36.511] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Total time: 0
[10:53:36.511] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:53:36.511] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:36.511] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:53:36.511] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:53:36.511] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:36.512] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Index of first available worker: 2
[10:53:36.512] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:53:36.592] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Worker is functional
[10:53:36.592] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ... done
[10:53:36.593] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:53:36.593] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ... done
[10:53:36.593] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:53:36.593] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:53:36.593] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ...
[10:53:36.593] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:53:36.594] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ...
[10:53:36.594] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:53:36.594] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:53:36.594] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:53:36.594] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:53:36.594] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:53:36.594] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:53:36.594] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:36.594] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:53:36.595] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:36.595] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:53:36.595] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:53:36.595] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ... done
[10:53:36.595] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:36.595] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Appended future to position #2
[10:53:36.595] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 2
[10:53:36.595] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:36.596] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ... done
[10:53:36.596] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  MultisessionFuture started
[10:53:36.596] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:53:36.596] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Launching futures ... done
[10:53:36.596] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:36.596] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ... done
[10:53:36.596] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  run() for Future (‘MultisessionFuture’) ... done
[10:53:36.596] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:36.596] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:53:36.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:53:36.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:53:36.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:53:36.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:53:36.639] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  [1] TRUE
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  received data:
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  List of 5
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ type   : chr "VALUE"
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ value  :List of 13
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ value            : chr "foo"
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ visible          : logi TRUE
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ stdout           : chr ""
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ conditions       : list()
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ rng              : logi FALSE
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseConnections:List of 3
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ added   : NULL
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ removed : NULL
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ replaced: NULL
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseDevices    : NULL
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:36"
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:36"
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ session_uuid     : chr "f3771e206c288202d2f9ce09bd7eec68"
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ pid   : int 71858
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ r_info           :List of 4
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os           : chr "unix"
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ version          : chr "1.8"
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ success: logi TRUE
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:36.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ tag    : NULL
[10:53:36.650] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Received FutureResult
[10:53:36.650] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:36.650] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Removed future from position #2
[10:53:36.650] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:53:36.650] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:36.650] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Erased future from future backend
[10:53:36.650] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:36.651] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:36.651] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:36.651] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:36.651] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:53:36.651] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:36.651] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:53:36.651] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
value(f) = ‘foo’
Method for identifying globals: 'conservative' ... DONE
Method for identifying globals: 'ordered' ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:36.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:36.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:36.654] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals found: [4] ‘{’, ‘<-’, ‘a’, ‘*’
[10:53:36.654] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ... DONE
[10:53:36.654] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving globals: TRUE
[10:53:36.654] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving any globals that are futures ...
[10:53:36.654] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals: [4] ‘{’, ‘<-’, ‘a’, ‘*’
[10:53:36.655] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving any globals that are futures ... DONE
[10:53:36.655] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ...
[10:53:36.655] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages associated with globals: [1] ‘base’
[10:53:36.655] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages: [1] ‘base’
[10:53:36.655] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ... DONE
[10:53:36.655] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving futures part of globals (recursively) ...
[10:53:36.656] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:36.656] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  recursive: 99
[10:53:36.656] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  length: 1
[10:53:36.656] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  elements: ‘a’
[10:53:36.656] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  'obj' is atomic
[10:53:36.656] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  length: 0 (resolved future 1)
[10:53:36.656] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:36.656] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals: [1] ‘a’
[10:53:36.656] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving futures part of globals (recursively) ... DONE
[10:53:36.656] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages after dropping 'base': [0] 
[10:53:36.657] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [1] ‘a’
[10:53:36.657] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  packages: [0] 
[10:53:36.657] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:53:36.657] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  run() for Future (‘Future’) ...
[10:53:36.657] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  state: ‘created’
[10:53:36.657] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:36.657] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:36.657] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ...
[10:53:36.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Launching futures ...
[10:53:36.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:53:36.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Workers: [n=2]
[10:53:36.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:36.659] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:36.659] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ...
[10:53:36.660] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ...
[10:53:36.660] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of workers: 2
[10:53:36.660] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ...
[10:53:36.660] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:36.660] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:53:36.660] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:53:36.660] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:36.660] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Total time: 0
[10:53:36.660] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ... done
[10:53:36.660] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:36.660] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:53:36.661] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:53:36.661] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:36.661] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Index of first available worker: 2
[10:53:36.661] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Validate that the worker is functional ...
[10:53:36.739] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Worker is functional
[10:53:36.740] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ... done
[10:53:36.740] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:53:36.740] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestWorker() ... done
[10:53:36.740] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ...
[10:53:36.741] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:53:36.741] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ...
[10:53:36.741] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:53:36.741] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ...
[10:53:36.741] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ...
[10:53:36.741] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:53:36.741] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ... done
[10:53:36.741] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ...
[10:53:36.741] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ... done
[10:53:36.741] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ...
[10:53:36.742] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:36.742] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:53:36.742] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:36.742] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:53:36.742] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ... done
[10:53:36.742] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ... done
[10:53:36.742] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:36.743] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Appended future to position #2
[10:53:36.743] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 2
[10:53:36.743] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:36.743] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ... done
[10:53:36.743] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  MultisessionFuture started
[10:53:36.743] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:53:36.743] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ... done
[10:53:36.743] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:36.743] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ... done
[10:53:36.743] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  run() for Future (‘MultisessionFuture’) ... done
[10:53:36.744] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:36.744] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:53:36.744] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:53:36.744] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:53:36.744] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:53:36.744] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:53:36.786] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  [1] TRUE
[10:53:36.786] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  received data:
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  List of 5
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ type   : chr "VALUE"
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ value  :List of 13
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ value            : num 6
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ stdout           : chr ""
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ conditions       : list()
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ added   : NULL
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ removed : NULL
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ replaced: NULL
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:36"
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:36"
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ session_uuid     : chr "f3771e206c288202d2f9ce09bd7eec68"
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ pid   : int 71858
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ r_info           :List of 4
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ success: logi TRUE
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:36.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ tag    : NULL
[10:53:36.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Received FutureResult
[10:53:36.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:36.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Removed future from position #2
[10:53:36.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:53:36.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:36.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Erased future from future backend
[10:53:36.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:36.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:53:36.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:53:36.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:36.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:53:36.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:36.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:53:36.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
y = 6
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:36.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:36.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:36.801] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals found: [4] ‘{’, ‘<-’, ‘a’, ‘*’
[10:53:36.801] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Searching for globals ... DONE
[10:53:36.801] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Resolving globals: TRUE
[10:53:36.801] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Resolving any globals that are futures ...
[10:53:36.801] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals: [4] ‘{’, ‘<-’, ‘a’, ‘*’
[10:53:36.801] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Resolving any globals that are futures ... DONE
[10:53:36.802] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ...
[10:53:36.802] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages associated with globals: [1] ‘base’
[10:53:36.802] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages: [1] ‘base’
[10:53:36.802] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ... DONE
[10:53:36.802] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Resolving futures part of globals (recursively) ...
[10:53:36.803] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:36.803] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  recursive: 99
[10:53:36.803] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  length: 1
[10:53:36.803] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  elements: ‘a’
[10:53:36.803] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  'obj' is atomic
[10:53:36.803] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  length: 0 (resolved future 1)
[10:53:36.803] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:36.803] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals: [1] ‘a’
[10:53:36.803] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Resolving futures part of globals (recursively) ... DONE
[10:53:36.803] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages after dropping 'base': [0] 
[10:53:36.804] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals: [1] ‘a’
[10:53:36.804] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  packages: [0] 
[10:53:36.804] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:53:36.804] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  run() for Future (‘Future’) ...
[10:53:36.804] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  state: ‘created’
[10:53:36.804] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:36.804] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:36.805] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ...
[10:53:36.805] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ...
[10:53:36.805] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:53:36.805] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Workers: [n=2]
[10:53:36.805] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:36.808] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:36.809] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestWorker() ...
[10:53:36.809] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ...
[10:53:36.809] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of workers: 2
[10:53:36.809] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ...
[10:53:36.809] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:36.809] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:53:36.809] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:53:36.809] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:36.809] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Total time: 0
[10:53:36.809] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ... done
[10:53:36.810] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:36.810] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:53:36.810] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:53:36.810] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:36.810] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Index of first available worker: 2
[10:53:36.810] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:53:36.892] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Worker is functional
[10:53:36.892] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ... done
[10:53:36.892] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:53:36.893] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ... done
[10:53:36.893] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:53:36.893] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:53:36.893] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ...
[10:53:36.893] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:53:36.893] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ...
[10:53:36.893] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ...
[10:53:36.894] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:36.894] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:53:36.894] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:53:36.894] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:53:36.894] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ...
[10:53:36.894] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:36.894] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:36.894] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:36.894] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:36.895] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:53:36.895] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ... done
[10:53:36.895] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:36.895] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Appended future to position #2
[10:53:36.895] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 2
[10:53:36.895] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:36.895] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ... done
[10:53:36.895] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  MultisessionFuture started
[10:53:36.896] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:53:36.896] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Launching futures ... done
[10:53:36.896] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:36.896] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ... done
[10:53:36.896] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘MultisessionFuture’) ... done
[10:53:36.896] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:36.896] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:53:36.896] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:53:36.897] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:53:36.897] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:53:36.897] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:53:36.938] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  [1] TRUE
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  received data:
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  List of 5
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ type   : chr "VALUE"
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ value  :List of 13
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ value            : num 6
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ visible          : logi TRUE
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ stdout           : chr ""
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ conditions       : list()
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ rng              : logi FALSE
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseConnections:List of 3
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ added   : NULL
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ removed : NULL
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ replaced: NULL
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseDevices    : NULL
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:36"
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:36"
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ session_uuid     : chr "f3771e206c288202d2f9ce09bd7eec68"
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ pid   : int 71858
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ random: int 2147483647
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ r_info           :List of 4
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os           : chr "unix"
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ version          : chr "1.8"
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ success: logi TRUE
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:36.939] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ tag    : NULL
[10:53:36.949] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Received FutureResult
[10:53:36.950] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:36.950] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Removed future from position #2
[10:53:36.950] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:53:36.950] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:36.950] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Erased future from future backend
[10:53:36.950] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:36.950] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:53:36.950] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:53:36.950] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:36.950] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:36.951] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:36.951] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:36.951] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
y = 6
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:36.951] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:36.952] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:36.954] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals found: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:36.954] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ... DONE
[10:53:36.954] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving globals: TRUE
[10:53:36.954] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving any globals that are futures ...
[10:53:36.954] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:36.954] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving any globals that are futures ... DONE
[10:53:36.954] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ...
[10:53:36.955] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages associated with globals: [1] ‘base’
[10:53:36.955] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages: [1] ‘base’
[10:53:36.955] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:53:36.955] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving futures part of globals (recursively) ...
[10:53:36.955] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:36.955] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  recursive: 99
[10:53:36.956] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  length: 2
[10:53:36.956] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  elements: ‘a’, ‘ii’
[10:53:36.956] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  'obj' is atomic
[10:53:36.956] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  length: 1 (resolved future 1)
[10:53:36.956] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  'obj' is atomic
[10:53:36.956] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  length: 0 (resolved future 2)
[10:53:36.956] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:36.956] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [2] ‘a’, ‘ii’
[10:53:36.956] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving futures part of globals (recursively) ... DONE
[10:53:36.957] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages after dropping 'base': [0] 
[10:53:36.957] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals: [2] ‘a’, ‘ii’
[10:53:36.957] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  packages: [0] 
[10:53:36.957] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:53:36.957] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘Future’) ...
[10:53:36.957] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  state: ‘created’
[10:53:36.957] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:36.957] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:36.957] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ...
[10:53:36.958] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Launching futures ...
[10:53:36.958] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:53:36.958] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Workers: [n=2]
[10:53:36.958] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:36.959] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:36.960] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ...
[10:53:36.960] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ...
[10:53:36.960] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of workers: 2
[10:53:36.960] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:53:36.960] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:36.960] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:53:36.960] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:53:36.960] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:36.960] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Total time: 0
[10:53:36.960] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:53:36.961] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:36.961] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:53:36.961] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:53:36.961] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:36.961] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Index of first available worker: 2
[10:53:36.961] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:53:37.039] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Worker is functional
[10:53:37.039] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ... done
[10:53:37.040] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:53:37.040] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ... done
[10:53:37.040] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:53:37.040] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:53:37.040] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ...
[10:53:37.040] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:53:37.041] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ...
[10:53:37.041] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:53:37.041] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:53:37.041] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:53:37.041] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:53:37.041] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:53:37.041] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:53:37.041] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:37.041] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:53:37.041] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:37.042] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:53:37.042] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:53:37.042] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ... done
[10:53:37.042] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:37.042] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Appended future to position #2
[10:53:37.042] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 2
[10:53:37.042] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:37.043] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ... done
[10:53:37.043] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  MultisessionFuture started
[10:53:37.043] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:53:37.043] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Launching futures ... done
[10:53:37.043] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:37.043] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ... done
[10:53:37.043] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  run() for Future (‘MultisessionFuture’) ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:37.044] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:37.044] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:37.046] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals found: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:37.046] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ... DONE
[10:53:37.046] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving globals: TRUE
[10:53:37.046] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving any globals that are futures ...
[10:53:37.046] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:37.046] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving any globals that are futures ... DONE
[10:53:37.046] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ...
[10:53:37.047] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages associated with globals: [1] ‘base’
[10:53:37.047] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages: [1] ‘base’
[10:53:37.047] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ... DONE
[10:53:37.047] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving futures part of globals (recursively) ...
[10:53:37.047] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:37.048] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  recursive: 99
[10:53:37.048] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  length: 2
[10:53:37.048] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  elements: ‘a’, ‘ii’
[10:53:37.048] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  'obj' is atomic
[10:53:37.048] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  length: 1 (resolved future 1)
[10:53:37.048] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  'obj' is atomic
[10:53:37.048] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  length: 0 (resolved future 2)
[10:53:37.048] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:37.048] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals: [2] ‘a’, ‘ii’
[10:53:37.048] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving futures part of globals (recursively) ... DONE
[10:53:37.049] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages after dropping 'base': [0] 
[10:53:37.049] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [2] ‘a’, ‘ii’
[10:53:37.049] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  packages: [0] 
[10:53:37.049] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:53:37.049] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  run() for Future (‘Future’) ...
[10:53:37.049] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  state: ‘created’
[10:53:37.049] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:37.049] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:37.050] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ...
[10:53:37.050] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Launching futures ...
[10:53:37.050] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:53:37.050] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Workers: [n=2]
[10:53:37.050] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:37.051] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:37.052] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ...
[10:53:37.052] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ...
[10:53:37.052] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of workers: 2
[10:53:37.052] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ...
[10:53:37.052] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:37.052] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:53:37.052] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 2
[10:53:37.052] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:37.052] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Poll #1 (0): usedNodes() = 2, workers = 2
[10:53:37.063] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'collect-first', earlySignal = 1) ...
[10:53:37.063] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  collectValues('workers-674da372c1cdbb2f9cb15750fed89f93', firstOnly = TRUE) ...
[10:53:37.063] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:53:37.063] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:53:37.063] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:53:37.064] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:53:37.064] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:53:37.064] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:53:37.064] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  [1] TRUE
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  received data:
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  List of 5
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ type   : chr "VALUE"
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ value  :List of 13
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ value            : NULL
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ visible          : logi TRUE
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ stdout           : chr ""
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ conditions       :List of 1
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ :List of 5
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ condition:List of 2
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ message: chr "object 'a' not found"
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ call   : language eval(quote({     { ...
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ calls    :List of 9
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval(expr, envir = globalenv())
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval(expr, envir = globalenv())
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ : language local({     { ...
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval.parent(substitute(eval(quote(expr), envir)))
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval(expr, p)
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval(expr, p)
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval(quote({     { ...
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval(quote({     { ...
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval(quote({     { ...
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ session  :List of 6
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ r         :List of 14
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ platform      : chr "x86_64-pc-linux-gnu"
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ arch          : chr "x86_64"
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ os            : chr "linux-gnu"
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ system        : chr "x86_64, linux-gnu"
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ status        : chr ""
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ major         : chr "4"
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ minor         : chr "5.0"
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ year          : chr "2025"
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ month         : chr "04"
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ day           : chr "11"
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ svn rev       : chr "88135"
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ language      : chr "R"
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ version.string: chr "R version 4.5.0 (2025-04-11)"
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ nickname      : chr "How About a Twenty-Six"
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ locale    : chr "LC_CTYPE=en_US.UTF-8;LC_NUMERIC=C;LC_TIME=en_US.UTF-8;LC_COLLATE=en_US.UTF-8;LC_MONETARY=en_US.UTF-8;LC_MESSAGE"| __truncated__
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ rngkind   : chr [1:3] "Mersenne-Twister" "Inversion" "Rejection"
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ namespaces: chr [1:16] "compiler" "parallelly" "graphics" "tools" ...
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ search    : chr [1:10] ".GlobalEnv" "package:future" "package:stats" "package:graphics" ...
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ system    : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ timestamp: POSIXct[1:1], format: "2025-05-06 10:53:35"
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ signaled : int 0
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ rng              : logi FALSE
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseConnections:List of 3
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ added   : NULL
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ removed : NULL
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ replaced: NULL
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseDevices    : NULL
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:35"
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:35"
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ session_uuid     : chr "5d15a281f131932d962b0d409d3d3a4d"
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ pid   : int 71859
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ r_info           :List of 4
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os           : chr "unix"
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ version          : chr "1.8"
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ success: logi TRUE
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.003 0.001 0.003 0 0
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:37.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ tag    : NULL
[10:53:37.093] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Received FutureResult
[10:53:37.093] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:37.093] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Removed future from position #1
[10:53:37.093] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:53:37.093] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:37.093] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Erased future from future backend
[10:53:37.093] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:37.093] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:37.093] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:37.094] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  signalConditions() ...
[10:53:37.094] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  include = ‘immediateCondition’
[10:53:37.094] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  exclude = 
[10:53:37.094] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  resignal = FALSE
[10:53:37.094] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of conditions: 1
[10:53:37.094] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  signalConditions() ... done
[10:53:37.094] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:37.094] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:53:37.094] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Future at position #1 is resolved ...
[10:53:37.094] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:37.095] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:53:37.095] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:53:37.095] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:37.095] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:53:37.095] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:53:37.095] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditions() ...
[10:53:37.095] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  include = ‘immediateCondition’
[10:53:37.095] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  exclude = 
[10:53:37.095] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  resignal = FALSE
[10:53:37.095] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of conditions: 1
[10:53:37.096] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditions() ... done
[10:53:37.096] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Future at position #1 is resolved ... done
[10:53:37.096] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  collectValues('workers-674da372c1cdbb2f9cb15750fed89f93', firstOnly = TRUE) ... done
[10:53:37.096] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Early signaling of 2 future candidates ...
[10:53:37.096] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of futures with early signaling requested: 0
[10:53:37.096] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Early signaling of 2 future candidates ... done
[10:53:37.096] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 2
[10:53:37.096] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'collect-first', earlySignal = 1) ... done
[10:53:37.096] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:37.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:53:37.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:53:37.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:37.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Total time: 0.0443198680877686
[10:53:37.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ... done
[10:53:37.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:37.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:53:37.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:53:37.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:37.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Index of first available worker: 1
[10:53:37.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Validate that the worker is functional ...
[10:53:37.179] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Worker is functional
[10:53:37.180] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ... done
[10:53:37.180] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:53:37.180] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestWorker() ... done
[10:53:37.180] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ...
[10:53:37.181] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:53:37.181] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ...
[10:53:37.181] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:53:37.181] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ...
[10:53:37.181] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ...
[10:53:37.181] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:53:37.181] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ... done
[10:53:37.181] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ...
[10:53:37.181] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ... done
[10:53:37.182] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ...
[10:53:37.182] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:37.182] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:53:37.182] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:37.182] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:53:37.182] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ... done
[10:53:37.182] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ... done
[10:53:37.183] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:37.183] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Appended future to position #2
[10:53:37.183] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 2
[10:53:37.183] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:37.183] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ... done
[10:53:37.183] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  MultisessionFuture started
[10:53:37.183] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:53:37.183] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ... done
[10:53:37.183] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:37.183] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ... done
[10:53:37.184] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  run() for Future (‘MultisessionFuture’) ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:37.184] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:37.184] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:37.186] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals found: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:37.187] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Searching for globals ... DONE
[10:53:37.187] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Resolving globals: TRUE
[10:53:37.187] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Resolving any globals that are futures ...
[10:53:37.187] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:37.187] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Resolving any globals that are futures ... DONE
[10:53:37.187] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ...
[10:53:37.187] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages associated with globals: [1] ‘base’
[10:53:37.188] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages: [1] ‘base’
[10:53:37.188] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ... DONE
[10:53:37.188] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Resolving futures part of globals (recursively) ...
[10:53:37.188] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:37.188] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  recursive: 99
[10:53:37.188] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  length: 2
[10:53:37.188] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  elements: ‘a’, ‘ii’
[10:53:37.189] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  'obj' is atomic
[10:53:37.189] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  length: 1 (resolved future 1)
[10:53:37.189] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  'obj' is atomic
[10:53:37.189] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  length: 0 (resolved future 2)
[10:53:37.189] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:37.189] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals: [2] ‘a’, ‘ii’
[10:53:37.189] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Resolving futures part of globals (recursively) ... DONE
[10:53:37.189] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages after dropping 'base': [0] 
[10:53:37.189] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals: [2] ‘a’, ‘ii’
[10:53:37.190] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  packages: [0] 
[10:53:37.190] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:53:37.190] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  run() for Future (‘Future’) ...
[10:53:37.190] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  state: ‘created’
[10:53:37.190] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:37.190] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:37.190] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ...
[10:53:37.190] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ...
[10:53:37.191] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:53:37.191] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Workers: [n=2]
[10:53:37.191] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:37.192] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:37.193] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestWorker() ...
[10:53:37.193] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ...
[10:53:37.193] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of workers: 2
[10:53:37.193] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ...
[10:53:37.193] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:37.193] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:53:37.193] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 2
[10:53:37.193] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:37.193] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Poll #1 (0): usedNodes() = 2, workers = 2
[10:53:37.204] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'collect-first', earlySignal = 1) ...
[10:53:37.204] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  collectValues('workers-674da372c1cdbb2f9cb15750fed89f93', firstOnly = TRUE) ...
[10:53:37.204] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ...
[10:53:37.204] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:53:37.204] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:53:37.205] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:53:37.205] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:53:37.205] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:53:37.205] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  [1] TRUE
[10:53:37.205] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  received data:
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  List of 5
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ type   : chr "VALUE"
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ value  :List of 13
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ value            : num 1
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ stdout           : chr ""
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ conditions       : list()
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ added   : NULL
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ removed : NULL
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ replaced: NULL
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:37"
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:37"
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ session_uuid     : chr "f3771e206c288202d2f9ce09bd7eec68"
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ pid   : int 71858
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ r_info           :List of 4
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ success: logi TRUE
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:37.206] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ tag    : NULL
[10:53:37.216] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Received FutureResult
[10:53:37.216] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:37.216] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Removed future from position #1
[10:53:37.216] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Number of registered futures: 1
[10:53:37.217] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:37.217] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Erased future from future backend
[10:53:37.217] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:37.217] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result already collected: FutureResult
[10:53:37.217] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:53:37.217] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:37.217] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ... done
[10:53:37.217] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Future at position #1 is resolved ...
[10:53:37.217] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:37.217] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:37.218] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:37.218] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:37.218] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:37.218] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:37.218] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Future at position #1 is resolved ... done
[10:53:37.218] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  collectValues('workers-674da372c1cdbb2f9cb15750fed89f93', firstOnly = TRUE) ... done
[10:53:37.218] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Early signaling of 2 future candidates ...
[10:53:37.218] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of futures with early signaling requested: 0
[10:53:37.218] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Early signaling of 2 future candidates ... done
[10:53:37.219] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 2
[10:53:37.219] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'collect-first', earlySignal = 1) ... done
[10:53:37.219] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:37.219] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:53:37.219] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:53:37.219] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:37.219] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Total time: 0.0257835388183594
[10:53:37.219] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ... done
[10:53:37.219] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:37.219] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:53:37.220] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:53:37.220] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:37.220] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Index of first available worker: 2
[10:53:37.220] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:53:37.299] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Worker is functional
[10:53:37.300] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ... done
[10:53:37.300] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:53:37.300] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ... done
[10:53:37.300] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:53:37.300] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:53:37.301] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ...
[10:53:37.301] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:53:37.301] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ...
[10:53:37.301] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ...
[10:53:37.301] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:37.301] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:53:37.301] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:53:37.301] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:53:37.301] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ...
[10:53:37.302] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:37.302] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:53:37.302] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:37.302] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:37.302] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:53:37.302] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ... done
[10:53:37.302] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:37.303] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Appended future to position #2
[10:53:37.303] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 2
[10:53:37.303] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:37.303] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ... done
[10:53:37.303] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  MultisessionFuture started
[10:53:37.303] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:53:37.303] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Launching futures ... done
[10:53:37.303] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:37.303] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ... done
[10:53:37.303] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘MultisessionFuture’) ... done
[10:53:37.304] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:37.304] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:37.304] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:37.304] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:37.304] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:37.304] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:37.304] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:37.305] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:53:37.305] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:53:37.305] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:53:37.305] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:53:37.305] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:53:37.305] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  [1] TRUE
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  received data:
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  List of 5
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ type   : chr "VALUE"
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ value  :List of 13
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ value            : num 2
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ visible          : logi TRUE
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ stdout           : chr ""
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ conditions       : list()
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ rng              : logi FALSE
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseConnections:List of 3
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ added   : NULL
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ removed : NULL
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ replaced: NULL
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseDevices    : NULL
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:37"
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:37"
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ session_uuid     : chr "5d15a281f131932d962b0d409d3d3a4d"
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ pid   : int 71859
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ random: int 2147483647
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ r_info           :List of 4
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os           : chr "unix"
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ version          : chr "1.8"
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ success: logi TRUE
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:37.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ tag    : NULL
[10:53:37.316] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Received FutureResult
[10:53:37.316] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:37.316] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Removed future from position #1
[10:53:37.316] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:53:37.316] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:37.316] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Erased future from future backend
[10:53:37.317] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:37.317] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:53:37.317] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:53:37.317] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:37.317] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:37.317] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:37.317] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:37.317] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:37.317] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:37.318] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:53:37.318] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:53:37.318] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:53:37.318] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:53:37.318] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  [1] TRUE
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  received data:
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  List of 5
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ type   : chr "VALUE"
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ value  :List of 13
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ value            : num 3
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ visible          : logi TRUE
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ stdout           : chr ""
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ conditions       : list()
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ rng              : logi FALSE
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseConnections:List of 3
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ added   : NULL
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ removed : NULL
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ replaced: NULL
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseDevices    : NULL
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:37"
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:37"
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ session_uuid     : chr "f3771e206c288202d2f9ce09bd7eec68"
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ pid   : int 71858
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ random: int 2147483647
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ r_info           :List of 4
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os           : chr "unix"
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ version          : chr "1.8"
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ success: logi TRUE
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:37.347] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ tag    : NULL
[10:53:37.360] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Received FutureResult
[10:53:37.360] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:37.360] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Removed future from position #1
[10:53:37.360] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:53:37.360] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:37.360] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Erased future from future backend
[10:53:37.360] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:37.360] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:53:37.361] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:53:37.361] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:37.361] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:37.361] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:37.361] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:37.361] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[1] 1 2 3
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:37.362] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:37.362] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:37.364] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals found: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:37.364] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ... DONE
[10:53:37.364] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving globals: TRUE
[10:53:37.364] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving any globals that are futures ...
[10:53:37.364] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:37.364] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving any globals that are futures ... DONE
[10:53:37.365] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ...
[10:53:37.365] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages associated with globals: [1] ‘base’
[10:53:37.365] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages: [1] ‘base’
[10:53:37.365] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:53:37.365] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving futures part of globals (recursively) ...
[10:53:37.365] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:37.366] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  recursive: 99
[10:53:37.366] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  length: 2
[10:53:37.366] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  elements: ‘a’, ‘ii’
[10:53:37.366] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  'obj' is atomic
[10:53:37.366] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  length: 1 (resolved future 1)
[10:53:37.366] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  'obj' is atomic
[10:53:37.366] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  length: 0 (resolved future 2)
[10:53:37.366] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:37.366] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [2] ‘a’, ‘ii’
[10:53:37.367] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving futures part of globals (recursively) ... DONE
[10:53:37.367] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages after dropping 'base': [0] 
[10:53:37.367] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals: [2] ‘a’, ‘ii’
[10:53:37.367] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  packages: [0] 
[10:53:37.367] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:37.368] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:37.368] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:37.370] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals found: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:37.370] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ... DONE
[10:53:37.370] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving globals: TRUE
[10:53:37.370] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving any globals that are futures ...
[10:53:37.370] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:37.370] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving any globals that are futures ... DONE
[10:53:37.370] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ...
[10:53:37.371] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages associated with globals: [1] ‘base’
[10:53:37.371] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages: [1] ‘base’
[10:53:37.371] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:53:37.371] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving futures part of globals (recursively) ...
[10:53:37.371] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:37.371] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  recursive: 99
[10:53:37.372] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  length: 2
[10:53:37.372] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  elements: ‘a’, ‘ii’
[10:53:37.372] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  'obj' is atomic
[10:53:37.372] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  length: 1 (resolved future 1)
[10:53:37.372] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  'obj' is atomic
[10:53:37.372] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  length: 0 (resolved future 2)
[10:53:37.372] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:37.372] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [2] ‘a’, ‘ii’
[10:53:37.372] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving futures part of globals (recursively) ... DONE
[10:53:37.373] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages after dropping 'base': [0] 
[10:53:37.373] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals: [2] ‘a’, ‘ii’
[10:53:37.373] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  packages: [0] 
[10:53:37.373] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:37.373] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:37.374] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:37.376] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals found: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:37.376] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ... DONE
[10:53:37.376] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving globals: TRUE
[10:53:37.376] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving any globals that are futures ...
[10:53:37.376] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [5] ‘{’, ‘<-’, ‘*’, ‘a’, ‘ii’
[10:53:37.376] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving any globals that are futures ... DONE
[10:53:37.376] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ...
[10:53:37.376] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages associated with globals: [1] ‘base’
[10:53:37.377] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages: [1] ‘base’
[10:53:37.377] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:53:37.377] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving futures part of globals (recursively) ...
[10:53:37.377] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:37.377] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  recursive: 99
[10:53:37.377] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  length: 2
[10:53:37.378] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  elements: ‘a’, ‘ii’
[10:53:37.378] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  'obj' is atomic
[10:53:37.378] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  length: 1 (resolved future 1)
[10:53:37.378] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  'obj' is atomic
[10:53:37.378] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  length: 0 (resolved future 2)
[10:53:37.378] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:37.378] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [2] ‘a’, ‘ii’
[10:53:37.378] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving futures part of globals (recursively) ... DONE
[10:53:37.378] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages after dropping 'base': [0] 
[10:53:37.378] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals: [2] ‘a’, ‘ii’
[10:53:37.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  packages: [0] 
[10:53:37.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:53:37.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘Future’) ...
[10:53:37.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  state: ‘created’
[10:53:37.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:37.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:37.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ...
[10:53:37.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Launching futures ...
[10:53:37.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:53:37.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Workers: [n=2]
[10:53:37.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:37.381] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:37.382] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ...
[10:53:37.382] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ...
[10:53:37.382] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of workers: 2
[10:53:37.382] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:53:37.382] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:37.382] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:53:37.382] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:53:37.382] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:37.382] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Total time: 0
[10:53:37.382] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:53:37.383] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:37.383] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:53:37.383] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:53:37.383] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:37.383] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Index of first available worker: 1
[10:53:37.383] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:53:37.463] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Worker is functional
[10:53:37.463] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ... done
[10:53:37.463] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:53:37.463] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ... done
[10:53:37.463] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:53:37.464] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:53:37.464] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ...
[10:53:37.464] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:53:37.464] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ...
[10:53:37.464] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:53:37.464] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:53:37.465] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:53:37.465] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:53:37.465] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:53:37.465] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:53:37.465] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:37.465] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:53:37.465] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:37.465] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:53:37.465] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:53:37.466] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ... done
[10:53:37.466] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:37.466] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Appended future to position #1
[10:53:37.466] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:53:37.466] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:37.466] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ... done
[10:53:37.466] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  MultisessionFuture started
[10:53:37.467] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:53:37.467] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Launching futures ... done
[10:53:37.467] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:37.467] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ... done
[10:53:37.467] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  run() for Future (‘MultisessionFuture’) ... done
[10:53:37.467] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:37.467] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:53:37.467] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:53:37.468] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:53:37.468] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:53:37.468] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:53:37.509] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  [1] TRUE
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  received data:
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  List of 5
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ type   : chr "VALUE"
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ value  :List of 13
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ value            : num 1
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ visible          : logi TRUE
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ stdout           : chr ""
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ conditions       : list()
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ rng              : logi FALSE
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseConnections:List of 3
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ added   : NULL
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ removed : NULL
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ replaced: NULL
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseDevices    : NULL
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:37"
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:37"
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ session_uuid     : chr "5d15a281f131932d962b0d409d3d3a4d"
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ pid   : int 71859
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ r_info           :List of 4
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os           : chr "unix"
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ version          : chr "1.8"
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ success: logi TRUE
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:37.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ tag    : NULL
[10:53:37.521] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Received FutureResult
[10:53:37.521] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:37.521] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Removed future from position #1
[10:53:37.521] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:53:37.521] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:37.521] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Erased future from future backend
[10:53:37.521] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:37.521] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:37.521] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:37.522] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:37.522] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:53:37.522] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:37.522] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:53:37.522] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:53:37.522] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  run() for Future (‘Future’) ...
[10:53:37.522] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  state: ‘created’
[10:53:37.522] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:37.522] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:37.523] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ...
[10:53:37.523] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Launching futures ...
[10:53:37.523] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:53:37.523] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Workers: [n=2]
[10:53:37.523] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:37.525] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:37.525] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ...
[10:53:37.525] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ...
[10:53:37.525] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of workers: 2
[10:53:37.525] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ...
[10:53:37.525] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:37.525] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:53:37.525] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:53:37.525] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:37.526] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Total time: 0
[10:53:37.526] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ... done
[10:53:37.526] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:37.526] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:53:37.526] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:53:37.526] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:37.526] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Index of first available worker: 1
[10:53:37.526] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Validate that the worker is functional ...
[10:53:37.605] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Worker is functional
[10:53:37.605] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ... done
[10:53:37.605] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:53:37.605] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestWorker() ... done
[10:53:37.605] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ...
[10:53:37.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:53:37.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ...
[10:53:37.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:53:37.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ...
[10:53:37.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ...
[10:53:37.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:53:37.607] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ... done
[10:53:37.607] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ...
[10:53:37.607] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ... done
[10:53:37.607] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ...
[10:53:37.607] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:37.607] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:53:37.607] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:37.607] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:53:37.607] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ... done
[10:53:37.608] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ... done
[10:53:37.608] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:37.608] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Appended future to position #1
[10:53:37.608] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:53:37.608] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:37.608] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ... done
[10:53:37.608] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  MultisessionFuture started
[10:53:37.608] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:53:37.609] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ... done
[10:53:37.609] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:37.609] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ... done
[10:53:37.609] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  run() for Future (‘MultisessionFuture’) ... done
[10:53:37.609] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:37.609] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:53:37.609] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:53:37.610] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:53:37.610] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:53:37.610] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:53:37.651] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  [1] TRUE
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  received data:
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  List of 5
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ type   : chr "VALUE"
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ value  :List of 13
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ value            : num 2
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ stdout           : chr ""
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ conditions       : list()
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ added   : NULL
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ removed : NULL
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ replaced: NULL
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:37"
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:37"
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ session_uuid     : chr "5d15a281f131932d962b0d409d3d3a4d"
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ pid   : int 71859
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ r_info           :List of 4
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ success: logi TRUE
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:37.652] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ tag    : NULL
[10:53:37.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Received FutureResult
[10:53:37.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:37.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Removed future from position #1
[10:53:37.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:53:37.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:37.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Erased future from future backend
[10:53:37.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:37.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:53:37.666] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:53:37.666] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:37.666] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:53:37.666] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:37.666] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:53:37.666] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:53:37.666] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  run() for Future (‘Future’) ...
[10:53:37.666] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  state: ‘created’
[10:53:37.666] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:37.667] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:37.667] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ...
[10:53:37.667] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ...
[10:53:37.667] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:53:37.667] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Workers: [n=2]
[10:53:37.667] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:37.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:37.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestWorker() ...
[10:53:37.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ...
[10:53:37.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of workers: 2
[10:53:37.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ...
[10:53:37.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:37.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:53:37.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:53:37.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:37.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Total time: 0
[10:53:37.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ... done
[10:53:37.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:37.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:53:37.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:53:37.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:37.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Index of first available worker: 1
[10:53:37.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:53:37.749] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Worker is functional
[10:53:37.750] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ... done
[10:53:37.750] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:53:37.750] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ... done
[10:53:37.750] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:53:37.750] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:53:37.750] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ...
[10:53:37.751] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:53:37.751] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ...
[10:53:37.751] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ...
[10:53:37.751] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:53:37.751] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:53:37.751] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:53:37.751] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:53:37.751] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ...
[10:53:37.751] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:37.752] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Getting stack without first strategy: [n=0] 
[10:53:37.752] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:37.752] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:53:37.752] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:53:37.752] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ... done
[10:53:37.752] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:37.752] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Appended future to position #1
[10:53:37.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:53:37.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:37.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ... done
[10:53:37.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  MultisessionFuture started
[10:53:37.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:53:37.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Launching futures ... done
[10:53:37.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:37.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ... done
[10:53:37.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘MultisessionFuture’) ... done
[10:53:37.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:37.754] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:53:37.754] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:53:37.754] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:53:37.754] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:53:37.754] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:53:37.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  [1] TRUE
[10:53:37.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  received data:
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  List of 5
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ type   : chr "VALUE"
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ value  :List of 13
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ value            : num 3
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ visible          : logi TRUE
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ stdout           : chr ""
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ conditions       : list()
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ rng              : logi FALSE
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseConnections:List of 3
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ added   : NULL
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ removed : NULL
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ replaced: NULL
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseDevices    : NULL
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:37"
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:37"
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ session_uuid     : chr "5d15a281f131932d962b0d409d3d3a4d"
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ pid   : int 71859
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ random: int 2147483647
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ r_info           :List of 4
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os           : chr "unix"
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ version          : chr "1.8"
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ success: logi TRUE
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.005 0 0.005 0 0
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:37.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ tag    : NULL
[10:53:37.809] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Received FutureResult
[10:53:37.809] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:37.809] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Removed future from position #1
[10:53:37.809] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:53:37.809] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:37.810] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Erased future from future backend
[10:53:37.810] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:37.810] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:53:37.810] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:53:37.810] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:37.810] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:37.810] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:37.810] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:37.810] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[1] 1 2 3
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:37.811] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:37.811] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:37.811] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals found: [0] 
[10:53:37.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ... DONE
[10:53:37.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals: [0] <none>
[10:53:37.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  packages: [0] <none>
[10:53:37.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:53:37.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘Future’) ...
[10:53:37.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  state: ‘created’
[10:53:37.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:37.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:37.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ...
[10:53:37.813] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Launching futures ...
[10:53:37.813] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:53:37.813] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Workers: [n=2]
[10:53:37.813] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:37.814] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:37.815] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ...
[10:53:37.815] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ...
[10:53:37.815] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of workers: 2
[10:53:37.815] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:53:37.815] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:37.815] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Listing all futures
[10:53:37.815] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Number of registered futures: 0
[10:53:37.815] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:37.815] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Total time: 0
[10:53:37.816] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:53:37.816] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:37.816] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:53:37.816] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:53:37.816] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:37.816] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Index of first available worker: 1
[10:53:37.816] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:53:37.894] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Worker is functional
[10:53:37.894] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ... done
[10:53:37.894] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:53:37.895] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ... done
[10:53:37.895] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:53:37.895] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:53:37.895] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ...
[10:53:37.895] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:53:37.896] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ...
[10:53:37.896] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:53:37.896] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Packages needed by the future expression (n = 0): <none>
[10:53:37.896] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:53:37.896] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:53:37.896] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:53:37.896] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:53:37.896] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:37.896] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Getting stack without first strategy: [n=0] 
[10:53:37.897] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:37.897] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Packages needed by future strategies (n = 0): <none>
[10:53:37.897] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:53:37.897] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ... done
[10:53:37.897] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:37.897] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Appended future to position #1
[10:53:37.897] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:53:37.898] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:37.898] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ... done
[10:53:37.898] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  MultisessionFuture started
[10:53:37.898] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:53:37.898] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Launching futures ... done
[10:53:37.898] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:37.898] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ... done
[10:53:37.898] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  run() for Future (‘MultisessionFuture’) ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:37.898] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:37.899] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:37.900] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals found: [3] ‘+’, ‘value’, ‘a’
[10:53:37.900] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ... DONE
[10:53:37.900] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving globals: TRUE
[10:53:37.900] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving any globals that are futures ...
[10:53:37.900] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals: [3] ‘+’, ‘value’, ‘a’
[10:53:37.900] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving any globals that are futures ... DONE
[10:53:37.900] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ...
[10:53:37.900] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages associated with globals: [2] ‘base’, ‘future’
[10:53:37.901] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages: [2] ‘base’, ‘future’
[10:53:37.901] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ... DONE
[10:53:37.901] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving futures part of globals (recursively) ...
[10:53:37.901] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:37.901] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  recursive: 99
[10:53:37.901] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  length: 1
[10:53:37.901] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  elements: ‘a’
[10:53:37.902] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  'obj' is MultisessionFuture
[10:53:37.902] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:53:37.902] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:53:37.902] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:53:37.902] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:53:37.913] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:53:37.923] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  'obj' is MultisessionFuture
[10:53:37.923] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:53:37.924] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:53:37.924] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:53:37.924] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:53:37.934] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:53:37.945] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  'obj' is MultisessionFuture
[10:53:37.945] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:53:37.945] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:53:37.945] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  [1] TRUE
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  received data:
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  List of 5
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ type   : chr "VALUE"
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ value  :List of 13
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ value            : num 1
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ visible          : logi TRUE
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ stdout           : chr ""
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ conditions       : list()
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ rng              : logi FALSE
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseConnections:List of 3
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ added   : NULL
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ removed : NULL
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ replaced: NULL
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseDevices    : NULL
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:37"
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:37"
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ session_uuid     : chr "5d15a281f131932d962b0d409d3d3a4d"
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ pid   : int 71859
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ r_info           :List of 4
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os           : chr "unix"
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ version          : chr "1.8"
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ success: logi TRUE
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:37.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ tag    : NULL
[10:53:37.957] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Received FutureResult
[10:53:37.957] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:37.957] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Removed future from position #1
[10:53:37.957] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:53:37.957] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:37.957] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Erased future from future backend
[10:53:37.957] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:37.957] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:37.957] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:37.957] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:37.958] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:53:37.958] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Future #1
[10:53:37.958] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  value(obj, ...) ...
[10:53:37.958] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:37.958] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:53:37.958] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:53:37.958] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:37.958] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:53:37.958] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:53:37.959] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  value(obj, ...) ... done
[10:53:37.959] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  resolve(obj, ...) ...
[10:53:37.959] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  A MultisessionFuture was resolved
[10:53:37.959] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  resolve(obj, ...) ... done
[10:53:37.959] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  length: 0 (resolved future 1)
[10:53:37.959] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:37.959] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals: [1] ‘a’
[10:53:37.959] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving futures part of globals (recursively) ... DONE
[10:53:37.959] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages after dropping 'base': [1] ‘future’
[10:53:37.960] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages after dropping non-attached packages: [1] ‘future’
[10:53:37.960] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [1] ‘a’
[10:53:37.960] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  packages: [1] ‘future’
[10:53:37.960] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:53:37.960] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  run() for Future (‘Future’) ...
[10:53:37.960] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  state: ‘created’
[10:53:37.960] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:37.960] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:37.961] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ...
[10:53:37.961] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Launching futures ...
[10:53:37.961] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:53:37.961] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Workers: [n=2]
[10:53:37.961] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:37.963] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:37.963] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ...
[10:53:37.963] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ...
[10:53:37.963] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of workers: 2
[10:53:37.963] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ...
[10:53:37.963] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:37.963] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Listing all futures
[10:53:37.963] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Number of registered futures: 0
[10:53:37.963] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:37.963] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Total time: 0
[10:53:37.964] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ... done
[10:53:37.964] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:37.964] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Listing all futures
[10:53:37.964] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Number of registered futures: 0
[10:53:37.964] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:37.964] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Index of first available worker: 1
[10:53:37.964] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Validate that the worker is functional ...
[10:53:38.042] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Worker is functional
[10:53:38.042] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ... done
[10:53:38.043] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:53:38.043] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestWorker() ... done
[10:53:38.043] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ...
[10:53:38.043] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:53:38.043] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ...
[10:53:38.043] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:53:38.043] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ...
[10:53:38.044] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  getFutureCore() ...
[10:53:38.044] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Packages needed by the future expression (n = 1): ‘future’
[10:53:38.044] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  getFutureCore() ... done
[10:53:38.044] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  getFutureCapture() ...
[10:53:38.044] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  getFutureCapture() ... done
[10:53:38.044] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  getFutureContext() ...
[10:53:38.044] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:38.044] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:53:38.044] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:38.045] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:53:38.045] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  getFutureContext() ... done
[10:53:38.045] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ... done
[10:53:38.070] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:38.070] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Appended future to position #1
[10:53:38.070] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Number of registered futures: 1
[10:53:38.070] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:38.070] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ... done
[10:53:38.070] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  MultisessionFuture started
[10:53:38.070] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:53:38.070] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ... done
[10:53:38.071] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:38.071] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ... done
[10:53:38.071] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  run() for Future (‘MultisessionFuture’) ... done
[10:53:38.071] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:38.071] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:53:38.071] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:53:38.071] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:53:38.072] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:53:38.072] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:53:38.137] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  [1] TRUE
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  received data:
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  List of 5
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ type   : chr "VALUE"
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ value  :List of 13
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ value            : num 2
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ stdout           : chr ""
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ conditions       : list()
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ added   : NULL
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ removed : NULL
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ replaced: NULL
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:38"
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:38"
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ session_uuid     : chr "5d15a281f131932d962b0d409d3d3a4d"
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ pid   : int 71859
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ r_info           :List of 4
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ success: logi TRUE
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:38.138] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ tag    : NULL
[10:53:38.148] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Received FutureResult
[10:53:38.148] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:38.148] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Removed future from position #1
[10:53:38.149] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:53:38.149] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:38.149] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Erased future from future backend
[10:53:38.149] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:38.149] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:53:38.149] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:53:38.149] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:38.149] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:53:38.149] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:38.150] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:53:38.150] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
value(b) = 2
[10:53:38.150] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:38.150] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:53:38.150] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:53:38.150] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:53:38.150] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:53:38.150] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:38.151] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:38.151] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:38.151] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals found: [0] 
[10:53:38.151] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Searching for globals ... DONE
[10:53:38.152] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals: [0] <none>
[10:53:38.152] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  packages: [0] <none>
[10:53:38.152] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:53:38.152] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  run() for Future (‘Future’) ...
[10:53:38.152] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  state: ‘created’
[10:53:38.152] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:38.152] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:38.152] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ...
[10:53:38.153] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ...
[10:53:38.153] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:53:38.153] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Workers: [n=2]
[10:53:38.153] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:38.154] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:38.155] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestWorker() ...
[10:53:38.155] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ...
[10:53:38.155] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Number of workers: 2
[10:53:38.155] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Polling for a free worker ...
[10:53:38.155] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:38.155] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Listing all futures
[10:53:38.155] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Number of registered futures: 0
[10:53:38.155] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:38.155] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Total time: 0
[10:53:38.156] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Polling for a free worker ... done
[10:53:38.156] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:38.156] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Listing all futures
[10:53:38.156] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Number of registered futures: 0
[10:53:38.156] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:38.156] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Index of first available worker: 1
[10:53:38.156] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Validate that the worker is functional ...
[10:53:38.236] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Worker is functional
[10:53:38.236] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  requestNode() ... done
[10:53:38.236] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  cluster node index: 1
[10:53:38.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ... done
[10:53:38.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:53:38.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:53:38.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ...
[10:53:38.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  cluster node index: 1
[10:53:38.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  getFutureData() ...
[10:53:38.238] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  getFutureCore() ...
[10:53:38.238] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Packages needed by the future expression (n = 0): <none>
[10:53:38.238] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  getFutureCore() ... done
[10:53:38.238] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  getFutureCapture() ...
[10:53:38.238] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  getFutureCapture() ... done
[10:53:38.238] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  getFutureContext() ...
[10:53:38.238] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:38.238] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:53:38.238] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:38.239] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:53:38.239] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  getFutureContext() ... done
[10:53:38.239] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  getFutureData() ... done
[10:53:38.239] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:38.239] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Appended future to position #1
[10:53:38.239] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Number of registered futures: 1
[10:53:38.239] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:38.240] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ... done
[10:53:38.240] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  MultisessionFuture started
[10:53:38.240] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:53:38.240] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Launching futures ... done
[10:53:38.240] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:38.240] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ... done
[10:53:38.240] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘MultisessionFuture’) ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:38.240] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:38.241] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:38.241] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals found: [3] ‘+’, ‘value’, ‘a’
[10:53:38.242] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ... DONE
[10:53:38.242] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving globals: TRUE
[10:53:38.242] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving any globals that are futures ...
[10:53:38.242] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [3] ‘+’, ‘value’, ‘a’
[10:53:38.242] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving any globals that are futures ... DONE
[10:53:38.242] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ...
[10:53:38.242] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages associated with globals: [2] ‘base’, ‘future’
[10:53:38.243] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages: [2] ‘base’, ‘future’
[10:53:38.243] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:53:38.243] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving futures part of globals (recursively) ...
[10:53:38.243] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:38.243] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  recursive: 99
[10:53:38.243] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  length: 1
[10:53:38.243] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  elements: ‘a’
[10:53:38.244] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  'obj' is MultisessionFuture
[10:53:38.244] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:53:38.244] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:53:38.244] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  cluster node index: 1
[10:53:38.244] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:53:38.255] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:53:38.265] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  'obj' is MultisessionFuture
[10:53:38.265] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:53:38.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:53:38.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  cluster node index: 1
[10:53:38.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:53:38.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:53:38.286] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  'obj' is MultisessionFuture
[10:53:38.287] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:53:38.287] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:53:38.287] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  cluster node index: 1
[10:53:38.287] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  cluster node index: 1
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  [1] TRUE
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  received data:
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  List of 5
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA   $ type   : chr "VALUE"
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA   $ value  :List of 13
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    ..$ value            : num 1
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    ..$ visible          : logi TRUE
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    ..$ stdout           : chr ""
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    ..$ conditions       : list()
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    ..$ rng              : logi FALSE
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    ..$ misuseGlobalEnv  : NULL
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    ..$ misuseConnections:List of 3
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. ..$ added   : NULL
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. ..$ removed : NULL
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. ..$ replaced: NULL
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    ..$ misuseDevices    : NULL
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:38"
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:38"
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    ..$ session_uuid     : chr "5d15a281f131932d962b0d409d3d3a4d"
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. ..- attr(*, "source")=List of 5
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. .. ..$ pid   : int 71859
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. .. ..$ random: int 2147483647
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    ..$ r_info           :List of 4
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. .. ..$ : int [1:3] 4 5 0
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. ..$ os           : chr "unix"
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. ..$ os_name      : chr "Linux"
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. ..$ captures_utf8: logi TRUE
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    ..$ version          : chr "1.8"
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    ..- attr(*, "class")= chr "FutureResult"
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA   $ success: logi TRUE
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA   $ time   : 'proc_time' Named num [1:5] 0.003 0.001 0.003 0 0
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:38.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA   $ tag    : NULL
[10:53:38.298] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Received FutureResult
[10:53:38.298] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:38.299] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Removed future from position #1
[10:53:38.299] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Number of registered futures: 0
[10:53:38.299] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:38.299] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Erased future from future backend
[10:53:38.299] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ...
[10:53:38.299] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result already collected: FutureResult
[10:53:38.299] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ... done
[10:53:38.299] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:38.299] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:53:38.299] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Future #1
[10:53:38.300] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  value(obj, ...) ...
[10:53:38.300] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:38.300] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result already collected: FutureResult
[10:53:38.300] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:53:38.300] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:38.300] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result already collected: FutureResult
[10:53:38.300] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:53:38.300] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  value(obj, ...) ... done
[10:53:38.300] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  resolve(obj, ...) ...
[10:53:38.301] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  A MultisessionFuture was resolved
[10:53:38.301] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  resolve(obj, ...) ... done
[10:53:38.301] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  length: 0 (resolved future 1)
[10:53:38.301] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:38.301] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [1] ‘a’
[10:53:38.301] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving futures part of globals (recursively) ... DONE
[10:53:38.301] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages after dropping 'base': [1] ‘future’
[10:53:38.301] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages after dropping non-attached packages: [1] ‘future’
[10:53:38.301] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals: [1] ‘a’
[10:53:38.302] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  packages: [1] ‘future’
[10:53:38.302] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:53:38.302] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘Future’) ...
[10:53:38.302] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  state: ‘created’
[10:53:38.302] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:38.302] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:38.302] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ...
[10:53:38.303] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Launching futures ...
[10:53:38.303] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:53:38.303] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Workers: [n=2]
[10:53:38.303] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:38.304] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:38.304] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ...
[10:53:38.305] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  requestNode() ...
[10:53:38.305] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Number of workers: 2
[10:53:38.305] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Polling for a free worker ...
[10:53:38.305] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:38.305] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Listing all futures
[10:53:38.305] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Number of registered futures: 0
[10:53:38.305] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:38.305] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Total time: 0
[10:53:38.305] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Polling for a free worker ... done
[10:53:38.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:38.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Listing all futures
[10:53:38.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Number of registered futures: 0
[10:53:38.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:38.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Index of first available worker: 1
[10:53:38.306] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Validate that the worker is functional ...
[10:53:38.384] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Worker is functional
[10:53:38.384] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  requestNode() ... done
[10:53:38.385] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  cluster node index: 1
[10:53:38.385] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  requestWorker() ... done
[10:53:38.385] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  eraseGlobalEnvironment() ...
[10:53:38.385] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  eraseGlobalEnvironment() ... done
[10:53:38.385] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  launchFuture() ...
[10:53:38.386] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  cluster node index: 1
[10:53:38.386] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  getFutureData() ...
[10:53:38.386] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  getFutureCore() ...
[10:53:38.386] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Packages needed by the future expression (n = 1): ‘future’
[10:53:38.386] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  getFutureCore() ... done
[10:53:38.386] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  getFutureCapture() ...
[10:53:38.386] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  getFutureCapture() ... done
[10:53:38.386] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  getFutureContext() ...
[10:53:38.386] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:38.387] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:53:38.387] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:38.387] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:53:38.387] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  getFutureContext() ... done
[10:53:38.387] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  getFutureData() ... done
[10:53:38.398] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:38.398] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Appended future to position #1
[10:53:38.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Number of registered futures: 1
[10:53:38.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:38.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  launchFuture() ... done
[10:53:38.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  MultisessionFuture started
[10:53:38.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:53:38.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Launching futures ... done
[10:53:38.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:38.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ... done
[10:53:38.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  run() for Future (‘MultisessionFuture’) ... done
[10:53:38.400] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:38.400] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:53:38.400] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:53:38.400] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:53:38.400] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:53:38.400] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  [1] TRUE
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  received data:
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  List of 5
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ type   : chr "VALUE"
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ value  :List of 13
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ value            : num 2
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ visible          : logi TRUE
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ stdout           : chr ""
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ conditions       : list()
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ rng              : logi FALSE
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseConnections:List of 3
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ added   : NULL
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ removed : NULL
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ replaced: NULL
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseDevices    : NULL
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:38"
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:38"
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ session_uuid     : chr "5d15a281f131932d962b0d409d3d3a4d"
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ pid   : int 71859
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ r_info           :List of 4
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os           : chr "unix"
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ version          : chr "1.8"
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ success: logi TRUE
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:38.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ tag    : NULL
[10:53:38.455] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Received FutureResult
[10:53:38.455] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:38.456] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Removed future from position #1
[10:53:38.456] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:53:38.456] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:38.456] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Erased future from future backend
[10:53:38.456] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:38.456] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:38.456] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:38.456] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:38.456] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:53:38.456] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:38.457] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:53:38.457] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
value(b) = 2
[10:53:38.457] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:38.457] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:53:38.457] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:53:38.457] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:53:38.457] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:53:38.457] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:38.458] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:38.458] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:38.458] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals found: [0] 
[10:53:38.458] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ... DONE
[10:53:38.459] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [0] <none>
[10:53:38.459] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  packages: [0] <none>
[10:53:38.459] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:38.459] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:38.459] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:38.460] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals found: [3] ‘+’, ‘value’, ‘a’
[10:53:38.460] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ... DONE
[10:53:38.460] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving globals: TRUE
[10:53:38.460] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving any globals that are futures ...
[10:53:38.461] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals: [3] ‘+’, ‘value’, ‘a’
[10:53:38.461] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving any globals that are futures ... DONE
[10:53:38.461] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ...
[10:53:38.461] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages associated with globals: [2] ‘base’, ‘future’
[10:53:38.461] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages: [2] ‘base’, ‘future’
[10:53:38.461] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ... DONE
[10:53:38.461] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving futures part of globals (recursively) ...
[10:53:38.462] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:38.462] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  recursive: 99
[10:53:38.462] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  length: 1
[10:53:38.462] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  elements: ‘a’
[10:53:38.462] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  'obj' is Future
[10:53:38.462] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  run() for Future (‘Future’) ...
[10:53:38.462] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  state: ‘created’
[10:53:38.462] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:38.463] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:38.463] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Using MultisessionFutureBackend ...
[10:53:38.463] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Launching futures ...
[10:53:38.463] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  launchFuture() for ClusterFutureBackend ...
[10:53:38.463] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Workers: [n=2]
[10:53:38.463] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:38.465] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:38.465] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  requestWorker() ...
[10:53:38.465] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  requestNode() ...
[10:53:38.465] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Number of workers: 2
[10:53:38.465] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Polling for a free worker ...
[10:53:38.465] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:38.465] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:53:38.465] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:53:38.466] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:38.466] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Total time: 0
[10:53:38.466] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Polling for a free worker ... done
[10:53:38.466] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:38.466] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:53:38.466] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:53:38.466] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:38.466] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Index of first available worker: 1
[10:53:38.466] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Validate that the worker is functional ...
Warning in serialize(data, node$con, xdr = FALSE) :
  'package:future' may not be available when loading
[10:53:38.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Worker is functional
[10:53:38.549] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  requestNode() ... done
[10:53:38.549] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:53:38.549] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  requestWorker() ... done
[10:53:38.549] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ...
[10:53:38.550] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ... done
[10:53:38.550] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  launchFuture() ...
[10:53:38.550] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:53:38.550] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  getFutureData() ...
[10:53:38.550] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ...
[10:53:38.550] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by the future expression (n = 0): <none>
[10:53:38.550] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ... done
[10:53:38.550] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ...
[10:53:38.551] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ... done
[10:53:38.551] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ...
[10:53:38.551] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:38.551] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:53:38.551] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:38.551] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:53:38.551] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ... done
[10:53:38.551] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  getFutureData() ... done
[10:53:38.552] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:38.552] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Appended future to position #1
[10:53:38.552] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:53:38.552] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:38.552] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  launchFuture() ... done
[10:53:38.552] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  MultisessionFuture started
[10:53:38.552] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ... done
[10:53:38.552] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Launching futures ... done
[10:53:38.553] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:38.553] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Using MultisessionFutureBackend ... done
[10:53:38.553] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  run() for Future (‘MultisessionFuture’) ... done
[10:53:38.553] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  isFutureResolved() ...
[10:53:38.553] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  assertValidConnection() ...
[10:53:38.553] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  cluster node index: 1
[10:53:38.554] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  assertValidConnection() ... done
[10:53:38.564] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  isFutureResolved() ... done
[10:53:38.574] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  'obj' is MultisessionFuture
[10:53:38.574] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  isFutureResolved() ...
[10:53:38.575] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  assertValidConnection() ...
[10:53:38.575] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  cluster node index: 1
[10:53:38.575] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  assertValidConnection() ... done
[10:53:38.586] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  isFutureResolved() ... done
[10:53:38.596] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  'obj' is MultisessionFuture
[10:53:38.596] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  isFutureResolved() ...
[10:53:38.596] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  assertValidConnection() ...
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  cluster node index: 1
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  assertValidConnection() ... done
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  receiveMessageFromWorker() for ClusterFuture ...
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  cluster node index: 1
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  [1] TRUE
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  received data:
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  List of 5
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA   $ type   : chr "VALUE"
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA   $ value  :List of 13
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ value            : num 1
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ visible          : logi TRUE
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ stdout           : chr ""
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ conditions       : list()
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ rng              : logi FALSE
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ misuseGlobalEnv  : NULL
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ misuseConnections:List of 3
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. ..$ added   : NULL
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. ..$ removed : NULL
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. ..$ replaced: NULL
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ misuseDevices    : NULL
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:38"
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:38"
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ session_uuid     : chr "5d15a281f131932d962b0d409d3d3a4d"
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. ..- attr(*, "source")=List of 5
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. .. ..$ pid   : int 71859
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. .. ..$ random: int 2147483647
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ r_info           :List of 4
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. .. ..$ : int [1:3] 4 5 0
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. ..$ os           : chr "unix"
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. ..$ os_name      : chr "Linux"
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. ..$ captures_utf8: logi TRUE
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ version          : chr "1.8"
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..- attr(*, "class")= chr "FutureResult"
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA   $ success: logi TRUE
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:38.597] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA   $ tag    : NULL
[10:53:38.608] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Received FutureResult
[10:53:38.608] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:38.608] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Removed future from position #1
[10:53:38.608] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Number of registered futures: 0
[10:53:38.608] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:38.608] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Erased future from future backend
[10:53:38.609] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result() for ClusterFuture ...
[10:53:38.609] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  result already collected: FutureResult
[10:53:38.609] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result() for ClusterFuture ... done
[10:53:38.609] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:38.609] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  isFutureResolved() ... done
[10:53:38.609] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Future #1
[10:53:38.609] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  value(obj, ...) ...
[10:53:38.609] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result() for ClusterFuture ...
[10:53:38.609] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result already collected: FutureResult
[10:53:38.610] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result() for ClusterFuture ... done
[10:53:38.610] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result() for ClusterFuture ...
[10:53:38.610] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result already collected: FutureResult
[10:53:38.610] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result() for ClusterFuture ... done
[10:53:38.610] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  value(obj, ...) ... done
[10:53:38.610] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  resolve(obj, ...) ...
[10:53:38.610] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  A MultisessionFuture was resolved
[10:53:38.610] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  resolve(obj, ...) ... done
[10:53:38.610] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  length: 0 (resolved future 1)
[10:53:38.611] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:38.611] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals: [1] ‘a’
[10:53:38.611] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Resolving futures part of globals (recursively) ... DONE
[10:53:38.611] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages after dropping 'base': [1] ‘future’
[10:53:38.611] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages after dropping non-attached packages: [1] ‘future’
[10:53:38.611] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals: [1] ‘a’
[10:53:38.611] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  packages: [1] ‘future’
[10:53:38.611] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:53:38.612] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  run() for Future (‘Future’) ...
[10:53:38.612] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  state: ‘created’
[10:53:38.612] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:38.612] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:38.612] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ...
[10:53:38.612] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ...
[10:53:38.612] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  launchFuture() for ClusterFutureBackend ...
[10:53:38.613] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Workers: [n=2]
[10:53:38.613] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:38.614] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:38.614] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  requestWorker() ...
[10:53:38.614] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  requestNode() ...
[10:53:38.615] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Number of workers: 2
[10:53:38.615] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Polling for a free worker ...
[10:53:38.615] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:38.615] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Listing all futures
[10:53:38.615] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:53:38.615] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:38.615] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Total time: 0
[10:53:38.615] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Polling for a free worker ... done
[10:53:38.615] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:38.615] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Listing all futures
[10:53:38.615] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:53:38.616] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:38.616] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Index of first available worker: 1
[10:53:38.616] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Validate that the worker is functional ...
[10:53:38.694] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Worker is functional
[10:53:38.695] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  requestNode() ... done
[10:53:38.695] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  cluster node index: 1
[10:53:38.695] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  requestWorker() ... done
[10:53:38.695] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  eraseGlobalEnvironment() ...
[10:53:38.696] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  eraseGlobalEnvironment() ... done
[10:53:38.696] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  launchFuture() ...
[10:53:38.696] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  cluster node index: 1
[10:53:38.696] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  getFutureData() ...
[10:53:38.696] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  getFutureCore() ...
[10:53:38.696] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Packages needed by the future expression (n = 1): ‘future’
[10:53:38.696] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  getFutureCore() ... done
[10:53:38.696] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  getFutureCapture() ...
[10:53:38.697] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  getFutureCapture() ... done
[10:53:38.697] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  getFutureContext() ...
[10:53:38.697] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:38.697] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:53:38.697] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:38.697] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:53:38.697] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  getFutureContext() ... done
[10:53:38.697] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  getFutureData() ... done
[10:53:38.709] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:38.709] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Appended future to position #1
[10:53:38.709] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:53:38.709] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:38.709] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  launchFuture() ... done
[10:53:38.709] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  MultisessionFuture started
[10:53:38.709] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  launchFuture() for ClusterFutureBackend ... done
[10:53:38.710] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Launching futures ... done
[10:53:38.710] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:38.710] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ... done
[10:53:38.710] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘MultisessionFuture’) ... done
[10:53:38.710] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:38.710] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:53:38.710] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  cluster node index: 1
[10:53:38.711] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:53:38.711] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:53:38.711] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  cluster node index: 1
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  [1] TRUE
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  received data:
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  List of 5
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA   $ type   : chr "VALUE"
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA   $ value  :List of 13
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    ..$ value            : num 2
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    ..$ visible          : logi TRUE
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    ..$ stdout           : chr ""
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    ..$ conditions       : list()
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    ..$ rng              : logi FALSE
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    ..$ misuseGlobalEnv  : NULL
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    ..$ misuseConnections:List of 3
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. ..$ added   : NULL
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. ..$ removed : NULL
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. ..$ replaced: NULL
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    ..$ misuseDevices    : NULL
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:38"
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:38"
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    ..$ session_uuid     : chr "5d15a281f131932d962b0d409d3d3a4d"
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. ..- attr(*, "source")=List of 5
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. .. ..$ pid   : int 71859
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. .. ..$ random: int 2147483647
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    ..$ r_info           :List of 4
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. .. ..$ : int [1:3] 4 5 0
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. ..$ os           : chr "unix"
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. ..$ os_name      : chr "Linux"
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    .. ..$ captures_utf8: logi TRUE
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    ..$ version          : chr "1.8"
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    ..- attr(*, "class")= chr "FutureResult"
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA   $ success: logi TRUE
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA   $ time   : 'proc_time' Named num [1:5] 0.004 0 0.003 0 0
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:38.753] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA   $ tag    : NULL
[10:53:38.764] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Received FutureResult
[10:53:38.764] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:38.764] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Removed future from position #1
[10:53:38.764] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Number of registered futures: 0
[10:53:38.764] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:38.764] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Erased future from future backend
[10:53:38.764] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ...
[10:53:38.764] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result already collected: FutureResult
[10:53:38.765] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ... done
[10:53:38.765] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:38.765] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:38.765] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:38.765] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:38.765] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
value(b) = 2
[10:53:38.765] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:38.765] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:38.765] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:53:38.766] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:53:38.766] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:53:38.766] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:38.766] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:38.766] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:38.767] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  globals found: [0] 
[10:53:38.767] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ... DONE
[10:53:38.767] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals: [0] <none>
[10:53:38.767] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  packages: [0] <none>
[10:53:38.767] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:38.767] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:38.768] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:38.769] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  globals found: [3] ‘+’, ‘value’, ‘a’
[10:53:38.769] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ... DONE
[10:53:38.769] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving globals: TRUE
[10:53:38.769] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving any globals that are futures ...
[10:53:38.769] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  globals: [3] ‘+’, ‘value’, ‘a’
[10:53:38.769] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving any globals that are futures ... DONE
[10:53:38.769] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ...
[10:53:38.769] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Packages associated with globals: [2] ‘base’, ‘future’
[10:53:38.770] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Packages: [2] ‘base’, ‘future’
[10:53:38.770] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:53:38.770] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving futures part of globals (recursively) ...
[10:53:38.770] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:38.770] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  recursive: 99
[10:53:38.770] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  length: 1
[10:53:38.770] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  elements: ‘a’
[10:53:38.771] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  'obj' is Future
[10:53:38.771] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  run() for Future (‘Future’) ...
[10:53:38.771] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  state: ‘created’
[10:53:38.771] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:38.771] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:38.771] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Using MultisessionFutureBackend ...
[10:53:38.771] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Launching futures ...
[10:53:38.771] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ...
[10:53:38.771] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Workers: [n=2]
[10:53:38.772] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:38.776] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:38.776] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  requestWorker() ...
[10:53:38.776] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  requestNode() ...
[10:53:38.776] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Number of workers: 2
[10:53:38.776] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ...
[10:53:38.776] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:38.776] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:53:38.776] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:53:38.776] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:38.776] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Total time: 0
[10:53:38.777] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ... done
[10:53:38.777] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:38.777] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:53:38.777] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:53:38.777] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:38.777] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Index of first available worker: 1
[10:53:38.777] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Validate that the worker is functional ...
Warning in serialize(data, node$con, xdr = FALSE) :
  'package:future' may not be available when loading
[10:53:38.857] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Worker is functional
[10:53:38.857] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ... done
[10:53:38.858] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:53:38.858] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  requestWorker() ... done
[10:53:38.858] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ...
[10:53:38.858] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ... done
[10:53:38.859] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  launchFuture() ...
[10:53:38.859] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:53:38.859] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ...
[10:53:38.859] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ...
[10:53:38.859] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by the future expression (n = 0): <none>
[10:53:38.859] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ... done
[10:53:38.859] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ...
[10:53:38.859] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ... done
[10:53:38.859] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ...
[10:53:38.859] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:38.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:53:38.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:38.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:53:38.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ... done
[10:53:38.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ... done
[10:53:38.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:38.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Appended future to position #1
[10:53:38.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:53:38.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:38.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  launchFuture() ... done
[10:53:38.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  MultisessionFuture started
[10:53:38.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ... done
[10:53:38.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Launching futures ... done
[10:53:38.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:38.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Using MultisessionFutureBackend ... done
[10:53:38.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  run() for Future (‘MultisessionFuture’) ... done
[10:53:38.862] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  isFutureResolved() ...
[10:53:38.862] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  assertValidConnection() ...
[10:53:38.862] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  cluster node index: 1
[10:53:38.862] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  assertValidConnection() ... done
[10:53:38.873] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  isFutureResolved() ... done
[10:53:38.883] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  'obj' is MultisessionFuture
[10:53:38.883] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  isFutureResolved() ...
[10:53:38.883] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  assertValidConnection() ...
[10:53:38.884] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  cluster node index: 1
[10:53:38.884] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  assertValidConnection() ... done
[10:53:38.894] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  isFutureResolved() ... done
[10:53:38.904] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  'obj' is MultisessionFuture
[10:53:38.905] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  isFutureResolved() ...
[10:53:38.905] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  assertValidConnection() ...
[10:53:38.905] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  cluster node index: 1
[10:53:38.905] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  assertValidConnection() ... done
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ...
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  cluster node index: 1
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  [1] TRUE
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  received data:
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  List of 5
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA   $ type   : chr "VALUE"
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA   $ value  :List of 13
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    ..$ value            : num 1
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    ..$ visible          : logi TRUE
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    ..$ stdout           : chr ""
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    ..$ conditions       : list()
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    ..$ rng              : logi FALSE
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    ..$ misuseGlobalEnv  : NULL
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    ..$ misuseConnections:List of 3
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. ..$ added   : NULL
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. ..$ removed : NULL
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. ..$ replaced: NULL
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    ..$ misuseDevices    : NULL
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:38"
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:38"
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    ..$ session_uuid     : chr "5d15a281f131932d962b0d409d3d3a4d"
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. ..- attr(*, "source")=List of 5
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. .. ..$ pid   : int 71859
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. .. ..$ random: int 2147483647
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    ..$ r_info           :List of 4
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. .. ..$ : int [1:3] 4 5 0
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. ..$ os           : chr "unix"
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. ..$ os_name      : chr "Linux"
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. ..$ captures_utf8: logi TRUE
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    ..$ version          : chr "1.8"
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr "FutureResult"
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA   $ success: logi TRUE
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA   $ time   : 'proc_time' Named num [1:5] 0.003 0.001 0.003 0 0
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:38.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA   $ tag    : NULL
[10:53:38.917] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Received FutureResult
[10:53:38.917] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:38.917] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Removed future from position #1
[10:53:38.917] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:53:38.917] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:38.917] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Erased future from future backend
[10:53:38.917] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:53:38.917] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:53:38.917] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:53:38.918] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:38.918] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  isFutureResolved() ... done
[10:53:38.918] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Future #1
[10:53:38.918] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  value(obj, ...) ...
[10:53:38.918] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  result() for ClusterFuture ...
[10:53:38.918] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:53:38.918] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:53:38.918] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  result() for ClusterFuture ...
[10:53:38.918] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:53:38.919] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:53:38.919] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  value(obj, ...) ... done
[10:53:38.919] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  resolve(obj, ...) ...
[10:53:38.919] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  A MultisessionFuture was resolved
[10:53:38.919] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  resolve(obj, ...) ... done
[10:53:38.919] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  length: 0 (resolved future 1)
[10:53:38.919] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:38.919] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  globals: [1] ‘a’
[10:53:38.919] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Resolving futures part of globals (recursively) ... DONE
[10:53:38.920] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Packages after dropping 'base': [1] ‘future’
[10:53:38.920] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Packages after dropping non-attached packages: [1] ‘future’
[10:53:38.920] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  globals: [1] ‘a’
[10:53:38.920] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  packages: [1] ‘future’
[10:53:38.920] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:53:38.920] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  run() for Future (‘Future’) ...
[10:53:38.920] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  state: ‘created’
[10:53:38.921] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:38.921] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:38.921] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Using MultisessionFutureBackend ...
[10:53:38.921] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Launching futures ...
[10:53:38.921] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  launchFuture() for ClusterFutureBackend ...
[10:53:38.921] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Workers: [n=2]
[10:53:38.921] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:38.923] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:38.923] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  requestWorker() ...
[10:53:38.923] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  requestNode() ...
[10:53:38.923] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Number of workers: 2
[10:53:38.923] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Polling for a free worker ...
[10:53:38.923] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:38.923] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:53:38.924] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:53:38.924] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:38.924] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Total time: 0
[10:53:38.924] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Polling for a free worker ... done
[10:53:38.924] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:38.924] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:53:38.924] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:53:38.924] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:38.924] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Index of first available worker: 1
[10:53:38.924] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Validate that the worker is functional ...
[10:53:39.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Worker is functional
[10:53:39.004] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  requestNode() ... done
[10:53:39.005] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:53:39.005] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  requestWorker() ... done
[10:53:39.005] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ...
[10:53:39.005] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ... done
[10:53:39.005] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  launchFuture() ...
[10:53:39.006] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:53:39.006] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  getFutureData() ...
[10:53:39.006] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ...
[10:53:39.006] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by the future expression (n = 1): ‘future’
[10:53:39.006] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ... done
[10:53:39.006] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ...
[10:53:39.006] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ... done
[10:53:39.006] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ...
[10:53:39.006] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:39.007] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:53:39.007] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:39.007] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:53:39.007] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ... done
[10:53:39.007] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  getFutureData() ... done
[10:53:39.018] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:39.018] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Appended future to position #1
[10:53:39.018] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:53:39.018] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:39.019] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  launchFuture() ... done
[10:53:39.019] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  MultisessionFuture started
[10:53:39.019] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ... done
[10:53:39.019] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Launching futures ... done
[10:53:39.019] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:39.019] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Using MultisessionFutureBackend ... done
[10:53:39.019] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  run() for Future (‘MultisessionFuture’) ... done
[10:53:39.019] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ...
[10:53:39.019] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  assertValidConnection() ...
[10:53:39.020] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  cluster node index: 1
[10:53:39.020] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  assertValidConnection() ... done
[10:53:39.020] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  receiveMessageFromWorker() for ClusterFuture ...
[10:53:39.020] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  cluster node index: 1
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  [1] TRUE
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  received data:
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  List of 5
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA   $ type   : chr "VALUE"
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA   $ value  :List of 13
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ value            : num 2
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ visible          : logi TRUE
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ stdout           : chr ""
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ conditions       : list()
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ rng              : logi FALSE
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ misuseGlobalEnv  : NULL
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ misuseConnections:List of 3
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. ..$ added   : NULL
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. ..$ removed : NULL
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. ..$ replaced: NULL
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ misuseDevices    : NULL
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:39"
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:39"
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ session_uuid     : chr "5d15a281f131932d962b0d409d3d3a4d"
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. ..- attr(*, "source")=List of 5
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. .. ..$ pid   : int 71859
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. .. ..$ random: int 2147483647
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ r_info           :List of 4
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. .. ..$ : int [1:3] 4 5 0
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. ..$ os           : chr "unix"
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. ..$ os_name      : chr "Linux"
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. ..$ captures_utf8: logi TRUE
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ version          : chr "1.8"
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..- attr(*, "class")= chr "FutureResult"
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA   $ success: logi TRUE
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:39.062] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA   $ tag    : NULL
[10:53:39.072] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Received FutureResult
[10:53:39.072] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:39.073] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Removed future from position #1
[10:53:39.073] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Number of registered futures: 0
[10:53:39.073] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:39.073] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Erased future from future backend
[10:53:39.073] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result() for ClusterFuture ...
[10:53:39.073] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  result already collected: FutureResult
[10:53:39.073] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result() for ClusterFuture ... done
[10:53:39.073] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:39.073] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ... done
[10:53:39.074] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ...
[10:53:39.074] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result already collected: FutureResult
[10:53:39.074] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ... done
value(b) = 2
[10:53:39.074] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ...
[10:53:39.074] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result already collected: FutureResult
[10:53:39.074] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ... done
[10:53:39.074] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ...
[10:53:39.074] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result already collected: FutureResult
[10:53:39.074] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ... done
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:39.075] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:39.075] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:39.076] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  globals found: [2] ‘{’, ‘pkg’
[10:53:39.076] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Searching for globals ... DONE
[10:53:39.076] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Resolving globals: TRUE
[10:53:39.076] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Resolving any globals that are futures ...
[10:53:39.076] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  globals: [2] ‘{’, ‘pkg’
[10:53:39.076] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Resolving any globals that are futures ... DONE
[10:53:39.077] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Search for packages associated with the globals ...
[10:53:39.077] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Packages associated with globals: [1] ‘base’
[10:53:39.077] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Packages: [1] ‘base’
[10:53:39.077] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Search for packages associated with the globals ... DONE
[10:53:39.077] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Resolving futures part of globals (recursively) ...
[10:53:39.077] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:39.078] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  recursive: 99
[10:53:39.078] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  length: 1
[10:53:39.078] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  elements: ‘pkg’
[10:53:39.078] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  'obj' is atomic
[10:53:39.078] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  length: 0 (resolved future 1)
[10:53:39.078] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:39.078] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  globals: [1] ‘pkg’
[10:53:39.078] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Resolving futures part of globals (recursively) ... DONE
[10:53:39.078] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Packages after dropping 'base': [0] 
[10:53:39.079] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  globals: [1] ‘pkg’
[10:53:39.079] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  packages: [0] 
[10:53:39.079] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  getGlobalsAndPackages() ... done
[10:53:39.079] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  run() for Future (‘Future’) ...
[10:53:39.079] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  state: ‘created’
[10:53:39.079] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:39.079] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:39.079] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Using MultisessionFutureBackend ...
[10:53:39.080] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Launching futures ...
[10:53:39.080] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ...
[10:53:39.080] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Workers: [n=2]
[10:53:39.080] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:39.081] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:39.082] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  requestWorker() ...
[10:53:39.082] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  requestNode() ...
[10:53:39.082] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Number of workers: 2
[10:53:39.082] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ...
[10:53:39.082] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:39.082] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:53:39.082] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:53:39.082] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:39.082] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Total time: 0
[10:53:39.082] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ... done
[10:53:39.083] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:39.083] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:53:39.083] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:53:39.083] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:39.083] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Index of first available worker: 1
[10:53:39.083] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Validate that the worker is functional ...
[10:53:39.162] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Worker is functional
[10:53:39.162] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  requestNode() ... done
[10:53:39.163] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:53:39.163] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  requestWorker() ... done
[10:53:39.163] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ...
[10:53:39.163] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ... done
[10:53:39.163] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  launchFuture() ...
[10:53:39.163] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:53:39.164] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  getFutureData() ...
[10:53:39.164] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ...
[10:53:39.164] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by the future expression (n = 0): <none>
[10:53:39.164] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ... done
[10:53:39.164] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ...
[10:53:39.164] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ... done
[10:53:39.164] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ...
[10:53:39.164] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:39.164] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:53:39.165] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:39.165] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:53:39.165] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ... done
[10:53:39.165] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  getFutureData() ... done
[10:53:39.165] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:39.165] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Appended future to position #1
[10:53:39.165] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:53:39.166] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:39.166] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  launchFuture() ... done
[10:53:39.166] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  MultisessionFuture started
[10:53:39.166] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ... done
[10:53:39.166] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Launching futures ... done
[10:53:39.166] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:39.166] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Using MultisessionFutureBackend ... done
[10:53:39.166] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  run() for Future (‘MultisessionFuture’) ... done
[10:53:39.169] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result() for ClusterFuture ...
[10:53:39.169] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  assertValidConnection() ...
[10:53:39.169] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  cluster node index: 1
[10:53:39.170] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  assertValidConnection() ... done
[10:53:39.170] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ...
[10:53:39.170] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  cluster node index: 1
[10:53:39.209] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  [1] TRUE
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  received data:
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  List of 5
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA   $ type   : chr "VALUE"
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA   $ value  :List of 13
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    ..$ value            : chr "foo"
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    ..$ visible          : logi TRUE
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    ..$ stdout           : chr ""
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    ..$ conditions       : list()
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    ..$ rng              : logi FALSE
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    ..$ misuseGlobalEnv  : NULL
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    ..$ misuseConnections:List of 3
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. ..$ added   : NULL
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. ..$ removed : NULL
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. ..$ replaced: NULL
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    ..$ misuseDevices    : NULL
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:39"
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:39"
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    ..$ session_uuid     : chr "5d15a281f131932d962b0d409d3d3a4d"
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. ..- attr(*, "source")=List of 5
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. .. ..$ pid   : int 71859
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. .. ..$ random: int 2147483647
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    ..$ r_info           :List of 4
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. .. ..$ : int [1:3] 4 5 0
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. ..$ os           : chr "unix"
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. ..$ os_name      : chr "Linux"
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. ..$ captures_utf8: logi TRUE
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    ..$ version          : chr "1.8"
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    ..- attr(*, "class")= chr "FutureResult"
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA   $ success: logi TRUE
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA   $ time   : 'proc_time' Named num [1:5] 0.003 0.001 0.003 0 0
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:39.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA   $ tag    : NULL
[10:53:39.220] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Received FutureResult
[10:53:39.220] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:39.220] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Removed future from position #1
[10:53:39.221] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:53:39.221] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:39.221] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Erased future from future backend
[10:53:39.221] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  result() for ClusterFuture ...
[10:53:39.221] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:53:39.221] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:53:39.221] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:39.221] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result() for ClusterFuture ... done
[10:53:39.221] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result() for ClusterFuture ...
[10:53:39.221] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result already collected: FutureResult
[10:53:39.222] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result() for ClusterFuture ... done
value(f) = ‘foo’
Method for identifying globals: 'ordered' ... DONE
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:39.222] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:39.222] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:39.224] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  globals found: [3] ‘{’, ‘<-’, ‘+’
[10:53:39.224] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Searching for globals ... DONE
[10:53:39.224] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Resolving globals: TRUE
[10:53:39.225] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Resolving any globals that are futures ...
[10:53:39.225] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  globals: [3] ‘{’, ‘<-’, ‘+’
[10:53:39.225] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Resolving any globals that are futures ... DONE
[10:53:39.225] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Search for packages associated with the globals ...
[10:53:39.225] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Packages associated with globals: [1] ‘base’
[10:53:39.225] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Packages: [1] ‘base’
[10:53:39.225] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Search for packages associated with the globals ... DONE
[10:53:39.226] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Packages after dropping 'base': [0] 
[10:53:39.226] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  globals: [0] 
[10:53:39.226] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  packages: [0] 
[10:53:39.226] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  getGlobalsAndPackages() ... done
[10:53:39.226] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  run() for Future (‘Future’) ...
[10:53:39.226] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  state: ‘created’
[10:53:39.226] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:39.227] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:39.227] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Using MultisessionFutureBackend ...
[10:53:39.227] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Launching futures ...
[10:53:39.227] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ...
[10:53:39.227] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Workers: [n=2]
[10:53:39.227] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:39.229] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:39.229] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  requestWorker() ...
[10:53:39.229] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  requestNode() ...
[10:53:39.229] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Number of workers: 2
[10:53:39.229] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ...
[10:53:39.229] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:39.229] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:53:39.229] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:53:39.229] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:39.230] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Total time: 0
[10:53:39.230] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ... done
[10:53:39.230] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:39.230] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:53:39.230] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:53:39.230] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:39.230] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Index of first available worker: 1
[10:53:39.230] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Validate that the worker is functional ...
[10:53:39.310] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Worker is functional
[10:53:39.310] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ... done
[10:53:39.311] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:53:39.311] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  requestWorker() ... done
[10:53:39.311] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ...
[10:53:39.311] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ... done
[10:53:39.312] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  launchFuture() ...
[10:53:39.312] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:53:39.312] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ...
[10:53:39.312] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ...
[10:53:39.312] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by the future expression (n = 0): <none>
[10:53:39.312] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ... done
[10:53:39.312] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ...
[10:53:39.312] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ... done
[10:53:39.312] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ...
[10:53:39.313] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:39.313] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:53:39.313] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:39.313] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:53:39.313] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ... done
[10:53:39.313] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ... done
[10:53:39.313] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:39.314] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Appended future to position #1
[10:53:39.314] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:53:39.314] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:39.314] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  launchFuture() ... done
[10:53:39.314] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  MultisessionFuture started
[10:53:39.314] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ... done
[10:53:39.314] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Launching futures ... done
[10:53:39.314] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:39.314] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Using MultisessionFutureBackend ... done
[10:53:39.315] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  run() for Future (‘MultisessionFuture’) ... done
[10:53:39.315] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result() for ClusterFuture ...
[10:53:39.315] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  assertValidConnection() ...
[10:53:39.315] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  cluster node index: 1
[10:53:39.315] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  assertValidConnection() ... done
[10:53:39.315] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ...
[10:53:39.316] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  cluster node index: 1
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  [1] TRUE
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  received data:
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  List of 5
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA   $ type   : chr "VALUE"
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA   $ value  :List of 13
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    ..$ value            : num 1
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    ..$ visible          : logi TRUE
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    ..$ stdout           : chr ""
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    ..$ conditions       : list()
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    ..$ rng              : logi FALSE
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    ..$ misuseGlobalEnv  : NULL
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    ..$ misuseConnections:List of 3
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. ..$ added   : NULL
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. ..$ removed : NULL
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. ..$ replaced: NULL
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    ..$ misuseDevices    : NULL
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:39"
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:39"
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    ..$ session_uuid     : chr "5d15a281f131932d962b0d409d3d3a4d"
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. ..- attr(*, "source")=List of 5
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. .. ..$ pid   : int 71859
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. .. ..$ random: int 2147483647
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    ..$ r_info           :List of 4
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. .. ..$ : int [1:3] 4 5 0
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. ..$ os           : chr "unix"
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. ..$ os_name      : chr "Linux"
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    .. ..$ captures_utf8: logi TRUE
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    ..$ version          : chr "1.8"
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr "FutureResult"
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA   $ success: logi TRUE
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:39.358] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA   $ tag    : NULL
[10:53:39.369] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Received FutureResult
[10:53:39.369] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:39.369] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Removed future from position #1
[10:53:39.369] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:53:39.369] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:39.369] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Erased future from future backend
[10:53:39.369] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:53:39.369] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:53:39.369] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:53:39.369] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:39.370] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result() for ClusterFuture ... done
[10:53:39.370] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result() for ClusterFuture ...
[10:53:39.370] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  result already collected: FutureResult
[10:53:39.370] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result() for ClusterFuture ... done
value(f) = ‘1’
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:39.370] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:39.370] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:39.372] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  globals found: [4] ‘{’, ‘<-’, ‘x’, ‘+’
[10:53:39.372] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Searching for globals ... DONE
[10:53:39.372] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Resolving globals: TRUE
[10:53:39.372] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Resolving any globals that are futures ...
[10:53:39.373] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  globals: [4] ‘{’, ‘<-’, ‘x’, ‘+’
[10:53:39.373] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Resolving any globals that are futures ... DONE
[10:53:39.373] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Search for packages associated with the globals ...
[10:53:39.373] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Packages associated with globals: [1] ‘base’
[10:53:39.373] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Packages: [1] ‘base’
[10:53:39.373] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Search for packages associated with the globals ... DONE
[10:53:39.373] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Resolving futures part of globals (recursively) ...
[10:53:39.374] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:39.374] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  recursive: 99
[10:53:39.374] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  length: 1
[10:53:39.374] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  elements: ‘x’
[10:53:39.374] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  'obj' is atomic
[10:53:39.374] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  length: 0 (resolved future 1)
[10:53:39.374] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:39.375] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  globals: [1] ‘x’
[10:53:39.375] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Resolving futures part of globals (recursively) ... DONE
[10:53:39.375] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Packages after dropping 'base': [0] 
[10:53:39.375] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  globals: [1] ‘x’
[10:53:39.375] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  packages: [0] 
[10:53:39.375] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  getGlobalsAndPackages() ... done
[10:53:39.375] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  run() for Future (‘Future’) ...
[10:53:39.375] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  state: ‘created’
[10:53:39.376] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:39.376] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:39.376] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Using MultisessionFutureBackend ...
[10:53:39.376] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Launching futures ...
[10:53:39.376] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ...
[10:53:39.376] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Workers: [n=2]
[10:53:39.376] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:39.378] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:39.378] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  requestWorker() ...
[10:53:39.378] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ...
[10:53:39.378] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of workers: 2
[10:53:39.378] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ...
[10:53:39.378] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:39.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:53:39.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:53:39.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:39.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Total time: 0
[10:53:39.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ... done
[10:53:39.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:39.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:53:39.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:53:39.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:39.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Index of first available worker: 1
[10:53:39.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Validate that the worker is functional ...
[10:53:39.457] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Worker is functional
[10:53:39.458] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ... done
[10:53:39.458] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:53:39.458] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  requestWorker() ... done
[10:53:39.458] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ...
[10:53:39.459] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ... done
[10:53:39.459] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() ...
[10:53:39.459] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:53:39.459] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ...
[10:53:39.459] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ...
[10:53:39.459] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by the future expression (n = 0): <none>
[10:53:39.459] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ... done
[10:53:39.459] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ...
[10:53:39.459] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ... done
[10:53:39.460] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ...
[10:53:39.460] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:39.460] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:53:39.460] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:39.460] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:53:39.460] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ... done
[10:53:39.460] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ... done
[10:53:39.461] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:39.461] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Appended future to position #1
[10:53:39.461] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:53:39.461] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:39.461] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() ... done
[10:53:39.461] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  MultisessionFuture started
[10:53:39.461] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ... done
[10:53:39.461] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Launching futures ... done
[10:53:39.461] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:39.462] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Using MultisessionFutureBackend ... done
[10:53:39.462] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  run() for Future (‘MultisessionFuture’) ... done
[10:53:39.462] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  result() for ClusterFuture ...
[10:53:39.462] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:53:39.462] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:53:39.462] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:53:39.463] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ...
[10:53:39.463] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:53:39.504] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  [1] TRUE
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  received data:
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  List of 5
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA   $ type   : chr "VALUE"
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA   $ value  :List of 13
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ value            : num 2
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ visible          : logi TRUE
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ stdout           : chr ""
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ conditions       : list()
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ rng              : logi FALSE
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ misuseGlobalEnv  : NULL
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ misuseConnections:List of 3
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. ..$ added   : NULL
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. ..$ removed : NULL
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. ..$ replaced: NULL
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ misuseDevices    : NULL
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:39"
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:39"
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ session_uuid     : chr "5d15a281f131932d962b0d409d3d3a4d"
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "source")=List of 5
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. .. ..$ pid   : int 71859
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. .. ..$ random: int 2147483647
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ r_info           :List of 4
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. .. ..$ : int [1:3] 4 5 0
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. ..$ os           : chr "unix"
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. ..$ os_name      : chr "Linux"
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. ..$ captures_utf8: logi TRUE
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ version          : chr "1.8"
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr "FutureResult"
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA   $ success: logi TRUE
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA   $ time   : 'proc_time' Named num [1:5] 0.003 0.001 0.003 0 0
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:39.505] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA   $ tag    : NULL
[10:53:39.518] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Received FutureResult
[10:53:39.518] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:39.518] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Removed future from position #1
[10:53:39.518] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:53:39.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:39.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Erased future from future backend
[10:53:39.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:53:39.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:53:39.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:53:39.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:39.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:53:39.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  result() for ClusterFuture ...
[10:53:39.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:53:39.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  result() for ClusterFuture ... done
value(f) = ‘2’
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.resolve’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘TRUE’
[10:53:39.520] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  getGlobalsAndPackages() ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.onMissing’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘error’
[10:53:39.520] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Searching for globals ...
Warning in getGlobalsAndPackages(expr, envir = envir, tweak = tweakExpression,  :
  R option ‘future.globals.method’ may only be used for troubleshooting. It must not be used in production since it changes how futures are evaluated and there is a great risk that the results cannot be reproduced elsewhere: ‘ordered’
[10:53:39.522] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  globals found: [3] ‘{’, ‘<-’, ‘x’
[10:53:39.522] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Searching for globals ... DONE
[10:53:39.522] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Resolving globals: TRUE
[10:53:39.522] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Resolving any globals that are futures ...
[10:53:39.522] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  globals: [3] ‘{’, ‘<-’, ‘x’
[10:53:39.523] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Resolving any globals that are futures ... DONE
[10:53:39.523] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Search for packages associated with the globals ...
[10:53:39.523] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Packages associated with globals: [1] ‘base’
[10:53:39.523] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Packages: [1] ‘base’
[10:53:39.523] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Search for packages associated with the globals ... DONE
[10:53:39.523] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Resolving futures part of globals (recursively) ...
[10:53:39.524] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  resolve() on FutureGlobals ...resolve() on Globals ...resolve() on list ...
[10:53:39.524] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  recursive: 99
[10:53:39.524] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  length: 1
[10:53:39.524] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  elements: ‘x’
[10:53:39.524] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  'obj' is function
[10:53:39.524] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  resolve(obj, ...) ...
[10:53:39.524] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  resolve(obj, ...) ... done
[10:53:39.524] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  length: 0 (resolved future 1)
[10:53:39.524] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  resolve() on FutureGlobals ... doneresolve() on Globals ... doneresolve() on list ... done
[10:53:39.524] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  globals: [1] ‘x’
[10:53:39.525] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Resolving futures part of globals (recursively) ... DONE
[10:53:39.525] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Packages after dropping 'base': [0] 
[10:53:39.525] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  globals: [1] ‘x’
[10:53:39.525] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  packages: [0] 
[10:53:39.525] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  getGlobalsAndPackages() ... done
[10:53:39.525] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  run() for Future (‘Future’) ...
[10:53:39.525] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  state: ‘created’
[10:53:39.525] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:39.526] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:39.526] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Using MultisessionFutureBackend ...
[10:53:39.526] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Launching futures ...
[10:53:39.526] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ...
[10:53:39.526] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Workers: [n=2]
[10:53:39.526] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:39.528] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry: ‘workers-674da372c1cdbb2f9cb15750fed89f93’
[10:53:39.528] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  requestWorker() ...
[10:53:39.528] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ...
[10:53:39.528] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of workers: 2
[10:53:39.528] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ...
[10:53:39.528] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:39.528] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:53:39.528] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:53:39.529] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:39.529] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Total time: 0
[10:53:39.529] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ... done
[10:53:39.529] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ...
[10:53:39.529] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:53:39.529] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:53:39.529] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'list', earlySignal = 0) ... done
[10:53:39.529] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Index of first available worker: 1
[10:53:39.529] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Validate that the worker is functional ...
[10:53:39.610] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Worker is functional
[10:53:39.610] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ... done
[10:53:39.610] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:53:39.611] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestWorker() ... done
[10:53:39.611] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ...
[10:53:39.611] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ... done
[10:53:39.611] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() ...
[10:53:39.611] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:53:39.612] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ...
[10:53:39.612] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ...
[10:53:39.612] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by the future expression (n = 0): <none>
[10:53:39.612] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ... done
[10:53:39.612] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ...
[10:53:39.612] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ... done
[10:53:39.612] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ...
[10:53:39.612] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:39.612] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:53:39.613] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:39.613] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:53:39.613] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ... done
[10:53:39.613] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ... done
[10:53:39.613] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ...
[10:53:39.613] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Appended future to position #1
[10:53:39.613] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:53:39.613] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'add', earlySignal = 0) ... done
[10:53:39.614] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() ... done
[10:53:39.614] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  MultisessionFuture started
[10:53:39.614] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ... done
[10:53:39.614] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Launching futures ... done
[10:53:39.614] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:53:39.614] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Using MultisessionFutureBackend ... done
[10:53:39.614] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  run() for Future (‘MultisessionFuture’) ... done
[10:53:39.614] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:53:39.615] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:53:39.615] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:53:39.615] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:53:39.615] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ...
[10:53:39.615] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:53:39.657] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  [1] TRUE
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  received data:
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  List of 5
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA   $ type   : chr "VALUE"
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA   $ value  :List of 13
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    ..$ value            : logi TRUE
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    ..$ visible          : logi TRUE
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    ..$ stdout           : chr ""
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    ..$ conditions       : list()
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    ..$ rng              : logi FALSE
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    ..$ misuseGlobalEnv  : NULL
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    ..$ misuseConnections:List of 3
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    .. ..$ added   : NULL
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    .. ..$ removed : NULL
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    .. ..$ replaced: NULL
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    ..$ misuseDevices    : NULL
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:53:39"
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:53:39"
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    ..$ session_uuid     : chr "5d15a281f131932d962b0d409d3d3a4d"
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "source")=List of 5
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ pid   : int 71859
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:53:34"
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ random: int 2147483647
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    ..$ r_info           :List of 4
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ : int [1:3] 4 5 0
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    .. ..$ os           : chr "unix"
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    .. ..$ os_name      : chr "Linux"
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    .. ..$ captures_utf8: logi TRUE
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    ..$ version          : chr "1.8"
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr "FutureResult"
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA   $ success: logi TRUE
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:53:39.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA   $ tag    : NULL
[10:53:39.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Received FutureResult
[10:53:39.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ...
[10:53:39.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Removed future from position #1
[10:53:39.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:53:39.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-674da372c1cdbb2f9cb15750fed89f93', action = 'remove', earlySignal = 0) ... done
[10:53:39.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Erased future from future backend
[10:53:39.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:53:39.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:53:39.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:53:39.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ... done
[10:53:39.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:53:39.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:53:39.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:53:39.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
value(f) = ‘TRUE’
[10:53:39.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:39.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:53:39.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  all.equal() for FutureStrategyList ...
[10:53:39.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  New stack:
[10:53:39.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  List of 1
[10:53:39.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:39.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:39.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:39.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:39.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:39.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "call")= language plan(sequential)
[10:53:39.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:39.673] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Old stack:
[10:53:39.673] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  List of 1
[10:53:39.673] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA   $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:53:39.673] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:39.673] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:53:39.673] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "init")= chr "done"
[10:53:39.673] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:53:39.673] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:39.673] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:39.673] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "untweakable")= chr "persistent"
[10:53:39.673] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "call")= language plan(strategy)
[10:53:39.673] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "backend")=Classes 'MultisessionFutureBackend', 'ClusterFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7200bec8> 
[10:53:39.673] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:53:39.673] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:39.673] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:39.676] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Not identical
[10:53:39.676] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  all.equal() for future ...
[10:53:39.676] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  List of 2
[10:53:39.676] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:39.676] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:39.676] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:39.676] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:39.676] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:39.676] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "call")= language plan(sequential)
[10:53:39.676] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ current:function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:53:39.676] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:39.676] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:53:39.676] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "init")= chr "done"
[10:53:39.676] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:53:39.676] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:39.676] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:39.676] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "untweakable")= chr "persistent"
[10:53:39.676] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "call")= language plan(strategy)
[10:53:39.676] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "backend")=Classes 'MultisessionFutureBackend', 'ClusterFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560a7200bec8> 
[10:53:39.676] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:53:39.676] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:53:39.681] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Formals differ
[10:53:39.681] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  all.equal() for future ... done
[10:53:39.681] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Future strategies differ at level 1
[10:53:39.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  all.equal() for FutureStrategyList ... done
[10:53:39.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  plan(): Setting new future strategy stack:
[10:53:39.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  List of future strategies:
[10:53:39.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  1. sequential:
[10:53:39.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:53:39.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA     - tweaked: FALSE
[10:53:39.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA     - call: plan(sequential)
[10:53:39.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  List of 1
[10:53:39.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:39.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:39.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:39.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:39.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:39.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "call")= language plan(sequential)
[10:53:39.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:53:39.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  plan(): plan_cleanup(‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:53:39.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:39.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:53:39.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:39.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  stopWorkers() for MultisessionFutureBackend ...
[10:53:39.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Interrupt active futures ...
[10:53:39.686] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of futures: 0
[10:53:39.686] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Interrupt active futures ... done
[10:53:39.686] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Clear future registry ...
[10:53:39.686] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Clear future registry ... done
[10:53:39.686] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Stop cluster workers ...
[10:53:39.686] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Stopping existing cluster ...
[10:53:39.687] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Cluster to shut down:
[10:53:39.687] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:53:39.698] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Stopped cluster: ‘NULL’
[10:53:39.698] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Stopping existing cluster ... done
[10:53:39.698] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Stop cluster workers ... done
[10:53:39.698] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  stopWorkers() for MultisessionFutureBackend ... done
[10:53:39.698] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Legacy shutdown of cluster workers ...
[10:53:39.698] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Stopping existing cluster ...
[10:53:39.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  No pre-existing cluster. Skipping
[10:53:39.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Stopping existing cluster ... done
[10:53:39.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Legacy shutdown of cluster workers ... done
[10:53:39.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  plan(): plan_cleanup(‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:53:39.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[10:53:39.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:53:39.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA   - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:53:39.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA   - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:53:39.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:39.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA   - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:53:39.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA   - attr(*, "call")= language plan(sequential)
[10:53:39.701] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  init: NULL
[10:53:39.701] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[10:53:39.701] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:53:39.701] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:53:39.701] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:53:39.702] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Backend function: <‘NULL’>
[10:53:39.702] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:53:39.702] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  plan(): nbrOfWorkers() = 1
[10:53:39.702] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:53:39.702] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
Testing with 2 cores ... DONE

> message("*** Tricky use cases related to globals ... DONE")
*** Tricky use cases related to globals ... DONE
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=5s, sys.self=0.4s, elapsed=1e+01s, user.child=2s, sys.child=1s
Test ‘globals,tricky’ ... success
> 
