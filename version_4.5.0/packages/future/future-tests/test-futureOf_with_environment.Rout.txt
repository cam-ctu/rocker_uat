
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script inst/testme/test-futureOf_with_environment.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future:::testme("futureOf_with_environment")
Test ‘futureOf_with_environment’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future/testme/test-futureOf_with_environment.R’

> library(future)
[08:08:18.881] Option 'future.startup.script': TRUE
[08:08:18.882] Future startup scripts considered: ‘.future.R’, ‘~/.future.R’
[08:08:18.882] Future startup scripts found: <none>

> suppressWarnings(rm(list = c("x", "z")))

> message("*** futureOf() with environment ...")
*** futureOf() with environment ...

> message("*** futureOf() with environment - future assignments ...")
*** futureOf() with environment - future assignments ...

> x <- new.env()

> x$a %<-% {
+     1
+ }
[08:08:18.884] future(..., label = NULL) ...
[08:08:18.884] | lazy: FALSE
[08:08:18.884] | stdout: TRUE
[08:08:18.884] | conditions: [n=1] ‘condition’
[08:08:18.884] | gc: FALSE
[08:08:18.884] | earlySignal: FALSE
[08:08:18.885] | getGlobalsAndPackages() ...
[08:08:18.885] | : Searching for globals ...
[08:08:18.896] | : . globals found: [1] ‘{’
[08:08:18.896] | : Searching for globals ... done
[08:08:18.896] | : Resolving globals: FALSE
[08:08:18.897] | : Search for packages associated with the globals ...
[08:08:18.897] | : . Packages associated with globals: [1] ‘base’
[08:08:18.897] | : . Packages: [1] ‘base’
[08:08:18.897] | : Search for packages associated with the globals ... done
[08:08:18.897] | : Packages after dropping 'base': [0] 
[08:08:18.898] | : globals: [0] 
[08:08:18.898] | : packages: [0] 
[08:08:18.898] | getGlobalsAndPackages() ... done
[08:08:18.898] | run() for ‘Future’ (<unnamed-1>) ...
[08:08:18.899] | : state: ‘created’
[08:08:18.899] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:18.899] | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:18.899] | : . ' function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:18.899] | : . '  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:18.899] | : . '  - attr(*, "init")= logi TRUE
[08:08:18.899] | : . '  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:18.899] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.899] | : . '  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.899] | : . '  - attr(*, "call")= language plan(sequential)
[08:08:18.903] | : . ' init: TRUE
[08:08:18.903] | : . ' makeFutureBackend(<sequential>) ...
[08:08:18.903] | : . ' , Backend function: <‘NULL’>
[08:08:18.903] | : . ' , Evaluator tweak arguments: [n=0]
[08:08:18.903] | : . ' ,  list()
[08:08:18.904] | : . ' , Evaluator formal arguments: [n=2]
[08:08:18.904] | : . ' ,  list()
[08:08:18.904] | : . ' , Backend factory arguments: [n=2]
[08:08:18.904] | : . ' , Dotted pair list of 2
[08:08:18.904] | : . ' ,  $ gc         : logi FALSE
[08:08:18.904] | : . ' ,  $ earlySignal: logi FALSE
[08:08:18.905] | : . ' , Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:18.905] | : . ' makeFutureBackend(<sequential>) ... done
[08:08:18.906] | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:18.906] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:18.906] | : Using SequentialFutureBackend ...
[08:08:18.906] | : . Number of futures since start: 0 (0 created, 0 launched, 0 finished)
[08:08:18.906] | : . Launching futures ...
[08:08:18.906] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:18.906] | : . ' , getFutureData() ...
[08:08:18.907] | : . ' , ; getFutureCore() ...
[08:08:18.907] | : . ' , ; ` Packages needed by the future expression (n = 0): <none>
[08:08:18.907] | : . ' , ; getFutureCore() ... done
[08:08:18.907] | : . ' , ; getFutureCapture() ...
[08:08:18.907] | : . ' , ; getFutureCapture() ... done
[08:08:18.907] | : . ' , ; getFutureContext() ...
[08:08:18.907] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:18.908] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:18.908] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:18.908] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:18.908] | : . ' , ; getFutureContext() ... done
[08:08:18.908] | : . ' , getFutureData() ... done
[08:08:18.910] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:18.910] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:18.911] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:18.911] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:18.911] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:18.911] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:18.911] | : . ' , ; ` | New stack:
[08:08:18.912] | : . ' , ; ` | List of 1
[08:08:18.912] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:18.912] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:18.912] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:18.912] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:18.912] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.912] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.912] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:18.912] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:18.914] | : . ' , ; ` | Old stack:
[08:08:18.914] | : . ' , ; ` | List of 1
[08:08:18.914] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:18.914] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:18.914] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:18.914] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:18.914] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.914] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.914] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:18.914] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5653066d6c70> 
[08:08:18.914] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:18.914] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.914] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:18.917] | : . ' , ; ` | Not identical
[08:08:18.917] | : . ' , ; ` | all.equal() for future ...
[08:08:18.918] | : . ' , ; ` | : List of 2
[08:08:18.918] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:18.918] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:18.918] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:18.918] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:18.918] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.918] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.918] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:18.918] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:18.918] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:18.918] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:18.918] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:18.918] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.918] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.918] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:18.918] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5653066d6c70> 
[08:08:18.918] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:18.918] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.924] | : . ' , ; ` | all.equal() for future ... done
[08:08:18.924] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:18.924] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:18.924] | : . ' , ; ` List of future strategies:
[08:08:18.924] | : . ' , ; ` 1. sequential:
[08:08:18.924] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:18.924] | : . ' , ; `    - tweaked: FALSE
[08:08:18.924] | : . ' , ; `    - call: plan(sequential)
[08:08:18.925] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:18.925] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:18.927] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:18.927] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:18.927] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:18.928] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:18.928] | : . ' , ; ` | : New stack:
[08:08:18.928] | : . ' , ; ` | : List of 1
[08:08:18.928] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:18.928] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:18.928] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:18.928] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:18.928] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.928] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.928] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:18.928] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5653066d6c70> 
[08:08:18.928] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:18.928] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.928] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:18.931] | : . ' , ; ` | : Old stack:
[08:08:18.931] | : . ' , ; ` | : List of 1
[08:08:18.931] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:18.931] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:18.931] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:18.931] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:18.931] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.931] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.931] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:18.931] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5653066d6c70> 
[08:08:18.931] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:18.931] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.931] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:18.934] | : . ' , ; ` | : Identical
[08:08:18.934] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:18.934] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:18.934] | : . ' , ; ` | List of future strategies:
[08:08:18.934] | : . ' , ; ` | 1. sequential:
[08:08:18.934] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:18.934] | : . ' , ; ` |    - tweaked: FALSE
[08:08:18.934] | : . ' , ; ` |    - call: plan(sequential)
[08:08:18.935] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:18.935] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:18.935] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:18.938] | : . ' , SequentialFuture started (and completed)
[08:08:18.938] | : . ' , signalConditions() ...
[08:08:18.938] | : . ' , ; include = ‘immediateCondition’
[08:08:18.939] | : . ' , ; exclude = 
[08:08:18.939] | : . ' , ; resignal = FALSE
[08:08:18.939] | : . ' , ; Number of conditions: 6
[08:08:18.939] | : . ' , ;  int 6
[08:08:18.939] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:18.939] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:18.939] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:18.940] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:18.940] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:18.940] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:18.940] | : . ' , signalConditions() ... done
[08:08:18.940] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:18.940] | : . Launching futures ... done
[08:08:18.940] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:18.940] | : Using SequentialFutureBackend ... done
[08:08:18.940] | run() for ‘Future’ (<unnamed-1>) ... done
[08:08:18.941] future(..., label = NULL) ... done

> f1 <- futureOf("a", envir = x)

> print(f1)
SequentialFuture:
Label: <unnamed-1>
Expression:
{
    1
}
Globals: <none>
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: FALSE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘finished’
Resolved: TRUE
Unique identifier: 2c1a5c071968e69befeb4685efd9118a-1
Owner process: 2c1a5c071968e69befeb4685efd9118a
Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
Value: 39 bytes of class ‘numeric’
Conditions captured: [n=6] ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’
Duration: 0.01776123 secs (started 2025-06-17 08:08:18.90957)
Worker process: 2c1a5c071968e69befeb4685efd9118a

> f2 <- futureOf(a, envir = x)

> f3 <- futureOf(x[["a"]])

> f4 <- futureOf(x$a)

> stopifnot(identical(f2, f1), identical(f3, f1), identical(f4, 
+     f1))

> fs <- futureOf(envir = x)

> print(fs)
$a
SequentialFuture:
Label: <unnamed-1>
Expression:
{
    1
}
Globals: <none>
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: FALSE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘finished’
Resolved: TRUE
Unique identifier: 2c1a5c071968e69befeb4685efd9118a-1
Owner process: 2c1a5c071968e69befeb4685efd9118a
Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
Value: 39 bytes of class ‘numeric’
Conditions captured: [n=6] ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’
Duration: 0.01776123 secs (started 2025-06-17 08:08:18.90957)
Worker process: 2c1a5c071968e69befeb4685efd9118a


> stopifnot(identical(names(fs), c("a")))

> stopifnot(identical(fs$a, f1))

> fsD <- futureOf(envir = x, drop = TRUE)

> print(fsD)
$a
SequentialFuture:
Label: <unnamed-1>
Expression:
{
    1
}
Globals: <none>
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: FALSE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘finished’
Resolved: TRUE
Unique identifier: 2c1a5c071968e69befeb4685efd9118a-1
Owner process: 2c1a5c071968e69befeb4685efd9118a
Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
Value: 39 bytes of class ‘numeric’
Conditions captured: [n=6] ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’
Duration: 0.01776123 secs (started 2025-06-17 08:08:18.90957)
Worker process: 2c1a5c071968e69befeb4685efd9118a


> stopifnot(all(sapply(fsD, FUN = inherits, "Future")))

> stopifnot(identical(fsD, fs))

> message("*** futureOf() with environment - future assignments ... DONE")
*** futureOf() with environment - future assignments ... DONE

> message("*** futureOf() with environment - futures ...")
*** futureOf() with environment - futures ...

> x <- new.env()

> x$a <- future({
+     1
+ })
[08:08:18.946] future(..., label = NULL) ...
[08:08:18.946] | lazy: FALSE
[08:08:18.946] | stdout: TRUE
[08:08:18.946] | conditions: [n=1] ‘condition’
[08:08:18.946] | gc: FALSE
[08:08:18.946] | earlySignal: FALSE
[08:08:18.946] | getGlobalsAndPackages() ...
[08:08:18.947] | : Searching for globals ...
[08:08:18.949] | : . globals found: [1] ‘{’
[08:08:18.949] | : Searching for globals ... done
[08:08:18.949] | : Resolving globals: FALSE
[08:08:18.950] | : Search for packages associated with the globals ...
[08:08:18.950] | : . Packages associated with globals: [1] ‘base’
[08:08:18.950] | : . Packages: [1] ‘base’
[08:08:18.950] | : Search for packages associated with the globals ... done
[08:08:18.950] | : Packages after dropping 'base': [0] 
[08:08:18.950] | : globals: [0] 
[08:08:18.950] | : packages: [0] 
[08:08:18.950] | getGlobalsAndPackages() ... done
[08:08:18.951] | run() for ‘Future’ (<unnamed-2>) ...
[08:08:18.951] | : state: ‘created’
[08:08:18.951] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:18.951] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:18.951] | : Using SequentialFutureBackend ...
[08:08:18.951] | : . Number of futures since start: 1 (1 created, 1 launched, 1 finished)
[08:08:18.951] | : . Launching futures ...
[08:08:18.951] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:18.952] | : . ' , getFutureData() ...
[08:08:18.952] | : . ' , ; getFutureCore() ...
[08:08:18.952] | : . ' , ; ` Packages needed by the future expression (n = 0): <none>
[08:08:18.952] | : . ' , ; getFutureCore() ... done
[08:08:18.952] | : . ' , ; getFutureCapture() ...
[08:08:18.952] | : . ' , ; getFutureCapture() ... done
[08:08:18.952] | : . ' , ; getFutureContext() ...
[08:08:18.952] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:18.952] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:18.952] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:18.953] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:18.953] | : . ' , ; getFutureContext() ... done
[08:08:18.953] | : . ' , getFutureData() ... done
[08:08:18.954] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:18.954] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:18.954] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:18.954] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:18.955] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:18.955] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:18.955] | : . ' , ; ` | New stack:
[08:08:18.955] | : . ' , ; ` | List of 1
[08:08:18.955] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:18.955] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:18.955] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:18.955] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:18.955] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.955] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.955] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:18.955] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:18.957] | : . ' , ; ` | Old stack:
[08:08:18.957] | : . ' , ; ` | List of 1
[08:08:18.957] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:18.957] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:18.957] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:18.957] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:18.957] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.957] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.957] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:18.957] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5653066d6c70> 
[08:08:18.957] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:18.957] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.957] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:18.961] | : . ' , ; ` | Not identical
[08:08:18.961] | : . ' , ; ` | all.equal() for future ...
[08:08:18.961] | : . ' , ; ` | : List of 2
[08:08:18.961] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:18.961] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:18.961] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:18.961] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:18.961] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.961] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.961] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:18.961] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:18.961] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:18.961] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:18.961] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:18.961] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.961] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.961] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:18.961] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5653066d6c70> 
[08:08:18.961] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:18.961] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.967] | : . ' , ; ` | all.equal() for future ... done
[08:08:18.967] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:18.967] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:18.967] | : . ' , ; ` List of future strategies:
[08:08:18.967] | : . ' , ; ` 1. sequential:
[08:08:18.967] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:18.967] | : . ' , ; `    - tweaked: FALSE
[08:08:18.967] | : . ' , ; `    - call: plan(sequential)
[08:08:18.967] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:18.968] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:18.969] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:18.969] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:18.969] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:18.969] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:18.969] | : . ' , ; ` | : New stack:
[08:08:18.970] | : . ' , ; ` | : List of 1
[08:08:18.970] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:18.970] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:18.970] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:18.970] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:18.970] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.970] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.970] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:18.970] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5653066d6c70> 
[08:08:18.970] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:18.970] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.970] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:18.973] | : . ' , ; ` | : Old stack:
[08:08:18.973] | : . ' , ; ` | : List of 1
[08:08:18.973] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:18.973] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:18.973] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:18.973] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:18.973] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.973] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.973] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:18.973] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5653066d6c70> 
[08:08:18.973] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:18.973] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:18.973] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:18.976] | : . ' , ; ` | : Identical
[08:08:18.976] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:18.976] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:18.976] | : . ' , ; ` | List of future strategies:
[08:08:18.976] | : . ' , ; ` | 1. sequential:
[08:08:18.976] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:18.976] | : . ' , ; ` |    - tweaked: FALSE
[08:08:18.976] | : . ' , ; ` |    - call: plan(sequential)
[08:08:18.976] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:18.977] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:18.977] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:18.977] | : . ' , SequentialFuture started (and completed)
[08:08:18.977] | : . ' , signalConditions() ...
[08:08:18.977] | : . ' , ; include = ‘immediateCondition’
[08:08:18.977] | : . ' , ; exclude = 
[08:08:18.977] | : . ' , ; resignal = FALSE
[08:08:18.977] | : . ' , ; Number of conditions: 6
[08:08:18.978] | : . ' , ;  int 6
[08:08:18.978] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:18.978] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:18.978] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:18.978] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:18.978] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:18.978] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:18.979] | : . ' , signalConditions() ... done
[08:08:18.979] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:18.979] | : . Launching futures ... done
[08:08:18.979] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:18.979] | : Using SequentialFutureBackend ... done
[08:08:18.979] | run() for ‘Future’ (<unnamed-2>) ... done
[08:08:18.979] future(..., label = NULL) ... done

> f1 <- futureOf("a", envir = x)

> print(f1)
SequentialFuture:
Label: <unnamed-2>
Expression:
{
    1
}
Globals: <none>
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: FALSE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘finished’
Resolved: TRUE
Unique identifier: 2c1a5c071968e69befeb4685efd9118a-2
Owner process: 2c1a5c071968e69befeb4685efd9118a
Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
Value: 39 bytes of class ‘numeric’
Conditions captured: [n=6] ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’
Duration: 0.01579881 secs (started 2025-06-17 08:08:18.953392)
Worker process: 2c1a5c071968e69befeb4685efd9118a

> stopifnot(identical(f1, x$a))

> f2 <- futureOf(a, envir = x)

> stopifnot(identical(f2, x$a))

> f3 <- futureOf(x[["a"]])

> stopifnot(identical(f3, x$a))

> f4 <- futureOf(x$a)

> stopifnot(identical(f4, x$a))

> fs <- futureOf(envir = x)

> print(fs)
$a
SequentialFuture:
Label: <unnamed-2>
Expression:
{
    1
}
Globals: <none>
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: FALSE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘finished’
Resolved: TRUE
Unique identifier: 2c1a5c071968e69befeb4685efd9118a-2
Owner process: 2c1a5c071968e69befeb4685efd9118a
Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
Value: 39 bytes of class ‘numeric’
Conditions captured: [n=6] ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’
Duration: 0.01579881 secs (started 2025-06-17 08:08:18.953392)
Worker process: 2c1a5c071968e69befeb4685efd9118a


> stopifnot(identical(names(fs), c("a")))

> stopifnot(identical(fs$a, f1))

> fsD <- futureOf(envir = x, drop = TRUE)

> print(fsD)
$a
SequentialFuture:
Label: <unnamed-2>
Expression:
{
    1
}
Globals: <none>
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘<none>’)
Immediate condition classes: ‘immediateCondition’
Lazy evaluation: FALSE
Local evaluation: TRUE
Asynchronous evaluation: TRUE
Early signaling: FALSE
Environment: R_GlobalEnv
State: ‘finished’
Resolved: TRUE
Unique identifier: 2c1a5c071968e69befeb4685efd9118a-2
Owner process: 2c1a5c071968e69befeb4685efd9118a
Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
Value: 39 bytes of class ‘numeric’
Conditions captured: [n=6] ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’
Duration: 0.01579881 secs (started 2025-06-17 08:08:18.953392)
Worker process: 2c1a5c071968e69befeb4685efd9118a


> stopifnot(all(sapply(fsD, FUN = inherits, "Future")))

> stopifnot(identical(fsD, fs))

> message("*** futureOf() with environment - futures ... DONE")
*** futureOf() with environment - futures ... DONE

> message("*** futureOf() with environment - exceptions ...")
*** futureOf() with environment - exceptions ...

> res <- tryCatch(futureOf(x[[0]], mustExist = FALSE), 
+     error = identity)

> stopifnot(inherits(res, "error"))

> res <- tryCatch(futureOf(x[[0]], mustExist = TRUE), 
+     error = identity)

> stopifnot(inherits(res, "error"))

> res <- tryCatch(futureOf(x[[10]], mustExist = TRUE), 
+     error = identity)

> stopifnot(inherits(res, "error"))

> res <- tryCatch(futureOf(x[[1 + (0+2i)]], mustExist = TRUE), 
+     error = identity)

> stopifnot(inherits(res, "error"))

> message("*** futureOf() with environment - exceptions ... DONE")
*** futureOf() with environment - exceptions ... DONE

> message("*** futureOf() with environment ... DONE")
*** futureOf() with environment ... DONE
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=0.2s, sys.self=0.008s, elapsed=0.2s, user.child=0.002s, sys.child=0.003s
Test ‘futureOf_with_environment’ ... success
> 
