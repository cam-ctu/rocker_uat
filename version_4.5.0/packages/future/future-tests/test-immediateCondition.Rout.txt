
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script inst/testme/test-immediateCondition.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future:::testme("immediateCondition")
Test ‘immediateCondition’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future/testme/test-immediateCondition.R’

> library(future)
[08:09:11.010] Option 'future.startup.script': TRUE
[08:09:11.010] Future startup scripts considered: ‘.future.R’, ‘~/.future.R’
[08:09:11.010] Future startup scripts found: <none>

> options(future.debug = FALSE)

> f_try <- function(f, ...) {
+     res <- tryCatch(..., error = identity)
+     if (inherits(res, "error")) {
+         label <- sQuote(f$label)
+    .... [TRUNCATED] 

> message("*** immediateCondition:s ...")
*** immediateCondition:s ...

> immediateMessage <- function(..., domain = NULL, appendLF = TRUE) {
+     msg <- .makeMessage(..., domain = domain, appendLF = appendLF)
+     call  .... [TRUNCATED] 

> immediateWarning <- function(..., domain = NULL) {
+     msg <- .makeMessage(..., domain = domain)
+     call <- sys.call()
+     w <- simpleWarning .... [TRUNCATED] 

> recordConditions <- function(expr, ...) {
+     conditions <- list()
+     withCallingHandlers(expr, condition = function(c) {
+         attr(c, "re ..." ... [TRUNCATED] 

> recordMessages <- function(expr, ...) {
+     sapply(recordConditions(expr, ...), FUN = conditionMessage)
+ }

> if (isTRUE(getOption("future.psock.relay.immediate"))) {
+     excl <- "cluster"
+     if (getRversion() < "3.4.0") 
+         excl <- c(excl, "mult ..." ... [TRUNCATED] 

> print(strategies)
[1] "sequential"

> for (ss in seq_along(strategies)) {
+     strategy <- strategies[[ss]]
+     message(sprintf("Immediate relay w/ %s ...", names(strategies)[ss]))
+  .... [TRUNCATED] 

* A single future ...
- creating future
IM1
Warning in immediateWarning("IW") : IW
IM2
  class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
  msgs [n=3]: ‘IM1
’, ‘IW’, ‘IM2
’
- checking if resolved
  result: TRUE
  msgs [n=0]: 
- resolve w/out collecting results
  msgs [n=0]: 
- resolve w/ collect results
  msgs [n=0]: 
- getting value
M
  value: 42
  msgs [n=1]: ‘M
’
List of 4
 $ :List of 2
  ..$ message: chr "IM1\n"
  ..$ call   : language immediateMessage("IM1")
  ..- attr(*, "class")= chr [1:4] "simpleMessage" "message" "condition" "immediateCondition"
 $ :List of 2
  ..$ message: chr "M\n"
  ..$ call   : language message("M")
  ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
 $ :List of 2
  ..$ message: chr "IW"
  ..$ call   : language immediateWarning("IW")
  ..- attr(*, "class")= chr [1:4] "simpleWarning" "warning" "condition" "immediateCondition"
 $ :List of 2
  ..$ message: chr "IM2\n"
  ..$ call   : language immediateMessage("IM2")
  ..- attr(*, "class")= chr [1:4] "simpleMessage" "message" "condition" "immediateCondition"
- getting value again
M
  value: 42
* A single future ... DONE
* Two futures ... 
- list of two futures
IM1
Warning in immediateWarning("IW1") : IW1
IM2
Warning in immediateWarning("IW2") : IW2
  class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
  msgs [n=4]: ‘IM1
’, ‘IW1’, ‘IM2
’, ‘IW2’
- check if resolved
  result: TRUE, TRUE
  msgs [n=0]: 
- resolve w/out collecting results
  msgs [n=0]: 
- resolve w/ collect results
  msgs [n=0]: 
- getting value
M1
M2
  values: 1, 2
  msgs [n=2]: ‘M1
’, ‘M2
’
- getting value again
M1
M2
  values: 1, 2
  msgs [n=2]: ‘M1
’, ‘M2
’
- getting values one by one
M1
M2
  values: 1, 2
* Two futures ... DONE


> message("*** immediateCondition:s ... DONE")
*** immediateCondition:s ... DONE
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=0.4s, sys.self=0.002s, elapsed=2s, user.child=0.002s, sys.child=0.004s
Test ‘immediateCondition’ ... success
> 
