
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script incl/testme/test-dotdotdot.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future:::testme("dotdotdot")
Test ‘dotdotdot’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future/testme/test-dotdotdot.R’

> library(future)
[10:52:32.860] Option 'future.startup.script': TRUE
[10:52:32.861] Future startup scripts considered: ‘.future.R’, ‘~/.future.R’
[10:52:32.861] Future startup scripts found: <none>

> library(listenv)

> for (cores in 1:availCores) {
+     message(sprintf("Testing with %d cores ...", cores))
+     options(mc.cores = cores)
+     message("*** Global a ..." ... [TRUNCATED] 
Testing with 1 cores ...
*** Global argument '...' ...
- plan('sequential') ...
[10:52:32.896] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:32.896] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:52:32.896] |  :  all.equal() for FutureStrategyList ...
[10:52:32.896] |  :  .  New stack:
[10:52:32.896] |  :  .  List of 1
[10:52:32.896] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:32.896] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:32.896] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:32.896] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.896] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.896] |  :  .    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:32.896] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:32.900] |  :  .  Old stack:
[10:52:32.900] |  :  .  List of 1
[10:52:32.900] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:32.900] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:32.900] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:32.900] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.900] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.900] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:52:32.900] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:32.902] |  :  .  Not identical
[10:52:32.902] |  :  .  all.equal() for future ...
[10:52:32.902] |  :  .  |  List of 2
[10:52:32.902] |  :  .  |   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:32.902] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:32.902] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:32.902] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.902] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.902] |  :  .  |    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:32.902] |  :  .  |   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:32.902] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:32.902] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:32.902] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.902] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.902] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:32.906] |  :  .  all.equal() for future ... done
[10:52:32.906] |  :  all.equal() for FutureStrategyList ... done
[10:52:32.906] |  :  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:32.906] |  :  List of future strategies:
[10:52:32.906] |  :  1. sequential:
[10:52:32.906] |  :     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:32.906] |  :     - tweaked: FALSE
[10:52:32.906] |  :     - call: plan(sequential)
[10:52:32.907] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:52:32.907] plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
** Sum function 'A' with plan('sequential') ...
function (x, ...) 
{
    message("Arguments '...' exists: ", exists("...", inherits = TRUE))
    y %<-% {
        sum(x, ...)
    }
    y
}
<bytecode: 0x558f6d5a9ce0>
Arguments '...' exists: TRUE
[10:52:32.909] getGlobalsAndPackages() ...
[10:52:32.909] |  Searching for globals ...
[10:52:32.915] |  :  globals found: [4] ‘{’, ‘sum’, ‘x’, ‘...’
[10:52:32.916] |  Searching for globals ... DONE
[10:52:32.916] |  Resolving globals: FALSE
[10:52:32.916] |  Tweak future expression to call with '...' arguments ...
[10:52:32.916] |  :  {
[10:52:32.916] |  :      "# future::getGlobalsAndPackages(): wrapping the original future"
[10:52:32.916] |  :      "# expression in do.call(), because function called uses '...'  "
[10:52:32.916] |  :      "# as a global variable                                         "
[10:52:32.916] |  :      do.call(function(...) {
[10:52:32.916] |  :          sum(x, ...)
[10:52:32.916] |  :      }, args = future.call.arguments)
[10:52:32.916] |  :  }
[10:52:32.916] |  Tweak future expression to call with '...' arguments ... DONE
[10:52:32.916] |  Search for packages associated with the globals ...
[10:52:32.917] |  :  Packages associated with globals: [1] ‘base’
[10:52:32.917] |  :  Packages: [1] ‘base’
[10:52:32.917] |  Search for packages associated with the globals ... DONE
[10:52:32.917] |  Packages after dropping 'base': [0] 
[10:52:32.917] |  globals: [2] ‘x’, ‘future.call.arguments’
[10:52:32.917] |  packages: [0] 
[10:52:32.918] getGlobalsAndPackages() ... done
[10:52:32.918] run() for Future (‘Future’) ...
[10:52:32.918] |  state: ‘created’
[10:52:32.918] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:32.919] |  :  makeFutureBackend(<sequential>) ...
[10:52:32.919] |  :  .  Backend function: <‘NULL’>
[10:52:32.919] |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:32.919] |  :  makeFutureBackend(<sequential>) ... done
[10:52:32.919] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:32.919] |  Using SequentialFutureBackend ...
[10:52:32.919] |  :  Launching futures ...
[10:52:32.920] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:32.920] |  :  .  |  getFutureData() ...
[10:52:32.920] |  :  .  |  :  getFutureCore() ...
[10:52:32.920] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:32.920] |  :  .  |  :  getFutureCore() ... done
[10:52:32.920] |  :  .  |  :  getFutureCapture() ...
[10:52:32.920] |  :  .  |  :  getFutureCapture() ... done
[10:52:32.921] |  :  .  |  :  getFutureContext() ...
[10:52:32.921] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:32.921] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:32.921] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:32.921] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:32.921] |  :  .  |  :  getFutureContext() ... done
[10:52:32.921] |  :  .  |  getFutureData() ... done
[10:52:32.922] |  :  .  |  attachPackages() ...
[10:52:32.922] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:32.923] |  :  .  |  attachPackages() ... DONE
[10:52:32.923] |  :  .  |  attachPackages() ...
[10:52:32.923] |  :  .  |  :  packages: [n=0] 
[10:52:32.923] |  :  .  |  attachPackages() ... DONE
[10:52:32.925] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:32.925] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:32.925] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:32.926] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:32.926] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:32.926] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:32.926] |  :  .  |  :  .  |  New stack:
[10:52:32.926] |  :  .  |  :  .  |  List of 1
[10:52:32.926] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:32.926] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:32.926] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:32.926] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.926] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.926] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:32.926] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:32.928] |  :  .  |  :  .  |  Old stack:
[10:52:32.928] |  :  .  |  :  .  |  List of 1
[10:52:32.928] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:32.928] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:32.928] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:32.928] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.928] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.928] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:32.928] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6e598730> 
[10:52:32.928] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:32.928] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.928] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:32.931] |  :  .  |  :  .  |  Not identical
[10:52:32.932] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:32.932] |  :  .  |  :  .  |  :  List of 2
[10:52:32.932] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:32.932] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:32.932] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:32.932] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.932] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.932] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:32.932] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:32.932] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:32.932] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:32.932] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.932] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.932] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:32.932] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6e598730> 
[10:52:32.932] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:32.932] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.936] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:32.936] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:32.937] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:32.937] |  :  .  |  :  .  List of future strategies:
[10:52:32.937] |  :  .  |  :  .  1. sequential:
[10:52:32.937] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:32.937] |  :  .  |  :  .     - tweaked: FALSE
[10:52:32.937] |  :  .  |  :  .     - call: plan(sequential)
[10:52:32.937] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:32.937] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:32.937] |  :  .  |  assign_globals() ...
[10:52:32.937] |  :  .  |  List of 2
[10:52:32.937] |  :  .  |   $ x                    : int [1:2] 1 2
[10:52:32.937] |  :  .  |   $ future.call.arguments:List of 1
[10:52:32.937] |  :  .  |    ..$ : num 3
[10:52:32.937] |  :  .  |    ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:52:32.937] |  :  .  |   - attr(*, "where")=List of 2
[10:52:32.937] |  :  .  |    ..$ x                    :<environment: R_EmptyEnv> 
[10:52:32.937] |  :  .  |    ..$ future.call.arguments:<environment: R_EmptyEnv> 
[10:52:32.937] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:32.937] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:52:32.937] |  :  .  |   - attr(*, "total_size")= num NA
[10:52:32.937] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:52:32.941] |  :  .  |  - copied ‘x’ to environment
[10:52:32.941] |  :  .  |  - copied ‘future.call.arguments’ to environment
[10:52:32.941] |  :  .  |  assign_globals() ... done
[10:52:32.944] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:32.944] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:32.944] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:32.944] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:32.944] |  :  .  |  :  .  |  :  New stack:
[10:52:32.944] |  :  .  |  :  .  |  :  List of 1
[10:52:32.944] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:32.944] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:32.944] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:32.944] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.944] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.944] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:32.944] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6e598730> 
[10:52:32.944] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:32.944] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.944] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:32.948] |  :  .  |  :  .  |  :  Old stack:
[10:52:32.948] |  :  .  |  :  .  |  :  List of 1
[10:52:32.948] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:32.948] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:32.948] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:32.948] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.948] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.948] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:32.948] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6e598730> 
[10:52:32.948] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:32.948] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.948] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:32.951] |  :  .  |  :  .  |  :  Identical
[10:52:32.951] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:32.951] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:32.951] |  :  .  |  :  .  |  List of future strategies:
[10:52:32.951] |  :  .  |  :  .  |  1. sequential:
[10:52:32.951] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:32.951] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:32.951] |  :  .  |  :  .  |     - call: plan(sequential)
[10:52:32.952] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:32.952] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:32.952] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:32.952] |  :  .  |  SequentialFuture started (and completed)
[10:52:32.953] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:32.953] |  :  Launching futures ... done
[10:52:32.953] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:32.953] |  Using SequentialFutureBackend ... done
[10:52:32.953] run() for Future (‘SequentialFuture’) ... done
[1] 6
** Sum function 'B' with plan('sequential') ...
function (x, ...) 
{
    sumt <- function(x) {
        message("Arguments '...' exists: ", exists("...", inherits = TRUE))
        y %<-% {
            sum(x, ...)
        }
        y
    }
    sumt(x)
}
<bytecode: 0x558f6bee5f48>
Arguments '...' exists: TRUE
[10:52:32.954] getGlobalsAndPackages() ...
[10:52:32.954] |  Searching for globals ...
[10:52:32.955] |  :  globals found: [4] ‘{’, ‘sum’, ‘x’, ‘...’
[10:52:32.956] |  Searching for globals ... DONE
[10:52:32.956] |  Resolving globals: FALSE
[10:52:32.956] |  Tweak future expression to call with '...' arguments ...
[10:52:32.956] |  :  {
[10:52:32.956] |  :      "# future::getGlobalsAndPackages(): wrapping the original future"
[10:52:32.956] |  :      "# expression in do.call(), because function called uses '...'  "
[10:52:32.956] |  :      "# as a global variable                                         "
[10:52:32.956] |  :      do.call(function(...) {
[10:52:32.956] |  :          sum(x, ...)
[10:52:32.956] |  :      }, args = future.call.arguments)
[10:52:32.956] |  :  }
[10:52:32.956] |  Tweak future expression to call with '...' arguments ... DONE
[10:52:32.956] |  Search for packages associated with the globals ...
[10:52:32.957] |  :  Packages associated with globals: [1] ‘base’
[10:52:32.957] |  :  Packages: [1] ‘base’
[10:52:32.957] |  Search for packages associated with the globals ... DONE
[10:52:32.957] |  Packages after dropping 'base': [0] 
[10:52:32.957] |  globals: [2] ‘x’, ‘future.call.arguments’
[10:52:32.957] |  packages: [0] 
[10:52:32.957] getGlobalsAndPackages() ... done
[10:52:32.958] run() for Future (‘Future’) ...
[10:52:32.958] |  state: ‘created’
[10:52:32.958] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:32.958] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:32.958] |  Using SequentialFutureBackend ...
[10:52:32.958] |  :  Launching futures ...
[10:52:32.958] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:32.958] |  :  .  |  getFutureData() ...
[10:52:32.958] |  :  .  |  :  getFutureCore() ...
[10:52:32.958] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:32.959] |  :  .  |  :  getFutureCore() ... done
[10:52:32.959] |  :  .  |  :  getFutureCapture() ...
[10:52:32.959] |  :  .  |  :  getFutureCapture() ... done
[10:52:32.959] |  :  .  |  :  getFutureContext() ...
[10:52:32.959] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:32.959] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:32.959] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:32.959] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:32.959] |  :  .  |  :  getFutureContext() ... done
[10:52:32.959] |  :  .  |  getFutureData() ... done
[10:52:32.960] |  :  .  |  attachPackages() ...
[10:52:32.960] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:32.960] |  :  .  |  attachPackages() ... DONE
[10:52:32.960] |  :  .  |  attachPackages() ...
[10:52:32.960] |  :  .  |  :  packages: [n=0] 
[10:52:32.960] |  :  .  |  attachPackages() ... DONE
[10:52:32.960] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:32.960] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:32.961] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:32.961] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:32.961] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:32.961] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:32.961] |  :  .  |  :  .  |  New stack:
[10:52:32.961] |  :  .  |  :  .  |  List of 1
[10:52:32.961] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:32.961] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:32.961] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:32.961] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.961] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.961] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:32.961] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:32.963] |  :  .  |  :  .  |  Old stack:
[10:52:32.964] |  :  .  |  :  .  |  List of 1
[10:52:32.964] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:32.964] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:32.964] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:32.964] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.964] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.964] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:32.964] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6e598730> 
[10:52:32.964] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:32.964] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.964] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:32.966] |  :  .  |  :  .  |  Not identical
[10:52:32.966] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:32.967] |  :  .  |  :  .  |  :  List of 2
[10:52:32.967] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:32.967] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:32.967] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:32.967] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.967] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.967] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:32.967] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:32.967] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:32.967] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:32.967] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.967] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.967] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:32.967] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6e598730> 
[10:52:32.967] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:32.967] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.972] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:32.972] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:32.972] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:32.972] |  :  .  |  :  .  List of future strategies:
[10:52:32.972] |  :  .  |  :  .  1. sequential:
[10:52:32.972] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:32.972] |  :  .  |  :  .     - tweaked: FALSE
[10:52:32.972] |  :  .  |  :  .     - call: plan(sequential)
[10:52:32.973] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:32.973] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:32.973] |  :  .  |  assign_globals() ...
[10:52:32.973] |  :  .  |  List of 2
[10:52:32.973] |  :  .  |   $ x                    : int [1:2] 1 2
[10:52:32.973] |  :  .  |   $ future.call.arguments:List of 1
[10:52:32.973] |  :  .  |    ..$ : num 3
[10:52:32.973] |  :  .  |    ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:52:32.973] |  :  .  |   - attr(*, "where")=List of 2
[10:52:32.973] |  :  .  |    ..$ x                    :<environment: R_EmptyEnv> 
[10:52:32.973] |  :  .  |    ..$ future.call.arguments:<environment: R_EmptyEnv> 
[10:52:32.973] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:32.973] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:52:32.973] |  :  .  |   - attr(*, "total_size")= num NA
[10:52:32.973] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:52:32.977] |  :  .  |  - copied ‘x’ to environment
[10:52:32.977] |  :  .  |  - copied ‘future.call.arguments’ to environment
[10:52:32.977] |  :  .  |  assign_globals() ... done
[10:52:32.978] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:32.978] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:32.978] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:32.979] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:32.979] |  :  .  |  :  .  |  :  New stack:
[10:52:32.979] |  :  .  |  :  .  |  :  List of 1
[10:52:32.979] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:32.979] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:32.979] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:32.979] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.979] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.979] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:32.979] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6e598730> 
[10:52:32.979] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:32.979] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.979] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:32.982] |  :  .  |  :  .  |  :  Old stack:
[10:52:32.982] |  :  .  |  :  .  |  :  List of 1
[10:52:32.982] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:32.982] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:32.982] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:32.982] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.982] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.982] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:32.982] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6e598730> 
[10:52:32.982] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:32.982] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.982] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:32.984] |  :  .  |  :  .  |  :  Identical
[10:52:32.984] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:32.985] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:32.985] |  :  .  |  :  .  |  List of future strategies:
[10:52:32.985] |  :  .  |  :  .  |  1. sequential:
[10:52:32.985] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:32.985] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:32.985] |  :  .  |  :  .  |     - call: plan(sequential)
[10:52:32.985] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:32.985] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:32.985] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:32.985] |  :  .  |  SequentialFuture started (and completed)
[10:52:32.986] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:32.986] |  :  Launching futures ... done
[10:52:32.986] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:32.986] |  Using SequentialFutureBackend ... done
[10:52:32.986] run() for Future (‘SequentialFuture’) ... done
[1] 6
** Sum function 'C' with plan('sequential') ...
function (x, y) 
{
    message("Arguments '...' exists: ", exists("...", inherits = TRUE))
    y %<-% {
        sum(x, y)
    }
    y
}
<bytecode: 0x558f6c5ecb68>
Arguments '...' exists: FALSE
[10:52:32.986] getGlobalsAndPackages() ...
[10:52:32.987] |  Searching for globals ...
[10:52:32.988] |  :  globals found: [4] ‘{’, ‘sum’, ‘x’, ‘y’
[10:52:32.988] |  Searching for globals ... DONE
[10:52:32.988] |  Resolving globals: FALSE
[10:52:32.988] |  Search for packages associated with the globals ...
[10:52:32.988] |  :  Packages associated with globals: [1] ‘base’
[10:52:32.989] |  :  Packages: [1] ‘base’
[10:52:32.989] |  Search for packages associated with the globals ... DONE
[10:52:32.989] |  Packages after dropping 'base': [0] 
[10:52:32.989] |  globals: [2] ‘x’, ‘y’
[10:52:32.989] |  packages: [0] 
[10:52:32.989] getGlobalsAndPackages() ... done
[10:52:32.989] run() for Future (‘Future’) ...
[10:52:32.989] |  state: ‘created’
[10:52:32.990] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:32.990] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:32.990] |  Using SequentialFutureBackend ...
[10:52:32.991] |  :  Launching futures ...
[10:52:32.991] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:32.991] |  :  .  |  getFutureData() ...
[10:52:32.991] |  :  .  |  :  getFutureCore() ...
[10:52:32.991] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:32.991] |  :  .  |  :  getFutureCore() ... done
[10:52:32.991] |  :  .  |  :  getFutureCapture() ...
[10:52:32.991] |  :  .  |  :  getFutureCapture() ... done
[10:52:32.991] |  :  .  |  :  getFutureContext() ...
[10:52:32.991] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:32.992] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:32.992] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:32.992] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:32.992] |  :  .  |  :  getFutureContext() ... done
[10:52:32.992] |  :  .  |  getFutureData() ... done
[10:52:32.992] |  :  .  |  attachPackages() ...
[10:52:32.992] |  :  .  |  :  packages: [n=1] ‘future’
[10:52:32.992] |  :  .  |  attachPackages() ... DONE
[10:52:32.992] |  :  .  |  attachPackages() ...
[10:52:32.992] |  :  .  |  :  packages: [n=0] 
[10:52:32.993] |  :  .  |  attachPackages() ... DONE
[10:52:32.993] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:32.993] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:32.993] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:32.993] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:32.993] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:32.994] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:32.994] |  :  .  |  :  .  |  New stack:
[10:52:32.994] |  :  .  |  :  .  |  List of 1
[10:52:32.994] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:32.994] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:32.994] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:32.994] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.994] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.994] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:32.994] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:32.996] |  :  .  |  :  .  |  Old stack:
[10:52:32.996] |  :  .  |  :  .  |  List of 1
[10:52:32.996] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:32.996] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:32.996] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:32.996] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.996] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.996] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:32.996] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6e598730> 
[10:52:32.996] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:32.996] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.996] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:32.999] |  :  .  |  :  .  |  Not identical
[10:52:32.999] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:32.999] |  :  .  |  :  .  |  :  List of 2
[10:52:32.999] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:32.999] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:32.999] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:32.999] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.999] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.999] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:32.999] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:32.999] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:32.999] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:32.999] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.999] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:32.999] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:32.999] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6e598730> 
[10:52:32.999] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:32.999] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.003] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:33.003] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:33.003] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:33.004] |  :  .  |  :  .  List of future strategies:
[10:52:33.004] |  :  .  |  :  .  1. sequential:
[10:52:33.004] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:33.004] |  :  .  |  :  .     - tweaked: FALSE
[10:52:33.004] |  :  .  |  :  .     - call: plan(sequential)
[10:52:33.004] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:33.004] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:33.004] |  :  .  |  assign_globals() ...
[10:52:33.004] |  :  .  |  List of 2
[10:52:33.004] |  :  .  |   $ x: int [1:2] 1 2
[10:52:33.004] |  :  .  |   $ y: num 3
[10:52:33.004] |  :  .  |   - attr(*, "where")=List of 2
[10:52:33.004] |  :  .  |    ..$ x:<environment: R_EmptyEnv> 
[10:52:33.004] |  :  .  |    ..$ y:<environment: R_EmptyEnv> 
[10:52:33.004] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:33.004] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:52:33.004] |  :  .  |   - attr(*, "total_size")= num NA
[10:52:33.004] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:52:33.007] |  :  .  |  - copied ‘x’ to environment
[10:52:33.007] |  :  .  |  - copied ‘y’ to environment
[10:52:33.008] |  :  .  |  assign_globals() ... done
[10:52:33.009] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:33.009] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:33.009] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:33.009] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:33.009] |  :  .  |  :  .  |  :  New stack:
[10:52:33.010] |  :  .  |  :  .  |  :  List of 1
[10:52:33.010] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.010] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.010] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.010] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.010] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.010] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:33.010] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6e598730> 
[10:52:33.010] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.010] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.010] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.013] |  :  .  |  :  .  |  :  Old stack:
[10:52:33.013] |  :  .  |  :  .  |  :  List of 1
[10:52:33.013] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.013] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.013] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.013] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.013] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.013] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:33.013] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6e598730> 
[10:52:33.013] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.013] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.013] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.016] |  :  .  |  :  .  |  :  Identical
[10:52:33.016] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:33.016] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:33.016] |  :  .  |  :  .  |  List of future strategies:
[10:52:33.016] |  :  .  |  :  .  |  1. sequential:
[10:52:33.016] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:33.016] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:33.016] |  :  .  |  :  .  |     - call: plan(sequential)
[10:52:33.017] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:33.017] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:33.017] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:33.017] |  :  .  |  SequentialFuture started (and completed)
[10:52:33.017] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:33.017] |  :  Launching futures ... done
[10:52:33.017] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:33.017] |  Using SequentialFutureBackend ... done
[10:52:33.017] run() for Future (‘SequentialFuture’) ... done
[1] 6
** Sum function 'D' with plan('sequential') ...
function (x, y) 
{
    message("Arguments '...' exists: ", exists("...", inherits = TRUE))
    y %<-% {
        sum(x, y, ...)
    }
    y
}
<bytecode: 0x558f6d9a9998>
Arguments '...' exists: FALSE
[10:52:33.018] getGlobalsAndPackages() ...
[10:52:33.018] |  Searching for globals ...
[10:52:33.019] |  :  globals found: [5] ‘{’, ‘sum’, ‘x’, ‘y’, ‘...’
[10:52:33.020] |  Searching for globals ... DONE
[10:52:33.020] |  Resolving globals: FALSE
[10:52:33.020] |  Tweak future expression to call with '...' arguments ...
[10:52:33.020] |  :  Search for packages associated with the globals ...
[10:52:33.020] |  :  .  Packages associated with globals: [1] ‘base’
[10:52:33.020] |  :  .  Packages: [1] ‘base’
[10:52:33.021] |  :  Search for packages associated with the globals ... DONE
[10:52:33.021] |  :  Packages after dropping 'base': [0] 
[10:52:33.021] |  :  globals: [2] ‘x’, ‘y’
[10:52:33.021] |  :  packages: [0] 
[10:52:33.021] |  getGlobalsAndPackages() ... done
[10:52:33.021] |  run() for Future (‘Future’) ...
[10:52:33.021] |  :  state: ‘created’
[10:52:33.021] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.021] |  :  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.022] |  :  Using SequentialFutureBackend ...
[10:52:33.022] |  :  .  Launching futures ...
[10:52:33.022] |  :  .  |  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:33.022] |  :  .  |  :  getFutureData() ...
[10:52:33.022] |  :  .  |  :  .  getFutureCore() ...
[10:52:33.022] |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:52:33.022] |  :  .  |  :  .  getFutureCore() ... done
[10:52:33.022] |  :  .  |  :  .  getFutureCapture() ...
[10:52:33.022] |  :  .  |  :  .  getFutureCapture() ... done
[10:52:33.022] |  :  .  |  :  .  getFutureContext() ...
[10:52:33.023] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.023] |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:52:33.023] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.023] |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:52:33.023] |  :  .  |  :  .  getFutureContext() ... done
[10:52:33.023] |  :  .  |  :  getFutureData() ... done
[10:52:33.023] |  :  .  |  :  attachPackages() ...
[10:52:33.023] |  :  .  |  :  .  packages: [n=1] ‘future’
[10:52:33.023] |  :  .  |  :  attachPackages() ... DONE
[10:52:33.023] |  :  .  |  :  attachPackages() ...
[10:52:33.024] |  :  .  |  :  .  packages: [n=0] 
[10:52:33.024] |  :  .  |  :  attachPackages() ... DONE
[10:52:33.024] |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.024] |  :  .  |  :  .  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:33.024] |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.024] |  :  .  |  :  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:33.025] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:33.025] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:33.025] |  :  .  |  :  .  |  :  New stack:
[10:52:33.025] |  :  .  |  :  .  |  :  List of 1
[10:52:33.025] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.025] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.025] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.025] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.025] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.025] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.025] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.027] |  :  .  |  :  .  |  :  Old stack:
[10:52:33.027] |  :  .  |  :  .  |  :  List of 1
[10:52:33.027] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.027] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.027] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.027] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.027] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.027] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:33.027] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6e598730> 
[10:52:33.027] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.027] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.027] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.031] |  :  .  |  :  .  |  :  Not identical
[10:52:33.031] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:52:33.031] |  :  .  |  :  .  |  :  .  List of 2
[10:52:33.031] |  :  .  |  :  .  |  :  .   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.031] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.031] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.031] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.031] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.031] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.031] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.031] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.031] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.031] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.031] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.031] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:52:33.031] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6e598730> 
[10:52:33.031] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.031] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.036] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:52:33.036] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:33.036] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:33.036] |  :  .  |  :  .  |  List of future strategies:
[10:52:33.036] |  :  .  |  :  .  |  1. sequential:
[10:52:33.036] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:33.036] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:33.036] |  :  .  |  :  .  |     - call: plan(sequential)
[10:52:33.036] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:33.036] |  :  .  |  :  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:33.037] |  :  .  |  :  assign_globals() ...
[10:52:33.037] |  :  .  |  :  List of 2
[10:52:33.037] |  :  .  |  :   $ x: int [1:2] 1 2
[10:52:33.037] |  :  .  |  :   $ y: num 3
[10:52:33.037] |  :  .  |  :   - attr(*, "where")=List of 2
[10:52:33.037] |  :  .  |  :    ..$ x:<environment: R_EmptyEnv> 
[10:52:33.037] |  :  .  |  :    ..$ y:<environment: R_EmptyEnv> 
[10:52:33.037] |  :  .  |  :   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:33.037] |  :  .  |  :   - attr(*, "resolved")= logi FALSE
[10:52:33.037] |  :  .  |  :   - attr(*, "total_size")= num NA
[10:52:33.037] |  :  .  |  :   - attr(*, "already-done")= logi TRUE
[10:52:33.040] |  :  .  |  :  - copied ‘x’ to environment
[10:52:33.040] |  :  .  |  :  - copied ‘y’ to environment
[10:52:33.040] |  :  .  |  :  assign_globals() ... done
[10:52:33.041] |  :  .  |  :  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:33.042] |  :  .  |  :  .  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:33.042] |  :  .  |  :  .  |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:33.042] |  :  .  |  :  .  |  :  all.equal() for FutureStrategyList ...
[10:52:33.042] |  :  .  |  :  .  |  :  .  New stack:
[10:52:33.042] |  :  .  |  :  .  |  :  .  List of 1
[10:52:33.042] |  :  .  |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.042] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.042] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.042] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.042] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.042] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:52:33.042] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6e598730> 
[10:52:33.042] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.042] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.042] |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.045] |  :  .  |  :  .  |  :  .  Old stack:
[10:52:33.045] |  :  .  |  :  .  |  :  .  List of 1
[10:52:33.045] |  :  .  |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.045] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.045] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.045] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.045] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.045] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:52:33.045] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6e598730> 
[10:52:33.045] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.045] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.045] |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.048] |  :  .  |  :  .  |  :  .  Identical
[10:52:33.048] |  :  .  |  :  .  |  :  all.equal() for FutureStrategyList ... done
[10:52:33.048] |  :  .  |  :  .  |  :  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:33.048] |  :  .  |  :  .  |  :  List of future strategies:
[10:52:33.048] |  :  .  |  :  .  |  :  1. sequential:
[10:52:33.048] |  :  .  |  :  .  |  :     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:33.048] |  :  .  |  :  .  |  :     - tweaked: FALSE
[10:52:33.048] |  :  .  |  :  .  |  :     - call: plan(sequential)
[10:52:33.048] |  :  .  |  :  .  |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:33.048] |  :  .  |  :  .  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:33.049] |  :  .  |  :  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:33.049] |  :  .  |  :  SequentialFuture started (and completed)
[10:52:33.049] |  :  .  |  :  signalConditions() ...
[10:52:33.049] |  :  .  |  :  .  include = ‘immediateCondition’
[10:52:33.049] |  :  .  |  :  .  exclude = 
[10:52:33.049] |  :  .  |  :  .  resignal = FALSE
[10:52:33.049] |  :  .  |  :  .  Number of conditions: 1
[10:52:33.049] |  :  .  |  :  signalConditions() ... done
[10:52:33.049] |  :  .  |  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:33.050] |  :  .  Launching futures ... done
[10:52:33.050] |  :  .  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:33.050] |  :  Using SequentialFutureBackend ... done
[10:52:33.051] |  run() for Future (‘SequentialFuture’) ... done
[10:52:33.051] |  signalConditions() ...
[10:52:33.051] |  :  include = ‘immediateCondition’
[10:52:33.051] |  :  exclude = 
[10:52:33.051] |  :  resignal = FALSE
[10:52:33.051] |  :  Number of conditions: 1
[10:52:33.051] |  signalConditions() ... done
[10:52:33.051] |  Future state: ‘finished’
[10:52:33.051] |  signalConditions() ...
[10:52:33.052] |  :  include = ‘condition’
[10:52:33.052] |  :  exclude = ‘immediateCondition’
[10:52:33.052] |  :  resignal = TRUE
[10:52:33.052] |  :  Number of conditions: 1
[10:52:33.052] |  :  Condition #1: ‘simpleError’, ‘error’, ‘condition’
[10:52:33.052] |  signalConditions() ... done
Error in eval(quote({ : '...' used in an incorrect context
[1] "Error in eval(quote({ : '...' used in an incorrect context\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in eval(quote({    {        sum(x, y, ...)    }}), new.env()): '...' used in an incorrect context>
** Sum function 'E' with plan('sequential') ...
function (...) 
{
    message("Arguments '...' exists: ", exists("...", inherits = TRUE))
    globals <- globals::globalsByName("...", envir = environment())
    f <- future({
        fcn <- function() sum(...)
        fcn()
    }, envir = parent.frame(), globals = globals)
    y <- value(f)
    y
}
<bytecode: 0x558f6e1d14b0>
Arguments '...' exists: TRUE
[10:52:33.053] |  getGlobalsAndPackages() ...
[10:52:33.053] |  :  globals passed as-is: [1] ‘...’
[10:52:33.053] |  :  Resolving globals: FALSE
[10:52:33.053] |  :  Tweak future expression to call with '...' arguments ...
[10:52:33.053] |  :  .  {
[10:52:33.053] |  :  .      "# future::getGlobalsAndPackages(): wrapping the original future"
[10:52:33.053] |  :  .      "# expression in do.call(), because function called uses '...'  "
[10:52:33.053] |  :  .      "# as a global variable                                         "
[10:52:33.053] |  :  .      do.call(function(...) {
[10:52:33.053] |  :  .          fcn <- function() sum(...)
[10:52:33.053] |  :  .          fcn()
[10:52:33.053] |  :  .      }, args = future.call.arguments)
[10:52:33.053] |  :  .  }
[10:52:33.053] |  :  Tweak future expression to call with '...' arguments ... DONE
[10:52:33.053] |  :  Search for packages associated with the globals ...
[10:52:33.054] |  :  .  Packages associated with globals: [0] 
[10:52:33.054] |  :  .  Packages: [0] 
[10:52:33.054] |  :  Search for packages associated with the globals ... DONE
[10:52:33.054] |  :  Packages after dropping 'base': [0] 
[10:52:33.054] |  :  globals: [1] ‘future.call.arguments’
[10:52:33.054] |  :  packages: [0] 
[10:52:33.054] |  getGlobalsAndPackages() ... done
[10:52:33.054] |  run() for Future (‘Future’) ...
[10:52:33.055] |  :  state: ‘created’
[10:52:33.055] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.055] |  :  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.055] |  :  Using SequentialFutureBackend ...
[10:52:33.055] |  :  .  Launching futures ...
[10:52:33.055] |  :  .  |  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:33.055] |  :  .  |  :  getFutureData() ...
[10:52:33.055] |  :  .  |  :  .  getFutureCore() ...
[10:52:33.055] |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:52:33.055] |  :  .  |  :  .  getFutureCore() ... done
[10:52:33.056] |  :  .  |  :  .  getFutureCapture() ...
[10:52:33.056] |  :  .  |  :  .  getFutureCapture() ... done
[10:52:33.056] |  :  .  |  :  .  getFutureContext() ...
[10:52:33.056] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.056] |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:52:33.056] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.056] |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:52:33.056] |  :  .  |  :  .  getFutureContext() ... done
[10:52:33.056] |  :  .  |  :  getFutureData() ... done
[10:52:33.056] |  :  .  |  :  attachPackages() ...
[10:52:33.057] |  :  .  |  :  .  packages: [n=1] ‘future’
[10:52:33.057] |  :  .  |  :  attachPackages() ... DONE
[10:52:33.057] |  :  .  |  :  attachPackages() ...
[10:52:33.057] |  :  .  |  :  .  packages: [n=0] 
[10:52:33.057] |  :  .  |  :  attachPackages() ... DONE
[10:52:33.057] |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.057] |  :  .  |  :  .  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:33.058] |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.058] |  :  .  |  :  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:33.058] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:33.058] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:33.058] |  :  .  |  :  .  |  :  New stack:
[10:52:33.058] |  :  .  |  :  .  |  :  List of 1
[10:52:33.058] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.058] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.058] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.058] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.058] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.058] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.058] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.060] |  :  .  |  :  .  |  :  Old stack:
[10:52:33.060] |  :  .  |  :  .  |  :  List of 1
[10:52:33.060] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.060] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.060] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.060] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.060] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.060] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:33.060] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6e598730> 
[10:52:33.060] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.060] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.060] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.063] |  :  .  |  :  .  |  :  Not identical
[10:52:33.063] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:52:33.063] |  :  .  |  :  .  |  :  .  List of 2
[10:52:33.063] |  :  .  |  :  .  |  :  .   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.063] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.063] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.063] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.063] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.063] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.063] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.063] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.063] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.063] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.063] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.063] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:52:33.063] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6e598730> 
[10:52:33.063] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.063] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.068] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:52:33.068] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:33.068] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:33.068] |  :  .  |  :  .  |  List of future strategies:
[10:52:33.068] |  :  .  |  :  .  |  1. sequential:
[10:52:33.068] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:33.068] |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:33.068] |  :  .  |  :  .  |     - call: plan(sequential)
[10:52:33.068] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:33.069] |  :  .  |  :  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:33.069] |  :  .  |  :  assign_globals() ...
[10:52:33.069] |  :  .  |  :  List of 1
[10:52:33.069] |  :  .  |  :   $ future.call.arguments:List of 2
[10:52:33.069] |  :  .  |  :    ..$ : int [1:2] 1 2
[10:52:33.069] |  :  .  |  :    ..$ : num 3
[10:52:33.069] |  :  .  |  :    ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:52:33.069] |  :  .  |  :   - attr(*, "where")=List of 1
[10:52:33.069] |  :  .  |  :    ..$ future.call.arguments:<environment: R_EmptyEnv> 
[10:52:33.069] |  :  .  |  :   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:33.069] |  :  .  |  :   - attr(*, "resolved")= logi FALSE
[10:52:33.069] |  :  .  |  :   - attr(*, "total_size")= num NA
[10:52:33.069] |  :  .  |  :   - attr(*, "already-done")= logi TRUE
[10:52:33.073] |  :  .  |  :  - copied ‘future.call.arguments’ to environment
[10:52:33.073] |  :  .  |  :  assign_globals() ... done
[10:52:33.075] |  :  .  |  :  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:33.075] |  :  .  |  :  .  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:33.075] |  :  .  |  :  .  |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:33.075] |  :  .  |  :  .  |  :  all.equal() for FutureStrategyList ...
[10:52:33.075] |  :  .  |  :  .  |  :  .  New stack:
[10:52:33.075] |  :  .  |  :  .  |  :  .  List of 1
[10:52:33.075] |  :  .  |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.075] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.075] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.075] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.075] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.075] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:52:33.075] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6e598730> 
[10:52:33.075] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.075] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.075] |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.078] |  :  .  |  :  .  |  :  .  Old stack:
[10:52:33.078] |  :  .  |  :  .  |  :  .  List of 1
[10:52:33.078] |  :  .  |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.078] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.078] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.078] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.078] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.078] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:52:33.078] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6e598730> 
[10:52:33.078] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.078] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.078] |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.081] |  :  .  |  :  .  |  :  .  Identical
[10:52:33.081] |  :  .  |  :  .  |  :  all.equal() for FutureStrategyList ... done
[10:52:33.081] |  :  .  |  :  .  |  :  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:33.081] |  :  .  |  :  .  |  :  List of future strategies:
[10:52:33.081] |  :  .  |  :  .  |  :  1. sequential:
[10:52:33.081] |  :  .  |  :  .  |  :     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:33.081] |  :  .  |  :  .  |  :     - tweaked: FALSE
[10:52:33.081] |  :  .  |  :  .  |  :     - call: plan(sequential)
[10:52:33.082] |  :  .  |  :  .  |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:33.082] |  :  .  |  :  .  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:33.082] |  :  .  |  :  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:33.082] |  :  .  |  :  SequentialFuture started (and completed)
[10:52:33.082] |  :  .  |  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:33.082] |  :  .  Launching futures ... done
[10:52:33.082] |  :  .  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:33.083] |  :  Using SequentialFutureBackend ... done
[10:52:33.083] |  run() for Future (‘SequentialFuture’) ... done
[1] 6
** Sum function 'F' with plan('sequential') ...
function (x, y) 
{
    message("Using '...' in a formula")
    fcn <- function(x, y) {
        z = ~list(...)
        sum(x, y)
    }
    f <- future(fcn(x, y))
    y <- value(f)
    y
}
<bytecode: 0x558f6e4a03f0>
Using '...' in a formula
[10:52:33.083] |  getGlobalsAndPackages() ...
[10:52:33.083] |  :  Searching for globals ...
[10:52:33.086] |  :  .  globals found: [9] ‘fcn’, ‘x’, ‘y’, ‘{’, ‘=’, ‘~’, ‘list’, ‘...’, ‘sum’
[10:52:33.086] |  :  Searching for globals ... DONE
[10:52:33.086] |  :  Resolving globals: FALSE
[10:52:33.087] |  :  Tweak future expression to call with '...' arguments ...
[10:52:33.087] |  :  .  Search for packages associated with the globals ...
[10:52:33.087] |  :  .  |  Packages associated with globals: [1] ‘base’
[10:52:33.087] |  :  .  |  Packages: [1] ‘base’
[10:52:33.087] |  :  .  Search for packages associated with the globals ... DONE
[10:52:33.087] |  :  .  Packages after dropping 'base': [0] 
[10:52:33.088] |  :  .  globals: [3] ‘fcn’, ‘x’, ‘y’
[10:52:33.088] |  :  .  packages: [0] 
[10:52:33.088] |  :  getGlobalsAndPackages() ... done
[10:52:33.088] |  :  run() for Future (‘Future’) ...
[10:52:33.088] |  :  .  state: ‘created’
[10:52:33.088] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.088] |  :  .  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.088] |  :  .  Using SequentialFutureBackend ...
[10:52:33.088] |  :  .  |  Launching futures ...
[10:52:33.089] |  :  .  |  :  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:52:33.089] |  :  .  |  :  .  getFutureData() ...
[10:52:33.089] |  :  .  |  :  .  |  getFutureCore() ...
[10:52:33.089] |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:52:33.089] |  :  .  |  :  .  |  getFutureCore() ... done
[10:52:33.089] |  :  .  |  :  .  |  getFutureCapture() ...
[10:52:33.089] |  :  .  |  :  .  |  getFutureCapture() ... done
[10:52:33.089] |  :  .  |  :  .  |  getFutureContext() ...
[10:52:33.089] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.089] |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:52:33.090] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.090] |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:52:33.090] |  :  .  |  :  .  |  getFutureContext() ... done
[10:52:33.090] |  :  .  |  :  .  getFutureData() ... done
[10:52:33.090] |  :  .  |  :  .  attachPackages() ...
[10:52:33.090] |  :  .  |  :  .  |  packages: [n=1] ‘future’
[10:52:33.090] |  :  .  |  :  .  attachPackages() ... DONE
[10:52:33.090] |  :  .  |  :  .  attachPackages() ...
[10:52:33.091] |  :  .  |  :  .  |  packages: [n=0] 
[10:52:33.092] |  :  .  |  :  .  attachPackages() ... DONE
[10:52:33.092] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.092] |  :  .  |  :  .  |  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:33.092] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.092] |  :  .  |  :  .  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:33.093] |  :  .  |  :  .  |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:33.093] |  :  .  |  :  .  |  :  all.equal() for FutureStrategyList ...
[10:52:33.093] |  :  .  |  :  .  |  :  .  New stack:
[10:52:33.093] |  :  .  |  :  .  |  :  .  List of 1
[10:52:33.093] |  :  .  |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.093] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.093] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.093] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.093] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.093] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.093] |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.095] |  :  .  |  :  .  |  :  .  Old stack:
[10:52:33.095] |  :  .  |  :  .  |  :  .  List of 1
[10:52:33.095] |  :  .  |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.095] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.095] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.095] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.095] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.095] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:52:33.095] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6e598730> 
[10:52:33.095] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.095] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.095] |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.098] |  :  .  |  :  .  |  :  .  Not identical
[10:52:33.098] |  :  .  |  :  .  |  :  .  all.equal() for future ...
[10:52:33.098] |  :  .  |  :  .  |  :  .  |  List of 2
[10:52:33.098] |  :  .  |  :  .  |  :  .  |   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.098] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.098] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.098] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.098] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.098] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.098] |  :  .  |  :  .  |  :  .  |   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.098] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.098] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.098] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.098] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.098] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:33.098] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6e598730> 
[10:52:33.098] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.098] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.102] |  :  .  |  :  .  |  :  .  all.equal() for future ... done
[10:52:33.103] |  :  .  |  :  .  |  :  all.equal() for FutureStrategyList ... done
[10:52:33.103] |  :  .  |  :  .  |  :  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:33.103] |  :  .  |  :  .  |  :  List of future strategies:
[10:52:33.103] |  :  .  |  :  .  |  :  1. sequential:
[10:52:33.103] |  :  .  |  :  .  |  :     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:33.103] |  :  .  |  :  .  |  :     - tweaked: FALSE
[10:52:33.103] |  :  .  |  :  .  |  :     - call: plan(sequential)
[10:52:33.103] |  :  .  |  :  .  |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:33.103] |  :  .  |  :  .  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:33.103] |  :  .  |  :  .  assign_globals() ...
[10:52:33.104] |  :  .  |  :  .  List of 3
[10:52:33.104] |  :  .  |  :  .   $ fcn:function (x, y)  
[10:52:33.104] |  :  .  |  :  .   $ x  : int [1:2] 1 2
[10:52:33.104] |  :  .  |  :  .   $ y  : num 3
[10:52:33.104] |  :  .  |  :  .   - attr(*, "where")=List of 3
[10:52:33.104] |  :  .  |  :  .    ..$ fcn:<environment: R_EmptyEnv> 
[10:52:33.104] |  :  .  |  :  .    ..$ x  :<environment: R_EmptyEnv> 
[10:52:33.104] |  :  .  |  :  .    ..$ y  :<environment: R_EmptyEnv> 
[10:52:33.104] |  :  .  |  :  .   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:33.104] |  :  .  |  :  .   - attr(*, "resolved")= logi FALSE
[10:52:33.104] |  :  .  |  :  .   - attr(*, "total_size")= num NA
[10:52:33.104] |  :  .  |  :  .   - attr(*, "already-done")= logi TRUE
[10:52:33.107] |  :  .  |  :  .  - reassign environment for ‘fcn’ [where=emptyenv()]
[10:52:33.107] |  :  .  |  :  .  - copied ‘fcn’ to environment
[10:52:33.107] |  :  .  |  :  .  - copied ‘x’ to environment
[10:52:33.107] |  :  .  |  :  .  - copied ‘y’ to environment
[10:52:33.107] |  :  .  |  :  .  assign_globals() ... done
[10:52:33.109] |  :  .  |  :  .  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:33.109] |  :  .  |  :  .  |  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:33.109] |  :  .  |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:33.109] |  :  .  |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:33.109] |  :  .  |  :  .  |  :  .  |  New stack:
[10:52:33.109] |  :  .  |  :  .  |  :  .  |  List of 1
[10:52:33.109] |  :  .  |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.109] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.109] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.109] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.109] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.109] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:33.109] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6e598730> 
[10:52:33.109] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.109] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.109] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.113] |  :  .  |  :  .  |  :  .  |  Old stack:
[10:52:33.113] |  :  .  |  :  .  |  :  .  |  List of 1
[10:52:33.113] |  :  .  |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.113] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.113] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.113] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.113] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.113] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:52:33.113] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6e598730> 
[10:52:33.113] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.113] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.113] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.116] |  :  .  |  :  .  |  :  .  |  Identical
[10:52:33.116] |  :  .  |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:33.116] |  :  .  |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:52:33.116] |  :  .  |  :  .  |  :  .  List of future strategies:
[10:52:33.116] |  :  .  |  :  .  |  :  .  1. sequential:
[10:52:33.116] |  :  .  |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:33.116] |  :  .  |  :  .  |  :  .     - tweaked: FALSE
[10:52:33.116] |  :  .  |  :  .  |  :  .     - call: plan(sequential)
[10:52:33.117] |  :  .  |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:33.117] |  :  .  |  :  .  |  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:33.117] |  :  .  |  :  .  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:33.117] |  :  .  |  :  .  SequentialFuture started (and completed)
[10:52:33.117] |  :  .  |  :  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:52:33.117] |  :  .  |  Launching futures ... done
[10:52:33.117] |  :  .  |  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:52:33.117] |  :  .  Using SequentialFutureBackend ... done
[10:52:33.118] |  :  run() for Future (‘SequentialFuture’) ... done
[1] 6
Testing with 1 cores ... DONE
Testing with 2 cores ...
*** Global argument '...' ...
- plan('multicore') ...
[10:52:33.118] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.118] |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:52:33.118] |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:33.119] |  :  .  |  :  New stack:
[10:52:33.119] |  :  .  |  :  List of 1
[10:52:33.119] |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.119] |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.119] |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.119] |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.119] |  :  .  |  :      ...)  
[10:52:33.119] |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.119] |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.119] |  :  .  |  :    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.119] |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.121] |  :  .  |  :  Old stack:
[10:52:33.121] |  :  .  |  :  List of 1
[10:52:33.121] |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.121] |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.121] |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.121] |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.121] |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.121] |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:52:33.121] |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6e598730> 
[10:52:33.121] |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.121] |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.121] |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.124] |  :  .  |  :  Not identical
[10:52:33.124] |  :  .  |  :  all.equal() for future ...
[10:52:33.124] |  :  .  |  :  .  List of 2
[10:52:33.124] |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.124] |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.124] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.124] |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.124] |  :  .  |  :  .      ...)  
[10:52:33.124] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.124] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.124] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.124] |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.124] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.124] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.124] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.124] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.124] |  :  .  |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:52:33.124] |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6e598730> 
[10:52:33.124] |  :  .  |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.124] |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.128] |  :  .  |  :  .  Formals differ
[10:52:33.128] |  :  .  |  :  all.equal() for future ... done
[10:52:33.128] |  :  .  |  :  Future strategies differ at level 1
[10:52:33.128] |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:33.128] |  :  .  |  plan(): Setting new future strategy stack:
[10:52:33.129] |  :  .  |  List of future strategies:
[10:52:33.129] |  :  .  |  1. multicore:
[10:52:33.129] |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:33.129] |  :  .  |     - tweaked: FALSE
[10:52:33.129] |  :  .  |     - call: plan(strategy, substitute = FALSE)
[10:52:33.130] |  :  .  |  List of 1
[10:52:33.130] |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.130] |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.130] |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.130] |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.130] |  :  .  |      ...)  
[10:52:33.130] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.130] |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.130] |  :  .  |    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.130] |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.132] |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:52:33.132] |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.132] |  :  .  |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:33.132] |  :  .  |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.132] |  :  .  |  :  Legacy shutdown of cluster workers ...
[10:52:33.133] |  :  .  |  :  .  Stopping existing cluster ...
[10:52:33.133] |  :  .  |  :  .  |  No pre-existing cluster. Skipping
[10:52:33.133] |  :  .  |  :  .  Stopping existing cluster ... done
[10:52:33.133] |  :  .  |  :  Legacy shutdown of cluster workers ... done
[10:52:33.133] |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:52:33.133] |  :  .  |  plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ...
[10:52:33.133] |  :  .  |  :  function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.133] |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.133] |  :  .  |  :   - attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.133] |  :  .  |  :   - attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.133] |  :  .  |  :      ...)  
[10:52:33.133] |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.133] |  :  .  |  :   - attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.133] |  :  .  |  :   - attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.135] |  :  .  |  :  init: NULL
[10:52:33.135] |  :  .  |  plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ... done
[10:52:33.135] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.135] |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:33.135] |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.136] |  :  .  |  Backend function: <‘NULL’>
[10:52:33.137] |  :  .  |  Backend: <‘MulticoreFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:33.137] |  :  .  |  plan(): nbrOfWorkers() = 2
[10:52:33.137] |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:52:33.137] |  :  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
** Sum function 'A' with plan('multicore') ...
function (x, ...) 
{
    message("Arguments '...' exists: ", exists("...", inherits = TRUE))
    y %<-% {
        sum(x, ...)
    }
    y
}
<bytecode: 0x558f6d5a9ce0>
Arguments '...' exists: TRUE
[10:52:33.138] |  :  getGlobalsAndPackages() ...
[10:52:33.138] |  :  .  Searching for globals ...
[10:52:33.139] |  :  .  |  globals found: [4] ‘{’, ‘sum’, ‘x’, ‘...’
[10:52:33.139] |  :  .  Searching for globals ... DONE
[10:52:33.140] |  :  .  Resolving globals: FALSE
[10:52:33.140] |  :  .  Tweak future expression to call with '...' arguments ...
[10:52:33.140] |  :  .  |  {
[10:52:33.140] |  :  .  |      "# future::getGlobalsAndPackages(): wrapping the original future"
[10:52:33.140] |  :  .  |      "# expression in do.call(), because function called uses '...'  "
[10:52:33.140] |  :  .  |      "# as a global variable                                         "
[10:52:33.140] |  :  .  |      do.call(function(...) {
[10:52:33.140] |  :  .  |          sum(x, ...)
[10:52:33.140] |  :  .  |      }, args = future.call.arguments)
[10:52:33.140] |  :  .  |  }
[10:52:33.140] |  :  .  Tweak future expression to call with '...' arguments ... DONE
[10:52:33.140] |  :  .  Search for packages associated with the globals ...
[10:52:33.140] |  :  .  |  Packages associated with globals: [1] ‘base’
[10:52:33.141] |  :  .  |  Packages: [1] ‘base’
[10:52:33.141] |  :  .  Search for packages associated with the globals ... DONE
[10:52:33.141] |  :  .  Packages after dropping 'base': [0] 
[10:52:33.141] |  :  .  globals: [2] ‘x’, ‘future.call.arguments’
[10:52:33.141] |  :  .  packages: [0] 
[10:52:33.141] |  :  getGlobalsAndPackages() ... done
[10:52:33.141] |  :  run() for Future (‘Future’) ...
[10:52:33.141] |  :  .  state: ‘created’
[10:52:33.141] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.142] |  :  .  |  makeFutureBackend(<multicore>) ...
[10:52:33.142] |  :  .  |  :  Backend function: <‘NULL’>
[10:52:33.152] |  :  .  |  :  Backend: <‘MulticoreFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:33.153] |  :  .  |  makeFutureBackend(<multicore>) ... done
[10:52:33.153] |  :  .  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.153] |  :  .  Using MulticoreFutureBackend ...
[10:52:33.153] |  :  .  |  Launching futures ...
[10:52:33.153] |  :  .  |  :  launchFuture() for MulticoreFutureBackend ...
[10:52:33.153] |  :  .  |  :  .  getFutureData() ...
[10:52:33.153] |  :  .  |  :  .  |  getFutureCore() ...
[10:52:33.153] |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:52:33.154] |  :  .  |  :  .  |  getFutureCore() ... done
[10:52:33.154] |  :  .  |  :  .  |  getFutureCapture() ...
[10:52:33.154] |  :  .  |  :  .  |  getFutureCapture() ... done
[10:52:33.154] |  :  .  |  :  .  |  getFutureContext() ...
[10:52:33.154] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.154] |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:52:33.154] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.154] |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:52:33.154] |  :  .  |  :  .  |  getFutureContext() ... done
[10:52:33.155] |  :  .  |  :  .  getFutureData() ... done
[10:52:33.155] |  :  .  |  :  .  requestCore(..., workers = 2) ...
[10:52:33.155] |  :  .  |  :  .  requestCore(..., workers = 2) ...
[10:52:33.158] |  :  .  |  :  .  MulticoreFuture started
[10:52:33.158] |  :  .  |  :  .  attachPackages() ...
[10:52:33.158] |  :  .  |  :  launchFuture() for MulticoreFutureBackend ...
[10:52:33.159] |  :  .  |  Launching futures ... done
[10:52:33.159] |  :  .  |  :  .  |  packages: [n=1] ‘future’
[10:52:33.159] |  :  .  |  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:33.159] |  :  .  |  :  .  attachPackages() ... DONE
[10:52:33.159] |  :  .  Using MulticoreFutureBackend ... done
[10:52:33.159] |  :  .  |  :  .  attachPackages() ...
[10:52:33.159] |  :  run() for Future (‘MulticoreFuture’) ... done
[10:52:33.159] |  :  .  |  :  .  |  packages: [n=0] 
[10:52:33.160] |  :  .  |  :  .  attachPackages() ... DONE
[10:52:33.160] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.161] |  :  .  |  :  .  |  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:33.161] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.162] |  :  .  |  :  .  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:33.162] |  :  .  |  :  .  |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:33.162] |  :  result() for MulticoreFuture ...
[10:52:33.162] |  :  .  |  :  .  |  :  all.equal() for FutureStrategyList ...
[10:52:33.162] |  :  .  |  :  .  |  :  .  New stack:
[10:52:33.162] |  :  .  |  :  .  |  :  .  List of 1
[10:52:33.162] |  :  .  |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.162] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.162] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.162] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.162] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.162] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.162] |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.166] |  :  .  |  :  .  |  :  .  Old stack:
[10:52:33.167] |  :  .  |  :  .  |  :  .  List of 1
[10:52:33.167] |  :  .  |  :  .  |  :  .   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.167] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.167] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.167] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.167] |  :  .  |  :  .  |  :  .      ...)  
[10:52:33.167] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.167] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.167] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.167] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.167] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.167] |  :  .  |  :  .  |  :  .      ...)  
[10:52:33.167] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.167] |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.171] |  :  .  |  :  .  |  :  .  Not identical
[10:52:33.172] |  :  .  |  :  .  |  :  .  all.equal() for future ...
[10:52:33.172] |  :  .  |  :  .  |  :  .  |  List of 2
[10:52:33.172] |  :  .  |  :  .  |  :  .  |   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.172] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.172] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.172] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.172] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.172] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.172] |  :  .  |  :  .  |  :  .  |   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.172] |  :  .  |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.172] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.172] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.172] |  :  .  |  :  .  |  :  .  |      ...)  
[10:52:33.172] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.172] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.172] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.172] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.172] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.172] |  :  .  |  :  .  |  :  .  |      ...)  
[10:52:33.172] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.179] |  :  .  |  :  .  |  :  .  |  Formals differ
[10:52:33.179] |  :  .  |  :  .  |  :  .  all.equal() for future ... done
[10:52:33.179] |  :  .  |  :  .  |  :  .  Future strategies differ at level 1
[10:52:33.179] |  :  .  |  :  .  |  :  all.equal() for FutureStrategyList ... done
[10:52:33.179] |  :  .  |  :  .  |  :  plan(): Setting new future strategy stack:
[10:52:33.179] |  :  .  |  :  .  |  :  List of future strategies:
[10:52:33.179] |  :  .  |  :  .  |  :  1. sequential:
[10:52:33.179] |  :  .  |  :  .  |  :     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:33.179] |  :  .  |  :  .  |  :     - tweaked: FALSE
[10:52:33.179] |  :  .  |  :  .  |  :     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.182] |  :  .  |  :  .  |  :  List of 1
[10:52:33.182] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.182] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.182] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.182] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.182] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.182] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.182] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.187] |  :  .  |  :  .  |  :  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:33.187] |  :  .  |  :  .  |  :  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:33.187] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.187] |  :  .  |  :  .  |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:33.188] |  :  .  |  :  .  |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.188] |  :  .  |  :  .  |  :  Backend function: <‘NULL’>
[10:52:33.188] |  :  .  |  :  .  |  :  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:33.188] |  :  .  |  :  .  |  :  plan(): nbrOfWorkers() = 1
[10:52:33.188] |  :  .  |  :  .  |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:33.189] |  :  .  |  :  .  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:33.189] |  :  .  |  :  .  assign_globals() ...
[10:52:33.189] |  :  .  |  :  .  List of 2
[10:52:33.189] |  :  .  |  :  .   $ x                    : int [1:2] 1 2
[10:52:33.189] |  :  .  |  :  .   $ future.call.arguments:List of 1
[10:52:33.189] |  :  .  |  :  .    ..$ : num 3
[10:52:33.189] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:52:33.189] |  :  .  |  :  .   - attr(*, "where")=List of 2
[10:52:33.189] |  :  .  |  :  .    ..$ x                    :<environment: R_EmptyEnv> 
[10:52:33.189] |  :  .  |  :  .    ..$ future.call.arguments:<environment: R_EmptyEnv> 
[10:52:33.189] |  :  .  |  :  .   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:33.189] |  :  .  |  :  .   - attr(*, "resolved")= logi FALSE
[10:52:33.189] |  :  .  |  :  .   - attr(*, "total_size")= num NA
[10:52:33.189] |  :  .  |  :  .   - attr(*, "already-done")= logi TRUE
[10:52:33.194] |  :  .  |  :  .  - copied ‘x’ to environment
[10:52:33.194] |  :  .  |  :  .  - copied ‘future.call.arguments’ to environment
[10:52:33.194] |  :  .  |  :  .  assign_globals() ... done
[10:52:33.196] |  :  .  |  :  .  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:33.196] |  :  .  |  :  .  |  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:33.196] |  :  .  |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:33.196] |  :  .  |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:33.197] |  :  .  |  :  .  |  :  .  |  New stack:
[10:52:33.197] |  :  .  |  :  .  |  :  .  |  List of 1
[10:52:33.197] |  :  .  |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.197] |  :  .  |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.197] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.197] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.197] |  :  .  |  :  .  |  :  .  |      ...)  
[10:52:33.197] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.197] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.197] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.197] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.197] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.197] |  :  .  |  :  .  |  :  .  |      ...)  
[10:52:33.197] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.197] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.200] |  :  .  |  :  .  |  :  .  |  Old stack:
[10:52:33.200] |  :  .  |  :  .  |  :  .  |  List of 1
[10:52:33.200] |  :  .  |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.200] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.200] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.200] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.200] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.200] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.200] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.202] |  :  .  |  :  .  |  :  .  |  Not identical
[10:52:33.202] |  :  .  |  :  .  |  :  .  |  all.equal() for future ...
[10:52:33.202] |  :  .  |  :  .  |  :  .  |  :  List of 2
[10:52:33.202] |  :  .  |  :  .  |  :  .  |  :   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.202] |  :  .  |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.202] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.202] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.202] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:52:33.202] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.202] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.202] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.202] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.202] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.202] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:52:33.202] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.202] |  :  .  |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.202] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.202] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.202] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.202] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.202] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.208] |  :  .  |  :  .  |  :  .  |  :  Formals differ
[10:52:33.208] |  :  .  |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:33.208] |  :  .  |  :  .  |  :  .  |  Future strategies differ at level 1
[10:52:33.208] |  :  .  |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:33.208] |  :  .  |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:52:33.208] |  :  .  |  :  .  |  :  .  List of future strategies:
[10:52:33.208] |  :  .  |  :  .  |  :  .  1. multicore:
[10:52:33.208] |  :  .  |  :  .  |  :  .     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:33.208] |  :  .  |  :  .  |  :  .     - tweaked: FALSE
[10:52:33.208] |  :  .  |  :  .  |  :  .     - call: plan(strategy, substitute = FALSE)
[10:52:33.208] |  :  .  |  :  .  |  :  .  List of 1
[10:52:33.208] |  :  .  |  :  .  |  :  .   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.208] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.208] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.208] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.208] |  :  .  |  :  .  |  :  .      ...)  
[10:52:33.208] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.208] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.208] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.208] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.208] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.208] |  :  .  |  :  .  |  :  .      ...)  
[10:52:33.208] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.208] |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.211] |  :  .  |  :  .  |  :  .  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:33.211] |  :  .  |  :  .  |  :  .  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:33.212] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.212] |  :  .  |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:33.212] |  :  .  |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.212] |  :  .  |  :  .  |  :  .  plan(): nbrOfWorkers() = 2
[10:52:33.212] |  :  .  |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:33.212] |  :  .  |  :  .  |  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:33.212] |  :  .  |  :  .  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:33.213] |  :  .  readImmediateCondition() ...
[10:52:33.213] |  :  .    - path: ‘/tmp/RtmpyCmE7g/.future/immediateConditions’
[10:52:33.214] |  :  .   - Number of RDS files: 0
[10:52:33.214] |  :  .  readImmediateCondition() ... DONE
[10:52:33.217] |  :  .  result() for MulticoreFuture ...
[10:52:33.218] |  :  .  result() for MulticoreFuture ... done
[10:52:33.218] |  :  result() for MulticoreFuture ... done
[10:52:33.218] |  :  result() for MulticoreFuture ...
[10:52:33.218] |  :  result() for MulticoreFuture ... done
[1] 6
** Sum function 'B' with plan('multicore') ...
function (x, ...) 
{
    sumt <- function(x) {
        message("Arguments '...' exists: ", exists("...", inherits = TRUE))
        y %<-% {
            sum(x, ...)
        }
        y
    }
    sumt(x)
}
<bytecode: 0x558f6bee5f48>
Arguments '...' exists: TRUE
[10:52:33.219] |  :  getGlobalsAndPackages() ...
[10:52:33.219] |  :  .  Searching for globals ...
[10:52:33.221] |  :  .  |  globals found: [4] ‘{’, ‘sum’, ‘x’, ‘...’
[10:52:33.221] |  :  .  Searching for globals ... DONE
[10:52:33.221] |  :  .  Resolving globals: FALSE
[10:52:33.221] |  :  .  Tweak future expression to call with '...' arguments ...
[10:52:33.222] |  :  .  |  {
[10:52:33.222] |  :  .  |      "# future::getGlobalsAndPackages(): wrapping the original future"
[10:52:33.222] |  :  .  |      "# expression in do.call(), because function called uses '...'  "
[10:52:33.222] |  :  .  |      "# as a global variable                                         "
[10:52:33.222] |  :  .  |      do.call(function(...) {
[10:52:33.222] |  :  .  |          sum(x, ...)
[10:52:33.222] |  :  .  |      }, args = future.call.arguments)
[10:52:33.222] |  :  .  |  }
[10:52:33.222] |  :  .  Tweak future expression to call with '...' arguments ... DONE
[10:52:33.222] |  :  .  Search for packages associated with the globals ...
[10:52:33.222] |  :  .  |  Packages associated with globals: [1] ‘base’
[10:52:33.223] |  :  .  |  Packages: [1] ‘base’
[10:52:33.223] |  :  .  Search for packages associated with the globals ... DONE
[10:52:33.223] |  :  .  Packages after dropping 'base': [0] 
[10:52:33.223] |  :  .  globals: [2] ‘x’, ‘future.call.arguments’
[10:52:33.223] |  :  .  packages: [0] 
[10:52:33.223] |  :  getGlobalsAndPackages() ... done
[10:52:33.224] |  :  run() for Future (‘Future’) ...
[10:52:33.224] |  :  .  state: ‘created’
[10:52:33.224] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.224] |  :  .  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.224] |  :  .  Using MulticoreFutureBackend ...
[10:52:33.224] |  :  .  |  Launching futures ...
[10:52:33.224] |  :  .  |  :  launchFuture() for MulticoreFutureBackend ...
[10:52:33.225] |  :  .  |  :  .  getFutureData() ...
[10:52:33.225] |  :  .  |  :  .  |  getFutureCore() ...
[10:52:33.225] |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:52:33.225] |  :  .  |  :  .  |  getFutureCore() ... done
[10:52:33.225] |  :  .  |  :  .  |  getFutureCapture() ...
[10:52:33.225] |  :  .  |  :  .  |  getFutureCapture() ... done
[10:52:33.225] |  :  .  |  :  .  |  getFutureContext() ...
[10:52:33.225] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.226] |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:52:33.226] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.226] |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:52:33.226] |  :  .  |  :  .  |  getFutureContext() ... done
[10:52:33.226] |  :  .  |  :  .  getFutureData() ... done
[10:52:33.226] |  :  .  |  :  .  requestCore(..., workers = 2) ...
[10:52:33.227] |  :  .  |  :  .  requestCore(..., workers = 2) ...
[10:52:33.228] |  :  .  |  :  .  MulticoreFuture started
[10:52:33.229] |  :  .  |  :  launchFuture() for MulticoreFutureBackend ...
[10:52:33.229] |  :  .  |  Launching futures ... done
[10:52:33.229] |  :  .  |  :  .  attachPackages() ...
[10:52:33.229] |  :  .  |  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:33.229] |  :  .  |  :  .  |  packages: [n=1] ‘future’
[10:52:33.229] |  :  .  Using MulticoreFutureBackend ... done
[10:52:33.229] |  :  run() for Future (‘MulticoreFuture’) ... done
[10:52:33.230] |  :  .  |  :  .  attachPackages() ... DONE
[10:52:33.230] |  :  .  |  :  .  attachPackages() ...
[10:52:33.230] |  :  .  |  :  .  |  packages: [n=0] 
[10:52:33.230] |  :  result() for MulticoreFuture ...
[10:52:33.230] |  :  .  |  :  .  attachPackages() ... DONE
[10:52:33.231] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.231] |  :  .  |  :  .  |  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:33.231] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.232] |  :  .  |  :  .  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:33.232] |  :  .  |  :  .  |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:33.232] |  :  .  |  :  .  |  :  all.equal() for FutureStrategyList ...
[10:52:33.233] |  :  .  |  :  .  |  :  .  New stack:
[10:52:33.233] |  :  .  |  :  .  |  :  .  List of 1
[10:52:33.233] |  :  .  |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.233] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.233] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.233] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.233] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.233] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.233] |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.241] |  :  .  |  :  .  |  :  .  Old stack:
[10:52:33.242] |  :  .  |  :  .  |  :  .  List of 1
[10:52:33.242] |  :  .  |  :  .  |  :  .   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.242] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.242] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.242] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.242] |  :  .  |  :  .  |  :  .      ...)  
[10:52:33.242] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.242] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.242] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.242] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.242] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.242] |  :  .  |  :  .  |  :  .      ...)  
[10:52:33.242] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.242] |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.247] |  :  .  |  :  .  |  :  .  Not identical
[10:52:33.247] |  :  .  |  :  .  |  :  .  all.equal() for future ...
[10:52:33.247] |  :  .  |  :  .  |  :  .  |  List of 2
[10:52:33.247] |  :  .  |  :  .  |  :  .  |   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.247] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.247] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.247] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.247] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.247] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.247] |  :  .  |  :  .  |  :  .  |   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.247] |  :  .  |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.247] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.247] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.247] |  :  .  |  :  .  |  :  .  |      ...)  
[10:52:33.247] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.247] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.247] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.247] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.247] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.247] |  :  .  |  :  .  |  :  .  |      ...)  
[10:52:33.247] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.254] |  :  .  |  :  .  |  :  .  |  Formals differ
[10:52:33.254] |  :  .  |  :  .  |  :  .  all.equal() for future ... done
[10:52:33.254] |  :  .  |  :  .  |  :  .  Future strategies differ at level 1
[10:52:33.254] |  :  .  |  :  .  |  :  all.equal() for FutureStrategyList ... done
[10:52:33.254] |  :  .  |  :  .  |  :  plan(): Setting new future strategy stack:
[10:52:33.255] |  :  .  |  :  .  |  :  List of future strategies:
[10:52:33.255] |  :  .  |  :  .  |  :  1. sequential:
[10:52:33.255] |  :  .  |  :  .  |  :     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:33.255] |  :  .  |  :  .  |  :     - tweaked: FALSE
[10:52:33.255] |  :  .  |  :  .  |  :     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.255] |  :  .  |  :  .  |  :  List of 1
[10:52:33.255] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.255] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.255] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.255] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.255] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.255] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.255] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.259] |  :  .  |  :  .  |  :  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:33.259] |  :  .  |  :  .  |  :  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:33.259] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.259] |  :  .  |  :  .  |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:33.259] |  :  .  |  :  .  |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.260] |  :  .  |  :  .  |  :  Backend function: <‘NULL’>
[10:52:33.260] |  :  .  |  :  .  |  :  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:33.260] |  :  .  |  :  .  |  :  plan(): nbrOfWorkers() = 1
[10:52:33.260] |  :  .  |  :  .  |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:33.261] |  :  .  |  :  .  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:33.261] |  :  .  |  :  .  assign_globals() ...
[10:52:33.261] |  :  .  |  :  .  List of 2
[10:52:33.261] |  :  .  |  :  .   $ x                    : int [1:2] 1 2
[10:52:33.261] |  :  .  |  :  .   $ future.call.arguments:List of 1
[10:52:33.261] |  :  .  |  :  .    ..$ : num 3
[10:52:33.261] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:52:33.261] |  :  .  |  :  .   - attr(*, "where")=List of 2
[10:52:33.261] |  :  .  |  :  .    ..$ x                    :<environment: R_EmptyEnv> 
[10:52:33.261] |  :  .  |  :  .    ..$ future.call.arguments:<environment: R_EmptyEnv> 
[10:52:33.261] |  :  .  |  :  .   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:33.261] |  :  .  |  :  .   - attr(*, "resolved")= logi FALSE
[10:52:33.261] |  :  .  |  :  .   - attr(*, "total_size")= num NA
[10:52:33.261] |  :  .  |  :  .   - attr(*, "already-done")= logi TRUE
[10:52:33.270] |  :  .  |  :  .  - copied ‘x’ to environment
[10:52:33.270] |  :  .  |  :  .  - copied ‘future.call.arguments’ to environment
[10:52:33.270] |  :  .  |  :  .  assign_globals() ... done
[10:52:33.273] |  :  .  |  :  .  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:33.273] |  :  .  |  :  .  |  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:33.273] |  :  .  |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:33.273] |  :  .  |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:33.274] |  :  .  |  :  .  |  :  .  |  New stack:
[10:52:33.274] |  :  .  |  :  .  |  :  .  |  List of 1
[10:52:33.274] |  :  .  |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.274] |  :  .  |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.274] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.274] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.274] |  :  .  |  :  .  |  :  .  |      ...)  
[10:52:33.274] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.274] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.274] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.274] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.274] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.274] |  :  .  |  :  .  |  :  .  |      ...)  
[10:52:33.274] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.274] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.277] |  :  .  |  :  .  |  :  .  |  Old stack:
[10:52:33.277] |  :  .  |  :  .  |  :  .  |  List of 1
[10:52:33.277] |  :  .  |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.277] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.277] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.277] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.277] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.277] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.277] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.279] |  :  .  |  :  .  |  :  .  |  Not identical
[10:52:33.279] |  :  .  |  :  .  |  :  .  |  all.equal() for future ...
[10:52:33.279] |  :  .  |  :  .  |  :  .  |  :  List of 2
[10:52:33.279] |  :  .  |  :  .  |  :  .  |  :   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.279] |  :  .  |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.279] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.279] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.279] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:52:33.279] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.279] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.279] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.279] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.279] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.279] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:52:33.279] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.279] |  :  .  |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.279] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.279] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.279] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.279] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.279] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.284] |  :  .  |  :  .  |  :  .  |  :  Formals differ
[10:52:33.284] |  :  .  |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:33.284] |  :  .  |  :  .  |  :  .  |  Future strategies differ at level 1
[10:52:33.284] |  :  .  |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:33.284] |  :  .  |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:52:33.284] |  :  .  |  :  .  |  :  .  List of future strategies:
[10:52:33.284] |  :  .  |  :  .  |  :  .  1. multicore:
[10:52:33.284] |  :  .  |  :  .  |  :  .     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:33.284] |  :  .  |  :  .  |  :  .     - tweaked: FALSE
[10:52:33.284] |  :  .  |  :  .  |  :  .     - call: plan(strategy, substitute = FALSE)
[10:52:33.285] |  :  .  |  :  .  |  :  .  List of 1
[10:52:33.285] |  :  .  |  :  .  |  :  .   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.285] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.285] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.285] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.285] |  :  .  |  :  .  |  :  .      ...)  
[10:52:33.285] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.285] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.285] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.285] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.285] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.285] |  :  .  |  :  .  |  :  .      ...)  
[10:52:33.285] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.285] |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.288] |  :  .  |  :  .  |  :  .  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:33.288] |  :  .  |  :  .  |  :  .  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:33.288] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.288] |  :  .  |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:33.288] |  :  .  |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.288] |  :  .  |  :  .  |  :  .  plan(): nbrOfWorkers() = 2
[10:52:33.289] |  :  .  |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:33.289] |  :  .  |  :  .  |  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:33.289] |  :  .  |  :  .  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:33.289] |  :  .  readImmediateCondition() ...
[10:52:33.290] |  :  .    - path: ‘/tmp/RtmpyCmE7g/.future/immediateConditions’
[10:52:33.290] |  :  .   - Number of RDS files: 0
[10:52:33.290] |  :  .  readImmediateCondition() ... DONE
[10:52:33.290] |  :  .  result() for MulticoreFuture ...
[10:52:33.291] |  :  .  result() for MulticoreFuture ... done
[10:52:33.291] |  :  result() for MulticoreFuture ... done
[10:52:33.291] |  :  result() for MulticoreFuture ...
[10:52:33.291] |  :  result() for MulticoreFuture ... done
[1] 6
** Sum function 'C' with plan('multicore') ...
function (x, y) 
{
    message("Arguments '...' exists: ", exists("...", inherits = TRUE))
    y %<-% {
        sum(x, y)
    }
    y
}
<bytecode: 0x558f6c5ecb68>
Arguments '...' exists: FALSE
[10:52:33.292] |  :  getGlobalsAndPackages() ...
[10:52:33.292] |  :  .  Searching for globals ...
[10:52:33.297] |  :  .  |  globals found: [4] ‘{’, ‘sum’, ‘x’, ‘y’
[10:52:33.297] |  :  .  Searching for globals ... DONE
[10:52:33.297] |  :  .  Resolving globals: FALSE
[10:52:33.297] |  :  .  Search for packages associated with the globals ...
[10:52:33.297] |  :  .  |  Packages associated with globals: [1] ‘base’
[10:52:33.298] |  :  .  |  Packages: [1] ‘base’
[10:52:33.298] |  :  .  Search for packages associated with the globals ... DONE
[10:52:33.298] |  :  .  Packages after dropping 'base': [0] 
[10:52:33.298] |  :  .  globals: [2] ‘x’, ‘y’
[10:52:33.298] |  :  .  packages: [0] 
[10:52:33.299] |  :  getGlobalsAndPackages() ... done
[10:52:33.299] |  :  run() for Future (‘Future’) ...
[10:52:33.299] |  :  .  state: ‘created’
[10:52:33.299] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.299] |  :  .  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.299] |  :  .  Using MulticoreFutureBackend ...
[10:52:33.300] |  :  .  |  Launching futures ...
[10:52:33.300] |  :  .  |  :  launchFuture() for MulticoreFutureBackend ...
[10:52:33.300] |  :  .  |  :  .  getFutureData() ...
[10:52:33.300] |  :  .  |  :  .  |  getFutureCore() ...
[10:52:33.300] |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:52:33.300] |  :  .  |  :  .  |  getFutureCore() ... done
[10:52:33.300] |  :  .  |  :  .  |  getFutureCapture() ...
[10:52:33.301] |  :  .  |  :  .  |  getFutureCapture() ... done
[10:52:33.301] |  :  .  |  :  .  |  getFutureContext() ...
[10:52:33.301] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.301] |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:52:33.301] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.301] |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:52:33.301] |  :  .  |  :  .  |  getFutureContext() ... done
[10:52:33.302] |  :  .  |  :  .  getFutureData() ... done
[10:52:33.302] |  :  .  |  :  .  requestCore(..., workers = 2) ...
[10:52:33.302] |  :  .  |  :  .  requestCore(..., workers = 2) ...
[10:52:33.304] |  :  .  |  :  .  MulticoreFuture started
[10:52:33.304] |  :  .  |  :  launchFuture() for MulticoreFutureBackend ...
[10:52:33.304] |  :  .  |  Launching futures ... done
[10:52:33.304] |  :  .  |  :  .  attachPackages() ...
[10:52:33.304] |  :  .  |  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:33.305] |  :  .  |  :  .  |  packages: [n=1] ‘future’
[10:52:33.305] |  :  .  Using MulticoreFutureBackend ... done
[10:52:33.305] |  :  run() for Future (‘MulticoreFuture’) ... done
[10:52:33.305] |  :  .  |  :  .  attachPackages() ... DONE
[10:52:33.305] |  :  .  |  :  .  attachPackages() ...
[10:52:33.305] |  :  .  |  :  .  |  packages: [n=0] 
[10:52:33.305] |  :  result() for MulticoreFuture ...
[10:52:33.305] |  :  .  |  :  .  attachPackages() ... DONE
[10:52:33.306] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.306] |  :  .  |  :  .  |  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:33.307] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.307] |  :  .  |  :  .  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:33.308] |  :  .  |  :  .  |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:33.308] |  :  .  |  :  .  |  :  all.equal() for FutureStrategyList ...
[10:52:33.308] |  :  .  |  :  .  |  :  .  New stack:
[10:52:33.308] |  :  .  |  :  .  |  :  .  List of 1
[10:52:33.308] |  :  .  |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.308] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.308] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.308] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.308] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.308] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.308] |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.312] |  :  .  |  :  .  |  :  .  Old stack:
[10:52:33.313] |  :  .  |  :  .  |  :  .  List of 1
[10:52:33.313] |  :  .  |  :  .  |  :  .   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.313] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.313] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.313] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.313] |  :  .  |  :  .  |  :  .      ...)  
[10:52:33.313] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.313] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.313] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.313] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.313] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.313] |  :  .  |  :  .  |  :  .      ...)  
[10:52:33.313] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.313] |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.318] |  :  .  |  :  .  |  :  .  Not identical
[10:52:33.318] |  :  .  |  :  .  |  :  .  all.equal() for future ...
[10:52:33.318] |  :  .  |  :  .  |  :  .  |  List of 2
[10:52:33.318] |  :  .  |  :  .  |  :  .  |   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.318] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.318] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.318] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.318] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.318] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.318] |  :  .  |  :  .  |  :  .  |   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.318] |  :  .  |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.318] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.318] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.318] |  :  .  |  :  .  |  :  .  |      ...)  
[10:52:33.318] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.318] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.318] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.318] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.318] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.318] |  :  .  |  :  .  |  :  .  |      ...)  
[10:52:33.318] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.325] |  :  .  |  :  .  |  :  .  |  Formals differ
[10:52:33.325] |  :  .  |  :  .  |  :  .  all.equal() for future ... done
[10:52:33.325] |  :  .  |  :  .  |  :  .  Future strategies differ at level 1
[10:52:33.326] |  :  .  |  :  .  |  :  all.equal() for FutureStrategyList ... done
[10:52:33.326] |  :  .  |  :  .  |  :  plan(): Setting new future strategy stack:
[10:52:33.326] |  :  .  |  :  .  |  :  List of future strategies:
[10:52:33.326] |  :  .  |  :  .  |  :  1. sequential:
[10:52:33.326] |  :  .  |  :  .  |  :     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:33.326] |  :  .  |  :  .  |  :     - tweaked: FALSE
[10:52:33.326] |  :  .  |  :  .  |  :     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.326] |  :  .  |  :  .  |  :  List of 1
[10:52:33.326] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.326] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.326] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.326] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.326] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.326] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.326] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.333] |  :  .  |  :  .  |  :  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:33.333] |  :  .  |  :  .  |  :  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:33.333] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.333] |  :  .  |  :  .  |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:33.334] |  :  .  |  :  .  |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.334] |  :  .  |  :  .  |  :  Backend function: <‘NULL’>
[10:52:33.334] |  :  .  |  :  .  |  :  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:33.334] |  :  .  |  :  .  |  :  plan(): nbrOfWorkers() = 1
[10:52:33.335] |  :  .  |  :  .  |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:33.335] |  :  .  |  :  .  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:33.335] |  :  .  |  :  .  assign_globals() ...
[10:52:33.335] |  :  .  |  :  .  List of 2
[10:52:33.335] |  :  .  |  :  .   $ x: int [1:2] 1 2
[10:52:33.335] |  :  .  |  :  .   $ y: num 3
[10:52:33.335] |  :  .  |  :  .   - attr(*, "where")=List of 2
[10:52:33.335] |  :  .  |  :  .    ..$ x:<environment: R_EmptyEnv> 
[10:52:33.335] |  :  .  |  :  .    ..$ y:<environment: R_EmptyEnv> 
[10:52:33.335] |  :  .  |  :  .   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:33.335] |  :  .  |  :  .   - attr(*, "resolved")= logi FALSE
[10:52:33.335] |  :  .  |  :  .   - attr(*, "total_size")= num NA
[10:52:33.335] |  :  .  |  :  .   - attr(*, "already-done")= logi TRUE
[10:52:33.339] |  :  .  |  :  .  - copied ‘x’ to environment
[10:52:33.339] |  :  .  |  :  .  - copied ‘y’ to environment
[10:52:33.339] |  :  .  |  :  .  assign_globals() ... done
[10:52:33.341] |  :  .  |  :  .  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:33.342] |  :  .  |  :  .  |  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:33.342] |  :  .  |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:33.342] |  :  .  |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:33.342] |  :  .  |  :  .  |  :  .  |  New stack:
[10:52:33.342] |  :  .  |  :  .  |  :  .  |  List of 1
[10:52:33.342] |  :  .  |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.342] |  :  .  |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.342] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.342] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.342] |  :  .  |  :  .  |  :  .  |      ...)  
[10:52:33.342] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.342] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.342] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.342] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.342] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.342] |  :  .  |  :  .  |  :  .  |      ...)  
[10:52:33.342] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.342] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.345] |  :  .  |  :  .  |  :  .  |  Old stack:
[10:52:33.345] |  :  .  |  :  .  |  :  .  |  List of 1
[10:52:33.345] |  :  .  |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.345] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.345] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.345] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.345] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.345] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.345] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.347] |  :  .  |  :  .  |  :  .  |  Not identical
[10:52:33.347] |  :  .  |  :  .  |  :  .  |  all.equal() for future ...
[10:52:33.348] |  :  .  |  :  .  |  :  .  |  :  List of 2
[10:52:33.348] |  :  .  |  :  .  |  :  .  |  :   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.348] |  :  .  |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.348] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.348] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.348] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:52:33.348] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.348] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.348] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.348] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.348] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.348] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:52:33.348] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.348] |  :  .  |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.348] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.348] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.348] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.348] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.348] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.354] |  :  .  |  :  .  |  :  .  |  :  Formals differ
[10:52:33.354] |  :  .  |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:33.354] |  :  .  |  :  .  |  :  .  |  Future strategies differ at level 1
[10:52:33.354] |  :  .  |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:33.354] |  :  .  |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:52:33.354] |  :  .  |  :  .  |  :  .  List of future strategies:
[10:52:33.354] |  :  .  |  :  .  |  :  .  1. multicore:
[10:52:33.354] |  :  .  |  :  .  |  :  .     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:33.354] |  :  .  |  :  .  |  :  .     - tweaked: FALSE
[10:52:33.354] |  :  .  |  :  .  |  :  .     - call: plan(strategy, substitute = FALSE)
[10:52:33.354] |  :  .  |  :  .  |  :  .  List of 1
[10:52:33.354] |  :  .  |  :  .  |  :  .   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.354] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.354] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.354] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.354] |  :  .  |  :  .  |  :  .      ...)  
[10:52:33.354] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.354] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.354] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.354] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.354] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.354] |  :  .  |  :  .  |  :  .      ...)  
[10:52:33.354] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.354] |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.357] |  :  .  |  :  .  |  :  .  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:33.357] |  :  .  |  :  .  |  :  .  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:33.358] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.358] |  :  .  |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:33.358] |  :  .  |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.358] |  :  .  |  :  .  |  :  .  plan(): nbrOfWorkers() = 2
[10:52:33.358] |  :  .  |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:33.358] |  :  .  |  :  .  |  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:33.358] |  :  .  |  :  .  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:33.359] |  :  .  readImmediateCondition() ...
[10:52:33.359] |  :  .    - path: ‘/tmp/RtmpyCmE7g/.future/immediateConditions’
[10:52:33.359] |  :  .   - Number of RDS files: 0
[10:52:33.359] |  :  .  readImmediateCondition() ... DONE
[10:52:33.360] |  :  .  result() for MulticoreFuture ...
[10:52:33.360] |  :  .  result() for MulticoreFuture ... done
[10:52:33.360] |  :  result() for MulticoreFuture ... done
[10:52:33.360] |  :  result() for MulticoreFuture ...
[10:52:33.360] |  :  result() for MulticoreFuture ... done
[1] 6
** Sum function 'D' with plan('multicore') ...
function (x, y) 
{
    message("Arguments '...' exists: ", exists("...", inherits = TRUE))
    y %<-% {
        sum(x, y, ...)
    }
    y
}
<bytecode: 0x558f6d9a9998>
Arguments '...' exists: FALSE
[10:52:33.361] |  :  getGlobalsAndPackages() ...
[10:52:33.361] |  :  .  Searching for globals ...
[10:52:33.364] |  :  .  |  globals found: [5] ‘{’, ‘sum’, ‘x’, ‘y’, ‘...’
[10:52:33.364] |  :  .  Searching for globals ... DONE
[10:52:33.364] |  :  .  Resolving globals: FALSE
[10:52:33.364] |  :  .  Tweak future expression to call with '...' arguments ...
[10:52:33.364] |  :  .  |  Search for packages associated with the globals ...
[10:52:33.365] |  :  .  |  :  Packages associated with globals: [1] ‘base’
[10:52:33.365] |  :  .  |  :  Packages: [1] ‘base’
[10:52:33.365] |  :  .  |  Search for packages associated with the globals ... DONE
[10:52:33.365] |  :  .  |  Packages after dropping 'base': [0] 
[10:52:33.365] |  :  .  |  globals: [2] ‘x’, ‘y’
[10:52:33.365] |  :  .  |  packages: [0] 
[10:52:33.366] |  :  .  getGlobalsAndPackages() ... done
[10:52:33.366] |  :  .  run() for Future (‘Future’) ...
[10:52:33.366] |  :  .  |  state: ‘created’
[10:52:33.366] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.366] |  :  .  |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.366] |  :  .  |  Using MulticoreFutureBackend ...
[10:52:33.367] |  :  .  |  :  Launching futures ...
[10:52:33.367] |  :  .  |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:33.367] |  :  .  |  :  .  |  getFutureData() ...
[10:52:33.367] |  :  .  |  :  .  |  :  getFutureCore() ...
[10:52:33.367] |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:33.367] |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:52:33.367] |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:52:33.368] |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:52:33.368] |  :  .  |  :  .  |  :  getFutureContext() ...
[10:52:33.368] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.368] |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:33.368] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.368] |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:33.368] |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:52:33.369] |  :  .  |  :  .  |  getFutureData() ... done
[10:52:33.369] |  :  .  |  :  .  |  requestCore(..., workers = 2) ...
[10:52:33.369] |  :  .  |  :  .  |  requestCore(..., workers = 2) ...
[10:52:33.371] |  :  .  |  :  .  |  MulticoreFuture started
[10:52:33.371] |  :  .  |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:33.371] |  :  .  |  :  Launching futures ... done
[10:52:33.371] |  :  .  |  :  .  |  attachPackages() ...
[10:52:33.372] |  :  .  |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:33.372] |  :  .  |  :  .  |  :  packages: [n=1] ‘future’
[10:52:33.372] |  :  .  |  Using MulticoreFutureBackend ... done
[10:52:33.372] |  :  .  run() for Future (‘MulticoreFuture’) ... done
[10:52:33.372] |  :  .  |  :  .  |  attachPackages() ... DONE
[10:52:33.372] |  :  .  |  :  .  |  attachPackages() ...
[10:52:33.372] |  :  .  |  :  .  |  :  packages: [n=0] 
[10:52:33.372] |  :  .  result() for MulticoreFuture ...
[10:52:33.373] |  :  .  |  :  .  |  attachPackages() ... DONE
[10:52:33.373] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.374] |  :  .  |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:33.374] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.374] |  :  .  |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:33.375] |  :  .  |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:33.375] |  :  .  |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:33.375] |  :  .  |  :  .  |  :  .  |  New stack:
[10:52:33.375] |  :  .  |  :  .  |  :  .  |  List of 1
[10:52:33.375] |  :  .  |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.375] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.375] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.375] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.375] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.375] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.375] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.379] |  :  .  |  :  .  |  :  .  |  Old stack:
[10:52:33.379] |  :  .  |  :  .  |  :  .  |  List of 1
[10:52:33.379] |  :  .  |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.379] |  :  .  |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.379] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.379] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.379] |  :  .  |  :  .  |  :  .  |      ...)  
[10:52:33.379] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.379] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.379] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.379] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.379] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.379] |  :  .  |  :  .  |  :  .  |      ...)  
[10:52:33.379] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.379] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.388] |  :  .  |  :  .  |  :  .  |  Not identical
[10:52:33.388] |  :  .  |  :  .  |  :  .  |  all.equal() for future ...
[10:52:33.388] |  :  .  |  :  .  |  :  .  |  :  List of 2
[10:52:33.388] |  :  .  |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.388] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.388] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.388] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.388] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.388] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.388] |  :  .  |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.388] |  :  .  |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.388] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.388] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.388] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:52:33.388] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.388] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.388] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.388] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.388] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.388] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:52:33.388] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.396] |  :  .  |  :  .  |  :  .  |  :  Formals differ
[10:52:33.396] |  :  .  |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:33.396] |  :  .  |  :  .  |  :  .  |  Future strategies differ at level 1
[10:52:33.396] |  :  .  |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:33.396] |  :  .  |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:52:33.396] |  :  .  |  :  .  |  :  .  List of future strategies:
[10:52:33.396] |  :  .  |  :  .  |  :  .  1. sequential:
[10:52:33.396] |  :  .  |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:33.396] |  :  .  |  :  .  |  :  .     - tweaked: FALSE
[10:52:33.396] |  :  .  |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.397] |  :  .  |  :  .  |  :  .  List of 1
[10:52:33.397] |  :  .  |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.397] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.397] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.397] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.397] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.397] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.397] |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.400] |  :  .  |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:33.401] |  :  .  |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:33.401] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.401] |  :  .  |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:33.401] |  :  .  |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.401] |  :  .  |  :  .  |  :  .  Backend function: <‘NULL’>
[10:52:33.402] |  :  .  |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:33.402] |  :  .  |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:52:33.402] |  :  .  |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:33.402] |  :  .  |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:33.402] |  :  .  |  :  .  |  assign_globals() ...
[10:52:33.402] |  :  .  |  :  .  |  List of 2
[10:52:33.402] |  :  .  |  :  .  |   $ x: int [1:2] 1 2
[10:52:33.402] |  :  .  |  :  .  |   $ y: num 3
[10:52:33.402] |  :  .  |  :  .  |   - attr(*, "where")=List of 2
[10:52:33.402] |  :  .  |  :  .  |    ..$ x:<environment: R_EmptyEnv> 
[10:52:33.402] |  :  .  |  :  .  |    ..$ y:<environment: R_EmptyEnv> 
[10:52:33.402] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:33.402] |  :  .  |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:52:33.402] |  :  .  |  :  .  |   - attr(*, "total_size")= num NA
[10:52:33.402] |  :  .  |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:52:33.406] |  :  .  |  :  .  |  - copied ‘x’ to environment
[10:52:33.407] |  :  .  |  :  .  |  - copied ‘y’ to environment
[10:52:33.407] |  :  .  |  :  .  |  assign_globals() ... done
[10:52:33.409] |  :  .  |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:33.409] |  :  .  |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:33.410] |  :  .  |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:33.410] |  :  .  |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:33.410] |  :  .  |  :  .  |  :  .  |  :  New stack:
[10:52:33.410] |  :  .  |  :  .  |  :  .  |  :  List of 1
[10:52:33.410] |  :  .  |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.410] |  :  .  |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.410] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.410] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.410] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:52:33.410] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.410] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.410] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.410] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.410] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.410] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:52:33.410] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.410] |  :  .  |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.415] |  :  .  |  :  .  |  :  .  |  :  Old stack:
[10:52:33.415] |  :  .  |  :  .  |  :  .  |  :  List of 1
[10:52:33.415] |  :  .  |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.415] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.415] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.415] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.415] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.415] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.415] |  :  .  |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.417] |  :  .  |  :  .  |  :  .  |  :  Not identical
[10:52:33.417] |  :  .  |  :  .  |  :  .  |  :  all.equal() for future ...
[10:52:33.417] |  :  .  |  :  .  |  :  .  |  :  .  List of 2
[10:52:33.417] |  :  .  |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.417] |  :  .  |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.417] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.417] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.417] |  :  .  |  :  .  |  :  .  |  :  .      ...)  
[10:52:33.417] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.417] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.417] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.417] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.417] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.417] |  :  .  |  :  .  |  :  .  |  :  .      ...)  
[10:52:33.417] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.417] |  :  .  |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.417] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.417] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.417] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.417] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.417] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.422] |  :  .  |  :  .  |  :  .  |  :  .  Formals differ
[10:52:33.422] |  :  .  |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:52:33.422] |  :  .  |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:52:33.422] |  :  .  |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:33.422] |  :  .  |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:52:33.422] |  :  .  |  :  .  |  :  .  |  List of future strategies:
[10:52:33.422] |  :  .  |  :  .  |  :  .  |  1. multicore:
[10:52:33.422] |  :  .  |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:33.422] |  :  .  |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:33.422] |  :  .  |  :  .  |  :  .  |     - call: plan(strategy, substitute = FALSE)
[10:52:33.422] |  :  .  |  :  .  |  :  .  |  List of 1
[10:52:33.422] |  :  .  |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.422] |  :  .  |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.422] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.422] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.422] |  :  .  |  :  .  |  :  .  |      ...)  
[10:52:33.422] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.422] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.422] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.422] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.422] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.422] |  :  .  |  :  .  |  :  .  |      ...)  
[10:52:33.422] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.422] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.425] |  :  .  |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:33.425] |  :  .  |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:33.426] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.426] |  :  .  |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:33.426] |  :  .  |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.426] |  :  .  |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:52:33.426] |  :  .  |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:33.426] |  :  .  |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:33.426] |  :  .  |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:33.427] |  :  .  |  readImmediateCondition() ...
[10:52:33.427] |  :  .  |    - path: ‘/tmp/RtmpyCmE7g/.future/immediateConditions’
[10:52:33.427] |  :  .  |   - Number of RDS files: 0
[10:52:33.428] |  :  .  |  readImmediateCondition() ... DONE
[10:52:33.428] |  :  .  |  result() for MulticoreFuture ...
[10:52:33.428] |  :  .  |  result() for MulticoreFuture ... done
[10:52:33.428] |  :  .  |  signalConditions() ...
[10:52:33.428] |  :  .  |  :  include = ‘immediateCondition’
[10:52:33.428] |  :  .  |  :  exclude = 
[10:52:33.429] |  :  .  |  :  resignal = FALSE
[10:52:33.429] |  :  .  |  :  Number of conditions: 1
[10:52:33.429] |  :  .  |  signalConditions() ... done
[10:52:33.429] |  :  .  result() for MulticoreFuture ... done
[10:52:33.429] |  :  .  result() for MulticoreFuture ...
[10:52:33.429] |  :  .  result() for MulticoreFuture ... done
[10:52:33.429] |  :  .  signalConditions() ...
[10:52:33.429] |  :  .  |  include = ‘immediateCondition’
[10:52:33.430] |  :  .  |  exclude = 
[10:52:33.430] |  :  .  |  resignal = FALSE
[10:52:33.430] |  :  .  |  Number of conditions: 1
[10:52:33.430] |  :  .  signalConditions() ... done
[10:52:33.430] |  :  .  Future state: ‘finished’
[10:52:33.430] |  :  .  result() for MulticoreFuture ...
[10:52:33.430] |  :  .  result() for MulticoreFuture ... done
[10:52:33.431] |  :  .  signalConditions() ...
[10:52:33.431] |  :  .  |  include = ‘condition’
[10:52:33.431] |  :  .  |  exclude = ‘immediateCondition’
[10:52:33.431] |  :  .  |  resignal = TRUE
[10:52:33.431] |  :  .  |  Number of conditions: 1
[10:52:33.431] |  :  .  |  Condition #1: ‘simpleError’, ‘error’, ‘condition’
[10:52:33.431] |  :  .  signalConditions() ... done
Error in eval(quote({ : '...' used in an incorrect context
[1] "Error in eval(quote({ : '...' used in an incorrect context\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in eval(quote({    {        sum(x, y, ...)    }}), new.env()): '...' used in an incorrect context>
** Sum function 'E' with plan('multicore') ...
function (...) 
{
    message("Arguments '...' exists: ", exists("...", inherits = TRUE))
    globals <- globals::globalsByName("...", envir = environment())
    f <- future({
        fcn <- function() sum(...)
        fcn()
    }, envir = parent.frame(), globals = globals)
    y <- value(f)
    y
}
<bytecode: 0x558f6e1d14b0>
Arguments '...' exists: TRUE
[10:52:33.432] |  :  .  getGlobalsAndPackages() ...
[10:52:33.432] |  :  .  |  globals passed as-is: [1] ‘...’
[10:52:33.433] |  :  .  |  Resolving globals: FALSE
[10:52:33.433] |  :  .  |  Tweak future expression to call with '...' arguments ...
[10:52:33.433] |  :  .  |  :  {
[10:52:33.433] |  :  .  |  :      "# future::getGlobalsAndPackages(): wrapping the original future"
[10:52:33.433] |  :  .  |  :      "# expression in do.call(), because function called uses '...'  "
[10:52:33.433] |  :  .  |  :      "# as a global variable                                         "
[10:52:33.433] |  :  .  |  :      do.call(function(...) {
[10:52:33.433] |  :  .  |  :          fcn <- function() sum(...)
[10:52:33.433] |  :  .  |  :          fcn()
[10:52:33.433] |  :  .  |  :      }, args = future.call.arguments)
[10:52:33.433] |  :  .  |  :  }
[10:52:33.433] |  :  .  |  Tweak future expression to call with '...' arguments ... DONE
[10:52:33.433] |  :  .  |  Search for packages associated with the globals ...
[10:52:33.434] |  :  .  |  :  Packages associated with globals: [0] 
[10:52:33.434] |  :  .  |  :  Packages: [0] 
[10:52:33.434] |  :  .  |  Search for packages associated with the globals ... DONE
[10:52:33.434] |  :  .  |  Packages after dropping 'base': [0] 
[10:52:33.434] |  :  .  |  globals: [1] ‘future.call.arguments’
[10:52:33.434] |  :  .  |  packages: [0] 
[10:52:33.434] |  :  .  getGlobalsAndPackages() ... done
[10:52:33.437] |  :  .  run() for Future (‘Future’) ...
[10:52:33.437] |  :  .  |  state: ‘created’
[10:52:33.437] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.437] |  :  .  |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.437] |  :  .  |  Using MulticoreFutureBackend ...
[10:52:33.438] |  :  .  |  :  Launching futures ...
[10:52:33.438] |  :  .  |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:33.438] |  :  .  |  :  .  |  getFutureData() ...
[10:52:33.438] |  :  .  |  :  .  |  :  getFutureCore() ...
[10:52:33.438] |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:33.438] |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:52:33.439] |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:52:33.439] |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:52:33.439] |  :  .  |  :  .  |  :  getFutureContext() ...
[10:52:33.439] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.439] |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:33.439] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.439] |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:33.440] |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:52:33.440] |  :  .  |  :  .  |  getFutureData() ... done
[10:52:33.440] |  :  .  |  :  .  |  requestCore(..., workers = 2) ...
[10:52:33.440] |  :  .  |  :  .  |  requestCore(..., workers = 2) ...
[10:52:33.442] |  :  .  |  :  .  |  MulticoreFuture started
[10:52:33.442] |  :  .  |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:52:33.443] |  :  .  |  :  Launching futures ... done
[10:52:33.443] |  :  .  |  :  .  |  attachPackages() ...
[10:52:33.443] |  :  .  |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:33.443] |  :  .  |  :  .  |  :  packages: [n=1] ‘future’
[10:52:33.443] |  :  .  |  Using MulticoreFutureBackend ... done
[10:52:33.443] |  :  .  run() for Future (‘MulticoreFuture’) ... done
[10:52:33.443] |  :  .  |  :  .  |  attachPackages() ... DONE
[10:52:33.444] |  :  .  |  :  .  |  attachPackages() ...
[10:52:33.444] |  :  .  result() for MulticoreFuture ...
[10:52:33.444] |  :  .  |  :  .  |  :  packages: [n=0] 
[10:52:33.444] |  :  .  |  :  .  |  attachPackages() ... DONE
[10:52:33.445] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.445] |  :  .  |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:33.445] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.446] |  :  .  |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:33.446] |  :  .  |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:33.446] |  :  .  |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:33.447] |  :  .  |  :  .  |  :  .  |  New stack:
[10:52:33.447] |  :  .  |  :  .  |  :  .  |  List of 1
[10:52:33.447] |  :  .  |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.447] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.447] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.447] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.447] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.447] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.447] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.451] |  :  .  |  :  .  |  :  .  |  Old stack:
[10:52:33.451] |  :  .  |  :  .  |  :  .  |  List of 1
[10:52:33.451] |  :  .  |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.451] |  :  .  |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.451] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.451] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.451] |  :  .  |  :  .  |  :  .  |      ...)  
[10:52:33.451] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.451] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.451] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.451] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.451] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.451] |  :  .  |  :  .  |  :  .  |      ...)  
[10:52:33.451] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.451] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.456] |  :  .  |  :  .  |  :  .  |  Not identical
[10:52:33.457] |  :  .  |  :  .  |  :  .  |  all.equal() for future ...
[10:52:33.457] |  :  .  |  :  .  |  :  .  |  :  List of 2
[10:52:33.457] |  :  .  |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.457] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.457] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.457] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.457] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.457] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.457] |  :  .  |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.457] |  :  .  |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.457] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.457] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.457] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:52:33.457] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.457] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.457] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.457] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.457] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.457] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:52:33.457] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.464] |  :  .  |  :  .  |  :  .  |  :  Formals differ
[10:52:33.464] |  :  .  |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:33.464] |  :  .  |  :  .  |  :  .  |  Future strategies differ at level 1
[10:52:33.464] |  :  .  |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:33.465] |  :  .  |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:52:33.465] |  :  .  |  :  .  |  :  .  List of future strategies:
[10:52:33.465] |  :  .  |  :  .  |  :  .  1. sequential:
[10:52:33.465] |  :  .  |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:33.465] |  :  .  |  :  .  |  :  .     - tweaked: FALSE
[10:52:33.465] |  :  .  |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.465] |  :  .  |  :  .  |  :  .  List of 1
[10:52:33.465] |  :  .  |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.465] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.465] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.465] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.465] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.465] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.465] |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.469] |  :  .  |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:33.469] |  :  .  |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:33.469] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.471] |  :  .  |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:33.472] |  :  .  |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.472] |  :  .  |  :  .  |  :  .  Backend function: <‘NULL’>
[10:52:33.473] |  :  .  |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:33.473] |  :  .  |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:52:33.473] |  :  .  |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:33.474] |  :  .  |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:33.474] |  :  .  |  :  .  |  assign_globals() ...
[10:52:33.474] |  :  .  |  :  .  |  List of 1
[10:52:33.474] |  :  .  |  :  .  |   $ future.call.arguments:List of 2
[10:52:33.474] |  :  .  |  :  .  |    ..$ : int [1:2] 1 2
[10:52:33.474] |  :  .  |  :  .  |    ..$ : num 3
[10:52:33.474] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:52:33.474] |  :  .  |  :  .  |   - attr(*, "where")=List of 1
[10:52:33.474] |  :  .  |  :  .  |    ..$ future.call.arguments:<environment: R_EmptyEnv> 
[10:52:33.474] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:33.474] |  :  .  |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:52:33.474] |  :  .  |  :  .  |   - attr(*, "total_size")= num NA
[10:52:33.474] |  :  .  |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:52:33.478] |  :  .  |  :  .  |  - copied ‘future.call.arguments’ to environment
[10:52:33.479] |  :  .  |  :  .  |  assign_globals() ... done
[10:52:33.481] |  :  .  |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:33.481] |  :  .  |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:33.481] |  :  .  |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:33.481] |  :  .  |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:33.481] |  :  .  |  :  .  |  :  .  |  :  New stack:
[10:52:33.481] |  :  .  |  :  .  |  :  .  |  :  List of 1
[10:52:33.481] |  :  .  |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.481] |  :  .  |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.481] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.481] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.481] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:52:33.481] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.481] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.481] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.481] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.481] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.481] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:52:33.481] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.481] |  :  .  |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.484] |  :  .  |  :  .  |  :  .  |  :  Old stack:
[10:52:33.485] |  :  .  |  :  .  |  :  .  |  :  List of 1
[10:52:33.485] |  :  .  |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.485] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.485] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.485] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.485] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.485] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.485] |  :  .  |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.487] |  :  .  |  :  .  |  :  .  |  :  Not identical
[10:52:33.487] |  :  .  |  :  .  |  :  .  |  :  all.equal() for future ...
[10:52:33.487] |  :  .  |  :  .  |  :  .  |  :  .  List of 2
[10:52:33.487] |  :  .  |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.487] |  :  .  |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.487] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.487] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.487] |  :  .  |  :  .  |  :  .  |  :  .      ...)  
[10:52:33.487] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.487] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.487] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.487] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.487] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.487] |  :  .  |  :  .  |  :  .  |  :  .      ...)  
[10:52:33.487] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.487] |  :  .  |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.487] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.487] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.487] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.487] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.487] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.492] |  :  .  |  :  .  |  :  .  |  :  .  Formals differ
[10:52:33.492] |  :  .  |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:52:33.492] |  :  .  |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:52:33.492] |  :  .  |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:33.492] |  :  .  |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:52:33.492] |  :  .  |  :  .  |  :  .  |  List of future strategies:
[10:52:33.492] |  :  .  |  :  .  |  :  .  |  1. multicore:
[10:52:33.492] |  :  .  |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:33.492] |  :  .  |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:33.492] |  :  .  |  :  .  |  :  .  |     - call: plan(strategy, substitute = FALSE)
[10:52:33.492] |  :  .  |  :  .  |  :  .  |  List of 1
[10:52:33.492] |  :  .  |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.492] |  :  .  |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.492] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.492] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.492] |  :  .  |  :  .  |  :  .  |      ...)  
[10:52:33.492] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.492] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.492] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.492] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.492] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.492] |  :  .  |  :  .  |  :  .  |      ...)  
[10:52:33.492] |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.492] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.497] |  :  .  |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:33.497] |  :  .  |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:33.497] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.497] |  :  .  |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:33.497] |  :  .  |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.497] |  :  .  |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:52:33.497] |  :  .  |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:33.498] |  :  .  |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:33.498] |  :  .  |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:33.498] |  :  .  |  readImmediateCondition() ...
[10:52:33.498] |  :  .  |    - path: ‘/tmp/RtmpyCmE7g/.future/immediateConditions’
[10:52:33.499] |  :  .  |   - Number of RDS files: 0
[10:52:33.499] |  :  .  |  readImmediateCondition() ... DONE
[10:52:33.499] |  :  .  |  result() for MulticoreFuture ...
[10:52:33.499] |  :  .  |  result() for MulticoreFuture ... done
[10:52:33.499] |  :  .  result() for MulticoreFuture ... done
[10:52:33.500] |  :  .  result() for MulticoreFuture ...
[10:52:33.500] |  :  .  result() for MulticoreFuture ... done
[1] 6
** Sum function 'F' with plan('multicore') ...
function (x, y) 
{
    message("Using '...' in a formula")
    fcn <- function(x, y) {
        z = ~list(...)
        sum(x, y)
    }
    f <- future(fcn(x, y))
    y <- value(f)
    y
}
<bytecode: 0x558f6e4a03f0>
Using '...' in a formula
[10:52:33.500] |  :  .  getGlobalsAndPackages() ...
[10:52:33.500] |  :  .  |  Searching for globals ...
[10:52:33.505] |  :  .  |  :  globals found: [9] ‘fcn’, ‘x’, ‘y’, ‘{’, ‘=’, ‘~’, ‘list’, ‘...’, ‘sum’
[10:52:33.505] |  :  .  |  Searching for globals ... DONE
[10:52:33.505] |  :  .  |  Resolving globals: FALSE
[10:52:33.505] |  :  .  |  Tweak future expression to call with '...' arguments ...
[10:52:33.505] |  :  .  |  :  Search for packages associated with the globals ...
[10:52:33.506] |  :  .  |  :  .  Packages associated with globals: [1] ‘base’
[10:52:33.506] |  :  .  |  :  .  Packages: [1] ‘base’
[10:52:33.506] |  :  .  |  :  Search for packages associated with the globals ... DONE
[10:52:33.506] |  :  .  |  :  Packages after dropping 'base': [0] 
[10:52:33.507] |  :  .  |  :  globals: [3] ‘fcn’, ‘x’, ‘y’
[10:52:33.507] |  :  .  |  :  packages: [0] 
[10:52:33.507] |  :  .  |  getGlobalsAndPackages() ... done
[10:52:33.507] |  :  .  |  run() for Future (‘Future’) ...
[10:52:33.507] |  :  .  |  :  state: ‘created’
[10:52:33.507] |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.508] |  :  .  |  :  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.508] |  :  .  |  :  Using MulticoreFutureBackend ...
[10:52:33.508] |  :  .  |  :  .  Launching futures ...
[10:52:33.508] |  :  .  |  :  .  |  launchFuture() for MulticoreFutureBackend ...
[10:52:33.508] |  :  .  |  :  .  |  :  getFutureData() ...
[10:52:33.508] |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:52:33.508] |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:52:33.509] |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:52:33.509] |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:52:33.509] |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:52:33.509] |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:52:33.509] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.509] |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:52:33.509] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.509] |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:52:33.510] |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:52:33.510] |  :  .  |  :  .  |  :  getFutureData() ... done
[10:52:33.510] |  :  .  |  :  .  |  :  requestCore(..., workers = 2) ...
[10:52:33.510] |  :  .  |  :  .  |  :  requestCore(..., workers = 2) ...
[10:52:33.512] |  :  .  |  :  .  |  :  MulticoreFuture started
[10:52:33.512] |  :  .  |  :  .  |  launchFuture() for MulticoreFutureBackend ...
[10:52:33.513] |  :  .  |  :  .  Launching futures ... done
[10:52:33.513] |  :  .  |  :  .  |  :  attachPackages() ...
[10:52:33.513] |  :  .  |  :  .  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:33.513] |  :  .  |  :  .  |  :  .  packages: [n=1] ‘future’
[10:52:33.513] |  :  .  |  :  Using MulticoreFutureBackend ... done
[10:52:33.513] |  :  .  |  run() for Future (‘MulticoreFuture’) ... done
[10:52:33.513] |  :  .  |  :  .  |  :  attachPackages() ... DONE
[10:52:33.513] |  :  .  |  :  .  |  :  attachPackages() ...
[10:52:33.513] |  :  .  |  result() for MulticoreFuture ...
[10:52:33.514] |  :  .  |  :  .  |  :  .  packages: [n=0] 
[10:52:33.514] |  :  .  |  :  .  |  :  attachPackages() ... DONE
[10:52:33.515] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.515] |  :  .  |  :  .  |  :  .  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:33.515] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.516] |  :  .  |  :  .  |  :  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:33.516] |  :  .  |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:33.516] |  :  .  |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:52:33.516] |  :  .  |  :  .  |  :  .  |  :  New stack:
[10:52:33.517] |  :  .  |  :  .  |  :  .  |  :  List of 1
[10:52:33.517] |  :  .  |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.517] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.517] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.517] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.517] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.517] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.517] |  :  .  |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.521] |  :  .  |  :  .  |  :  .  |  :  Old stack:
[10:52:33.521] |  :  .  |  :  .  |  :  .  |  :  List of 1
[10:52:33.521] |  :  .  |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.521] |  :  .  |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.521] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.521] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.521] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:52:33.521] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.521] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.521] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.521] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.521] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.521] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:52:33.521] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.521] |  :  .  |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.528] |  :  .  |  :  .  |  :  .  |  :  Not identical
[10:52:33.529] |  :  .  |  :  .  |  :  .  |  :  all.equal() for future ...
[10:52:33.529] |  :  .  |  :  .  |  :  .  |  :  .  List of 2
[10:52:33.529] |  :  .  |  :  .  |  :  .  |  :  .   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.529] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.529] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.529] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.529] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.529] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.529] |  :  .  |  :  .  |  :  .  |  :  .   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.529] |  :  .  |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.529] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.529] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.529] |  :  .  |  :  .  |  :  .  |  :  .      ...)  
[10:52:33.529] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.529] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.529] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.529] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.529] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.529] |  :  .  |  :  .  |  :  .  |  :  .      ...)  
[10:52:33.529] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.537] |  :  .  |  :  .  |  :  .  |  :  .  Formals differ
[10:52:33.537] |  :  .  |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:52:33.537] |  :  .  |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:52:33.537] |  :  .  |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:52:33.538] |  :  .  |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:52:33.538] |  :  .  |  :  .  |  :  .  |  List of future strategies:
[10:52:33.538] |  :  .  |  :  .  |  :  .  |  1. sequential:
[10:52:33.538] |  :  .  |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:52:33.538] |  :  .  |  :  .  |  :  .  |     - tweaked: FALSE
[10:52:33.538] |  :  .  |  :  .  |  :  .  |     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.539] |  :  .  |  :  .  |  :  .  |  List of 1
[10:52:33.539] |  :  .  |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.539] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.539] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.539] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.539] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.539] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.539] |  :  .  |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.542] |  :  .  |  :  .  |  :  .  |  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:33.542] |  :  .  |  :  .  |  :  .  |  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:33.542] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.542] |  :  .  |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:52:33.543] |  :  .  |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.543] |  :  .  |  :  .  |  :  .  |  Backend function: <‘NULL’>
[10:52:33.543] |  :  .  |  :  .  |  :  .  |  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:33.543] |  :  .  |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 1
[10:52:33.543] |  :  .  |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:33.544] |  :  .  |  :  .  |  :  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:33.544] |  :  .  |  :  .  |  :  assign_globals() ...
[10:52:33.544] |  :  .  |  :  .  |  :  List of 3
[10:52:33.544] |  :  .  |  :  .  |  :   $ fcn:function (x, y)  
[10:52:33.544] |  :  .  |  :  .  |  :   $ x  : int [1:2] 1 2
[10:52:33.544] |  :  .  |  :  .  |  :   $ y  : num 3
[10:52:33.544] |  :  .  |  :  .  |  :   - attr(*, "where")=List of 3
[10:52:33.544] |  :  .  |  :  .  |  :    ..$ fcn:<environment: R_EmptyEnv> 
[10:52:33.544] |  :  .  |  :  .  |  :    ..$ x  :<environment: R_EmptyEnv> 
[10:52:33.544] |  :  .  |  :  .  |  :    ..$ y  :<environment: R_EmptyEnv> 
[10:52:33.544] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:52:33.544] |  :  .  |  :  .  |  :   - attr(*, "resolved")= logi FALSE
[10:52:33.544] |  :  .  |  :  .  |  :   - attr(*, "total_size")= num NA
[10:52:33.544] |  :  .  |  :  .  |  :   - attr(*, "already-done")= logi TRUE
[10:52:33.549] |  :  .  |  :  .  |  :  - reassign environment for ‘fcn’ [where=emptyenv()]
[10:52:33.549] |  :  .  |  :  .  |  :  - copied ‘fcn’ to environment
[10:52:33.549] |  :  .  |  :  .  |  :  - copied ‘x’ to environment
[10:52:33.549] |  :  .  |  :  .  |  :  - copied ‘y’ to environment
[10:52:33.549] |  :  .  |  :  .  |  :  assign_globals() ... done
[10:52:33.551] |  :  .  |  :  .  |  :  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:33.551] |  :  .  |  :  .  |  :  .  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:52:33.551] |  :  .  |  :  .  |  :  .  |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:52:33.552] |  :  .  |  :  .  |  :  .  |  :  all.equal() for FutureStrategyList ...
[10:52:33.552] |  :  .  |  :  .  |  :  .  |  :  .  New stack:
[10:52:33.552] |  :  .  |  :  .  |  :  .  |  :  .  List of 1
[10:52:33.552] |  :  .  |  :  .  |  :  .  |  :  .   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.552] |  :  .  |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.552] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.552] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.552] |  :  .  |  :  .  |  :  .  |  :  .      ...)  
[10:52:33.552] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.552] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.552] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.552] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.552] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.552] |  :  .  |  :  .  |  :  .  |  :  .      ...)  
[10:52:33.552] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.552] |  :  .  |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.556] |  :  .  |  :  .  |  :  .  |  :  .  Old stack:
[10:52:33.557] |  :  .  |  :  .  |  :  .  |  :  .  List of 1
[10:52:33.557] |  :  .  |  :  .  |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.557] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.557] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.557] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.557] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.557] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.557] |  :  .  |  :  .  |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.559] |  :  .  |  :  .  |  :  .  |  :  .  Not identical
[10:52:33.559] |  :  .  |  :  .  |  :  .  |  :  .  all.equal() for future ...
[10:52:33.559] |  :  .  |  :  .  |  :  .  |  :  .  |  List of 2
[10:52:33.559] |  :  .  |  :  .  |  :  .  |  :  .  |   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.559] |  :  .  |  :  .  |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.559] |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.559] |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.559] |  :  .  |  :  .  |  :  .  |  :  .  |      ...)  
[10:52:33.559] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.559] |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.559] |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.559] |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.559] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.559] |  :  .  |  :  .  |  :  .  |  :  .  |      ...)  
[10:52:33.559] |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.559] |  :  .  |  :  .  |  :  .  |  :  .  |   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.559] |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:52:33.559] |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:52:33.559] |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.559] |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:52:33.559] |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:52:33.563] |  :  .  |  :  .  |  :  .  |  :  .  |  Formals differ
[10:52:33.564] |  :  .  |  :  .  |  :  .  |  :  .  all.equal() for future ... done
[10:52:33.564] |  :  .  |  :  .  |  :  .  |  :  .  Future strategies differ at level 1
[10:52:33.564] |  :  .  |  :  .  |  :  .  |  :  all.equal() for FutureStrategyList ... done
[10:52:33.564] |  :  .  |  :  .  |  :  .  |  :  plan(): Setting new future strategy stack:
[10:52:33.564] |  :  .  |  :  .  |  :  .  |  :  List of future strategies:
[10:52:33.564] |  :  .  |  :  .  |  :  .  |  :  1. multicore:
[10:52:33.564] |  :  .  |  :  .  |  :  .  |  :     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:33.564] |  :  .  |  :  .  |  :  .  |  :     - tweaked: FALSE
[10:52:33.564] |  :  .  |  :  .  |  :  .  |  :     - call: plan(strategy, substitute = FALSE)
[10:52:33.564] |  :  .  |  :  .  |  :  .  |  :  List of 1
[10:52:33.564] |  :  .  |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.564] |  :  .  |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.564] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.564] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.564] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:52:33.564] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.564] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.564] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.564] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.564] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.564] |  :  .  |  :  .  |  :  .  |  :      ...)  
[10:52:33.564] |  :  .  |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.564] |  :  .  |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.567] |  :  .  |  :  .  |  :  .  |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:52:33.567] |  :  .  |  :  .  |  :  .  |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:52:33.568] |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.568] |  :  .  |  :  .  |  :  .  |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:33.568] |  :  .  |  :  .  |  :  .  |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.568] |  :  .  |  :  .  |  :  .  |  :  plan(): nbrOfWorkers() = 2
[10:52:33.568] |  :  .  |  :  .  |  :  .  |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:52:33.568] |  :  .  |  :  .  |  :  .  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:33.568] |  :  .  |  :  .  |  :  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:52:33.569] |  :  .  |  :  readImmediateCondition() ...
[10:52:33.569] |  :  .  |  :    - path: ‘/tmp/RtmpyCmE7g/.future/immediateConditions’
[10:52:33.569] |  :  .  |  :   - Number of RDS files: 0
[10:52:33.570] |  :  .  |  :  readImmediateCondition() ... DONE
[10:52:33.570] |  :  .  |  :  result() for MulticoreFuture ...
[10:52:33.570] |  :  .  |  :  result() for MulticoreFuture ... done
[10:52:33.570] |  :  .  |  result() for MulticoreFuture ... done
[10:52:33.570] |  :  .  |  result() for MulticoreFuture ...
[10:52:33.570] |  :  .  |  result() for MulticoreFuture ... done
[1] 6
- plan('multisession') ...
[10:52:33.571] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.571] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:52:33.571] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:52:33.572] |  :  .  |  :  .  |  New stack:
[10:52:33.572] |  :  .  |  :  .  |  List of 1
[10:52:33.572] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:52:33.572] |  :  .  |  :  .  |      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.572] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:52:33.572] |  :  .  |  :  .  |    ..- attr(*, "init")= logi TRUE
[10:52:33.572] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:52:33.572] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:33.572] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:33.572] |  :  .  |  :  .  |    ..- attr(*, "untweakable")= chr "persistent"
[10:52:33.572] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.572] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.576] |  :  .  |  :  .  |  Old stack:
[10:52:33.576] |  :  .  |  :  .  |  List of 1
[10:52:33.576] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.576] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.576] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.576] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.576] |  :  .  |  :  .  |      ...)  
[10:52:33.576] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.576] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.576] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.576] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.576] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.576] |  :  .  |  :  .  |      ...)  
[10:52:33.576] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.576] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.582] |  :  .  |  :  .  |  Not identical
[10:52:33.582] |  :  .  |  :  .  |  all.equal() for future ...
[10:52:33.582] |  :  .  |  :  .  |  :  List of 2
[10:52:33.582] |  :  .  |  :  .  |  :   $ target :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:52:33.582] |  :  .  |  :  .  |  :      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.582] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:52:33.582] |  :  .  |  :  .  |  :    ..- attr(*, "init")= logi TRUE
[10:52:33.582] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:52:33.582] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:33.582] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:33.582] |  :  .  |  :  .  |  :    ..- attr(*, "untweakable")= chr "persistent"
[10:52:33.582] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.582] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:52:33.582] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:52:33.582] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:52:33.582] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.582] |  :  .  |  :  .  |  :      ...)  
[10:52:33.582] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.582] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.582] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.582] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x558f6c0d6be8> 
[10:52:33.582] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:52:33.582] |  :  .  |  :  .  |  :      ...)  
[10:52:33.582] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:52:33.589] |  :  .  |  :  .  |  :  Formals differ
[10:52:33.589] |  :  .  |  :  .  |  all.equal() for future ... done
[10:52:33.589] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:52:33.589] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:52:33.590] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:52:33.590] |  :  .  |  :  .  List of future strategies:
[10:52:33.590] |  :  .  |  :  .  1. multisession:
[10:52:33.590] |  :  .  |  :  .     - args: function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:52:33.590] |  :  .  |  :  .     - tweaked: FALSE
[10:52:33.590] |  :  .  |  :  .     - call: plan(strategy, substitute = FALSE)
[10:52:33.590] |  :  .  |  :  .  List of 1
[10:52:33.590] |  :  .  |  :  .   $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:52:33.590] |  :  .  |  :  .      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.590] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:52:33.590] |  :  .  |  :  .    ..- attr(*, "init")= logi TRUE
[10:52:33.590] |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:52:33.590] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:33.590] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:33.590] |  :  .  |  :  .    ..- attr(*, "untweakable")= chr "persistent"
[10:52:33.590] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.590] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:52:33.594] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:52:33.594] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:33.594] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:52:33.594] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:33.595] |  :  .  |  :  .  |  Legacy shutdown of cluster workers ...
[10:52:33.595] |  :  .  |  :  .  |  :  Stopping existing cluster ...
[10:52:33.595] |  :  .  |  :  .  |  :  .  No pre-existing cluster. Skipping
[10:52:33.595] |  :  .  |  :  .  |  :  Stopping existing cluster ... done
[10:52:33.596] |  :  .  |  :  .  |  Legacy shutdown of cluster workers ... done
[10:52:33.596] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:52:33.596] |  :  .  |  :  .  plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ...
[10:52:33.596] |  :  .  |  :  .  |  function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:52:33.596] |  :  .  |  :  .  |      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:52:33.596] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:52:33.596] |  :  .  |  :  .  |   - attr(*, "init")= logi TRUE
[10:52:33.596] |  :  .  |  :  .  |   - attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:52:33.596] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:33.596] |  :  .  |  :  .  |   - attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:52:33.596] |  :  .  |  :  .  |   - attr(*, "untweakable")= chr "persistent"
[10:52:33.596] |  :  .  |  :  .  |   - attr(*, "call")= language plan(strategy, substitute = FALSE)
[10:52:33.598] |  :  .  |  :  .  |  init: TRUE
[10:52:33.598] |  :  .  |  :  .  |  makeFutureBackend(<multisession>) ...
[10:52:33.599] |  :  .  |  :  .  |  :  Backend function: <‘NULL’>
[10:52:33.600] |  :  .  |  :  .  |  :  ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ...
[10:52:33.600] |  :  .  |  :  .  |  :  .  workers: 2
[10:52:33.601] |  :  .  |  :  .  |  :  .  getCluster() ...
[10:52:33.601] |  :  .  |  :  .  |  :  .  getCluster() ... done
[10:52:33.601] |  :  .  |  :  .  |  :  .  Stopping existing cluster ...
[10:52:33.601] |  :  .  |  :  .  |  :  .  |  No pre-existing cluster. Skipping
[10:52:33.601] |  :  .  |  :  .  |  :  .  Stopping existing cluster ... done
[10:52:33.601] |  :  .  |  :  .  |  :  .  Starting new cluster ...
[10:52:33.601] |  :  .  |  :  .  |  :  .  |  makeCluster(workers, ...) ...
[10:52:33.601] |  :  .  |  :  .  |  :  .  |  :  Arguments:
[10:52:33.601] |  :  .  |  :  .  |  :  .  |  :  List of 2
[10:52:33.601] |  :  .  |  :  .  |  :  .  |  :   $             : int 2
[10:52:33.601] |  :  .  |  :  .  |  :  .  |  :   $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[10:52:34.087] |  :  .  |  :  .  |  :  .  |  :  Generated cluster UUID
[10:52:34.087] |  :  .  |  :  .  |  :  .  |  :  Cluster UUID: ‘15c5bfbcaac818db4cd4808273d212fe’
[10:52:34.088] |  :  .  |  :  .  |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:34.090] |  :  .  |  :  .  |  :  .  |  makeCluster(workers, ...) ... done
[10:52:34.090] |  :  .  |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:34.092] |  :  .  |  :  .  |  :  .  Starting new cluster ... done
[10:52:34.092] |  :  .  |  :  .  |  :  .  Number of workers: 2
[10:52:34.092] |  :  .  |  :  .  |  :  .  Workers UUID: ‘15c5bfbcaac818db4cd4808273d212fe’
[10:52:34.092] |  :  .  |  :  .  |  :  ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ... done
[10:52:34.092] |  :  .  |  :  .  |  :  Backend: <‘MultisessionFutureBackend’, ‘ClusterFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:52:34.092] |  :  .  |  :  .  |  makeFutureBackend(<multisession>) ... done
[10:52:34.092] |  :  .  |  :  .  plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ... done
[10:52:34.093] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:34.093] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:52:34.093] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:34.093] |  :  .  |  :  .  plan(): nbrOfWorkers() = 2
[10:52:34.093] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:52:34.093] |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
** Sum function 'A' with plan('multisession') ...
function (x, ...) 
{
    message("Arguments '...' exists: ", exists("...", inherits = TRUE))
    y %<-% {
        sum(x, ...)
    }
    y
}
<bytecode: 0x558f6d5a9ce0>
Arguments '...' exists: TRUE
[10:52:34.094] |  :  .  |  getGlobalsAndPackages() ...
[10:52:34.094] |  :  .  |  :  Searching for globals ...
[10:52:34.095] |  :  .  |  :  .  globals found: [4] ‘{’, ‘sum’, ‘x’, ‘...’
[10:52:34.095] |  :  .  |  :  Searching for globals ... DONE
[10:52:34.095] |  :  .  |  :  Resolving globals: FALSE
[10:52:34.096] |  :  .  |  :  Tweak future expression to call with '...' arguments ...
[10:52:34.096] |  :  .  |  :  .  {
[10:52:34.096] |  :  .  |  :  .      "# future::getGlobalsAndPackages(): wrapping the original future"
[10:52:34.096] |  :  .  |  :  .      "# expression in do.call(), because function called uses '...'  "
[10:52:34.096] |  :  .  |  :  .      "# as a global variable                                         "
[10:52:34.096] |  :  .  |  :  .      do.call(function(...) {
[10:52:34.096] |  :  .  |  :  .          sum(x, ...)
[10:52:34.096] |  :  .  |  :  .      }, args = future.call.arguments)
[10:52:34.096] |  :  .  |  :  .  }
[10:52:34.096] |  :  .  |  :  Tweak future expression to call with '...' arguments ... DONE
[10:52:34.096] |  :  .  |  :  Search for packages associated with the globals ...
[10:52:34.096] |  :  .  |  :  .  Packages associated with globals: [1] ‘base’
[10:52:34.097] |  :  .  |  :  .  Packages: [1] ‘base’
[10:52:34.097] |  :  .  |  :  Search for packages associated with the globals ... DONE
[10:52:34.097] |  :  .  |  :  Packages after dropping 'base': [0] 
[10:52:34.097] |  :  .  |  :  globals: [2] ‘x’, ‘future.call.arguments’
[10:52:34.097] |  :  .  |  :  packages: [0] 
[10:52:34.097] |  :  .  |  getGlobalsAndPackages() ... done
[10:52:34.097] |  :  .  |  run() for Future (‘Future’) ...
[10:52:34.097] |  :  .  |  :  state: ‘created’
[10:52:34.098] |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:34.098] |  :  .  |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:34.098] |  :  .  |  :  Using MultisessionFutureBackend ...
[10:52:34.098] |  :  .  |  :  .  Launching futures ...
[10:52:34.098] |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:52:34.098] |  :  .  |  :  .  |  :  Workers: [n=2]
[10:52:34.098] |  :  .  |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:34.100] |  :  .  |  :  .  |  :  FutureRegistry: ‘workers-15c5bfbcaac818db4cd4808273d212fe’
[10:52:34.100] |  :  .  |  :  .  |  :  requestWorker() ...
[10:52:34.100] |  :  .  |  :  .  |  :  .  requestNode() ...
[10:52:34.100] |  :  .  |  :  .  |  :  .  |  Number of workers: 2
[10:52:34.100] |  :  .  |  :  .  |  :  .  |  Polling for a free worker ...
[10:52:34.100] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'list', earlySignal = 0) ...
[10:52:34.101] |  :  .  |  :  .  |  :  .  |  :  .  Created empty registry ‘workers-15c5bfbcaac818db4cd4808273d212fe’
[10:52:34.101] |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:52:34.101] |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:52:34.101] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'list', earlySignal = 0) ... done
[10:52:34.101] |  :  .  |  :  .  |  :  .  |  :  Total time: 0
[10:52:34.101] |  :  .  |  :  .  |  :  .  |  Polling for a free worker ... done
[10:52:34.101] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'list', earlySignal = 0) ...
[10:52:34.101] |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:52:34.101] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:52:34.101] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'list', earlySignal = 0) ... done
[10:52:34.102] |  :  .  |  :  .  |  :  .  |  Index of first available worker: 1
[10:52:34.102] |  :  .  |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:52:34.159] |  :  .  |  :  .  |  :  .  |  :  Worker is functional
[10:52:34.160] |  :  .  |  :  .  |  :  .  |  requestNode() ... done
[10:52:34.160] |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:52:34.160] |  :  .  |  :  .  |  :  .  requestWorker() ... done
[10:52:34.160] |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:52:34.161] |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:52:34.161] |  :  .  |  :  .  |  :  .  launchFuture() ...
[10:52:34.161] |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:52:34.161] |  :  .  |  :  .  |  :  .  |  getFutureData() ...
[10:52:34.162] |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ...
[10:52:34.162] |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:52:34.162] |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:52:34.162] |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:52:34.162] |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:52:34.162] |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ...
[10:52:34.162] |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:34.162] |  :  .  |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:52:34.162] |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:34.163] |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:52:34.163] |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:52:34.163] |  :  .  |  :  .  |  :  .  |  getFutureData() ... done
[10:52:34.163] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'add', earlySignal = 0) ...
[10:52:34.164] |  :  .  |  :  .  |  :  .  |  :  Appended future to position #1
[10:52:34.164] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:52:34.164] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'add', earlySignal = 0) ... done
[10:52:34.164] |  :  .  |  :  .  |  :  .  launchFuture() ... done
[10:52:34.164] |  :  .  |  :  .  |  :  .  MultisessionFuture started
[10:52:34.164] |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:52:34.164] |  :  .  |  :  .  |  Launching futures ... done
[10:52:34.164] |  :  .  |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:34.165] |  :  .  |  :  .  Using MultisessionFutureBackend ... done
[10:52:34.165] |  :  .  |  :  run() for Future (‘MultisessionFuture’) ... done
[10:52:34.165] |  :  .  |  :  result() for ClusterFuture ...
[10:52:34.165] |  :  .  |  :  .  assertValidConnection() ...
[10:52:34.166] |  :  .  |  :  .  |  cluster node index: 1
[10:52:34.166] |  :  .  |  :  .  assertValidConnection() ... done
[10:52:34.167] |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:52:34.167] |  :  .  |  :  .  |  cluster node index: 1
[10:52:34.252] |  :  .  |  :  .  |  [1] TRUE
[10:52:34.253] |  :  .  |  :  .  |  received data:
[10:52:34.253] |  :  .  |  :  .  |  List of 5
[10:52:34.253] |  :  .  |  :  .  |   $ type   : chr "VALUE"
[10:52:34.253] |  :  .  |  :  .  |   $ value  :List of 13
[10:52:34.253] |  :  .  |  :  .  |    ..$ value            : num 6
[10:52:34.253] |  :  .  |  :  .  |    ..$ visible          : logi TRUE
[10:52:34.253] |  :  .  |  :  .  |    ..$ stdout           : chr ""
[10:52:34.253] |  :  .  |  :  .  |    ..$ conditions       : list()
[10:52:34.253] |  :  .  |  :  .  |    ..$ rng              : logi FALSE
[10:52:34.253] |  :  .  |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:52:34.253] |  :  .  |  :  .  |    ..$ misuseConnections:List of 3
[10:52:34.253] |  :  .  |  :  .  |    .. ..$ added   : NULL
[10:52:34.253] |  :  .  |  :  .  |    .. ..$ removed : NULL
[10:52:34.253] |  :  .  |  :  .  |    .. ..$ replaced: NULL
[10:52:34.253] |  :  .  |  :  .  |    ..$ misuseDevices    : NULL
[10:52:34.253] |  :  .  |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:34"
[10:52:34.253] |  :  .  |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:34"
[10:52:34.253] |  :  .  |  :  .  |    ..$ session_uuid     : chr "1290e4d764c25327f51c9a4ffb04c110"
[10:52:34.253] |  :  .  |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:52:34.253] |  :  .  |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:34.253] |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:34.253] |  :  .  |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:34.253] |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:34.253] |  :  .  |  :  .  |    .. .. ..$ pid   : int 68559
[10:52:34.253] |  :  .  |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:34"
[10:52:34.253] |  :  .  |  :  .  |    .. .. ..$ random: int 2147483647
[10:52:34.253] |  :  .  |  :  .  |    ..$ r_info           :List of 4
[10:52:34.253] |  :  .  |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:34.253] |  :  .  |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:52:34.253] |  :  .  |  :  .  |    .. ..$ os           : chr "unix"
[10:52:34.253] |  :  .  |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:52:34.253] |  :  .  |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:52:34.253] |  :  .  |  :  .  |    ..$ version          : chr "1.8"
[10:52:34.253] |  :  .  |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:52:34.253] |  :  .  |  :  .  |   $ success: logi TRUE
[10:52:34.253] |  :  .  |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.044 0.005 0.048 0 0
[10:52:34.253] |  :  .  |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:34.253] |  :  .  |  :  .  |   $ tag    : NULL
[10:52:34.267] |  :  .  |  :  .  |  Received FutureResult
[10:52:34.267] |  :  .  |  :  .  |  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'remove', earlySignal = 0) ...
[10:52:34.267] |  :  .  |  :  .  |  :  Removed future from position #1
[10:52:34.267] |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:52:34.267] |  :  .  |  :  .  |  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'remove', earlySignal = 0) ... done
[10:52:34.267] |  :  .  |  :  .  |  Erased future from future backend
[10:52:34.268] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:34.268] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:52:34.268] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:52:34.268] |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:34.268] |  :  .  |  :  result() for ClusterFuture ... done
[10:52:34.268] |  :  .  |  :  result() for ClusterFuture ...
[10:52:34.268] |  :  .  |  :  .  result already collected: FutureResult
[10:52:34.268] |  :  .  |  :  result() for ClusterFuture ... done
[1] 6
** Sum function 'B' with plan('multisession') ...
function (x, ...) 
{
    sumt <- function(x) {
        message("Arguments '...' exists: ", exists("...", inherits = TRUE))
        y %<-% {
            sum(x, ...)
        }
        y
    }
    sumt(x)
}
<bytecode: 0x558f6bee5f48>
Arguments '...' exists: TRUE
[10:52:34.269] |  :  .  |  :  getGlobalsAndPackages() ...
[10:52:34.269] |  :  .  |  :  .  Searching for globals ...
[10:52:34.271] |  :  .  |  :  .  |  globals found: [4] ‘{’, ‘sum’, ‘x’, ‘...’
[10:52:34.271] |  :  .  |  :  .  Searching for globals ... DONE
[10:52:34.271] |  :  .  |  :  .  Resolving globals: FALSE
[10:52:34.272] |  :  .  |  :  .  Tweak future expression to call with '...' arguments ...
[10:52:34.272] |  :  .  |  :  .  |  {
[10:52:34.272] |  :  .  |  :  .  |      "# future::getGlobalsAndPackages(): wrapping the original future"
[10:52:34.272] |  :  .  |  :  .  |      "# expression in do.call(), because function called uses '...'  "
[10:52:34.272] |  :  .  |  :  .  |      "# as a global variable                                         "
[10:52:34.272] |  :  .  |  :  .  |      do.call(function(...) {
[10:52:34.272] |  :  .  |  :  .  |          sum(x, ...)
[10:52:34.272] |  :  .  |  :  .  |      }, args = future.call.arguments)
[10:52:34.272] |  :  .  |  :  .  |  }
[10:52:34.272] |  :  .  |  :  .  Tweak future expression to call with '...' arguments ... DONE
[10:52:34.272] |  :  .  |  :  .  Search for packages associated with the globals ...
[10:52:34.272] |  :  .  |  :  .  |  Packages associated with globals: [1] ‘base’
[10:52:34.273] |  :  .  |  :  .  |  Packages: [1] ‘base’
[10:52:34.273] |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:52:34.273] |  :  .  |  :  .  Packages after dropping 'base': [0] 
[10:52:34.274] |  :  .  |  :  .  globals: [2] ‘x’, ‘future.call.arguments’
[10:52:34.274] |  :  .  |  :  .  packages: [0] 
[10:52:34.274] |  :  .  |  :  getGlobalsAndPackages() ... done
[10:52:34.274] |  :  .  |  :  run() for Future (‘Future’) ...
[10:52:34.275] |  :  .  |  :  .  state: ‘created’
[10:52:34.275] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:34.275] |  :  .  |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:34.275] |  :  .  |  :  .  Using MultisessionFutureBackend ...
[10:52:34.275] |  :  .  |  :  .  |  Launching futures ...
[10:52:34.276] |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:52:34.276] |  :  .  |  :  .  |  :  .  Workers: [n=2]
[10:52:34.276] |  :  .  |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:34.279] |  :  .  |  :  .  |  :  .  FutureRegistry: ‘workers-15c5bfbcaac818db4cd4808273d212fe’
[10:52:34.279] |  :  .  |  :  .  |  :  .  requestWorker() ...
[10:52:34.279] |  :  .  |  :  .  |  :  .  |  requestNode() ...
[10:52:34.279] |  :  .  |  :  .  |  :  .  |  :  Number of workers: 2
[10:52:34.279] |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:52:34.279] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'list', earlySignal = 0) ...
[10:52:34.280] |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:52:34.280] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:34.280] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'list', earlySignal = 0) ... done
[10:52:34.280] |  :  .  |  :  .  |  :  .  |  :  .  Total time: 0
[10:52:34.280] |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:52:34.280] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'list', earlySignal = 0) ...
[10:52:34.281] |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:52:34.281] |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:52:34.281] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'list', earlySignal = 0) ... done
[10:52:34.281] |  :  .  |  :  .  |  :  .  |  :  Index of first available worker: 1
[10:52:34.281] |  :  .  |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:52:34.321] |  :  .  |  :  .  |  :  .  |  :  .  Worker is functional
[10:52:34.321] |  :  .  |  :  .  |  :  .  |  :  requestNode() ... done
[10:52:34.321] |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:34.322] |  :  .  |  :  .  |  :  .  |  requestWorker() ... done
[10:52:34.322] |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:52:34.322] |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:52:34.322] |  :  .  |  :  .  |  :  .  |  launchFuture() ...
[10:52:34.322] |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:34.322] |  :  .  |  :  .  |  :  .  |  :  getFutureData() ...
[10:52:34.323] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:52:34.323] |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:52:34.323] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:52:34.323] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:52:34.323] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:52:34.323] |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:52:34.323] |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:34.323] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:52:34.324] |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:34.324] |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:52:34.324] |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:52:34.324] |  :  .  |  :  .  |  :  .  |  :  getFutureData() ... done
[10:52:34.324] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'add', earlySignal = 0) ...
[10:52:34.325] |  :  .  |  :  .  |  :  .  |  :  .  Appended future to position #1
[10:52:34.325] |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:52:34.325] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'add', earlySignal = 0) ... done
[10:52:34.325] |  :  .  |  :  .  |  :  .  |  launchFuture() ... done
[10:52:34.325] |  :  .  |  :  .  |  :  .  |  MultisessionFuture started
[10:52:34.325] |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:52:34.325] |  :  .  |  :  .  |  :  Launching futures ... done
[10:52:34.325] |  :  .  |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:34.325] |  :  .  |  :  .  |  Using MultisessionFutureBackend ... done
[10:52:34.326] |  :  .  |  :  .  run() for Future (‘MultisessionFuture’) ... done
[10:52:34.326] |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:34.326] |  :  .  |  :  .  |  assertValidConnection() ...
[10:52:34.326] |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:34.327] |  :  .  |  :  .  |  assertValidConnection() ... done
[10:52:34.327] |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:52:34.327] |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:34.368] |  :  .  |  :  .  |  :  [1] TRUE
[10:52:34.369] |  :  .  |  :  .  |  :  received data:
[10:52:34.369] |  :  .  |  :  .  |  :  List of 5
[10:52:34.369] |  :  .  |  :  .  |  :   $ type   : chr "VALUE"
[10:52:34.369] |  :  .  |  :  .  |  :   $ value  :List of 13
[10:52:34.369] |  :  .  |  :  .  |  :    ..$ value            : num 6
[10:52:34.369] |  :  .  |  :  .  |  :    ..$ visible          : logi TRUE
[10:52:34.369] |  :  .  |  :  .  |  :    ..$ stdout           : chr ""
[10:52:34.369] |  :  .  |  :  .  |  :    ..$ conditions       : list()
[10:52:34.369] |  :  .  |  :  .  |  :    ..$ rng              : logi FALSE
[10:52:34.369] |  :  .  |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:52:34.369] |  :  .  |  :  .  |  :    ..$ misuseConnections:List of 3
[10:52:34.369] |  :  .  |  :  .  |  :    .. ..$ added   : NULL
[10:52:34.369] |  :  .  |  :  .  |  :    .. ..$ removed : NULL
[10:52:34.369] |  :  .  |  :  .  |  :    .. ..$ replaced: NULL
[10:52:34.369] |  :  .  |  :  .  |  :    ..$ misuseDevices    : NULL
[10:52:34.369] |  :  .  |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:34"
[10:52:34.369] |  :  .  |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:34"
[10:52:34.369] |  :  .  |  :  .  |  :    ..$ session_uuid     : chr "1290e4d764c25327f51c9a4ffb04c110"
[10:52:34.369] |  :  .  |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:52:34.369] |  :  .  |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:34.369] |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:34.369] |  :  .  |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:34.369] |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:34.369] |  :  .  |  :  .  |  :    .. .. ..$ pid   : int 68559
[10:52:34.369] |  :  .  |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:34"
[10:52:34.369] |  :  .  |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:52:34.369] |  :  .  |  :  .  |  :    ..$ r_info           :List of 4
[10:52:34.369] |  :  .  |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:34.369] |  :  .  |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:52:34.369] |  :  .  |  :  .  |  :    .. ..$ os           : chr "unix"
[10:52:34.369] |  :  .  |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:52:34.369] |  :  .  |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:52:34.369] |  :  .  |  :  .  |  :    ..$ version          : chr "1.8"
[10:52:34.369] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:52:34.369] |  :  .  |  :  .  |  :   $ success: logi TRUE
[10:52:34.369] |  :  .  |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.004 0 0
[10:52:34.369] |  :  .  |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:34.369] |  :  .  |  :  .  |  :   $ tag    : NULL
[10:52:34.382] |  :  .  |  :  .  |  :  Received FutureResult
[10:52:34.382] |  :  .  |  :  .  |  :  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'remove', earlySignal = 0) ...
[10:52:34.382] |  :  .  |  :  .  |  :  .  Removed future from position #1
[10:52:34.382] |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:52:34.383] |  :  .  |  :  .  |  :  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'remove', earlySignal = 0) ... done
[10:52:34.383] |  :  .  |  :  .  |  :  Erased future from future backend
[10:52:34.383] |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:52:34.383] |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:52:34.383] |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:52:34.383] |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:34.383] |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:34.383] |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:34.383] |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:34.384] |  :  .  |  :  .  result() for ClusterFuture ... done
[1] 6
** Sum function 'C' with plan('multisession') ...
function (x, y) 
{
    message("Arguments '...' exists: ", exists("...", inherits = TRUE))
    y %<-% {
        sum(x, y)
    }
    y
}
<bytecode: 0x558f6c5ecb68>
Arguments '...' exists: FALSE
[10:52:34.384] |  :  .  |  :  .  getGlobalsAndPackages() ...
[10:52:34.384] |  :  .  |  :  .  |  Searching for globals ...
[10:52:34.386] |  :  .  |  :  .  |  :  globals found: [4] ‘{’, ‘sum’, ‘x’, ‘y’
[10:52:34.386] |  :  .  |  :  .  |  Searching for globals ... DONE
[10:52:34.386] |  :  .  |  :  .  |  Resolving globals: FALSE
[10:52:34.386] |  :  .  |  :  .  |  Search for packages associated with the globals ...
[10:52:34.387] |  :  .  |  :  .  |  :  Packages associated with globals: [1] ‘base’
[10:52:34.387] |  :  .  |  :  .  |  :  Packages: [1] ‘base’
[10:52:34.387] |  :  .  |  :  .  |  Search for packages associated with the globals ... DONE
[10:52:34.387] |  :  .  |  :  .  |  Packages after dropping 'base': [0] 
[10:52:34.387] |  :  .  |  :  .  |  globals: [2] ‘x’, ‘y’
[10:52:34.388] |  :  .  |  :  .  |  packages: [0] 
[10:52:34.388] |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:52:34.392] |  :  .  |  :  .  run() for Future (‘Future’) ...
[10:52:34.392] |  :  .  |  :  .  |  state: ‘created’
[10:52:34.392] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:34.392] |  :  .  |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:34.392] |  :  .  |  :  .  |  Using MultisessionFutureBackend ...
[10:52:34.392] |  :  .  |  :  .  |  :  Launching futures ...
[10:52:34.392] |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:52:34.392] |  :  .  |  :  .  |  :  .  |  Workers: [n=2]
[10:52:34.392] |  :  .  |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:34.394] |  :  .  |  :  .  |  :  .  |  FutureRegistry: ‘workers-15c5bfbcaac818db4cd4808273d212fe’
[10:52:34.394] |  :  .  |  :  .  |  :  .  |  requestWorker() ...
[10:52:34.394] |  :  .  |  :  .  |  :  .  |  :  requestNode() ...
[10:52:34.394] |  :  .  |  :  .  |  :  .  |  :  .  Number of workers: 2
[10:52:34.394] |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ...
[10:52:34.395] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'list', earlySignal = 0) ...
[10:52:34.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:52:34.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:52:34.395] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'list', earlySignal = 0) ... done
[10:52:34.395] |  :  .  |  :  .  |  :  .  |  :  .  |  Total time: 0
[10:52:34.395] |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ... done
[10:52:34.395] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'list', earlySignal = 0) ...
[10:52:34.395] |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:52:34.395] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:34.395] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'list', earlySignal = 0) ... done
[10:52:34.395] |  :  .  |  :  .  |  :  .  |  :  .  Index of first available worker: 1
[10:52:34.396] |  :  .  |  :  .  |  :  .  |  :  .  Validate that the worker is functional ...
[10:52:34.473] |  :  .  |  :  .  |  :  .  |  :  .  |  Worker is functional
[10:52:34.473] |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ... done
[10:52:34.474] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:34.474] |  :  .  |  :  .  |  :  .  |  :  requestWorker() ... done
[10:52:34.474] |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ...
[10:52:34.474] |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:52:34.474] |  :  .  |  :  .  |  :  .  |  :  launchFuture() ...
[10:52:34.474] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:34.474] |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ...
[10:52:34.475] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ...
[10:52:34.475] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:52:34.475] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ... done
[10:52:34.475] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ...
[10:52:34.475] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ... done
[10:52:34.475] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ...
[10:52:34.475] |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:34.475] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:52:34.475] |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:34.475] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:52:34.476] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ... done
[10:52:34.476] |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ... done
[10:52:34.476] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'add', earlySignal = 0) ...
[10:52:34.476] |  :  .  |  :  .  |  :  .  |  :  .  |  Appended future to position #1
[10:52:34.476] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:52:34.476] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'add', earlySignal = 0) ... done
[10:52:34.476] |  :  .  |  :  .  |  :  .  |  :  launchFuture() ... done
[10:52:34.477] |  :  .  |  :  .  |  :  .  |  :  MultisessionFuture started
[10:52:34.477] |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:52:34.477] |  :  .  |  :  .  |  :  .  Launching futures ... done
[10:52:34.477] |  :  .  |  :  .  |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:34.477] |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ... done
[10:52:34.477] |  :  .  |  :  .  |  run() for Future (‘MultisessionFuture’) ... done
[10:52:34.477] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:34.477] |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:52:34.477] |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:34.478] |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:52:34.478] |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:52:34.478] |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:34.520] |  :  .  |  :  .  |  :  .  [1] TRUE
[10:52:34.521] |  :  .  |  :  .  |  :  .  received data:
[10:52:34.521] |  :  .  |  :  .  |  :  .  List of 5
[10:52:34.521] |  :  .  |  :  .  |  :  .   $ type   : chr "VALUE"
[10:52:34.521] |  :  .  |  :  .  |  :  .   $ value  :List of 13
[10:52:34.521] |  :  .  |  :  .  |  :  .    ..$ value            : num 6
[10:52:34.521] |  :  .  |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:52:34.521] |  :  .  |  :  .  |  :  .    ..$ stdout           : chr ""
[10:52:34.521] |  :  .  |  :  .  |  :  .    ..$ conditions       : list()
[10:52:34.521] |  :  .  |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:52:34.521] |  :  .  |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:52:34.521] |  :  .  |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:52:34.521] |  :  .  |  :  .  |  :  .    .. ..$ added   : NULL
[10:52:34.521] |  :  .  |  :  .  |  :  .    .. ..$ removed : NULL
[10:52:34.521] |  :  .  |  :  .  |  :  .    .. ..$ replaced: NULL
[10:52:34.521] |  :  .  |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:52:34.521] |  :  .  |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:34"
[10:52:34.521] |  :  .  |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:34"
[10:52:34.521] |  :  .  |  :  .  |  :  .    ..$ session_uuid     : chr "1290e4d764c25327f51c9a4ffb04c110"
[10:52:34.521] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:52:34.521] |  :  .  |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:34.521] |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:34.521] |  :  .  |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:34.521] |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:34.521] |  :  .  |  :  .  |  :  .    .. .. ..$ pid   : int 68559
[10:52:34.521] |  :  .  |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:34"
[10:52:34.521] |  :  .  |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:52:34.521] |  :  .  |  :  .  |  :  .    ..$ r_info           :List of 4
[10:52:34.521] |  :  .  |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:34.521] |  :  .  |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:52:34.521] |  :  .  |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:52:34.521] |  :  .  |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:52:34.521] |  :  .  |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:52:34.521] |  :  .  |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:52:34.521] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:52:34.521] |  :  .  |  :  .  |  :  .   $ success: logi TRUE
[10:52:34.521] |  :  .  |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.003 0.001 0.004 0 0
[10:52:34.521] |  :  .  |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:34.521] |  :  .  |  :  .  |  :  .   $ tag    : NULL
[10:52:34.531] |  :  .  |  :  .  |  :  .  Received FutureResult
[10:52:34.531] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'remove', earlySignal = 0) ...
[10:52:34.531] |  :  .  |  :  .  |  :  .  |  Removed future from position #1
[10:52:34.532] |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:34.532] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'remove', earlySignal = 0) ... done
[10:52:34.532] |  :  .  |  :  .  |  :  .  Erased future from future backend
[10:52:34.532] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:34.532] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:34.532] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:34.532] |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:34.532] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:52:34.532] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:34.532] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:52:34.533] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[1] 6
** Sum function 'D' with plan('multisession') ...
function (x, y) 
{
    message("Arguments '...' exists: ", exists("...", inherits = TRUE))
    y %<-% {
        sum(x, y, ...)
    }
    y
}
<bytecode: 0x558f6d9a9998>
Arguments '...' exists: FALSE
[10:52:34.533] |  :  .  |  :  .  |  getGlobalsAndPackages() ...
[10:52:34.533] |  :  .  |  :  .  |  :  Searching for globals ...
[10:52:34.535] |  :  .  |  :  .  |  :  .  globals found: [5] ‘{’, ‘sum’, ‘x’, ‘y’, ‘...’
[10:52:34.535] |  :  .  |  :  .  |  :  Searching for globals ... DONE
[10:52:34.535] |  :  .  |  :  .  |  :  Resolving globals: FALSE
[10:52:34.535] |  :  .  |  :  .  |  :  Tweak future expression to call with '...' arguments ...
[10:52:34.535] |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ...
[10:52:34.535] |  :  .  |  :  .  |  :  .  |  Packages associated with globals: [1] ‘base’
[10:52:34.536] |  :  .  |  :  .  |  :  .  |  Packages: [1] ‘base’
[10:52:34.536] |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:52:34.536] |  :  .  |  :  .  |  :  .  Packages after dropping 'base': [0] 
[10:52:34.536] |  :  .  |  :  .  |  :  .  globals: [2] ‘x’, ‘y’
[10:52:34.536] |  :  .  |  :  .  |  :  .  packages: [0] 
[10:52:34.536] |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:52:34.537] |  :  .  |  :  .  |  :  run() for Future (‘Future’) ...
[10:52:34.537] |  :  .  |  :  .  |  :  .  state: ‘created’
[10:52:34.537] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:34.537] |  :  .  |  :  .  |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:34.537] |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ...
[10:52:34.537] |  :  .  |  :  .  |  :  .  |  Launching futures ...
[10:52:34.537] |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:52:34.537] |  :  .  |  :  .  |  :  .  |  :  .  Workers: [n=2]
[10:52:34.537] |  :  .  |  :  .  |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:34.539] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry: ‘workers-15c5bfbcaac818db4cd4808273d212fe’
[10:52:34.539] |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ...
[10:52:34.539] |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ...
[10:52:34.539] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of workers: 2
[10:52:34.539] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:52:34.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'list', earlySignal = 0) ...
[10:52:34.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:52:34.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:34.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'list', earlySignal = 0) ... done
[10:52:34.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Total time: 0
[10:52:34.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:52:34.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'list', earlySignal = 0) ...
[10:52:34.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:52:34.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:52:34.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'list', earlySignal = 0) ... done
[10:52:34.541] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Index of first available worker: 1
[10:52:34.541] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:52:34.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Worker is functional
[10:52:34.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ... done
[10:52:34.619] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:34.619] |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ... done
[10:52:34.619] |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:52:34.619] |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:52:34.619] |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ...
[10:52:34.619] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:34.620] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ...
[10:52:34.620] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:52:34.620] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:52:34.620] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:52:34.620] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:52:34.620] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:52:34.620] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:52:34.620] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:34.620] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:52:34.621] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:34.621] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:52:34.621] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:52:34.621] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ... done
[10:52:34.621] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'add', earlySignal = 0) ...
[10:52:34.621] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Appended future to position #1
[10:52:34.621] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:52:34.621] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'add', earlySignal = 0) ... done
[10:52:34.622] |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ... done
[10:52:34.622] |  :  .  |  :  .  |  :  .  |  :  .  |  MultisessionFuture started
[10:52:34.622] |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:52:34.622] |  :  .  |  :  .  |  :  .  |  :  Launching futures ... done
[10:52:34.622] |  :  .  |  :  .  |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:34.622] |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ... done
[10:52:34.622] |  :  .  |  :  .  |  :  .  run() for Future (‘MultisessionFuture’) ... done
[10:52:34.622] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:34.622] |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:52:34.623] |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:34.623] |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:52:34.623] |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:52:34.623] |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :  [1] TRUE
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :  received data:
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :  List of 5
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :   $ type   : chr "VALUE"
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :   $ value  :List of 13
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    ..$ value            : NULL
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    ..$ visible          : logi TRUE
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    ..$ stdout           : chr ""
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    ..$ conditions       :List of 1
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. ..$ :List of 5
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ condition:List of 2
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ message: chr "'...' used in an incorrect context"
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ call   : language eval(quote({     { ...
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ calls    :List of 9
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval(expr, envir = globalenv())
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval(expr, envir = globalenv())
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ : language local({     { ...
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval.parent(substitute(eval(quote(expr), envir)))
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval(expr, p)
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval(expr, p)
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval(quote({     { ...
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval(quote({     { ...
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ : language eval(quote({     { ...
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ session  :List of 6
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ r         :List of 14
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ platform      : chr "x86_64-pc-linux-gnu"
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ arch          : chr "x86_64"
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ os            : chr "linux-gnu"
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ system        : chr "x86_64, linux-gnu"
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ status        : chr ""
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ major         : chr "4"
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ minor         : chr "5.0"
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ year          : chr "2025"
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ month         : chr "04"
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ day           : chr "11"
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ svn rev       : chr "88135"
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ language      : chr "R"
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ version.string: chr "R version 4.5.0 (2025-04-11)"
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..$ nickname      : chr "How About a Twenty-Six"
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ locale    : chr "LC_CTYPE=en_US.UTF-8;LC_NUMERIC=C;LC_TIME=en_US.UTF-8;LC_COLLATE=en_US.UTF-8;LC_MONETARY=en_US.UTF-8;LC_MESSAGE"| __truncated__
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ rngkind   : chr [1:3] "Mersenne-Twister" "Inversion" "Rejection"
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ namespaces: chr [1:16] "compiler" "parallelly" "graphics" "tools" ...
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ search    : chr [1:10] ".GlobalEnv" "package:future" "package:stats" "package:graphics" ...
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..$ system    : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ timestamp: POSIXct[1:1], format: "2025-05-06 10:52:34"
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ signaled : int 0
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    ..$ rng              : logi FALSE
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    ..$ misuseConnections:List of 3
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. ..$ added   : NULL
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. ..$ removed : NULL
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. ..$ replaced: NULL
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    ..$ misuseDevices    : NULL
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:34"
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:34"
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    ..$ session_uuid     : chr "1290e4d764c25327f51c9a4ffb04c110"
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ pid   : int 68559
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:34"
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    ..$ r_info           :List of 4
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. ..$ os           : chr "unix"
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    ..$ version          : chr "1.8"
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :   $ success: logi TRUE
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.002 0.001 0.004 0 0
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:34.666] |  :  .  |  :  .  |  :  .  |  :   $ tag    : NULL
[10:52:34.687] |  :  .  |  :  .  |  :  .  |  :  Received FutureResult
[10:52:34.687] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'remove', earlySignal = 0) ...
[10:52:34.687] |  :  .  |  :  .  |  :  .  |  :  .  Removed future from position #1
[10:52:34.687] |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:52:34.687] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'remove', earlySignal = 0) ... done
[10:52:34.687] |  :  .  |  :  .  |  :  .  |  :  Erased future from future backend
[10:52:34.687] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:52:34.687] |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:52:34.687] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:52:34.688] |  :  .  |  :  .  |  :  .  |  :  signalConditions() ...
[10:52:34.688] |  :  .  |  :  .  |  :  .  |  :  .  include = ‘immediateCondition’
[10:52:34.688] |  :  .  |  :  .  |  :  .  |  :  .  exclude = 
[10:52:34.688] |  :  .  |  :  .  |  :  .  |  :  .  resignal = FALSE
[10:52:34.688] |  :  .  |  :  .  |  :  .  |  :  .  Number of conditions: 1
[10:52:34.688] |  :  .  |  :  .  |  :  .  |  :  signalConditions() ... done
[10:52:34.688] |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:34.688] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:34.688] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:34.688] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:34.689] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:34.689] |  :  .  |  :  .  |  :  .  signalConditions() ...
[10:52:34.689] |  :  .  |  :  .  |  :  .  |  include = ‘immediateCondition’
[10:52:34.689] |  :  .  |  :  .  |  :  .  |  exclude = 
[10:52:34.689] |  :  .  |  :  .  |  :  .  |  resignal = FALSE
[10:52:34.689] |  :  .  |  :  .  |  :  .  |  Number of conditions: 1
[10:52:34.689] |  :  .  |  :  .  |  :  .  signalConditions() ... done
[10:52:34.689] |  :  .  |  :  .  |  :  .  Future state: ‘finished’
[10:52:34.689] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:34.689] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:34.689] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:34.690] |  :  .  |  :  .  |  :  .  signalConditions() ...
[10:52:34.690] |  :  .  |  :  .  |  :  .  |  include = ‘condition’
[10:52:34.690] |  :  .  |  :  .  |  :  .  |  exclude = ‘immediateCondition’
[10:52:34.690] |  :  .  |  :  .  |  :  .  |  resignal = TRUE
[10:52:34.690] |  :  .  |  :  .  |  :  .  |  Number of conditions: 1
[10:52:34.690] |  :  .  |  :  .  |  :  .  |  Condition #1: ‘simpleError’, ‘error’, ‘condition’
[10:52:34.690] |  :  .  |  :  .  |  :  .  signalConditions() ... done
Error in eval(quote({ : '...' used in an incorrect context
[1] "Error in eval(quote({ : '...' used in an incorrect context\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in eval(quote({    {        sum(x, y, ...)    }}), new.env()): '...' used in an incorrect context>
** Sum function 'E' with plan('multisession') ...
function (...) 
{
    message("Arguments '...' exists: ", exists("...", inherits = TRUE))
    globals <- globals::globalsByName("...", envir = environment())
    f <- future({
        fcn <- function() sum(...)
        fcn()
    }, envir = parent.frame(), globals = globals)
    y <- value(f)
    y
}
<bytecode: 0x558f6e1d14b0>
Arguments '...' exists: TRUE
[10:52:34.691] |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ...
[10:52:34.691] |  :  .  |  :  .  |  :  .  |  globals passed as-is: [1] ‘...’
[10:52:34.691] |  :  .  |  :  .  |  :  .  |  Resolving globals: FALSE
[10:52:34.691] |  :  .  |  :  .  |  :  .  |  Tweak future expression to call with '...' arguments ...
[10:52:34.691] |  :  .  |  :  .  |  :  .  |  :  {
[10:52:34.691] |  :  .  |  :  .  |  :  .  |  :      "# future::getGlobalsAndPackages(): wrapping the original future"
[10:52:34.691] |  :  .  |  :  .  |  :  .  |  :      "# expression in do.call(), because function called uses '...'  "
[10:52:34.691] |  :  .  |  :  .  |  :  .  |  :      "# as a global variable                                         "
[10:52:34.691] |  :  .  |  :  .  |  :  .  |  :      do.call(function(...) {
[10:52:34.691] |  :  .  |  :  .  |  :  .  |  :          fcn <- function() sum(...)
[10:52:34.691] |  :  .  |  :  .  |  :  .  |  :          fcn()
[10:52:34.691] |  :  .  |  :  .  |  :  .  |  :      }, args = future.call.arguments)
[10:52:34.691] |  :  .  |  :  .  |  :  .  |  :  }
[10:52:34.692] |  :  .  |  :  .  |  :  .  |  Tweak future expression to call with '...' arguments ... DONE
[10:52:34.692] |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ...
[10:52:34.692] |  :  .  |  :  .  |  :  .  |  :  Packages associated with globals: [0] 
[10:52:34.692] |  :  .  |  :  .  |  :  .  |  :  Packages: [0] 
[10:52:34.692] |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ... DONE
[10:52:34.692] |  :  .  |  :  .  |  :  .  |  Packages after dropping 'base': [0] 
[10:52:34.692] |  :  .  |  :  .  |  :  .  |  globals: [1] ‘future.call.arguments’
[10:52:34.692] |  :  .  |  :  .  |  :  .  |  packages: [0] 
[10:52:34.693] |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:52:34.693] |  :  .  |  :  .  |  :  .  run() for Future (‘Future’) ...
[10:52:34.693] |  :  .  |  :  .  |  :  .  |  state: ‘created’
[10:52:34.693] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:34.693] |  :  .  |  :  .  |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:34.693] |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ...
[10:52:34.693] |  :  .  |  :  .  |  :  .  |  :  Launching futures ...
[10:52:34.693] |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:52:34.694] |  :  .  |  :  .  |  :  .  |  :  .  |  Workers: [n=2]
[10:52:34.694] |  :  .  |  :  .  |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:34.697] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry: ‘workers-15c5bfbcaac818db4cd4808273d212fe’
[10:52:34.697] |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ...
[10:52:34.697] |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ...
[10:52:34.697] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of workers: 2
[10:52:34.697] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ...
[10:52:34.697] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'list', earlySignal = 0) ...
[10:52:34.697] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:52:34.698] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:52:34.698] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'list', earlySignal = 0) ... done
[10:52:34.698] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Total time: 0
[10:52:34.698] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ... done
[10:52:34.698] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'list', earlySignal = 0) ...
[10:52:34.698] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:52:34.698] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:34.698] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'list', earlySignal = 0) ... done
[10:52:34.698] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Index of first available worker: 1
[10:52:34.698] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Validate that the worker is functional ...
[10:52:34.777] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Worker is functional
[10:52:34.777] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ... done
[10:52:34.778] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:34.778] |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestWorker() ... done
[10:52:34.778] |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ...
[10:52:34.778] |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:52:34.778] |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ...
[10:52:34.779] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:34.779] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ...
[10:52:34.779] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ...
[10:52:34.779] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:52:34.779] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ... done
[10:52:34.779] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ...
[10:52:34.779] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ... done
[10:52:34.779] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ...
[10:52:34.779] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:34.780] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:52:34.780] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:34.780] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:52:34.780] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ... done
[10:52:34.780] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ... done
[10:52:34.780] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'add', earlySignal = 0) ...
[10:52:34.780] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Appended future to position #1
[10:52:34.781] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:52:34.781] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'add', earlySignal = 0) ... done
[10:52:34.781] |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ... done
[10:52:34.781] |  :  .  |  :  .  |  :  .  |  :  .  |  :  MultisessionFuture started
[10:52:34.781] |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:52:34.781] |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ... done
[10:52:34.781] |  :  .  |  :  .  |  :  .  |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:34.781] |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ... done
[10:52:34.781] |  :  .  |  :  .  |  :  .  |  run() for Future (‘MultisessionFuture’) ... done
[10:52:34.781] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:34.782] |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:52:34.782] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:34.782] |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:52:34.782] |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:52:34.782] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:52:34.824] |  :  .  |  :  .  |  :  .  |  :  .  [1] TRUE
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .  received data:
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .  List of 5
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .   $ type   : chr "VALUE"
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .   $ value  :List of 13
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .    ..$ value            : num 6
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .    ..$ stdout           : chr ""
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .    ..$ conditions       : list()
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ added   : NULL
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ removed : NULL
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ replaced: NULL
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:34"
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:34"
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .    ..$ session_uuid     : chr "1290e4d764c25327f51c9a4ffb04c110"
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ pid   : int 68559
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:34"
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .    ..$ r_info           :List of 4
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .   $ success: logi TRUE
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.004 0 0
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:34.825] |  :  .  |  :  .  |  :  .  |  :  .   $ tag    : NULL
[10:52:34.835] |  :  .  |  :  .  |  :  .  |  :  .  Received FutureResult
[10:52:34.835] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'remove', earlySignal = 0) ...
[10:52:34.836] |  :  .  |  :  .  |  :  .  |  :  .  |  Removed future from position #1
[10:52:34.836] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:34.836] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'remove', earlySignal = 0) ... done
[10:52:34.836] |  :  .  |  :  .  |  :  .  |  :  .  Erased future from future backend
[10:52:34.836] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:34.836] |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:34.836] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:34.836] |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:34.836] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:52:34.836] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:52:34.837] |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:52:34.837] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[1] 6
** Sum function 'F' with plan('multisession') ...
function (x, y) 
{
    message("Using '...' in a formula")
    fcn <- function(x, y) {
        z = ~list(...)
        sum(x, y)
    }
    f <- future(fcn(x, y))
    y <- value(f)
    y
}
<bytecode: 0x558f6e4a03f0>
Using '...' in a formula
[10:52:34.837] |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ...
[10:52:34.837] |  :  .  |  :  .  |  :  .  |  :  Searching for globals ...
[10:52:34.840] |  :  .  |  :  .  |  :  .  |  :  .  globals found: [9] ‘fcn’, ‘x’, ‘y’, ‘{’, ‘=’, ‘~’, ‘list’, ‘...’, ‘sum’
[10:52:34.840] |  :  .  |  :  .  |  :  .  |  :  Searching for globals ... DONE
[10:52:34.840] |  :  .  |  :  .  |  :  .  |  :  Resolving globals: FALSE
[10:52:34.840] |  :  .  |  :  .  |  :  .  |  :  Tweak future expression to call with '...' arguments ...
[10:52:34.840] |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ...
[10:52:34.841] |  :  .  |  :  .  |  :  .  |  :  .  |  Packages associated with globals: [1] ‘base’
[10:52:34.841] |  :  .  |  :  .  |  :  .  |  :  .  |  Packages: [1] ‘base’
[10:52:34.841] |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:52:34.841] |  :  .  |  :  .  |  :  .  |  :  .  Packages after dropping 'base': [0] 
[10:52:34.841] |  :  .  |  :  .  |  :  .  |  :  .  globals: [3] ‘fcn’, ‘x’, ‘y’
[10:52:34.841] |  :  .  |  :  .  |  :  .  |  :  .  packages: [0] 
[10:52:34.842] |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:52:34.842] |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘Future’) ...
[10:52:34.842] |  :  .  |  :  .  |  :  .  |  :  .  state: ‘created’
[10:52:34.842] |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:34.842] |  :  .  |  :  .  |  :  .  |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:34.842] |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ...
[10:52:34.842] |  :  .  |  :  .  |  :  .  |  :  .  |  Launching futures ...
[10:52:34.843] |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:52:34.843] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Workers: [n=2]
[10:52:34.843] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:52:34.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry: ‘workers-15c5bfbcaac818db4cd4808273d212fe’
[10:52:34.845] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ...
[10:52:34.845] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ...
[10:52:34.845] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of workers: 2
[10:52:34.845] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:52:34.845] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'list', earlySignal = 0) ...
[10:52:34.845] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:52:34.845] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:52:34.845] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'list', earlySignal = 0) ... done
[10:52:34.845] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Total time: 0
[10:52:34.845] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:52:34.845] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'list', earlySignal = 0) ...
[10:52:34.846] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:52:34.846] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:52:34.846] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'list', earlySignal = 0) ... done
[10:52:34.846] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Index of first available worker: 1
[10:52:34.846] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:52:34.924] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Worker is functional
[10:52:34.924] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ... done
[10:52:34.925] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:34.925] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ... done
[10:52:34.925] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:52:34.925] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:52:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ...
[10:52:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ...
[10:52:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:52:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:52:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:52:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:52:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:52:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:52:34.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:52:34.927] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:52:34.927] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:52:34.927] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:52:34.927] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:52:34.927] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ... done
[10:52:34.927] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'add', earlySignal = 0) ...
[10:52:34.928] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Appended future to position #1
[10:52:34.928] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:52:34.928] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'add', earlySignal = 0) ... done
[10:52:34.928] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ... done
[10:52:34.928] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  MultisessionFuture started
[10:52:34.928] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:52:34.928] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Launching futures ... done
[10:52:34.928] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:52:34.928] |  :  .  |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ... done
[10:52:34.928] |  :  .  |  :  .  |  :  .  |  :  .  run() for Future (‘MultisessionFuture’) ... done
[10:52:34.929] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:34.929] |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:52:34.929] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:34.929] |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:52:34.929] |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:52:34.929] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:52:34.971] |  :  .  |  :  .  |  :  .  |  :  .  |  :  [1] TRUE
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :  received data:
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :  List of 5
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ type   : chr "VALUE"
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ value  :List of 13
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ value            : num 6
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ visible          : logi TRUE
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ stdout           : chr ""
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ conditions       : list()
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ rng              : logi FALSE
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseConnections:List of 3
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ added   : NULL
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ removed : NULL
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ replaced: NULL
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseDevices    : NULL
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:52:34"
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:52:34"
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ session_uuid     : chr "1290e4d764c25327f51c9a4ffb04c110"
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ pid   : int 68559
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:52:34"
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ r_info           :List of 4
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os           : chr "unix"
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ version          : chr "1.8"
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ success: logi TRUE
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.004 0 0
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:52:34.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ tag    : NULL
[10:52:34.982] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Received FutureResult
[10:52:34.982] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'remove', earlySignal = 0) ...
[10:52:34.982] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Removed future from position #1
[10:52:34.982] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:52:34.983] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-15c5bfbcaac818db4cd4808273d212fe', action = 'remove', earlySignal = 0) ... done
[10:52:34.983] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Erased future from future backend
[10:52:34.983] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:52:34.983] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:52:34.983] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:52:34.983] |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:52:34.983] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:52:34.983] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:52:34.983] |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:52:34.983] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[1] 6
Testing with 2 cores ... DONE

> message("*** Global argument '...' ... DONE")
*** Global argument '...' ... DONE
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=0.9s, sys.self=0.08s, elapsed=2s, user.child=0.4s, sys.child=0.5s
Test ‘dotdotdot’ ... success
> 
