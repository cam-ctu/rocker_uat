
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script inst/testme/test-stdout.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future:::testme("stdout")
Test ‘stdout’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future/testme/test-stdout.R’

> library(future)
[08:10:28.346] Option 'future.startup.script': TRUE
[08:10:28.346] Future startup scripts considered: ‘.future.R’, ‘~/.future.R’
[08:10:28.346] Future startup scripts found: <none>

> message("*** Standard output ...")
*** Standard output ...

> truth_rows <- utils::capture.output({
+     print(1:50)
+     str(1:50)
+     cat(letters, sep = "-")
+     cat(1:6, collapse = "\n")
+     write.ta .... [TRUNCATED] 

> truth <- paste0(paste(truth_rows, collapse = "\n"), 
+     "\n")

> print(truth)
[1] " [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\n int [1:50] 1 2 3 4 5 6 7 8 9 10 ...\na-b-c-d-e-f-g-h-i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z1 2 3 4 5 6 \n\"Sepal.Length\"\t\"Sepal.Width\"\t\"Petal.Length\"\t\"Petal.Width\"\t\"Species\"\n\"1\"\t5.1\t3.5\t1.4\t0.2\t\"setosa\"\n\"2\"\t4.9\t3\t1.4\t0.2\t\"setosa\"\n\"3\"\t4.7\t3.2\t1.3\t0.2\t\"setosa\"\n\"4\"\t4.6\t3.1\t1.5\t0.2\t\"setosa\"\n\"5\"\t5\t3.6\t1.4\t0.2\t\"setosa\"\n\"6\"\t5.4\t3.9\t1.7\t0.4\t\"setosa\"\n\"7\"\t4.6\t3.4\t1.4\t0.3\t\"setosa\"\n\"8\"\t5\t3.4\t1.5\t0.2\t\"setosa\"\n\"9\"\t4.4\t2.9\t1.4\t0.2\t\"setosa\"\n\"10\"\t4.9\t3.1\t1.5\t0.1\t\"setosa\"\n"

> for (cores in seq_len(min(2, availCores))) {
+     message(sprintf("Testing with %d cores ...", cores))
+     options(mc.cores = cores)
+     for (s .... [TRUNCATED] 
Testing with 1 cores ...
sequential ...
[08:10:28.383] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:28.383] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:10:28.383] | : all.equal() for FutureStrategyList ...
[08:10:28.383] | : . New stack:
[08:10:28.383] | : . List of 1
[08:10:28.383] | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.383] | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.383] | : .   ..- attr(*, "init")= logi TRUE
[08:10:28.383] | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.383] | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.383] | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.383] | : .   ..- attr(*, "call")= language plan(strategy)
[08:10:28.383] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.386] | : . Old stack:
[08:10:28.386] | : . List of 1
[08:10:28.386] | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.386] | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.386] | : .   ..- attr(*, "init")= logi TRUE
[08:10:28.386] | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.386] | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.386] | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.386] | : .   ..- attr(*, "call")= language plan(sequential)
[08:10:28.386] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.389] | : . Not identical
[08:10:28.389] | : . all.equal() for future ...
[08:10:28.389] | : . ' List of 2
[08:10:28.389] | : . '  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.389] | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.389] | : . '   ..- attr(*, "init")= logi TRUE
[08:10:28.389] | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.389] | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.389] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.389] | : . '   ..- attr(*, "call")= language plan(strategy)
[08:10:28.389] | : . '  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.389] | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.389] | : . '   ..- attr(*, "init")= logi TRUE
[08:10:28.389] | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.389] | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.389] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.389] | : . '   ..- attr(*, "call")= language plan(sequential)
[08:10:28.393] | : . all.equal() for future ... done
[08:10:28.393] | : all.equal() for FutureStrategyList ... done
[08:10:28.394] | : plan(): Skip setting new future backend stack because it is the same as the current one:
[08:10:28.394] | : List of future strategies:
[08:10:28.394] | : 1. sequential:
[08:10:28.394] | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:10:28.394] | :    - tweaked: FALSE
[08:10:28.394] | :    - call: plan(sequential)
[08:10:28.394] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[08:10:28.394] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
- stdout = TRUE
[08:10:28.394] future(..., label = NULL) ...
[08:10:28.395] | lazy: FALSE
[08:10:28.395] | stdout: TRUE
[08:10:28.395] | conditions: [n=1] ‘condition’
[08:10:28.395] | gc: FALSE
[08:10:28.395] | earlySignal: FALSE
[08:10:28.396] | getGlobalsAndPackages() ...
[08:10:28.396] | : Searching for globals ...
[08:10:28.431] | : . globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[08:10:28.431] | : Searching for globals ... done
[08:10:28.431] | : Resolving globals: FALSE
[08:10:28.432] | : Search for packages associated with the globals ...
[08:10:28.432] | : . Packages associated with globals: [2] ‘base’, ‘utils’
[08:10:28.432] | : . Packages: [2] ‘base’, ‘utils’
[08:10:28.432] | : Search for packages associated with the globals ... done
[08:10:28.433] | : Packages after dropping 'base': [1] ‘utils’
[08:10:28.433] | : Packages after dropping non-attached packages: [1] ‘utils’
[08:10:28.433] | : globals: [0] 
[08:10:28.433] | : packages: [1] ‘utils’
[08:10:28.433] | getGlobalsAndPackages() ... done
[08:10:28.434] | run() for ‘Future’ (<unnamed-1>) ...
[08:10:28.434] | : state: ‘created’
[08:10:28.434] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:28.434] | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:10:28.434] | : . ' function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.434] | : . '  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.434] | : . '  - attr(*, "init")= logi TRUE
[08:10:28.434] | : . '  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.434] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.434] | : . '  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.434] | : . '  - attr(*, "call")= language plan(sequential)
[08:10:28.436] | : . ' init: TRUE
[08:10:28.436] | : . ' makeFutureBackend(<sequential>) ...
[08:10:28.436] | : . ' , Backend function: <‘NULL’>
[08:10:28.436] | : . ' , Evaluator tweak arguments: [n=0]
[08:10:28.437] | : . ' ,  list()
[08:10:28.437] | : . ' , Evaluator formal arguments: [n=2]
[08:10:28.437] | : . ' ,  list()
[08:10:28.437] | : . ' , Backend factory arguments: [n=2]
[08:10:28.437] | : . ' , Dotted pair list of 2
[08:10:28.437] | : . ' ,  $ gc         : logi FALSE
[08:10:28.437] | : . ' ,  $ earlySignal: logi FALSE
[08:10:28.438] | : . ' , Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:10:28.439] | : . ' makeFutureBackend(<sequential>) ... done
[08:10:28.439] | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:10:28.439] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:28.439] | : Using SequentialFutureBackend ...
[08:10:28.439] | : . Number of futures since start: 0 (0 created, 0 launched, 0 finished)
[08:10:28.439] | : . Launching futures ...
[08:10:28.439] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:10:28.439] | : . ' , getFutureData() ...
[08:10:28.440] | : . ' , ; getFutureCore() ...
[08:10:28.440] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘utils’
[08:10:28.440] | : . ' , ; getFutureCore() ... done
[08:10:28.440] | : . ' , ; getFutureCapture() ...
[08:10:28.440] | : . ' , ; getFutureCapture() ... done
[08:10:28.440] | : . ' , ; getFutureContext() ...
[08:10:28.440] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:28.441] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:10:28.441] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:28.441] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:10:28.441] | : . ' , ; getFutureContext() ... done
[08:10:28.441] | : . ' , getFutureData() ... done
[08:10:28.443] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:28.443] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:10:28.444] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:28.444] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:28.444] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:28.444] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:10:28.444] | : . ' , ; ` | New stack:
[08:10:28.444] | : . ' , ; ` | List of 1
[08:10:28.444] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.444] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.444] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:10:28.444] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.444] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.444] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.444] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:28.444] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.448] | : . ' , ; ` | Old stack:
[08:10:28.448] | : . ' , ; ` | List of 1
[08:10:28.448] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.448] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.448] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:10:28.448] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.448] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.448] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.448] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:10:28.448] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.448] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.448] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.448] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.451] | : . ' , ; ` | Not identical
[08:10:28.451] | : . ' , ; ` | all.equal() for future ...
[08:10:28.451] | : . ' , ; ` | : List of 2
[08:10:28.451] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.451] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.451] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:10:28.451] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.451] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.451] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.451] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:28.451] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.451] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.451] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:28.451] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.451] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.451] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.451] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:10:28.451] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.451] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.451] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.456] | : . ' , ; ` | all.equal() for future ... done
[08:10:28.456] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:10:28.456] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:10:28.456] | : . ' , ; ` List of future strategies:
[08:10:28.456] | : . ' , ; ` 1. sequential:
[08:10:28.456] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:10:28.456] | : . ' , ; `    - tweaked: FALSE
[08:10:28.456] | : . ' , ; `    - call: plan(sequential)
[08:10:28.457] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:28.457] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:28.460] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:28.460] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:28.460] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:28.460] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:10:28.460] | : . ' , ; ` | : New stack:
[08:10:28.460] | : . ' , ; ` | : List of 1
[08:10:28.460] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.460] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.460] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:28.460] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.460] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.460] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.460] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:10:28.460] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.460] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.460] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.460] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.463] | : . ' , ; ` | : Old stack:
[08:10:28.463] | : . ' , ; ` | : List of 1
[08:10:28.463] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.463] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.463] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:28.463] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.463] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.463] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.463] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:10:28.463] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.463] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.463] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.463] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.467] | : . ' , ; ` | : Identical
[08:10:28.467] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:10:28.467] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:10:28.468] | : . ' , ; ` | List of future strategies:
[08:10:28.468] | : . ' , ; ` | 1. sequential:
[08:10:28.468] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:10:28.468] | : . ' , ; ` |    - tweaked: FALSE
[08:10:28.468] | : . ' , ; ` |    - call: plan(sequential)
[08:10:28.468] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:28.468] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:28.468] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:28.471] | : . ' , SequentialFuture started (and completed)
[08:10:28.471] | : . ' , signalConditions() ...
[08:10:28.471] | : . ' , ; include = ‘immediateCondition’
[08:10:28.472] | : . ' , ; exclude = 
[08:10:28.472] | : . ' , ; resignal = FALSE
[08:10:28.472] | : . ' , ; Number of conditions: 6
[08:10:28.472] | : . ' , ;  int 6
[08:10:28.472] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.472] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.472] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.473] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.473] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.473] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.473] | : . ' , signalConditions() ... done
[08:10:28.473] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:10:28.473] | : . Launching futures ... done
[08:10:28.473] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:10:28.473] | : Using SequentialFutureBackend ... done
[08:10:28.473] | run() for ‘Future’ (<unnamed-1>) ... done
[08:10:28.474] future(..., label = NULL) ... done
List of 16
 $ value              : int 42
 $ visible            : logi TRUE
 $ stdout             : chr " [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n[26] 26 27 28 29 30 31 32 33 3"| __truncated__
 $ conditions         :List of 6
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:28.442] | : . ' , attachPackages() ...\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg))
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:28.442] | : . ' , ; packages: [n=1] ‘future’\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg), appendLF = appendLF)
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:28.443] | : . ' , attachPackages() ... done\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg))
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:28.443] | : . ' , attachPackages() ...\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg))
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:28.443] | : . ' , ; packages: [n=1] ‘utils’\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg), appendLF = appendLF)
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:28.443] | : . ' , attachPackages() ... done\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg))
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
 $ rng                : logi FALSE
 $ seed               : NULL
 $ misuseGlobalEnv    : NULL
 $ misuseConnections  :List of 3
  ..$ added   : NULL
  ..$ removed : NULL
  ..$ replaced: NULL
 $ misuseDevices      : NULL
 $ misuseDefaultDevice: list()
 $ started            : POSIXct[1:1], format: "2025-06-17 08:10:28"
 $ finished           : POSIXct[1:1], format: "2025-06-17 08:10:28"
 $ uuid               : chr [1:2] "8090913757941eb18ce8f3a29fec0ad8" "1"
 $ session_uuid       : chr "8090913757941eb18ce8f3a29fec0ad8"
  ..- attr(*, "source")=List of 5
  .. ..$ host  : Named chr "285a5f234941"
  .. .. ..- attr(*, "names")= chr "HOSTNAME"
  .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
  .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
  .. ..$ pid   : int 75621
  .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:10:28"
  .. ..$ random: int 2147483647
 $ r_info             :List of 4
  ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
  .. ..$ : int [1:3] 4 5 0
  ..$ os           : chr "unix"
  ..$ os_name      : chr "Linux"
  ..$ captures_utf8: logi TRUE
 $ version            : chr "1.8"
 - attr(*, "class")= chr "FutureResult"
[08:10:28.494] value() for SequentialFuture (<unnamed-1>) ...
[08:10:28.494] | signalConditions() ...
[08:10:28.494] | : include = ‘immediateCondition’
[08:10:28.494] | : exclude = 
[08:10:28.494] | : resignal = FALSE
[08:10:28.494] | : Number of conditions: 6
[08:10:28.494] | :  int 6
[08:10:28.495] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.495] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.495] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.495] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.495] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.495] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.495] | signalConditions() ... done
[08:10:28.496] | relay stdout ...
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
 int [1:50] 1 2 3 4 5 6 7 8 9 10 ...
a-b-c-d-e-f-g-h-i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z1 2 3 4 5 6 
"Sepal.Length"	"Sepal.Width"	"Petal.Length"	"Petal.Width"	"Species"
"1"	5.1	3.5	1.4	0.2	"setosa"
"2"	4.9	3	1.4	0.2	"setosa"
"3"	4.7	3.2	1.3	0.2	"setosa"
"4"	4.6	3.1	1.5	0.2	"setosa"
"5"	5	3.6	1.4	0.2	"setosa"
"6"	5.4	3.9	1.7	0.4	"setosa"
"7"	4.6	3.4	1.4	0.3	"setosa"
"8"	5	3.4	1.5	0.2	"setosa"
"9"	4.4	2.9	1.4	0.2	"setosa"
"10"	4.9	3.1	1.5	0.1	"setosa"
[08:10:28.496] | relay stdout ... done
[08:10:28.496] | check for misuse ...
[08:10:28.496] | check for misuse ... done
[08:10:28.496] | relay conditions ...
[08:10:28.496] | : Future state: ‘finished’
[08:10:28.496] | : signalConditions() ...
[08:10:28.496] | : . include = ‘condition’
[08:10:28.496] | : . exclude = ‘immediateCondition’
[08:10:28.496] | : . resignal = TRUE
[08:10:28.497] | : . Number of conditions: 6
[08:10:28.497] | : .  int 6
[08:10:28.497] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.497] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.442] | : . ' , attachPackages() ...
[08:10:28.497] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.497] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.442] | : . ' , ; packages: [n=1] ‘future’
[08:10:28.497] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.498] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.443] | : . ' , attachPackages() ... done
[08:10:28.498] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.498] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.443] | : . ' , attachPackages() ...
[08:10:28.498] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.498] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.443] | : . ' , ; packages: [n=1] ‘utils’
[08:10:28.498] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.498] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.443] | : . ' , attachPackages() ... done
[08:10:28.498] | : signalConditions() ... done
[08:10:28.499] | relay conditions ... done
[08:10:28.499] value() for SequentialFuture (<unnamed-1>) ... done
FutureResult:
value: ‘integer’
visible: TRUE
stdout: character
conditions: [n = 6] simpleMessage, simpleMessage, simpleMessage, simpleMessage, simpleMessage, simpleMessage
RNG used: FALSE
duration: 0.01732469 secs (started 2025-06-17 08:10:28.442507)
version: 1.8
[08:10:28.500] future(..., label = NULL) ...
[08:10:28.500] | lazy: FALSE
[08:10:28.500] | stdout: TRUE
[08:10:28.500] | conditions: [n=1] ‘condition’
[08:10:28.500] | gc: FALSE
[08:10:28.500] | earlySignal: FALSE
[08:10:28.500] | getGlobalsAndPackages() ...
[08:10:28.501] | : Searching for globals ...
[08:10:28.529] | : . globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[08:10:28.529] | : Searching for globals ... done
[08:10:28.529] | : Resolving globals: FALSE
[08:10:28.529] | : Search for packages associated with the globals ...
[08:10:28.530] | : . Packages associated with globals: [2] ‘base’, ‘utils’
[08:10:28.530] | : . Packages: [2] ‘base’, ‘utils’
[08:10:28.530] | : Search for packages associated with the globals ... done
[08:10:28.530] | : Packages after dropping 'base': [1] ‘utils’
[08:10:28.530] | : Packages after dropping non-attached packages: [1] ‘utils’
[08:10:28.530] | : globals: [0] 
[08:10:28.531] | : packages: [1] ‘utils’
[08:10:28.531] | getGlobalsAndPackages() ... done
[08:10:28.531] | run() for ‘Future’ (<unnamed-2>) ...
[08:10:28.531] | : state: ‘created’
[08:10:28.531] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:28.531] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:28.531] | : Using SequentialFutureBackend ...
[08:10:28.531] | : . Number of futures since start: 1 (1 created, 1 launched, 1 finished)
[08:10:28.532] | : . Launching futures ...
[08:10:28.532] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:10:28.532] | : . ' , getFutureData() ...
[08:10:28.532] | : . ' , ; getFutureCore() ...
[08:10:28.532] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘utils’
[08:10:28.532] | : . ' , ; getFutureCore() ... done
[08:10:28.532] | : . ' , ; getFutureCapture() ...
[08:10:28.532] | : . ' , ; getFutureCapture() ... done
[08:10:28.532] | : . ' , ; getFutureContext() ...
[08:10:28.532] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:28.533] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:10:28.533] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:28.533] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:10:28.533] | : . ' , ; getFutureContext() ... done
[08:10:28.533] | : . ' , getFutureData() ... done
[08:10:28.534] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:28.534] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:10:28.534] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:28.535] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:28.535] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:28.535] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:10:28.535] | : . ' , ; ` | New stack:
[08:10:28.535] | : . ' , ; ` | List of 1
[08:10:28.535] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.535] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.535] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:10:28.535] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.535] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.535] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.535] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:28.535] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.538] | : . ' , ; ` | Old stack:
[08:10:28.539] | : . ' , ; ` | List of 1
[08:10:28.539] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.539] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.539] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:10:28.539] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.539] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.539] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.539] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:10:28.539] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.539] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.539] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.539] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.542] | : . ' , ; ` | Not identical
[08:10:28.542] | : . ' , ; ` | all.equal() for future ...
[08:10:28.542] | : . ' , ; ` | : List of 2
[08:10:28.542] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.542] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.542] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:10:28.542] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.542] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.542] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.542] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:28.542] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.542] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.542] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:28.542] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.542] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.542] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.542] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:10:28.542] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.542] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.542] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.547] | : . ' , ; ` | all.equal() for future ... done
[08:10:28.547] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:10:28.547] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:10:28.547] | : . ' , ; ` List of future strategies:
[08:10:28.547] | : . ' , ; ` 1. sequential:
[08:10:28.547] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:10:28.547] | : . ' , ; `    - tweaked: FALSE
[08:10:28.547] | : . ' , ; `    - call: plan(sequential)
[08:10:28.547] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:28.548] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:28.550] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:28.550] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:28.550] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:28.550] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:10:28.550] | : . ' , ; ` | : New stack:
[08:10:28.550] | : . ' , ; ` | : List of 1
[08:10:28.550] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.550] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.550] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:28.550] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.550] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.550] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.550] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:10:28.550] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.550] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.550] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.550] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.553] | : . ' , ; ` | : Old stack:
[08:10:28.553] | : . ' , ; ` | : List of 1
[08:10:28.553] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.553] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.553] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:28.553] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.553] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.553] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.553] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:10:28.553] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.553] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.553] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.553] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.558] | : . ' , ; ` | : Identical
[08:10:28.558] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:10:28.558] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:10:28.558] | : . ' , ; ` | List of future strategies:
[08:10:28.558] | : . ' , ; ` | 1. sequential:
[08:10:28.558] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:10:28.558] | : . ' , ; ` |    - tweaked: FALSE
[08:10:28.558] | : . ' , ; ` |    - call: plan(sequential)
[08:10:28.559] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:28.559] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:28.559] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:28.559] | : . ' , SequentialFuture started (and completed)
[08:10:28.559] | : . ' , signalConditions() ...
[08:10:28.559] | : . ' , ; include = ‘immediateCondition’
[08:10:28.559] | : . ' , ; exclude = 
[08:10:28.560] | : . ' , ; resignal = FALSE
[08:10:28.560] | : . ' , ; Number of conditions: 6
[08:10:28.560] | : . ' , ;  int 6
[08:10:28.560] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.560] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.560] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.560] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.561] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.561] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.561] | : . ' , signalConditions() ... done
[08:10:28.561] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:10:28.561] | : . Launching futures ... done
[08:10:28.561] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:10:28.561] | : Using SequentialFutureBackend ... done
[08:10:28.561] | run() for ‘Future’ (<unnamed-2>) ... done
[08:10:28.561] future(..., label = NULL) ... done
[08:10:28.562] value() for SequentialFuture (<unnamed-2>) ...
[08:10:28.562] | signalConditions() ...
[08:10:28.562] | : include = ‘immediateCondition’
[08:10:28.562] | : exclude = 
[08:10:28.562] | : resignal = FALSE
[08:10:28.562] | : Number of conditions: 6
[08:10:28.562] | :  int 6
[08:10:28.563] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.563] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.563] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.563] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.563] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.563] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.563] | signalConditions() ... done
[08:10:28.563] | relay stdout ...
[08:10:28.564] | relay stdout ... done
[08:10:28.564] | check for misuse ...
[08:10:28.564] | check for misuse ... done
[08:10:28.564] | relay conditions ...
[08:10:28.564] | : Future state: ‘finished’
[08:10:28.564] | : signalConditions() ...
[08:10:28.564] | : . include = ‘condition’
[08:10:28.564] | : . exclude = ‘immediateCondition’
[08:10:28.564] | : . resignal = TRUE
[08:10:28.564] | : . Number of conditions: 6
[08:10:28.564] | : .  int 6
[08:10:28.565] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.565] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.533] | : . ' , attachPackages() ...
[08:10:28.565] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.565] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.533] | : . ' , ; packages: [n=1] ‘future’
[08:10:28.565] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.565] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.533] | : . ' , attachPackages() ... done
[08:10:28.566] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.566] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.534] | : . ' , attachPackages() ...
[08:10:28.566] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.566] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.534] | : . ' , ; packages: [n=1] ‘utils’
[08:10:28.566] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.566] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.534] | : . ' , attachPackages() ... done
[08:10:28.566] | : signalConditions() ... done
[08:10:28.566] | relay conditions ... done
[08:10:28.566] value() for SequentialFuture (<unnamed-2>) ... done
 [1] " [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25"  
 [2] "[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50"  
 [3] " int [1:50] 1 2 3 4 5 6 7 8 9 10 ..."                                             
 [4] "a-b-c-d-e-f-g-h-i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z1 2 3 4 5 6 "                  
 [5] "\"Sepal.Length\"\t\"Sepal.Width\"\t\"Petal.Length\"\t\"Petal.Width\"\t\"Species\""
 [6] "\"1\"\t5.1\t3.5\t1.4\t0.2\t\"setosa\""                                            
 [7] "\"2\"\t4.9\t3\t1.4\t0.2\t\"setosa\""                                              
 [8] "\"3\"\t4.7\t3.2\t1.3\t0.2\t\"setosa\""                                            
 [9] "\"4\"\t4.6\t3.1\t1.5\t0.2\t\"setosa\""                                            
[10] "\"5\"\t5\t3.6\t1.4\t0.2\t\"setosa\""                                              
[11] "\"6\"\t5.4\t3.9\t1.7\t0.4\t\"setosa\""                                            
[12] "\"7\"\t4.6\t3.4\t1.4\t0.3\t\"setosa\""                                            
[13] "\"8\"\t5\t3.4\t1.5\t0.2\t\"setosa\""                                              
[14] "\"9\"\t4.4\t2.9\t1.4\t0.2\t\"setosa\""                                            
[15] "\"10\"\t4.9\t3.1\t1.5\t0.1\t\"setosa\""                                           
- stdout = structure(TRUE, drop = TRUE)
[08:10:28.567] future(..., label = NULL) ...
[08:10:28.567] | lazy: FALSE
[08:10:28.567] | stdout: TRUE
[08:10:28.567] | conditions: [n=1] ‘condition’
[08:10:28.567] | gc: FALSE
[08:10:28.567] | earlySignal: FALSE
[08:10:28.567] | getGlobalsAndPackages() ...
[08:10:28.567] | : Searching for globals ...
[08:10:28.570] | : . globals found: [1] ‘print’
[08:10:28.570] | : Searching for globals ... done
[08:10:28.570] | : Resolving globals: FALSE
[08:10:28.570] | : Search for packages associated with the globals ...
[08:10:28.571] | : . Packages associated with globals: [1] ‘base’
[08:10:28.571] | : . Packages: [1] ‘base’
[08:10:28.571] | : Search for packages associated with the globals ... done
[08:10:28.571] | : Packages after dropping 'base': [0] 
[08:10:28.571] | : globals: [0] 
[08:10:28.571] | : packages: [0] 
[08:10:28.571] | getGlobalsAndPackages() ... done
[08:10:28.572] | run() for ‘Future’ (<unnamed-3>) ...
[08:10:28.572] | : state: ‘created’
[08:10:28.572] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:28.572] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:28.572] | : Using SequentialFutureBackend ...
[08:10:28.572] | : . Number of futures since start: 2 (2 created, 2 launched, 2 finished)
[08:10:28.572] | : . Launching futures ...
[08:10:28.572] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:10:28.572] | : . ' , getFutureData() ...
[08:10:28.573] | : . ' , ; getFutureCore() ...
[08:10:28.573] | : . ' , ; ` Packages needed by the future expression (n = 0): <none>
[08:10:28.573] | : . ' , ; getFutureCore() ... done
[08:10:28.573] | : . ' , ; getFutureCapture() ...
[08:10:28.573] | : . ' , ; getFutureCapture() ... done
[08:10:28.573] | : . ' , ; getFutureContext() ...
[08:10:28.573] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:28.574] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:10:28.574] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:28.575] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:10:28.575] | : . ' , ; getFutureContext() ... done
[08:10:28.575] | : . ' , getFutureData() ... done
[08:10:28.576] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:28.576] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:10:28.576] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:28.576] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:28.577] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:28.577] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:10:28.577] | : . ' , ; ` | New stack:
[08:10:28.577] | : . ' , ; ` | List of 1
[08:10:28.577] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.577] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.577] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:10:28.577] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.577] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.577] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.577] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:28.577] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.579] | : . ' , ; ` | Old stack:
[08:10:28.579] | : . ' , ; ` | List of 1
[08:10:28.579] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.579] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.579] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:10:28.579] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.579] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.579] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.579] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:10:28.579] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.579] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.579] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.579] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.582] | : . ' , ; ` | Not identical
[08:10:28.583] | : . ' , ; ` | all.equal() for future ...
[08:10:28.583] | : . ' , ; ` | : List of 2
[08:10:28.583] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.583] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.583] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:10:28.583] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.583] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.583] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.583] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:28.583] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.583] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.583] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:28.583] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.583] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.583] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.583] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:10:28.583] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.583] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.583] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.588] | : . ' , ; ` | all.equal() for future ... done
[08:10:28.588] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:10:28.588] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:10:28.588] | : . ' , ; ` List of future strategies:
[08:10:28.588] | : . ' , ; ` 1. sequential:
[08:10:28.588] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:10:28.588] | : . ' , ; `    - tweaked: FALSE
[08:10:28.588] | : . ' , ; `    - call: plan(sequential)
[08:10:28.588] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:28.588] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:28.590] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:28.590] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:28.590] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:28.590] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:10:28.590] | : . ' , ; ` | : New stack:
[08:10:28.590] | : . ' , ; ` | : List of 1
[08:10:28.590] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.590] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.590] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:28.590] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.590] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.590] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.590] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:10:28.590] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.590] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.590] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.590] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.595] | : . ' , ; ` | : Old stack:
[08:10:28.595] | : . ' , ; ` | : List of 1
[08:10:28.595] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.595] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.595] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:28.595] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.595] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.595] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.595] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:10:28.595] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.595] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.595] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.595] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.598] | : . ' , ; ` | : Identical
[08:10:28.598] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:10:28.598] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:10:28.598] | : . ' , ; ` | List of future strategies:
[08:10:28.598] | : . ' , ; ` | 1. sequential:
[08:10:28.598] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:10:28.598] | : . ' , ; ` |    - tweaked: FALSE
[08:10:28.598] | : . ' , ; ` |    - call: plan(sequential)
[08:10:28.598] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:28.598] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:28.599] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:28.599] | : . ' , SequentialFuture started (and completed)
[08:10:28.599] | : . ' , signalConditions() ...
[08:10:28.599] | : . ' , ; include = ‘immediateCondition’
[08:10:28.599] | : . ' , ; exclude = 
[08:10:28.599] | : . ' , ; resignal = FALSE
[08:10:28.599] | : . ' , ; Number of conditions: 6
[08:10:28.599] | : . ' , ;  int 6
[08:10:28.600] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.600] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.600] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.600] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.600] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.600] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.600] | : . ' , signalConditions() ... done
[08:10:28.601] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:10:28.601] | : . Launching futures ... done
[08:10:28.601] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:10:28.601] | : Using SequentialFutureBackend ... done
[08:10:28.601] | run() for ‘Future’ (<unnamed-3>) ... done
[08:10:28.601] future(..., label = NULL) ... done
[08:10:28.601] value() for SequentialFuture (<unnamed-3>) ...
[08:10:28.601] | signalConditions() ...
[08:10:28.601] | : include = ‘immediateCondition’
[08:10:28.602] | : exclude = 
[08:10:28.602] | : resignal = FALSE
[08:10:28.602] | : Number of conditions: 6
[08:10:28.602] | :  int 6
[08:10:28.602] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.602] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.602] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.603] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.603] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.603] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.603] | signalConditions() ... done
[08:10:28.603] | relay stdout ...
[1] 42
[08:10:28.603] | relay stdout ... done
[08:10:28.603] | check for misuse ...
[08:10:28.603] | check for misuse ... done
[08:10:28.603] | relay conditions ...
[08:10:28.603] | : Future state: ‘finished’
[08:10:28.604] | : signalConditions() ...
[08:10:28.604] | : . include = ‘condition’
[08:10:28.604] | : . exclude = ‘immediateCondition’
[08:10:28.604] | : . resignal = TRUE
[08:10:28.604] | : . Number of conditions: 6
[08:10:28.604] | : .  int 6
[08:10:28.604] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.604] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.575] | : . ' , attachPackages() ...
[08:10:28.605] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.605] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.575] | : . ' , ; packages: [n=1] ‘future’
[08:10:28.605] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.605] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.575] | : . ' , attachPackages() ... done
[08:10:28.605] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.605] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.575] | : . ' , attachPackages() ...
[08:10:28.605] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.605] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.576] | : . ' , ; packages: [n=0] 
[08:10:28.606] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.606] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.576] | : . ' , attachPackages() ... done
[08:10:28.606] | : signalConditions() ... done
[08:10:28.606] | relay conditions ... done
[08:10:28.606] value() for SequentialFuture (<unnamed-3>) ... done
- stdout = FALSE
[08:10:28.606] future(..., label = NULL) ...
[08:10:28.606] | lazy: FALSE
[08:10:28.606] | stdout: FALSE
[08:10:28.606] | conditions: [n=1] ‘condition’
[08:10:28.606] | gc: FALSE
[08:10:28.607] | earlySignal: FALSE
[08:10:28.607] | getGlobalsAndPackages() ...
[08:10:28.607] | : Searching for globals ...
[08:10:28.635] | : . globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[08:10:28.635] | : Searching for globals ... done
[08:10:28.635] | : Resolving globals: FALSE
[08:10:28.635] | : Search for packages associated with the globals ...
[08:10:28.635] | : . Packages associated with globals: [2] ‘base’, ‘utils’
[08:10:28.636] | : . Packages: [2] ‘base’, ‘utils’
[08:10:28.636] | : Search for packages associated with the globals ... done
[08:10:28.636] | : Packages after dropping 'base': [1] ‘utils’
[08:10:28.636] | : Packages after dropping non-attached packages: [1] ‘utils’
[08:10:28.636] | : globals: [0] 
[08:10:28.636] | : packages: [1] ‘utils’
[08:10:28.637] | getGlobalsAndPackages() ... done
[08:10:28.637] | run() for ‘Future’ (<unnamed-4>) ...
[08:10:28.637] | : state: ‘created’
[08:10:28.637] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:28.637] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:28.637] | : Using SequentialFutureBackend ...
[08:10:28.637] | : . Number of futures since start: 3 (3 created, 3 launched, 3 finished)
[08:10:28.637] | : . Launching futures ...
[08:10:28.637] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:10:28.638] | : . ' , getFutureData() ...
[08:10:28.638] | : . ' , ; getFutureCore() ...
[08:10:28.638] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘utils’
[08:10:28.638] | : . ' , ; getFutureCore() ... done
[08:10:28.638] | : . ' , ; getFutureCapture() ...
[08:10:28.638] | : . ' , ; getFutureCapture() ... done
[08:10:28.639] | : . ' , ; getFutureContext() ...
[08:10:28.639] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:28.639] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:10:28.639] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:28.639] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:10:28.640] | : . ' , ; getFutureContext() ... done
[08:10:28.640] | : . ' , getFutureData() ... done
[08:10:28.641] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:28.641] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:10:28.641] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:28.641] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:28.642] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:28.642] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:10:28.642] | : . ' , ; ` | New stack:
[08:10:28.642] | : . ' , ; ` | List of 1
[08:10:28.642] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.642] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.642] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:10:28.642] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.642] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.642] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.642] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:28.642] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.644] | : . ' , ; ` | Old stack:
[08:10:28.644] | : . ' , ; ` | List of 1
[08:10:28.644] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.644] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.644] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:10:28.644] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.644] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.644] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.644] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:10:28.644] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.644] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.644] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.644] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.647] | : . ' , ; ` | Not identical
[08:10:28.647] | : . ' , ; ` | all.equal() for future ...
[08:10:28.648] | : . ' , ; ` | : List of 2
[08:10:28.648] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.648] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.648] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:10:28.648] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.648] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.648] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.648] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:28.648] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.648] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.648] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:28.648] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.648] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.648] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.648] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:10:28.648] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.648] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.648] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.652] | : . ' , ; ` | all.equal() for future ... done
[08:10:28.653] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:10:28.653] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:10:28.653] | : . ' , ; ` List of future strategies:
[08:10:28.653] | : . ' , ; ` 1. sequential:
[08:10:28.653] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:10:28.653] | : . ' , ; `    - tweaked: FALSE
[08:10:28.653] | : . ' , ; `    - call: plan(sequential)
[08:10:28.653] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:28.653] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:28.655] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:28.655] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:28.656] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:28.656] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:10:28.656] | : . ' , ; ` | : New stack:
[08:10:28.656] | : . ' , ; ` | : List of 1
[08:10:28.656] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.656] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.656] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:28.656] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.656] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.656] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.656] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:10:28.656] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.656] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.656] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.656] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.660] | : . ' , ; ` | : Old stack:
[08:10:28.660] | : . ' , ; ` | : List of 1
[08:10:28.660] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.660] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.660] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:28.660] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.660] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.660] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.660] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:10:28.660] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.660] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.660] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.660] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.663] | : . ' , ; ` | : Identical
[08:10:28.663] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:10:28.663] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:10:28.663] | : . ' , ; ` | List of future strategies:
[08:10:28.663] | : . ' , ; ` | 1. sequential:
[08:10:28.663] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:10:28.663] | : . ' , ; ` |    - tweaked: FALSE
[08:10:28.663] | : . ' , ; ` |    - call: plan(sequential)
[08:10:28.664] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:28.664] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:28.664] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:28.664] | : . ' , SequentialFuture started (and completed)
[08:10:28.664] | : . ' , signalConditions() ...
[08:10:28.664] | : . ' , ; include = ‘immediateCondition’
[08:10:28.664] | : . ' , ; exclude = 
[08:10:28.665] | : . ' , ; resignal = FALSE
[08:10:28.665] | : . ' , ; Number of conditions: 6
[08:10:28.665] | : . ' , ;  int 6
[08:10:28.665] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.665] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.665] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.665] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.665] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.666] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.666] | : . ' , signalConditions() ... done
[08:10:28.666] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:10:28.666] | : . Launching futures ... done
[08:10:28.666] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:10:28.666] | : Using SequentialFutureBackend ... done
[08:10:28.666] | run() for ‘Future’ (<unnamed-4>) ... done
[08:10:28.666] future(..., label = NULL) ... done
List of 16
 $ value              : int 42
 $ visible            : logi TRUE
 $ stdout             : NULL
 $ conditions         :List of 6
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:28.640] | : . ' , attachPackages() ...\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg))
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:28.640] | : . ' , ; packages: [n=1] ‘future’\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg), appendLF = appendLF)
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:28.640] | : . ' , attachPackages() ... done\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg))
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:28.640] | : . ' , attachPackages() ...\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg))
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:28.640] | : . ' , ; packages: [n=1] ‘utils’\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg), appendLF = appendLF)
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:28.641] | : . ' , attachPackages() ... done\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg))
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
 $ rng                : logi FALSE
 $ seed               : NULL
 $ misuseGlobalEnv    : NULL
 $ misuseConnections  :List of 3
  ..$ added   : NULL
  ..$ removed : NULL
  ..$ replaced: NULL
 $ misuseDevices      : NULL
 $ misuseDefaultDevice: list()
 $ started            : POSIXct[1:1], format: "2025-06-17 08:10:28"
 $ finished           : POSIXct[1:1], format: "2025-06-17 08:10:28"
 $ uuid               : chr [1:2] "8090913757941eb18ce8f3a29fec0ad8" "4"
 $ session_uuid       : chr "8090913757941eb18ce8f3a29fec0ad8"
  ..- attr(*, "source")=List of 5
  .. ..$ host  : Named chr "285a5f234941"
  .. .. ..- attr(*, "names")= chr "HOSTNAME"
  .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
  .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
  .. ..$ pid   : int 75621
  .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:10:28"
  .. ..$ random: int 2147483647
 $ r_info             :List of 4
  ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
  .. ..$ : int [1:3] 4 5 0
  ..$ os           : chr "unix"
  ..$ os_name      : chr "Linux"
  ..$ captures_utf8: logi TRUE
 $ version            : chr "1.8"
 - attr(*, "class")= chr "FutureResult"
[08:10:28.686] value() for SequentialFuture (<unnamed-4>) ...
[08:10:28.686] | signalConditions() ...
[08:10:28.686] | : include = ‘immediateCondition’
[08:10:28.686] | : exclude = 
[08:10:28.686] | : resignal = FALSE
[08:10:28.686] | : Number of conditions: 6
[08:10:28.686] | :  int 6
[08:10:28.687] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.687] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.687] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.687] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.687] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.687] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.687] | signalConditions() ... done
[08:10:28.687] | relay stdout ...
[08:10:28.688] | relay stdout ... done
[08:10:28.688] | check for misuse ...
[08:10:28.688] | check for misuse ... done
[08:10:28.688] | relay conditions ...
[08:10:28.688] | : Future state: ‘finished’
[08:10:28.688] | : signalConditions() ...
[08:10:28.688] | : . include = ‘condition’
[08:10:28.688] | : . exclude = ‘immediateCondition’
[08:10:28.688] | : . resignal = TRUE
[08:10:28.688] | : . Number of conditions: 6
[08:10:28.688] | : .  int 6
[08:10:28.689] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.689] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.640] | : . ' , attachPackages() ...
[08:10:28.689] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.689] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.640] | : . ' , ; packages: [n=1] ‘future’
[08:10:28.689] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.689] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.640] | : . ' , attachPackages() ... done
[08:10:28.690] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.690] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.640] | : . ' , attachPackages() ...
[08:10:28.690] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.690] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.640] | : . ' , ; packages: [n=1] ‘utils’
[08:10:28.690] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.690] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.641] | : . ' , attachPackages() ... done
[08:10:28.690] | : signalConditions() ... done
[08:10:28.690] | relay conditions ... done
[08:10:28.690] value() for SequentialFuture (<unnamed-4>) ... done
[08:10:28.691] future(..., label = NULL) ...
[08:10:28.691] | lazy: FALSE
[08:10:28.691] | stdout: FALSE
[08:10:28.691] | conditions: [n=1] ‘condition’
[08:10:28.691] | gc: FALSE
[08:10:28.691] | earlySignal: FALSE
[08:10:28.691] | getGlobalsAndPackages() ...
[08:10:28.715] | : Searching for globals ...
[08:10:28.743] | : . globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[08:10:28.744] | : Searching for globals ... done
[08:10:28.744] | : Resolving globals: FALSE
[08:10:28.744] | : Search for packages associated with the globals ...
[08:10:28.744] | : . Packages associated with globals: [2] ‘base’, ‘utils’
[08:10:28.744] | : . Packages: [2] ‘base’, ‘utils’
[08:10:28.745] | : Search for packages associated with the globals ... done
[08:10:28.745] | : Packages after dropping 'base': [1] ‘utils’
[08:10:28.745] | : Packages after dropping non-attached packages: [1] ‘utils’
[08:10:28.745] | : globals: [0] 
[08:10:28.745] | : packages: [1] ‘utils’
[08:10:28.745] | getGlobalsAndPackages() ... done
[08:10:28.745] | run() for ‘Future’ (<unnamed-5>) ...
[08:10:28.746] | : state: ‘created’
[08:10:28.746] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:28.746] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:28.746] | : Using SequentialFutureBackend ...
[08:10:28.746] | : . Number of futures since start: 4 (4 created, 4 launched, 4 finished)
[08:10:28.746] | : . Launching futures ...
[08:10:28.746] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:10:28.746] | : . ' , getFutureData() ...
[08:10:28.747] | : . ' , ; getFutureCore() ...
[08:10:28.747] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘utils’
[08:10:28.747] | : . ' , ; getFutureCore() ... done
[08:10:28.748] | : . ' , ; getFutureCapture() ...
[08:10:28.749] | : . ' , ; getFutureCapture() ... done
[08:10:28.749] | : . ' , ; getFutureContext() ...
[08:10:28.749] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:28.749] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:10:28.749] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:28.749] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:10:28.749] | : . ' , ; getFutureContext() ... done
[08:10:28.749] | : . ' , getFutureData() ... done
[08:10:28.751] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:28.751] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:10:28.751] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:28.752] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:28.752] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:28.752] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:10:28.752] | : . ' , ; ` | New stack:
[08:10:28.752] | : . ' , ; ` | List of 1
[08:10:28.752] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.752] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.752] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:10:28.752] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.752] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.752] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.752] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:28.752] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.755] | : . ' , ; ` | Old stack:
[08:10:28.755] | : . ' , ; ` | List of 1
[08:10:28.755] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.755] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.755] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:10:28.755] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.755] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.755] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.755] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:10:28.755] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.755] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.755] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.755] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.758] | : . ' , ; ` | Not identical
[08:10:28.758] | : . ' , ; ` | all.equal() for future ...
[08:10:28.759] | : . ' , ; ` | : List of 2
[08:10:28.759] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.759] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.759] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:10:28.759] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.759] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.759] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.759] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:28.759] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.759] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.759] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:28.759] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.759] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.759] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.759] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:10:28.759] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.759] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.759] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.764] | : . ' , ; ` | all.equal() for future ... done
[08:10:28.764] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:10:28.764] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:10:28.764] | : . ' , ; ` List of future strategies:
[08:10:28.764] | : . ' , ; ` 1. sequential:
[08:10:28.764] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:10:28.764] | : . ' , ; `    - tweaked: FALSE
[08:10:28.764] | : . ' , ; `    - call: plan(sequential)
[08:10:28.765] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:28.765] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:28.767] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:28.767] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:28.767] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:28.767] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:10:28.768] | : . ' , ; ` | : New stack:
[08:10:28.768] | : . ' , ; ` | : List of 1
[08:10:28.768] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.768] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.768] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:28.768] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.768] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.768] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.768] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:10:28.768] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.768] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.768] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.768] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.772] | : . ' , ; ` | : Old stack:
[08:10:28.772] | : . ' , ; ` | : List of 1
[08:10:28.772] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.772] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.772] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:28.772] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.772] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.772] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.772] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:10:28.772] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.772] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.772] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.772] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.776] | : . ' , ; ` | : Identical
[08:10:28.776] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:10:28.776] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:10:28.776] | : . ' , ; ` | List of future strategies:
[08:10:28.776] | : . ' , ; ` | 1. sequential:
[08:10:28.776] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:10:28.776] | : . ' , ; ` |    - tweaked: FALSE
[08:10:28.776] | : . ' , ; ` |    - call: plan(sequential)
[08:10:28.776] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:28.777] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:28.777] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:28.777] | : . ' , SequentialFuture started (and completed)
[08:10:28.777] | : . ' , signalConditions() ...
[08:10:28.777] | : . ' , ; include = ‘immediateCondition’
[08:10:28.777] | : . ' , ; exclude = 
[08:10:28.777] | : . ' , ; resignal = FALSE
[08:10:28.777] | : . ' , ; Number of conditions: 6
[08:10:28.778] | : . ' , ;  int 6
[08:10:28.778] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.778] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.778] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.778] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.778] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.779] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.779] | : . ' , signalConditions() ... done
[08:10:28.779] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:10:28.779] | : . Launching futures ... done
[08:10:28.779] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:10:28.779] | : Using SequentialFutureBackend ... done
[08:10:28.779] | run() for ‘Future’ (<unnamed-5>) ... done
[08:10:28.779] future(..., label = NULL) ... done
[08:10:28.779] value() for SequentialFuture (<unnamed-5>) ...
[08:10:28.780] | signalConditions() ...
[08:10:28.780] | : include = ‘immediateCondition’
[08:10:28.780] | : exclude = 
[08:10:28.780] | : resignal = FALSE
[08:10:28.780] | : Number of conditions: 6
[08:10:28.780] | :  int 6
[08:10:28.780] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.781] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.781] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.781] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.781] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.781] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.781] | signalConditions() ... done
[08:10:28.781] | relay stdout ...
[08:10:28.781] | relay stdout ... done
[08:10:28.781] | check for misuse ...
[08:10:28.782] | check for misuse ... done
[08:10:28.782] | relay conditions ...
[08:10:28.782] | : Future state: ‘finished’
[08:10:28.782] | : signalConditions() ...
[08:10:28.782] | : . include = ‘condition’
[08:10:28.782] | : . exclude = ‘immediateCondition’
[08:10:28.782] | : . resignal = TRUE
[08:10:28.782] | : . Number of conditions: 6
[08:10:28.782] | : .  int 6
[08:10:28.783] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.783] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.750] | : . ' , attachPackages() ...
[08:10:28.783] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.783] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.750] | : . ' , ; packages: [n=1] ‘future’
[08:10:28.783] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.783] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.750] | : . ' , attachPackages() ... done
[08:10:28.783] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.784] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.750] | : . ' , attachPackages() ...
[08:10:28.784] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.784] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.750] | : . ' , ; packages: [n=1] ‘utils’
[08:10:28.784] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.784] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.751] | : . ' , attachPackages() ... done
[08:10:28.784] | : signalConditions() ... done
[08:10:28.784] | relay conditions ... done
[08:10:28.784] value() for SequentialFuture (<unnamed-5>) ... done
- stdout = structure(TRUE, drop = TRUE)
[08:10:28.785] future(..., label = NULL) ...
[08:10:28.785] | lazy: FALSE
[08:10:28.785] | stdout: TRUE
[08:10:28.785] | conditions: [n=1] ‘condition’
[08:10:28.785] | gc: FALSE
[08:10:28.785] | earlySignal: FALSE
[08:10:28.785] | getGlobalsAndPackages() ...
[08:10:28.785] | : Searching for globals ...
[08:10:28.788] | : . globals found: [1] ‘print’
[08:10:28.788] | : Searching for globals ... done
[08:10:28.788] | : Resolving globals: FALSE
[08:10:28.788] | : Search for packages associated with the globals ...
[08:10:28.788] | : . Packages associated with globals: [1] ‘base’
[08:10:28.789] | : . Packages: [1] ‘base’
[08:10:28.789] | : Search for packages associated with the globals ... done
[08:10:28.789] | : Packages after dropping 'base': [0] 
[08:10:28.789] | : globals: [0] 
[08:10:28.789] | : packages: [0] 
[08:10:28.789] | getGlobalsAndPackages() ... done
[08:10:28.789] | run() for ‘Future’ (<unnamed-6>) ...
[08:10:28.789] | : state: ‘created’
[08:10:28.790] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:28.790] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:28.790] | : Using SequentialFutureBackend ...
[08:10:28.790] | : . Number of futures since start: 5 (5 created, 5 launched, 5 finished)
[08:10:28.790] | : . Launching futures ...
[08:10:28.790] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:10:28.790] | : . ' , getFutureData() ...
[08:10:28.790] | : . ' , ; getFutureCore() ...
[08:10:28.790] | : . ' , ; ` Packages needed by the future expression (n = 0): <none>
[08:10:28.791] | : . ' , ; getFutureCore() ... done
[08:10:28.792] | : . ' , ; getFutureCapture() ...
[08:10:28.792] | : . ' , ; getFutureCapture() ... done
[08:10:28.792] | : . ' , ; getFutureContext() ...
[08:10:28.792] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:28.792] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:10:28.792] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:28.792] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:10:28.793] | : . ' , ; getFutureContext() ... done
[08:10:28.793] | : . ' , getFutureData() ... done
[08:10:28.794] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:28.794] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:10:28.794] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:28.794] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:28.795] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:28.795] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:10:28.795] | : . ' , ; ` | New stack:
[08:10:28.795] | : . ' , ; ` | List of 1
[08:10:28.795] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.795] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.795] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:10:28.795] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.795] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.795] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.795] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:28.795] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.797] | : . ' , ; ` | Old stack:
[08:10:28.797] | : . ' , ; ` | List of 1
[08:10:28.797] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.797] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.797] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:10:28.797] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.797] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.797] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.797] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:10:28.797] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.797] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.797] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.797] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.800] | : . ' , ; ` | Not identical
[08:10:28.801] | : . ' , ; ` | all.equal() for future ...
[08:10:28.801] | : . ' , ; ` | : List of 2
[08:10:28.801] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.801] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.801] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:10:28.801] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.801] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.801] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.801] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:28.801] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.801] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.801] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:28.801] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.801] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.801] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.801] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:10:28.801] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.801] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.801] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.806] | : . ' , ; ` | all.equal() for future ... done
[08:10:28.806] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:10:28.806] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:10:28.806] | : . ' , ; ` List of future strategies:
[08:10:28.806] | : . ' , ; ` 1. sequential:
[08:10:28.806] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:10:28.806] | : . ' , ; `    - tweaked: FALSE
[08:10:28.806] | : . ' , ; `    - call: plan(sequential)
[08:10:28.806] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:28.806] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:28.808] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:28.808] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:28.808] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:28.808] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:10:28.808] | : . ' , ; ` | : New stack:
[08:10:28.809] | : . ' , ; ` | : List of 1
[08:10:28.809] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.809] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.809] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:28.809] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.809] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.809] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.809] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:10:28.809] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.809] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.809] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.809] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.813] | : . ' , ; ` | : Old stack:
[08:10:28.813] | : . ' , ; ` | : List of 1
[08:10:28.813] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.813] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.813] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:28.813] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.813] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.813] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.813] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:10:28.813] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.813] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.813] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.813] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.816] | : . ' , ; ` | : Identical
[08:10:28.816] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:10:28.816] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:10:28.816] | : . ' , ; ` | List of future strategies:
[08:10:28.816] | : . ' , ; ` | 1. sequential:
[08:10:28.816] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:10:28.816] | : . ' , ; ` |    - tweaked: FALSE
[08:10:28.816] | : . ' , ; ` |    - call: plan(sequential)
[08:10:28.817] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:28.817] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:28.817] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:28.817] | : . ' , SequentialFuture started (and completed)
[08:10:28.817] | : . ' , signalConditions() ...
[08:10:28.817] | : . ' , ; include = ‘immediateCondition’
[08:10:28.817] | : . ' , ; exclude = 
[08:10:28.818] | : . ' , ; resignal = FALSE
[08:10:28.818] | : . ' , ; Number of conditions: 6
[08:10:28.818] | : . ' , ;  int 6
[08:10:28.818] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.818] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.818] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.818] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.819] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.819] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.819] | : . ' , signalConditions() ... done
[08:10:28.819] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:10:28.819] | : . Launching futures ... done
[08:10:28.819] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:10:28.819] | : Using SequentialFutureBackend ... done
[08:10:28.819] | run() for ‘Future’ (<unnamed-6>) ... done
[08:10:28.819] future(..., label = NULL) ... done
[08:10:28.820] value() for SequentialFuture (<unnamed-6>) ...
[08:10:28.820] | signalConditions() ...
[08:10:28.820] | : include = ‘immediateCondition’
[08:10:28.820] | : exclude = 
[08:10:28.820] | : resignal = FALSE
[08:10:28.820] | : Number of conditions: 6
[08:10:28.820] | :  int 6
[08:10:28.821] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.821] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.821] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.821] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.821] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.821] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.821] | signalConditions() ... done
[08:10:28.821] | relay stdout ...
[1] 42
[08:10:28.821] | relay stdout ... done
[08:10:28.821] | check for misuse ...
[08:10:28.822] | check for misuse ... done
[08:10:28.822] | relay conditions ...
[08:10:28.822] | : Future state: ‘finished’
[08:10:28.822] | : signalConditions() ...
[08:10:28.822] | : . include = ‘condition’
[08:10:28.822] | : . exclude = ‘immediateCondition’
[08:10:28.822] | : . resignal = TRUE
[08:10:28.822] | : . Number of conditions: 6
[08:10:28.822] | : .  int 6
[08:10:28.823] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.823] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.793] | : . ' , attachPackages() ...
[08:10:28.823] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.823] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.793] | : . ' , ; packages: [n=1] ‘future’
[08:10:28.823] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.823] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.793] | : . ' , attachPackages() ... done
[08:10:28.823] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.824] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.793] | : . ' , attachPackages() ...
[08:10:28.824] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.824] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.793] | : . ' , ; packages: [n=0] 
[08:10:28.824] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.824] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.794] | : . ' , attachPackages() ... done
[08:10:28.824] | : signalConditions() ... done
[08:10:28.824] | relay conditions ... done
[08:10:28.824] value() for SequentialFuture (<unnamed-6>) ... done
- stdout = NA
[08:10:28.824] future(..., label = NULL) ...
[08:10:28.825] | lazy: FALSE
[08:10:28.825] | stdout: NA
[08:10:28.825] | conditions: [n=1] ‘condition’
[08:10:28.825] | gc: FALSE
[08:10:28.825] | earlySignal: FALSE
[08:10:28.825] | getGlobalsAndPackages() ...
[08:10:28.825] | : Searching for globals ...
[08:10:28.854] | : . globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[08:10:28.854] | : Searching for globals ... done
[08:10:28.854] | : Resolving globals: FALSE
[08:10:28.854] | : Search for packages associated with the globals ...
[08:10:28.854] | : . Packages associated with globals: [2] ‘base’, ‘utils’
[08:10:28.855] | : . Packages: [2] ‘base’, ‘utils’
[08:10:28.855] | : Search for packages associated with the globals ... done
[08:10:28.855] | : Packages after dropping 'base': [1] ‘utils’
[08:10:28.855] | : Packages after dropping non-attached packages: [1] ‘utils’
[08:10:28.855] | : globals: [0] 
[08:10:28.855] | : packages: [1] ‘utils’
[08:10:28.855] | getGlobalsAndPackages() ... done
[08:10:28.856] | run() for ‘Future’ (<unnamed-7>) ...
[08:10:28.856] | : state: ‘created’
[08:10:28.856] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:28.856] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:28.856] | : Using SequentialFutureBackend ...
[08:10:28.856] | : . Number of futures since start: 6 (6 created, 6 launched, 6 finished)
[08:10:28.856] | : . Launching futures ...
[08:10:28.856] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:10:28.856] | : . ' , getFutureData() ...
[08:10:28.857] | : . ' , ; getFutureCore() ...
[08:10:28.857] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘utils’
[08:10:28.857] | : . ' , ; getFutureCore() ... done
[08:10:28.857] | : . ' , ; getFutureCapture() ...
[08:10:28.857] | : . ' , ; getFutureCapture() ... done
[08:10:28.857] | : . ' , ; getFutureContext() ...
[08:10:28.857] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:28.857] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:10:28.857] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:28.857] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:10:28.858] | : . ' , ; getFutureContext() ... done
[08:10:28.858] | : . ' , getFutureData() ... done
[08:10:28.859] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:28.859] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:10:28.859] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:28.859] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:28.860] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:28.860] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:10:28.860] | : . ' , ; ` | New stack:
[08:10:28.860] | : . ' , ; ` | List of 1
[08:10:28.860] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.860] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.860] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:10:28.860] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.860] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.860] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.860] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:28.860] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.863] | : . ' , ; ` | Old stack:
[08:10:28.863] | : . ' , ; ` | List of 1
[08:10:28.863] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.863] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.863] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:10:28.863] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.863] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.863] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.863] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:10:28.863] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.863] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.863] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.863] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.866] | : . ' , ; ` | Not identical
[08:10:28.866] | : . ' , ; ` | all.equal() for future ...
[08:10:28.867] | : . ' , ; ` | : List of 2
[08:10:28.867] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.867] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.867] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:10:28.867] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.867] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.867] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.867] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:28.867] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.867] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.867] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:28.867] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.867] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.867] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.867] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:10:28.867] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.867] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.867] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.872] | : . ' , ; ` | all.equal() for future ... done
[08:10:28.872] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:10:28.872] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:10:28.872] | : . ' , ; ` List of future strategies:
[08:10:28.872] | : . ' , ; ` 1. sequential:
[08:10:28.872] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:10:28.872] | : . ' , ; `    - tweaked: FALSE
[08:10:28.872] | : . ' , ; `    - call: plan(sequential)
[08:10:28.872] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:28.872] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
 int [1:50] 1 2 3 4 5 6 7 8 9 10 ...
a-b-c-d-e-f-g-h-i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z1 2 3 4 5 6 
"Sepal.Length"	"Sepal.Width"	"Petal.Length"	"Petal.Width"	"Species"
"1"	5.1	3.5	1.4	0.2	"setosa"
"2"	4.9	3	1.4	0.2	"setosa"
"3"	4.7	3.2	1.3	0.2	"setosa"
"4"	4.6	3.1	1.5	0.2	"setosa"
"5"	5	3.6	1.4	0.2	"setosa"
"6"	5.4	3.9	1.7	0.4	"setosa"
"7"	4.6	3.4	1.4	0.3	"setosa"
"8"	5	3.4	1.5	0.2	"setosa"
"9"	4.4	2.9	1.4	0.2	"setosa"
"10"	4.9	3.1	1.5	0.1	"setosa"
[08:10:28.874] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:28.874] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:28.874] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:28.874] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:10:28.874] | : . ' , ; ` | : New stack:
[08:10:28.875] | : . ' , ; ` | : List of 1
[08:10:28.875] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.875] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.875] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:28.875] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.875] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.875] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.875] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:10:28.875] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.875] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.875] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.875] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.878] | : . ' , ; ` | : Old stack:
[08:10:28.878] | : . ' , ; ` | : List of 1
[08:10:28.878] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.878] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.878] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:28.878] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.878] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.878] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.878] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:10:28.878] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.878] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.878] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.878] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.882] | : . ' , ; ` | : Identical
[08:10:28.882] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:10:28.882] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:10:28.882] | : . ' , ; ` | List of future strategies:
[08:10:28.882] | : . ' , ; ` | 1. sequential:
[08:10:28.882] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:10:28.882] | : . ' , ; ` |    - tweaked: FALSE
[08:10:28.882] | : . ' , ; ` |    - call: plan(sequential)
[08:10:28.882] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:28.883] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:28.883] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:28.883] | : . ' , SequentialFuture started (and completed)
[08:10:28.883] | : . ' , signalConditions() ...
[08:10:28.883] | : . ' , ; include = ‘immediateCondition’
[08:10:28.883] | : . ' , ; exclude = 
[08:10:28.883] | : . ' , ; resignal = FALSE
[08:10:28.883] | : . ' , ; Number of conditions: 6
[08:10:28.884] | : . ' , ;  int 6
[08:10:28.884] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.884] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.884] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.884] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.884] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.884] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.885] | : . ' , signalConditions() ... done
[08:10:28.885] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:10:28.885] | : . Launching futures ... done
[08:10:28.885] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:10:28.885] | : Using SequentialFutureBackend ... done
[08:10:28.885] | run() for ‘Future’ (<unnamed-7>) ... done
[08:10:28.885] future(..., label = NULL) ... done
List of 16
 $ value              : int 42
 $ visible            : logi TRUE
 $ stdout             : NULL
 $ conditions         :List of 6
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:28.858] | : . ' , attachPackages() ...\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg))
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:28.858] | : . ' , ; packages: [n=1] ‘future’\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg), appendLF = appendLF)
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:28.858] | : . ' , attachPackages() ... done\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg))
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:28.858] | : . ' , attachPackages() ...\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg))
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:28.858] | : . ' , ; packages: [n=1] ‘utils’\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg), appendLF = appendLF)
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:28.859] | : . ' , attachPackages() ... done\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg))
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
 $ rng                : logi FALSE
 $ seed               : NULL
 $ misuseGlobalEnv    : NULL
 $ misuseConnections  : NULL
 $ misuseDevices      : NULL
 $ misuseDefaultDevice: list()
 $ started            : POSIXct[1:1], format: "2025-06-17 08:10:28"
 $ finished           : POSIXct[1:1], format: "2025-06-17 08:10:28"
 $ uuid               : chr [1:2] "8090913757941eb18ce8f3a29fec0ad8" "7"
 $ session_uuid       : chr "8090913757941eb18ce8f3a29fec0ad8"
  ..- attr(*, "source")=List of 5
  .. ..$ host  : Named chr "285a5f234941"
  .. .. ..- attr(*, "names")= chr "HOSTNAME"
  .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
  .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
  .. ..$ pid   : int 75621
  .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:10:28"
  .. ..$ random: int 2147483647
 $ r_info             :List of 4
  ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
  .. ..$ : int [1:3] 4 5 0
  ..$ os           : chr "unix"
  ..$ os_name      : chr "Linux"
  ..$ captures_utf8: logi TRUE
 $ version            : chr "1.8"
 - attr(*, "class")= chr "FutureResult"
[08:10:28.904] value() for SequentialFuture (<unnamed-7>) ...
[08:10:28.904] | signalConditions() ...
[08:10:28.904] | : include = ‘immediateCondition’
[08:10:28.904] | : exclude = 
[08:10:28.905] | : resignal = FALSE
[08:10:28.905] | : Number of conditions: 6
[08:10:28.905] | :  int 6
[08:10:28.905] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.905] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.905] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.905] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.906] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.906] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.906] | signalConditions() ... done
[08:10:28.906] | relay stdout ...
[08:10:28.906] | relay stdout ... done
[08:10:28.906] | check for misuse ...
[08:10:28.906] | check for misuse ... done
[08:10:28.906] | relay conditions ...
[08:10:28.906] | : Future state: ‘finished’
[08:10:28.906] | : signalConditions() ...
[08:10:28.907] | : . include = ‘condition’
[08:10:28.907] | : . exclude = ‘immediateCondition’
[08:10:28.907] | : . resignal = TRUE
[08:10:28.907] | : . Number of conditions: 6
[08:10:28.907] | : .  int 6
[08:10:28.907] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.907] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.858] | : . ' , attachPackages() ...
[08:10:28.908] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.908] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.858] | : . ' , ; packages: [n=1] ‘future’
[08:10:28.908] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.908] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.858] | : . ' , attachPackages() ... done
[08:10:28.908] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.908] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.858] | : . ' , attachPackages() ...
[08:10:28.908] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.908] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.858] | : . ' , ; packages: [n=1] ‘utils’
[08:10:28.908] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.909] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.859] | : . ' , attachPackages() ... done
[08:10:28.909] | : signalConditions() ... done
[08:10:28.909] | relay conditions ... done
[08:10:28.909] value() for SequentialFuture (<unnamed-7>) ... done
[08:10:28.909] future(..., label = NULL) ...
[08:10:28.909] | lazy: FALSE
[08:10:28.909] | stdout: NA
[08:10:28.909] | conditions: [n=1] ‘condition’
[08:10:28.910] | gc: FALSE
[08:10:28.910] | earlySignal: FALSE
[08:10:28.910] | getGlobalsAndPackages() ...
[08:10:28.910] | : Searching for globals ...
[08:10:28.950] | : . globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[08:10:28.951] | : Searching for globals ... done
[08:10:28.951] | : Resolving globals: FALSE
[08:10:28.951] | : Search for packages associated with the globals ...
[08:10:28.951] | : . Packages associated with globals: [2] ‘base’, ‘utils’
[08:10:28.951] | : . Packages: [2] ‘base’, ‘utils’
[08:10:28.952] | : Search for packages associated with the globals ... done
[08:10:28.952] | : Packages after dropping 'base': [1] ‘utils’
[08:10:28.952] | : Packages after dropping non-attached packages: [1] ‘utils’
[08:10:28.952] | : globals: [0] 
[08:10:28.952] | : packages: [1] ‘utils’
[08:10:28.952] | getGlobalsAndPackages() ... done
[08:10:28.952] | run() for ‘Future’ (<unnamed-8>) ...
[08:10:28.952] | : state: ‘created’
[08:10:28.953] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:28.953] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:28.953] | : Using SequentialFutureBackend ...
[08:10:28.953] | : . Number of futures since start: 7 (7 created, 7 launched, 7 finished)
[08:10:28.953] | : . Launching futures ...
[08:10:28.953] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:10:28.953] | : . ' , getFutureData() ...
[08:10:28.953] | : . ' , ; getFutureCore() ...
[08:10:28.953] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘utils’
[08:10:28.954] | : . ' , ; getFutureCore() ... done
[08:10:28.954] | : . ' , ; getFutureCapture() ...
[08:10:28.954] | : . ' , ; getFutureCapture() ... done
[08:10:28.954] | : . ' , ; getFutureContext() ...
[08:10:28.954] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:28.954] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:10:28.954] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:28.954] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:10:28.954] | : . ' , ; getFutureContext() ... done
[08:10:28.955] | : . ' , getFutureData() ... done
[08:10:28.956] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:28.957] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:10:28.957] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:28.957] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:28.958] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:28.958] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:10:28.958] | : . ' , ; ` | New stack:
[08:10:28.958] | : . ' , ; ` | List of 1
[08:10:28.958] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.958] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.958] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:10:28.958] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.958] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.958] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.958] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:28.958] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.963] | : . ' , ; ` | Old stack:
[08:10:28.963] | : . ' , ; ` | List of 1
[08:10:28.963] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.963] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.963] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:10:28.963] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.963] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.963] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.963] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:10:28.963] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.963] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.963] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.963] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.968] | : . ' , ; ` | Not identical
[08:10:28.969] | : . ' , ; ` | all.equal() for future ...
[08:10:28.969] | : . ' , ; ` | : List of 2
[08:10:28.969] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.969] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.969] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:10:28.969] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.969] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.969] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.969] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:28.969] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.969] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.969] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:28.969] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.969] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.969] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.969] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:10:28.969] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.969] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.969] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.974] | : . ' , ; ` | all.equal() for future ... done
[08:10:28.975] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:10:28.975] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:10:28.975] | : . ' , ; ` List of future strategies:
[08:10:28.975] | : . ' , ; ` 1. sequential:
[08:10:28.975] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:10:28.975] | : . ' , ; `    - tweaked: FALSE
[08:10:28.975] | : . ' , ; `    - call: plan(sequential)
[08:10:28.976] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:28.976] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
 int [1:50] 1 2 3 4 5 6 7 8 9 10 ...
a-b-c-d-e-f-g-h-i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z1 2 3 4 5 6 
"Sepal.Length"	"Sepal.Width"	"Petal.Length"	"Petal.Width"	"Species"
"1"	5.1	3.5	1.4	0.2	"setosa"
"2"	4.9	3	1.4	0.2	"setosa"
"3"	4.7	3.2	1.3	0.2	"setosa"
"4"	4.6	3.1	1.5	0.2	"setosa"
"5"	5	3.6	1.4	0.2	"setosa"
"6"	5.4	3.9	1.7	0.4	"setosa"
"7"	4.6	3.4	1.4	0.3	"setosa"
"8"	5	3.4	1.5	0.2	"setosa"
"9"	4.4	2.9	1.4	0.2	"setosa"
"10"	4.9	3.1	1.5	0.1	"setosa"
[08:10:28.978] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:28.978] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:28.978] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:28.979] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:10:28.979] | : . ' , ; ` | : New stack:
[08:10:28.979] | : . ' , ; ` | : List of 1
[08:10:28.979] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.979] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.979] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:28.979] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.979] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.979] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.979] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:10:28.979] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.979] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.979] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.979] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.984] | : . ' , ; ` | : Old stack:
[08:10:28.984] | : . ' , ; ` | : List of 1
[08:10:28.984] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:28.984] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:28.984] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:28.984] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.984] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.984] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.984] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:10:28.984] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:28.984] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:28.984] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:28.984] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:28.989] | : . ' , ; ` | : Identical
[08:10:28.990] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:10:28.990] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:10:28.990] | : . ' , ; ` | List of future strategies:
[08:10:28.990] | : . ' , ; ` | 1. sequential:
[08:10:28.990] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:10:28.990] | : . ' , ; ` |    - tweaked: FALSE
[08:10:28.990] | : . ' , ; ` |    - call: plan(sequential)
[08:10:28.992] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:28.993] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:28.993] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:28.993] | : . ' , SequentialFuture started (and completed)
[08:10:28.994] | : . ' , signalConditions() ...
[08:10:28.994] | : . ' , ; include = ‘immediateCondition’
[08:10:28.994] | : . ' , ; exclude = 
[08:10:28.994] | : . ' , ; resignal = FALSE
[08:10:28.994] | : . ' , ; Number of conditions: 6
[08:10:28.995] | : . ' , ;  int 6
[08:10:28.995] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.996] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.996] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.996] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.996] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.996] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:28.997] | : . ' , signalConditions() ... done
[08:10:28.997] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:10:28.997] | : . Launching futures ... done
[08:10:28.997] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:10:28.997] | : Using SequentialFutureBackend ... done
[08:10:28.998] | run() for ‘Future’ (<unnamed-8>) ... done
[08:10:28.998] future(..., label = NULL) ... done
[08:10:28.998] value() for SequentialFuture (<unnamed-8>) ...
[08:10:28.998] | signalConditions() ...
[08:10:28.999] | : include = ‘immediateCondition’
[08:10:28.999] | : exclude = 
[08:10:28.999] | : resignal = FALSE
[08:10:28.999] | : Number of conditions: 6
[08:10:28.999] | :  int 6
[08:10:29.000] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.000] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.000] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.001] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.001] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.001] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.001] | signalConditions() ... done
[08:10:29.001] | relay stdout ...
[08:10:29.002] | relay stdout ... done
[08:10:29.002] | check for misuse ...
[08:10:29.002] | check for misuse ... done
[08:10:29.002] | relay conditions ...
[08:10:29.002] | : Future state: ‘finished’
[08:10:29.003] | : signalConditions() ...
[08:10:29.003] | : . include = ‘condition’
[08:10:29.003] | : . exclude = ‘immediateCondition’
[08:10:29.003] | : . resignal = TRUE
[08:10:29.003] | : . Number of conditions: 6
[08:10:29.004] | : .  int 6
[08:10:29.004] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.004] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.955] | : . ' , attachPackages() ...
[08:10:29.005] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.005] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.955] | : . ' , ; packages: [n=1] ‘future’
[08:10:29.005] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.005] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.955] | : . ' , attachPackages() ... done
[08:10:29.006] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.006] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.955] | : . ' , attachPackages() ...
[08:10:29.006] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.006] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.955] | : . ' , ; packages: [n=1] ‘utils’
[08:10:29.007] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.007] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:28.956] | : . ' , attachPackages() ... done
[08:10:29.007] | : signalConditions() ... done
[08:10:29.007] | relay conditions ... done
[08:10:29.007] value() for SequentialFuture (<unnamed-8>) ... done
- stdout = structure(TRUE, drop = TRUE)
[08:10:29.008] future(..., label = NULL) ...
[08:10:29.008] | lazy: FALSE
[08:10:29.008] | stdout: TRUE
[08:10:29.008] | conditions: [n=1] ‘condition’
[08:10:29.009] | gc: FALSE
[08:10:29.009] | earlySignal: FALSE
[08:10:29.009] | getGlobalsAndPackages() ...
[08:10:29.009] | : Searching for globals ...
[08:10:29.014] | : . globals found: [1] ‘print’
[08:10:29.015] | : Searching for globals ... done
[08:10:29.015] | : Resolving globals: FALSE
[08:10:29.015] | : Search for packages associated with the globals ...
[08:10:29.015] | : . Packages associated with globals: [1] ‘base’
[08:10:29.016] | : . Packages: [1] ‘base’
[08:10:29.016] | : Search for packages associated with the globals ... done
[08:10:29.016] | : Packages after dropping 'base': [0] 
[08:10:29.016] | : globals: [0] 
[08:10:29.016] | : packages: [0] 
[08:10:29.017] | getGlobalsAndPackages() ... done
[08:10:29.017] | run() for ‘Future’ (<unnamed-9>) ...
[08:10:29.017] | : state: ‘created’
[08:10:29.017] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.018] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.018] | : Using SequentialFutureBackend ...
[08:10:29.018] | : . Number of futures since start: 8 (8 created, 8 launched, 8 finished)
[08:10:29.018] | : . Launching futures ...
[08:10:29.018] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:10:29.019] | : . ' , getFutureData() ...
[08:10:29.019] | : . ' , ; getFutureCore() ...
[08:10:29.019] | : . ' , ; ` Packages needed by the future expression (n = 0): <none>
[08:10:29.019] | : . ' , ; getFutureCore() ... done
[08:10:29.019] | : . ' , ; getFutureCapture() ...
[08:10:29.020] | : . ' , ; getFutureCapture() ... done
[08:10:29.020] | : . ' , ; getFutureContext() ...
[08:10:29.020] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.020] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:10:29.021] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.021] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:10:29.021] | : . ' , ; getFutureContext() ... done
[08:10:29.021] | : . ' , getFutureData() ... done
[08:10:29.023] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.024] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:10:29.024] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.024] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:29.025] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:29.025] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:10:29.025] | : . ' , ; ` | New stack:
[08:10:29.025] | : . ' , ; ` | List of 1
[08:10:29.025] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.025] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.025] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:10:29.025] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.025] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.025] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.025] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.025] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.031] | : . ' , ; ` | Old stack:
[08:10:29.032] | : . ' , ; ` | List of 1
[08:10:29.032] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.032] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.032] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:10:29.032] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.032] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.032] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.032] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:10:29.032] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:29.032] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.032] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.032] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.038] | : . ' , ; ` | Not identical
[08:10:29.038] | : . ' , ; ` | all.equal() for future ...
[08:10:29.038] | : . ' , ; ` | : List of 2
[08:10:29.038] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.038] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.038] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:10:29.038] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.038] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.038] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.038] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.038] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.038] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.038] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:29.038] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.038] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.038] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.038] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:10:29.038] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:29.038] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.038] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.046] | : . ' , ; ` | all.equal() for future ... done
[08:10:29.046] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:10:29.046] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:10:29.046] | : . ' , ; ` List of future strategies:
[08:10:29.046] | : . ' , ; ` 1. sequential:
[08:10:29.046] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:10:29.046] | : . ' , ; `    - tweaked: FALSE
[08:10:29.046] | : . ' , ; `    - call: plan(sequential)
[08:10:29.047] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:29.047] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:29.048] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:29.049] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:29.049] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:29.049] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:10:29.049] | : . ' , ; ` | : New stack:
[08:10:29.049] | : . ' , ; ` | : List of 1
[08:10:29.049] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.049] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.049] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:29.049] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.049] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.049] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.049] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:10:29.049] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:29.049] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.049] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.049] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.052] | : . ' , ; ` | : Old stack:
[08:10:29.052] | : . ' , ; ` | : List of 1
[08:10:29.052] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.052] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.052] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:29.052] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.052] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.052] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.052] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:10:29.052] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:29.052] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.052] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.052] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.057] | : . ' , ; ` | : Identical
[08:10:29.057] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:10:29.057] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:10:29.057] | : . ' , ; ` | List of future strategies:
[08:10:29.057] | : . ' , ; ` | 1. sequential:
[08:10:29.057] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:10:29.057] | : . ' , ; ` |    - tweaked: FALSE
[08:10:29.057] | : . ' , ; ` |    - call: plan(sequential)
[08:10:29.057] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:29.057] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:29.057] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:29.058] | : . ' , SequentialFuture started (and completed)
[08:10:29.058] | : . ' , signalConditions() ...
[08:10:29.058] | : . ' , ; include = ‘immediateCondition’
[08:10:29.058] | : . ' , ; exclude = 
[08:10:29.058] | : . ' , ; resignal = FALSE
[08:10:29.058] | : . ' , ; Number of conditions: 6
[08:10:29.058] | : . ' , ;  int 6
[08:10:29.059] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.059] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.059] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.059] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.059] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.059] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.059] | : . ' , signalConditions() ... done
[08:10:29.060] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:10:29.060] | : . Launching futures ... done
[08:10:29.060] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:10:29.060] | : Using SequentialFutureBackend ... done
[08:10:29.060] | run() for ‘Future’ (<unnamed-9>) ... done
[08:10:29.060] future(..., label = NULL) ... done
[08:10:29.060] value() for SequentialFuture (<unnamed-9>) ...
[08:10:29.060] | signalConditions() ...
[08:10:29.060] | : include = ‘immediateCondition’
[08:10:29.061] | : exclude = 
[08:10:29.061] | : resignal = FALSE
[08:10:29.061] | : Number of conditions: 6
[08:10:29.061] | :  int 6
[08:10:29.061] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.061] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.061] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.061] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.062] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.062] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.062] | signalConditions() ... done
[08:10:29.062] | relay stdout ...
[1] 42
[08:10:29.062] | relay stdout ... done
[08:10:29.062] | check for misuse ...
[08:10:29.062] | check for misuse ... done
[08:10:29.062] | relay conditions ...
[08:10:29.062] | : Future state: ‘finished’
[08:10:29.063] | : signalConditions() ...
[08:10:29.063] | : . include = ‘condition’
[08:10:29.063] | : . exclude = ‘immediateCondition’
[08:10:29.063] | : . resignal = TRUE
[08:10:29.063] | : . Number of conditions: 6
[08:10:29.063] | : .  int 6
[08:10:29.063] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.063] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.022] | : . ' , attachPackages() ...
[08:10:29.064] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.064] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.022] | : . ' , ; packages: [n=1] ‘future’
[08:10:29.064] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.064] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.022] | : . ' , attachPackages() ... done
[08:10:29.064] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.064] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.022] | : . ' , attachPackages() ...
[08:10:29.064] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.064] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.023] | : . ' , ; packages: [n=0] 
[08:10:29.064] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.065] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.023] | : . ' , attachPackages() ... done
[08:10:29.065] | : signalConditions() ... done
[08:10:29.065] | relay conditions ... done
[08:10:29.065] value() for SequentialFuture (<unnamed-9>) ... done
sequential ... done
Testing with 1 cores ... done
Testing with 2 cores ...
multicore ...
[08:10:29.065] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.066] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:10:29.066] | : all.equal() for FutureStrategyList ...
[08:10:29.066] | : . New stack:
[08:10:29.066] | : . List of 1
[08:10:29.066] | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.066] | : .     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.066] | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.066] | : .   ..- attr(*, "init")= logi TRUE
[08:10:29.066] | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.066] | : .     ...)  
[08:10:29.066] | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.066] | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.066] | : .   ..- attr(*, "call")= language plan(strategy)
[08:10:29.066] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.068] | : . Old stack:
[08:10:29.069] | : . List of 1
[08:10:29.069] | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.069] | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.069] | : .   ..- attr(*, "init")= chr "done"
[08:10:29.069] | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.069] | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.069] | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.069] | : .   ..- attr(*, "call")= language plan(sequential)
[08:10:29.069] | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:29.069] | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.069] | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.069] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.072] | : . Not identical
[08:10:29.072] | : . all.equal() for future ...
[08:10:29.072] | : . ' List of 2
[08:10:29.072] | : . '  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.072] | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.072] | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.072] | : . '   ..- attr(*, "init")= logi TRUE
[08:10:29.072] | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.072] | : . '     ...)  
[08:10:29.072] | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.072] | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.072] | : . '   ..- attr(*, "call")= language plan(strategy)
[08:10:29.072] | : . '  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.072] | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.072] | : . '   ..- attr(*, "init")= chr "done"
[08:10:29.072] | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.072] | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.072] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.072] | : . '   ..- attr(*, "call")= language plan(sequential)
[08:10:29.072] | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c19627f8> 
[08:10:29.072] | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.072] | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.078] | : . ' Formals differ
[08:10:29.078] | : . all.equal() for future ... done
[08:10:29.078] | : . Future strategies differ at level 1
[08:10:29.078] | : all.equal() for FutureStrategyList ... done
[08:10:29.078] | : plan(): Setting new future backend stack:
[08:10:29.078] | : List of future strategies:
[08:10:29.078] | : 1. multicore:
[08:10:29.078] | :    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:10:29.078] | :    - tweaked: FALSE
[08:10:29.078] | :    - call: plan(strategy)
[08:10:29.079] | : List of 1
[08:10:29.079] | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.079] | :     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.079] | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.079] | :   ..- attr(*, "init")= logi TRUE
[08:10:29.079] | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.079] | :     ...)  
[08:10:29.079] | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.079] | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.079] | :   ..- attr(*, "call")= language plan(strategy)
[08:10:29.079] | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.081] | : plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ...
[08:10:29.081] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.081] | : . ' Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:10:29.081] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.082] | : . Legacy shutdown of cluster workers ...
[08:10:29.082] | : . ' Stopping existing cluster ...
[08:10:29.082] | : . ' , No pre-existing cluster. Skipping
[08:10:29.082] | : . ' Stopping existing cluster ... done
[08:10:29.082] | : . Legacy shutdown of cluster workers ... done
[08:10:29.082] | : plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[08:10:29.082] | : plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ...
[08:10:29.082] | : . function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.082] | : .     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.082] | : .  - attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.082] | : .  - attr(*, "init")= logi TRUE
[08:10:29.082] | : .  - attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.082] | : .     ...)  
[08:10:29.082] | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.082] | : .  - attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.082] | : .  - attr(*, "call")= language plan(strategy)
[08:10:29.084] | : . init: TRUE
[08:10:29.084] | : . makeFutureBackend(<multicore>) ...
[08:10:29.085] | : . ' Backend function: <‘NULL’>
[08:10:29.085] | : . ' Evaluator tweak arguments: [n=0]
[08:10:29.085] | : . '  list()
[08:10:29.085] | : . ' Evaluator formal arguments: [n=3]
[08:10:29.085] | : . '  list()
[08:10:29.085] | : . ' Backend factory arguments: [n=3]
[08:10:29.085] | : . ' Dotted pair list of 3
[08:10:29.085] | : . '  $ workers    : language availableCores(constraints = "multicore")
[08:10:29.085] | : . '  $ gc         : logi FALSE
[08:10:29.085] | : . '  $ earlySignal: logi FALSE
[08:10:29.088] | : . ' Backend: <‘MulticoreFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:10:29.089] | : . makeFutureBackend(<multicore>) ... done
[08:10:29.089] | : plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ... done
[08:10:29.089] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.089] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.089] | : plan(): nbrOfWorkers() = 2
[08:10:29.089] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[08:10:29.089] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
- stdout = TRUE
[08:10:29.089] future(..., label = NULL) ...
[08:10:29.090] | lazy: FALSE
[08:10:29.090] | stdout: TRUE
[08:10:29.090] | conditions: [n=1] ‘condition’
[08:10:29.090] | gc: FALSE
[08:10:29.090] | earlySignal: FALSE
[08:10:29.090] | getGlobalsAndPackages() ...
[08:10:29.090] | : Searching for globals ...
[08:10:29.121] | : . globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[08:10:29.121] | : Searching for globals ... done
[08:10:29.121] | : Resolving globals: FALSE
[08:10:29.121] | : Search for packages associated with the globals ...
[08:10:29.121] | : . Packages associated with globals: [2] ‘base’, ‘utils’
[08:10:29.122] | : . Packages: [2] ‘base’, ‘utils’
[08:10:29.122] | : Search for packages associated with the globals ... done
[08:10:29.122] | : Packages after dropping 'base': [1] ‘utils’
[08:10:29.122] | : Packages after dropping non-attached packages: [1] ‘utils’
[08:10:29.122] | : globals: [0] 
[08:10:29.122] | : packages: [1] ‘utils’
[08:10:29.122] | getGlobalsAndPackages() ... done
[08:10:29.123] | run() for ‘Future’ (<unnamed-10>) ...
[08:10:29.123] | : state: ‘created’
[08:10:29.123] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.123] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.123] | : Using MulticoreFutureBackend ...
[08:10:29.123] | : . Number of futures since start: 0 (0 created, 0 launched, 0 finished)
[08:10:29.123] | : . Launching futures ...
[08:10:29.124] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:10:29.124] | : . ' , getFutureData() ...
[08:10:29.124] | : . ' , ; getFutureCore() ...
[08:10:29.124] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘utils’
[08:10:29.124] | : . ' , ; getFutureCore() ... done
[08:10:29.124] | : . ' , ; getFutureCapture() ...
[08:10:29.124] | : . ' , ; getFutureCapture() ... done
[08:10:29.124] | : . ' , ; getFutureContext() ...
[08:10:29.124] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.125] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:10:29.125] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.125] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:10:29.125] | : . ' , ; getFutureContext() ... done
[08:10:29.125] | : . ' , getFutureData() ... done
[08:10:29.126] | : . ' , requestCore(..., workers = 2) ...
[08:10:29.126] | : . ' , requestCore(..., workers = 2) ... done
[08:10:29.129] | : . ' , MulticoreFuture started
[08:10:29.129] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:10:29.130] | : . Launching futures ... done
[08:10:29.130] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:10:29.130] | : Using MulticoreFutureBackend ... done
[08:10:29.130] | run() for ‘Future’ (<unnamed-10>) ... done
[08:10:29.131] future(..., label = NULL) ... done
[08:10:29.132] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.133] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:10:29.133] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.133] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:29.133] result() for MulticoreFuture ...
[08:10:29.134] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:29.134] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:10:29.134] | : . ' , ; ` | New stack:
[08:10:29.134] | : . ' , ; ` | List of 1
[08:10:29.134] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.134] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.134] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:10:29.134] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.134] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.134] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.134] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.134] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.139] | : . ' , ; ` | Old stack:
[08:10:29.140] | : . ' , ; ` | List of 1
[08:10:29.140] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.140] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.140] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.140] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:10:29.140] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.140] | : . ' , ; ` |     ...)  
[08:10:29.140] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.140] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.140] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:10:29.140] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.140] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.140] | : . ' , ; ` |     ...)  
[08:10:29.140] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.140] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.145] | : . ' , ; ` | Not identical
[08:10:29.145] | : . ' , ; ` | all.equal() for future ...
[08:10:29.145] | : . ' , ; ` | : List of 2
[08:10:29.145] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.145] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.145] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:10:29.145] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.145] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.145] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.145] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.145] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.145] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.145] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.145] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:29.145] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.145] | : . ' , ; ` | :     ...)  
[08:10:29.145] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.145] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.145] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:10:29.145] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.145] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.145] | : . ' , ; ` | :     ...)  
[08:10:29.145] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.158] | : . ' , ; ` | : Formals differ
[08:10:29.158] | : . ' , ; ` | all.equal() for future ... done
[08:10:29.159] | : . ' , ; ` | Future strategies differ at level 1
[08:10:29.159] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:10:29.159] | : . ' , ; ` plan(): Setting new future backend stack:
[08:10:29.159] | : . ' , ; ` List of future strategies:
[08:10:29.159] | : . ' , ; ` 1. sequential:
[08:10:29.159] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:10:29.159] | : . ' , ; `    - tweaked: FALSE
[08:10:29.159] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.159] | : . ' , ; ` List of 1
[08:10:29.159] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.159] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.159] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:10:29.159] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.159] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.159] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.159] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.159] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.164] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:10:29.164] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:10:29.164] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.164] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:10:29.164] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.164] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.164] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:10:29.164] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.164] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.164] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.164] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.167] | : . ' , ; ` | : init: TRUE
[08:10:29.167] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:10:29.168] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:10:29.168] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:10:29.168] | : . ' , ; ` | : .  list()
[08:10:29.168] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:10:29.168] | : . ' , ; ` | : .  list()
[08:10:29.168] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:10:29.169] | : . ' , ; ` | : . Dotted pair list of 2
[08:10:29.169] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:10:29.169] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:10:29.170] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:10:29.170] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:10:29.170] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:10:29.170] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.170] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:10:29.170] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:29.170] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:29.173] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:29.173] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:29.174] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:29.174] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:10:29.174] | : . ' , ; ` | : New stack:
[08:10:29.174] | : . ' , ; ` | : List of 1
[08:10:29.174] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.174] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.174] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.174] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:29.174] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.174] | : . ' , ; ` | :     ...)  
[08:10:29.174] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.174] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.174] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:10:29.174] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.174] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.174] | : . ' , ; ` | :     ...)  
[08:10:29.174] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.174] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.177] | : . ' , ; ` | : Old stack:
[08:10:29.177] | : . ' , ; ` | : List of 1
[08:10:29.177] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.177] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.177] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:29.177] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.177] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.177] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.177] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.177] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4bf2f96f8> 
[08:10:29.177] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.177] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.177] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.181] | : . ' , ; ` | : Not identical
[08:10:29.181] | : . ' , ; ` | : all.equal() for future ...
[08:10:29.181] | : . ' , ; ` | : . List of 2
[08:10:29.181] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.181] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.181] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.181] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:10:29.181] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.181] | : . ' , ; ` | : .     ...)  
[08:10:29.181] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.181] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.181] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:10:29.181] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.181] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.181] | : . ' , ; ` | : .     ...)  
[08:10:29.181] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.181] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.181] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.181] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:10:29.181] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.181] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.181] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.181] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.181] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4bf2f96f8> 
[08:10:29.181] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.181] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.188] | : . ' , ; ` | : . Formals differ
[08:10:29.188] | : . ' , ; ` | : all.equal() for future ... done
[08:10:29.188] | : . ' , ; ` | : Future strategies differ at level 1
[08:10:29.189] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:10:29.189] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:10:29.189] | : . ' , ; ` | List of future strategies:
[08:10:29.189] | : . ' , ; ` | 1. multicore:
[08:10:29.189] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:10:29.189] | : . ' , ; ` |    - tweaked: FALSE
[08:10:29.189] | : . ' , ; ` |    - call: plan(strategy)
[08:10:29.189] | : . ' , ; ` | List of 1
[08:10:29.189] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.189] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.189] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.189] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:10:29.189] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.189] | : . ' , ; ` |     ...)  
[08:10:29.189] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.189] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.189] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:10:29.189] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.189] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.189] | : . ' , ; ` |     ...)  
[08:10:29.189] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.189] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.192] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:10:29.192] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:10:29.193] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.193] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.193] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:10:29.193] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:29.193] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:29.193] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:29.194] | readImmediateCondition() ...
[08:10:29.194] | : Path: ‘/tmp/RtmpQWMGJs/.future/immediateConditions’
[08:10:29.195] | : Number of RDS files: 0
[08:10:29.195] | : Returned conditions set:
[08:10:29.195] | :  list()
[08:10:29.195] | readImmediateCondition() ... done
[08:10:29.196] | result() for MulticoreFuture ...
[08:10:29.196] | result() for MulticoreFuture ... done
[08:10:29.196] | signalConditions() ...
[08:10:29.196] | : include = ‘immediateCondition’
[08:10:29.196] | : exclude = 
[08:10:29.197] | : resignal = FALSE
[08:10:29.197] | : Number of conditions: 6
[08:10:29.197] | :  int 6
[08:10:29.197] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.198] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.198] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.198] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.198] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.198] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.198] | signalConditions() ... done
[08:10:29.198] result() for MulticoreFuture ... done
List of 16
 $ value              : int 42
 $ visible            : logi TRUE
 $ stdout             : chr " [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n[26] 26 27 28 29 30 31 32 33 3"| __truncated__
 $ conditions         :List of 6
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:29.129] | : . ' , attachPackages() ...\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg))
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:29.130] | : . ' , ; packages: [n=1] ‘future’\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg), appendLF = appendLF)
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:29.130] | : . ' , attachPackages() ... done\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg))
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:29.131] | : . ' , attachPackages() ...\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg))
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:29.131] | : . ' , ; packages: [n=1] ‘utils’\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg), appendLF = appendLF)
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:29.131] | : . ' , attachPackages() ... done\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg))
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
 $ rng                : logi FALSE
 $ seed               : NULL
 $ misuseGlobalEnv    : NULL
 $ misuseConnections  :List of 3
  ..$ added   : NULL
  ..$ removed : NULL
  ..$ replaced: NULL
 $ misuseDevices      : NULL
 $ misuseDefaultDevice: list()
 $ started            : POSIXct[1:1], format: "2025-06-17 08:10:29"
 $ finished           : POSIXct[1:1], format: "2025-06-17 08:10:29"
 $ uuid               : chr [1:2] "8090913757941eb18ce8f3a29fec0ad8" "10"
 $ session_uuid       : chr "037f1f0621c7521a7240e0d84fe21386"
  ..- attr(*, "source")=List of 5
  .. ..$ host  : Named chr "285a5f234941"
  .. .. ..- attr(*, "names")= chr "HOSTNAME"
  .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
  .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
  .. ..$ pid   : int 75643
  .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:10:29"
  .. ..$ random: int 2147483647
 $ r_info             :List of 4
  ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
  .. ..$ : int [1:3] 4 5 0
  ..$ os           : chr "unix"
  ..$ os_name      : chr "Linux"
  ..$ captures_utf8: logi TRUE
 $ version            : chr "1.8"
 - attr(*, "class")= chr "FutureResult"
[08:10:29.226] value() for MulticoreFuture (<unnamed-10>) ...
[08:10:29.226] | result() for MulticoreFuture ...
[08:10:29.226] | result() for MulticoreFuture ... done
[08:10:29.226] | result() for MulticoreFuture ...
[08:10:29.226] | result() for MulticoreFuture ... done
[08:10:29.226] | signalConditions() ...
[08:10:29.226] | : include = ‘immediateCondition’
[08:10:29.226] | : exclude = 
[08:10:29.227] | : resignal = FALSE
[08:10:29.227] | : Number of conditions: 6
[08:10:29.227] | :  int 6
[08:10:29.227] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.227] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.227] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.227] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.228] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.228] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.228] | signalConditions() ... done
[08:10:29.228] | relay stdout ...
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
 int [1:50] 1 2 3 4 5 6 7 8 9 10 ...
a-b-c-d-e-f-g-h-i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z1 2 3 4 5 6 
"Sepal.Length"	"Sepal.Width"	"Petal.Length"	"Petal.Width"	"Species"
"1"	5.1	3.5	1.4	0.2	"setosa"
"2"	4.9	3	1.4	0.2	"setosa"
"3"	4.7	3.2	1.3	0.2	"setosa"
"4"	4.6	3.1	1.5	0.2	"setosa"
"5"	5	3.6	1.4	0.2	"setosa"
"6"	5.4	3.9	1.7	0.4	"setosa"
"7"	4.6	3.4	1.4	0.3	"setosa"
"8"	5	3.4	1.5	0.2	"setosa"
"9"	4.4	2.9	1.4	0.2	"setosa"
"10"	4.9	3.1	1.5	0.1	"setosa"
[08:10:29.228] | relay stdout ... done
[08:10:29.228] | check for misuse ...
[08:10:29.228] | check for misuse ... done
[08:10:29.228] | relay conditions ...
[08:10:29.228] | : Future state: ‘finished’
[08:10:29.229] | : result() for MulticoreFuture ...
[08:10:29.229] | : result() for MulticoreFuture ... done
[08:10:29.229] | : signalConditions() ...
[08:10:29.229] | : . include = ‘condition’
[08:10:29.229] | : . exclude = ‘immediateCondition’
[08:10:29.229] | : . resignal = TRUE
[08:10:29.229] | : . Number of conditions: 6
[08:10:29.229] | : .  int 6
[08:10:29.230] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.230] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.129] | : . ' , attachPackages() ...
[08:10:29.230] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.230] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.130] | : . ' , ; packages: [n=1] ‘future’
[08:10:29.230] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.230] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.130] | : . ' , attachPackages() ... done
[08:10:29.230] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.230] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.131] | : . ' , attachPackages() ...
[08:10:29.231] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.231] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.131] | : . ' , ; packages: [n=1] ‘utils’
[08:10:29.231] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.231] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.131] | : . ' , attachPackages() ... done
[08:10:29.231] | : signalConditions() ... done
[08:10:29.231] | relay conditions ... done
[08:10:29.231] value() for MulticoreFuture (<unnamed-10>) ... done
FutureResult:
value: ‘integer’
visible: TRUE
stdout: character
conditions: [n = 6] simpleMessage, simpleMessage, simpleMessage, simpleMessage, simpleMessage, simpleMessage
RNG used: FALSE
duration: 0.04382038 secs (started 2025-06-17 08:10:29.129485)
version: 1.8
[08:10:29.232] future(..., label = NULL) ...
[08:10:29.232] | lazy: FALSE
[08:10:29.232] | stdout: TRUE
[08:10:29.232] | conditions: [n=1] ‘condition’
[08:10:29.232] | gc: FALSE
[08:10:29.232] | earlySignal: FALSE
[08:10:29.232] | getGlobalsAndPackages() ...
[08:10:29.233] | : Searching for globals ...
[08:10:29.263] | : . globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[08:10:29.263] | : Searching for globals ... done
[08:10:29.263] | : Resolving globals: FALSE
[08:10:29.263] | : Search for packages associated with the globals ...
[08:10:29.264] | : . Packages associated with globals: [2] ‘base’, ‘utils’
[08:10:29.264] | : . Packages: [2] ‘base’, ‘utils’
[08:10:29.264] | : Search for packages associated with the globals ... done
[08:10:29.265] | : Packages after dropping 'base': [1] ‘utils’
[08:10:29.265] | : Packages after dropping non-attached packages: [1] ‘utils’
[08:10:29.265] | : globals: [0] 
[08:10:29.265] | : packages: [1] ‘utils’
[08:10:29.265] | getGlobalsAndPackages() ... done
[08:10:29.265] | run() for ‘Future’ (<unnamed-11>) ...
[08:10:29.265] | : state: ‘created’
[08:10:29.266] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.266] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.266] | : Using MulticoreFutureBackend ...
[08:10:29.266] | : . Number of futures since start: 1 (1 created, 1 launched, 1 finished)
[08:10:29.266] | : . Launching futures ...
[08:10:29.266] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:10:29.266] | : . ' , getFutureData() ...
[08:10:29.266] | : . ' , ; getFutureCore() ...
[08:10:29.266] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘utils’
[08:10:29.267] | : . ' , ; getFutureCore() ... done
[08:10:29.267] | : . ' , ; getFutureCapture() ...
[08:10:29.267] | : . ' , ; getFutureCapture() ... done
[08:10:29.267] | : . ' , ; getFutureContext() ...
[08:10:29.267] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.267] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:10:29.267] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.267] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:10:29.267] | : . ' , ; getFutureContext() ... done
[08:10:29.268] | : . ' , getFutureData() ... done
[08:10:29.268] | : . ' , requestCore(..., workers = 2) ...
[08:10:29.268] | : . ' , requestCore(..., workers = 2) ... done
[08:10:29.270] | : . ' , MulticoreFuture started
[08:10:29.271] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:10:29.271] | : . Launching futures ... done
[08:10:29.271] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:10:29.271] | : Using MulticoreFutureBackend ... done
[08:10:29.272] | run() for ‘Future’ (<unnamed-11>) ... done
[08:10:29.272] future(..., label = NULL) ... done
[08:10:29.273] value() for MulticoreFuture (<unnamed-11>) ...
[08:10:29.273] | result() for MulticoreFuture ...
[08:10:29.274] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.274] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:10:29.274] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.275] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:29.275] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:29.275] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:10:29.276] | : . ' , ; ` | New stack:
[08:10:29.276] | : . ' , ; ` | List of 1
[08:10:29.276] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.276] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.276] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:10:29.276] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.276] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.276] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.276] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.276] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.281] | : . ' , ; ` | Old stack:
[08:10:29.282] | : . ' , ; ` | List of 1
[08:10:29.282] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.282] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.282] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.282] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:10:29.282] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.282] | : . ' , ; ` |     ...)  
[08:10:29.282] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.282] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.282] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:10:29.282] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.282] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.282] | : . ' , ; ` |     ...)  
[08:10:29.282] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.282] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.287] | : . ' , ; ` | Not identical
[08:10:29.287] | : . ' , ; ` | all.equal() for future ...
[08:10:29.287] | : . ' , ; ` | : List of 2
[08:10:29.287] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.287] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.287] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:10:29.287] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.287] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.287] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.287] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.287] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.287] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.287] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.287] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:29.287] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.287] | : . ' , ; ` | :     ...)  
[08:10:29.287] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.287] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.287] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:10:29.287] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.287] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.287] | : . ' , ; ` | :     ...)  
[08:10:29.287] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.295] | : . ' , ; ` | : Formals differ
[08:10:29.296] | : . ' , ; ` | all.equal() for future ... done
[08:10:29.296] | : . ' , ; ` | Future strategies differ at level 1
[08:10:29.296] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:10:29.296] | : . ' , ; ` plan(): Setting new future backend stack:
[08:10:29.296] | : . ' , ; ` List of future strategies:
[08:10:29.296] | : . ' , ; ` 1. sequential:
[08:10:29.296] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:10:29.296] | : . ' , ; `    - tweaked: FALSE
[08:10:29.296] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.297] | : . ' , ; ` List of 1
[08:10:29.297] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.297] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.297] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:10:29.297] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.297] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.297] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.297] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.297] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.303] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:10:29.304] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:10:29.304] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.304] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:10:29.304] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.304] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.304] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:10:29.304] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.304] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.304] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.304] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.307] | : . ' , ; ` | : init: TRUE
[08:10:29.307] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:10:29.307] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:10:29.307] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:10:29.307] | : . ' , ; ` | : .  list()
[08:10:29.307] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:10:29.307] | : . ' , ; ` | : .  list()
[08:10:29.308] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:10:29.308] | : . ' , ; ` | : . Dotted pair list of 2
[08:10:29.308] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:10:29.308] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:10:29.309] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:10:29.309] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:10:29.309] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:10:29.309] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.309] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:10:29.309] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:29.310] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:29.312] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:29.313] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:29.313] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:29.313] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:10:29.313] | : . ' , ; ` | : New stack:
[08:10:29.313] | : . ' , ; ` | : List of 1
[08:10:29.313] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.313] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.313] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.313] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:29.313] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.313] | : . ' , ; ` | :     ...)  
[08:10:29.313] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.313] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.313] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:10:29.313] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.313] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.313] | : . ' , ; ` | :     ...)  
[08:10:29.313] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.313] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.316] | : . ' , ; ` | : Old stack:
[08:10:29.316] | : . ' , ; ` | : List of 1
[08:10:29.316] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.316] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.316] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:29.316] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.316] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.316] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.316] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.316] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4bf48e830> 
[08:10:29.316] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.316] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.316] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.320] | : . ' , ; ` | : Not identical
[08:10:29.320] | : . ' , ; ` | : all.equal() for future ...
[08:10:29.320] | : . ' , ; ` | : . List of 2
[08:10:29.320] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.320] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.320] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.320] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:10:29.320] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.320] | : . ' , ; ` | : .     ...)  
[08:10:29.320] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.320] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.320] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:10:29.320] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.320] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.320] | : . ' , ; ` | : .     ...)  
[08:10:29.320] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.320] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.320] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.320] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:10:29.320] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.320] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.320] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.320] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.320] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4bf48e830> 
[08:10:29.320] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.320] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.327] | : . ' , ; ` | : . Formals differ
[08:10:29.327] | : . ' , ; ` | : all.equal() for future ... done
[08:10:29.327] | : . ' , ; ` | : Future strategies differ at level 1
[08:10:29.327] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:10:29.328] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:10:29.328] | : . ' , ; ` | List of future strategies:
[08:10:29.328] | : . ' , ; ` | 1. multicore:
[08:10:29.328] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:10:29.328] | : . ' , ; ` |    - tweaked: FALSE
[08:10:29.328] | : . ' , ; ` |    - call: plan(strategy)
[08:10:29.328] | : . ' , ; ` | List of 1
[08:10:29.328] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.328] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.328] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.328] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:10:29.328] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.328] | : . ' , ; ` |     ...)  
[08:10:29.328] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.328] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.328] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:10:29.328] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.328] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.328] | : . ' , ; ` |     ...)  
[08:10:29.328] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.328] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.331] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:10:29.331] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:10:29.331] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.332] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.332] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:10:29.332] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:29.332] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:29.332] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:29.333] | : readImmediateCondition() ...
[08:10:29.333] | : . Path: ‘/tmp/RtmpQWMGJs/.future/immediateConditions’
[08:10:29.333] | : . Number of RDS files: 0
[08:10:29.333] | : . Returned conditions set:
[08:10:29.334] | : .  list()
[08:10:29.334] | : readImmediateCondition() ... done
[08:10:29.334] | : result() for MulticoreFuture ...
[08:10:29.335] | : result() for MulticoreFuture ... done
[08:10:29.335] | : signalConditions() ...
[08:10:29.335] | : . include = ‘immediateCondition’
[08:10:29.335] | : . exclude = 
[08:10:29.335] | : . resignal = FALSE
[08:10:29.335] | : . Number of conditions: 6
[08:10:29.335] | : .  int 6
[08:10:29.336] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.336] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.336] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.337] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.337] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.337] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.337] | : signalConditions() ... done
[08:10:29.337] | result() for MulticoreFuture ... done
[08:10:29.337] | result() for MulticoreFuture ...
[08:10:29.338] | result() for MulticoreFuture ... done
[08:10:29.338] | signalConditions() ...
[08:10:29.338] | : include = ‘immediateCondition’
[08:10:29.338] | : exclude = 
[08:10:29.338] | : resignal = FALSE
[08:10:29.338] | : Number of conditions: 6
[08:10:29.338] | :  int 6
[08:10:29.339] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.339] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.339] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.339] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.339] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.340] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.340] | signalConditions() ... done
[08:10:29.340] | relay stdout ...
[08:10:29.340] | relay stdout ... done
[08:10:29.340] | check for misuse ...
[08:10:29.340] | check for misuse ... done
[08:10:29.340] | relay conditions ...
[08:10:29.341] | : Future state: ‘finished’
[08:10:29.341] | : result() for MulticoreFuture ...
[08:10:29.341] | : result() for MulticoreFuture ... done
[08:10:29.341] | : signalConditions() ...
[08:10:29.341] | : . include = ‘condition’
[08:10:29.341] | : . exclude = ‘immediateCondition’
[08:10:29.341] | : . resignal = TRUE
[08:10:29.342] | : . Number of conditions: 6
[08:10:29.342] | : .  int 6
[08:10:29.342] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.342] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.271] | : . ' , attachPackages() ...
[08:10:29.343] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.343] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.271] | : . ' , ; packages: [n=1] ‘future’
[08:10:29.343] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.343] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.272] | : . ' , attachPackages() ... done
[08:10:29.343] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.343] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.272] | : . ' , attachPackages() ...
[08:10:29.343] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.344] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.272] | : . ' , ; packages: [n=1] ‘utils’
[08:10:29.344] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.344] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.273] | : . ' , attachPackages() ... done
[08:10:29.344] | : signalConditions() ... done
[08:10:29.344] | relay conditions ... done
[08:10:29.344] value() for MulticoreFuture (<unnamed-11>) ... done
 [1] " [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25"  
 [2] "[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50"  
 [3] " int [1:50] 1 2 3 4 5 6 7 8 9 10 ..."                                             
 [4] "a-b-c-d-e-f-g-h-i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z1 2 3 4 5 6 "                  
 [5] "\"Sepal.Length\"\t\"Sepal.Width\"\t\"Petal.Length\"\t\"Petal.Width\"\t\"Species\""
 [6] "\"1\"\t5.1\t3.5\t1.4\t0.2\t\"setosa\""                                            
 [7] "\"2\"\t4.9\t3\t1.4\t0.2\t\"setosa\""                                              
 [8] "\"3\"\t4.7\t3.2\t1.3\t0.2\t\"setosa\""                                            
 [9] "\"4\"\t4.6\t3.1\t1.5\t0.2\t\"setosa\""                                            
[10] "\"5\"\t5\t3.6\t1.4\t0.2\t\"setosa\""                                              
[11] "\"6\"\t5.4\t3.9\t1.7\t0.4\t\"setosa\""                                            
[12] "\"7\"\t4.6\t3.4\t1.4\t0.3\t\"setosa\""                                            
[13] "\"8\"\t5\t3.4\t1.5\t0.2\t\"setosa\""                                              
[14] "\"9\"\t4.4\t2.9\t1.4\t0.2\t\"setosa\""                                            
[15] "\"10\"\t4.9\t3.1\t1.5\t0.1\t\"setosa\""                                           
- stdout = structure(TRUE, drop = TRUE)
[08:10:29.345] future(..., label = NULL) ...
[08:10:29.345] | lazy: FALSE
[08:10:29.345] | stdout: TRUE
[08:10:29.345] | conditions: [n=1] ‘condition’
[08:10:29.345] | gc: FALSE
[08:10:29.345] | earlySignal: FALSE
[08:10:29.346] | getGlobalsAndPackages() ...
[08:10:29.346] | : Searching for globals ...
[08:10:29.350] | : . globals found: [1] ‘print’
[08:10:29.350] | : Searching for globals ... done
[08:10:29.350] | : Resolving globals: FALSE
[08:10:29.350] | : Search for packages associated with the globals ...
[08:10:29.350] | : . Packages associated with globals: [1] ‘base’
[08:10:29.350] | : . Packages: [1] ‘base’
[08:10:29.351] | : Search for packages associated with the globals ... done
[08:10:29.351] | : Packages after dropping 'base': [0] 
[08:10:29.351] | : globals: [0] 
[08:10:29.351] | : packages: [0] 
[08:10:29.351] | getGlobalsAndPackages() ... done
[08:10:29.351] | run() for ‘Future’ (<unnamed-12>) ...
[08:10:29.353] | : state: ‘created’
[08:10:29.353] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.354] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.354] | : Using MulticoreFutureBackend ...
[08:10:29.354] | : . Number of futures since start: 2 (2 created, 2 launched, 2 finished)
[08:10:29.354] | : . Launching futures ...
[08:10:29.354] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:10:29.354] | : . ' , getFutureData() ...
[08:10:29.355] | : . ' , ; getFutureCore() ...
[08:10:29.355] | : . ' , ; ` Packages needed by the future expression (n = 0): <none>
[08:10:29.355] | : . ' , ; getFutureCore() ... done
[08:10:29.355] | : . ' , ; getFutureCapture() ...
[08:10:29.355] | : . ' , ; getFutureCapture() ... done
[08:10:29.355] | : . ' , ; getFutureContext() ...
[08:10:29.355] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.356] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:10:29.356] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.356] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:10:29.356] | : . ' , ; getFutureContext() ... done
[08:10:29.356] | : . ' , getFutureData() ... done
[08:10:29.357] | : . ' , requestCore(..., workers = 2) ...
[08:10:29.357] | : . ' , requestCore(..., workers = 2) ... done
[08:10:29.359] | : . ' , MulticoreFuture started
[08:10:29.360] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:10:29.360] | : . Launching futures ... done
[08:10:29.361] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:10:29.361] | : Using MulticoreFutureBackend ... done
[08:10:29.362] | run() for ‘Future’ (<unnamed-12>) ... done
[08:10:29.362] future(..., label = NULL) ... done
[08:10:29.363] result() for MulticoreFuture ...
[08:10:29.364] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.364] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:10:29.364] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.365] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:29.365] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:29.365] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:10:29.366] | : . ' , ; ` | New stack:
[08:10:29.366] | : . ' , ; ` | List of 1
[08:10:29.366] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.366] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.366] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:10:29.366] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.366] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.366] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.366] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.366] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.372] | : . ' , ; ` | Old stack:
[08:10:29.372] | : . ' , ; ` | List of 1
[08:10:29.372] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.372] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.372] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.372] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:10:29.372] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.372] | : . ' , ; ` |     ...)  
[08:10:29.372] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.372] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.372] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:10:29.372] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.372] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.372] | : . ' , ; ` |     ...)  
[08:10:29.372] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.372] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.377] | : . ' , ; ` | Not identical
[08:10:29.377] | : . ' , ; ` | all.equal() for future ...
[08:10:29.377] | : . ' , ; ` | : List of 2
[08:10:29.377] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.377] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.377] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:10:29.377] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.377] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.377] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.377] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.377] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.377] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.377] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.377] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:29.377] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.377] | : . ' , ; ` | :     ...)  
[08:10:29.377] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.377] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.377] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:10:29.377] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.377] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.377] | : . ' , ; ` | :     ...)  
[08:10:29.377] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.385] | : . ' , ; ` | : Formals differ
[08:10:29.385] | : . ' , ; ` | all.equal() for future ... done
[08:10:29.385] | : . ' , ; ` | Future strategies differ at level 1
[08:10:29.385] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:10:29.386] | : . ' , ; ` plan(): Setting new future backend stack:
[08:10:29.386] | : . ' , ; ` List of future strategies:
[08:10:29.386] | : . ' , ; ` 1. sequential:
[08:10:29.386] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:10:29.386] | : . ' , ; `    - tweaked: FALSE
[08:10:29.386] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.386] | : . ' , ; ` List of 1
[08:10:29.386] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.386] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.386] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:10:29.386] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.386] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.386] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.386] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.386] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.392] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:10:29.392] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:10:29.392] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.392] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:10:29.392] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.392] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.392] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:10:29.392] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.392] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.392] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.392] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.395] | : . ' , ; ` | : init: TRUE
[08:10:29.395] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:10:29.395] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:10:29.395] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:10:29.396] | : . ' , ; ` | : .  list()
[08:10:29.396] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:10:29.396] | : . ' , ; ` | : .  list()
[08:10:29.396] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:10:29.396] | : . ' , ; ` | : . Dotted pair list of 2
[08:10:29.396] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:10:29.396] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:10:29.397] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:10:29.398] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:10:29.398] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:10:29.398] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.398] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:10:29.398] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:29.398] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:29.400] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:29.400] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:29.401] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:29.401] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:10:29.401] | : . ' , ; ` | : New stack:
[08:10:29.401] | : . ' , ; ` | : List of 1
[08:10:29.401] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.401] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.401] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.401] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:29.401] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.401] | : . ' , ; ` | :     ...)  
[08:10:29.401] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.401] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.401] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:10:29.401] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.401] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.401] | : . ' , ; ` | :     ...)  
[08:10:29.401] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.401] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.404] | : . ' , ; ` | : Old stack:
[08:10:29.404] | : . ' , ; ` | : List of 1
[08:10:29.404] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.404] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.404] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:29.404] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.404] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.404] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.404] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.404] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4bfd32160> 
[08:10:29.404] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.404] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.404] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.407] | : . ' , ; ` | : Not identical
[08:10:29.408] | : . ' , ; ` | : all.equal() for future ...
[08:10:29.408] | : . ' , ; ` | : . List of 2
[08:10:29.408] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.408] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.408] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.408] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:10:29.408] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.408] | : . ' , ; ` | : .     ...)  
[08:10:29.408] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.408] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.408] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:10:29.408] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.408] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.408] | : . ' , ; ` | : .     ...)  
[08:10:29.408] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.408] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.408] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.408] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:10:29.408] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.408] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.408] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.408] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.408] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4bfd32160> 
[08:10:29.408] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.408] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.415] | : . ' , ; ` | : . Formals differ
[08:10:29.415] | : . ' , ; ` | : all.equal() for future ... done
[08:10:29.415] | : . ' , ; ` | : Future strategies differ at level 1
[08:10:29.416] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:10:29.416] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:10:29.416] | : . ' , ; ` | List of future strategies:
[08:10:29.416] | : . ' , ; ` | 1. multicore:
[08:10:29.416] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:10:29.416] | : . ' , ; ` |    - tweaked: FALSE
[08:10:29.416] | : . ' , ; ` |    - call: plan(strategy)
[08:10:29.416] | : . ' , ; ` | List of 1
[08:10:29.416] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.416] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.416] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.416] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:10:29.416] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.416] | : . ' , ; ` |     ...)  
[08:10:29.416] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.416] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.416] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:10:29.416] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.416] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.416] | : . ' , ; ` |     ...)  
[08:10:29.416] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.416] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.419] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:10:29.419] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:10:29.420] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.420] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.420] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:10:29.420] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:29.420] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:29.420] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:29.421] | readImmediateCondition() ...
[08:10:29.421] | : Path: ‘/tmp/RtmpQWMGJs/.future/immediateConditions’
[08:10:29.421] | : Number of RDS files: 0
[08:10:29.422] | : Returned conditions set:
[08:10:29.422] | :  list()
[08:10:29.422] | readImmediateCondition() ... done
[08:10:29.423] | result() for MulticoreFuture ...
[08:10:29.423] | result() for MulticoreFuture ... done
[08:10:29.423] | signalConditions() ...
[08:10:29.423] | : include = ‘immediateCondition’
[08:10:29.423] | : exclude = 
[08:10:29.423] | : resignal = FALSE
[08:10:29.424] | : Number of conditions: 6
[08:10:29.424] | :  int 6
[08:10:29.424] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.425] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.425] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.425] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.425] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.425] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.425] | signalConditions() ... done
[08:10:29.425] result() for MulticoreFuture ... done
[08:10:29.426] value() for MulticoreFuture (<unnamed-12>) ...
[08:10:29.426] | result() for MulticoreFuture ...
[08:10:29.426] | result() for MulticoreFuture ... done
[08:10:29.426] | result() for MulticoreFuture ...
[08:10:29.426] | result() for MulticoreFuture ... done
[08:10:29.426] | signalConditions() ...
[08:10:29.426] | : include = ‘immediateCondition’
[08:10:29.427] | : exclude = 
[08:10:29.427] | : resignal = FALSE
[08:10:29.427] | : Number of conditions: 6
[08:10:29.427] | :  int 6
[08:10:29.428] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.428] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.428] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.428] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.428] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.428] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.428] | signalConditions() ... done
[08:10:29.429] | relay stdout ...
[1] 42
[08:10:29.429] | relay stdout ... done
[08:10:29.429] | check for misuse ...
[08:10:29.429] | check for misuse ... done
[08:10:29.429] | relay conditions ...
[08:10:29.429] | : Future state: ‘finished’
[08:10:29.429] | : result() for MulticoreFuture ...
[08:10:29.430] | : result() for MulticoreFuture ... done
[08:10:29.430] | : signalConditions() ...
[08:10:29.430] | : . include = ‘condition’
[08:10:29.430] | : . exclude = ‘immediateCondition’
[08:10:29.430] | : . resignal = TRUE
[08:10:29.430] | : . Number of conditions: 6
[08:10:29.430] | : .  int 6
[08:10:29.431] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.431] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.360] | : . ' , attachPackages() ...
[08:10:29.431] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.431] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.361] | : . ' , ; packages: [n=1] ‘future’
[08:10:29.431] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.432] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.362] | : . ' , attachPackages() ... done
[08:10:29.432] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.432] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.362] | : . ' , attachPackages() ...
[08:10:29.432] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.432] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.362] | : . ' , ; packages: [n=0] 
[08:10:29.432] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.433] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.363] | : . ' , attachPackages() ... done
[08:10:29.433] | : signalConditions() ... done
[08:10:29.433] | relay conditions ... done
[08:10:29.433] value() for MulticoreFuture (<unnamed-12>) ... done
[08:10:29.433] result() for MulticoreFuture ...
[08:10:29.433] result() for MulticoreFuture ... done
- stdout = FALSE
[08:10:29.433] future(..., label = NULL) ...
[08:10:29.434] | lazy: FALSE
[08:10:29.434] | stdout: FALSE
[08:10:29.434] | conditions: [n=1] ‘condition’
[08:10:29.434] | gc: FALSE
[08:10:29.434] | earlySignal: FALSE
[08:10:29.434] | getGlobalsAndPackages() ...
[08:10:29.434] | : Searching for globals ...
[08:10:29.468] | : . globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[08:10:29.468] | : Searching for globals ... done
[08:10:29.468] | : Resolving globals: FALSE
[08:10:29.469] | : Search for packages associated with the globals ...
[08:10:29.469] | : . Packages associated with globals: [2] ‘base’, ‘utils’
[08:10:29.469] | : . Packages: [2] ‘base’, ‘utils’
[08:10:29.469] | : Search for packages associated with the globals ... done
[08:10:29.469] | : Packages after dropping 'base': [1] ‘utils’
[08:10:29.470] | : Packages after dropping non-attached packages: [1] ‘utils’
[08:10:29.470] | : globals: [0] 
[08:10:29.470] | : packages: [1] ‘utils’
[08:10:29.470] | getGlobalsAndPackages() ... done
[08:10:29.470] | run() for ‘Future’ (<unnamed-13>) ...
[08:10:29.470] | : state: ‘created’
[08:10:29.470] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.471] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.471] | : Using MulticoreFutureBackend ...
[08:10:29.471] | : . Number of futures since start: 3 (3 created, 3 launched, 3 finished)
[08:10:29.471] | : . Launching futures ...
[08:10:29.471] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:10:29.471] | : . ' , getFutureData() ...
[08:10:29.471] | : . ' , ; getFutureCore() ...
[08:10:29.471] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘utils’
[08:10:29.471] | : . ' , ; getFutureCore() ... done
[08:10:29.472] | : . ' , ; getFutureCapture() ...
[08:10:29.472] | : . ' , ; getFutureCapture() ... done
[08:10:29.472] | : . ' , ; getFutureContext() ...
[08:10:29.472] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.472] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:10:29.472] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.472] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:10:29.472] | : . ' , ; getFutureContext() ... done
[08:10:29.472] | : . ' , getFutureData() ... done
[08:10:29.473] | : . ' , requestCore(..., workers = 2) ...
[08:10:29.473] | : . ' , requestCore(..., workers = 2) ... done
[08:10:29.475] | : . ' , MulticoreFuture started
[08:10:29.475] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:10:29.475] | : . Launching futures ... done
[08:10:29.476] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:10:29.476] | : Using MulticoreFutureBackend ... done
[08:10:29.476] | run() for ‘Future’ (<unnamed-13>) ... done
[08:10:29.476] future(..., label = NULL) ... done
[08:10:29.477] result() for MulticoreFuture ...
[08:10:29.481] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.481] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:10:29.482] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.483] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:29.483] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:29.484] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:10:29.484] | : . ' , ; ` | New stack:
[08:10:29.484] | : . ' , ; ` | List of 1
[08:10:29.484] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.484] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.484] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:10:29.484] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.484] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.484] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.484] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.484] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.491] | : . ' , ; ` | Old stack:
[08:10:29.492] | : . ' , ; ` | List of 1
[08:10:29.492] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.492] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.492] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.492] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:10:29.492] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.492] | : . ' , ; ` |     ...)  
[08:10:29.492] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.492] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.492] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:10:29.492] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.492] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.492] | : . ' , ; ` |     ...)  
[08:10:29.492] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.492] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.497] | : . ' , ; ` | Not identical
[08:10:29.498] | : . ' , ; ` | all.equal() for future ...
[08:10:29.498] | : . ' , ; ` | : List of 2
[08:10:29.498] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.498] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.498] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:10:29.498] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.498] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.498] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.498] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.498] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.498] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.498] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.498] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:29.498] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.498] | : . ' , ; ` | :     ...)  
[08:10:29.498] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.498] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.498] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:10:29.498] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.498] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.498] | : . ' , ; ` | :     ...)  
[08:10:29.498] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.505] | : . ' , ; ` | : Formals differ
[08:10:29.505] | : . ' , ; ` | all.equal() for future ... done
[08:10:29.505] | : . ' , ; ` | Future strategies differ at level 1
[08:10:29.505] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:10:29.505] | : . ' , ; ` plan(): Setting new future backend stack:
[08:10:29.506] | : . ' , ; ` List of future strategies:
[08:10:29.506] | : . ' , ; ` 1. sequential:
[08:10:29.506] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:10:29.506] | : . ' , ; `    - tweaked: FALSE
[08:10:29.506] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.506] | : . ' , ; ` List of 1
[08:10:29.506] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.506] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.506] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:10:29.506] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.506] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.506] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.506] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.506] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.509] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:10:29.509] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:10:29.510] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.510] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:10:29.510] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.510] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.510] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:10:29.510] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.510] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.510] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.510] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.513] | : . ' , ; ` | : init: TRUE
[08:10:29.514] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:10:29.514] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:10:29.514] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:10:29.514] | : . ' , ; ` | : .  list()
[08:10:29.514] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:10:29.514] | : . ' , ; ` | : .  list()
[08:10:29.515] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:10:29.515] | : . ' , ; ` | : . Dotted pair list of 2
[08:10:29.515] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:10:29.515] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:10:29.516] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:10:29.516] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:10:29.516] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:10:29.516] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.517] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:10:29.517] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:29.517] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:29.520] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:29.520] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:29.520] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:29.520] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:10:29.520] | : . ' , ; ` | : New stack:
[08:10:29.520] | : . ' , ; ` | : List of 1
[08:10:29.520] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.520] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.520] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.520] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:29.520] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.520] | : . ' , ; ` | :     ...)  
[08:10:29.520] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.520] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.520] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:10:29.520] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.520] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.520] | : . ' , ; ` | :     ...)  
[08:10:29.520] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.520] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.524] | : . ' , ; ` | : Old stack:
[08:10:29.524] | : . ' , ; ` | : List of 1
[08:10:29.524] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.524] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.524] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:29.524] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.524] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.524] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.524] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.524] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c14836f0> 
[08:10:29.524] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.524] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.524] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.527] | : . ' , ; ` | : Not identical
[08:10:29.527] | : . ' , ; ` | : all.equal() for future ...
[08:10:29.527] | : . ' , ; ` | : . List of 2
[08:10:29.527] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.527] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.527] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.527] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:10:29.527] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.527] | : . ' , ; ` | : .     ...)  
[08:10:29.527] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.527] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.527] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:10:29.527] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.527] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.527] | : . ' , ; ` | : .     ...)  
[08:10:29.527] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.527] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.527] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.527] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:10:29.527] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.527] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.527] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.527] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.527] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c14836f0> 
[08:10:29.527] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.527] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.534] | : . ' , ; ` | : . Formals differ
[08:10:29.534] | : . ' , ; ` | : all.equal() for future ... done
[08:10:29.534] | : . ' , ; ` | : Future strategies differ at level 1
[08:10:29.534] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:10:29.535] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:10:29.535] | : . ' , ; ` | List of future strategies:
[08:10:29.535] | : . ' , ; ` | 1. multicore:
[08:10:29.535] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:10:29.535] | : . ' , ; ` |    - tweaked: FALSE
[08:10:29.535] | : . ' , ; ` |    - call: plan(strategy)
[08:10:29.535] | : . ' , ; ` | List of 1
[08:10:29.535] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.535] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.535] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.535] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:10:29.535] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.535] | : . ' , ; ` |     ...)  
[08:10:29.535] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.535] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.535] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:10:29.535] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.535] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.535] | : . ' , ; ` |     ...)  
[08:10:29.535] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.535] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.538] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:10:29.539] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:10:29.539] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.539] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.539] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:10:29.539] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:29.539] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:29.539] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:29.541] | readImmediateCondition() ...
[08:10:29.542] | : Path: ‘/tmp/RtmpQWMGJs/.future/immediateConditions’
[08:10:29.542] | : Number of RDS files: 0
[08:10:29.542] | : Returned conditions set:
[08:10:29.543] | :  list()
[08:10:29.543] | readImmediateCondition() ... done
[08:10:29.544] | result() for MulticoreFuture ...
[08:10:29.544] | result() for MulticoreFuture ... done
[08:10:29.544] | signalConditions() ...
[08:10:29.545] | : include = ‘immediateCondition’
[08:10:29.545] | : exclude = 
[08:10:29.545] | : resignal = FALSE
[08:10:29.545] | : Number of conditions: 6
[08:10:29.545] | :  int 6
[08:10:29.546] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.546] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.547] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.547] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.547] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.547] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.548] | signalConditions() ... done
[08:10:29.548] result() for MulticoreFuture ... done
List of 16
 $ value              : int 42
 $ visible            : logi TRUE
 $ stdout             : NULL
 $ conditions         :List of 6
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:29.476] | : . ' , attachPackages() ...\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg))
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:29.476] | : . ' , ; packages: [n=1] ‘future’\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg), appendLF = appendLF)
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:29.477] | : . ' , attachPackages() ... done\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg))
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:29.477] | : . ' , attachPackages() ...\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg))
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:29.477] | : . ' , ; packages: [n=1] ‘utils’\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg), appendLF = appendLF)
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:29.477] | : . ' , attachPackages() ... done\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg))
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
 $ rng                : logi FALSE
 $ seed               : NULL
 $ misuseGlobalEnv    : NULL
 $ misuseConnections  :List of 3
  ..$ added   : NULL
  ..$ removed : NULL
  ..$ replaced: NULL
 $ misuseDevices      : NULL
 $ misuseDefaultDevice: list()
 $ started            : POSIXct[1:1], format: "2025-06-17 08:10:29"
 $ finished           : POSIXct[1:1], format: "2025-06-17 08:10:29"
 $ uuid               : chr [1:2] "8090913757941eb18ce8f3a29fec0ad8" "13"
 $ session_uuid       : chr "2e116b2910c0d68f8c4f6212a673fb07"
  ..- attr(*, "source")=List of 5
  .. ..$ host  : Named chr "285a5f234941"
  .. .. ..- attr(*, "names")= chr "HOSTNAME"
  .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
  .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
  .. ..$ pid   : int 75646
  .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:10:29"
  .. ..$ random: int 2147483647
 $ r_info             :List of 4
  ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
  .. ..$ : int [1:3] 4 5 0
  ..$ os           : chr "unix"
  ..$ os_name      : chr "Linux"
  ..$ captures_utf8: logi TRUE
 $ version            : chr "1.8"
 - attr(*, "class")= chr "FutureResult"
[08:10:29.573] value() for MulticoreFuture (<unnamed-13>) ...
[08:10:29.573] | result() for MulticoreFuture ...
[08:10:29.573] | result() for MulticoreFuture ... done
[08:10:29.573] | result() for MulticoreFuture ...
[08:10:29.573] | result() for MulticoreFuture ... done
[08:10:29.573] | signalConditions() ...
[08:10:29.573] | : include = ‘immediateCondition’
[08:10:29.573] | : exclude = 
[08:10:29.574] | : resignal = FALSE
[08:10:29.574] | : Number of conditions: 6
[08:10:29.574] | :  int 6
[08:10:29.574] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.574] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.574] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.575] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.575] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.575] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.575] | signalConditions() ... done
[08:10:29.575] | relay stdout ...
[08:10:29.575] | relay stdout ... done
[08:10:29.575] | check for misuse ...
[08:10:29.575] | check for misuse ... done
[08:10:29.575] | relay conditions ...
[08:10:29.575] | : Future state: ‘finished’
[08:10:29.576] | : result() for MulticoreFuture ...
[08:10:29.576] | : result() for MulticoreFuture ... done
[08:10:29.576] | : signalConditions() ...
[08:10:29.576] | : . include = ‘condition’
[08:10:29.576] | : . exclude = ‘immediateCondition’
[08:10:29.576] | : . resignal = TRUE
[08:10:29.576] | : . Number of conditions: 6
[08:10:29.576] | : .  int 6
[08:10:29.577] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.577] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.476] | : . ' , attachPackages() ...
[08:10:29.577] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.577] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.476] | : . ' , ; packages: [n=1] ‘future’
[08:10:29.577] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.577] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.477] | : . ' , attachPackages() ... done
[08:10:29.577] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.578] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.477] | : . ' , attachPackages() ...
[08:10:29.578] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.578] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.477] | : . ' , ; packages: [n=1] ‘utils’
[08:10:29.578] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.578] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.477] | : . ' , attachPackages() ... done
[08:10:29.578] | : signalConditions() ... done
[08:10:29.578] | relay conditions ... done
[08:10:29.578] value() for MulticoreFuture (<unnamed-13>) ... done
[08:10:29.579] future(..., label = NULL) ...
[08:10:29.579] | lazy: FALSE
[08:10:29.579] | stdout: FALSE
[08:10:29.579] | conditions: [n=1] ‘condition’
[08:10:29.579] | gc: FALSE
[08:10:29.579] | earlySignal: FALSE
[08:10:29.579] | getGlobalsAndPackages() ...
[08:10:29.579] | : Searching for globals ...
[08:10:29.610] | : . globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[08:10:29.610] | : Searching for globals ... done
[08:10:29.610] | : Resolving globals: FALSE
[08:10:29.610] | : Search for packages associated with the globals ...
[08:10:29.610] | : . Packages associated with globals: [2] ‘base’, ‘utils’
[08:10:29.611] | : . Packages: [2] ‘base’, ‘utils’
[08:10:29.611] | : Search for packages associated with the globals ... done
[08:10:29.611] | : Packages after dropping 'base': [1] ‘utils’
[08:10:29.611] | : Packages after dropping non-attached packages: [1] ‘utils’
[08:10:29.611] | : globals: [0] 
[08:10:29.611] | : packages: [1] ‘utils’
[08:10:29.611] | getGlobalsAndPackages() ... done
[08:10:29.612] | run() for ‘Future’ (<unnamed-14>) ...
[08:10:29.612] | : state: ‘created’
[08:10:29.612] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.612] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.612] | : Using MulticoreFutureBackend ...
[08:10:29.612] | : . Number of futures since start: 4 (4 created, 4 launched, 4 finished)
[08:10:29.612] | : . Launching futures ...
[08:10:29.612] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:10:29.613] | : . ' , getFutureData() ...
[08:10:29.613] | : . ' , ; getFutureCore() ...
[08:10:29.613] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘utils’
[08:10:29.613] | : . ' , ; getFutureCore() ... done
[08:10:29.613] | : . ' , ; getFutureCapture() ...
[08:10:29.613] | : . ' , ; getFutureCapture() ... done
[08:10:29.613] | : . ' , ; getFutureContext() ...
[08:10:29.613] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.613] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:10:29.613] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.614] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:10:29.614] | : . ' , ; getFutureContext() ... done
[08:10:29.614] | : . ' , getFutureData() ... done
[08:10:29.614] | : . ' , requestCore(..., workers = 2) ...
[08:10:29.614] | : . ' , requestCore(..., workers = 2) ... done
[08:10:29.616] | : . ' , MulticoreFuture started
[08:10:29.617] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:10:29.617] | : . Launching futures ... done
[08:10:29.617] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:10:29.617] | : Using MulticoreFutureBackend ... done
[08:10:29.618] | run() for ‘Future’ (<unnamed-14>) ... done
[08:10:29.618] future(..., label = NULL) ... done
[08:10:29.618] value() for MulticoreFuture (<unnamed-14>) ...
[08:10:29.619] | result() for MulticoreFuture ...
[08:10:29.620] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.620] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:10:29.620] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.621] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:29.623] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:29.623] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:10:29.624] | : . ' , ; ` | New stack:
[08:10:29.624] | : . ' , ; ` | List of 1
[08:10:29.624] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.624] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.624] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:10:29.624] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.624] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.624] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.624] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.624] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.632] | : . ' , ; ` | Old stack:
[08:10:29.632] | : . ' , ; ` | List of 1
[08:10:29.632] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.632] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.632] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.632] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:10:29.632] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.632] | : . ' , ; ` |     ...)  
[08:10:29.632] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.632] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.632] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:10:29.632] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.632] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.632] | : . ' , ; ` |     ...)  
[08:10:29.632] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.632] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.638] | : . ' , ; ` | Not identical
[08:10:29.638] | : . ' , ; ` | all.equal() for future ...
[08:10:29.638] | : . ' , ; ` | : List of 2
[08:10:29.638] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.638] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.638] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:10:29.638] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.638] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.638] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.638] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.638] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.638] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.638] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.638] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:29.638] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.638] | : . ' , ; ` | :     ...)  
[08:10:29.638] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.638] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.638] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:10:29.638] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.638] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.638] | : . ' , ; ` | :     ...)  
[08:10:29.638] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.645] | : . ' , ; ` | : Formals differ
[08:10:29.645] | : . ' , ; ` | all.equal() for future ... done
[08:10:29.646] | : . ' , ; ` | Future strategies differ at level 1
[08:10:29.646] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:10:29.646] | : . ' , ; ` plan(): Setting new future backend stack:
[08:10:29.646] | : . ' , ; ` List of future strategies:
[08:10:29.646] | : . ' , ; ` 1. sequential:
[08:10:29.646] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:10:29.646] | : . ' , ; `    - tweaked: FALSE
[08:10:29.646] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.647] | : . ' , ; ` List of 1
[08:10:29.647] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.647] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.647] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:10:29.647] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.647] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.647] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.647] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.647] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.650] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:10:29.650] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:10:29.650] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.650] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:10:29.650] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.650] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.650] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:10:29.650] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.650] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.650] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.650] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.654] | : . ' , ; ` | : init: TRUE
[08:10:29.654] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:10:29.654] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:10:29.654] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:10:29.654] | : . ' , ; ` | : .  list()
[08:10:29.655] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:10:29.655] | : . ' , ; ` | : .  list()
[08:10:29.655] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:10:29.655] | : . ' , ; ` | : . Dotted pair list of 2
[08:10:29.655] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:10:29.655] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:10:29.656] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:10:29.656] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:10:29.657] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:10:29.657] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.657] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:10:29.657] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:29.657] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:29.660] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:29.660] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:29.660] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:29.660] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:10:29.661] | : . ' , ; ` | : New stack:
[08:10:29.661] | : . ' , ; ` | : List of 1
[08:10:29.661] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.661] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.661] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.661] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:29.661] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.661] | : . ' , ; ` | :     ...)  
[08:10:29.661] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.661] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.661] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:10:29.661] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.661] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.661] | : . ' , ; ` | :     ...)  
[08:10:29.661] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.661] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.664] | : . ' , ; ` | : Old stack:
[08:10:29.664] | : . ' , ; ` | : List of 1
[08:10:29.664] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.664] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.664] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:29.664] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.664] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.664] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.664] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.664] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c205b768> 
[08:10:29.664] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.664] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.664] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.667] | : . ' , ; ` | : Not identical
[08:10:29.667] | : . ' , ; ` | : all.equal() for future ...
[08:10:29.667] | : . ' , ; ` | : . List of 2
[08:10:29.667] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.667] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.667] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.667] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:10:29.667] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.667] | : . ' , ; ` | : .     ...)  
[08:10:29.667] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.667] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.667] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:10:29.667] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.667] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.667] | : . ' , ; ` | : .     ...)  
[08:10:29.667] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.667] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.667] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.667] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:10:29.667] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.667] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.667] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.667] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.667] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c205b768> 
[08:10:29.667] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.667] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.674] | : . ' , ; ` | : . Formals differ
[08:10:29.674] | : . ' , ; ` | : all.equal() for future ... done
[08:10:29.674] | : . ' , ; ` | : Future strategies differ at level 1
[08:10:29.675] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:10:29.675] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:10:29.675] | : . ' , ; ` | List of future strategies:
[08:10:29.675] | : . ' , ; ` | 1. multicore:
[08:10:29.675] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:10:29.675] | : . ' , ; ` |    - tweaked: FALSE
[08:10:29.675] | : . ' , ; ` |    - call: plan(strategy)
[08:10:29.675] | : . ' , ; ` | List of 1
[08:10:29.675] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.675] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.675] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.675] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:10:29.675] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.675] | : . ' , ; ` |     ...)  
[08:10:29.675] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.675] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.675] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:10:29.675] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.675] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.675] | : . ' , ; ` |     ...)  
[08:10:29.675] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.675] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.678] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:10:29.679] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:10:29.679] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.679] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.679] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:10:29.679] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:29.679] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:29.679] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:29.680] | : readImmediateCondition() ...
[08:10:29.680] | : . Path: ‘/tmp/RtmpQWMGJs/.future/immediateConditions’
[08:10:29.680] | : . Number of RDS files: 0
[08:10:29.681] | : . Returned conditions set:
[08:10:29.682] | : .  list()
[08:10:29.683] | : readImmediateCondition() ... done
[08:10:29.684] | : result() for MulticoreFuture ...
[08:10:29.684] | : result() for MulticoreFuture ... done
[08:10:29.684] | : signalConditions() ...
[08:10:29.684] | : . include = ‘immediateCondition’
[08:10:29.685] | : . exclude = 
[08:10:29.685] | : . resignal = FALSE
[08:10:29.685] | : . Number of conditions: 6
[08:10:29.685] | : .  int 6
[08:10:29.686] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.686] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.686] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.687] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.687] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.687] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.687] | : signalConditions() ... done
[08:10:29.688] | result() for MulticoreFuture ... done
[08:10:29.688] | result() for MulticoreFuture ...
[08:10:29.688] | result() for MulticoreFuture ... done
[08:10:29.688] | signalConditions() ...
[08:10:29.688] | : include = ‘immediateCondition’
[08:10:29.688] | : exclude = 
[08:10:29.689] | : resignal = FALSE
[08:10:29.689] | : Number of conditions: 6
[08:10:29.689] | :  int 6
[08:10:29.689] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.690] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.690] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.690] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.690] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.690] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.690] | signalConditions() ... done
[08:10:29.690] | relay stdout ...
[08:10:29.691] | relay stdout ... done
[08:10:29.691] | check for misuse ...
[08:10:29.691] | check for misuse ... done
[08:10:29.691] | relay conditions ...
[08:10:29.691] | : Future state: ‘finished’
[08:10:29.691] | : result() for MulticoreFuture ...
[08:10:29.691] | : result() for MulticoreFuture ... done
[08:10:29.692] | : signalConditions() ...
[08:10:29.692] | : . include = ‘condition’
[08:10:29.692] | : . exclude = ‘immediateCondition’
[08:10:29.692] | : . resignal = TRUE
[08:10:29.692] | : . Number of conditions: 6
[08:10:29.692] | : .  int 6
[08:10:29.693] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.693] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.617] | : . ' , attachPackages() ...
[08:10:29.693] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.693] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.618] | : . ' , ; packages: [n=1] ‘future’
[08:10:29.693] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.694] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.618] | : . ' , attachPackages() ... done
[08:10:29.694] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.694] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.618] | : . ' , attachPackages() ...
[08:10:29.694] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.694] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.618] | : . ' , ; packages: [n=1] ‘utils’
[08:10:29.694] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.694] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.619] | : . ' , attachPackages() ... done
[08:10:29.695] | : signalConditions() ... done
[08:10:29.695] | relay conditions ... done
[08:10:29.695] value() for MulticoreFuture (<unnamed-14>) ... done
- stdout = structure(TRUE, drop = TRUE)
[08:10:29.695] future(..., label = NULL) ...
[08:10:29.695] | lazy: FALSE
[08:10:29.695] | stdout: TRUE
[08:10:29.695] | conditions: [n=1] ‘condition’
[08:10:29.696] | gc: FALSE
[08:10:29.696] | earlySignal: FALSE
[08:10:29.696] | getGlobalsAndPackages() ...
[08:10:29.696] | : Searching for globals ...
[08:10:29.700] | : . globals found: [1] ‘print’
[08:10:29.700] | : Searching for globals ... done
[08:10:29.700] | : Resolving globals: FALSE
[08:10:29.700] | : Search for packages associated with the globals ...
[08:10:29.700] | : . Packages associated with globals: [1] ‘base’
[08:10:29.700] | : . Packages: [1] ‘base’
[08:10:29.701] | : Search for packages associated with the globals ... done
[08:10:29.701] | : Packages after dropping 'base': [0] 
[08:10:29.701] | : globals: [0] 
[08:10:29.701] | : packages: [0] 
[08:10:29.701] | getGlobalsAndPackages() ... done
[08:10:29.701] | run() for ‘Future’ (<unnamed-15>) ...
[08:10:29.702] | : state: ‘created’
[08:10:29.702] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.702] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.702] | : Using MulticoreFutureBackend ...
[08:10:29.702] | : . Number of futures since start: 5 (5 created, 5 launched, 5 finished)
[08:10:29.702] | : . Launching futures ...
[08:10:29.702] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:10:29.702] | : . ' , getFutureData() ...
[08:10:29.703] | : . ' , ; getFutureCore() ...
[08:10:29.703] | : . ' , ; ` Packages needed by the future expression (n = 0): <none>
[08:10:29.703] | : . ' , ; getFutureCore() ... done
[08:10:29.703] | : . ' , ; getFutureCapture() ...
[08:10:29.703] | : . ' , ; getFutureCapture() ... done
[08:10:29.703] | : . ' , ; getFutureContext() ...
[08:10:29.703] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.703] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:10:29.704] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.704] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:10:29.704] | : . ' , ; getFutureContext() ... done
[08:10:29.704] | : . ' , getFutureData() ... done
[08:10:29.704] | : . ' , requestCore(..., workers = 2) ...
[08:10:29.704] | : . ' , requestCore(..., workers = 2) ... done
[08:10:29.706] | : . ' , MulticoreFuture started
[08:10:29.707] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:10:29.707] | : . Launching futures ... done
[08:10:29.707] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:10:29.707] | : Using MulticoreFutureBackend ... done
[08:10:29.707] | run() for ‘Future’ (<unnamed-15>) ... done
[08:10:29.708] future(..., label = NULL) ... done
[08:10:29.708] result() for MulticoreFuture ...
[08:10:29.710] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.710] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:10:29.710] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.711] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:29.711] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:29.711] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:10:29.711] | : . ' , ; ` | New stack:
[08:10:29.711] | : . ' , ; ` | List of 1
[08:10:29.711] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.711] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.711] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:10:29.711] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.711] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.711] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.711] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.711] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.721] | : . ' , ; ` | Old stack:
[08:10:29.722] | : . ' , ; ` | List of 1
[08:10:29.722] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.722] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.722] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.722] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:10:29.722] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.722] | : . ' , ; ` |     ...)  
[08:10:29.722] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.722] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.722] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:10:29.722] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.722] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.722] | : . ' , ; ` |     ...)  
[08:10:29.722] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.722] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.728] | : . ' , ; ` | Not identical
[08:10:29.728] | : . ' , ; ` | all.equal() for future ...
[08:10:29.728] | : . ' , ; ` | : List of 2
[08:10:29.728] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.728] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.728] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:10:29.728] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.728] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.728] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.728] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.728] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.728] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.728] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.728] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:29.728] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.728] | : . ' , ; ` | :     ...)  
[08:10:29.728] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.728] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.728] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:10:29.728] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.728] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.728] | : . ' , ; ` | :     ...)  
[08:10:29.728] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.736] | : . ' , ; ` | : Formals differ
[08:10:29.736] | : . ' , ; ` | all.equal() for future ... done
[08:10:29.736] | : . ' , ; ` | Future strategies differ at level 1
[08:10:29.736] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:10:29.736] | : . ' , ; ` plan(): Setting new future backend stack:
[08:10:29.736] | : . ' , ; ` List of future strategies:
[08:10:29.736] | : . ' , ; ` 1. sequential:
[08:10:29.736] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:10:29.736] | : . ' , ; `    - tweaked: FALSE
[08:10:29.736] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.737] | : . ' , ; ` List of 1
[08:10:29.737] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.737] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.737] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:10:29.737] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.737] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.737] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.737] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.737] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.740] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:10:29.740] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:10:29.740] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.741] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:10:29.741] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.741] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.741] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:10:29.741] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.741] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.741] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.741] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.743] | : . ' , ; ` | : init: TRUE
[08:10:29.743] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:10:29.743] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:10:29.743] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:10:29.744] | : . ' , ; ` | : .  list()
[08:10:29.744] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:10:29.746] | : . ' , ; ` | : .  list()
[08:10:29.746] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:10:29.746] | : . ' , ; ` | : . Dotted pair list of 2
[08:10:29.746] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:10:29.746] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:10:29.748] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:10:29.748] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:10:29.748] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:10:29.748] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.748] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:10:29.749] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:29.749] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:29.751] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:29.752] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:29.752] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:29.752] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:10:29.752] | : . ' , ; ` | : New stack:
[08:10:29.752] | : . ' , ; ` | : List of 1
[08:10:29.752] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.752] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.752] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.752] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:29.752] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.752] | : . ' , ; ` | :     ...)  
[08:10:29.752] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.752] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.752] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:10:29.752] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.752] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.752] | : . ' , ; ` | :     ...)  
[08:10:29.752] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.752] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.755] | : . ' , ; ` | : Old stack:
[08:10:29.756] | : . ' , ; ` | : List of 1
[08:10:29.756] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.756] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.756] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:29.756] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.756] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.756] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.756] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.756] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c1f1c6d0> 
[08:10:29.756] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.756] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.756] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.759] | : . ' , ; ` | : Not identical
[08:10:29.759] | : . ' , ; ` | : all.equal() for future ...
[08:10:29.759] | : . ' , ; ` | : . List of 2
[08:10:29.759] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.759] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.759] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.759] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:10:29.759] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.759] | : . ' , ; ` | : .     ...)  
[08:10:29.759] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.759] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.759] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:10:29.759] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.759] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.759] | : . ' , ; ` | : .     ...)  
[08:10:29.759] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.759] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.759] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.759] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:10:29.759] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.759] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.759] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.759] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.759] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c1f1c6d0> 
[08:10:29.759] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.759] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.765] | : . ' , ; ` | : . Formals differ
[08:10:29.765] | : . ' , ; ` | : all.equal() for future ... done
[08:10:29.765] | : . ' , ; ` | : Future strategies differ at level 1
[08:10:29.765] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:10:29.767] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:10:29.767] | : . ' , ; ` | List of future strategies:
[08:10:29.767] | : . ' , ; ` | 1. multicore:
[08:10:29.767] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:10:29.767] | : . ' , ; ` |    - tweaked: FALSE
[08:10:29.767] | : . ' , ; ` |    - call: plan(strategy)
[08:10:29.768] | : . ' , ; ` | List of 1
[08:10:29.768] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.768] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.768] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.768] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:10:29.768] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.768] | : . ' , ; ` |     ...)  
[08:10:29.768] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.768] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.768] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:10:29.768] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.768] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.768] | : . ' , ; ` |     ...)  
[08:10:29.768] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.768] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.771] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:10:29.771] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:10:29.772] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.772] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.772] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:10:29.772] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:29.772] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:29.772] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:29.773] | readImmediateCondition() ...
[08:10:29.773] | : Path: ‘/tmp/RtmpQWMGJs/.future/immediateConditions’
[08:10:29.773] | : Number of RDS files: 0
[08:10:29.774] | : Returned conditions set:
[08:10:29.774] | :  list()
[08:10:29.774] | readImmediateCondition() ... done
[08:10:29.775] | result() for MulticoreFuture ...
[08:10:29.775] | result() for MulticoreFuture ... done
[08:10:29.775] | signalConditions() ...
[08:10:29.775] | : include = ‘immediateCondition’
[08:10:29.775] | : exclude = 
[08:10:29.775] | : resignal = FALSE
[08:10:29.775] | : Number of conditions: 6
[08:10:29.778] | :  int 6
[08:10:29.779] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.779] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.779] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.779] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.780] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.780] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.780] | signalConditions() ... done
[08:10:29.780] result() for MulticoreFuture ... done
[08:10:29.780] value() for MulticoreFuture (<unnamed-15>) ...
[08:10:29.781] | result() for MulticoreFuture ...
[08:10:29.781] | result() for MulticoreFuture ... done
[08:10:29.781] | result() for MulticoreFuture ...
[08:10:29.781] | result() for MulticoreFuture ... done
[08:10:29.781] | signalConditions() ...
[08:10:29.782] | : include = ‘immediateCondition’
[08:10:29.782] | : exclude = 
[08:10:29.782] | : resignal = FALSE
[08:10:29.782] | : Number of conditions: 6
[08:10:29.782] | :  int 6
[08:10:29.783] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.783] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.784] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.784] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.784] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.784] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.784] | signalConditions() ... done
[08:10:29.784] | relay stdout ...
[1] 42
[08:10:29.784] | relay stdout ... done
[08:10:29.785] | check for misuse ...
[08:10:29.785] | check for misuse ... done
[08:10:29.785] | relay conditions ...
[08:10:29.785] | : Future state: ‘finished’
[08:10:29.785] | : result() for MulticoreFuture ...
[08:10:29.785] | : result() for MulticoreFuture ... done
[08:10:29.785] | : signalConditions() ...
[08:10:29.786] | : . include = ‘condition’
[08:10:29.786] | : . exclude = ‘immediateCondition’
[08:10:29.786] | : . resignal = TRUE
[08:10:29.786] | : . Number of conditions: 6
[08:10:29.786] | : .  int 6
[08:10:29.787] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.787] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.707] | : . ' , attachPackages() ...
[08:10:29.787] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.787] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.708] | : . ' , ; packages: [n=1] ‘future’
[08:10:29.787] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.787] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.708] | : . ' , attachPackages() ... done
[08:10:29.788] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.788] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.708] | : . ' , attachPackages() ...
[08:10:29.788] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.788] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.708] | : . ' , ; packages: [n=0] 
[08:10:29.788] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.788] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.709] | : . ' , attachPackages() ... done
[08:10:29.788] | : signalConditions() ... done
[08:10:29.789] | relay conditions ... done
[08:10:29.789] value() for MulticoreFuture (<unnamed-15>) ... done
[08:10:29.789] result() for MulticoreFuture ...
[08:10:29.789] result() for MulticoreFuture ... done
- stdout = NA
[08:10:29.789] future(..., label = NULL) ...
[08:10:29.789] | lazy: FALSE
[08:10:29.789] | stdout: NA
[08:10:29.790] | conditions: [n=1] ‘condition’
[08:10:29.790] | gc: FALSE
[08:10:29.790] | earlySignal: FALSE
[08:10:29.790] | getGlobalsAndPackages() ...
[08:10:29.790] | : Searching for globals ...
[08:10:29.823] | : . globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[08:10:29.823] | : Searching for globals ... done
[08:10:29.824] | : Resolving globals: FALSE
[08:10:29.824] | : Search for packages associated with the globals ...
[08:10:29.824] | : . Packages associated with globals: [2] ‘base’, ‘utils’
[08:10:29.824] | : . Packages: [2] ‘base’, ‘utils’
[08:10:29.824] | : Search for packages associated with the globals ... done
[08:10:29.825] | : Packages after dropping 'base': [1] ‘utils’
[08:10:29.825] | : Packages after dropping non-attached packages: [1] ‘utils’
[08:10:29.825] | : globals: [0] 
[08:10:29.825] | : packages: [1] ‘utils’
[08:10:29.825] | getGlobalsAndPackages() ... done
[08:10:29.825] | run() for ‘Future’ (<unnamed-16>) ...
[08:10:29.825] | : state: ‘created’
[08:10:29.826] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.826] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.826] | : Using MulticoreFutureBackend ...
[08:10:29.826] | : . Number of futures since start: 6 (6 created, 6 launched, 6 finished)
[08:10:29.826] | : . Launching futures ...
[08:10:29.826] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:10:29.826] | : . ' , getFutureData() ...
[08:10:29.826] | : . ' , ; getFutureCore() ...
[08:10:29.827] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘utils’
[08:10:29.827] | : . ' , ; getFutureCore() ... done
[08:10:29.827] | : . ' , ; getFutureCapture() ...
[08:10:29.827] | : . ' , ; getFutureCapture() ... done
[08:10:29.827] | : . ' , ; getFutureContext() ...
[08:10:29.827] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.827] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:10:29.827] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.827] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:10:29.828] | : . ' , ; getFutureContext() ... done
[08:10:29.828] | : . ' , getFutureData() ... done
[08:10:29.828] | : . ' , requestCore(..., workers = 2) ...
[08:10:29.828] | : . ' , requestCore(..., workers = 2) ... done
[08:10:29.830] | : . ' , MulticoreFuture started
[08:10:29.830] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:10:29.831] | : . Launching futures ... done
[08:10:29.831] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:10:29.831] | : Using MulticoreFutureBackend ... done
[08:10:29.831] | run() for ‘Future’ (<unnamed-16>) ... done
[08:10:29.832] future(..., label = NULL) ... done
[08:10:29.832] result() for MulticoreFuture ...
[08:10:29.833] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.834] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:10:29.834] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.834] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:29.835] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:29.835] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:10:29.835] | : . ' , ; ` | New stack:
[08:10:29.835] | : . ' , ; ` | List of 1
[08:10:29.835] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.835] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.835] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:10:29.835] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.835] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.835] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.835] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.835] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.843] | : . ' , ; ` | Old stack:
[08:10:29.843] | : . ' , ; ` | List of 1
[08:10:29.843] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.843] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.843] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.843] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:10:29.843] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.843] | : . ' , ; ` |     ...)  
[08:10:29.843] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.843] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.843] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:10:29.843] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.843] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.843] | : . ' , ; ` |     ...)  
[08:10:29.843] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.843] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.851] | : . ' , ; ` | Not identical
[08:10:29.851] | : . ' , ; ` | all.equal() for future ...
[08:10:29.851] | : . ' , ; ` | : List of 2
[08:10:29.851] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.851] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.851] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:10:29.851] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.851] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.851] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.851] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.851] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.851] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.851] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.851] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:29.851] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.851] | : . ' , ; ` | :     ...)  
[08:10:29.851] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.851] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.851] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:10:29.851] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.851] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.851] | : . ' , ; ` | :     ...)  
[08:10:29.851] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.859] | : . ' , ; ` | : Formals differ
[08:10:29.860] | : . ' , ; ` | all.equal() for future ... done
[08:10:29.860] | : . ' , ; ` | Future strategies differ at level 1
[08:10:29.860] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:10:29.860] | : . ' , ; ` plan(): Setting new future backend stack:
[08:10:29.860] | : . ' , ; ` List of future strategies:
[08:10:29.860] | : . ' , ; ` 1. sequential:
[08:10:29.860] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:10:29.860] | : . ' , ; `    - tweaked: FALSE
[08:10:29.860] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.861] | : . ' , ; ` List of 1
[08:10:29.861] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.861] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.861] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:10:29.861] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.861] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.861] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.861] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.861] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.864] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:10:29.864] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:10:29.864] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.865] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:10:29.865] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.865] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.865] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:10:29.865] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.865] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.865] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.865] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.867] | : . ' , ; ` | : init: TRUE
[08:10:29.867] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:10:29.867] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:10:29.867] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:10:29.867] | : . ' , ; ` | : .  list()
[08:10:29.868] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:10:29.868] | : . ' , ; ` | : .  list()
[08:10:29.868] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:10:29.868] | : . ' , ; ` | : . Dotted pair list of 2
[08:10:29.868] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:10:29.868] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:10:29.871] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:10:29.871] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:10:29.871] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:10:29.871] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.871] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:10:29.872] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:29.872] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
 int [1:50] 1 2 3 4 5 6 7 8 9 10 ...
a-b-c-d-e-f-g-h-i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z1 2 3 4 5 6 
"Sepal.Length"	"Sepal.Width"	"Petal.Length"	"Petal.Width"	"Species"
"1"	5.1	3.5	1.4	0.2	"setosa"
"2"	4.9	3	1.4	0.2	"setosa"
"3"	4.7	3.2	1.3	0.2	"setosa"
"4"	4.6	3.1	1.5	0.2	"setosa"
"5"	5	3.6	1.4	0.2	"setosa"
"6"	5.4	3.9	1.7	0.4	"setosa"
"7"	4.6	3.4	1.4	0.3	"setosa"
"8"	5	3.4	1.5	0.2	"setosa"
"9"	4.4	2.9	1.4	0.2	"setosa"
"10"	4.9	3.1	1.5	0.1	"setosa"
[08:10:29.874] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:29.874] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:29.875] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:29.875] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:10:29.875] | : . ' , ; ` | : New stack:
[08:10:29.875] | : . ' , ; ` | : List of 1
[08:10:29.875] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.875] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.875] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.875] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:29.875] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.875] | : . ' , ; ` | :     ...)  
[08:10:29.875] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.875] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.875] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:10:29.875] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.875] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.875] | : . ' , ; ` | :     ...)  
[08:10:29.875] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.875] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.878] | : . ' , ; ` | : Old stack:
[08:10:29.878] | : . ' , ; ` | : List of 1
[08:10:29.878] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.878] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.878] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:29.878] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.878] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.878] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.878] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.878] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c1f2f390> 
[08:10:29.878] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.878] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.878] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.882] | : . ' , ; ` | : Not identical
[08:10:29.882] | : . ' , ; ` | : all.equal() for future ...
[08:10:29.882] | : . ' , ; ` | : . List of 2
[08:10:29.882] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.882] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.882] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.882] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:10:29.882] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.882] | : . ' , ; ` | : .     ...)  
[08:10:29.882] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.882] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.882] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:10:29.882] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.882] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.882] | : . ' , ; ` | : .     ...)  
[08:10:29.882] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.882] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.882] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.882] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:10:29.882] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.882] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.882] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.882] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.882] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c1f2f390> 
[08:10:29.882] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.882] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.888] | : . ' , ; ` | : . Formals differ
[08:10:29.888] | : . ' , ; ` | : all.equal() for future ... done
[08:10:29.888] | : . ' , ; ` | : Future strategies differ at level 1
[08:10:29.888] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:10:29.888] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:10:29.888] | : . ' , ; ` | List of future strategies:
[08:10:29.888] | : . ' , ; ` | 1. multicore:
[08:10:29.888] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:10:29.888] | : . ' , ; ` |    - tweaked: FALSE
[08:10:29.888] | : . ' , ; ` |    - call: plan(strategy)
[08:10:29.888] | : . ' , ; ` | List of 1
[08:10:29.888] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.888] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.888] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.888] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:10:29.888] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.888] | : . ' , ; ` |     ...)  
[08:10:29.888] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.888] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.888] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:10:29.888] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.888] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.888] | : . ' , ; ` |     ...)  
[08:10:29.888] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.888] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.893] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:10:29.893] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:10:29.893] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.894] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.894] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:10:29.894] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:29.894] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:29.894] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:29.895] | readImmediateCondition() ...
[08:10:29.895] | : Path: ‘/tmp/RtmpQWMGJs/.future/immediateConditions’
[08:10:29.895] | : Number of RDS files: 0
[08:10:29.895] | : Returned conditions set:
[08:10:29.895] | :  list()
[08:10:29.896] | readImmediateCondition() ... done
[08:10:29.896] | result() for MulticoreFuture ...
[08:10:29.897] | result() for MulticoreFuture ... done
[08:10:29.897] | signalConditions() ...
[08:10:29.897] | : include = ‘immediateCondition’
[08:10:29.897] | : exclude = 
[08:10:29.897] | : resignal = FALSE
[08:10:29.897] | : Number of conditions: 6
[08:10:29.897] | :  int 6
[08:10:29.898] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.898] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.898] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.898] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.899] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.899] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.899] | signalConditions() ... done
[08:10:29.899] result() for MulticoreFuture ... done
List of 16
 $ value              : int 42
 $ visible            : logi TRUE
 $ stdout             : NULL
 $ conditions         :List of 6
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:29.831] | : . ' , attachPackages() ...\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg))
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:29.831] | : . ' , ; packages: [n=1] ‘future’\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg), appendLF = appendLF)
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:29.832] | : . ' , attachPackages() ... done\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg))
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:29.832] | : . ' , attachPackages() ...\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg))
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:29.832] | : . ' , ; packages: [n=1] ‘utils’\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg), appendLF = appendLF)
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
  ..$ :List of 2
  .. ..$ condition:List of 2
  .. .. ..$ message: chr "[08:10:29.832] | : . ' , attachPackages() ... done\n"
  .. .. ..$ call   : language message(sprintf("%s%s", prefix, msg))
  .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
  .. ..$ signaled : int 0
 $ rng                : logi FALSE
 $ seed               : NULL
 $ misuseGlobalEnv    : NULL
 $ misuseConnections  : NULL
 $ misuseDevices      : NULL
 $ misuseDefaultDevice: list()
 $ started            : POSIXct[1:1], format: "2025-06-17 08:10:29"
 $ finished           : POSIXct[1:1], format: "2025-06-17 08:10:29"
 $ uuid               : chr [1:2] "8090913757941eb18ce8f3a29fec0ad8" "16"
 $ session_uuid       : chr "6ba96aa82b9489ee1acdf7693ac9309a"
  ..- attr(*, "source")=List of 5
  .. ..$ host  : Named chr "285a5f234941"
  .. .. ..- attr(*, "names")= chr "HOSTNAME"
  .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
  .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
  .. ..$ pid   : int 75649
  .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:10:29"
  .. ..$ random: int 2147483647
 $ r_info             :List of 4
  ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
  .. ..$ : int [1:3] 4 5 0
  ..$ os           : chr "unix"
  ..$ os_name      : chr "Linux"
  ..$ captures_utf8: logi TRUE
 $ version            : chr "1.8"
 - attr(*, "class")= chr "FutureResult"
[08:10:29.927] value() for MulticoreFuture (<unnamed-16>) ...
[08:10:29.927] | result() for MulticoreFuture ...
[08:10:29.927] | result() for MulticoreFuture ... done
[08:10:29.927] | result() for MulticoreFuture ...
[08:10:29.928] | result() for MulticoreFuture ... done
[08:10:29.928] | signalConditions() ...
[08:10:29.928] | : include = ‘immediateCondition’
[08:10:29.928] | : exclude = 
[08:10:29.928] | : resignal = FALSE
[08:10:29.928] | : Number of conditions: 6
[08:10:29.928] | :  int 6
[08:10:29.929] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.929] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.929] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.929] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.929] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.929] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.929] | signalConditions() ... done
[08:10:29.929] | relay stdout ...
[08:10:29.930] | relay stdout ... done
[08:10:29.930] | check for misuse ...
[08:10:29.930] | check for misuse ... done
[08:10:29.930] | relay conditions ...
[08:10:29.930] | : Future state: ‘finished’
[08:10:29.930] | : result() for MulticoreFuture ...
[08:10:29.930] | : result() for MulticoreFuture ... done
[08:10:29.930] | : signalConditions() ...
[08:10:29.930] | : . include = ‘condition’
[08:10:29.931] | : . exclude = ‘immediateCondition’
[08:10:29.931] | : . resignal = TRUE
[08:10:29.931] | : . Number of conditions: 6
[08:10:29.931] | : .  int 6
[08:10:29.931] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.931] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.831] | : . ' , attachPackages() ...
[08:10:29.932] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.932] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.831] | : . ' , ; packages: [n=1] ‘future’
[08:10:29.932] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.932] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.832] | : . ' , attachPackages() ... done
[08:10:29.932] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.932] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.832] | : . ' , attachPackages() ...
[08:10:29.932] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.932] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.832] | : . ' , ; packages: [n=1] ‘utils’
[08:10:29.933] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:29.933] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.832] | : . ' , attachPackages() ... done
[08:10:29.933] | : signalConditions() ... done
[08:10:29.933] | relay conditions ... done
[08:10:29.933] value() for MulticoreFuture (<unnamed-16>) ... done
[08:10:29.933] future(..., label = NULL) ...
[08:10:29.933] | lazy: FALSE
[08:10:29.933] | stdout: NA
[08:10:29.934] | conditions: [n=1] ‘condition’
[08:10:29.934] | gc: FALSE
[08:10:29.934] | earlySignal: FALSE
[08:10:29.934] | getGlobalsAndPackages() ...
[08:10:29.934] | : Searching for globals ...
[08:10:29.964] | : . globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[08:10:29.965] | : Searching for globals ... done
[08:10:29.965] | : Resolving globals: FALSE
[08:10:29.965] | : Search for packages associated with the globals ...
[08:10:29.965] | : . Packages associated with globals: [2] ‘base’, ‘utils’
[08:10:29.966] | : . Packages: [2] ‘base’, ‘utils’
[08:10:29.966] | : Search for packages associated with the globals ... done
[08:10:29.966] | : Packages after dropping 'base': [1] ‘utils’
[08:10:29.966] | : Packages after dropping non-attached packages: [1] ‘utils’
[08:10:29.966] | : globals: [0] 
[08:10:29.966] | : packages: [1] ‘utils’
[08:10:29.966] | getGlobalsAndPackages() ... done
[08:10:29.967] | run() for ‘Future’ (<unnamed-17>) ...
[08:10:29.967] | : state: ‘created’
[08:10:29.967] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.967] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.967] | : Using MulticoreFutureBackend ...
[08:10:29.967] | : . Number of futures since start: 7 (7 created, 7 launched, 7 finished)
[08:10:29.967] | : . Launching futures ...
[08:10:29.967] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:10:29.968] | : . ' , getFutureData() ...
[08:10:29.968] | : . ' , ; getFutureCore() ...
[08:10:29.968] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘utils’
[08:10:29.968] | : . ' , ; getFutureCore() ... done
[08:10:29.968] | : . ' , ; getFutureCapture() ...
[08:10:29.968] | : . ' , ; getFutureCapture() ... done
[08:10:29.968] | : . ' , ; getFutureContext() ...
[08:10:29.968] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.968] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:10:29.969] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.969] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:10:29.969] | : . ' , ; getFutureContext() ... done
[08:10:29.969] | : . ' , getFutureData() ... done
[08:10:29.969] | : . ' , requestCore(..., workers = 2) ...
[08:10:29.969] | : . ' , requestCore(..., workers = 2) ... done
[08:10:29.971] | : . ' , MulticoreFuture started
[08:10:29.972] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:10:29.972] | : . Launching futures ... done
[08:10:29.972] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:10:29.973] | : Using MulticoreFutureBackend ... done
[08:10:29.973] | run() for ‘Future’ (<unnamed-17>) ... done
[08:10:29.973] future(..., label = NULL) ... done
[08:10:29.974] value() for MulticoreFuture (<unnamed-17>) ...
[08:10:29.974] | result() for MulticoreFuture ...
[08:10:29.975] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:29.975] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:10:29.975] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:29.976] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:29.976] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:29.976] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:10:29.976] | : . ' , ; ` | New stack:
[08:10:29.977] | : . ' , ; ` | List of 1
[08:10:29.977] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.977] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.977] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:10:29.977] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.977] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.977] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.977] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.977] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.986] | : . ' , ; ` | Old stack:
[08:10:29.986] | : . ' , ; ` | List of 1
[08:10:29.986] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.986] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.986] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.986] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:10:29.986] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.986] | : . ' , ; ` |     ...)  
[08:10:29.986] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.986] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.986] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:10:29.986] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.986] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.986] | : . ' , ; ` |     ...)  
[08:10:29.986] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.986] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:29.993] | : . ' , ; ` | Not identical
[08:10:29.993] | : . ' , ; ` | all.equal() for future ...
[08:10:29.993] | : . ' , ; ` | : List of 2
[08:10:29.993] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:29.993] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:29.993] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:10:29.993] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:29.993] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.993] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:29.993] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:29.993] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:29.993] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:10:29.993] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:29.993] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:29.993] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.993] | : . ' , ; ` | :     ...)  
[08:10:29.993] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.993] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:29.993] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:10:29.993] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:29.993] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:29.993] | : . ' , ; ` | :     ...)  
[08:10:29.993] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:30.001] | : . ' , ; ` | : Formals differ
[08:10:30.001] | : . ' , ; ` | all.equal() for future ... done
[08:10:30.001] | : . ' , ; ` | Future strategies differ at level 1
[08:10:30.001] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:10:30.001] | : . ' , ; ` plan(): Setting new future backend stack:
[08:10:30.002] | : . ' , ; ` List of future strategies:
[08:10:30.002] | : . ' , ; ` 1. sequential:
[08:10:30.002] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:10:30.002] | : . ' , ; `    - tweaked: FALSE
[08:10:30.002] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:30.002] | : . ' , ; ` List of 1
[08:10:30.002] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:30.002] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:30.002] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:10:30.002] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:30.002] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:30.002] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:30.002] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:30.002] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:30.005] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:10:30.005] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:10:30.006] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:30.006] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:10:30.006] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:30.006] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:30.006] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:10:30.006] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:30.006] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:30.006] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:30.006] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:30.008] | : . ' , ; ` | : init: TRUE
[08:10:30.008] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:10:30.008] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:10:30.009] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:10:30.009] | : . ' , ; ` | : .  list()
[08:10:30.010] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:10:30.010] | : . ' , ; ` | : .  list()
[08:10:30.011] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:10:30.011] | : . ' , ; ` | : . Dotted pair list of 2
[08:10:30.011] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:10:30.011] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:10:30.012] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:10:30.012] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:10:30.012] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:10:30.013] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:30.013] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:10:30.013] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:30.013] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
 int [1:50] 1 2 3 4 5 6 7 8 9 10 ...
a-b-c-d-e-f-g-h-i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z1 2 3 4 5 6 
"Sepal.Length"	"Sepal.Width"	"Petal.Length"	"Petal.Width"	"Species"
"1"	5.1	3.5	1.4	0.2	"setosa"
"2"	4.9	3	1.4	0.2	"setosa"
"3"	4.7	3.2	1.3	0.2	"setosa"
"4"	4.6	3.1	1.5	0.2	"setosa"
"5"	5	3.6	1.4	0.2	"setosa"
"6"	5.4	3.9	1.7	0.4	"setosa"
"7"	4.6	3.4	1.4	0.3	"setosa"
"8"	5	3.4	1.5	0.2	"setosa"
"9"	4.4	2.9	1.4	0.2	"setosa"
"10"	4.9	3.1	1.5	0.1	"setosa"
[08:10:30.016] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:30.016] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:30.016] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:30.016] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:10:30.016] | : . ' , ; ` | : New stack:
[08:10:30.016] | : . ' , ; ` | : List of 1
[08:10:30.016] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:30.016] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:10:30.016] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:30.016] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:30.016] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:30.016] | : . ' , ; ` | :     ...)  
[08:10:30.016] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:30.016] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:30.016] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:10:30.016] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:30.016] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:30.016] | : . ' , ; ` | :     ...)  
[08:10:30.016] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:30.016] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:30.019] | : . ' , ; ` | : Old stack:
[08:10:30.020] | : . ' , ; ` | : List of 1
[08:10:30.020] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:30.020] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:30.020] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:30.020] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:30.020] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:30.020] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:30.020] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:30.020] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c1911f20> 
[08:10:30.020] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:30.020] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:30.020] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:30.023] | : . ' , ; ` | : Not identical
[08:10:30.023] | : . ' , ; ` | : all.equal() for future ...
[08:10:30.023] | : . ' , ; ` | : . List of 2
[08:10:30.023] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:30.023] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:10:30.023] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:30.023] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:10:30.023] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:30.023] | : . ' , ; ` | : .     ...)  
[08:10:30.023] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:30.023] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:30.023] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:10:30.023] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:30.023] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:30.023] | : . ' , ; ` | : .     ...)  
[08:10:30.023] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:30.023] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:30.023] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:30.023] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:10:30.023] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:30.023] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:30.023] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:30.023] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:30.023] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c1911f20> 
[08:10:30.023] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:30.023] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:30.031] | : . ' , ; ` | : . Formals differ
[08:10:30.031] | : . ' , ; ` | : all.equal() for future ... done
[08:10:30.032] | : . ' , ; ` | : Future strategies differ at level 1
[08:10:30.032] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:10:30.032] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:10:30.032] | : . ' , ; ` | List of future strategies:
[08:10:30.032] | : . ' , ; ` | 1. multicore:
[08:10:30.032] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:10:30.032] | : . ' , ; ` |    - tweaked: FALSE
[08:10:30.032] | : . ' , ; ` |    - call: plan(strategy)
[08:10:30.032] | : . ' , ; ` | List of 1
[08:10:30.032] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:30.032] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:10:30.032] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:30.032] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:10:30.032] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:30.032] | : . ' , ; ` |     ...)  
[08:10:30.032] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:30.032] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:30.032] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:10:30.032] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:30.032] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:30.032] | : . ' , ; ` |     ...)  
[08:10:30.032] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:30.032] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:30.036] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:10:30.036] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:10:30.036] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:30.036] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:30.036] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:10:30.036] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:30.037] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:30.037] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:30.037] | : readImmediateCondition() ...
[08:10:30.037] | : . Path: ‘/tmp/RtmpQWMGJs/.future/immediateConditions’
[08:10:30.038] | : . Number of RDS files: 0
[08:10:30.038] | : . Returned conditions set:
[08:10:30.038] | : .  list()
[08:10:30.038] | : readImmediateCondition() ... done
[08:10:30.039] | : result() for MulticoreFuture ...
[08:10:30.039] | : result() for MulticoreFuture ... done
[08:10:30.039] | : signalConditions() ...
[08:10:30.039] | : . include = ‘immediateCondition’
[08:10:30.039] | : . exclude = 
[08:10:30.040] | : . resignal = FALSE
[08:10:30.040] | : . Number of conditions: 6
[08:10:30.040] | : .  int 6
[08:10:30.042] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.043] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.043] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.043] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.043] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.044] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.044] | : signalConditions() ... done
[08:10:30.044] | result() for MulticoreFuture ... done
[08:10:30.044] | result() for MulticoreFuture ...
[08:10:30.045] | result() for MulticoreFuture ... done
[08:10:30.045] | signalConditions() ...
[08:10:30.045] | : include = ‘immediateCondition’
[08:10:30.045] | : exclude = 
[08:10:30.045] | : resignal = FALSE
[08:10:30.045] | : Number of conditions: 6
[08:10:30.046] | :  int 6
[08:10:30.046] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.047] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.047] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.047] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.047] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.047] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.048] | signalConditions() ... done
[08:10:30.048] | relay stdout ...
[08:10:30.048] | relay stdout ... done
[08:10:30.048] | check for misuse ...
[08:10:30.048] | check for misuse ... done
[08:10:30.048] | relay conditions ...
[08:10:30.049] | : Future state: ‘finished’
[08:10:30.049] | : result() for MulticoreFuture ...
[08:10:30.049] | : result() for MulticoreFuture ... done
[08:10:30.049] | : signalConditions() ...
[08:10:30.049] | : . include = ‘condition’
[08:10:30.049] | : . exclude = ‘immediateCondition’
[08:10:30.049] | : . resignal = TRUE
[08:10:30.049] | : . Number of conditions: 6
[08:10:30.050] | : .  int 6
[08:10:30.050] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.050] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.972] | : . ' , attachPackages() ...
[08:10:30.050] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.051] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.973] | : . ' , ; packages: [n=1] ‘future’
[08:10:30.051] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.051] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.973] | : . ' , attachPackages() ... done
[08:10:30.051] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.051] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.973] | : . ' , attachPackages() ...
[08:10:30.051] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.052] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.973] | : . ' , ; packages: [n=1] ‘utils’
[08:10:30.052] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.052] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:29.974] | : . ' , attachPackages() ... done
[08:10:30.052] | : signalConditions() ... done
[08:10:30.052] | relay conditions ... done
[08:10:30.052] value() for MulticoreFuture (<unnamed-17>) ... done
- stdout = structure(TRUE, drop = TRUE)
[08:10:30.053] future(..., label = NULL) ...
[08:10:30.053] | lazy: FALSE
[08:10:30.053] | stdout: TRUE
[08:10:30.053] | conditions: [n=1] ‘condition’
[08:10:30.053] | gc: FALSE
[08:10:30.053] | earlySignal: FALSE
[08:10:30.053] | getGlobalsAndPackages() ...
[08:10:30.053] | : Searching for globals ...
[08:10:30.057] | : . globals found: [1] ‘print’
[08:10:30.057] | : Searching for globals ... done
[08:10:30.057] | : Resolving globals: FALSE
[08:10:30.057] | : Search for packages associated with the globals ...
[08:10:30.058] | : . Packages associated with globals: [1] ‘base’
[08:10:30.058] | : . Packages: [1] ‘base’
[08:10:30.058] | : Search for packages associated with the globals ... done
[08:10:30.058] | : Packages after dropping 'base': [0] 
[08:10:30.058] | : globals: [0] 
[08:10:30.058] | : packages: [0] 
[08:10:30.059] | getGlobalsAndPackages() ... done
[08:10:30.059] | run() for ‘Future’ (<unnamed-18>) ...
[08:10:30.059] | : state: ‘created’
[08:10:30.059] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:30.059] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:30.059] | : Using MulticoreFutureBackend ...
[08:10:30.059] | : . Number of futures since start: 8 (8 created, 8 launched, 8 finished)
[08:10:30.060] | : . Launching futures ...
[08:10:30.060] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:10:30.060] | : . ' , getFutureData() ...
[08:10:30.060] | : . ' , ; getFutureCore() ...
[08:10:30.060] | : . ' , ; ` Packages needed by the future expression (n = 0): <none>
[08:10:30.060] | : . ' , ; getFutureCore() ... done
[08:10:30.060] | : . ' , ; getFutureCapture() ...
[08:10:30.060] | : . ' , ; getFutureCapture() ... done
[08:10:30.061] | : . ' , ; getFutureContext() ...
[08:10:30.061] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:30.061] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:10:30.061] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:30.061] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:10:30.061] | : . ' , ; getFutureContext() ... done
[08:10:30.061] | : . ' , getFutureData() ... done
[08:10:30.062] | : . ' , requestCore(..., workers = 2) ...
[08:10:30.062] | : . ' , requestCore(..., workers = 2) ... done
[08:10:30.064] | : . ' , MulticoreFuture started
[08:10:30.065] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:10:30.065] | : . Launching futures ... done
[08:10:30.065] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:10:30.066] | : Using MulticoreFutureBackend ... done
[08:10:30.066] | run() for ‘Future’ (<unnamed-18>) ... done
[08:10:30.066] future(..., label = NULL) ... done
[08:10:30.066] result() for MulticoreFuture ...
[08:10:30.067] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:30.068] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:10:30.068] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:30.068] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:30.069] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:30.069] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:10:30.069] | : . ' , ; ` | New stack:
[08:10:30.069] | : . ' , ; ` | List of 1
[08:10:30.069] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:30.069] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:30.069] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:10:30.069] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:30.069] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:30.069] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:30.069] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:30.069] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:30.078] | : . ' , ; ` | Old stack:
[08:10:30.078] | : . ' , ; ` | List of 1
[08:10:30.078] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:30.078] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:10:30.078] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:30.078] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:10:30.078] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:30.078] | : . ' , ; ` |     ...)  
[08:10:30.078] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:30.078] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:30.078] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:10:30.078] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:30.078] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:30.078] | : . ' , ; ` |     ...)  
[08:10:30.078] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:30.078] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:30.085] | : . ' , ; ` | Not identical
[08:10:30.085] | : . ' , ; ` | all.equal() for future ...
[08:10:30.085] | : . ' , ; ` | : List of 2
[08:10:30.085] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:30.085] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:30.085] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:10:30.085] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:30.085] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:30.085] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:30.085] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:30.085] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:30.085] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:10:30.085] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:30.085] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:30.085] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:30.085] | : . ' , ; ` | :     ...)  
[08:10:30.085] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:30.085] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:30.085] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:10:30.085] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:30.085] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:30.085] | : . ' , ; ` | :     ...)  
[08:10:30.085] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:30.093] | : . ' , ; ` | : Formals differ
[08:10:30.093] | : . ' , ; ` | all.equal() for future ... done
[08:10:30.093] | : . ' , ; ` | Future strategies differ at level 1
[08:10:30.094] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:10:30.094] | : . ' , ; ` plan(): Setting new future backend stack:
[08:10:30.094] | : . ' , ; ` List of future strategies:
[08:10:30.094] | : . ' , ; ` 1. sequential:
[08:10:30.094] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:10:30.094] | : . ' , ; `    - tweaked: FALSE
[08:10:30.094] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:30.094] | : . ' , ; ` List of 1
[08:10:30.094] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:30.094] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:30.094] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:10:30.094] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:30.094] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:30.094] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:30.094] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:30.094] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:30.098] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:10:30.098] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:10:30.098] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:30.098] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:10:30.098] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:30.098] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:30.098] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:10:30.098] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:30.098] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:30.098] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:30.098] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:30.100] | : . ' , ; ` | : init: TRUE
[08:10:30.100] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:10:30.101] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:10:30.101] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:10:30.101] | : . ' , ; ` | : .  list()
[08:10:30.104] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:10:30.104] | : . ' , ; ` | : .  list()
[08:10:30.105] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:10:30.105] | : . ' , ; ` | : . Dotted pair list of 2
[08:10:30.105] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:10:30.105] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:10:30.106] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:10:30.106] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:10:30.106] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:10:30.107] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:30.107] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:10:30.107] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:30.107] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:30.109] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:30.109] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:30.110] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:30.110] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:10:30.110] | : . ' , ; ` | : New stack:
[08:10:30.110] | : . ' , ; ` | : List of 1
[08:10:30.110] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:30.110] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:10:30.110] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:30.110] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:30.110] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:30.110] | : . ' , ; ` | :     ...)  
[08:10:30.110] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:30.110] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:30.110] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:10:30.110] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:30.110] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:30.110] | : . ' , ; ` | :     ...)  
[08:10:30.110] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:30.110] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:30.113] | : . ' , ; ` | : Old stack:
[08:10:30.113] | : . ' , ; ` | : List of 1
[08:10:30.113] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:30.113] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:30.113] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:30.113] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:30.113] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:30.113] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:30.113] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:30.113] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c1bf18b0> 
[08:10:30.113] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:30.113] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:30.113] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:30.117] | : . ' , ; ` | : Not identical
[08:10:30.117] | : . ' , ; ` | : all.equal() for future ...
[08:10:30.117] | : . ' , ; ` | : . List of 2
[08:10:30.117] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:30.117] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:10:30.117] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:30.117] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:10:30.117] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:30.117] | : . ' , ; ` | : .     ...)  
[08:10:30.117] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:30.117] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:30.117] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:10:30.117] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:30.117] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:30.117] | : . ' , ; ` | : .     ...)  
[08:10:30.117] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:30.117] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:30.117] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:30.117] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:10:30.117] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:30.117] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:30.117] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:30.117] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:30.117] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c1bf18b0> 
[08:10:30.117] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:30.117] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:30.123] | : . ' , ; ` | : . Formals differ
[08:10:30.123] | : . ' , ; ` | : all.equal() for future ... done
[08:10:30.123] | : . ' , ; ` | : Future strategies differ at level 1
[08:10:30.123] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:10:30.123] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:10:30.123] | : . ' , ; ` | List of future strategies:
[08:10:30.123] | : . ' , ; ` | 1. multicore:
[08:10:30.123] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:10:30.123] | : . ' , ; ` |    - tweaked: FALSE
[08:10:30.123] | : . ' , ; ` |    - call: plan(strategy)
[08:10:30.123] | : . ' , ; ` | List of 1
[08:10:30.123] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:30.123] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:10:30.123] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:30.123] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:10:30.123] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:30.123] | : . ' , ; ` |     ...)  
[08:10:30.123] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:30.123] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:30.123] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:10:30.123] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:30.123] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:30.123] | : . ' , ; ` |     ...)  
[08:10:30.123] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:30.123] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:30.129] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:10:30.129] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:10:30.129] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:30.129] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:30.129] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:10:30.129] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:30.129] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:30.129] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:30.130] | readImmediateCondition() ...
[08:10:30.130] | : Path: ‘/tmp/RtmpQWMGJs/.future/immediateConditions’
[08:10:30.131] | : Number of RDS files: 0
[08:10:30.131] | : Returned conditions set:
[08:10:30.131] | :  list()
[08:10:30.132] | readImmediateCondition() ... done
[08:10:30.132] | result() for MulticoreFuture ...
[08:10:30.132] | result() for MulticoreFuture ... done
[08:10:30.132] | signalConditions() ...
[08:10:30.132] | : include = ‘immediateCondition’
[08:10:30.133] | : exclude = 
[08:10:30.133] | : resignal = FALSE
[08:10:30.133] | : Number of conditions: 6
[08:10:30.133] | :  int 6
[08:10:30.134] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.134] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.136] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.136] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.136] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.137] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.137] | signalConditions() ... done
[08:10:30.137] result() for MulticoreFuture ... done
[08:10:30.137] value() for MulticoreFuture (<unnamed-18>) ...
[08:10:30.138] | result() for MulticoreFuture ...
[08:10:30.138] | result() for MulticoreFuture ... done
[08:10:30.138] | result() for MulticoreFuture ...
[08:10:30.138] | result() for MulticoreFuture ... done
[08:10:30.138] | signalConditions() ...
[08:10:30.139] | : include = ‘immediateCondition’
[08:10:30.139] | : exclude = 
[08:10:30.139] | : resignal = FALSE
[08:10:30.139] | : Number of conditions: 6
[08:10:30.139] | :  int 6
[08:10:30.140] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.140] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.141] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.141] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.141] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.141] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.141] | signalConditions() ... done
[08:10:30.142] | relay stdout ...
[1] 42
[08:10:30.142] | relay stdout ... done
[08:10:30.142] | check for misuse ...
[08:10:30.142] | check for misuse ... done
[08:10:30.142] | relay conditions ...
[08:10:30.142] | : Future state: ‘finished’
[08:10:30.143] | : result() for MulticoreFuture ...
[08:10:30.143] | : result() for MulticoreFuture ... done
[08:10:30.143] | : signalConditions() ...
[08:10:30.143] | : . include = ‘condition’
[08:10:30.143] | : . exclude = ‘immediateCondition’
[08:10:30.143] | : . resignal = TRUE
[08:10:30.143] | : . Number of conditions: 6
[08:10:30.143] | : .  int 6
[08:10:30.144] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.144] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:30.065] | : . ' , attachPackages() ...
[08:10:30.144] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.144] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:30.065] | : . ' , ; packages: [n=1] ‘future’
[08:10:30.145] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.145] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:30.066] | : . ' , attachPackages() ... done
[08:10:30.145] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.145] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:30.066] | : . ' , attachPackages() ...
[08:10:30.145] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.145] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:30.066] | : . ' , ; packages: [n=0] 
[08:10:30.145] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:30.146] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:30.066] | : . ' , attachPackages() ... done
[08:10:30.146] | : signalConditions() ... done
[08:10:30.146] | relay conditions ... done
[08:10:30.146] value() for MulticoreFuture (<unnamed-18>) ... done
[08:10:30.146] result() for MulticoreFuture ...
[08:10:30.146] result() for MulticoreFuture ... done
multicore ... done
multisession ...
[08:10:30.147] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:30.147] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:10:30.147] | : all.equal() for FutureStrategyList ...
[08:10:30.147] | : . New stack:
[08:10:30.147] | : . List of 1
[08:10:30.147] | : .  $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:10:30.147] | : .     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:30.147] | : .   ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:10:30.147] | : .   ..- attr(*, "init")= logi TRUE
[08:10:30.147] | : .   ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:10:30.147] | : .     gc = FALSE, earlySignal = FALSE, ...)  
[08:10:30.147] | : .   .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:10:30.147] | : .   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:10:30.147] | : .   ..- attr(*, "untweakable")= chr "persistent"
[08:10:30.147] | : .   ..- attr(*, "call")= language plan(strategy)
[08:10:30.147] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:30.151] | : . Old stack:
[08:10:30.151] | : . List of 1
[08:10:30.151] | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:30.151] | : .     earlySignal = FALSE, envir = parent.frame())  
[08:10:30.151] | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:30.151] | : .   ..- attr(*, "init")= chr "done"
[08:10:30.151] | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:30.151] | : .     ...)  
[08:10:30.151] | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:30.151] | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:30.151] | : .   ..- attr(*, "call")= language plan(strategy)
[08:10:30.151] | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:30.151] | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:30.151] | : .     ...)  
[08:10:30.151] | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:30.151] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:30.155] | : . Not identical
[08:10:30.155] | : . all.equal() for future ...
[08:10:30.155] | : . ' List of 2
[08:10:30.155] | : . '  $ target :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:10:30.155] | : . '     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:30.155] | : . '   ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:10:30.155] | : . '   ..- attr(*, "init")= logi TRUE
[08:10:30.155] | : . '   ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:10:30.155] | : . '     gc = FALSE, earlySignal = FALSE, ...)  
[08:10:30.155] | : . '   .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:10:30.155] | : . '   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:10:30.155] | : . '   ..- attr(*, "untweakable")= chr "persistent"
[08:10:30.155] | : . '   ..- attr(*, "call")= language plan(strategy)
[08:10:30.155] | : . '  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:10:30.155] | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:10:30.155] | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:10:30.155] | : . '   ..- attr(*, "init")= chr "done"
[08:10:30.155] | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:30.155] | : . '     ...)  
[08:10:30.155] | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:30.155] | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:30.155] | : . '   ..- attr(*, "call")= language plan(strategy)
[08:10:30.155] | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55e4c193f780> 
[08:10:30.155] | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:30.155] | : . '     ...)  
[08:10:30.155] | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:30.164] | : . ' Formals differ
[08:10:30.164] | : . all.equal() for future ... done
[08:10:30.164] | : . Future strategies differ at level 1
[08:10:30.164] | : all.equal() for FutureStrategyList ... done
[08:10:30.164] | : plan(): Setting new future backend stack:
[08:10:30.164] | : List of future strategies:
[08:10:30.164] | : 1. multisession:
[08:10:30.164] | :    - args: function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:10:30.164] | :    - tweaked: FALSE
[08:10:30.164] | :    - call: plan(strategy)
[08:10:30.165] | : List of 1
[08:10:30.165] | :  $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:10:30.165] | :     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:30.165] | :   ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:10:30.165] | :   ..- attr(*, "init")= logi TRUE
[08:10:30.165] | :   ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:10:30.165] | :     gc = FALSE, earlySignal = FALSE, ...)  
[08:10:30.165] | :   .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:10:30.165] | :   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:10:30.165] | :   ..- attr(*, "untweakable")= chr "persistent"
[08:10:30.165] | :   ..- attr(*, "call")= language plan(strategy)
[08:10:30.165] | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:30.168] | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ...
[08:10:30.168] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:30.168] | : . ' Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:10:30.168] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:30.169] | : . Legacy shutdown of cluster workers ...
[08:10:30.169] | : . ' Stopping existing cluster ...
[08:10:30.169] | : . ' , No pre-existing cluster. Skipping
[08:10:30.169] | : . ' Stopping existing cluster ... done
[08:10:30.170] | : . Legacy shutdown of cluster workers ... done
[08:10:30.170] | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[08:10:30.170] | : plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ...
[08:10:30.170] | : . function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:10:30.170] | : .     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:30.170] | : .  - attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:10:30.170] | : .  - attr(*, "init")= logi TRUE
[08:10:30.170] | : .  - attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:10:30.170] | : .     gc = FALSE, earlySignal = FALSE, ...)  
[08:10:30.170] | : .   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:10:30.170] | : .  - attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:10:30.170] | : .  - attr(*, "untweakable")= chr "persistent"
[08:10:30.170] | : .  - attr(*, "call")= language plan(strategy)
[08:10:30.172] | : . init: TRUE
[08:10:30.172] | : . makeFutureBackend(<multisession>) ...
[08:10:30.172] | : . ' Backend function: <‘NULL’>
[08:10:30.173] | : . ' Evaluator tweak arguments: [n=0]
[08:10:30.173] | : . '  list()
[08:10:30.173] | : . ' Evaluator formal arguments: [n=4]
[08:10:30.173] | : . '  list()
[08:10:30.173] | : . ' Backend factory arguments: [n=4]
[08:10:30.173] | : . ' Dotted pair list of 4
[08:10:30.173] | : . '  $ workers     : language availableCores()
[08:10:30.173] | : . '  $ rscript_libs: language .libPaths()
[08:10:30.173] | : . '  $ gc          : logi FALSE
[08:10:30.173] | : . '  $ earlySignal : logi FALSE
[08:10:30.175] | : . ' MultisessionFutureBackend(workers = <workers>, interrupts = TRUE, ...) ...
[08:10:30.175] | : . ' , Arguments:
[08:10:30.175] | : . ' , List of 5
[08:10:30.175] | : . ' ,  $ workers     : Named int 2
[08:10:30.175] | : . ' ,   ..- attr(*, "names")= chr "mc.cores"
[08:10:30.175] | : . ' ,  $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[08:10:30.175] | : . ' ,  $ interrupts  : logi TRUE
[08:10:30.175] | : . ' ,  $ gc          : logi FALSE
[08:10:30.175] | : . ' ,  $ earlySignal : logi FALSE
[08:10:30.179] | : . ' , ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ...
[08:10:30.179] | : . ' , ; workers: 2
[08:10:30.179] | : . ' , ; getCluster() ...
[08:10:30.179] | : . ' , ; getCluster() ... done
[08:10:30.180] | : . ' , ; Stopping existing cluster ...
[08:10:30.180] | : . ' , ; ` No pre-existing cluster. Skipping
[08:10:30.180] | : . ' , ; Stopping existing cluster ... done
[08:10:30.180] | : . ' , ; Starting new cluster ...
[08:10:30.180] | : . ' , ; ` makeCluster(workers, ...) ...
[08:10:30.180] | : . ' , ; ` | Arguments:
[08:10:30.180] | : . ' , ; ` | List of 2
[08:10:30.180] | : . ' , ; ` |  $             : int 2
[08:10:30.180] | : . ' , ; ` |  $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[08:10:30.181] | : . ' , ; ` | .makeCluster() ...
[08:10:30.181] | : . ' , ; ` | : workers: ‘2’
[08:10:30.181] | : . ' , ; ` | : R_FUTURE_PLAN: NA
[08:10:30.182] | : . ' , ; ` | : parallelly::makeClusterPSOCK() arguments:
[08:10:30.182] | : . ' , ; ` | : List of 2
[08:10:30.182] | : . ' , ; ` | :  $             : int 2
[08:10:30.182] | : . ' , ; ` | :  $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[08:10:30.684] | : . ' , ; ` | : Generated cluster UUID
[08:10:30.684] | : . ' , ; ` | : Cluster UUID: ‘ca1af912135fe7eb656314353e0b580e’
[08:10:30.684] | : . ' , ; ` | : Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:10:30.687] | : . ' , ; ` | .makeCluster() ... done
[08:10:30.687] | : . ' , ; ` | Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:10:30.688] | : . ' , ; ` makeCluster(workers, ...) ... done
[08:10:30.688] | : . ' , ; ` Number of workers: 2
[08:10:30.689] | : . ' , ; ` Workers UUID: ‘ca1af912135fe7eb656314353e0b580e’
[08:10:30.689] | : . ' , ; Starting new cluster ... done
[08:10:30.689] | : . ' , ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ... done
[08:10:30.689] | : . ' , Backend: <‘MultisessionFutureBackend’, ‘ClusterFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:10:30.689] | : . ' MultisessionFutureBackend(workers = <workers>, interrupts = TRUE, ...) ... done
[08:10:30.689] | : . makeFutureBackend(<multisession>) ... done
[08:10:30.689] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:30.689] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:30.690] | : . plan(): nbrOfWorkers() = 2
[08:10:30.690] | : plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ... done
[08:10:30.690] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
- stdout = TRUE
[08:10:30.690] | future(..., label = NULL) ...
[08:10:30.690] | : lazy: FALSE
[08:10:30.690] | : stdout: TRUE
[08:10:30.690] | : conditions: [n=1] ‘condition’
[08:10:30.690] | : gc: FALSE
[08:10:30.690] | : earlySignal: FALSE
[08:10:30.691] | : getGlobalsAndPackages() ...
[08:10:30.691] | : . Searching for globals ...
[08:10:30.725] | : . ' globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[08:10:30.726] | : . Searching for globals ... done
[08:10:30.726] | : . Resolving globals: FALSE
[08:10:30.726] | : . Search for packages associated with the globals ...
[08:10:30.726] | : . ' Packages associated with globals: [2] ‘base’, ‘utils’
[08:10:30.727] | : . ' Packages: [2] ‘base’, ‘utils’
[08:10:30.727] | : . Search for packages associated with the globals ... done
[08:10:30.727] | : . Packages after dropping 'base': [1] ‘utils’
[08:10:30.727] | : . Packages after dropping non-attached packages: [1] ‘utils’
[08:10:30.727] | : . globals: [0] 
[08:10:30.727] | : . packages: [1] ‘utils’
[08:10:30.728] | : getGlobalsAndPackages() ... done
[08:10:30.728] | : run() for ‘Future’ (<unnamed-19>) ...
[08:10:30.728] | : . state: ‘created’
[08:10:30.728] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:30.728] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:30.728] | : . Using MultisessionFutureBackend ...
[08:10:30.729] | : . ' Number of futures since start: 0 (0 created, 0 launched, 0 finished)
[08:10:30.729] | : . ' Launching futures ...
[08:10:30.729] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:10:30.729] | : . ' , ; Workers: [n=2]
[08:10:30.729] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:10:30.731] | : . ' , ; FutureRegistry: ‘workers-ca1af912135fe7eb656314353e0b580e’
[08:10:30.731] | : . ' , ; requestWorker() ...
[08:10:30.732] | : . ' , ; ` requestNode() ...
[08:10:30.732] | : . ' , ; ` | Number of workers: 2
[08:10:30.732] | : . ' , ; ` | Polling for a free worker ...
[08:10:30.732] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ...
[08:10:30.732] | : . ' , ; ` | : . Created empty registry ‘workers-ca1af912135fe7eb656314353e0b580e’
[08:10:30.732] | : . ' , ; ` | : . Listing all futures
[08:10:30.732] | : . ' , ; ` | : . Number of registered futures: 0
[08:10:30.733] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ... done
[08:10:30.733] | : . ' , ; ` | : Total time: 0
[08:10:30.733] | : . ' , ; ` | Polling for a free worker ... done
[08:10:30.733] | : . ' , ; ` | FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ...
[08:10:30.733] | : . ' , ; ` | : Listing all futures
[08:10:30.733] | : . ' , ; ` | : Number of registered futures: 0
[08:10:30.733] | : . ' , ; ` | FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ... done
[08:10:30.733] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:10:30.734] | : . ' , ; ` | Index of first available worker: 1
[08:10:30.734] | : . ' , ; ` | Validate that the worker is functional ...
[08:10:30.801] | : . ' , ; ` | : Worker is functional
[08:10:30.801] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ...
[08:10:30.802] | : . ' , ; ` | : . Listing all futures
[08:10:30.802] | : . ' , ; ` | : . Number of registered futures: 0
[08:10:30.802] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ... done
[08:10:30.802] | : . ' , ; ` | Validate that the worker is functional ... done
[08:10:30.802] | : . ' , ; ` requestNode() ... done
[08:10:30.802] | : . ' , ; ` cluster node index: 1
[08:10:30.803] | : . ' , ; requestWorker() ... done
[08:10:30.803] | : . ' , ; eraseGlobalEnvironment() ...
[08:10:30.803] | : . ' , ; eraseGlobalEnvironment() ... done
[08:10:30.804] | : . ' , ; launchFuture() ...
[08:10:30.804] | : . ' , ; ` cluster node index: 1
[08:10:30.804] | : . ' , ; ` getFutureData() ...
[08:10:30.804] | : . ' , ; ` | getFutureCore() ...
[08:10:30.804] | : . ' , ; ` | : Packages needed by the future expression (n = 1): ‘utils’
[08:10:30.804] | : . ' , ; ` | getFutureCore() ... done
[08:10:30.804] | : . ' , ; ` | getFutureCapture() ...
[08:10:30.804] | : . ' , ; ` | getFutureCapture() ... done
[08:10:30.805] | : . ' , ; ` | getFutureContext() ...
[08:10:30.805] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:30.805] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:10:30.805] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:30.805] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:10:30.805] | : . ' , ; ` | getFutureContext() ... done
[08:10:30.806] | : . ' , ; ` getFutureData() ... done
[08:10:30.806] | : . ' , ; ` FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'add', earlySignal = 0) ...
[08:10:30.806] | : . ' , ; ` | Appended future to position #1
[08:10:30.806] | : . ' , ; ` | Number of registered futures: 1
[08:10:30.806] | : . ' , ; ` FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'add', earlySignal = 0) ... done
[08:10:30.807] | : . ' , ; launchFuture() ... done
[08:10:30.807] | : . ' , ; MultisessionFuture started
[08:10:30.807] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:10:30.807] | : . ' Launching futures ... done
[08:10:30.807] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:10:30.807] | : . Using MultisessionFutureBackend ... done
[08:10:30.807] | : run() for ‘Future’ (<unnamed-19>) ... done
[08:10:30.808] | future(..., label = NULL) ... done
[08:10:30.808] | result() for ClusterFuture ...
[08:10:30.808] | : assertValidConnection() ...
[08:10:30.808] | : . cluster node index: 1
[08:10:30.809] | : assertValidConnection() ... done
[08:10:30.809] | : receiveMessageFromWorker() for ClusterFuture ...
[08:10:30.809] | : . cluster node index: 1
[08:10:30.898] | : . [1] TRUE
[08:10:30.899] | : . received data:
[08:10:30.899] | : . List of 5
[08:10:30.899] | : .  $ type   : chr "VALUE"
[08:10:30.899] | : .  $ value  :List of 16
[08:10:30.899] | : .   ..$ value              : int 42
[08:10:30.899] | : .   ..$ visible            : logi TRUE
[08:10:30.899] | : .   ..$ stdout             : chr " [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n[26] 26 27 28 29 30 31 32 33 3"| __truncated__
[08:10:30.899] | : .   ..$ conditions         : list()
[08:10:30.899] | : .   ..$ rng                : logi FALSE
[08:10:30.899] | : .   ..$ seed               : NULL
[08:10:30.899] | : .   ..$ misuseGlobalEnv    : NULL
[08:10:30.899] | : .   ..$ misuseConnections  :List of 3
[08:10:30.899] | : .   .. ..$ added   : NULL
[08:10:30.899] | : .   .. ..$ removed : NULL
[08:10:30.899] | : .   .. ..$ replaced: NULL
[08:10:30.899] | : .   ..$ misuseDevices      : NULL
[08:10:30.899] | : .   ..$ misuseDefaultDevice: list()
[08:10:30.899] | : .   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:10:30"
[08:10:30.899] | : .   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:10:30"
[08:10:30.899] | : .   ..$ uuid               : chr [1:2] "8090913757941eb18ce8f3a29fec0ad8" "19"
[08:10:30.899] | : .   ..$ session_uuid       : chr "b0811201393476e7e7bdfdf2c839b627"
[08:10:30.899] | : .   .. ..- attr(*, "source")=List of 5
[08:10:30.899] | : .   .. .. ..$ host  : Named chr "285a5f234941"
[08:10:30.899] | : .   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:10:30.899] | : .   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:10:30.899] | : .   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:10:30.899] | : .   .. .. ..$ pid   : int 75684
[08:10:30.899] | : .   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:10:30"
[08:10:30.899] | : .   .. .. ..$ random: int 2147483647
[08:10:30.899] | : .   ..$ r_info             :List of 4
[08:10:30.899] | : .   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:10:30.899] | : .   .. .. ..$ : int [1:3] 4 5 0
[08:10:30.899] | : .   .. ..$ os           : chr "unix"
[08:10:30.899] | : .   .. ..$ os_name      : chr "Linux"
[08:10:30.899] | : .   .. ..$ captures_utf8: logi TRUE
[08:10:30.899] | : .   ..$ version            : chr "1.8"
[08:10:30.899] | : .   ..- attr(*, "class")= chr "FutureResult"
[08:10:30.899] | : .  $ success: logi TRUE
[08:10:30.899] | : .  $ time   : 'proc_time' Named num [1:5] 0.049 0.002 0.051 0 0
[08:10:30.899] | : .   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:10:30.899] | : .  $ tag    : NULL
[08:10:30.914] | : . Received FutureResult
[08:10:30.914] | : . FutureResult:
[08:10:30.914] | : . value: ‘integer’
[08:10:30.914] | : . visible: TRUE
[08:10:30.914] | : . stdout: character
[08:10:30.914] | : . conditions: [n = 0] 
[08:10:30.914] | : . RNG used: FALSE
[08:10:30.914] | : . duration: 0.04958963 secs (started 2025-06-17 08:10:30.848371)
[08:10:30.914] | : . version: 1.8
[08:10:30.914] | : . FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'remove', earlySignal = 0) ...
[08:10:30.914] | : . ' Removed future from position #1
[08:10:30.914] | : . ' Number of registered futures: 0
[08:10:30.915] | : . FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'remove', earlySignal = 0) ... done
[08:10:30.915] | : . Erased future from future backend
[08:10:30.915] | : . result() for ClusterFuture ...
[08:10:30.915] | : . ' result already collected: FutureResult
[08:10:30.915] | : . result() for ClusterFuture ... done
[08:10:30.915] | : . signalConditions() ...
[08:10:30.915] | : . ' include = ‘immediateCondition’
[08:10:30.915] | : . ' exclude = 
[08:10:30.915] | : . ' resignal = FALSE
[08:10:30.915] | : . ' Number of conditions: 0
[08:10:30.916] | : . '  int 0
[08:10:30.916] | : . signalConditions() ... done
[08:10:30.916] | : receiveMessageFromWorker() for ClusterFuture ... done
[08:10:30.916] | result() for ClusterFuture ... done
List of 16
 $ value              : int 42
 $ visible            : logi TRUE
 $ stdout             : chr " [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n[26] 26 27 28 29 30 31 32 33 3"| __truncated__
 $ conditions         : list()
 $ rng                : logi FALSE
 $ seed               : NULL
 $ misuseGlobalEnv    : NULL
 $ misuseConnections  :List of 3
  ..$ added   : NULL
  ..$ removed : NULL
  ..$ replaced: NULL
 $ misuseDevices      : NULL
 $ misuseDefaultDevice: list()
 $ started            : POSIXct[1:1], format: "2025-06-17 08:10:30"
 $ finished           : POSIXct[1:1], format: "2025-06-17 08:10:30"
 $ uuid               : chr [1:2] "8090913757941eb18ce8f3a29fec0ad8" "19"
 $ session_uuid       : chr "b0811201393476e7e7bdfdf2c839b627"
  ..- attr(*, "source")=List of 5
  .. ..$ host  : Named chr "285a5f234941"
  .. .. ..- attr(*, "names")= chr "HOSTNAME"
  .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
  .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
  .. ..$ pid   : int 75684
  .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:10:30"
  .. ..$ random: int 2147483647
 $ r_info             :List of 4
  ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
  .. ..$ : int [1:3] 4 5 0
  ..$ os           : chr "unix"
  ..$ os_name      : chr "Linux"
  ..$ captures_utf8: logi TRUE
 $ version            : chr "1.8"
 - attr(*, "class")= chr "FutureResult"
[08:10:30.925] | value() for MultisessionFuture (<unnamed-19>) ...
[08:10:30.925] | : result() for ClusterFuture ...
[08:10:30.926] | : . result already collected: FutureResult
[08:10:30.926] | : result() for ClusterFuture ... done
[08:10:30.926] | : result() for ClusterFuture ...
[08:10:30.926] | : . result already collected: FutureResult
[08:10:30.926] | : result() for ClusterFuture ... done
[08:10:30.926] | : signalConditions() ...
[08:10:30.926] | : . include = ‘immediateCondition’
[08:10:30.926] | : . exclude = 
[08:10:30.926] | : . resignal = FALSE
[08:10:30.927] | : . Number of conditions: 0
[08:10:30.927] | : .  int 0
[08:10:30.927] | : signalConditions() ... done
[08:10:30.927] | : relay stdout ...
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
 int [1:50] 1 2 3 4 5 6 7 8 9 10 ...
a-b-c-d-e-f-g-h-i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z1 2 3 4 5 6 
"Sepal.Length"	"Sepal.Width"	"Petal.Length"	"Petal.Width"	"Species"
"1"	5.1	3.5	1.4	0.2	"setosa"
"2"	4.9	3	1.4	0.2	"setosa"
"3"	4.7	3.2	1.3	0.2	"setosa"
"4"	4.6	3.1	1.5	0.2	"setosa"
"5"	5	3.6	1.4	0.2	"setosa"
"6"	5.4	3.9	1.7	0.4	"setosa"
"7"	4.6	3.4	1.4	0.3	"setosa"
"8"	5	3.4	1.5	0.2	"setosa"
"9"	4.4	2.9	1.4	0.2	"setosa"
"10"	4.9	3.1	1.5	0.1	"setosa"
[08:10:30.927] | : relay stdout ... done
[08:10:30.927] | : check for misuse ...
[08:10:30.927] | : check for misuse ... done
[08:10:30.928] | value() for MultisessionFuture (<unnamed-19>) ... done
FutureResult:
value: ‘integer’
visible: TRUE
stdout: character
conditions: [n = 0] 
RNG used: FALSE
duration: 0.04958963 secs (started 2025-06-17 08:10:30.848371)
version: 1.8
[08:10:30.928] | future(..., label = NULL) ...
[08:10:30.928] | : lazy: FALSE
[08:10:30.928] | : stdout: TRUE
[08:10:30.928] | : conditions: [n=1] ‘condition’
[08:10:30.928] | : gc: FALSE
[08:10:30.929] | : earlySignal: FALSE
[08:10:30.929] | : getGlobalsAndPackages() ...
[08:10:30.929] | : . Searching for globals ...
[08:10:30.957] | : . ' globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[08:10:30.957] | : . Searching for globals ... done
[08:10:30.957] | : . Resolving globals: FALSE
[08:10:30.957] | : . Search for packages associated with the globals ...
[08:10:30.957] | : . ' Packages associated with globals: [2] ‘base’, ‘utils’
[08:10:30.958] | : . ' Packages: [2] ‘base’, ‘utils’
[08:10:30.958] | : . Search for packages associated with the globals ... done
[08:10:30.958] | : . Packages after dropping 'base': [1] ‘utils’
[08:10:30.958] | : . Packages after dropping non-attached packages: [1] ‘utils’
[08:10:30.958] | : . globals: [0] 
[08:10:30.958] | : . packages: [1] ‘utils’
[08:10:30.959] | : getGlobalsAndPackages() ... done
[08:10:30.959] | : run() for ‘Future’ (<unnamed-20>) ...
[08:10:30.959] | : . state: ‘created’
[08:10:30.959] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:30.959] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:30.959] | : . Using MultisessionFutureBackend ...
[08:10:30.959] | : . ' Number of futures since start: 1 (1 created, 1 launched, 1 finished)
[08:10:30.960] | : . ' Launching futures ...
[08:10:30.960] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:10:30.960] | : . ' , ; Workers: [n=2]
[08:10:30.960] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:10:30.962] | : . ' , ; FutureRegistry: ‘workers-ca1af912135fe7eb656314353e0b580e’
[08:10:30.962] | : . ' , ; requestWorker() ...
[08:10:30.962] | : . ' , ; ` requestNode() ...
[08:10:30.962] | : . ' , ; ` | Number of workers: 2
[08:10:30.962] | : . ' , ; ` | Polling for a free worker ...
[08:10:30.962] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ...
[08:10:30.962] | : . ' , ; ` | : . Listing all futures
[08:10:30.962] | : . ' , ; ` | : . Number of registered futures: 0
[08:10:30.962] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ... done
[08:10:30.963] | : . ' , ; ` | : Total time: 0
[08:10:30.963] | : . ' , ; ` | Polling for a free worker ... done
[08:10:30.963] | : . ' , ; ` | FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ...
[08:10:30.963] | : . ' , ; ` | : Listing all futures
[08:10:30.963] | : . ' , ; ` | : Number of registered futures: 0
[08:10:30.963] | : . ' , ; ` | FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ... done
[08:10:30.963] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:10:30.963] | : . ' , ; ` | Index of first available worker: 1
[08:10:30.963] | : . ' , ; ` | Validate that the worker is functional ...
[08:10:31.019] | : . ' , ; ` | : Worker is functional
[08:10:31.019] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ...
[08:10:31.021] | : . ' , ; ` | : . Listing all futures
[08:10:31.021] | : . ' , ; ` | : . Number of registered futures: 0
[08:10:31.021] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ... done
[08:10:31.021] | : . ' , ; ` | Validate that the worker is functional ... done
[08:10:31.021] | : . ' , ; ` requestNode() ... done
[08:10:31.021] | : . ' , ; ` cluster node index: 1
[08:10:31.022] | : . ' , ; requestWorker() ... done
[08:10:31.022] | : . ' , ; eraseGlobalEnvironment() ...
[08:10:31.022] | : . ' , ; eraseGlobalEnvironment() ... done
[08:10:31.022] | : . ' , ; launchFuture() ...
[08:10:31.022] | : . ' , ; ` cluster node index: 1
[08:10:31.022] | : . ' , ; ` getFutureData() ...
[08:10:31.022] | : . ' , ; ` | getFutureCore() ...
[08:10:31.023] | : . ' , ; ` | : Packages needed by the future expression (n = 1): ‘utils’
[08:10:31.023] | : . ' , ; ` | getFutureCore() ... done
[08:10:31.023] | : . ' , ; ` | getFutureCapture() ...
[08:10:31.023] | : . ' , ; ` | getFutureCapture() ... done
[08:10:31.023] | : . ' , ; ` | getFutureContext() ...
[08:10:31.023] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:31.023] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:10:31.023] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:31.023] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:10:31.024] | : . ' , ; ` | getFutureContext() ... done
[08:10:31.024] | : . ' , ; ` getFutureData() ... done
[08:10:31.024] | : . ' , ; ` FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'add', earlySignal = 0) ...
[08:10:31.024] | : . ' , ; ` | Appended future to position #1
[08:10:31.024] | : . ' , ; ` | Number of registered futures: 1
[08:10:31.024] | : . ' , ; ` FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'add', earlySignal = 0) ... done
[08:10:31.025] | : . ' , ; launchFuture() ... done
[08:10:31.025] | : . ' , ; MultisessionFuture started
[08:10:31.025] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:10:31.025] | : . ' Launching futures ... done
[08:10:31.025] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:10:31.025] | : . Using MultisessionFutureBackend ... done
[08:10:31.025] | : run() for ‘Future’ (<unnamed-20>) ... done
[08:10:31.025] | future(..., label = NULL) ... done
[08:10:31.025] | value() for MultisessionFuture (<unnamed-20>) ...
[08:10:31.026] | : result() for ClusterFuture ...
[08:10:31.026] | : . assertValidConnection() ...
[08:10:31.026] | : . ' cluster node index: 1
[08:10:31.026] | : . assertValidConnection() ... done
[08:10:31.026] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:10:31.026] | : . ' cluster node index: 1
[08:10:31.069] | : . ' [1] TRUE
[08:10:31.069] | : . ' received data:
[08:10:31.069] | : . ' List of 5
[08:10:31.069] | : . '  $ type   : chr "VALUE"
[08:10:31.069] | : . '  $ value  :List of 16
[08:10:31.069] | : . '   ..$ value              : int 42
[08:10:31.069] | : . '   ..$ visible            : logi TRUE
[08:10:31.069] | : . '   ..$ stdout             : chr " [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n[26] 26 27 28 29 30 31 32 33 3"| __truncated__
[08:10:31.069] | : . '   ..$ conditions         : list()
[08:10:31.069] | : . '   ..$ rng                : logi FALSE
[08:10:31.069] | : . '   ..$ seed               : NULL
[08:10:31.069] | : . '   ..$ misuseGlobalEnv    : NULL
[08:10:31.069] | : . '   ..$ misuseConnections  :List of 3
[08:10:31.069] | : . '   .. ..$ added   : NULL
[08:10:31.069] | : . '   .. ..$ removed : NULL
[08:10:31.069] | : . '   .. ..$ replaced: NULL
[08:10:31.069] | : . '   ..$ misuseDevices      : NULL
[08:10:31.069] | : . '   ..$ misuseDefaultDevice: list()
[08:10:31.069] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:10:31"
[08:10:31.069] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:10:31"
[08:10:31.069] | : . '   ..$ uuid               : chr [1:2] "8090913757941eb18ce8f3a29fec0ad8" "20"
[08:10:31.069] | : . '   ..$ session_uuid       : chr "b0811201393476e7e7bdfdf2c839b627"
[08:10:31.069] | : . '   .. ..- attr(*, "source")=List of 5
[08:10:31.069] | : . '   .. .. ..$ host  : Named chr "285a5f234941"
[08:10:31.069] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:10:31.069] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:10:31.069] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:10:31.069] | : . '   .. .. ..$ pid   : int 75684
[08:10:31.069] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:10:30"
[08:10:31.069] | : . '   .. .. ..$ random: int 2147483647
[08:10:31.069] | : . '   ..$ r_info             :List of 4
[08:10:31.069] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:10:31.069] | : . '   .. .. ..$ : int [1:3] 4 5 0
[08:10:31.069] | : . '   .. ..$ os           : chr "unix"
[08:10:31.069] | : . '   .. ..$ os_name      : chr "Linux"
[08:10:31.069] | : . '   .. ..$ captures_utf8: logi TRUE
[08:10:31.069] | : . '   ..$ version            : chr "1.8"
[08:10:31.069] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:10:31.069] | : . '  $ success: logi TRUE
[08:10:31.069] | : . '  $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[08:10:31.069] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:10:31.069] | : . '  $ tag    : NULL
[08:10:31.080] | : . ' Received FutureResult
[08:10:31.080] | : . ' FutureResult:
[08:10:31.080] | : . ' value: ‘integer’
[08:10:31.080] | : . ' visible: TRUE
[08:10:31.080] | : . ' stdout: character
[08:10:31.080] | : . ' conditions: [n = 0] 
[08:10:31.080] | : . ' RNG used: FALSE
[08:10:31.080] | : . ' duration: 0.003443003 secs (started 2025-06-17 08:10:31.065221)
[08:10:31.080] | : . ' version: 1.8
[08:10:31.081] | : . ' FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'remove', earlySignal = 0) ...
[08:10:31.081] | : . ' , Removed future from position #1
[08:10:31.081] | : . ' , Number of registered futures: 0
[08:10:31.081] | : . ' FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'remove', earlySignal = 0) ... done
[08:10:31.081] | : . ' Erased future from future backend
[08:10:31.081] | : . ' result() for ClusterFuture ...
[08:10:31.081] | : . ' , result already collected: FutureResult
[08:10:31.081] | : . ' result() for ClusterFuture ... done
[08:10:31.082] | : . ' signalConditions() ...
[08:10:31.082] | : . ' , include = ‘immediateCondition’
[08:10:31.082] | : . ' , exclude = 
[08:10:31.082] | : . ' , resignal = FALSE
[08:10:31.082] | : . ' , Number of conditions: 0
[08:10:31.082] | : . ' ,  int 0
[08:10:31.082] | : . ' signalConditions() ... done
[08:10:31.083] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:10:31.083] | : result() for ClusterFuture ... done
[08:10:31.083] | : result() for ClusterFuture ...
[08:10:31.083] | : . result already collected: FutureResult
[08:10:31.083] | : result() for ClusterFuture ... done
[08:10:31.083] | : signalConditions() ...
[08:10:31.083] | : . include = ‘immediateCondition’
[08:10:31.083] | : . exclude = 
[08:10:31.083] | : . resignal = FALSE
[08:10:31.084] | : . Number of conditions: 0
[08:10:31.084] | : .  int 0
[08:10:31.084] | : signalConditions() ... done
[08:10:31.084] | : relay stdout ...
[08:10:31.084] | : relay stdout ... done
[08:10:31.084] | : check for misuse ...
[08:10:31.084] | : check for misuse ... done
[08:10:31.085] | value() for MultisessionFuture (<unnamed-20>) ... done
 [1] " [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25"  
 [2] "[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50"  
 [3] " int [1:50] 1 2 3 4 5 6 7 8 9 10 ..."                                             
 [4] "a-b-c-d-e-f-g-h-i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z1 2 3 4 5 6 "                  
 [5] "\"Sepal.Length\"\t\"Sepal.Width\"\t\"Petal.Length\"\t\"Petal.Width\"\t\"Species\""
 [6] "\"1\"\t5.1\t3.5\t1.4\t0.2\t\"setosa\""                                            
 [7] "\"2\"\t4.9\t3\t1.4\t0.2\t\"setosa\""                                              
 [8] "\"3\"\t4.7\t3.2\t1.3\t0.2\t\"setosa\""                                            
 [9] "\"4\"\t4.6\t3.1\t1.5\t0.2\t\"setosa\""                                            
[10] "\"5\"\t5\t3.6\t1.4\t0.2\t\"setosa\""                                              
[11] "\"6\"\t5.4\t3.9\t1.7\t0.4\t\"setosa\""                                            
[12] "\"7\"\t4.6\t3.4\t1.4\t0.3\t\"setosa\""                                            
[13] "\"8\"\t5\t3.4\t1.5\t0.2\t\"setosa\""                                              
[14] "\"9\"\t4.4\t2.9\t1.4\t0.2\t\"setosa\""                                            
[15] "\"10\"\t4.9\t3.1\t1.5\t0.1\t\"setosa\""                                           
- stdout = structure(TRUE, drop = TRUE)
[08:10:31.085] | future(..., label = NULL) ...
[08:10:31.085] | : lazy: FALSE
[08:10:31.085] | : stdout: TRUE
[08:10:31.085] | : conditions: [n=1] ‘condition’
[08:10:31.085] | : gc: FALSE
[08:10:31.085] | : earlySignal: FALSE
[08:10:31.085] | : getGlobalsAndPackages() ...
[08:10:31.086] | : . Searching for globals ...
[08:10:31.088] | : . ' globals found: [1] ‘print’
[08:10:31.089] | : . Searching for globals ... done
[08:10:31.089] | : . Resolving globals: FALSE
[08:10:31.089] | : . Search for packages associated with the globals ...
[08:10:31.089] | : . ' Packages associated with globals: [1] ‘base’
[08:10:31.089] | : . ' Packages: [1] ‘base’
[08:10:31.089] | : . Search for packages associated with the globals ... done
[08:10:31.089] | : . Packages after dropping 'base': [0] 
[08:10:31.090] | : . globals: [0] 
[08:10:31.090] | : . packages: [0] 
[08:10:31.090] | : getGlobalsAndPackages() ... done
[08:10:31.090] | : run() for ‘Future’ (<unnamed-21>) ...
[08:10:31.090] | : . state: ‘created’
[08:10:31.090] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:31.090] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:31.090] | : . Using MultisessionFutureBackend ...
[08:10:31.091] | : . ' Number of futures since start: 2 (2 created, 2 launched, 2 finished)
[08:10:31.091] | : . ' Launching futures ...
[08:10:31.091] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:10:31.091] | : . ' , ; Workers: [n=2]
[08:10:31.091] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:10:31.092] | : . ' , ; FutureRegistry: ‘workers-ca1af912135fe7eb656314353e0b580e’
[08:10:31.093] | : . ' , ; requestWorker() ...
[08:10:31.093] | : . ' , ; ` requestNode() ...
[08:10:31.093] | : . ' , ; ` | Number of workers: 2
[08:10:31.093] | : . ' , ; ` | Polling for a free worker ...
[08:10:31.093] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ...
[08:10:31.093] | : . ' , ; ` | : . Listing all futures
[08:10:31.093] | : . ' , ; ` | : . Number of registered futures: 0
[08:10:31.093] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ... done
[08:10:31.093] | : . ' , ; ` | : Total time: 0
[08:10:31.094] | : . ' , ; ` | Polling for a free worker ... done
[08:10:31.094] | : . ' , ; ` | FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ...
[08:10:31.094] | : . ' , ; ` | : Listing all futures
[08:10:31.094] | : . ' , ; ` | : Number of registered futures: 0
[08:10:31.094] | : . ' , ; ` | FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ... done
[08:10:31.094] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:10:31.094] | : . ' , ; ` | Index of first available worker: 1
[08:10:31.094] | : . ' , ; ` | Validate that the worker is functional ...
[08:10:31.188] | : . ' , ; ` | : Worker is functional
[08:10:31.188] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ...
[08:10:31.189] | : . ' , ; ` | : . Listing all futures
[08:10:31.189] | : . ' , ; ` | : . Number of registered futures: 0
[08:10:31.189] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ... done
[08:10:31.189] | : . ' , ; ` | Validate that the worker is functional ... done
[08:10:31.189] | : . ' , ; ` requestNode() ... done
[08:10:31.189] | : . ' , ; ` cluster node index: 1
[08:10:31.189] | : . ' , ; requestWorker() ... done
[08:10:31.189] | : . ' , ; eraseGlobalEnvironment() ...
[08:10:31.190] | : . ' , ; eraseGlobalEnvironment() ... done
[08:10:31.190] | : . ' , ; launchFuture() ...
[08:10:31.190] | : . ' , ; ` cluster node index: 1
[08:10:31.190] | : . ' , ; ` getFutureData() ...
[08:10:31.190] | : . ' , ; ` | getFutureCore() ...
[08:10:31.190] | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:10:31.190] | : . ' , ; ` | getFutureCore() ... done
[08:10:31.191] | : . ' , ; ` | getFutureCapture() ...
[08:10:31.191] | : . ' , ; ` | getFutureCapture() ... done
[08:10:31.191] | : . ' , ; ` | getFutureContext() ...
[08:10:31.191] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:31.191] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:10:31.191] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:31.191] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:10:31.191] | : . ' , ; ` | getFutureContext() ... done
[08:10:31.192] | : . ' , ; ` getFutureData() ... done
[08:10:31.192] | : . ' , ; ` FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'add', earlySignal = 0) ...
[08:10:31.192] | : . ' , ; ` | Appended future to position #1
[08:10:31.192] | : . ' , ; ` | Number of registered futures: 1
[08:10:31.192] | : . ' , ; ` FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'add', earlySignal = 0) ... done
[08:10:31.192] | : . ' , ; launchFuture() ... done
[08:10:31.192] | : . ' , ; MultisessionFuture started
[08:10:31.192] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:10:31.193] | : . ' Launching futures ... done
[08:10:31.193] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:10:31.193] | : . Using MultisessionFutureBackend ... done
[08:10:31.193] | : run() for ‘Future’ (<unnamed-21>) ... done
[08:10:31.193] | future(..., label = NULL) ... done
[08:10:31.193] | result() for ClusterFuture ...
[08:10:31.193] | : assertValidConnection() ...
[08:10:31.193] | : . cluster node index: 1
[08:10:31.194] | : assertValidConnection() ... done
[08:10:31.194] | : receiveMessageFromWorker() for ClusterFuture ...
[08:10:31.194] | : . cluster node index: 1
[08:10:31.239] | : . [1] TRUE
[08:10:31.239] | : . received data:
[08:10:31.239] | : . List of 5
[08:10:31.239] | : .  $ type   : chr "VALUE"
[08:10:31.239] | : .  $ value  :List of 16
[08:10:31.239] | : .   ..$ value              : num 42
[08:10:31.239] | : .   ..$ visible            : logi FALSE
[08:10:31.239] | : .   ..$ stdout             : chr "[1] 42\n"
[08:10:31.239] | : .   ..$ conditions         : list()
[08:10:31.239] | : .   ..$ rng                : logi FALSE
[08:10:31.239] | : .   ..$ seed               : NULL
[08:10:31.239] | : .   ..$ misuseGlobalEnv    : NULL
[08:10:31.239] | : .   ..$ misuseConnections  :List of 3
[08:10:31.239] | : .   .. ..$ added   : NULL
[08:10:31.239] | : .   .. ..$ removed : NULL
[08:10:31.239] | : .   .. ..$ replaced: NULL
[08:10:31.239] | : .   ..$ misuseDevices      : NULL
[08:10:31.239] | : .   ..$ misuseDefaultDevice: list()
[08:10:31.239] | : .   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:10:31"
[08:10:31.239] | : .   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:10:31"
[08:10:31.239] | : .   ..$ uuid               : chr [1:2] "8090913757941eb18ce8f3a29fec0ad8" "21"
[08:10:31.239] | : .   ..$ session_uuid       : chr "b0811201393476e7e7bdfdf2c839b627"
[08:10:31.239] | : .   .. ..- attr(*, "source")=List of 5
[08:10:31.239] | : .   .. .. ..$ host  : Named chr "285a5f234941"
[08:10:31.239] | : .   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:10:31.239] | : .   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:10:31.239] | : .   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:10:31.239] | : .   .. .. ..$ pid   : int 75684
[08:10:31.239] | : .   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:10:30"
[08:10:31.239] | : .   .. .. ..$ random: int 2147483647
[08:10:31.239] | : .   ..$ r_info             :List of 4
[08:10:31.239] | : .   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:10:31.239] | : .   .. .. ..$ : int [1:3] 4 5 0
[08:10:31.239] | : .   .. ..$ os           : chr "unix"
[08:10:31.239] | : .   .. ..$ os_name      : chr "Linux"
[08:10:31.239] | : .   .. ..$ captures_utf8: logi TRUE
[08:10:31.239] | : .   ..$ version            : chr "1.8"
[08:10:31.239] | : .   ..- attr(*, "class")= chr "FutureResult"
[08:10:31.239] | : .  $ success: logi TRUE
[08:10:31.239] | : .  $ time   : 'proc_time' Named num [1:5] 0.006 0 0.005 0 0
[08:10:31.239] | : .   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:10:31.239] | : .  $ tag    : NULL
[08:10:31.250] | : . Received FutureResult
[08:10:31.250] | : . FutureResult:
[08:10:31.250] | : . value: ‘numeric’
[08:10:31.250] | : . visible: FALSE
[08:10:31.250] | : . stdout: character
[08:10:31.250] | : . conditions: [n = 0] 
[08:10:31.250] | : . RNG used: FALSE
[08:10:31.250] | : . duration: 0.005412102 secs (started 2025-06-17 08:10:31.233157)
[08:10:31.250] | : . version: 1.8
[08:10:31.251] | : . FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'remove', earlySignal = 0) ...
[08:10:31.251] | : . ' Removed future from position #1
[08:10:31.251] | : . ' Number of registered futures: 0
[08:10:31.251] | : . FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'remove', earlySignal = 0) ... done
[08:10:31.251] | : . Erased future from future backend
[08:10:31.251] | : . result() for ClusterFuture ...
[08:10:31.251] | : . ' result already collected: FutureResult
[08:10:31.251] | : . result() for ClusterFuture ... done
[08:10:31.252] | : . signalConditions() ...
[08:10:31.252] | : . ' include = ‘immediateCondition’
[08:10:31.252] | : . ' exclude = 
[08:10:31.252] | : . ' resignal = FALSE
[08:10:31.252] | : . ' Number of conditions: 0
[08:10:31.252] | : . '  int 0
[08:10:31.252] | : . signalConditions() ... done
[08:10:31.252] | : receiveMessageFromWorker() for ClusterFuture ... done
[08:10:31.253] | result() for ClusterFuture ... done
[08:10:31.253] | value() for MultisessionFuture (<unnamed-21>) ...
[08:10:31.253] | : result() for ClusterFuture ...
[08:10:31.253] | : . result already collected: FutureResult
[08:10:31.253] | : result() for ClusterFuture ... done
[08:10:31.253] | : result() for ClusterFuture ...
[08:10:31.253] | : . result already collected: FutureResult
[08:10:31.253] | : result() for ClusterFuture ... done
[08:10:31.253] | : signalConditions() ...
[08:10:31.254] | : . include = ‘immediateCondition’
[08:10:31.254] | : . exclude = 
[08:10:31.254] | : . resignal = FALSE
[08:10:31.254] | : . Number of conditions: 0
[08:10:31.254] | : .  int 0
[08:10:31.254] | : signalConditions() ... done
[08:10:31.254] | : relay stdout ...
[1] 42
[08:10:31.255] | : relay stdout ... done
[08:10:31.255] | : check for misuse ...
[08:10:31.255] | : check for misuse ... done
[08:10:31.255] | value() for MultisessionFuture (<unnamed-21>) ... done
[08:10:31.255] | result() for ClusterFuture ...
[08:10:31.255] | : result already collected: FutureResult
[08:10:31.255] | result() for ClusterFuture ... done
- stdout = FALSE
[08:10:31.255] | future(..., label = NULL) ...
[08:10:31.255] | : lazy: FALSE
[08:10:31.255] | : stdout: FALSE
[08:10:31.256] | : conditions: [n=1] ‘condition’
[08:10:31.256] | : gc: FALSE
[08:10:31.256] | : earlySignal: FALSE
[08:10:31.256] | : getGlobalsAndPackages() ...
[08:10:31.256] | : . Searching for globals ...
[08:10:31.286] | : . ' globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[08:10:31.286] | : . Searching for globals ... done
[08:10:31.286] | : . Resolving globals: FALSE
[08:10:31.286] | : . Search for packages associated with the globals ...
[08:10:31.286] | : . ' Packages associated with globals: [2] ‘base’, ‘utils’
[08:10:31.287] | : . ' Packages: [2] ‘base’, ‘utils’
[08:10:31.287] | : . Search for packages associated with the globals ... done
[08:10:31.287] | : . Packages after dropping 'base': [1] ‘utils’
[08:10:31.287] | : . Packages after dropping non-attached packages: [1] ‘utils’
[08:10:31.287] | : . globals: [0] 
[08:10:31.287] | : . packages: [1] ‘utils’
[08:10:31.288] | : getGlobalsAndPackages() ... done
[08:10:31.288] | : run() for ‘Future’ (<unnamed-22>) ...
[08:10:31.288] | : . state: ‘created’
[08:10:31.288] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:31.288] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:31.288] | : . Using MultisessionFutureBackend ...
[08:10:31.288] | : . ' Number of futures since start: 3 (3 created, 3 launched, 3 finished)
[08:10:31.288] | : . ' Launching futures ...
[08:10:31.289] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:10:31.289] | : . ' , ; Workers: [n=2]
[08:10:31.289] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:10:31.290] | : . ' , ; FutureRegistry: ‘workers-ca1af912135fe7eb656314353e0b580e’
[08:10:31.290] | : . ' , ; requestWorker() ...
[08:10:31.291] | : . ' , ; ` requestNode() ...
[08:10:31.291] | : . ' , ; ` | Number of workers: 2
[08:10:31.291] | : . ' , ; ` | Polling for a free worker ...
[08:10:31.291] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ...
[08:10:31.291] | : . ' , ; ` | : . Listing all futures
[08:10:31.291] | : . ' , ; ` | : . Number of registered futures: 0
[08:10:31.291] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ... done
[08:10:31.291] | : . ' , ; ` | : Total time: 0
[08:10:31.291] | : . ' , ; ` | Polling for a free worker ... done
[08:10:31.292] | : . ' , ; ` | FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ...
[08:10:31.292] | : . ' , ; ` | : Listing all futures
[08:10:31.292] | : . ' , ; ` | : Number of registered futures: 0
[08:10:31.292] | : . ' , ; ` | FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ... done
[08:10:31.292] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:10:31.292] | : . ' , ; ` | Index of first available worker: 1
[08:10:31.292] | : . ' , ; ` | Validate that the worker is functional ...
[08:10:31.385] | : . ' , ; ` | : Worker is functional
[08:10:31.385] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ...
[08:10:31.385] | : . ' , ; ` | : . Listing all futures
[08:10:31.386] | : . ' , ; ` | : . Number of registered futures: 0
[08:10:31.386] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ... done
[08:10:31.386] | : . ' , ; ` | Validate that the worker is functional ... done
[08:10:31.386] | : . ' , ; ` requestNode() ... done
[08:10:31.386] | : . ' , ; ` cluster node index: 1
[08:10:31.386] | : . ' , ; requestWorker() ... done
[08:10:31.386] | : . ' , ; eraseGlobalEnvironment() ...
[08:10:31.387] | : . ' , ; eraseGlobalEnvironment() ... done
[08:10:31.387] | : . ' , ; launchFuture() ...
[08:10:31.387] | : . ' , ; ` cluster node index: 1
[08:10:31.387] | : . ' , ; ` getFutureData() ...
[08:10:31.387] | : . ' , ; ` | getFutureCore() ...
[08:10:31.387] | : . ' , ; ` | : Packages needed by the future expression (n = 1): ‘utils’
[08:10:31.387] | : . ' , ; ` | getFutureCore() ... done
[08:10:31.387] | : . ' , ; ` | getFutureCapture() ...
[08:10:31.387] | : . ' , ; ` | getFutureCapture() ... done
[08:10:31.388] | : . ' , ; ` | getFutureContext() ...
[08:10:31.388] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:31.388] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:10:31.388] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:31.388] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:10:31.388] | : . ' , ; ` | getFutureContext() ... done
[08:10:31.388] | : . ' , ; ` getFutureData() ... done
[08:10:31.389] | : . ' , ; ` FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'add', earlySignal = 0) ...
[08:10:31.389] | : . ' , ; ` | Appended future to position #1
[08:10:31.389] | : . ' , ; ` | Number of registered futures: 1
[08:10:31.389] | : . ' , ; ` FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'add', earlySignal = 0) ... done
[08:10:31.389] | : . ' , ; launchFuture() ... done
[08:10:31.389] | : . ' , ; MultisessionFuture started
[08:10:31.389] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:10:31.389] | : . ' Launching futures ... done
[08:10:31.389] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:10:31.390] | : . Using MultisessionFutureBackend ... done
[08:10:31.390] | : run() for ‘Future’ (<unnamed-22>) ... done
[08:10:31.390] | future(..., label = NULL) ... done
[08:10:31.390] | result() for ClusterFuture ...
[08:10:31.390] | : assertValidConnection() ...
[08:10:31.390] | : . cluster node index: 1
[08:10:31.390] | : assertValidConnection() ... done
[08:10:31.391] | : receiveMessageFromWorker() for ClusterFuture ...
[08:10:31.391] | : . cluster node index: 1
[08:10:31.434] | : . [1] TRUE
[08:10:31.434] | : . received data:
[08:10:31.434] | : . List of 5
[08:10:31.434] | : .  $ type   : chr "VALUE"
[08:10:31.434] | : .  $ value  :List of 16
[08:10:31.434] | : .   ..$ value              : int 42
[08:10:31.434] | : .   ..$ visible            : logi TRUE
[08:10:31.434] | : .   ..$ stdout             : NULL
[08:10:31.434] | : .   ..$ conditions         : list()
[08:10:31.434] | : .   ..$ rng                : logi FALSE
[08:10:31.434] | : .   ..$ seed               : NULL
[08:10:31.434] | : .   ..$ misuseGlobalEnv    : NULL
[08:10:31.434] | : .   ..$ misuseConnections  :List of 3
[08:10:31.434] | : .   .. ..$ added   : NULL
[08:10:31.434] | : .   .. ..$ removed : NULL
[08:10:31.434] | : .   .. ..$ replaced: NULL
[08:10:31.434] | : .   ..$ misuseDevices      : NULL
[08:10:31.434] | : .   ..$ misuseDefaultDevice: list()
[08:10:31.434] | : .   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:10:31"
[08:10:31.434] | : .   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:10:31"
[08:10:31.434] | : .   ..$ uuid               : chr [1:2] "8090913757941eb18ce8f3a29fec0ad8" "22"
[08:10:31.434] | : .   ..$ session_uuid       : chr "b0811201393476e7e7bdfdf2c839b627"
[08:10:31.434] | : .   .. ..- attr(*, "source")=List of 5
[08:10:31.434] | : .   .. .. ..$ host  : Named chr "285a5f234941"
[08:10:31.434] | : .   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:10:31.434] | : .   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:10:31.434] | : .   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:10:31.434] | : .   .. .. ..$ pid   : int 75684
[08:10:31.434] | : .   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:10:30"
[08:10:31.434] | : .   .. .. ..$ random: int 2147483647
[08:10:31.434] | : .   ..$ r_info             :List of 4
[08:10:31.434] | : .   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:10:31.434] | : .   .. .. ..$ : int [1:3] 4 5 0
[08:10:31.434] | : .   .. ..$ os           : chr "unix"
[08:10:31.434] | : .   .. ..$ os_name      : chr "Linux"
[08:10:31.434] | : .   .. ..$ captures_utf8: logi TRUE
[08:10:31.434] | : .   ..$ version            : chr "1.8"
[08:10:31.434] | : .   ..- attr(*, "class")= chr "FutureResult"
[08:10:31.434] | : .  $ success: logi TRUE
[08:10:31.434] | : .  $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[08:10:31.434] | : .   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:10:31.434] | : .  $ tag    : NULL
[08:10:31.445] | : . Received FutureResult
[08:10:31.445] | : . FutureResult:
[08:10:31.445] | : . value: ‘integer’
[08:10:31.445] | : . visible: TRUE
[08:10:31.445] | : . stdout: NULL
[08:10:31.445] | : . conditions: [n = 0] 
[08:10:31.445] | : . RNG used: FALSE
[08:10:31.445] | : . duration: 0.003465414 secs (started 2025-06-17 08:10:31.430232)
[08:10:31.445] | : . version: 1.8
[08:10:31.445] | : . FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'remove', earlySignal = 0) ...
[08:10:31.446] | : . ' Removed future from position #1
[08:10:31.446] | : . ' Number of registered futures: 0
[08:10:31.446] | : . FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'remove', earlySignal = 0) ... done
[08:10:31.446] | : . Erased future from future backend
[08:10:31.446] | : . result() for ClusterFuture ...
[08:10:31.446] | : . ' result already collected: FutureResult
[08:10:31.446] | : . result() for ClusterFuture ... done
[08:10:31.446] | : . signalConditions() ...
[08:10:31.447] | : . ' include = ‘immediateCondition’
[08:10:31.447] | : . ' exclude = 
[08:10:31.447] | : . ' resignal = FALSE
[08:10:31.447] | : . ' Number of conditions: 0
[08:10:31.447] | : . '  int 0
[08:10:31.447] | : . signalConditions() ... done
[08:10:31.447] | : receiveMessageFromWorker() for ClusterFuture ... done
[08:10:31.448] | result() for ClusterFuture ... done
List of 16
 $ value              : int 42
 $ visible            : logi TRUE
 $ stdout             : NULL
 $ conditions         : list()
 $ rng                : logi FALSE
 $ seed               : NULL
 $ misuseGlobalEnv    : NULL
 $ misuseConnections  :List of 3
  ..$ added   : NULL
  ..$ removed : NULL
  ..$ replaced: NULL
 $ misuseDevices      : NULL
 $ misuseDefaultDevice: list()
 $ started            : POSIXct[1:1], format: "2025-06-17 08:10:31"
 $ finished           : POSIXct[1:1], format: "2025-06-17 08:10:31"
 $ uuid               : chr [1:2] "8090913757941eb18ce8f3a29fec0ad8" "22"
 $ session_uuid       : chr "b0811201393476e7e7bdfdf2c839b627"
  ..- attr(*, "source")=List of 5
  .. ..$ host  : Named chr "285a5f234941"
  .. .. ..- attr(*, "names")= chr "HOSTNAME"
  .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
  .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
  .. ..$ pid   : int 75684
  .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:10:30"
  .. ..$ random: int 2147483647
 $ r_info             :List of 4
  ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
  .. ..$ : int [1:3] 4 5 0
  ..$ os           : chr "unix"
  ..$ os_name      : chr "Linux"
  ..$ captures_utf8: logi TRUE
 $ version            : chr "1.8"
 - attr(*, "class")= chr "FutureResult"
[08:10:31.457] | value() for MultisessionFuture (<unnamed-22>) ...
[08:10:31.457] | : result() for ClusterFuture ...
[08:10:31.457] | : . result already collected: FutureResult
[08:10:31.457] | : result() for ClusterFuture ... done
[08:10:31.457] | : result() for ClusterFuture ...
[08:10:31.457] | : . result already collected: FutureResult
[08:10:31.457] | : result() for ClusterFuture ... done
[08:10:31.458] | : signalConditions() ...
[08:10:31.458] | : . include = ‘immediateCondition’
[08:10:31.458] | : . exclude = 
[08:10:31.458] | : . resignal = FALSE
[08:10:31.458] | : . Number of conditions: 0
[08:10:31.458] | : .  int 0
[08:10:31.458] | : signalConditions() ... done
[08:10:31.458] | : relay stdout ...
[08:10:31.459] | : relay stdout ... done
[08:10:31.459] | : check for misuse ...
[08:10:31.459] | : check for misuse ... done
[08:10:31.459] | value() for MultisessionFuture (<unnamed-22>) ... done
[08:10:31.459] | future(..., label = NULL) ...
[08:10:31.459] | : lazy: FALSE
[08:10:31.459] | : stdout: FALSE
[08:10:31.459] | : conditions: [n=1] ‘condition’
[08:10:31.460] | : gc: FALSE
[08:10:31.460] | : earlySignal: FALSE
[08:10:31.460] | : getGlobalsAndPackages() ...
[08:10:31.460] | : . Searching for globals ...
[08:10:31.490] | : . ' globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[08:10:31.490] | : . Searching for globals ... done
[08:10:31.490] | : . Resolving globals: FALSE
[08:10:31.490] | : . Search for packages associated with the globals ...
[08:10:31.490] | : . ' Packages associated with globals: [2] ‘base’, ‘utils’
[08:10:31.491] | : . ' Packages: [2] ‘base’, ‘utils’
[08:10:31.491] | : . Search for packages associated with the globals ... done
[08:10:31.491] | : . Packages after dropping 'base': [1] ‘utils’
[08:10:31.491] | : . Packages after dropping non-attached packages: [1] ‘utils’
[08:10:31.491] | : . globals: [0] 
[08:10:31.491] | : . packages: [1] ‘utils’
[08:10:31.491] | : getGlobalsAndPackages() ... done
[08:10:31.492] | : run() for ‘Future’ (<unnamed-23>) ...
[08:10:31.492] | : . state: ‘created’
[08:10:31.492] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:31.492] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:31.492] | : . Using MultisessionFutureBackend ...
[08:10:31.492] | : . ' Number of futures since start: 4 (4 created, 4 launched, 4 finished)
[08:10:31.492] | : . ' Launching futures ...
[08:10:31.493] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:10:31.493] | : . ' , ; Workers: [n=2]
[08:10:31.493] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:10:31.494] | : . ' , ; FutureRegistry: ‘workers-ca1af912135fe7eb656314353e0b580e’
[08:10:31.494] | : . ' , ; requestWorker() ...
[08:10:31.494] | : . ' , ; ` requestNode() ...
[08:10:31.495] | : . ' , ; ` | Number of workers: 2
[08:10:31.495] | : . ' , ; ` | Polling for a free worker ...
[08:10:31.495] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ...
[08:10:31.495] | : . ' , ; ` | : . Listing all futures
[08:10:31.495] | : . ' , ; ` | : . Number of registered futures: 0
[08:10:31.495] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ... done
[08:10:31.495] | : . ' , ; ` | : Total time: 0
[08:10:31.495] | : . ' , ; ` | Polling for a free worker ... done
[08:10:31.495] | : . ' , ; ` | FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ...
[08:10:31.495] | : . ' , ; ` | : Listing all futures
[08:10:31.496] | : . ' , ; ` | : Number of registered futures: 0
[08:10:31.496] | : . ' , ; ` | FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ... done
[08:10:31.496] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:10:31.496] | : . ' , ; ` | Index of first available worker: 1
[08:10:31.496] | : . ' , ; ` | Validate that the worker is functional ...
[08:10:31.590] | : . ' , ; ` | : Worker is functional
[08:10:31.590] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ...
[08:10:31.590] | : . ' , ; ` | : . Listing all futures
[08:10:31.591] | : . ' , ; ` | : . Number of registered futures: 0
[08:10:31.591] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ... done
[08:10:31.591] | : . ' , ; ` | Validate that the worker is functional ... done
[08:10:31.591] | : . ' , ; ` requestNode() ... done
[08:10:31.591] | : . ' , ; ` cluster node index: 1
[08:10:31.591] | : . ' , ; requestWorker() ... done
[08:10:31.591] | : . ' , ; eraseGlobalEnvironment() ...
[08:10:31.592] | : . ' , ; eraseGlobalEnvironment() ... done
[08:10:31.592] | : . ' , ; launchFuture() ...
[08:10:31.592] | : . ' , ; ` cluster node index: 1
[08:10:31.592] | : . ' , ; ` getFutureData() ...
[08:10:31.592] | : . ' , ; ` | getFutureCore() ...
[08:10:31.592] | : . ' , ; ` | : Packages needed by the future expression (n = 1): ‘utils’
[08:10:31.592] | : . ' , ; ` | getFutureCore() ... done
[08:10:31.592] | : . ' , ; ` | getFutureCapture() ...
[08:10:31.593] | : . ' , ; ` | getFutureCapture() ... done
[08:10:31.593] | : . ' , ; ` | getFutureContext() ...
[08:10:31.593] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:31.593] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:10:31.593] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:31.593] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:10:31.593] | : . ' , ; ` | getFutureContext() ... done
[08:10:31.593] | : . ' , ; ` getFutureData() ... done
[08:10:31.594] | : . ' , ; ` FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'add', earlySignal = 0) ...
[08:10:31.594] | : . ' , ; ` | Appended future to position #1
[08:10:31.594] | : . ' , ; ` | Number of registered futures: 1
[08:10:31.594] | : . ' , ; ` FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'add', earlySignal = 0) ... done
[08:10:31.594] | : . ' , ; launchFuture() ... done
[08:10:31.594] | : . ' , ; MultisessionFuture started
[08:10:31.594] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:10:31.594] | : . ' Launching futures ... done
[08:10:31.594] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:10:31.595] | : . Using MultisessionFutureBackend ... done
[08:10:31.595] | : run() for ‘Future’ (<unnamed-23>) ... done
[08:10:31.595] | future(..., label = NULL) ... done
[08:10:31.595] | value() for MultisessionFuture (<unnamed-23>) ...
[08:10:31.595] | : result() for ClusterFuture ...
[08:10:31.595] | : . assertValidConnection() ...
[08:10:31.596] | : . ' cluster node index: 1
[08:10:31.596] | : . assertValidConnection() ... done
[08:10:31.596] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:10:31.596] | : . ' cluster node index: 1
[08:10:31.639] | : . ' [1] TRUE
[08:10:31.639] | : . ' received data:
[08:10:31.639] | : . ' List of 5
[08:10:31.639] | : . '  $ type   : chr "VALUE"
[08:10:31.639] | : . '  $ value  :List of 16
[08:10:31.639] | : . '   ..$ value              : int 42
[08:10:31.639] | : . '   ..$ visible            : logi TRUE
[08:10:31.639] | : . '   ..$ stdout             : NULL
[08:10:31.639] | : . '   ..$ conditions         : list()
[08:10:31.639] | : . '   ..$ rng                : logi FALSE
[08:10:31.639] | : . '   ..$ seed               : NULL
[08:10:31.639] | : . '   ..$ misuseGlobalEnv    : NULL
[08:10:31.639] | : . '   ..$ misuseConnections  :List of 3
[08:10:31.639] | : . '   .. ..$ added   : NULL
[08:10:31.639] | : . '   .. ..$ removed : NULL
[08:10:31.639] | : . '   .. ..$ replaced: NULL
[08:10:31.639] | : . '   ..$ misuseDevices      : NULL
[08:10:31.639] | : . '   ..$ misuseDefaultDevice: list()
[08:10:31.639] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:10:31"
[08:10:31.639] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:10:31"
[08:10:31.639] | : . '   ..$ uuid               : chr [1:2] "8090913757941eb18ce8f3a29fec0ad8" "23"
[08:10:31.639] | : . '   ..$ session_uuid       : chr "b0811201393476e7e7bdfdf2c839b627"
[08:10:31.639] | : . '   .. ..- attr(*, "source")=List of 5
[08:10:31.639] | : . '   .. .. ..$ host  : Named chr "285a5f234941"
[08:10:31.639] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:10:31.639] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:10:31.639] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:10:31.639] | : . '   .. .. ..$ pid   : int 75684
[08:10:31.639] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:10:30"
[08:10:31.639] | : . '   .. .. ..$ random: int 2147483647
[08:10:31.639] | : . '   ..$ r_info             :List of 4
[08:10:31.639] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:10:31.639] | : . '   .. .. ..$ : int [1:3] 4 5 0
[08:10:31.639] | : . '   .. ..$ os           : chr "unix"
[08:10:31.639] | : . '   .. ..$ os_name      : chr "Linux"
[08:10:31.639] | : . '   .. ..$ captures_utf8: logi TRUE
[08:10:31.639] | : . '   ..$ version            : chr "1.8"
[08:10:31.639] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:10:31.639] | : . '  $ success: logi TRUE
[08:10:31.639] | : . '  $ time   : 'proc_time' Named num [1:5] 0.003 0 0.004 0 0
[08:10:31.639] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:10:31.639] | : . '  $ tag    : NULL
[08:10:31.650] | : . ' Received FutureResult
[08:10:31.650] | : . ' FutureResult:
[08:10:31.650] | : . ' value: ‘integer’
[08:10:31.650] | : . ' visible: TRUE
[08:10:31.650] | : . ' stdout: NULL
[08:10:31.650] | : . ' conditions: [n = 0] 
[08:10:31.650] | : . ' RNG used: FALSE
[08:10:31.650] | : . ' duration: 0.003571987 secs (started 2025-06-17 08:10:31.635205)
[08:10:31.650] | : . ' version: 1.8
[08:10:31.651] | : . ' FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'remove', earlySignal = 0) ...
[08:10:31.651] | : . ' , Removed future from position #1
[08:10:31.651] | : . ' , Number of registered futures: 0
[08:10:31.651] | : . ' FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'remove', earlySignal = 0) ... done
[08:10:31.651] | : . ' Erased future from future backend
[08:10:31.651] | : . ' result() for ClusterFuture ...
[08:10:31.651] | : . ' , result already collected: FutureResult
[08:10:31.652] | : . ' result() for ClusterFuture ... done
[08:10:31.652] | : . ' signalConditions() ...
[08:10:31.652] | : . ' , include = ‘immediateCondition’
[08:10:31.652] | : . ' , exclude = 
[08:10:31.652] | : . ' , resignal = FALSE
[08:10:31.652] | : . ' , Number of conditions: 0
[08:10:31.652] | : . ' ,  int 0
[08:10:31.653] | : . ' signalConditions() ... done
[08:10:31.653] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:10:31.653] | : result() for ClusterFuture ... done
[08:10:31.653] | : result() for ClusterFuture ...
[08:10:31.653] | : . result already collected: FutureResult
[08:10:31.653] | : result() for ClusterFuture ... done
[08:10:31.653] | : signalConditions() ...
[08:10:31.653] | : . include = ‘immediateCondition’
[08:10:31.653] | : . exclude = 
[08:10:31.653] | : . resignal = FALSE
[08:10:31.654] | : . Number of conditions: 0
[08:10:31.654] | : .  int 0
[08:10:31.654] | : signalConditions() ... done
[08:10:31.654] | : relay stdout ...
[08:10:31.654] | : relay stdout ... done
[08:10:31.654] | : check for misuse ...
[08:10:31.654] | : check for misuse ... done
[08:10:31.655] | value() for MultisessionFuture (<unnamed-23>) ... done
- stdout = structure(TRUE, drop = TRUE)
[08:10:31.655] | future(..., label = NULL) ...
[08:10:31.655] | : lazy: FALSE
[08:10:31.655] | : stdout: TRUE
[08:10:31.655] | : conditions: [n=1] ‘condition’
[08:10:31.655] | : gc: FALSE
[08:10:31.655] | : earlySignal: FALSE
[08:10:31.655] | : getGlobalsAndPackages() ...
[08:10:31.655] | : . Searching for globals ...
[08:10:31.660] | : . ' globals found: [1] ‘print’
[08:10:31.660] | : . Searching for globals ... done
[08:10:31.660] | : . Resolving globals: FALSE
[08:10:31.660] | : . Search for packages associated with the globals ...
[08:10:31.661] | : . ' Packages associated with globals: [1] ‘base’
[08:10:31.661] | : . ' Packages: [1] ‘base’
[08:10:31.661] | : . Search for packages associated with the globals ... done
[08:10:31.661] | : . Packages after dropping 'base': [0] 
[08:10:31.661] | : . globals: [0] 
[08:10:31.661] | : . packages: [0] 
[08:10:31.661] | : getGlobalsAndPackages() ... done
[08:10:31.662] | : run() for ‘Future’ (<unnamed-24>) ...
[08:10:31.662] | : . state: ‘created’
[08:10:31.662] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:31.662] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:31.662] | : . Using MultisessionFutureBackend ...
[08:10:31.662] | : . ' Number of futures since start: 5 (5 created, 5 launched, 5 finished)
[08:10:31.662] | : . ' Launching futures ...
[08:10:31.662] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:10:31.662] | : . ' , ; Workers: [n=2]
[08:10:31.663] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:10:31.664] | : . ' , ; FutureRegistry: ‘workers-ca1af912135fe7eb656314353e0b580e’
[08:10:31.664] | : . ' , ; requestWorker() ...
[08:10:31.664] | : . ' , ; ` requestNode() ...
[08:10:31.664] | : . ' , ; ` | Number of workers: 2
[08:10:31.664] | : . ' , ; ` | Polling for a free worker ...
[08:10:31.665] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ...
[08:10:31.665] | : . ' , ; ` | : . Listing all futures
[08:10:31.665] | : . ' , ; ` | : . Number of registered futures: 0
[08:10:31.665] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ... done
[08:10:31.665] | : . ' , ; ` | : Total time: 0
[08:10:31.665] | : . ' , ; ` | Polling for a free worker ... done
[08:10:31.665] | : . ' , ; ` | FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ...
[08:10:31.665] | : . ' , ; ` | : Listing all futures
[08:10:31.665] | : . ' , ; ` | : Number of registered futures: 0
[08:10:31.665] | : . ' , ; ` | FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ... done
[08:10:31.666] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:10:31.666] | : . ' , ; ` | Index of first available worker: 1
[08:10:31.666] | : . ' , ; ` | Validate that the worker is functional ...
[08:10:31.761] | : . ' , ; ` | : Worker is functional
[08:10:31.762] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ...
[08:10:31.762] | : . ' , ; ` | : . Listing all futures
[08:10:31.762] | : . ' , ; ` | : . Number of registered futures: 0
[08:10:31.762] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ... done
[08:10:31.762] | : . ' , ; ` | Validate that the worker is functional ... done
[08:10:31.762] | : . ' , ; ` requestNode() ... done
[08:10:31.762] | : . ' , ; ` cluster node index: 1
[08:10:31.763] | : . ' , ; requestWorker() ... done
[08:10:31.763] | : . ' , ; eraseGlobalEnvironment() ...
[08:10:31.763] | : . ' , ; eraseGlobalEnvironment() ... done
[08:10:31.763] | : . ' , ; launchFuture() ...
[08:10:31.763] | : . ' , ; ` cluster node index: 1
[08:10:31.763] | : . ' , ; ` getFutureData() ...
[08:10:31.764] | : . ' , ; ` | getFutureCore() ...
[08:10:31.764] | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:10:31.764] | : . ' , ; ` | getFutureCore() ... done
[08:10:31.764] | : . ' , ; ` | getFutureCapture() ...
[08:10:31.764] | : . ' , ; ` | getFutureCapture() ... done
[08:10:31.764] | : . ' , ; ` | getFutureContext() ...
[08:10:31.764] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:31.764] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:10:31.764] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:31.765] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:10:31.765] | : . ' , ; ` | getFutureContext() ... done
[08:10:31.765] | : . ' , ; ` getFutureData() ... done
[08:10:31.765] | : . ' , ; ` FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'add', earlySignal = 0) ...
[08:10:31.765] | : . ' , ; ` | Appended future to position #1
[08:10:31.765] | : . ' , ; ` | Number of registered futures: 1
[08:10:31.766] | : . ' , ; ` FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'add', earlySignal = 0) ... done
[08:10:31.766] | : . ' , ; launchFuture() ... done
[08:10:31.766] | : . ' , ; MultisessionFuture started
[08:10:31.766] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:10:31.766] | : . ' Launching futures ... done
[08:10:31.766] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:10:31.766] | : . Using MultisessionFutureBackend ... done
[08:10:31.766] | : run() for ‘Future’ (<unnamed-24>) ... done
[08:10:31.766] | future(..., label = NULL) ... done
[08:10:31.766] | result() for ClusterFuture ...
[08:10:31.767] | : assertValidConnection() ...
[08:10:31.767] | : . cluster node index: 1
[08:10:31.767] | : assertValidConnection() ... done
[08:10:31.767] | : receiveMessageFromWorker() for ClusterFuture ...
[08:10:31.767] | : . cluster node index: 1
[08:10:31.809] | : . [1] TRUE
[08:10:31.809] | : . received data:
[08:10:31.809] | : . List of 5
[08:10:31.809] | : .  $ type   : chr "VALUE"
[08:10:31.809] | : .  $ value  :List of 16
[08:10:31.809] | : .   ..$ value              : num 42
[08:10:31.809] | : .   ..$ visible            : logi FALSE
[08:10:31.809] | : .   ..$ stdout             : chr "[1] 42\n"
[08:10:31.809] | : .   ..$ conditions         : list()
[08:10:31.809] | : .   ..$ rng                : logi FALSE
[08:10:31.809] | : .   ..$ seed               : NULL
[08:10:31.809] | : .   ..$ misuseGlobalEnv    : NULL
[08:10:31.809] | : .   ..$ misuseConnections  :List of 3
[08:10:31.809] | : .   .. ..$ added   : NULL
[08:10:31.809] | : .   .. ..$ removed : NULL
[08:10:31.809] | : .   .. ..$ replaced: NULL
[08:10:31.809] | : .   ..$ misuseDevices      : NULL
[08:10:31.809] | : .   ..$ misuseDefaultDevice: list()
[08:10:31.809] | : .   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:10:31"
[08:10:31.809] | : .   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:10:31"
[08:10:31.809] | : .   ..$ uuid               : chr [1:2] "8090913757941eb18ce8f3a29fec0ad8" "24"
[08:10:31.809] | : .   ..$ session_uuid       : chr "b0811201393476e7e7bdfdf2c839b627"
[08:10:31.809] | : .   .. ..- attr(*, "source")=List of 5
[08:10:31.809] | : .   .. .. ..$ host  : Named chr "285a5f234941"
[08:10:31.809] | : .   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:10:31.809] | : .   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:10:31.809] | : .   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:10:31.809] | : .   .. .. ..$ pid   : int 75684
[08:10:31.809] | : .   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:10:30"
[08:10:31.809] | : .   .. .. ..$ random: int 2147483647
[08:10:31.809] | : .   ..$ r_info             :List of 4
[08:10:31.809] | : .   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:10:31.809] | : .   .. .. ..$ : int [1:3] 4 5 0
[08:10:31.809] | : .   .. ..$ os           : chr "unix"
[08:10:31.809] | : .   .. ..$ os_name      : chr "Linux"
[08:10:31.809] | : .   .. ..$ captures_utf8: logi TRUE
[08:10:31.809] | : .   ..$ version            : chr "1.8"
[08:10:31.809] | : .   ..- attr(*, "class")= chr "FutureResult"
[08:10:31.809] | : .  $ success: logi TRUE
[08:10:31.809] | : .  $ time   : 'proc_time' Named num [1:5] 0.002 0 0.003 0 0
[08:10:31.809] | : .   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:10:31.809] | : .  $ tag    : NULL
[08:10:31.820] | : . Received FutureResult
[08:10:31.821] | : . FutureResult:
[08:10:31.821] | : . value: ‘numeric’
[08:10:31.821] | : . visible: FALSE
[08:10:31.821] | : . stdout: character
[08:10:31.821] | : . conditions: [n = 0] 
[08:10:31.821] | : . RNG used: FALSE
[08:10:31.821] | : . duration: 0.002577543 secs (started 2025-06-17 08:10:31.806269)
[08:10:31.821] | : . version: 1.8
[08:10:31.821] | : . FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'remove', earlySignal = 0) ...
[08:10:31.821] | : . ' Removed future from position #1
[08:10:31.821] | : . ' Number of registered futures: 0
[08:10:31.821] | : . FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'remove', earlySignal = 0) ... done
[08:10:31.822] | : . Erased future from future backend
[08:10:31.822] | : . result() for ClusterFuture ...
[08:10:31.822] | : . ' result already collected: FutureResult
[08:10:31.822] | : . result() for ClusterFuture ... done
[08:10:31.822] | : . signalConditions() ...
[08:10:31.822] | : . ' include = ‘immediateCondition’
[08:10:31.822] | : . ' exclude = 
[08:10:31.822] | : . ' resignal = FALSE
[08:10:31.822] | : . ' Number of conditions: 0
[08:10:31.822] | : . '  int 0
[08:10:31.823] | : . signalConditions() ... done
[08:10:31.823] | : receiveMessageFromWorker() for ClusterFuture ... done
[08:10:31.823] | result() for ClusterFuture ... done
[08:10:31.823] | value() for MultisessionFuture (<unnamed-24>) ...
[08:10:31.823] | : result() for ClusterFuture ...
[08:10:31.823] | : . result already collected: FutureResult
[08:10:31.823] | : result() for ClusterFuture ... done
[08:10:31.824] | : result() for ClusterFuture ...
[08:10:31.824] | : . result already collected: FutureResult
[08:10:31.824] | : result() for ClusterFuture ... done
[08:10:31.824] | : signalConditions() ...
[08:10:31.824] | : . include = ‘immediateCondition’
[08:10:31.824] | : . exclude = 
[08:10:31.824] | : . resignal = FALSE
[08:10:31.824] | : . Number of conditions: 0
[08:10:31.824] | : .  int 0
[08:10:31.825] | : signalConditions() ... done
[08:10:31.825] | : relay stdout ...
[1] 42
[08:10:31.825] | : relay stdout ... done
[08:10:31.825] | : check for misuse ...
[08:10:31.825] | : check for misuse ... done
[08:10:31.825] | value() for MultisessionFuture (<unnamed-24>) ... done
[08:10:31.825] | result() for ClusterFuture ...
[08:10:31.826] | : result already collected: FutureResult
[08:10:31.826] | result() for ClusterFuture ... done
- stdout = NA
[08:10:31.826] | future(..., label = NULL) ...
[08:10:31.826] | : lazy: FALSE
[08:10:31.826] | : stdout: NA
[08:10:31.826] | : conditions: [n=1] ‘condition’
[08:10:31.826] | : gc: FALSE
[08:10:31.826] | : earlySignal: FALSE
[08:10:31.826] | : getGlobalsAndPackages() ...
[08:10:31.826] | : . Searching for globals ...
[08:10:31.856] | : . ' globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[08:10:31.856] | : . Searching for globals ... done
[08:10:31.856] | : . Resolving globals: FALSE
[08:10:31.857] | : . Search for packages associated with the globals ...
[08:10:31.857] | : . ' Packages associated with globals: [2] ‘base’, ‘utils’
[08:10:31.857] | : . ' Packages: [2] ‘base’, ‘utils’
[08:10:31.857] | : . Search for packages associated with the globals ... done
[08:10:31.857] | : . Packages after dropping 'base': [1] ‘utils’
[08:10:31.858] | : . Packages after dropping non-attached packages: [1] ‘utils’
[08:10:31.858] | : . globals: [0] 
[08:10:31.858] | : . packages: [1] ‘utils’
[08:10:31.858] | : getGlobalsAndPackages() ... done
[08:10:31.858] | : run() for ‘Future’ (<unnamed-25>) ...
[08:10:31.858] | : . state: ‘created’
[08:10:31.858] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:31.858] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:31.858] | : . Using MultisessionFutureBackend ...
[08:10:31.859] | : . ' Number of futures since start: 6 (6 created, 6 launched, 6 finished)
[08:10:31.859] | : . ' Launching futures ...
[08:10:31.859] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:10:31.859] | : . ' , ; Workers: [n=2]
[08:10:31.859] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:10:31.861] | : . ' , ; FutureRegistry: ‘workers-ca1af912135fe7eb656314353e0b580e’
[08:10:31.861] | : . ' , ; requestWorker() ...
[08:10:31.861] | : . ' , ; ` requestNode() ...
[08:10:31.861] | : . ' , ; ` | Number of workers: 2
[08:10:31.861] | : . ' , ; ` | Polling for a free worker ...
[08:10:31.861] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ...
[08:10:31.861] | : . ' , ; ` | : . Listing all futures
[08:10:31.861] | : . ' , ; ` | : . Number of registered futures: 0
[08:10:31.861] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ... done
[08:10:31.861] | : . ' , ; ` | : Total time: 0
[08:10:31.862] | : . ' , ; ` | Polling for a free worker ... done
[08:10:31.862] | : . ' , ; ` | FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ...
[08:10:31.862] | : . ' , ; ` | : Listing all futures
[08:10:31.862] | : . ' , ; ` | : Number of registered futures: 0
[08:10:31.862] | : . ' , ; ` | FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ... done
[08:10:31.862] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:10:31.862] | : . ' , ; ` | Index of first available worker: 1
[08:10:31.862] | : . ' , ; ` | Validate that the worker is functional ...
[08:10:31.962] | : . ' , ; ` | : Worker is functional
[08:10:31.962] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ...
[08:10:31.962] | : . ' , ; ` | : . Listing all futures
[08:10:31.962] | : . ' , ; ` | : . Number of registered futures: 0
[08:10:31.962] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ... done
[08:10:31.963] | : . ' , ; ` | Validate that the worker is functional ... done
[08:10:31.963] | : . ' , ; ` requestNode() ... done
[08:10:31.963] | : . ' , ; ` cluster node index: 1
[08:10:31.963] | : . ' , ; requestWorker() ... done
[08:10:31.963] | : . ' , ; eraseGlobalEnvironment() ...
[08:10:31.963] | : . ' , ; eraseGlobalEnvironment() ... done
[08:10:31.964] | : . ' , ; launchFuture() ...
[08:10:31.964] | : . ' , ; ` cluster node index: 1
[08:10:31.964] | : . ' , ; ` getFutureData() ...
[08:10:31.964] | : . ' , ; ` | getFutureCore() ...
[08:10:31.964] | : . ' , ; ` | : Packages needed by the future expression (n = 1): ‘utils’
[08:10:31.964] | : . ' , ; ` | getFutureCore() ... done
[08:10:31.964] | : . ' , ; ` | getFutureCapture() ...
[08:10:31.964] | : . ' , ; ` | getFutureCapture() ... done
[08:10:31.964] | : . ' , ; ` | getFutureContext() ...
[08:10:31.965] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:31.965] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:10:31.965] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:31.965] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:10:31.965] | : . ' , ; ` | getFutureContext() ... done
[08:10:31.965] | : . ' , ; ` getFutureData() ... done
[08:10:31.965] | : . ' , ; ` FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'add', earlySignal = 0) ...
[08:10:31.966] | : . ' , ; ` | Appended future to position #1
[08:10:31.966] | : . ' , ; ` | Number of registered futures: 1
[08:10:31.966] | : . ' , ; ` FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'add', earlySignal = 0) ... done
[08:10:31.966] | : . ' , ; launchFuture() ... done
[08:10:31.966] | : . ' , ; MultisessionFuture started
[08:10:31.966] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:10:31.966] | : . ' Launching futures ... done
[08:10:31.966] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:10:31.966] | : . Using MultisessionFutureBackend ... done
[08:10:31.967] | : run() for ‘Future’ (<unnamed-25>) ... done
[08:10:31.967] | future(..., label = NULL) ... done
[08:10:31.967] | result() for ClusterFuture ...
[08:10:31.967] | : assertValidConnection() ...
[08:10:31.967] | : . cluster node index: 1
[08:10:31.967] | : assertValidConnection() ... done
[08:10:31.968] | : receiveMessageFromWorker() for ClusterFuture ...
[08:10:31.968] | : . cluster node index: 1
[08:10:32.010] | : . [1] TRUE
[08:10:32.010] | : . received data:
[08:10:32.010] | : . List of 5
[08:10:32.010] | : .  $ type   : chr "VALUE"
[08:10:32.010] | : .  $ value  :List of 16
[08:10:32.010] | : .   ..$ value              : int 42
[08:10:32.010] | : .   ..$ visible            : logi TRUE
[08:10:32.010] | : .   ..$ stdout             : NULL
[08:10:32.010] | : .   ..$ conditions         : list()
[08:10:32.010] | : .   ..$ rng                : logi FALSE
[08:10:32.010] | : .   ..$ seed               : NULL
[08:10:32.010] | : .   ..$ misuseGlobalEnv    : NULL
[08:10:32.010] | : .   ..$ misuseConnections  :List of 3
[08:10:32.010] | : .   .. ..$ added   : NULL
[08:10:32.010] | : .   .. ..$ removed : NULL
[08:10:32.010] | : .   .. ..$ replaced: NULL
[08:10:32.010] | : .   ..$ misuseDevices      : NULL
[08:10:32.010] | : .   ..$ misuseDefaultDevice: list()
[08:10:32.010] | : .   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:10:32"
[08:10:32.010] | : .   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:10:32"
[08:10:32.010] | : .   ..$ uuid               : chr [1:2] "8090913757941eb18ce8f3a29fec0ad8" "25"
[08:10:32.010] | : .   ..$ session_uuid       : chr "b0811201393476e7e7bdfdf2c839b627"
[08:10:32.010] | : .   .. ..- attr(*, "source")=List of 5
[08:10:32.010] | : .   .. .. ..$ host  : Named chr "285a5f234941"
[08:10:32.010] | : .   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:10:32.010] | : .   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:10:32.010] | : .   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:10:32.010] | : .   .. .. ..$ pid   : int 75684
[08:10:32.010] | : .   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:10:30"
[08:10:32.010] | : .   .. .. ..$ random: int 2147483647
[08:10:32.010] | : .   ..$ r_info             :List of 4
[08:10:32.010] | : .   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:10:32.010] | : .   .. .. ..$ : int [1:3] 4 5 0
[08:10:32.010] | : .   .. ..$ os           : chr "unix"
[08:10:32.010] | : .   .. ..$ os_name      : chr "Linux"
[08:10:32.010] | : .   .. ..$ captures_utf8: logi TRUE
[08:10:32.010] | : .   ..$ version            : chr "1.8"
[08:10:32.010] | : .   ..- attr(*, "class")= chr "FutureResult"
[08:10:32.010] | : .  $ success: logi TRUE
[08:10:32.010] | : .  $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[08:10:32.010] | : .   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:10:32.010] | : .  $ tag    : NULL
[08:10:32.021] | : . Received FutureResult
[08:10:32.021] | : . FutureResult:
[08:10:32.021] | : . value: ‘integer’
[08:10:32.021] | : . visible: TRUE
[08:10:32.021] | : . stdout: NULL
[08:10:32.021] | : . conditions: [n = 0] 
[08:10:32.021] | : . RNG used: FALSE
[08:10:32.021] | : . duration: 0.003513813 secs (started 2025-06-17 08:10:32.00629)
[08:10:32.021] | : . version: 1.8
[08:10:32.022] | : . FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'remove', earlySignal = 0) ...
[08:10:32.022] | : . ' Removed future from position #1
[08:10:32.022] | : . ' Number of registered futures: 0
[08:10:32.022] | : . FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'remove', earlySignal = 0) ... done
[08:10:32.022] | : . Erased future from future backend
[08:10:32.022] | : . result() for ClusterFuture ...
[08:10:32.022] | : . ' result already collected: FutureResult
[08:10:32.023] | : . result() for ClusterFuture ... done
[08:10:32.023] | : . signalConditions() ...
[08:10:32.023] | : . ' include = ‘immediateCondition’
[08:10:32.023] | : . ' exclude = 
[08:10:32.023] | : . ' resignal = FALSE
[08:10:32.023] | : . ' Number of conditions: 0
[08:10:32.023] | : . '  int 0
[08:10:32.024] | : . signalConditions() ... done
[08:10:32.024] | : receiveMessageFromWorker() for ClusterFuture ... done
[08:10:32.024] | result() for ClusterFuture ... done
List of 16
 $ value              : int 42
 $ visible            : logi TRUE
 $ stdout             : NULL
 $ conditions         : list()
 $ rng                : logi FALSE
 $ seed               : NULL
 $ misuseGlobalEnv    : NULL
 $ misuseConnections  :List of 3
  ..$ added   : NULL
  ..$ removed : NULL
  ..$ replaced: NULL
 $ misuseDevices      : NULL
 $ misuseDefaultDevice: list()
 $ started            : POSIXct[1:1], format: "2025-06-17 08:10:32"
 $ finished           : POSIXct[1:1], format: "2025-06-17 08:10:32"
 $ uuid               : chr [1:2] "8090913757941eb18ce8f3a29fec0ad8" "25"
 $ session_uuid       : chr "b0811201393476e7e7bdfdf2c839b627"
  ..- attr(*, "source")=List of 5
  .. ..$ host  : Named chr "285a5f234941"
  .. .. ..- attr(*, "names")= chr "HOSTNAME"
  .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
  .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
  .. ..$ pid   : int 75684
  .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:10:30"
  .. ..$ random: int 2147483647
 $ r_info             :List of 4
  ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
  .. ..$ : int [1:3] 4 5 0
  ..$ os           : chr "unix"
  ..$ os_name      : chr "Linux"
  ..$ captures_utf8: logi TRUE
 $ version            : chr "1.8"
 - attr(*, "class")= chr "FutureResult"
[08:10:32.033] | value() for MultisessionFuture (<unnamed-25>) ...
[08:10:32.033] | : result() for ClusterFuture ...
[08:10:32.033] | : . result already collected: FutureResult
[08:10:32.033] | : result() for ClusterFuture ... done
[08:10:32.033] | : result() for ClusterFuture ...
[08:10:32.034] | : . result already collected: FutureResult
[08:10:32.034] | : result() for ClusterFuture ... done
[08:10:32.034] | : signalConditions() ...
[08:10:32.034] | : . include = ‘immediateCondition’
[08:10:32.034] | : . exclude = 
[08:10:32.034] | : . resignal = FALSE
[08:10:32.034] | : . Number of conditions: 0
[08:10:32.034] | : .  int 0
[08:10:32.035] | : signalConditions() ... done
[08:10:32.035] | : relay stdout ...
[08:10:32.035] | : relay stdout ... done
[08:10:32.035] | : check for misuse ...
[08:10:32.035] | : check for misuse ... done
[08:10:32.035] | value() for MultisessionFuture (<unnamed-25>) ... done
[08:10:32.035] | future(..., label = NULL) ...
[08:10:32.036] | : lazy: FALSE
[08:10:32.036] | : stdout: NA
[08:10:32.036] | : conditions: [n=1] ‘condition’
[08:10:32.036] | : gc: FALSE
[08:10:32.036] | : earlySignal: FALSE
[08:10:32.036] | : getGlobalsAndPackages() ...
[08:10:32.036] | : . Searching for globals ...
[08:10:32.066] | : . ' globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[08:10:32.066] | : . Searching for globals ... done
[08:10:32.066] | : . Resolving globals: FALSE
[08:10:32.066] | : . Search for packages associated with the globals ...
[08:10:32.066] | : . ' Packages associated with globals: [2] ‘base’, ‘utils’
[08:10:32.067] | : . ' Packages: [2] ‘base’, ‘utils’
[08:10:32.067] | : . Search for packages associated with the globals ... done
[08:10:32.067] | : . Packages after dropping 'base': [1] ‘utils’
[08:10:32.067] | : . Packages after dropping non-attached packages: [1] ‘utils’
[08:10:32.067] | : . globals: [0] 
[08:10:32.067] | : . packages: [1] ‘utils’
[08:10:32.068] | : getGlobalsAndPackages() ... done
[08:10:32.068] | : run() for ‘Future’ (<unnamed-26>) ...
[08:10:32.068] | : . state: ‘created’
[08:10:32.068] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:32.068] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:32.068] | : . Using MultisessionFutureBackend ...
[08:10:32.068] | : . ' Number of futures since start: 7 (7 created, 7 launched, 7 finished)
[08:10:32.068] | : . ' Launching futures ...
[08:10:32.069] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:10:32.069] | : . ' , ; Workers: [n=2]
[08:10:32.069] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:10:32.070] | : . ' , ; FutureRegistry: ‘workers-ca1af912135fe7eb656314353e0b580e’
[08:10:32.070] | : . ' , ; requestWorker() ...
[08:10:32.071] | : . ' , ; ` requestNode() ...
[08:10:32.071] | : . ' , ; ` | Number of workers: 2
[08:10:32.071] | : . ' , ; ` | Polling for a free worker ...
[08:10:32.071] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ...
[08:10:32.071] | : . ' , ; ` | : . Listing all futures
[08:10:32.071] | : . ' , ; ` | : . Number of registered futures: 0
[08:10:32.071] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ... done
[08:10:32.071] | : . ' , ; ` | : Total time: 0
[08:10:32.071] | : . ' , ; ` | Polling for a free worker ... done
[08:10:32.072] | : . ' , ; ` | FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ...
[08:10:32.072] | : . ' , ; ` | : Listing all futures
[08:10:32.072] | : . ' , ; ` | : Number of registered futures: 0
[08:10:32.072] | : . ' , ; ` | FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ... done
[08:10:32.072] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:10:32.072] | : . ' , ; ` | Index of first available worker: 1
[08:10:32.072] | : . ' , ; ` | Validate that the worker is functional ...
[08:10:32.171] | : . ' , ; ` | : Worker is functional
[08:10:32.171] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ...
[08:10:32.171] | : . ' , ; ` | : . Listing all futures
[08:10:32.171] | : . ' , ; ` | : . Number of registered futures: 0
[08:10:32.172] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ... done
[08:10:32.172] | : . ' , ; ` | Validate that the worker is functional ... done
[08:10:32.172] | : . ' , ; ` requestNode() ... done
[08:10:32.172] | : . ' , ; ` cluster node index: 1
[08:10:32.172] | : . ' , ; requestWorker() ... done
[08:10:32.172] | : . ' , ; eraseGlobalEnvironment() ...
[08:10:32.173] | : . ' , ; eraseGlobalEnvironment() ... done
[08:10:32.173] | : . ' , ; launchFuture() ...
[08:10:32.173] | : . ' , ; ` cluster node index: 1
[08:10:32.173] | : . ' , ; ` getFutureData() ...
[08:10:32.173] | : . ' , ; ` | getFutureCore() ...
[08:10:32.173] | : . ' , ; ` | : Packages needed by the future expression (n = 1): ‘utils’
[08:10:32.173] | : . ' , ; ` | getFutureCore() ... done
[08:10:32.173] | : . ' , ; ` | getFutureCapture() ...
[08:10:32.173] | : . ' , ; ` | getFutureCapture() ... done
[08:10:32.174] | : . ' , ; ` | getFutureContext() ...
[08:10:32.174] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:32.174] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:10:32.174] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:32.174] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:10:32.174] | : . ' , ; ` | getFutureContext() ... done
[08:10:32.174] | : . ' , ; ` getFutureData() ... done
[08:10:32.175] | : . ' , ; ` FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'add', earlySignal = 0) ...
[08:10:32.175] | : . ' , ; ` | Appended future to position #1
[08:10:32.175] | : . ' , ; ` | Number of registered futures: 1
[08:10:32.175] | : . ' , ; ` FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'add', earlySignal = 0) ... done
[08:10:32.175] | : . ' , ; launchFuture() ... done
[08:10:32.175] | : . ' , ; MultisessionFuture started
[08:10:32.175] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:10:32.175] | : . ' Launching futures ... done
[08:10:32.175] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:10:32.176] | : . Using MultisessionFutureBackend ... done
[08:10:32.176] | : run() for ‘Future’ (<unnamed-26>) ... done
[08:10:32.176] | future(..., label = NULL) ... done
[08:10:32.176] | value() for MultisessionFuture (<unnamed-26>) ...
[08:10:32.176] | : result() for ClusterFuture ...
[08:10:32.176] | : . assertValidConnection() ...
[08:10:32.176] | : . ' cluster node index: 1
[08:10:32.177] | : . assertValidConnection() ... done
[08:10:32.177] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:10:32.177] | : . ' cluster node index: 1
[08:10:32.225] | : . ' [1] TRUE
[08:10:32.225] | : . ' received data:
[08:10:32.225] | : . ' List of 5
[08:10:32.225] | : . '  $ type   : chr "VALUE"
[08:10:32.225] | : . '  $ value  :List of 16
[08:10:32.225] | : . '   ..$ value              : int 42
[08:10:32.225] | : . '   ..$ visible            : logi TRUE
[08:10:32.225] | : . '   ..$ stdout             : NULL
[08:10:32.225] | : . '   ..$ conditions         : list()
[08:10:32.225] | : . '   ..$ rng                : logi FALSE
[08:10:32.225] | : . '   ..$ seed               : NULL
[08:10:32.225] | : . '   ..$ misuseGlobalEnv    : NULL
[08:10:32.225] | : . '   ..$ misuseConnections  :List of 3
[08:10:32.225] | : . '   .. ..$ added   : NULL
[08:10:32.225] | : . '   .. ..$ removed : NULL
[08:10:32.225] | : . '   .. ..$ replaced: NULL
[08:10:32.225] | : . '   ..$ misuseDevices      : NULL
[08:10:32.225] | : . '   ..$ misuseDefaultDevice: list()
[08:10:32.225] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:10:32"
[08:10:32.225] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:10:32"
[08:10:32.225] | : . '   ..$ uuid               : chr [1:2] "8090913757941eb18ce8f3a29fec0ad8" "26"
[08:10:32.225] | : . '   ..$ session_uuid       : chr "b0811201393476e7e7bdfdf2c839b627"
[08:10:32.225] | : . '   .. ..- attr(*, "source")=List of 5
[08:10:32.225] | : . '   .. .. ..$ host  : Named chr "285a5f234941"
[08:10:32.225] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:10:32.225] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:10:32.225] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:10:32.225] | : . '   .. .. ..$ pid   : int 75684
[08:10:32.225] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:10:30"
[08:10:32.225] | : . '   .. .. ..$ random: int 2147483647
[08:10:32.225] | : . '   ..$ r_info             :List of 4
[08:10:32.225] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:10:32.225] | : . '   .. .. ..$ : int [1:3] 4 5 0
[08:10:32.225] | : . '   .. ..$ os           : chr "unix"
[08:10:32.225] | : . '   .. ..$ os_name      : chr "Linux"
[08:10:32.225] | : . '   .. ..$ captures_utf8: logi TRUE
[08:10:32.225] | : . '   ..$ version            : chr "1.8"
[08:10:32.225] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:10:32.225] | : . '  $ success: logi TRUE
[08:10:32.225] | : . '  $ time   : 'proc_time' Named num [1:5] 0.01 0 0.009 0 0
[08:10:32.225] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:10:32.225] | : . '  $ tag    : NULL
[08:10:32.236] | : . ' Received FutureResult
[08:10:32.237] | : . ' FutureResult:
[08:10:32.237] | : . ' value: ‘integer’
[08:10:32.237] | : . ' visible: TRUE
[08:10:32.237] | : . ' stdout: NULL
[08:10:32.237] | : . ' conditions: [n = 0] 
[08:10:32.237] | : . ' RNG used: FALSE
[08:10:32.237] | : . ' duration: 0.003358603 secs (started 2025-06-17 08:10:32.216217)
[08:10:32.237] | : . ' version: 1.8
[08:10:32.237] | : . ' FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'remove', earlySignal = 0) ...
[08:10:32.237] | : . ' , Removed future from position #1
[08:10:32.237] | : . ' , Number of registered futures: 0
[08:10:32.237] | : . ' FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'remove', earlySignal = 0) ... done
[08:10:32.238] | : . ' Erased future from future backend
[08:10:32.238] | : . ' result() for ClusterFuture ...
[08:10:32.238] | : . ' , result already collected: FutureResult
[08:10:32.238] | : . ' result() for ClusterFuture ... done
[08:10:32.238] | : . ' signalConditions() ...
[08:10:32.238] | : . ' , include = ‘immediateCondition’
[08:10:32.238] | : . ' , exclude = 
[08:10:32.238] | : . ' , resignal = FALSE
[08:10:32.238] | : . ' , Number of conditions: 0
[08:10:32.238] | : . ' ,  int 0
[08:10:32.239] | : . ' signalConditions() ... done
[08:10:32.239] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:10:32.239] | : result() for ClusterFuture ... done
[08:10:32.239] | : result() for ClusterFuture ...
[08:10:32.239] | : . result already collected: FutureResult
[08:10:32.239] | : result() for ClusterFuture ... done
[08:10:32.239] | : signalConditions() ...
[08:10:32.240] | : . include = ‘immediateCondition’
[08:10:32.240] | : . exclude = 
[08:10:32.240] | : . resignal = FALSE
[08:10:32.240] | : . Number of conditions: 0
[08:10:32.240] | : .  int 0
[08:10:32.240] | : signalConditions() ... done
[08:10:32.240] | : relay stdout ...
[08:10:32.241] | : relay stdout ... done
[08:10:32.241] | : check for misuse ...
[08:10:32.241] | : check for misuse ... done
[08:10:32.241] | value() for MultisessionFuture (<unnamed-26>) ... done
- stdout = structure(TRUE, drop = TRUE)
[08:10:32.241] | future(..., label = NULL) ...
[08:10:32.241] | : lazy: FALSE
[08:10:32.241] | : stdout: TRUE
[08:10:32.241] | : conditions: [n=1] ‘condition’
[08:10:32.242] | : gc: FALSE
[08:10:32.242] | : earlySignal: FALSE
[08:10:32.242] | : getGlobalsAndPackages() ...
[08:10:32.242] | : . Searching for globals ...
[08:10:32.245] | : . ' globals found: [1] ‘print’
[08:10:32.245] | : . Searching for globals ... done
[08:10:32.245] | : . Resolving globals: FALSE
[08:10:32.245] | : . Search for packages associated with the globals ...
[08:10:32.245] | : . ' Packages associated with globals: [1] ‘base’
[08:10:32.245] | : . ' Packages: [1] ‘base’
[08:10:32.246] | : . Search for packages associated with the globals ... done
[08:10:32.246] | : . Packages after dropping 'base': [0] 
[08:10:32.246] | : . globals: [0] 
[08:10:32.246] | : . packages: [0] 
[08:10:32.246] | : getGlobalsAndPackages() ... done
[08:10:32.246] | : run() for ‘Future’ (<unnamed-27>) ...
[08:10:32.246] | : . state: ‘created’
[08:10:32.246] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:32.247] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:32.247] | : . Using MultisessionFutureBackend ...
[08:10:32.247] | : . ' Number of futures since start: 8 (8 created, 8 launched, 8 finished)
[08:10:32.247] | : . ' Launching futures ...
[08:10:32.247] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:10:32.247] | : . ' , ; Workers: [n=2]
[08:10:32.247] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:10:32.249] | : . ' , ; FutureRegistry: ‘workers-ca1af912135fe7eb656314353e0b580e’
[08:10:32.249] | : . ' , ; requestWorker() ...
[08:10:32.249] | : . ' , ; ` requestNode() ...
[08:10:32.249] | : . ' , ; ` | Number of workers: 2
[08:10:32.249] | : . ' , ; ` | Polling for a free worker ...
[08:10:32.249] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ...
[08:10:32.249] | : . ' , ; ` | : . Listing all futures
[08:10:32.249] | : . ' , ; ` | : . Number of registered futures: 0
[08:10:32.250] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ... done
[08:10:32.250] | : . ' , ; ` | : Total time: 0
[08:10:32.250] | : . ' , ; ` | Polling for a free worker ... done
[08:10:32.250] | : . ' , ; ` | FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ...
[08:10:32.250] | : . ' , ; ` | : Listing all futures
[08:10:32.250] | : . ' , ; ` | : Number of registered futures: 0
[08:10:32.250] | : . ' , ; ` | FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ... done
[08:10:32.250] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:10:32.250] | : . ' , ; ` | Index of first available worker: 1
[08:10:32.250] | : . ' , ; ` | Validate that the worker is functional ...
[08:10:32.344] | : . ' , ; ` | : Worker is functional
[08:10:32.344] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ...
[08:10:32.344] | : . ' , ; ` | : . Listing all futures
[08:10:32.345] | : . ' , ; ` | : . Number of registered futures: 0
[08:10:32.345] | : . ' , ; ` | : FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'list', earlySignal = 0) ... done
[08:10:32.345] | : . ' , ; ` | Validate that the worker is functional ... done
[08:10:32.345] | : . ' , ; ` requestNode() ... done
[08:10:32.345] | : . ' , ; ` cluster node index: 1
[08:10:32.345] | : . ' , ; requestWorker() ... done
[08:10:32.345] | : . ' , ; eraseGlobalEnvironment() ...
[08:10:32.346] | : . ' , ; eraseGlobalEnvironment() ... done
[08:10:32.346] | : . ' , ; launchFuture() ...
[08:10:32.346] | : . ' , ; ` cluster node index: 1
[08:10:32.346] | : . ' , ; ` getFutureData() ...
[08:10:32.346] | : . ' , ; ` | getFutureCore() ...
[08:10:32.346] | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:10:32.346] | : . ' , ; ` | getFutureCore() ... done
[08:10:32.346] | : . ' , ; ` | getFutureCapture() ...
[08:10:32.347] | : . ' , ; ` | getFutureCapture() ... done
[08:10:32.347] | : . ' , ; ` | getFutureContext() ...
[08:10:32.347] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:32.347] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:10:32.347] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:32.347] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:10:32.347] | : . ' , ; ` | getFutureContext() ... done
[08:10:32.347] | : . ' , ; ` getFutureData() ... done
[08:10:32.348] | : . ' , ; ` FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'add', earlySignal = 0) ...
[08:10:32.348] | : . ' , ; ` | Appended future to position #1
[08:10:32.348] | : . ' , ; ` | Number of registered futures: 1
[08:10:32.348] | : . ' , ; ` FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'add', earlySignal = 0) ... done
[08:10:32.348] | : . ' , ; launchFuture() ... done
[08:10:32.348] | : . ' , ; MultisessionFuture started
[08:10:32.348] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:10:32.348] | : . ' Launching futures ... done
[08:10:32.349] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:10:32.349] | : . Using MultisessionFutureBackend ... done
[08:10:32.349] | : run() for ‘Future’ (<unnamed-27>) ... done
[08:10:32.349] | future(..., label = NULL) ... done
[08:10:32.349] | result() for ClusterFuture ...
[08:10:32.349] | : assertValidConnection() ...
[08:10:32.349] | : . cluster node index: 1
[08:10:32.350] | : assertValidConnection() ... done
[08:10:32.350] | : receiveMessageFromWorker() for ClusterFuture ...
[08:10:32.350] | : . cluster node index: 1
[08:10:32.392] | : . [1] TRUE
[08:10:32.393] | : . received data:
[08:10:32.393] | : . List of 5
[08:10:32.393] | : .  $ type   : chr "VALUE"
[08:10:32.393] | : .  $ value  :List of 16
[08:10:32.393] | : .   ..$ value              : num 42
[08:10:32.393] | : .   ..$ visible            : logi FALSE
[08:10:32.393] | : .   ..$ stdout             : chr "[1] 42\n"
[08:10:32.393] | : .   ..$ conditions         : list()
[08:10:32.393] | : .   ..$ rng                : logi FALSE
[08:10:32.393] | : .   ..$ seed               : NULL
[08:10:32.393] | : .   ..$ misuseGlobalEnv    : NULL
[08:10:32.393] | : .   ..$ misuseConnections  :List of 3
[08:10:32.393] | : .   .. ..$ added   : NULL
[08:10:32.393] | : .   .. ..$ removed : NULL
[08:10:32.393] | : .   .. ..$ replaced: NULL
[08:10:32.393] | : .   ..$ misuseDevices      : NULL
[08:10:32.393] | : .   ..$ misuseDefaultDevice: list()
[08:10:32.393] | : .   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:10:32"
[08:10:32.393] | : .   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:10:32"
[08:10:32.393] | : .   ..$ uuid               : chr [1:2] "8090913757941eb18ce8f3a29fec0ad8" "27"
[08:10:32.393] | : .   ..$ session_uuid       : chr "b0811201393476e7e7bdfdf2c839b627"
[08:10:32.393] | : .   .. ..- attr(*, "source")=List of 5
[08:10:32.393] | : .   .. .. ..$ host  : Named chr "285a5f234941"
[08:10:32.393] | : .   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:10:32.393] | : .   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:10:32.393] | : .   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:10:32.393] | : .   .. .. ..$ pid   : int 75684
[08:10:32.393] | : .   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:10:30"
[08:10:32.393] | : .   .. .. ..$ random: int 2147483647
[08:10:32.393] | : .   ..$ r_info             :List of 4
[08:10:32.393] | : .   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:10:32.393] | : .   .. .. ..$ : int [1:3] 4 5 0
[08:10:32.393] | : .   .. ..$ os           : chr "unix"
[08:10:32.393] | : .   .. ..$ os_name      : chr "Linux"
[08:10:32.393] | : .   .. ..$ captures_utf8: logi TRUE
[08:10:32.393] | : .   ..$ version            : chr "1.8"
[08:10:32.393] | : .   ..- attr(*, "class")= chr "FutureResult"
[08:10:32.393] | : .  $ success: logi TRUE
[08:10:32.393] | : .  $ time   : 'proc_time' Named num [1:5] 0.004 0 0.003 0 0
[08:10:32.393] | : .   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:10:32.393] | : .  $ tag    : NULL
[08:10:32.405] | : . Received FutureResult
[08:10:32.406] | : . FutureResult:
[08:10:32.406] | : . value: ‘numeric’
[08:10:32.406] | : . visible: FALSE
[08:10:32.406] | : . stdout: character
[08:10:32.406] | : . conditions: [n = 0] 
[08:10:32.406] | : . RNG used: FALSE
[08:10:32.406] | : . duration: 0.002867699 secs (started 2025-06-17 08:10:32.389266)
[08:10:32.406] | : . version: 1.8
[08:10:32.406] | : . FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'remove', earlySignal = 0) ...
[08:10:32.406] | : . ' Removed future from position #1
[08:10:32.406] | : . ' Number of registered futures: 0
[08:10:32.406] | : . FutureRegistry('workers-ca1af912135fe7eb656314353e0b580e', action = 'remove', earlySignal = 0) ... done
[08:10:32.407] | : . Erased future from future backend
[08:10:32.407] | : . result() for ClusterFuture ...
[08:10:32.407] | : . ' result already collected: FutureResult
[08:10:32.407] | : . result() for ClusterFuture ... done
[08:10:32.407] | : . signalConditions() ...
[08:10:32.407] | : . ' include = ‘immediateCondition’
[08:10:32.407] | : . ' exclude = 
[08:10:32.407] | : . ' resignal = FALSE
[08:10:32.407] | : . ' Number of conditions: 0
[08:10:32.407] | : . '  int 0
[08:10:32.408] | : . signalConditions() ... done
[08:10:32.408] | : receiveMessageFromWorker() for ClusterFuture ... done
[08:10:32.408] | result() for ClusterFuture ... done
[08:10:32.408] | value() for MultisessionFuture (<unnamed-27>) ...
[08:10:32.408] | : result() for ClusterFuture ...
[08:10:32.408] | : . result already collected: FutureResult
[08:10:32.408] | : result() for ClusterFuture ... done
[08:10:32.409] | : result() for ClusterFuture ...
[08:10:32.409] | : . result already collected: FutureResult
[08:10:32.409] | : result() for ClusterFuture ... done
[08:10:32.409] | : signalConditions() ...
[08:10:32.409] | : . include = ‘immediateCondition’
[08:10:32.409] | : . exclude = 
[08:10:32.409] | : . resignal = FALSE
[08:10:32.409] | : . Number of conditions: 0
[08:10:32.409] | : .  int 0
[08:10:32.410] | : signalConditions() ... done
[08:10:32.410] | : relay stdout ...
[1] 42
[08:10:32.410] | : relay stdout ... done
[08:10:32.410] | : check for misuse ...
[08:10:32.410] | : check for misuse ... done
[08:10:32.410] | value() for MultisessionFuture (<unnamed-27>) ... done
[08:10:32.410] | result() for ClusterFuture ...
[08:10:32.410] | : result already collected: FutureResult
[08:10:32.411] | result() for ClusterFuture ... done
multisession ... done
Testing with 2 cores ... done

> message("*** Standard output ... DONE")
*** Standard output ... DONE
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=2s, sys.self=0.1s, elapsed=4s, user.child=0.6s, sys.child=0.5s
Test ‘stdout’ ... success
> 
