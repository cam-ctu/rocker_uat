
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script incl/testme/test-stdout.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future:::testme("stdout")
Test ‘stdout’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future/testme/test-stdout.R’

> library(future)
[10:54:46.777] Option 'future.startup.script': TRUE
[10:54:46.777] Future startup scripts considered: ‘.future.R’, ‘~/.future.R’
[10:54:46.778] Future startup scripts found: <none>

> message("*** Standard output ...")
*** Standard output ...

> truth_rows <- utils::capture.output({
+     print(1:50)
+     str(1:50)
+     cat(letters, sep = "-")
+     cat(1:6, collapse = "\n")
+     write.ta .... [TRUNCATED] 

> truth <- paste0(paste(truth_rows, collapse = "\n"), 
+     "\n")

> print(truth)
[1] " [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\n int [1:50] 1 2 3 4 5 6 7 8 9 10 ...\na-b-c-d-e-f-g-h-i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z1 2 3 4 5 6 \n\"Sepal.Length\"\t\"Sepal.Width\"\t\"Petal.Length\"\t\"Petal.Width\"\t\"Species\"\n\"1\"\t5.1\t3.5\t1.4\t0.2\t\"setosa\"\n\"2\"\t4.9\t3\t1.4\t0.2\t\"setosa\"\n\"3\"\t4.7\t3.2\t1.3\t0.2\t\"setosa\"\n\"4\"\t4.6\t3.1\t1.5\t0.2\t\"setosa\"\n\"5\"\t5\t3.6\t1.4\t0.2\t\"setosa\"\n\"6\"\t5.4\t3.9\t1.7\t0.4\t\"setosa\"\n\"7\"\t4.6\t3.4\t1.4\t0.3\t\"setosa\"\n\"8\"\t5\t3.4\t1.5\t0.2\t\"setosa\"\n\"9\"\t4.4\t2.9\t1.4\t0.2\t\"setosa\"\n\"10\"\t4.9\t3.1\t1.5\t0.1\t\"setosa\"\n"

> for (cores in seq_len(min(2, availCores))) {
+     message(sprintf("Testing with %d cores ...", cores))
+     options(mc.cores = cores)
+     for (s .... [TRUNCATED] 
Testing with 1 cores ...
sequential ...
[10:54:46.814] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:46.815] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:54:46.815] |  :  all.equal() for FutureStrategyList ...
[10:54:46.815] |  :  .  New stack:
[10:54:46.815] |  :  .  List of 1
[10:54:46.815] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.815] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.815] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.815] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.815] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.815] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:54:46.815] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:46.817] |  :  .  Old stack:
[10:54:46.818] |  :  .  List of 1
[10:54:46.818] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.818] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.818] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.818] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.818] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.818] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:54:46.818] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:46.820] |  :  .  Not identical
[10:54:46.820] |  :  .  all.equal() for future ...
[10:54:46.820] |  :  .  |  List of 2
[10:54:46.820] |  :  .  |   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.820] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.820] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.820] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.820] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.820] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:54:46.820] |  :  .  |   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.820] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.820] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.820] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.820] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.820] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:54:46.824] |  :  .  all.equal() for future ... done
[10:54:46.824] |  :  all.equal() for FutureStrategyList ... done
[10:54:46.824] |  :  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:54:46.824] |  :  List of future strategies:
[10:54:46.824] |  :  1. sequential:
[10:54:46.824] |  :     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:54:46.824] |  :     - tweaked: FALSE
[10:54:46.824] |  :     - call: plan(sequential)
[10:54:46.825] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:54:46.825] plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
- stdout = TRUE
[10:54:46.825] getGlobalsAndPackages() ...
[10:54:46.826] |  Searching for globals ...
[10:54:46.834] |  :  globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[10:54:46.834] |  Searching for globals ... DONE
[10:54:46.834] |  Resolving globals: FALSE
[10:54:46.834] |  Search for packages associated with the globals ...
[10:54:46.835] |  :  Packages associated with globals: [2] ‘base’, ‘utils’
[10:54:46.835] |  :  Packages: [2] ‘base’, ‘utils’
[10:54:46.835] |  Search for packages associated with the globals ... DONE
[10:54:46.835] |  Packages after dropping 'base': [1] ‘utils’
[10:54:46.835] |  Packages after dropping non-attached packages: [1] ‘utils’
[10:54:46.836] |  globals: [0] 
[10:54:46.836] |  packages: [1] ‘utils’
[10:54:46.836] getGlobalsAndPackages() ... done
[10:54:46.836] run() for Future (‘Future’) ...
[10:54:46.836] |  state: ‘created’
[10:54:46.837] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:46.837] |  :  makeFutureBackend(<sequential>) ...
[10:54:46.837] |  :  .  Backend function: <‘NULL’>
[10:54:46.837] |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:54:46.837] |  :  makeFutureBackend(<sequential>) ... done
[10:54:46.837] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:46.837] |  Using SequentialFutureBackend ...
[10:54:46.838] |  :  Launching futures ...
[10:54:46.838] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:54:46.838] |  :  .  |  getFutureData() ...
[10:54:46.839] |  :  .  |  :  getFutureCore() ...
[10:54:46.840] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘utils’
[10:54:46.840] |  :  .  |  :  getFutureCore() ... done
[10:54:46.840] |  :  .  |  :  getFutureCapture() ...
[10:54:46.840] |  :  .  |  :  getFutureCapture() ... done
[10:54:46.840] |  :  .  |  :  getFutureContext() ...
[10:54:46.840] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:46.840] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:54:46.840] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:46.841] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:54:46.841] |  :  .  |  :  getFutureContext() ... done
[10:54:46.841] |  :  .  |  getFutureData() ... done
[10:54:46.842] |  :  .  |  attachPackages() ...
[10:54:46.842] |  :  .  |  :  packages: [n=1] ‘future’
[10:54:46.842] |  :  .  |  attachPackages() ... DONE
[10:54:46.842] |  :  .  |  attachPackages() ...
[10:54:46.842] |  :  .  |  :  packages: [n=1] ‘utils’
[10:54:46.843] |  :  .  |  attachPackages() ... DONE
[10:54:46.843] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:46.843] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:54:46.843] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:46.844] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:46.844] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:46.844] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:54:46.844] |  :  .  |  :  .  |  New stack:
[10:54:46.844] |  :  .  |  :  .  |  List of 1
[10:54:46.844] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.844] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.844] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.844] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.844] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.844] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:46.844] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:46.846] |  :  .  |  :  .  |  Old stack:
[10:54:46.846] |  :  .  |  :  .  |  List of 1
[10:54:46.846] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.846] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.846] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.846] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.846] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.846] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:54:46.846] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:46.846] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.846] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.846] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:46.849] |  :  .  |  :  .  |  Not identical
[10:54:46.849] |  :  .  |  :  .  |  all.equal() for future ...
[10:54:46.849] |  :  .  |  :  .  |  :  List of 2
[10:54:46.849] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.849] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.849] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.849] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.849] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.849] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:46.849] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.849] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.849] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.849] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.849] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.849] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:54:46.849] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:46.849] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.849] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.854] |  :  .  |  :  .  |  all.equal() for future ... done
[10:54:46.854] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:54:46.854] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:54:46.854] |  :  .  |  :  .  List of future strategies:
[10:54:46.854] |  :  .  |  :  .  1. sequential:
[10:54:46.854] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:54:46.854] |  :  .  |  :  .     - tweaked: FALSE
[10:54:46.854] |  :  .  |  :  .     - call: plan(sequential)
[10:54:46.855] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:46.855] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:46.857] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:46.858] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:46.858] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:46.858] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:54:46.858] |  :  .  |  :  .  |  :  New stack:
[10:54:46.858] |  :  .  |  :  .  |  :  List of 1
[10:54:46.858] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.858] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.858] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.858] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.858] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.858] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:54:46.858] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:46.858] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.858] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.858] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:46.861] |  :  .  |  :  .  |  :  Old stack:
[10:54:46.861] |  :  .  |  :  .  |  :  List of 1
[10:54:46.861] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.861] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.861] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.861] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.861] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.861] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:54:46.861] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:46.861] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.861] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.861] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:46.865] |  :  .  |  :  .  |  :  Identical
[10:54:46.865] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:54:46.865] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:54:46.865] |  :  .  |  :  .  |  List of future strategies:
[10:54:46.865] |  :  .  |  :  .  |  1. sequential:
[10:54:46.865] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:54:46.865] |  :  .  |  :  .  |     - tweaked: FALSE
[10:54:46.865] |  :  .  |  :  .  |     - call: plan(sequential)
[10:54:46.866] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:46.866] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:46.866] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:46.866] |  :  .  |  SequentialFuture started (and completed)
[10:54:46.867] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:54:46.867] |  :  Launching futures ... done
[10:54:46.867] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:54:46.867] |  Using SequentialFutureBackend ... done
[10:54:46.867] run() for Future (‘SequentialFuture’) ... done
List of 13
 $ value            : int 42
 $ visible          : logi TRUE
 $ stdout           : chr " [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n[26] 26 27 28 29 30 31 32 33 3"| __truncated__
 $ conditions       : list()
 $ rng              : logi FALSE
 $ misuseGlobalEnv  : NULL
 $ misuseConnections:List of 3
  ..$ added   : NULL
  ..$ removed : NULL
  ..$ replaced: NULL
 $ misuseDevices    : NULL
 $ started          : POSIXct[1:1], format: "2025-05-06 10:54:46"
 $ finished         : POSIXct[1:1], format: "2025-05-06 10:54:46"
 $ session_uuid     : chr "bf4679e91465b21e77e3287dad1704c2"
  ..- attr(*, "source")=List of 5
  .. ..$ host  : Named chr "5995ac22cdae"
  .. .. ..- attr(*, "names")= chr "HOSTNAME"
  .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
  .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
  .. ..$ pid   : int 76556
  .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:54:46"
  .. ..$ random: int 2147483647
 $ r_info           :List of 4
  ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
  .. ..$ : int [1:3] 4 5 0
  ..$ os           : chr "unix"
  ..$ os_name      : chr "Linux"
  ..$ captures_utf8: logi TRUE
 $ version          : chr "1.8"
 - attr(*, "class")= chr "FutureResult"
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
 int [1:50] 1 2 3 4 5 6 7 8 9 10 ...
a-b-c-d-e-f-g-h-i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z1 2 3 4 5 6 
"Sepal.Length"	"Sepal.Width"	"Petal.Length"	"Petal.Width"	"Species"
"1"	5.1	3.5	1.4	0.2	"setosa"
"2"	4.9	3	1.4	0.2	"setosa"
"3"	4.7	3.2	1.3	0.2	"setosa"
"4"	4.6	3.1	1.5	0.2	"setosa"
"5"	5	3.6	1.4	0.2	"setosa"
"6"	5.4	3.9	1.7	0.4	"setosa"
"7"	4.6	3.4	1.4	0.3	"setosa"
"8"	5	3.4	1.5	0.2	"setosa"
"9"	4.4	2.9	1.4	0.2	"setosa"
"10"	4.9	3.1	1.5	0.1	"setosa"
FutureResult:
value: ‘integer’
visible: TRUE
stdout: character
conditions: [n = 0] 
RNG used: FALSE
duration: 0.01535058 secs (started 2025-05-06 10:54:46.842314)
version: 1.8
[10:54:46.877] getGlobalsAndPackages() ...
[10:54:46.878] |  Searching for globals ...
[10:54:46.881] |  :  globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[10:54:46.881] |  Searching for globals ... DONE
[10:54:46.881] |  Resolving globals: FALSE
[10:54:46.881] |  Search for packages associated with the globals ...
[10:54:46.881] |  :  Packages associated with globals: [2] ‘base’, ‘utils’
[10:54:46.881] |  :  Packages: [2] ‘base’, ‘utils’
[10:54:46.882] |  Search for packages associated with the globals ... DONE
[10:54:46.882] |  Packages after dropping 'base': [1] ‘utils’
[10:54:46.882] |  Packages after dropping non-attached packages: [1] ‘utils’
[10:54:46.882] |  globals: [0] 
[10:54:46.882] |  packages: [1] ‘utils’
[10:54:46.882] getGlobalsAndPackages() ... done
[10:54:46.882] run() for Future (‘Future’) ...
[10:54:46.882] |  state: ‘created’
[10:54:46.883] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:46.883] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:46.883] |  Using SequentialFutureBackend ...
[10:54:46.883] |  :  Launching futures ...
[10:54:46.883] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:54:46.883] |  :  .  |  getFutureData() ...
[10:54:46.883] |  :  .  |  :  getFutureCore() ...
[10:54:46.883] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘utils’
[10:54:46.883] |  :  .  |  :  getFutureCore() ... done
[10:54:46.883] |  :  .  |  :  getFutureCapture() ...
[10:54:46.884] |  :  .  |  :  getFutureCapture() ... done
[10:54:46.884] |  :  .  |  :  getFutureContext() ...
[10:54:46.884] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:46.884] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:54:46.884] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:46.884] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:54:46.884] |  :  .  |  :  getFutureContext() ... done
[10:54:46.884] |  :  .  |  getFutureData() ... done
[10:54:46.885] |  :  .  |  attachPackages() ...
[10:54:46.885] |  :  .  |  :  packages: [n=1] ‘future’
[10:54:46.886] |  :  .  |  attachPackages() ... DONE
[10:54:46.886] |  :  .  |  attachPackages() ...
[10:54:46.886] |  :  .  |  :  packages: [n=1] ‘utils’
[10:54:46.886] |  :  .  |  attachPackages() ... DONE
[10:54:46.886] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:46.886] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:54:46.887] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:46.887] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:46.887] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:46.887] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:54:46.887] |  :  .  |  :  .  |  New stack:
[10:54:46.887] |  :  .  |  :  .  |  List of 1
[10:54:46.887] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.887] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.887] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.887] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.887] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.887] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:46.887] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:46.889] |  :  .  |  :  .  |  Old stack:
[10:54:46.890] |  :  .  |  :  .  |  List of 1
[10:54:46.890] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.890] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.890] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.890] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.890] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.890] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:54:46.890] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:46.890] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.890] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.890] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:46.892] |  :  .  |  :  .  |  Not identical
[10:54:46.893] |  :  .  |  :  .  |  all.equal() for future ...
[10:54:46.893] |  :  .  |  :  .  |  :  List of 2
[10:54:46.893] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.893] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.893] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.893] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.893] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.893] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:46.893] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.893] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.893] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.893] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.893] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.893] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:54:46.893] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:46.893] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.893] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.897] |  :  .  |  :  .  |  all.equal() for future ... done
[10:54:46.897] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:54:46.897] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:54:46.897] |  :  .  |  :  .  List of future strategies:
[10:54:46.897] |  :  .  |  :  .  1. sequential:
[10:54:46.897] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:54:46.897] |  :  .  |  :  .     - tweaked: FALSE
[10:54:46.897] |  :  .  |  :  .     - call: plan(sequential)
[10:54:46.898] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:46.898] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:46.900] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:46.900] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:46.900] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:46.901] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:54:46.901] |  :  .  |  :  .  |  :  New stack:
[10:54:46.901] |  :  .  |  :  .  |  :  List of 1
[10:54:46.901] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.901] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.901] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.901] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.901] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.901] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:54:46.901] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:46.901] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.901] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.901] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:46.904] |  :  .  |  :  .  |  :  Old stack:
[10:54:46.904] |  :  .  |  :  .  |  :  List of 1
[10:54:46.904] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.904] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.904] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.904] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.904] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.904] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:54:46.904] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:46.904] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.904] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.904] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:46.908] |  :  .  |  :  .  |  :  Identical
[10:54:46.908] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:54:46.908] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:54:46.908] |  :  .  |  :  .  |  List of future strategies:
[10:54:46.908] |  :  .  |  :  .  |  1. sequential:
[10:54:46.908] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:54:46.908] |  :  .  |  :  .  |     - tweaked: FALSE
[10:54:46.908] |  :  .  |  :  .  |     - call: plan(sequential)
[10:54:46.909] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:46.909] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:46.909] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:46.909] |  :  .  |  SequentialFuture started (and completed)
[10:54:46.909] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:54:46.909] |  :  Launching futures ... done
[10:54:46.909] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:54:46.910] |  Using SequentialFutureBackend ... done
[10:54:46.910] run() for Future (‘SequentialFuture’) ... done
 [1] " [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25"  
 [2] "[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50"  
 [3] " int [1:50] 1 2 3 4 5 6 7 8 9 10 ..."                                             
 [4] "a-b-c-d-e-f-g-h-i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z1 2 3 4 5 6 "                  
 [5] "\"Sepal.Length\"\t\"Sepal.Width\"\t\"Petal.Length\"\t\"Petal.Width\"\t\"Species\""
 [6] "\"1\"\t5.1\t3.5\t1.4\t0.2\t\"setosa\""                                            
 [7] "\"2\"\t4.9\t3\t1.4\t0.2\t\"setosa\""                                              
 [8] "\"3\"\t4.7\t3.2\t1.3\t0.2\t\"setosa\""                                            
 [9] "\"4\"\t4.6\t3.1\t1.5\t0.2\t\"setosa\""                                            
[10] "\"5\"\t5\t3.6\t1.4\t0.2\t\"setosa\""                                              
[11] "\"6\"\t5.4\t3.9\t1.7\t0.4\t\"setosa\""                                            
[12] "\"7\"\t4.6\t3.4\t1.4\t0.3\t\"setosa\""                                            
[13] "\"8\"\t5\t3.4\t1.5\t0.2\t\"setosa\""                                              
[14] "\"9\"\t4.4\t2.9\t1.4\t0.2\t\"setosa\""                                            
[15] "\"10\"\t4.9\t3.1\t1.5\t0.1\t\"setosa\""                                           
- stdout = structure(TRUE, drop = TRUE)
[10:54:46.910] getGlobalsAndPackages() ...
[10:54:46.910] |  Searching for globals ...
[10:54:46.911] |  :  globals found: [1] ‘print’
[10:54:46.911] |  Searching for globals ... DONE
[10:54:46.911] |  Resolving globals: FALSE
[10:54:46.911] |  Search for packages associated with the globals ...
[10:54:46.911] |  :  Packages associated with globals: [1] ‘base’
[10:54:46.912] |  :  Packages: [1] ‘base’
[10:54:46.912] |  Search for packages associated with the globals ... DONE
[10:54:46.912] |  Packages after dropping 'base': [0] 
[10:54:46.912] |  globals: [0] 
[10:54:46.912] |  packages: [0] 
[10:54:46.912] getGlobalsAndPackages() ... done
[10:54:46.912] run() for Future (‘Future’) ...
[10:54:46.912] |  state: ‘created’
[10:54:46.912] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:46.913] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:46.913] |  Using SequentialFutureBackend ...
[10:54:46.913] |  :  Launching futures ...
[10:54:46.913] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:54:46.913] |  :  .  |  getFutureData() ...
[10:54:46.913] |  :  .  |  :  getFutureCore() ...
[10:54:46.913] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:54:46.913] |  :  .  |  :  getFutureCore() ... done
[10:54:46.913] |  :  .  |  :  getFutureCapture() ...
[10:54:46.913] |  :  .  |  :  getFutureCapture() ... done
[10:54:46.914] |  :  .  |  :  getFutureContext() ...
[10:54:46.914] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:46.914] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:54:46.914] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:46.914] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:54:46.914] |  :  .  |  :  getFutureContext() ... done
[10:54:46.914] |  :  .  |  getFutureData() ... done
[10:54:46.914] |  :  .  |  attachPackages() ...
[10:54:46.914] |  :  .  |  :  packages: [n=1] ‘future’
[10:54:46.915] |  :  .  |  attachPackages() ... DONE
[10:54:46.915] |  :  .  |  attachPackages() ...
[10:54:46.915] |  :  .  |  :  packages: [n=0] 
[10:54:46.915] |  :  .  |  attachPackages() ... DONE
[10:54:46.915] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:46.915] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:54:46.915] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:46.916] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:46.916] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:46.916] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:54:46.916] |  :  .  |  :  .  |  New stack:
[10:54:46.916] |  :  .  |  :  .  |  List of 1
[10:54:46.916] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.916] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.916] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.916] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.916] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.916] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:46.916] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:46.918] |  :  .  |  :  .  |  Old stack:
[10:54:46.918] |  :  .  |  :  .  |  List of 1
[10:54:46.918] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.918] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.918] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.918] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.918] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.918] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:54:46.918] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:46.918] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.918] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.918] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:46.921] |  :  .  |  :  .  |  Not identical
[10:54:46.921] |  :  .  |  :  .  |  all.equal() for future ...
[10:54:46.921] |  :  .  |  :  .  |  :  List of 2
[10:54:46.921] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.921] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.921] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.921] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.921] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.921] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:46.921] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.921] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.921] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.921] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.921] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.921] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:54:46.921] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:46.921] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.921] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.926] |  :  .  |  :  .  |  all.equal() for future ... done
[10:54:46.926] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:54:46.926] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:54:46.926] |  :  .  |  :  .  List of future strategies:
[10:54:46.926] |  :  .  |  :  .  1. sequential:
[10:54:46.926] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:54:46.926] |  :  .  |  :  .     - tweaked: FALSE
[10:54:46.926] |  :  .  |  :  .     - call: plan(sequential)
[10:54:46.927] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:46.927] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:46.929] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:46.930] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:46.930] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:46.930] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:54:46.930] |  :  .  |  :  .  |  :  New stack:
[10:54:46.930] |  :  .  |  :  .  |  :  List of 1
[10:54:46.930] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.930] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.930] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.930] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.930] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.930] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:54:46.930] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:46.930] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.930] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.930] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:46.933] |  :  .  |  :  .  |  :  Old stack:
[10:54:46.933] |  :  .  |  :  .  |  :  List of 1
[10:54:46.933] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.933] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.933] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.933] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.933] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.933] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:54:46.933] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:46.933] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.933] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.933] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:46.936] |  :  .  |  :  .  |  :  Identical
[10:54:46.936] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:54:46.936] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:54:46.936] |  :  .  |  :  .  |  List of future strategies:
[10:54:46.936] |  :  .  |  :  .  |  1. sequential:
[10:54:46.936] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:54:46.936] |  :  .  |  :  .  |     - tweaked: FALSE
[10:54:46.936] |  :  .  |  :  .  |     - call: plan(sequential)
[10:54:46.936] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:46.937] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:46.937] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:46.937] |  :  .  |  SequentialFuture started (and completed)
[10:54:46.937] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:54:46.937] |  :  Launching futures ... done
[10:54:46.937] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:54:46.937] |  Using SequentialFutureBackend ... done
[10:54:46.937] run() for Future (‘SequentialFuture’) ... done
[1] 42
- stdout = FALSE
[10:54:46.938] getGlobalsAndPackages() ...
[10:54:46.938] |  Searching for globals ...
[10:54:46.941] |  :  globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[10:54:46.941] |  Searching for globals ... DONE
[10:54:46.941] |  Resolving globals: FALSE
[10:54:46.941] |  Search for packages associated with the globals ...
[10:54:46.941] |  :  Packages associated with globals: [2] ‘base’, ‘utils’
[10:54:46.942] |  :  Packages: [2] ‘base’, ‘utils’
[10:54:46.942] |  Search for packages associated with the globals ... DONE
[10:54:46.942] |  Packages after dropping 'base': [1] ‘utils’
[10:54:46.942] |  Packages after dropping non-attached packages: [1] ‘utils’
[10:54:46.942] |  globals: [0] 
[10:54:46.942] |  packages: [1] ‘utils’
[10:54:46.943] getGlobalsAndPackages() ... done
[10:54:46.943] run() for Future (‘Future’) ...
[10:54:46.943] |  state: ‘created’
[10:54:46.943] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:46.943] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:46.943] |  Using SequentialFutureBackend ...
[10:54:46.943] |  :  Launching futures ...
[10:54:46.943] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:54:46.943] |  :  .  |  getFutureData() ...
[10:54:46.944] |  :  .  |  :  getFutureCore() ...
[10:54:46.944] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘utils’
[10:54:46.944] |  :  .  |  :  getFutureCore() ... done
[10:54:46.944] |  :  .  |  :  getFutureCapture() ...
[10:54:46.944] |  :  .  |  :  getFutureCapture() ... done
[10:54:46.944] |  :  .  |  :  getFutureContext() ...
[10:54:46.944] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:46.944] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:54:46.944] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:46.944] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:54:46.945] |  :  .  |  :  getFutureContext() ... done
[10:54:46.945] |  :  .  |  getFutureData() ... done
[10:54:46.945] |  :  .  |  attachPackages() ...
[10:54:46.945] |  :  .  |  :  packages: [n=1] ‘future’
[10:54:46.945] |  :  .  |  attachPackages() ... DONE
[10:54:46.945] |  :  .  |  attachPackages() ...
[10:54:46.945] |  :  .  |  :  packages: [n=1] ‘utils’
[10:54:46.945] |  :  .  |  attachPackages() ... DONE
[10:54:46.946] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:46.946] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:54:46.946] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:46.946] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:46.946] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:46.947] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:54:46.947] |  :  .  |  :  .  |  New stack:
[10:54:46.947] |  :  .  |  :  .  |  List of 1
[10:54:46.947] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.947] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.947] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.947] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.947] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.947] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:46.947] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:46.950] |  :  .  |  :  .  |  Old stack:
[10:54:46.950] |  :  .  |  :  .  |  List of 1
[10:54:46.950] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.950] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.950] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.950] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.950] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.950] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:54:46.950] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:46.950] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.950] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.950] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:46.953] |  :  .  |  :  .  |  Not identical
[10:54:46.953] |  :  .  |  :  .  |  all.equal() for future ...
[10:54:46.953] |  :  .  |  :  .  |  :  List of 2
[10:54:46.953] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.953] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.953] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.953] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.953] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.953] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:46.953] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.953] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.953] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.953] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.953] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.953] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:54:46.953] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:46.953] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.953] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.958] |  :  .  |  :  .  |  all.equal() for future ... done
[10:54:46.958] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:54:46.958] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:54:46.958] |  :  .  |  :  .  List of future strategies:
[10:54:46.958] |  :  .  |  :  .  1. sequential:
[10:54:46.958] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:54:46.958] |  :  .  |  :  .     - tweaked: FALSE
[10:54:46.958] |  :  .  |  :  .     - call: plan(sequential)
[10:54:46.959] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:46.959] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:46.961] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:46.961] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:46.961] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:46.962] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:54:46.962] |  :  .  |  :  .  |  :  New stack:
[10:54:46.962] |  :  .  |  :  .  |  :  List of 1
[10:54:46.962] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.962] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.962] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.962] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.962] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.962] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:54:46.962] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:46.962] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.962] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.962] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:46.965] |  :  .  |  :  .  |  :  Old stack:
[10:54:46.965] |  :  .  |  :  .  |  :  List of 1
[10:54:46.965] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.965] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.965] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.965] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.965] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.965] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:54:46.965] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:46.965] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.965] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.965] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:46.968] |  :  .  |  :  .  |  :  Identical
[10:54:46.968] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:54:46.968] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:54:46.968] |  :  .  |  :  .  |  List of future strategies:
[10:54:46.968] |  :  .  |  :  .  |  1. sequential:
[10:54:46.968] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:54:46.968] |  :  .  |  :  .  |     - tweaked: FALSE
[10:54:46.968] |  :  .  |  :  .  |     - call: plan(sequential)
[10:54:46.970] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:46.970] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:46.970] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:46.970] |  :  .  |  SequentialFuture started (and completed)
[10:54:46.971] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:54:46.971] |  :  Launching futures ... done
[10:54:46.971] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:54:46.971] |  Using SequentialFutureBackend ... done
[10:54:46.971] run() for Future (‘SequentialFuture’) ... done
List of 13
 $ value            : int 42
 $ visible          : logi TRUE
 $ stdout           : NULL
 $ conditions       : list()
 $ rng              : logi FALSE
 $ misuseGlobalEnv  : NULL
 $ misuseConnections:List of 3
  ..$ added   : NULL
  ..$ removed : NULL
  ..$ replaced: NULL
 $ misuseDevices    : NULL
 $ started          : POSIXct[1:1], format: "2025-05-06 10:54:46"
 $ finished         : POSIXct[1:1], format: "2025-05-06 10:54:46"
 $ session_uuid     : chr "bf4679e91465b21e77e3287dad1704c2"
  ..- attr(*, "source")=List of 5
  .. ..$ host  : Named chr "5995ac22cdae"
  .. .. ..- attr(*, "names")= chr "HOSTNAME"
  .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
  .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
  .. ..$ pid   : int 76556
  .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:54:46"
  .. ..$ random: int 2147483647
 $ r_info           :List of 4
  ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
  .. ..$ : int [1:3] 4 5 0
  ..$ os           : chr "unix"
  ..$ os_name      : chr "Linux"
  ..$ captures_utf8: logi TRUE
 $ version          : chr "1.8"
 - attr(*, "class")= chr "FutureResult"
[10:54:46.980] getGlobalsAndPackages() ...
[10:54:46.980] |  Searching for globals ...
[10:54:46.984] |  :  globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[10:54:46.984] |  Searching for globals ... DONE
[10:54:46.984] |  Resolving globals: FALSE
[10:54:46.984] |  Search for packages associated with the globals ...
[10:54:46.984] |  :  Packages associated with globals: [2] ‘base’, ‘utils’
[10:54:46.985] |  :  Packages: [2] ‘base’, ‘utils’
[10:54:46.985] |  Search for packages associated with the globals ... DONE
[10:54:46.985] |  Packages after dropping 'base': [1] ‘utils’
[10:54:46.985] |  Packages after dropping non-attached packages: [1] ‘utils’
[10:54:46.985] |  globals: [0] 
[10:54:46.985] |  packages: [1] ‘utils’
[10:54:46.985] getGlobalsAndPackages() ... done
[10:54:46.986] run() for Future (‘Future’) ...
[10:54:46.986] |  state: ‘created’
[10:54:46.986] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:46.986] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:46.986] |  Using SequentialFutureBackend ...
[10:54:46.986] |  :  Launching futures ...
[10:54:46.986] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:54:46.986] |  :  .  |  getFutureData() ...
[10:54:46.986] |  :  .  |  :  getFutureCore() ...
[10:54:46.987] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘utils’
[10:54:46.987] |  :  .  |  :  getFutureCore() ... done
[10:54:46.987] |  :  .  |  :  getFutureCapture() ...
[10:54:46.987] |  :  .  |  :  getFutureCapture() ... done
[10:54:46.987] |  :  .  |  :  getFutureContext() ...
[10:54:46.987] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:46.987] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:54:46.987] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:46.987] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:54:46.988] |  :  .  |  :  getFutureContext() ... done
[10:54:46.988] |  :  .  |  getFutureData() ... done
[10:54:46.988] |  :  .  |  attachPackages() ...
[10:54:46.988] |  :  .  |  :  packages: [n=1] ‘future’
[10:54:46.988] |  :  .  |  attachPackages() ... DONE
[10:54:46.988] |  :  .  |  attachPackages() ...
[10:54:46.988] |  :  .  |  :  packages: [n=1] ‘utils’
[10:54:46.988] |  :  .  |  attachPackages() ... DONE
[10:54:46.989] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:46.989] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:54:46.989] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:46.989] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:46.989] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:46.990] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:54:46.990] |  :  .  |  :  .  |  New stack:
[10:54:46.990] |  :  .  |  :  .  |  List of 1
[10:54:46.990] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.990] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.990] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.990] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.990] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.990] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:46.990] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:46.994] |  :  .  |  :  .  |  Old stack:
[10:54:46.994] |  :  .  |  :  .  |  List of 1
[10:54:46.994] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.994] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.994] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.994] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.994] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.994] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:54:46.994] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:46.994] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.994] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.994] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:46.997] |  :  .  |  :  .  |  Not identical
[10:54:46.997] |  :  .  |  :  .  |  all.equal() for future ...
[10:54:46.997] |  :  .  |  :  .  |  :  List of 2
[10:54:46.997] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.997] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.997] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.997] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.997] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.997] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:46.997] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:46.997] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:46.997] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.997] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.997] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:46.997] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:54:46.997] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:46.997] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:46.997] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.002] |  :  .  |  :  .  |  all.equal() for future ... done
[10:54:47.002] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:54:47.002] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:54:47.002] |  :  .  |  :  .  List of future strategies:
[10:54:47.002] |  :  .  |  :  .  1. sequential:
[10:54:47.002] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:54:47.002] |  :  .  |  :  .     - tweaked: FALSE
[10:54:47.002] |  :  .  |  :  .     - call: plan(sequential)
[10:54:47.003] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:47.003] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.005] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.005] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.005] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:47.006] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:54:47.006] |  :  .  |  :  .  |  :  New stack:
[10:54:47.006] |  :  .  |  :  .  |  :  List of 1
[10:54:47.006] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.006] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.006] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.006] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.006] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.006] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:54:47.006] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:47.006] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.006] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.006] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.009] |  :  .  |  :  .  |  :  Old stack:
[10:54:47.009] |  :  .  |  :  .  |  :  List of 1
[10:54:47.009] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.009] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.009] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.009] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.009] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.009] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:54:47.009] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:47.009] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.009] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.009] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.014] |  :  .  |  :  .  |  :  Identical
[10:54:47.014] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:54:47.014] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:54:47.014] |  :  .  |  :  .  |  List of future strategies:
[10:54:47.014] |  :  .  |  :  .  |  1. sequential:
[10:54:47.014] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:54:47.014] |  :  .  |  :  .  |     - tweaked: FALSE
[10:54:47.014] |  :  .  |  :  .  |     - call: plan(sequential)
[10:54:47.014] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:47.014] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.015] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.015] |  :  .  |  SequentialFuture started (and completed)
[10:54:47.015] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:54:47.015] |  :  Launching futures ... done
[10:54:47.015] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:54:47.015] |  Using SequentialFutureBackend ... done
[10:54:47.015] run() for Future (‘SequentialFuture’) ... done
- stdout = structure(TRUE, drop = TRUE)
[10:54:47.016] getGlobalsAndPackages() ...
[10:54:47.016] |  Searching for globals ...
[10:54:47.016] |  :  globals found: [1] ‘print’
[10:54:47.017] |  Searching for globals ... DONE
[10:54:47.017] |  Resolving globals: FALSE
[10:54:47.017] |  Search for packages associated with the globals ...
[10:54:47.017] |  :  Packages associated with globals: [1] ‘base’
[10:54:47.017] |  :  Packages: [1] ‘base’
[10:54:47.017] |  Search for packages associated with the globals ... DONE
[10:54:47.017] |  Packages after dropping 'base': [0] 
[10:54:47.018] |  globals: [0] 
[10:54:47.018] |  packages: [0] 
[10:54:47.018] getGlobalsAndPackages() ... done
[10:54:47.018] run() for Future (‘Future’) ...
[10:54:47.018] |  state: ‘created’
[10:54:47.018] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.018] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.018] |  Using SequentialFutureBackend ...
[10:54:47.018] |  :  Launching futures ...
[10:54:47.019] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:54:47.019] |  :  .  |  getFutureData() ...
[10:54:47.019] |  :  .  |  :  getFutureCore() ...
[10:54:47.019] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:54:47.019] |  :  .  |  :  getFutureCore() ... done
[10:54:47.019] |  :  .  |  :  getFutureCapture() ...
[10:54:47.019] |  :  .  |  :  getFutureCapture() ... done
[10:54:47.019] |  :  .  |  :  getFutureContext() ...
[10:54:47.019] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.020] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:54:47.020] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.020] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:54:47.020] |  :  .  |  :  getFutureContext() ... done
[10:54:47.020] |  :  .  |  getFutureData() ... done
[10:54:47.020] |  :  .  |  attachPackages() ...
[10:54:47.020] |  :  .  |  :  packages: [n=1] ‘future’
[10:54:47.020] |  :  .  |  attachPackages() ... DONE
[10:54:47.020] |  :  .  |  attachPackages() ...
[10:54:47.021] |  :  .  |  :  packages: [n=0] 
[10:54:47.021] |  :  .  |  attachPackages() ... DONE
[10:54:47.021] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.021] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:54:47.021] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.022] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.022] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:47.022] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:54:47.022] |  :  .  |  :  .  |  New stack:
[10:54:47.022] |  :  .  |  :  .  |  List of 1
[10:54:47.022] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.022] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.022] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.022] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.022] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.022] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.022] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.024] |  :  .  |  :  .  |  Old stack:
[10:54:47.024] |  :  .  |  :  .  |  List of 1
[10:54:47.024] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.024] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.024] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.024] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.024] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.024] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:54:47.024] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:47.024] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.024] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.024] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.027] |  :  .  |  :  .  |  Not identical
[10:54:47.027] |  :  .  |  :  .  |  all.equal() for future ...
[10:54:47.028] |  :  .  |  :  .  |  :  List of 2
[10:54:47.028] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.028] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.028] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.028] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.028] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.028] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.028] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.028] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.028] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.028] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.028] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.028] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:54:47.028] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:47.028] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.028] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.032] |  :  .  |  :  .  |  all.equal() for future ... done
[10:54:47.032] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:54:47.032] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:54:47.033] |  :  .  |  :  .  List of future strategies:
[10:54:47.033] |  :  .  |  :  .  1. sequential:
[10:54:47.033] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:54:47.033] |  :  .  |  :  .     - tweaked: FALSE
[10:54:47.033] |  :  .  |  :  .     - call: plan(sequential)
[10:54:47.033] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:47.033] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.036] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.036] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.036] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:47.036] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:54:47.037] |  :  .  |  :  .  |  :  New stack:
[10:54:47.037] |  :  .  |  :  .  |  :  List of 1
[10:54:47.037] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.037] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.037] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.037] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.037] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.037] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:54:47.037] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:47.037] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.037] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.037] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.040] |  :  .  |  :  .  |  :  Old stack:
[10:54:47.040] |  :  .  |  :  .  |  :  List of 1
[10:54:47.040] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.040] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.040] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.040] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.040] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.040] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:54:47.040] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:47.040] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.040] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.040] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.043] |  :  .  |  :  .  |  :  Identical
[10:54:47.043] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:54:47.043] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:54:47.043] |  :  .  |  :  .  |  List of future strategies:
[10:54:47.043] |  :  .  |  :  .  |  1. sequential:
[10:54:47.043] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:54:47.043] |  :  .  |  :  .  |     - tweaked: FALSE
[10:54:47.043] |  :  .  |  :  .  |     - call: plan(sequential)
[10:54:47.043] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:47.044] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.044] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.044] |  :  .  |  SequentialFuture started (and completed)
[10:54:47.044] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:54:47.044] |  :  Launching futures ... done
[10:54:47.044] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:54:47.044] |  Using SequentialFutureBackend ... done
[10:54:47.044] run() for Future (‘SequentialFuture’) ... done
[1] 42
- stdout = NA
[10:54:47.045] getGlobalsAndPackages() ...
[10:54:47.045] |  Searching for globals ...
[10:54:47.048] |  :  globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[10:54:47.048] |  Searching for globals ... DONE
[10:54:47.048] |  Resolving globals: FALSE
[10:54:47.048] |  Search for packages associated with the globals ...
[10:54:47.049] |  :  Packages associated with globals: [2] ‘base’, ‘utils’
[10:54:47.049] |  :  Packages: [2] ‘base’, ‘utils’
[10:54:47.049] |  Search for packages associated with the globals ... DONE
[10:54:47.049] |  Packages after dropping 'base': [1] ‘utils’
[10:54:47.049] |  Packages after dropping non-attached packages: [1] ‘utils’
[10:54:47.049] |  globals: [0] 
[10:54:47.050] |  packages: [1] ‘utils’
[10:54:47.050] getGlobalsAndPackages() ... done
[10:54:47.050] run() for Future (‘Future’) ...
[10:54:47.050] |  state: ‘created’
[10:54:47.050] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.050] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.050] |  Using SequentialFutureBackend ...
[10:54:47.050] |  :  Launching futures ...
[10:54:47.051] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:54:47.051] |  :  .  |  getFutureData() ...
[10:54:47.051] |  :  .  |  :  getFutureCore() ...
[10:54:47.051] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘utils’
[10:54:47.051] |  :  .  |  :  getFutureCore() ... done
[10:54:47.051] |  :  .  |  :  getFutureCapture() ...
[10:54:47.051] |  :  .  |  :  getFutureCapture() ... done
[10:54:47.051] |  :  .  |  :  getFutureContext() ...
[10:54:47.051] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.051] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:54:47.052] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.052] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:54:47.052] |  :  .  |  :  getFutureContext() ... done
[10:54:47.052] |  :  .  |  getFutureData() ... done
[10:54:47.052] |  :  .  |  attachPackages() ...
[10:54:47.052] |  :  .  |  :  packages: [n=1] ‘future’
[10:54:47.052] |  :  .  |  attachPackages() ... DONE
[10:54:47.052] |  :  .  |  attachPackages() ...
[10:54:47.052] |  :  .  |  :  packages: [n=1] ‘utils’
[10:54:47.053] |  :  .  |  attachPackages() ... DONE
[10:54:47.053] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.053] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:54:47.053] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.053] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.054] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:47.054] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:54:47.054] |  :  .  |  :  .  |  New stack:
[10:54:47.054] |  :  .  |  :  .  |  List of 1
[10:54:47.054] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.054] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.054] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.054] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.054] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.054] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.054] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.057] |  :  .  |  :  .  |  Old stack:
[10:54:47.057] |  :  .  |  :  .  |  List of 1
[10:54:47.057] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.057] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.057] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.057] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.057] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.057] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:54:47.057] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:47.057] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.057] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.057] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.060] |  :  .  |  :  .  |  Not identical
[10:54:47.060] |  :  .  |  :  .  |  all.equal() for future ...
[10:54:47.061] |  :  .  |  :  .  |  :  List of 2
[10:54:47.061] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.061] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.061] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.061] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.061] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.061] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.061] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.061] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.061] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.061] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.061] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.061] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:54:47.061] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:47.061] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.061] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.065] |  :  .  |  :  .  |  all.equal() for future ... done
[10:54:47.065] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:54:47.065] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:54:47.065] |  :  .  |  :  .  List of future strategies:
[10:54:47.065] |  :  .  |  :  .  1. sequential:
[10:54:47.065] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:54:47.065] |  :  .  |  :  .     - tweaked: FALSE
[10:54:47.065] |  :  .  |  :  .     - call: plan(sequential)
[10:54:47.066] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:47.066] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
 int [1:50] 1 2 3 4 5 6 7 8 9 10 ...
a-b-c-d-e-f-g-h-i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z1 2 3 4 5 6 
"Sepal.Length"	"Sepal.Width"	"Petal.Length"	"Petal.Width"	"Species"
"1"	5.1	3.5	1.4	0.2	"setosa"
"2"	4.9	3	1.4	0.2	"setosa"
"3"	4.7	3.2	1.3	0.2	"setosa"
"4"	4.6	3.1	1.5	0.2	"setosa"
"5"	5	3.6	1.4	0.2	"setosa"
"6"	5.4	3.9	1.7	0.4	"setosa"
"7"	4.6	3.4	1.4	0.3	"setosa"
"8"	5	3.4	1.5	0.2	"setosa"
"9"	4.4	2.9	1.4	0.2	"setosa"
"10"	4.9	3.1	1.5	0.1	"setosa"
[10:54:47.068] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.068] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.068] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:47.068] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:54:47.068] |  :  .  |  :  .  |  :  New stack:
[10:54:47.068] |  :  .  |  :  .  |  :  List of 1
[10:54:47.068] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.068] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.068] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.068] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.068] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.068] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:54:47.068] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:47.068] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.068] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.068] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.071] |  :  .  |  :  .  |  :  Old stack:
[10:54:47.071] |  :  .  |  :  .  |  :  List of 1
[10:54:47.071] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.071] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.071] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.071] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.071] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.071] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:54:47.071] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:47.071] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.071] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.071] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.074] |  :  .  |  :  .  |  :  Identical
[10:54:47.074] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:54:47.074] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:54:47.074] |  :  .  |  :  .  |  List of future strategies:
[10:54:47.074] |  :  .  |  :  .  |  1. sequential:
[10:54:47.074] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:54:47.074] |  :  .  |  :  .  |     - tweaked: FALSE
[10:54:47.074] |  :  .  |  :  .  |     - call: plan(sequential)
[10:54:47.075] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:47.075] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.076] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.076] |  :  .  |  SequentialFuture started (and completed)
[10:54:47.076] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:54:47.077] |  :  Launching futures ... done
[10:54:47.077] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:54:47.077] |  Using SequentialFutureBackend ... done
[10:54:47.077] run() for Future (‘SequentialFuture’) ... done
List of 13
 $ value            : int 42
 $ visible          : logi TRUE
 $ stdout           : NULL
 $ conditions       : list()
 $ rng              : logi FALSE
 $ misuseGlobalEnv  : NULL
 $ misuseConnections: NULL
 $ misuseDevices    : NULL
 $ started          : POSIXct[1:1], format: "2025-05-06 10:54:47"
 $ finished         : POSIXct[1:1], format: "2025-05-06 10:54:47"
 $ session_uuid     : chr "bf4679e91465b21e77e3287dad1704c2"
  ..- attr(*, "source")=List of 5
  .. ..$ host  : Named chr "5995ac22cdae"
  .. .. ..- attr(*, "names")= chr "HOSTNAME"
  .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
  .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
  .. ..$ pid   : int 76556
  .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:54:46"
  .. ..$ random: int 2147483647
 $ r_info           :List of 4
  ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
  .. ..$ : int [1:3] 4 5 0
  ..$ os           : chr "unix"
  ..$ os_name      : chr "Linux"
  ..$ captures_utf8: logi TRUE
 $ version          : chr "1.8"
 - attr(*, "class")= chr "FutureResult"
[10:54:47.085] getGlobalsAndPackages() ...
[10:54:47.085] |  Searching for globals ...
[10:54:47.088] |  :  globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[10:54:47.088] |  Searching for globals ... DONE
[10:54:47.089] |  Resolving globals: FALSE
[10:54:47.089] |  Search for packages associated with the globals ...
[10:54:47.089] |  :  Packages associated with globals: [2] ‘base’, ‘utils’
[10:54:47.089] |  :  Packages: [2] ‘base’, ‘utils’
[10:54:47.089] |  Search for packages associated with the globals ... DONE
[10:54:47.090] |  Packages after dropping 'base': [1] ‘utils’
[10:54:47.090] |  Packages after dropping non-attached packages: [1] ‘utils’
[10:54:47.090] |  globals: [0] 
[10:54:47.090] |  packages: [1] ‘utils’
[10:54:47.090] getGlobalsAndPackages() ... done
[10:54:47.090] run() for Future (‘Future’) ...
[10:54:47.090] |  state: ‘created’
[10:54:47.091] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.091] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.091] |  Using SequentialFutureBackend ...
[10:54:47.091] |  :  Launching futures ...
[10:54:47.091] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:54:47.091] |  :  .  |  getFutureData() ...
[10:54:47.091] |  :  .  |  :  getFutureCore() ...
[10:54:47.091] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘utils’
[10:54:47.091] |  :  .  |  :  getFutureCore() ... done
[10:54:47.091] |  :  .  |  :  getFutureCapture() ...
[10:54:47.092] |  :  .  |  :  getFutureCapture() ... done
[10:54:47.092] |  :  .  |  :  getFutureContext() ...
[10:54:47.092] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.092] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:54:47.092] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.092] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:54:47.092] |  :  .  |  :  getFutureContext() ... done
[10:54:47.092] |  :  .  |  getFutureData() ... done
[10:54:47.092] |  :  .  |  attachPackages() ...
[10:54:47.093] |  :  .  |  :  packages: [n=1] ‘future’
[10:54:47.093] |  :  .  |  attachPackages() ... DONE
[10:54:47.093] |  :  .  |  attachPackages() ...
[10:54:47.093] |  :  .  |  :  packages: [n=1] ‘utils’
[10:54:47.093] |  :  .  |  attachPackages() ... DONE
[10:54:47.093] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.094] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:54:47.094] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.094] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.094] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:47.094] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:54:47.094] |  :  .  |  :  .  |  New stack:
[10:54:47.094] |  :  .  |  :  .  |  List of 1
[10:54:47.094] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.094] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.094] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.094] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.094] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.094] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.094] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.098] |  :  .  |  :  .  |  Old stack:
[10:54:47.098] |  :  .  |  :  .  |  List of 1
[10:54:47.098] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.098] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.098] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.098] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.098] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.098] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:54:47.098] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:47.098] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.098] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.098] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.101] |  :  .  |  :  .  |  Not identical
[10:54:47.101] |  :  .  |  :  .  |  all.equal() for future ...
[10:54:47.102] |  :  .  |  :  .  |  :  List of 2
[10:54:47.102] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.102] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.102] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.102] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.102] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.102] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.102] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.102] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.102] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.102] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.102] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.102] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:54:47.102] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:47.102] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.102] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.106] |  :  .  |  :  .  |  all.equal() for future ... done
[10:54:47.106] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:54:47.107] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:54:47.107] |  :  .  |  :  .  List of future strategies:
[10:54:47.107] |  :  .  |  :  .  1. sequential:
[10:54:47.107] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:54:47.107] |  :  .  |  :  .     - tweaked: FALSE
[10:54:47.107] |  :  .  |  :  .     - call: plan(sequential)
[10:54:47.107] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:47.107] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
 int [1:50] 1 2 3 4 5 6 7 8 9 10 ...
a-b-c-d-e-f-g-h-i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z1 2 3 4 5 6 
"Sepal.Length"	"Sepal.Width"	"Petal.Length"	"Petal.Width"	"Species"
"1"	5.1	3.5	1.4	0.2	"setosa"
"2"	4.9	3	1.4	0.2	"setosa"
"3"	4.7	3.2	1.3	0.2	"setosa"
"4"	4.6	3.1	1.5	0.2	"setosa"
"5"	5	3.6	1.4	0.2	"setosa"
"6"	5.4	3.9	1.7	0.4	"setosa"
"7"	4.6	3.4	1.4	0.3	"setosa"
"8"	5	3.4	1.5	0.2	"setosa"
"9"	4.4	2.9	1.4	0.2	"setosa"
"10"	4.9	3.1	1.5	0.1	"setosa"
[10:54:47.109] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.109] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.109] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:47.109] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:54:47.109] |  :  .  |  :  .  |  :  New stack:
[10:54:47.110] |  :  .  |  :  .  |  :  List of 1
[10:54:47.110] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.110] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.110] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.110] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.110] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.110] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:54:47.110] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:47.110] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.110] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.110] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.113] |  :  .  |  :  .  |  :  Old stack:
[10:54:47.113] |  :  .  |  :  .  |  :  List of 1
[10:54:47.113] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.113] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.113] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.113] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.113] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.113] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:54:47.113] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:47.113] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.113] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.113] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.116] |  :  .  |  :  .  |  :  Identical
[10:54:47.116] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:54:47.116] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:54:47.116] |  :  .  |  :  .  |  List of future strategies:
[10:54:47.116] |  :  .  |  :  .  |  1. sequential:
[10:54:47.116] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:54:47.116] |  :  .  |  :  .  |     - tweaked: FALSE
[10:54:47.116] |  :  .  |  :  .  |     - call: plan(sequential)
[10:54:47.118] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:47.118] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.118] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.118] |  :  .  |  SequentialFuture started (and completed)
[10:54:47.119] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:54:47.119] |  :  Launching futures ... done
[10:54:47.119] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:54:47.119] |  Using SequentialFutureBackend ... done
[10:54:47.119] run() for Future (‘SequentialFuture’) ... done
- stdout = structure(TRUE, drop = TRUE)
[10:54:47.119] getGlobalsAndPackages() ...
[10:54:47.120] |  Searching for globals ...
[10:54:47.120] |  :  globals found: [1] ‘print’
[10:54:47.120] |  Searching for globals ... DONE
[10:54:47.120] |  Resolving globals: FALSE
[10:54:47.120] |  Search for packages associated with the globals ...
[10:54:47.121] |  :  Packages associated with globals: [1] ‘base’
[10:54:47.121] |  :  Packages: [1] ‘base’
[10:54:47.121] |  Search for packages associated with the globals ... DONE
[10:54:47.121] |  Packages after dropping 'base': [0] 
[10:54:47.121] |  globals: [0] 
[10:54:47.121] |  packages: [0] 
[10:54:47.121] getGlobalsAndPackages() ... done
[10:54:47.122] run() for Future (‘Future’) ...
[10:54:47.122] |  state: ‘created’
[10:54:47.122] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.122] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.122] |  Using SequentialFutureBackend ...
[10:54:47.122] |  :  Launching futures ...
[10:54:47.122] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:54:47.122] |  :  .  |  getFutureData() ...
[10:54:47.122] |  :  .  |  :  getFutureCore() ...
[10:54:47.123] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:54:47.123] |  :  .  |  :  getFutureCore() ... done
[10:54:47.123] |  :  .  |  :  getFutureCapture() ...
[10:54:47.123] |  :  .  |  :  getFutureCapture() ... done
[10:54:47.123] |  :  .  |  :  getFutureContext() ...
[10:54:47.123] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.123] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:54:47.123] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.123] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:54:47.123] |  :  .  |  :  getFutureContext() ... done
[10:54:47.124] |  :  .  |  getFutureData() ... done
[10:54:47.124] |  :  .  |  attachPackages() ...
[10:54:47.124] |  :  .  |  :  packages: [n=1] ‘future’
[10:54:47.124] |  :  .  |  attachPackages() ... DONE
[10:54:47.124] |  :  .  |  attachPackages() ...
[10:54:47.124] |  :  .  |  :  packages: [n=0] 
[10:54:47.124] |  :  .  |  attachPackages() ... DONE
[10:54:47.125] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.125] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:54:47.125] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.125] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.125] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:47.125] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:54:47.126] |  :  .  |  :  .  |  New stack:
[10:54:47.126] |  :  .  |  :  .  |  List of 1
[10:54:47.126] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.126] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.126] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.126] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.126] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.126] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.126] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.128] |  :  .  |  :  .  |  Old stack:
[10:54:47.128] |  :  .  |  :  .  |  List of 1
[10:54:47.128] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.128] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.128] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.128] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.128] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.128] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:54:47.128] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:47.128] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.128] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.128] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.131] |  :  .  |  :  .  |  Not identical
[10:54:47.131] |  :  .  |  :  .  |  all.equal() for future ...
[10:54:47.131] |  :  .  |  :  .  |  :  List of 2
[10:54:47.131] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.131] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.131] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.131] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.131] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.131] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.131] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.131] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.131] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.131] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.131] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.131] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:54:47.131] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:47.131] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.131] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.136] |  :  .  |  :  .  |  all.equal() for future ... done
[10:54:47.136] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:54:47.136] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:54:47.136] |  :  .  |  :  .  List of future strategies:
[10:54:47.136] |  :  .  |  :  .  1. sequential:
[10:54:47.136] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:54:47.136] |  :  .  |  :  .     - tweaked: FALSE
[10:54:47.136] |  :  .  |  :  .     - call: plan(sequential)
[10:54:47.137] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:47.137] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.140] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.140] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.140] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:47.140] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:54:47.140] |  :  .  |  :  .  |  :  New stack:
[10:54:47.140] |  :  .  |  :  .  |  :  List of 1
[10:54:47.140] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.140] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.140] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.140] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.140] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.140] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:54:47.140] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:47.140] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.140] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.140] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.144] |  :  .  |  :  .  |  :  Old stack:
[10:54:47.144] |  :  .  |  :  .  |  :  List of 1
[10:54:47.144] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.144] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.144] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.144] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.144] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.144] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:54:47.144] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:47.144] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.144] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.144] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.147] |  :  .  |  :  .  |  :  Identical
[10:54:47.147] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:54:47.147] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:54:47.147] |  :  .  |  :  .  |  List of future strategies:
[10:54:47.147] |  :  .  |  :  .  |  1. sequential:
[10:54:47.147] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:54:47.147] |  :  .  |  :  .  |     - tweaked: FALSE
[10:54:47.147] |  :  .  |  :  .  |     - call: plan(sequential)
[10:54:47.147] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:47.147] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.148] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.148] |  :  .  |  SequentialFuture started (and completed)
[10:54:47.148] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:54:47.148] |  :  Launching futures ... done
[10:54:47.148] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:54:47.148] |  Using SequentialFutureBackend ... done
[10:54:47.148] run() for Future (‘SequentialFuture’) ... done
[1] 42
sequential ... done
Testing with 1 cores ... done
Testing with 2 cores ...
multicore ...
[10:54:47.149] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.149] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:54:47.149] |  :  all.equal() for FutureStrategyList ...
[10:54:47.150] |  :  .  New stack:
[10:54:47.150] |  :  .  List of 1
[10:54:47.150] |  :  .   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.150] |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.150] |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.150] |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.150] |  :  .      ...)  
[10:54:47.150] |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.150] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.150] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:54:47.150] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.152] |  :  .  Old stack:
[10:54:47.152] |  :  .  List of 1
[10:54:47.152] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.152] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.152] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.152] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.152] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.152] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:54:47.152] |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:47.152] |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.152] |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.152] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.155] |  :  .  Not identical
[10:54:47.155] |  :  .  all.equal() for future ...
[10:54:47.155] |  :  .  |  List of 2
[10:54:47.155] |  :  .  |   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.155] |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.155] |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.155] |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.155] |  :  .  |      ...)  
[10:54:47.155] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.155] |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.155] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:54:47.155] |  :  .  |   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.155] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.155] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.155] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.155] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.155] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:54:47.155] |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f54de9a0> 
[10:54:47.155] |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.155] |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.161] |  :  .  |  Formals differ
[10:54:47.162] |  :  .  all.equal() for future ... done
[10:54:47.162] |  :  .  Future strategies differ at level 1
[10:54:47.162] |  :  all.equal() for FutureStrategyList ... done
[10:54:47.162] |  :  plan(): Setting new future strategy stack:
[10:54:47.162] |  :  List of future strategies:
[10:54:47.162] |  :  1. multicore:
[10:54:47.162] |  :     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:54:47.162] |  :     - tweaked: FALSE
[10:54:47.162] |  :     - call: plan(strategy)
[10:54:47.162] |  :  List of 1
[10:54:47.162] |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.162] |  :      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.162] |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.162] |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.162] |  :      ...)  
[10:54:47.162] |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.162] |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.162] |  :    ..- attr(*, "call")= language plan(strategy)
[10:54:47.162] |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.165] |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:54:47.165] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.165] |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:54:47.165] |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.165] |  :  .  Legacy shutdown of cluster workers ...
[10:54:47.165] |  :  .  |  Stopping existing cluster ...
[10:54:47.165] |  :  .  |  :  No pre-existing cluster. Skipping
[10:54:47.166] |  :  .  |  Stopping existing cluster ... done
[10:54:47.166] |  :  .  Legacy shutdown of cluster workers ... done
[10:54:47.166] |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:54:47.166] |  :  plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ...
[10:54:47.166] |  :  .  function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.166] |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.166] |  :  .   - attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.166] |  :  .   - attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.166] |  :  .      ...)  
[10:54:47.166] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.166] |  :  .   - attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.166] |  :  .   - attr(*, "call")= language plan(strategy)
[10:54:47.168] |  :  .  init: NULL
[10:54:47.168] |  :  plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ... done
[10:54:47.168] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.168] |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:54:47.168] |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.168] |  :  Backend function: <‘NULL’>
[10:54:47.170] |  :  Backend: <‘MulticoreFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:54:47.170] |  :  plan(): nbrOfWorkers() = 2
[10:54:47.171] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:54:47.171] plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
- stdout = TRUE
[10:54:47.171] getGlobalsAndPackages() ...
[10:54:47.171] |  Searching for globals ...
[10:54:47.174] |  :  globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[10:54:47.174] |  Searching for globals ... DONE
[10:54:47.174] |  Resolving globals: FALSE
[10:54:47.175] |  Search for packages associated with the globals ...
[10:54:47.175] |  :  Packages associated with globals: [2] ‘base’, ‘utils’
[10:54:47.175] |  :  Packages: [2] ‘base’, ‘utils’
[10:54:47.175] |  Search for packages associated with the globals ... DONE
[10:54:47.175] |  Packages after dropping 'base': [1] ‘utils’
[10:54:47.176] |  Packages after dropping non-attached packages: [1] ‘utils’
[10:54:47.176] |  globals: [0] 
[10:54:47.176] |  packages: [1] ‘utils’
[10:54:47.176] getGlobalsAndPackages() ... done
[10:54:47.176] run() for Future (‘Future’) ...
[10:54:47.176] |  state: ‘created’
[10:54:47.176] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.176] |  :  makeFutureBackend(<multicore>) ...
[10:54:47.177] |  :  .  Backend function: <‘NULL’>
[10:54:47.217] |  :  .  Backend: <‘MulticoreFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:54:47.217] |  :  makeFutureBackend(<multicore>) ... done
[10:54:47.217] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.217] |  Using MulticoreFutureBackend ...
[10:54:47.217] |  :  Launching futures ...
[10:54:47.218] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:54:47.218] |  :  .  |  getFutureData() ...
[10:54:47.218] |  :  .  |  :  getFutureCore() ...
[10:54:47.218] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘utils’
[10:54:47.218] |  :  .  |  :  getFutureCore() ... done
[10:54:47.218] |  :  .  |  :  getFutureCapture() ...
[10:54:47.218] |  :  .  |  :  getFutureCapture() ... done
[10:54:47.218] |  :  .  |  :  getFutureContext() ...
[10:54:47.219] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.219] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:54:47.219] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.219] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:54:47.219] |  :  .  |  :  getFutureContext() ... done
[10:54:47.219] |  :  .  |  getFutureData() ... done
[10:54:47.220] |  :  .  |  requestCore(..., workers = 2) ...
[10:54:47.220] |  :  .  |  requestCore(..., workers = 2) ...
[10:54:47.223] |  :  .  |  MulticoreFuture started
[10:54:47.223] |  :  .  |  attachPackages() ...
[10:54:47.223] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:54:47.224] |  :  Launching futures ... done
[10:54:47.224] |  :  .  |  :  packages: [n=1] ‘future’
[10:54:47.224] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:54:47.224] |  :  .  |  attachPackages() ... DONE
[10:54:47.224] |  Using MulticoreFutureBackend ... done
[10:54:47.224] |  :  .  |  attachPackages() ...
[10:54:47.224] run() for Future (‘MulticoreFuture’) ... done
[10:54:47.224] |  :  .  |  :  packages: [n=1] ‘utils’
[10:54:47.225] |  :  .  |  attachPackages() ... DONE
[10:54:47.226] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.226] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:54:47.226] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.227] result() for MulticoreFuture ...
[10:54:47.227] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.227] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:47.228] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:54:47.228] |  :  .  |  :  .  |  New stack:
[10:54:47.228] |  :  .  |  :  .  |  List of 1
[10:54:47.228] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.228] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.228] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.228] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.228] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.228] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.228] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.232] |  :  .  |  :  .  |  Old stack:
[10:54:47.232] |  :  .  |  :  .  |  List of 1
[10:54:47.232] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.232] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.232] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.232] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.232] |  :  .  |  :  .  |      ...)  
[10:54:47.232] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.232] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.232] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:54:47.232] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.232] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.232] |  :  .  |  :  .  |      ...)  
[10:54:47.232] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.232] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.237] |  :  .  |  :  .  |  Not identical
[10:54:47.238] |  :  .  |  :  .  |  all.equal() for future ...
[10:54:47.238] |  :  .  |  :  .  |  :  List of 2
[10:54:47.238] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.238] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.238] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.238] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.238] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.238] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.238] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.238] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.238] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.238] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.238] |  :  .  |  :  .  |  :      ...)  
[10:54:47.238] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.238] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.238] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:54:47.238] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.238] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.238] |  :  .  |  :  .  |  :      ...)  
[10:54:47.238] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.250] |  :  .  |  :  .  |  :  Formals differ
[10:54:47.250] |  :  .  |  :  .  |  all.equal() for future ... done
[10:54:47.250] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:54:47.250] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:54:47.251] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:54:47.251] |  :  .  |  :  .  List of future strategies:
[10:54:47.251] |  :  .  |  :  .  1. sequential:
[10:54:47.251] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:54:47.251] |  :  .  |  :  .     - tweaked: FALSE
[10:54:47.251] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.251] |  :  .  |  :  .  List of 1
[10:54:47.251] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.251] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.251] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.251] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.251] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.251] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.251] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.255] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:54:47.255] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:54:47.256] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.256] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:54:47.256] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.256] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:54:47.256] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:54:47.257] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:54:47.257] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:47.257] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.261] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.261] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.261] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:47.261] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:54:47.261] |  :  .  |  :  .  |  :  New stack:
[10:54:47.261] |  :  .  |  :  .  |  :  List of 1
[10:54:47.261] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.261] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.261] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.261] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.261] |  :  .  |  :  .  |  :      ...)  
[10:54:47.261] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.261] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.261] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:54:47.261] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.261] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.261] |  :  .  |  :  .  |  :      ...)  
[10:54:47.261] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.261] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.265] |  :  .  |  :  .  |  :  Old stack:
[10:54:47.265] |  :  .  |  :  .  |  :  List of 1
[10:54:47.265] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.265] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.265] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.265] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.265] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.265] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.265] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.267] |  :  .  |  :  .  |  :  Not identical
[10:54:47.267] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:54:47.268] |  :  .  |  :  .  |  :  .  List of 2
[10:54:47.268] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.268] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.268] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.268] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.268] |  :  .  |  :  .  |  :  .      ...)  
[10:54:47.268] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.268] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.268] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:54:47.268] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.268] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.268] |  :  .  |  :  .  |  :  .      ...)  
[10:54:47.268] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.268] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.268] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.268] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.268] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.268] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.268] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.272] |  :  .  |  :  .  |  :  .  Formals differ
[10:54:47.272] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:54:47.273] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:54:47.273] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:54:47.273] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:54:47.273] |  :  .  |  :  .  |  List of future strategies:
[10:54:47.273] |  :  .  |  :  .  |  1. multicore:
[10:54:47.273] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:54:47.273] |  :  .  |  :  .  |     - tweaked: FALSE
[10:54:47.273] |  :  .  |  :  .  |     - call: plan(strategy)
[10:54:47.273] |  :  .  |  :  .  |  List of 1
[10:54:47.273] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.273] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.273] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.273] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.273] |  :  .  |  :  .  |      ...)  
[10:54:47.273] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.273] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.273] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:54:47.273] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.273] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.273] |  :  .  |  :  .  |      ...)  
[10:54:47.273] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.273] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.278] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:54:47.278] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:54:47.278] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.278] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:54:47.278] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.279] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:54:47.279] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:47.279] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.279] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.280] |  readImmediateCondition() ...
[10:54:47.280] |    - path: ‘/tmp/RtmpS14P9L/.future/immediateConditions’
[10:54:47.281] |   - Number of RDS files: 0
[10:54:47.281] |  readImmediateCondition() ... DONE
[10:54:47.285] |  result() for MulticoreFuture ...
[10:54:47.285] |  result() for MulticoreFuture ... done
[10:54:47.285] result() for MulticoreFuture ... done
List of 13
 $ value            : int 42
 $ visible          : logi TRUE
 $ stdout           : chr " [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n[26] 26 27 28 29 30 31 32 33 3"| __truncated__
 $ conditions       : list()
 $ rng              : logi FALSE
 $ misuseGlobalEnv  : NULL
 $ misuseConnections:List of 3
  ..$ added   : NULL
  ..$ removed : NULL
  ..$ replaced: NULL
 $ misuseDevices    : NULL
 $ started          : POSIXct[1:1], format: "2025-05-06 10:54:47"
 $ finished         : POSIXct[1:1], format: "2025-05-06 10:54:47"
 $ session_uuid     : chr "2eb39a9b0cc691141669a8000dd1c077"
  ..- attr(*, "source")=List of 5
  .. ..$ host  : Named chr "5995ac22cdae"
  .. .. ..- attr(*, "names")= chr "HOSTNAME"
  .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
  .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
  .. ..$ pid   : int 76578
  .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:54:47"
  .. ..$ random: int 2147483647
 $ r_info           :List of 4
  ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
  .. ..$ : int [1:3] 4 5 0
  ..$ os           : chr "unix"
  ..$ os_name      : chr "Linux"
  ..$ captures_utf8: logi TRUE
 $ version          : chr "1.8"
 - attr(*, "class")= chr "FutureResult"
[10:54:47.300] result() for MulticoreFuture ...
[10:54:47.300] result() for MulticoreFuture ... done
[10:54:47.300] result() for MulticoreFuture ...
[10:54:47.300] result() for MulticoreFuture ... done
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
 int [1:50] 1 2 3 4 5 6 7 8 9 10 ...
a-b-c-d-e-f-g-h-i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z1 2 3 4 5 6 
"Sepal.Length"	"Sepal.Width"	"Petal.Length"	"Petal.Width"	"Species"
"1"	5.1	3.5	1.4	0.2	"setosa"
"2"	4.9	3	1.4	0.2	"setosa"
"3"	4.7	3.2	1.3	0.2	"setosa"
"4"	4.6	3.1	1.5	0.2	"setosa"
"5"	5	3.6	1.4	0.2	"setosa"
"6"	5.4	3.9	1.7	0.4	"setosa"
"7"	4.6	3.4	1.4	0.3	"setosa"
"8"	5	3.4	1.5	0.2	"setosa"
"9"	4.4	2.9	1.4	0.2	"setosa"
"10"	4.9	3.1	1.5	0.1	"setosa"
FutureResult:
value: ‘integer’
visible: TRUE
stdout: character
conditions: [n = 0] 
RNG used: FALSE
duration: 0.03685856 secs (started 2025-05-06 10:54:47.223592)
version: 1.8
[10:54:47.301] getGlobalsAndPackages() ...
[10:54:47.301] |  Searching for globals ...
[10:54:47.305] |  :  globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[10:54:47.306] |  Searching for globals ... DONE
[10:54:47.306] |  Resolving globals: FALSE
[10:54:47.306] |  Search for packages associated with the globals ...
[10:54:47.306] |  :  Packages associated with globals: [2] ‘base’, ‘utils’
[10:54:47.306] |  :  Packages: [2] ‘base’, ‘utils’
[10:54:47.307] |  Search for packages associated with the globals ... DONE
[10:54:47.307] |  Packages after dropping 'base': [1] ‘utils’
[10:54:47.307] |  Packages after dropping non-attached packages: [1] ‘utils’
[10:54:47.307] |  globals: [0] 
[10:54:47.307] |  packages: [1] ‘utils’
[10:54:47.307] getGlobalsAndPackages() ... done
[10:54:47.308] run() for Future (‘Future’) ...
[10:54:47.308] |  state: ‘created’
[10:54:47.308] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.308] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.308] |  Using MulticoreFutureBackend ...
[10:54:47.308] |  :  Launching futures ...
[10:54:47.308] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:54:47.309] |  :  .  |  getFutureData() ...
[10:54:47.309] |  :  .  |  :  getFutureCore() ...
[10:54:47.309] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘utils’
[10:54:47.309] |  :  .  |  :  getFutureCore() ... done
[10:54:47.309] |  :  .  |  :  getFutureCapture() ...
[10:54:47.309] |  :  .  |  :  getFutureCapture() ... done
[10:54:47.309] |  :  .  |  :  getFutureContext() ...
[10:54:47.309] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.309] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:54:47.309] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.310] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:54:47.310] |  :  .  |  :  getFutureContext() ... done
[10:54:47.310] |  :  .  |  getFutureData() ... done
[10:54:47.310] |  :  .  |  requestCore(..., workers = 2) ...
[10:54:47.310] |  :  .  |  requestCore(..., workers = 2) ...
[10:54:47.312] |  :  .  |  MulticoreFuture started
[10:54:47.313] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:54:47.313] |  :  Launching futures ... done
[10:54:47.313] |  :  .  |  attachPackages() ...
[10:54:47.313] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:54:47.313] |  :  .  |  :  packages: [n=1] ‘future’
[10:54:47.313] |  Using MulticoreFutureBackend ... done
[10:54:47.314] run() for Future (‘MulticoreFuture’) ... done
[10:54:47.314] |  :  .  |  attachPackages() ... DONE
[10:54:47.314] |  :  .  |  attachPackages() ...
[10:54:47.314] |  :  .  |  :  packages: [n=1] ‘utils’
[10:54:47.314] result() for MulticoreFuture ...
[10:54:47.314] |  :  .  |  attachPackages() ... DONE
[10:54:47.316] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.316] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:54:47.316] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.317] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.317] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:47.317] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:54:47.317] |  :  .  |  :  .  |  New stack:
[10:54:47.318] |  :  .  |  :  .  |  List of 1
[10:54:47.318] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.318] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.318] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.318] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.318] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.318] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.318] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.322] |  :  .  |  :  .  |  Old stack:
[10:54:47.322] |  :  .  |  :  .  |  List of 1
[10:54:47.322] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.322] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.322] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.322] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.322] |  :  .  |  :  .  |      ...)  
[10:54:47.322] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.322] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.322] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:54:47.322] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.322] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.322] |  :  .  |  :  .  |      ...)  
[10:54:47.322] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.322] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.327] |  :  .  |  :  .  |  Not identical
[10:54:47.327] |  :  .  |  :  .  |  all.equal() for future ...
[10:54:47.327] |  :  .  |  :  .  |  :  List of 2
[10:54:47.327] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.327] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.327] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.327] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.327] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.327] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.327] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.327] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.327] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.327] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.327] |  :  .  |  :  .  |  :      ...)  
[10:54:47.327] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.327] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.327] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:54:47.327] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.327] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.327] |  :  .  |  :  .  |  :      ...)  
[10:54:47.327] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.339] |  :  .  |  :  .  |  :  Formals differ
[10:54:47.339] |  :  .  |  :  .  |  all.equal() for future ... done
[10:54:47.339] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:54:47.340] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:54:47.340] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:54:47.340] |  :  .  |  :  .  List of future strategies:
[10:54:47.340] |  :  .  |  :  .  1. sequential:
[10:54:47.340] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:54:47.340] |  :  .  |  :  .     - tweaked: FALSE
[10:54:47.340] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.341] |  :  .  |  :  .  List of 1
[10:54:47.341] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.341] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.341] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.341] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.341] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.341] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.341] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.344] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:54:47.344] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:54:47.344] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.344] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:54:47.344] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.345] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:54:47.345] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:54:47.345] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:54:47.345] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:47.345] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.349] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.349] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.349] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:47.350] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:54:47.350] |  :  .  |  :  .  |  :  New stack:
[10:54:47.350] |  :  .  |  :  .  |  :  List of 1
[10:54:47.350] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.350] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.350] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.350] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.350] |  :  .  |  :  .  |  :      ...)  
[10:54:47.350] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.350] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.350] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:54:47.350] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.350] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.350] |  :  .  |  :  .  |  :      ...)  
[10:54:47.350] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.350] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.353] |  :  .  |  :  .  |  :  Old stack:
[10:54:47.353] |  :  .  |  :  .  |  :  List of 1
[10:54:47.353] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.353] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.353] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.353] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.353] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.353] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.353] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.356] |  :  .  |  :  .  |  :  Not identical
[10:54:47.356] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:54:47.356] |  :  .  |  :  .  |  :  .  List of 2
[10:54:47.356] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.356] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.356] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.356] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.356] |  :  .  |  :  .  |  :  .      ...)  
[10:54:47.356] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.356] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.356] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:54:47.356] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.356] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.356] |  :  .  |  :  .  |  :  .      ...)  
[10:54:47.356] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.356] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.356] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.356] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.356] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.356] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.356] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.362] |  :  .  |  :  .  |  :  .  Formals differ
[10:54:47.362] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:54:47.362] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:54:47.363] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:54:47.363] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:54:47.363] |  :  .  |  :  .  |  List of future strategies:
[10:54:47.363] |  :  .  |  :  .  |  1. multicore:
[10:54:47.363] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:54:47.363] |  :  .  |  :  .  |     - tweaked: FALSE
[10:54:47.363] |  :  .  |  :  .  |     - call: plan(strategy)
[10:54:47.363] |  :  .  |  :  .  |  List of 1
[10:54:47.363] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.363] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.363] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.363] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.363] |  :  .  |  :  .  |      ...)  
[10:54:47.363] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.363] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.363] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:54:47.363] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.363] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.363] |  :  .  |  :  .  |      ...)  
[10:54:47.363] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.363] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.366] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:54:47.366] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:54:47.366] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.367] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:54:47.367] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.367] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:54:47.367] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:47.367] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.367] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.368] |  readImmediateCondition() ...
[10:54:47.368] |    - path: ‘/tmp/RtmpS14P9L/.future/immediateConditions’
[10:54:47.368] |   - Number of RDS files: 0
[10:54:47.368] |  readImmediateCondition() ... DONE
[10:54:47.369] |  result() for MulticoreFuture ...
[10:54:47.369] |  result() for MulticoreFuture ... done
[10:54:47.369] result() for MulticoreFuture ... done
[10:54:47.369] result() for MulticoreFuture ...
[10:54:47.369] result() for MulticoreFuture ... done
 [1] " [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25"  
 [2] "[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50"  
 [3] " int [1:50] 1 2 3 4 5 6 7 8 9 10 ..."                                             
 [4] "a-b-c-d-e-f-g-h-i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z1 2 3 4 5 6 "                  
 [5] "\"Sepal.Length\"\t\"Sepal.Width\"\t\"Petal.Length\"\t\"Petal.Width\"\t\"Species\""
 [6] "\"1\"\t5.1\t3.5\t1.4\t0.2\t\"setosa\""                                            
 [7] "\"2\"\t4.9\t3\t1.4\t0.2\t\"setosa\""                                              
 [8] "\"3\"\t4.7\t3.2\t1.3\t0.2\t\"setosa\""                                            
 [9] "\"4\"\t4.6\t3.1\t1.5\t0.2\t\"setosa\""                                            
[10] "\"5\"\t5\t3.6\t1.4\t0.2\t\"setosa\""                                              
[11] "\"6\"\t5.4\t3.9\t1.7\t0.4\t\"setosa\""                                            
[12] "\"7\"\t4.6\t3.4\t1.4\t0.3\t\"setosa\""                                            
[13] "\"8\"\t5\t3.4\t1.5\t0.2\t\"setosa\""                                              
[14] "\"9\"\t4.4\t2.9\t1.4\t0.2\t\"setosa\""                                            
[15] "\"10\"\t4.9\t3.1\t1.5\t0.1\t\"setosa\""                                           
- stdout = structure(TRUE, drop = TRUE)
[10:54:47.370] getGlobalsAndPackages() ...
[10:54:47.370] |  Searching for globals ...
[10:54:47.371] |  :  globals found: [1] ‘print’
[10:54:47.371] |  Searching for globals ... DONE
[10:54:47.371] |  Resolving globals: FALSE
[10:54:47.371] |  Search for packages associated with the globals ...
[10:54:47.372] |  :  Packages associated with globals: [1] ‘base’
[10:54:47.372] |  :  Packages: [1] ‘base’
[10:54:47.372] |  Search for packages associated with the globals ... DONE
[10:54:47.372] |  Packages after dropping 'base': [0] 
[10:54:47.372] |  globals: [0] 
[10:54:47.372] |  packages: [0] 
[10:54:47.373] getGlobalsAndPackages() ... done
[10:54:47.373] run() for Future (‘Future’) ...
[10:54:47.373] |  state: ‘created’
[10:54:47.373] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.373] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.374] |  Using MulticoreFutureBackend ...
[10:54:47.374] |  :  Launching futures ...
[10:54:47.374] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:54:47.374] |  :  .  |  getFutureData() ...
[10:54:47.374] |  :  .  |  :  getFutureCore() ...
[10:54:47.374] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:54:47.374] |  :  .  |  :  getFutureCore() ... done
[10:54:47.374] |  :  .  |  :  getFutureCapture() ...
[10:54:47.375] |  :  .  |  :  getFutureCapture() ... done
[10:54:47.375] |  :  .  |  :  getFutureContext() ...
[10:54:47.375] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.375] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:54:47.375] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.375] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:54:47.375] |  :  .  |  :  getFutureContext() ... done
[10:54:47.376] |  :  .  |  getFutureData() ... done
[10:54:47.376] |  :  .  |  requestCore(..., workers = 2) ...
[10:54:47.376] |  :  .  |  requestCore(..., workers = 2) ...
[10:54:47.378] |  :  .  |  MulticoreFuture started
[10:54:47.378] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:54:47.379] |  :  Launching futures ... done
[10:54:47.379] |  :  .  |  attachPackages() ...
[10:54:47.379] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:54:47.379] |  :  .  |  :  packages: [n=1] ‘future’
[10:54:47.379] |  Using MulticoreFutureBackend ... done
[10:54:47.379] run() for Future (‘MulticoreFuture’) ... done
[10:54:47.379] |  :  .  |  attachPackages() ... DONE
[10:54:47.379] |  :  .  |  attachPackages() ...
[10:54:47.379] result() for MulticoreFuture ...
[10:54:47.380] |  :  .  |  :  packages: [n=0] 
[10:54:47.380] |  :  .  |  attachPackages() ... DONE
[10:54:47.381] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.381] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:54:47.382] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.382] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.385] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:47.386] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:54:47.386] |  :  .  |  :  .  |  New stack:
[10:54:47.387] |  :  .  |  :  .  |  List of 1
[10:54:47.387] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.387] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.387] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.387] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.387] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.387] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.387] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.393] |  :  .  |  :  .  |  Old stack:
[10:54:47.393] |  :  .  |  :  .  |  List of 1
[10:54:47.393] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.393] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.393] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.393] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.393] |  :  .  |  :  .  |      ...)  
[10:54:47.393] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.393] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.393] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:54:47.393] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.393] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.393] |  :  .  |  :  .  |      ...)  
[10:54:47.393] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.393] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.398] |  :  .  |  :  .  |  Not identical
[10:54:47.399] |  :  .  |  :  .  |  all.equal() for future ...
[10:54:47.399] |  :  .  |  :  .  |  :  List of 2
[10:54:47.399] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.399] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.399] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.399] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.399] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.399] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.399] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.399] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.399] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.399] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.399] |  :  .  |  :  .  |  :      ...)  
[10:54:47.399] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.399] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.399] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:54:47.399] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.399] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.399] |  :  .  |  :  .  |  :      ...)  
[10:54:47.399] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.405] |  :  .  |  :  .  |  :  Formals differ
[10:54:47.406] |  :  .  |  :  .  |  all.equal() for future ... done
[10:54:47.406] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:54:47.406] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:54:47.406] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:54:47.406] |  :  .  |  :  .  List of future strategies:
[10:54:47.406] |  :  .  |  :  .  1. sequential:
[10:54:47.406] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:54:47.406] |  :  .  |  :  .     - tweaked: FALSE
[10:54:47.406] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.407] |  :  .  |  :  .  List of 1
[10:54:47.407] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.407] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.407] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.407] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.407] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.407] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.407] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.410] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:54:47.410] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:54:47.410] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.410] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:54:47.411] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.411] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:54:47.411] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:54:47.411] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:54:47.411] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:47.412] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.414] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.414] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.415] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:47.415] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:54:47.415] |  :  .  |  :  .  |  :  New stack:
[10:54:47.415] |  :  .  |  :  .  |  :  List of 1
[10:54:47.415] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.415] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.415] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.415] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.415] |  :  .  |  :  .  |  :      ...)  
[10:54:47.415] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.415] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.415] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:54:47.415] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.415] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.415] |  :  .  |  :  .  |  :      ...)  
[10:54:47.415] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.415] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.420] |  :  .  |  :  .  |  :  Old stack:
[10:54:47.420] |  :  .  |  :  .  |  :  List of 1
[10:54:47.420] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.420] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.420] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.420] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.420] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.420] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.420] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.423] |  :  .  |  :  .  |  :  Not identical
[10:54:47.423] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:54:47.423] |  :  .  |  :  .  |  :  .  List of 2
[10:54:47.423] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.423] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.423] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.423] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.423] |  :  .  |  :  .  |  :  .      ...)  
[10:54:47.423] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.423] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.423] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:54:47.423] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.423] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.423] |  :  .  |  :  .  |  :  .      ...)  
[10:54:47.423] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.423] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.423] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.423] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.423] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.423] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.423] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.428] |  :  .  |  :  .  |  :  .  Formals differ
[10:54:47.428] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:54:47.428] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:54:47.428] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:54:47.428] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:54:47.428] |  :  .  |  :  .  |  List of future strategies:
[10:54:47.428] |  :  .  |  :  .  |  1. multicore:
[10:54:47.428] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:54:47.428] |  :  .  |  :  .  |     - tweaked: FALSE
[10:54:47.428] |  :  .  |  :  .  |     - call: plan(strategy)
[10:54:47.429] |  :  .  |  :  .  |  List of 1
[10:54:47.429] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.429] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.429] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.429] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.429] |  :  .  |  :  .  |      ...)  
[10:54:47.429] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.429] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.429] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:54:47.429] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.429] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.429] |  :  .  |  :  .  |      ...)  
[10:54:47.429] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.429] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.432] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:54:47.432] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:54:47.432] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.432] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:54:47.432] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.432] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:54:47.432] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:47.433] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.433] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.433] |  readImmediateCondition() ...
[10:54:47.433] |    - path: ‘/tmp/RtmpS14P9L/.future/immediateConditions’
[10:54:47.434] |   - Number of RDS files: 0
[10:54:47.434] |  readImmediateCondition() ... DONE
[10:54:47.434] |  result() for MulticoreFuture ...
[10:54:47.434] |  result() for MulticoreFuture ... done
[10:54:47.436] result() for MulticoreFuture ... done
[10:54:47.437] result() for MulticoreFuture ...
[10:54:47.437] result() for MulticoreFuture ... done
[10:54:47.437] result() for MulticoreFuture ...
[10:54:47.438] result() for MulticoreFuture ... done
[1] 42
[10:54:47.438] result() for MulticoreFuture ...
[10:54:47.438] result() for MulticoreFuture ... done
- stdout = FALSE
[10:54:47.439] getGlobalsAndPackages() ...
[10:54:47.439] |  Searching for globals ...
[10:54:47.444] |  :  globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[10:54:47.444] |  Searching for globals ... DONE
[10:54:47.445] |  Resolving globals: FALSE
[10:54:47.445] |  Search for packages associated with the globals ...
[10:54:47.445] |  :  Packages associated with globals: [2] ‘base’, ‘utils’
[10:54:47.445] |  :  Packages: [2] ‘base’, ‘utils’
[10:54:47.446] |  Search for packages associated with the globals ... DONE
[10:54:47.446] |  Packages after dropping 'base': [1] ‘utils’
[10:54:47.446] |  Packages after dropping non-attached packages: [1] ‘utils’
[10:54:47.446] |  globals: [0] 
[10:54:47.446] |  packages: [1] ‘utils’
[10:54:47.446] getGlobalsAndPackages() ... done
[10:54:47.447] run() for Future (‘Future’) ...
[10:54:47.447] |  state: ‘created’
[10:54:47.447] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.447] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.447] |  Using MulticoreFutureBackend ...
[10:54:47.447] |  :  Launching futures ...
[10:54:47.448] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:54:47.448] |  :  .  |  getFutureData() ...
[10:54:47.448] |  :  .  |  :  getFutureCore() ...
[10:54:47.448] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘utils’
[10:54:47.448] |  :  .  |  :  getFutureCore() ... done
[10:54:47.448] |  :  .  |  :  getFutureCapture() ...
[10:54:47.448] |  :  .  |  :  getFutureCapture() ... done
[10:54:47.448] |  :  .  |  :  getFutureContext() ...
[10:54:47.449] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.449] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:54:47.449] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.449] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:54:47.449] |  :  .  |  :  getFutureContext() ... done
[10:54:47.449] |  :  .  |  getFutureData() ... done
[10:54:47.450] |  :  .  |  requestCore(..., workers = 2) ...
[10:54:47.450] |  :  .  |  requestCore(..., workers = 2) ...
[10:54:47.452] |  :  .  |  MulticoreFuture started
[10:54:47.452] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:54:47.452] |  :  Launching futures ... done
[10:54:47.452] |  :  .  |  attachPackages() ...
[10:54:47.453] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:54:47.453] |  :  .  |  :  packages: [n=1] ‘future’
[10:54:47.453] |  Using MulticoreFutureBackend ... done
[10:54:47.453] run() for Future (‘MulticoreFuture’) ... done
[10:54:47.453] |  :  .  |  attachPackages() ... DONE
[10:54:47.453] |  :  .  |  attachPackages() ...
[10:54:47.453] result() for MulticoreFuture ...
[10:54:47.453] |  :  .  |  :  packages: [n=1] ‘utils’
[10:54:47.454] |  :  .  |  attachPackages() ... DONE
[10:54:47.455] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.455] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:54:47.455] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.456] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.456] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:47.457] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:54:47.457] |  :  .  |  :  .  |  New stack:
[10:54:47.457] |  :  .  |  :  .  |  List of 1
[10:54:47.457] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.457] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.457] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.457] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.457] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.457] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.457] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.461] |  :  .  |  :  .  |  Old stack:
[10:54:47.462] |  :  .  |  :  .  |  List of 1
[10:54:47.462] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.462] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.462] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.462] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.462] |  :  .  |  :  .  |      ...)  
[10:54:47.462] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.462] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.462] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:54:47.462] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.462] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.462] |  :  .  |  :  .  |      ...)  
[10:54:47.462] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.462] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.467] |  :  .  |  :  .  |  Not identical
[10:54:47.467] |  :  .  |  :  .  |  all.equal() for future ...
[10:54:47.467] |  :  .  |  :  .  |  :  List of 2
[10:54:47.467] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.467] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.467] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.467] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.467] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.467] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.467] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.467] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.467] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.467] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.467] |  :  .  |  :  .  |  :      ...)  
[10:54:47.467] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.467] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.467] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:54:47.467] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.467] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.467] |  :  .  |  :  .  |  :      ...)  
[10:54:47.467] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.478] |  :  .  |  :  .  |  :  Formals differ
[10:54:47.479] |  :  .  |  :  .  |  all.equal() for future ... done
[10:54:47.479] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:54:47.479] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:54:47.479] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:54:47.479] |  :  .  |  :  .  List of future strategies:
[10:54:47.479] |  :  .  |  :  .  1. sequential:
[10:54:47.479] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:54:47.479] |  :  .  |  :  .     - tweaked: FALSE
[10:54:47.479] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.480] |  :  .  |  :  .  List of 1
[10:54:47.480] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.480] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.480] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.480] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.480] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.480] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.480] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.484] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:54:47.484] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:54:47.485] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.485] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:54:47.485] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.485] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:54:47.485] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:54:47.486] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:54:47.486] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:47.486] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.490] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.490] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.490] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:47.490] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:54:47.491] |  :  .  |  :  .  |  :  New stack:
[10:54:47.491] |  :  .  |  :  .  |  :  List of 1
[10:54:47.491] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.491] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.491] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.491] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.491] |  :  .  |  :  .  |  :      ...)  
[10:54:47.491] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.491] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.491] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:54:47.491] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.491] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.491] |  :  .  |  :  .  |  :      ...)  
[10:54:47.491] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.491] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.494] |  :  .  |  :  .  |  :  Old stack:
[10:54:47.495] |  :  .  |  :  .  |  :  List of 1
[10:54:47.495] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.495] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.495] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.495] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.495] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.495] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.495] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.497] |  :  .  |  :  .  |  :  Not identical
[10:54:47.497] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:54:47.497] |  :  .  |  :  .  |  :  .  List of 2
[10:54:47.497] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.497] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.497] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.497] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.497] |  :  .  |  :  .  |  :  .      ...)  
[10:54:47.497] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.497] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.497] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:54:47.497] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.497] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.497] |  :  .  |  :  .  |  :  .      ...)  
[10:54:47.497] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.497] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.497] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.497] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.497] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.497] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.497] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.502] |  :  .  |  :  .  |  :  .  Formals differ
[10:54:47.502] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:54:47.502] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:54:47.502] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:54:47.502] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:54:47.502] |  :  .  |  :  .  |  List of future strategies:
[10:54:47.502] |  :  .  |  :  .  |  1. multicore:
[10:54:47.502] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:54:47.502] |  :  .  |  :  .  |     - tweaked: FALSE
[10:54:47.502] |  :  .  |  :  .  |     - call: plan(strategy)
[10:54:47.503] |  :  .  |  :  .  |  List of 1
[10:54:47.503] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.503] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.503] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.503] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.503] |  :  .  |  :  .  |      ...)  
[10:54:47.503] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.503] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.503] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:54:47.503] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.503] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.503] |  :  .  |  :  .  |      ...)  
[10:54:47.503] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.503] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.508] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:54:47.508] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:54:47.508] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.508] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:54:47.508] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.508] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:54:47.509] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:47.509] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.509] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.509] |  readImmediateCondition() ...
[10:54:47.510] |    - path: ‘/tmp/RtmpS14P9L/.future/immediateConditions’
[10:54:47.510] |   - Number of RDS files: 0
[10:54:47.510] |  readImmediateCondition() ... DONE
[10:54:47.510] |  result() for MulticoreFuture ...
[10:54:47.511] |  result() for MulticoreFuture ... done
[10:54:47.511] result() for MulticoreFuture ... done
List of 13
 $ value            : int 42
 $ visible          : logi TRUE
 $ stdout           : NULL
 $ conditions       : list()
 $ rng              : logi FALSE
 $ misuseGlobalEnv  : NULL
 $ misuseConnections:List of 3
  ..$ added   : NULL
  ..$ removed : NULL
  ..$ replaced: NULL
 $ misuseDevices    : NULL
 $ started          : POSIXct[1:1], format: "2025-05-06 10:54:47"
 $ finished         : POSIXct[1:1], format: "2025-05-06 10:54:47"
 $ session_uuid     : chr "5e0e99c34f312f2e9332961ed73b7e26"
  ..- attr(*, "source")=List of 5
  .. ..$ host  : Named chr "5995ac22cdae"
  .. .. ..- attr(*, "names")= chr "HOSTNAME"
  .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
  .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
  .. ..$ pid   : int 76581
  .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:54:47"
  .. ..$ random: int 2147483647
 $ r_info           :List of 4
  ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
  .. ..$ : int [1:3] 4 5 0
  ..$ os           : chr "unix"
  ..$ os_name      : chr "Linux"
  ..$ captures_utf8: logi TRUE
 $ version          : chr "1.8"
 - attr(*, "class")= chr "FutureResult"
[10:54:47.523] result() for MulticoreFuture ...
[10:54:47.523] result() for MulticoreFuture ... done
[10:54:47.523] result() for MulticoreFuture ...
[10:54:47.523] result() for MulticoreFuture ... done
[10:54:47.525] getGlobalsAndPackages() ...
[10:54:47.526] |  Searching for globals ...
[10:54:47.531] |  :  globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[10:54:47.531] |  Searching for globals ... DONE
[10:54:47.531] |  Resolving globals: FALSE
[10:54:47.531] |  Search for packages associated with the globals ...
[10:54:47.532] |  :  Packages associated with globals: [2] ‘base’, ‘utils’
[10:54:47.532] |  :  Packages: [2] ‘base’, ‘utils’
[10:54:47.532] |  Search for packages associated with the globals ... DONE
[10:54:47.532] |  Packages after dropping 'base': [1] ‘utils’
[10:54:47.533] |  Packages after dropping non-attached packages: [1] ‘utils’
[10:54:47.533] |  globals: [0] 
[10:54:47.533] |  packages: [1] ‘utils’
[10:54:47.533] getGlobalsAndPackages() ... done
[10:54:47.533] run() for Future (‘Future’) ...
[10:54:47.533] |  state: ‘created’
[10:54:47.534] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.534] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.534] |  Using MulticoreFutureBackend ...
[10:54:47.534] |  :  Launching futures ...
[10:54:47.534] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:54:47.534] |  :  .  |  getFutureData() ...
[10:54:47.534] |  :  .  |  :  getFutureCore() ...
[10:54:47.535] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘utils’
[10:54:47.535] |  :  .  |  :  getFutureCore() ... done
[10:54:47.535] |  :  .  |  :  getFutureCapture() ...
[10:54:47.535] |  :  .  |  :  getFutureCapture() ... done
[10:54:47.535] |  :  .  |  :  getFutureContext() ...
[10:54:47.535] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.535] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:54:47.535] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.536] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:54:47.536] |  :  .  |  :  getFutureContext() ... done
[10:54:47.536] |  :  .  |  getFutureData() ... done
[10:54:47.536] |  :  .  |  requestCore(..., workers = 2) ...
[10:54:47.536] |  :  .  |  requestCore(..., workers = 2) ...
[10:54:47.538] |  :  .  |  MulticoreFuture started
[10:54:47.539] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:54:47.539] |  :  Launching futures ... done
[10:54:47.539] |  :  .  |  attachPackages() ...
[10:54:47.539] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:54:47.539] |  :  .  |  :  packages: [n=1] ‘future’
[10:54:47.540] |  Using MulticoreFutureBackend ... done
[10:54:47.540] run() for Future (‘MulticoreFuture’) ... done
[10:54:47.540] |  :  .  |  attachPackages() ... DONE
[10:54:47.540] |  :  .  |  attachPackages() ...
[10:54:47.540] |  :  .  |  :  packages: [n=1] ‘utils’
[10:54:47.540] result() for MulticoreFuture ...
[10:54:47.540] |  :  .  |  attachPackages() ... DONE
[10:54:47.542] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.542] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:54:47.542] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.543] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.543] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:47.543] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:54:47.543] |  :  .  |  :  .  |  New stack:
[10:54:47.544] |  :  .  |  :  .  |  List of 1
[10:54:47.544] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.544] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.544] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.544] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.544] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.544] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.544] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.548] |  :  .  |  :  .  |  Old stack:
[10:54:47.548] |  :  .  |  :  .  |  List of 1
[10:54:47.548] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.548] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.548] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.548] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.548] |  :  .  |  :  .  |      ...)  
[10:54:47.548] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.548] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.548] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:54:47.548] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.548] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.548] |  :  .  |  :  .  |      ...)  
[10:54:47.548] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.548] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.553] |  :  .  |  :  .  |  Not identical
[10:54:47.554] |  :  .  |  :  .  |  all.equal() for future ...
[10:54:47.554] |  :  .  |  :  .  |  :  List of 2
[10:54:47.554] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.554] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.554] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.554] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.554] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.554] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.554] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.554] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.554] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.554] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.554] |  :  .  |  :  .  |  :      ...)  
[10:54:47.554] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.554] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.554] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:54:47.554] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.554] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.554] |  :  .  |  :  .  |  :      ...)  
[10:54:47.554] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.564] |  :  .  |  :  .  |  :  Formals differ
[10:54:47.565] |  :  .  |  :  .  |  all.equal() for future ... done
[10:54:47.565] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:54:47.565] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:54:47.565] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:54:47.565] |  :  .  |  :  .  List of future strategies:
[10:54:47.565] |  :  .  |  :  .  1. sequential:
[10:54:47.565] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:54:47.565] |  :  .  |  :  .     - tweaked: FALSE
[10:54:47.565] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.566] |  :  .  |  :  .  List of 1
[10:54:47.566] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.566] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.566] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.566] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.566] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.566] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.566] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.570] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:54:47.571] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:54:47.571] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.571] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:54:47.571] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.572] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:54:47.572] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:54:47.572] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:54:47.572] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:47.572] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.576] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.576] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.577] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:47.577] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:54:47.577] |  :  .  |  :  .  |  :  New stack:
[10:54:47.577] |  :  .  |  :  .  |  :  List of 1
[10:54:47.577] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.577] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.577] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.577] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.577] |  :  .  |  :  .  |  :      ...)  
[10:54:47.577] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.577] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.577] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:54:47.577] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.577] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.577] |  :  .  |  :  .  |  :      ...)  
[10:54:47.577] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.577] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.581] |  :  .  |  :  .  |  :  Old stack:
[10:54:47.581] |  :  .  |  :  .  |  :  List of 1
[10:54:47.581] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.581] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.581] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.581] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.581] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.581] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.581] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.583] |  :  .  |  :  .  |  :  Not identical
[10:54:47.583] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:54:47.583] |  :  .  |  :  .  |  :  .  List of 2
[10:54:47.583] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.583] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.583] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.583] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.583] |  :  .  |  :  .  |  :  .      ...)  
[10:54:47.583] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.583] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.583] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:54:47.583] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.583] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.583] |  :  .  |  :  .  |  :  .      ...)  
[10:54:47.583] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.583] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.583] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.583] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.583] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.583] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.583] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.588] |  :  .  |  :  .  |  :  .  Formals differ
[10:54:47.588] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:54:47.588] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:54:47.588] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:54:47.588] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:54:47.588] |  :  .  |  :  .  |  List of future strategies:
[10:54:47.588] |  :  .  |  :  .  |  1. multicore:
[10:54:47.588] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:54:47.588] |  :  .  |  :  .  |     - tweaked: FALSE
[10:54:47.588] |  :  .  |  :  .  |     - call: plan(strategy)
[10:54:47.589] |  :  .  |  :  .  |  List of 1
[10:54:47.589] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.589] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.589] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.589] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.589] |  :  .  |  :  .  |      ...)  
[10:54:47.589] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.589] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.589] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:54:47.589] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.589] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.589] |  :  .  |  :  .  |      ...)  
[10:54:47.589] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.589] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.594] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:54:47.594] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:54:47.594] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.595] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:54:47.595] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.595] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:54:47.595] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:47.595] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.595] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.596] |  readImmediateCondition() ...
[10:54:47.596] |    - path: ‘/tmp/RtmpS14P9L/.future/immediateConditions’
[10:54:47.596] |   - Number of RDS files: 0
[10:54:47.596] |  readImmediateCondition() ... DONE
[10:54:47.597] |  result() for MulticoreFuture ...
[10:54:47.597] |  result() for MulticoreFuture ... done
[10:54:47.597] result() for MulticoreFuture ... done
[10:54:47.597] result() for MulticoreFuture ...
[10:54:47.597] result() for MulticoreFuture ... done
- stdout = structure(TRUE, drop = TRUE)
[10:54:47.598] getGlobalsAndPackages() ...
[10:54:47.598] |  Searching for globals ...
[10:54:47.599] |  :  globals found: [1] ‘print’
[10:54:47.599] |  Searching for globals ... DONE
[10:54:47.599] |  Resolving globals: FALSE
[10:54:47.599] |  Search for packages associated with the globals ...
[10:54:47.600] |  :  Packages associated with globals: [1] ‘base’
[10:54:47.600] |  :  Packages: [1] ‘base’
[10:54:47.600] |  Search for packages associated with the globals ... DONE
[10:54:47.600] |  Packages after dropping 'base': [0] 
[10:54:47.600] |  globals: [0] 
[10:54:47.601] |  packages: [0] 
[10:54:47.601] getGlobalsAndPackages() ... done
[10:54:47.601] run() for Future (‘Future’) ...
[10:54:47.601] |  state: ‘created’
[10:54:47.601] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.601] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.602] |  Using MulticoreFutureBackend ...
[10:54:47.602] |  :  Launching futures ...
[10:54:47.602] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:54:47.602] |  :  .  |  getFutureData() ...
[10:54:47.602] |  :  .  |  :  getFutureCore() ...
[10:54:47.602] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:54:47.602] |  :  .  |  :  getFutureCore() ... done
[10:54:47.603] |  :  .  |  :  getFutureCapture() ...
[10:54:47.603] |  :  .  |  :  getFutureCapture() ... done
[10:54:47.603] |  :  .  |  :  getFutureContext() ...
[10:54:47.603] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.603] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:54:47.603] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.603] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:54:47.604] |  :  .  |  :  getFutureContext() ... done
[10:54:47.604] |  :  .  |  getFutureData() ... done
[10:54:47.604] |  :  .  |  requestCore(..., workers = 2) ...
[10:54:47.604] |  :  .  |  requestCore(..., workers = 2) ...
[10:54:47.606] |  :  .  |  MulticoreFuture started
[10:54:47.606] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:54:47.607] |  :  Launching futures ... done
[10:54:47.607] |  :  .  |  attachPackages() ...
[10:54:47.607] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:54:47.607] |  :  .  |  :  packages: [n=1] ‘future’
[10:54:47.607] |  Using MulticoreFutureBackend ... done
[10:54:47.607] run() for Future (‘MulticoreFuture’) ... done
[10:54:47.607] |  :  .  |  attachPackages() ... DONE
[10:54:47.607] result() for MulticoreFuture ...
[10:54:47.608] |  :  .  |  attachPackages() ...
[10:54:47.608] |  :  .  |  :  packages: [n=0] 
[10:54:47.608] |  :  .  |  attachPackages() ... DONE
[10:54:47.609] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.609] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:54:47.609] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.610] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.610] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:47.611] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:54:47.611] |  :  .  |  :  .  |  New stack:
[10:54:47.611] |  :  .  |  :  .  |  List of 1
[10:54:47.611] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.611] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.611] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.611] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.611] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.611] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.611] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.615] |  :  .  |  :  .  |  Old stack:
[10:54:47.615] |  :  .  |  :  .  |  List of 1
[10:54:47.615] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.615] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.615] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.615] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.615] |  :  .  |  :  .  |      ...)  
[10:54:47.615] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.615] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.615] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:54:47.615] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.615] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.615] |  :  .  |  :  .  |      ...)  
[10:54:47.615] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.615] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.625] |  :  .  |  :  .  |  Not identical
[10:54:47.625] |  :  .  |  :  .  |  all.equal() for future ...
[10:54:47.625] |  :  .  |  :  .  |  :  List of 2
[10:54:47.625] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.625] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.625] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.625] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.625] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.625] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.625] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.625] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.625] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.625] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.625] |  :  .  |  :  .  |  :      ...)  
[10:54:47.625] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.625] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.625] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:54:47.625] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.625] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.625] |  :  .  |  :  .  |  :      ...)  
[10:54:47.625] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.633] |  :  .  |  :  .  |  :  Formals differ
[10:54:47.633] |  :  .  |  :  .  |  all.equal() for future ... done
[10:54:47.634] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:54:47.634] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:54:47.634] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:54:47.634] |  :  .  |  :  .  List of future strategies:
[10:54:47.634] |  :  .  |  :  .  1. sequential:
[10:54:47.634] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:54:47.634] |  :  .  |  :  .     - tweaked: FALSE
[10:54:47.634] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.635] |  :  .  |  :  .  List of 1
[10:54:47.635] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.635] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.635] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.635] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.635] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.635] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.635] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.638] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:54:47.638] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:54:47.638] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.638] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:54:47.638] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.639] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:54:47.639] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:54:47.639] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:54:47.639] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:47.639] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.642] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.642] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.642] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:47.643] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:54:47.643] |  :  .  |  :  .  |  :  New stack:
[10:54:47.643] |  :  .  |  :  .  |  :  List of 1
[10:54:47.643] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.643] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.643] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.643] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.643] |  :  .  |  :  .  |  :      ...)  
[10:54:47.643] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.643] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.643] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:54:47.643] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.643] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.643] |  :  .  |  :  .  |  :      ...)  
[10:54:47.643] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.643] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.647] |  :  .  |  :  .  |  :  Old stack:
[10:54:47.647] |  :  .  |  :  .  |  :  List of 1
[10:54:47.647] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.647] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.647] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.647] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.647] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.647] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.647] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.651] |  :  .  |  :  .  |  :  Not identical
[10:54:47.651] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:54:47.651] |  :  .  |  :  .  |  :  .  List of 2
[10:54:47.651] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.651] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.651] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.651] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.651] |  :  .  |  :  .  |  :  .      ...)  
[10:54:47.651] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.651] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.651] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:54:47.651] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.651] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.651] |  :  .  |  :  .  |  :  .      ...)  
[10:54:47.651] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.651] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.651] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.651] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.651] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.651] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.651] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.660] |  :  .  |  :  .  |  :  .  Formals differ
[10:54:47.660] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:54:47.660] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:54:47.660] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:54:47.660] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:54:47.660] |  :  .  |  :  .  |  List of future strategies:
[10:54:47.660] |  :  .  |  :  .  |  1. multicore:
[10:54:47.660] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:54:47.660] |  :  .  |  :  .  |     - tweaked: FALSE
[10:54:47.660] |  :  .  |  :  .  |     - call: plan(strategy)
[10:54:47.661] |  :  .  |  :  .  |  List of 1
[10:54:47.661] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.661] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.661] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.661] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.661] |  :  .  |  :  .  |      ...)  
[10:54:47.661] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.661] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.661] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:54:47.661] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.661] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.661] |  :  .  |  :  .  |      ...)  
[10:54:47.661] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.661] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.664] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:54:47.664] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:54:47.664] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.664] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:54:47.664] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.664] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:54:47.664] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:47.665] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.665] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.665] |  readImmediateCondition() ...
[10:54:47.665] |    - path: ‘/tmp/RtmpS14P9L/.future/immediateConditions’
[10:54:47.666] |   - Number of RDS files: 0
[10:54:47.666] |  readImmediateCondition() ... DONE
[10:54:47.666] |  result() for MulticoreFuture ...
[10:54:47.666] |  result() for MulticoreFuture ... done
[10:54:47.667] result() for MulticoreFuture ... done
[10:54:47.667] result() for MulticoreFuture ...
[10:54:47.667] result() for MulticoreFuture ... done
[10:54:47.667] result() for MulticoreFuture ...
[10:54:47.667] result() for MulticoreFuture ... done
[1] 42
[10:54:47.667] result() for MulticoreFuture ...
[10:54:47.668] result() for MulticoreFuture ... done
- stdout = NA
[10:54:47.668] getGlobalsAndPackages() ...
[10:54:47.668] |  Searching for globals ...
[10:54:47.675] |  :  globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[10:54:47.676] |  Searching for globals ... DONE
[10:54:47.676] |  Resolving globals: FALSE
[10:54:47.676] |  Search for packages associated with the globals ...
[10:54:47.677] |  :  Packages associated with globals: [2] ‘base’, ‘utils’
[10:54:47.677] |  :  Packages: [2] ‘base’, ‘utils’
[10:54:47.678] |  Search for packages associated with the globals ... DONE
[10:54:47.678] |  Packages after dropping 'base': [1] ‘utils’
[10:54:47.678] |  Packages after dropping non-attached packages: [1] ‘utils’
[10:54:47.678] |  globals: [0] 
[10:54:47.678] |  packages: [1] ‘utils’
[10:54:47.678] getGlobalsAndPackages() ... done
[10:54:47.679] run() for Future (‘Future’) ...
[10:54:47.679] |  state: ‘created’
[10:54:47.679] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.679] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.679] |  Using MulticoreFutureBackend ...
[10:54:47.680] |  :  Launching futures ...
[10:54:47.680] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:54:47.680] |  :  .  |  getFutureData() ...
[10:54:47.680] |  :  .  |  :  getFutureCore() ...
[10:54:47.680] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘utils’
[10:54:47.680] |  :  .  |  :  getFutureCore() ... done
[10:54:47.681] |  :  .  |  :  getFutureCapture() ...
[10:54:47.681] |  :  .  |  :  getFutureCapture() ... done
[10:54:47.681] |  :  .  |  :  getFutureContext() ...
[10:54:47.681] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.681] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:54:47.681] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.681] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:54:47.682] |  :  .  |  :  getFutureContext() ... done
[10:54:47.682] |  :  .  |  getFutureData() ... done
[10:54:47.682] |  :  .  |  requestCore(..., workers = 2) ...
[10:54:47.682] |  :  .  |  requestCore(..., workers = 2) ...
[10:54:47.684] |  :  .  |  MulticoreFuture started
[10:54:47.685] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:54:47.685] |  :  Launching futures ... done
[10:54:47.685] |  :  .  |  attachPackages() ...
[10:54:47.685] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:54:47.685] |  :  .  |  :  packages: [n=1] ‘future’
[10:54:47.685] |  Using MulticoreFutureBackend ... done
[10:54:47.686] run() for Future (‘MulticoreFuture’) ... done
[10:54:47.686] |  :  .  |  attachPackages() ... DONE
[10:54:47.686] |  :  .  |  attachPackages() ...
[10:54:47.686] result() for MulticoreFuture ...
[10:54:47.686] |  :  .  |  :  packages: [n=1] ‘utils’
[10:54:47.686] |  :  .  |  attachPackages() ... DONE
[10:54:47.687] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.688] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:54:47.688] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.688] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.689] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:47.689] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:54:47.689] |  :  .  |  :  .  |  New stack:
[10:54:47.689] |  :  .  |  :  .  |  List of 1
[10:54:47.689] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.689] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.689] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.689] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.689] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.689] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.689] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.694] |  :  .  |  :  .  |  Old stack:
[10:54:47.694] |  :  .  |  :  .  |  List of 1
[10:54:47.694] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.694] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.694] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.694] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.694] |  :  .  |  :  .  |      ...)  
[10:54:47.694] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.694] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.694] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:54:47.694] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.694] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.694] |  :  .  |  :  .  |      ...)  
[10:54:47.694] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.694] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.699] |  :  .  |  :  .  |  Not identical
[10:54:47.700] |  :  .  |  :  .  |  all.equal() for future ...
[10:54:47.700] |  :  .  |  :  .  |  :  List of 2
[10:54:47.700] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.700] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.700] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.700] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.700] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.700] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.700] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.700] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.700] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.700] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.700] |  :  .  |  :  .  |  :      ...)  
[10:54:47.700] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.700] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.700] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:54:47.700] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.700] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.700] |  :  .  |  :  .  |  :      ...)  
[10:54:47.700] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.707] |  :  .  |  :  .  |  :  Formals differ
[10:54:47.707] |  :  .  |  :  .  |  all.equal() for future ... done
[10:54:47.707] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:54:47.708] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:54:47.708] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:54:47.708] |  :  .  |  :  .  List of future strategies:
[10:54:47.708] |  :  .  |  :  .  1. sequential:
[10:54:47.708] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:54:47.708] |  :  .  |  :  .     - tweaked: FALSE
[10:54:47.708] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.709] |  :  .  |  :  .  List of 1
[10:54:47.709] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.709] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.709] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.709] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.709] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.709] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.709] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.715] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:54:47.715] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:54:47.715] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.715] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:54:47.716] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.716] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:54:47.716] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:54:47.717] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:54:47.717] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:47.717] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
 int [1:50] 1 2 3 4 5 6 7 8 9 10 ...
a-b-c-d-e-f-g-h-i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z1 2 3 4 5 6 
"Sepal.Length"	"Sepal.Width"	"Petal.Length"	"Petal.Width"	"Species"
"1"	5.1	3.5	1.4	0.2	"setosa"
"2"	4.9	3	1.4	0.2	"setosa"
"3"	4.7	3.2	1.3	0.2	"setosa"
"4"	4.6	3.1	1.5	0.2	"setosa"
"5"	5	3.6	1.4	0.2	"setosa"
"6"	5.4	3.9	1.7	0.4	"setosa"
"7"	4.6	3.4	1.4	0.3	"setosa"
"8"	5	3.4	1.5	0.2	"setosa"
"9"	4.4	2.9	1.4	0.2	"setosa"
"10"	4.9	3.1	1.5	0.1	"setosa"
[10:54:47.720] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.720] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.720] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:47.720] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:54:47.721] |  :  .  |  :  .  |  :  New stack:
[10:54:47.721] |  :  .  |  :  .  |  :  List of 1
[10:54:47.721] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.721] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.721] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.721] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.721] |  :  .  |  :  .  |  :      ...)  
[10:54:47.721] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.721] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.721] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:54:47.721] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.721] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.721] |  :  .  |  :  .  |  :      ...)  
[10:54:47.721] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.721] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.725] |  :  .  |  :  .  |  :  Old stack:
[10:54:47.725] |  :  .  |  :  .  |  :  List of 1
[10:54:47.725] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.725] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.725] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.725] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.725] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.725] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.725] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.727] |  :  .  |  :  .  |  :  Not identical
[10:54:47.727] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:54:47.728] |  :  .  |  :  .  |  :  .  List of 2
[10:54:47.728] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.728] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.728] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.728] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.728] |  :  .  |  :  .  |  :  .      ...)  
[10:54:47.728] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.728] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.728] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:54:47.728] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.728] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.728] |  :  .  |  :  .  |  :  .      ...)  
[10:54:47.728] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.728] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.728] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.728] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.728] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.728] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.728] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.732] |  :  .  |  :  .  |  :  .  Formals differ
[10:54:47.732] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:54:47.732] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:54:47.732] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:54:47.733] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:54:47.733] |  :  .  |  :  .  |  List of future strategies:
[10:54:47.733] |  :  .  |  :  .  |  1. multicore:
[10:54:47.733] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:54:47.733] |  :  .  |  :  .  |     - tweaked: FALSE
[10:54:47.733] |  :  .  |  :  .  |     - call: plan(strategy)
[10:54:47.733] |  :  .  |  :  .  |  List of 1
[10:54:47.733] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.733] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.733] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.733] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.733] |  :  .  |  :  .  |      ...)  
[10:54:47.733] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.733] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.733] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:54:47.733] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.733] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.733] |  :  .  |  :  .  |      ...)  
[10:54:47.733] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.733] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.736] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:54:47.736] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:54:47.736] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.736] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:54:47.737] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.737] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:54:47.737] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:47.737] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.737] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.738] |  readImmediateCondition() ...
[10:54:47.738] |    - path: ‘/tmp/RtmpS14P9L/.future/immediateConditions’
[10:54:47.738] |   - Number of RDS files: 0
[10:54:47.738] |  readImmediateCondition() ... DONE
[10:54:47.739] |  result() for MulticoreFuture ...
[10:54:47.739] |  result() for MulticoreFuture ... done
[10:54:47.739] result() for MulticoreFuture ... done
List of 13
 $ value            : int 42
 $ visible          : logi TRUE
 $ stdout           : NULL
 $ conditions       : list()
 $ rng              : logi FALSE
 $ misuseGlobalEnv  : NULL
 $ misuseConnections: NULL
 $ misuseDevices    : NULL
 $ started          : POSIXct[1:1], format: "2025-05-06 10:54:47"
 $ finished         : POSIXct[1:1], format: "2025-05-06 10:54:47"
 $ session_uuid     : chr "974272cbcab35272975741caca1fa9af"
  ..- attr(*, "source")=List of 5
  .. ..$ host  : Named chr "5995ac22cdae"
  .. .. ..- attr(*, "names")= chr "HOSTNAME"
  .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
  .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
  .. ..$ pid   : int 76584
  .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:54:47"
  .. ..$ random: int 2147483647
 $ r_info           :List of 4
  ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
  .. ..$ : int [1:3] 4 5 0
  ..$ os           : chr "unix"
  ..$ os_name      : chr "Linux"
  ..$ captures_utf8: logi TRUE
 $ version          : chr "1.8"
 - attr(*, "class")= chr "FutureResult"
[10:54:47.751] result() for MulticoreFuture ...
[10:54:47.751] result() for MulticoreFuture ... done
[10:54:47.751] result() for MulticoreFuture ...
[10:54:47.751] result() for MulticoreFuture ... done
[10:54:47.752] getGlobalsAndPackages() ...
[10:54:47.752] |  Searching for globals ...
[10:54:47.756] |  :  globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[10:54:47.757] |  Searching for globals ... DONE
[10:54:47.758] |  Resolving globals: FALSE
[10:54:47.759] |  Search for packages associated with the globals ...
[10:54:47.759] |  :  Packages associated with globals: [2] ‘base’, ‘utils’
[10:54:47.760] |  :  Packages: [2] ‘base’, ‘utils’
[10:54:47.760] |  Search for packages associated with the globals ... DONE
[10:54:47.760] |  Packages after dropping 'base': [1] ‘utils’
[10:54:47.760] |  Packages after dropping non-attached packages: [1] ‘utils’
[10:54:47.761] |  globals: [0] 
[10:54:47.761] |  packages: [1] ‘utils’
[10:54:47.761] getGlobalsAndPackages() ... done
[10:54:47.761] run() for Future (‘Future’) ...
[10:54:47.761] |  state: ‘created’
[10:54:47.762] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.762] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.762] |  Using MulticoreFutureBackend ...
[10:54:47.762] |  :  Launching futures ...
[10:54:47.762] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:54:47.762] |  :  .  |  getFutureData() ...
[10:54:47.763] |  :  .  |  :  getFutureCore() ...
[10:54:47.763] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘utils’
[10:54:47.763] |  :  .  |  :  getFutureCore() ... done
[10:54:47.763] |  :  .  |  :  getFutureCapture() ...
[10:54:47.763] |  :  .  |  :  getFutureCapture() ... done
[10:54:47.763] |  :  .  |  :  getFutureContext() ...
[10:54:47.763] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.763] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:54:47.764] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.764] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:54:47.764] |  :  .  |  :  getFutureContext() ... done
[10:54:47.764] |  :  .  |  getFutureData() ... done
[10:54:47.764] |  :  .  |  requestCore(..., workers = 2) ...
[10:54:47.765] |  :  .  |  requestCore(..., workers = 2) ...
[10:54:47.767] |  :  .  |  MulticoreFuture started
[10:54:47.768] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:54:47.768] |  :  Launching futures ... done
[10:54:47.768] |  :  .  |  attachPackages() ...
[10:54:47.768] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:54:47.768] |  :  .  |  :  packages: [n=1] ‘future’
[10:54:47.768] |  Using MulticoreFutureBackend ... done
[10:54:47.769] run() for Future (‘MulticoreFuture’) ... done
[10:54:47.769] |  :  .  |  attachPackages() ... DONE
[10:54:47.769] |  :  .  |  attachPackages() ...
[10:54:47.769] |  :  .  |  :  packages: [n=1] ‘utils’
[10:54:47.769] |  :  .  |  attachPackages() ... DONE
[10:54:47.769] result() for MulticoreFuture ...
[10:54:47.770] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.771] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:54:47.771] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.771] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.772] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:47.772] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:54:47.772] |  :  .  |  :  .  |  New stack:
[10:54:47.772] |  :  .  |  :  .  |  List of 1
[10:54:47.772] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.772] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.772] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.772] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.772] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.772] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.772] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.777] |  :  .  |  :  .  |  Old stack:
[10:54:47.777] |  :  .  |  :  .  |  List of 1
[10:54:47.777] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.777] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.777] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.777] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.777] |  :  .  |  :  .  |      ...)  
[10:54:47.777] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.777] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.777] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:54:47.777] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.777] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.777] |  :  .  |  :  .  |      ...)  
[10:54:47.777] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.777] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.782] |  :  .  |  :  .  |  Not identical
[10:54:47.783] |  :  .  |  :  .  |  all.equal() for future ...
[10:54:47.783] |  :  .  |  :  .  |  :  List of 2
[10:54:47.783] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.783] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.783] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.783] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.783] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.783] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.783] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.783] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.783] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.783] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.783] |  :  .  |  :  .  |  :      ...)  
[10:54:47.783] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.783] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.783] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:54:47.783] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.783] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.783] |  :  .  |  :  .  |  :      ...)  
[10:54:47.783] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.790] |  :  .  |  :  .  |  :  Formals differ
[10:54:47.791] |  :  .  |  :  .  |  all.equal() for future ... done
[10:54:47.791] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:54:47.791] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:54:47.791] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:54:47.791] |  :  .  |  :  .  List of future strategies:
[10:54:47.791] |  :  .  |  :  .  1. sequential:
[10:54:47.791] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:54:47.791] |  :  .  |  :  .     - tweaked: FALSE
[10:54:47.791] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.792] |  :  .  |  :  .  List of 1
[10:54:47.792] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.792] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.792] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.792] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.792] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.792] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.792] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.795] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:54:47.795] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:54:47.796] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.796] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:54:47.796] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.796] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:54:47.797] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:54:47.799] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:54:47.799] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:47.800] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
 int [1:50] 1 2 3 4 5 6 7 8 9 10 ...
a-b-c-d-e-f-g-h-i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z1 2 3 4 5 6 
"Sepal.Length"	"Sepal.Width"	"Petal.Length"	"Petal.Width"	"Species"
"1"	5.1	3.5	1.4	0.2	"setosa"
"2"	4.9	3	1.4	0.2	"setosa"
"3"	4.7	3.2	1.3	0.2	"setosa"
"4"	4.6	3.1	1.5	0.2	"setosa"
"5"	5	3.6	1.4	0.2	"setosa"
"6"	5.4	3.9	1.7	0.4	"setosa"
"7"	4.6	3.4	1.4	0.3	"setosa"
"8"	5	3.4	1.5	0.2	"setosa"
"9"	4.4	2.9	1.4	0.2	"setosa"
"10"	4.9	3.1	1.5	0.1	"setosa"
[10:54:47.803] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.803] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.804] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:47.804] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:54:47.804] |  :  .  |  :  .  |  :  New stack:
[10:54:47.804] |  :  .  |  :  .  |  :  List of 1
[10:54:47.804] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.804] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.804] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.804] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.804] |  :  .  |  :  .  |  :      ...)  
[10:54:47.804] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.804] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.804] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:54:47.804] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.804] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.804] |  :  .  |  :  .  |  :      ...)  
[10:54:47.804] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.804] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.809] |  :  .  |  :  .  |  :  Old stack:
[10:54:47.809] |  :  .  |  :  .  |  :  List of 1
[10:54:47.809] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.809] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.809] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.809] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.809] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.809] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.809] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.811] |  :  .  |  :  .  |  :  Not identical
[10:54:47.811] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:54:47.811] |  :  .  |  :  .  |  :  .  List of 2
[10:54:47.811] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.811] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.811] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.811] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.811] |  :  .  |  :  .  |  :  .      ...)  
[10:54:47.811] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.811] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.811] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:54:47.811] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.811] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.811] |  :  .  |  :  .  |  :  .      ...)  
[10:54:47.811] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.811] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.811] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.811] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.811] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.811] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.811] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.816] |  :  .  |  :  .  |  :  .  Formals differ
[10:54:47.816] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:54:47.816] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:54:47.816] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:54:47.816] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:54:47.816] |  :  .  |  :  .  |  List of future strategies:
[10:54:47.816] |  :  .  |  :  .  |  1. multicore:
[10:54:47.816] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:54:47.816] |  :  .  |  :  .  |     - tweaked: FALSE
[10:54:47.816] |  :  .  |  :  .  |     - call: plan(strategy)
[10:54:47.817] |  :  .  |  :  .  |  List of 1
[10:54:47.817] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.817] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.817] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.817] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.817] |  :  .  |  :  .  |      ...)  
[10:54:47.817] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.817] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.817] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:54:47.817] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.817] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.817] |  :  .  |  :  .  |      ...)  
[10:54:47.817] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.817] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.820] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:54:47.820] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:54:47.820] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.820] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:54:47.820] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.821] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:54:47.821] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:47.821] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.821] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.821] |  readImmediateCondition() ...
[10:54:47.822] |    - path: ‘/tmp/RtmpS14P9L/.future/immediateConditions’
[10:54:47.822] |   - Number of RDS files: 0
[10:54:47.822] |  readImmediateCondition() ... DONE
[10:54:47.823] |  result() for MulticoreFuture ...
[10:54:47.823] |  result() for MulticoreFuture ... done
[10:54:47.823] result() for MulticoreFuture ... done
[10:54:47.823] result() for MulticoreFuture ...
[10:54:47.823] result() for MulticoreFuture ... done
- stdout = structure(TRUE, drop = TRUE)
[10:54:47.824] getGlobalsAndPackages() ...
[10:54:47.824] |  Searching for globals ...
[10:54:47.825] |  :  globals found: [1] ‘print’
[10:54:47.825] |  Searching for globals ... DONE
[10:54:47.825] |  Resolving globals: FALSE
[10:54:47.825] |  Search for packages associated with the globals ...
[10:54:47.825] |  :  Packages associated with globals: [1] ‘base’
[10:54:47.826] |  :  Packages: [1] ‘base’
[10:54:47.826] |  Search for packages associated with the globals ... DONE
[10:54:47.826] |  Packages after dropping 'base': [0] 
[10:54:47.826] |  globals: [0] 
[10:54:47.826] |  packages: [0] 
[10:54:47.827] getGlobalsAndPackages() ... done
[10:54:47.827] run() for Future (‘Future’) ...
[10:54:47.827] |  state: ‘created’
[10:54:47.827] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.827] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.828] |  Using MulticoreFutureBackend ...
[10:54:47.828] |  :  Launching futures ...
[10:54:47.828] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:54:47.828] |  :  .  |  getFutureData() ...
[10:54:47.828] |  :  .  |  :  getFutureCore() ...
[10:54:47.828] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:54:47.828] |  :  .  |  :  getFutureCore() ... done
[10:54:47.829] |  :  .  |  :  getFutureCapture() ...
[10:54:47.829] |  :  .  |  :  getFutureCapture() ... done
[10:54:47.829] |  :  .  |  :  getFutureContext() ...
[10:54:47.829] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.829] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:54:47.829] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.829] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:54:47.830] |  :  .  |  :  getFutureContext() ... done
[10:54:47.830] |  :  .  |  getFutureData() ... done
[10:54:47.830] |  :  .  |  requestCore(..., workers = 2) ...
[10:54:47.830] |  :  .  |  requestCore(..., workers = 2) ...
[10:54:47.832] |  :  .  |  MulticoreFuture started
[10:54:47.833] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:54:47.833] |  :  Launching futures ... done
[10:54:47.833] |  :  .  |  attachPackages() ...
[10:54:47.833] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:54:47.833] |  :  .  |  :  packages: [n=1] ‘future’
[10:54:47.833] |  Using MulticoreFutureBackend ... done
[10:54:47.834] run() for Future (‘MulticoreFuture’) ... done
[10:54:47.834] |  :  .  |  attachPackages() ... DONE
[10:54:47.834] |  :  .  |  attachPackages() ...
[10:54:47.834] result() for MulticoreFuture ...
[10:54:47.834] |  :  .  |  :  packages: [n=0] 
[10:54:47.834] |  :  .  |  attachPackages() ... DONE
[10:54:47.835] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.836] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:54:47.836] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.837] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.837] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:47.837] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:54:47.837] |  :  .  |  :  .  |  New stack:
[10:54:47.838] |  :  .  |  :  .  |  List of 1
[10:54:47.838] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.838] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.838] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.838] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.838] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.838] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.838] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.842] |  :  .  |  :  .  |  Old stack:
[10:54:47.842] |  :  .  |  :  .  |  List of 1
[10:54:47.842] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.842] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.842] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.842] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.842] |  :  .  |  :  .  |      ...)  
[10:54:47.842] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.842] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.842] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:54:47.842] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.842] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.842] |  :  .  |  :  .  |      ...)  
[10:54:47.842] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.842] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.847] |  :  .  |  :  .  |  Not identical
[10:54:47.848] |  :  .  |  :  .  |  all.equal() for future ...
[10:54:47.848] |  :  .  |  :  .  |  :  List of 2
[10:54:47.848] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.848] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.848] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.848] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.848] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.848] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.848] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.848] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.848] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.848] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.848] |  :  .  |  :  .  |  :      ...)  
[10:54:47.848] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.848] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.848] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:54:47.848] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.848] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.848] |  :  .  |  :  .  |  :      ...)  
[10:54:47.848] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.859] |  :  .  |  :  .  |  :  Formals differ
[10:54:47.860] |  :  .  |  :  .  |  all.equal() for future ... done
[10:54:47.860] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:54:47.860] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:54:47.860] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:54:47.860] |  :  .  |  :  .  List of future strategies:
[10:54:47.860] |  :  .  |  :  .  1. sequential:
[10:54:47.860] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:54:47.860] |  :  .  |  :  .     - tweaked: FALSE
[10:54:47.860] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.861] |  :  .  |  :  .  List of 1
[10:54:47.861] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.861] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.861] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.861] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.861] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.861] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.861] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.865] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:54:47.865] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:54:47.865] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.866] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:54:47.866] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.866] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:54:47.866] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:54:47.867] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:54:47.867] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:47.867] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.870] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.870] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:54:47.870] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:54:47.870] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:54:47.870] |  :  .  |  :  .  |  :  New stack:
[10:54:47.871] |  :  .  |  :  .  |  :  List of 1
[10:54:47.871] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.871] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.871] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.871] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.871] |  :  .  |  :  .  |  :      ...)  
[10:54:47.871] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.871] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.871] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:54:47.871] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.871] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.871] |  :  .  |  :  .  |  :      ...)  
[10:54:47.871] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.871] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.874] |  :  .  |  :  .  |  :  Old stack:
[10:54:47.875] |  :  .  |  :  .  |  :  List of 1
[10:54:47.875] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.875] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.875] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.875] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.875] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.875] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.875] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.877] |  :  .  |  :  .  |  :  Not identical
[10:54:47.877] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:54:47.877] |  :  .  |  :  .  |  :  .  List of 2
[10:54:47.877] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.877] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.877] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.877] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.877] |  :  .  |  :  .  |  :  .      ...)  
[10:54:47.877] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.877] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.877] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:54:47.877] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.877] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.877] |  :  .  |  :  .  |  :  .      ...)  
[10:54:47.877] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.877] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.877] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:54:47.877] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:54:47.877] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.877] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:54:47.877] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:54:47.882] |  :  .  |  :  .  |  :  .  Formals differ
[10:54:47.882] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:54:47.882] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:54:47.882] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:54:47.883] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:54:47.883] |  :  .  |  :  .  |  List of future strategies:
[10:54:47.883] |  :  .  |  :  .  |  1. multicore:
[10:54:47.883] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:54:47.883] |  :  .  |  :  .  |     - tweaked: FALSE
[10:54:47.883] |  :  .  |  :  .  |     - call: plan(strategy)
[10:54:47.883] |  :  .  |  :  .  |  List of 1
[10:54:47.883] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.883] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.883] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.883] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.883] |  :  .  |  :  .  |      ...)  
[10:54:47.883] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.883] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.883] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:54:47.883] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.883] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.883] |  :  .  |  :  .  |      ...)  
[10:54:47.883] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.883] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.888] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:54:47.888] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:54:47.889] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.889] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:54:47.889] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.889] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:54:47.889] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:54:47.889] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.889] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:54:47.890] |  readImmediateCondition() ...
[10:54:47.890] |    - path: ‘/tmp/RtmpS14P9L/.future/immediateConditions’
[10:54:47.891] |   - Number of RDS files: 0
[10:54:47.891] |  readImmediateCondition() ... DONE
[10:54:47.891] |  result() for MulticoreFuture ...
[10:54:47.891] |  result() for MulticoreFuture ... done
[10:54:47.891] result() for MulticoreFuture ... done
[10:54:47.891] result() for MulticoreFuture ...
[10:54:47.892] result() for MulticoreFuture ... done
[10:54:47.892] result() for MulticoreFuture ...
[10:54:47.892] result() for MulticoreFuture ... done
[1] 42
[10:54:47.892] result() for MulticoreFuture ...
[10:54:47.892] result() for MulticoreFuture ... done
multicore ... done
multisession ...
[10:54:47.893] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.893] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:54:47.893] |  :  all.equal() for FutureStrategyList ...
[10:54:47.894] |  :  .  New stack:
[10:54:47.894] |  :  .  List of 1
[10:54:47.894] |  :  .   $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:54:47.894] |  :  .      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.894] |  :  .    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:54:47.894] |  :  .    ..- attr(*, "init")= logi TRUE
[10:54:47.894] |  :  .    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:54:47.894] |  :  .    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:54:47.894] |  :  .    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:54:47.894] |  :  .    ..- attr(*, "untweakable")= chr "persistent"
[10:54:47.894] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:54:47.894] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.898] |  :  .  Old stack:
[10:54:47.898] |  :  .  List of 1
[10:54:47.898] |  :  .   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.898] |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.898] |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.898] |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.898] |  :  .      ...)  
[10:54:47.898] |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.898] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.898] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:54:47.898] |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.898] |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.898] |  :  .      ...)  
[10:54:47.898] |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.898] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.902] |  :  .  Not identical
[10:54:47.902] |  :  .  all.equal() for future ...
[10:54:47.902] |  :  .  |  List of 2
[10:54:47.902] |  :  .  |   $ target :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:54:47.902] |  :  .  |      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.902] |  :  .  |    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:54:47.902] |  :  .  |    ..- attr(*, "init")= logi TRUE
[10:54:47.902] |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:54:47.902] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:54:47.902] |  :  .  |    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:54:47.902] |  :  .  |    ..- attr(*, "untweakable")= chr "persistent"
[10:54:47.902] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:54:47.902] |  :  .  |   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:54:47.902] |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:54:47.902] |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:54:47.902] |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.902] |  :  .  |      ...)  
[10:54:47.902] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.902] |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.902] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:54:47.902] |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x5561f346a718> 
[10:54:47.902] |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:54:47.902] |  :  .  |      ...)  
[10:54:47.902] |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:54:47.913] |  :  .  |  Formals differ
[10:54:47.913] |  :  .  all.equal() for future ... done
[10:54:47.913] |  :  .  Future strategies differ at level 1
[10:54:47.913] |  :  all.equal() for FutureStrategyList ... done
[10:54:47.913] |  :  plan(): Setting new future strategy stack:
[10:54:47.913] |  :  List of future strategies:
[10:54:47.913] |  :  1. multisession:
[10:54:47.913] |  :     - args: function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:54:47.913] |  :     - tweaked: FALSE
[10:54:47.913] |  :     - call: plan(strategy)
[10:54:47.914] |  :  List of 1
[10:54:47.914] |  :   $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:54:47.914] |  :      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.914] |  :    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:54:47.914] |  :    ..- attr(*, "init")= logi TRUE
[10:54:47.914] |  :    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:54:47.914] |  :    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:54:47.914] |  :    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:54:47.914] |  :    ..- attr(*, "untweakable")= chr "persistent"
[10:54:47.914] |  :    ..- attr(*, "call")= language plan(strategy)
[10:54:47.914] |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:54:47.917] |  :  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:54:47.917] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:47.918] |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:54:47.918] |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:47.919] |  :  .  Legacy shutdown of cluster workers ...
[10:54:47.919] |  :  .  |  Stopping existing cluster ...
[10:54:47.919] |  :  .  |  :  No pre-existing cluster. Skipping
[10:54:47.919] |  :  .  |  Stopping existing cluster ... done
[10:54:47.920] |  :  .  Legacy shutdown of cluster workers ... done
[10:54:47.920] |  :  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:54:47.920] |  :  plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ...
[10:54:47.920] |  :  .  function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:54:47.920] |  :  .      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:54:47.920] |  :  .   - attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:54:47.920] |  :  .   - attr(*, "init")= logi TRUE
[10:54:47.920] |  :  .   - attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:54:47.920] |  :  .    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:54:47.920] |  :  .   - attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:54:47.920] |  :  .   - attr(*, "untweakable")= chr "persistent"
[10:54:47.920] |  :  .   - attr(*, "call")= language plan(strategy)
[10:54:47.922] |  :  .  init: TRUE
[10:54:47.923] |  :  .  makeFutureBackend(<multisession>) ...
[10:54:47.923] |  :  .  |  Backend function: <‘NULL’>
[10:54:47.925] |  :  .  |  ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ...
[10:54:47.925] |  :  .  |  :  workers: 2
[10:54:47.925] |  :  .  |  :  getCluster() ...
[10:54:47.925] |  :  .  |  :  getCluster() ... done
[10:54:47.925] |  :  .  |  :  Stopping existing cluster ...
[10:54:47.925] |  :  .  |  :  .  No pre-existing cluster. Skipping
[10:54:47.925] |  :  .  |  :  Stopping existing cluster ... done
[10:54:47.925] |  :  .  |  :  Starting new cluster ...
[10:54:47.925] |  :  .  |  :  .  makeCluster(workers, ...) ...
[10:54:47.925] |  :  .  |  :  .  |  Arguments:
[10:54:47.926] |  :  .  |  :  .  |  List of 2
[10:54:47.926] |  :  .  |  :  .  |   $             : int 2
[10:54:47.926] |  :  .  |  :  .  |   $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[10:54:48.430] |  :  .  |  :  .  |  Generated cluster UUID
[10:54:48.430] |  :  .  |  :  .  |  Cluster UUID: ‘1712d4df2ea24347c107638ba49b99e9’
[10:54:48.430] |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:54:48.432] |  :  .  |  :  .  makeCluster(workers, ...) ... done
[10:54:48.432] |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:54:48.434] |  :  .  |  :  Starting new cluster ... done
[10:54:48.434] |  :  .  |  :  Number of workers: 2
[10:54:48.434] |  :  .  |  :  Workers UUID: ‘1712d4df2ea24347c107638ba49b99e9’
[10:54:48.434] |  :  .  |  ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ... done
[10:54:48.434] |  :  .  |  Backend: <‘MultisessionFutureBackend’, ‘ClusterFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:54:48.435] |  :  .  makeFutureBackend(<multisession>) ... done
[10:54:48.435] |  :  plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ... done
[10:54:48.435] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:48.435] |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:54:48.435] |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:48.435] |  :  plan(): nbrOfWorkers() = 2
[10:54:48.435] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:54:48.435] plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
- stdout = TRUE
[10:54:48.436] getGlobalsAndPackages() ...
[10:54:48.436] |  Searching for globals ...
[10:54:48.439] |  :  globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[10:54:48.439] |  Searching for globals ... DONE
[10:54:48.439] |  Resolving globals: FALSE
[10:54:48.439] |  Search for packages associated with the globals ...
[10:54:48.440] |  :  Packages associated with globals: [2] ‘base’, ‘utils’
[10:54:48.440] |  :  Packages: [2] ‘base’, ‘utils’
[10:54:48.440] |  Search for packages associated with the globals ... DONE
[10:54:48.440] |  Packages after dropping 'base': [1] ‘utils’
[10:54:48.440] |  Packages after dropping non-attached packages: [1] ‘utils’
[10:54:48.440] |  globals: [0] 
[10:54:48.441] |  packages: [1] ‘utils’
[10:54:48.441] getGlobalsAndPackages() ... done
[10:54:48.441] run() for Future (‘Future’) ...
[10:54:48.441] |  state: ‘created’
[10:54:48.441] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:48.441] |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:48.441] |  Using MultisessionFutureBackend ...
[10:54:48.441] |  :  Launching futures ...
[10:54:48.442] |  :  .  launchFuture() for ClusterFutureBackend ...
[10:54:48.442] |  :  .  |  Workers: [n=2]
[10:54:48.442] |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:54:48.443] |  :  .  |  FutureRegistry: ‘workers-1712d4df2ea24347c107638ba49b99e9’
[10:54:48.444] |  :  .  |  requestWorker() ...
[10:54:48.444] |  :  .  |  :  requestNode() ...
[10:54:48.444] |  :  .  |  :  .  Number of workers: 2
[10:54:48.444] |  :  .  |  :  .  Polling for a free worker ...
[10:54:48.444] |  :  .  |  :  .  |  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ...
[10:54:48.444] |  :  .  |  :  .  |  :  Created empty registry ‘workers-1712d4df2ea24347c107638ba49b99e9’
[10:54:48.444] |  :  .  |  :  .  |  :  Listing all futures
[10:54:48.444] |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:54:48.444] |  :  .  |  :  .  |  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ... done
[10:54:48.445] |  :  .  |  :  .  |  Total time: 0
[10:54:48.445] |  :  .  |  :  .  Polling for a free worker ... done
[10:54:48.445] |  :  .  |  :  .  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ...
[10:54:48.445] |  :  .  |  :  .  |  Listing all futures
[10:54:48.445] |  :  .  |  :  .  |  Number of registered futures: 0
[10:54:48.445] |  :  .  |  :  .  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ... done
[10:54:48.445] |  :  .  |  :  .  Index of first available worker: 1
[10:54:48.445] |  :  .  |  :  .  Validate that the worker is functional ...
[10:54:48.508] |  :  .  |  :  .  |  Worker is functional
[10:54:48.508] |  :  .  |  :  .  requestNode() ... done
[10:54:48.508] |  :  .  |  :  .  cluster node index: 1
[10:54:48.509] |  :  .  |  :  requestWorker() ... done
[10:54:48.509] |  :  .  |  :  eraseGlobalEnvironment() ...
[10:54:48.510] |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:54:48.510] |  :  .  |  :  launchFuture() ...
[10:54:48.510] |  :  .  |  :  .  cluster node index: 1
[10:54:48.511] |  :  .  |  :  .  getFutureData() ...
[10:54:48.511] |  :  .  |  :  .  |  getFutureCore() ...
[10:54:48.511] |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 1): ‘utils’
[10:54:48.511] |  :  .  |  :  .  |  getFutureCore() ... done
[10:54:48.511] |  :  .  |  :  .  |  getFutureCapture() ...
[10:54:48.511] |  :  .  |  :  .  |  getFutureCapture() ... done
[10:54:48.511] |  :  .  |  :  .  |  getFutureContext() ...
[10:54:48.511] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:48.512] |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:54:48.512] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:48.512] |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:54:48.512] |  :  .  |  :  .  |  getFutureContext() ... done
[10:54:48.512] |  :  .  |  :  .  getFutureData() ... done
[10:54:48.513] |  :  .  |  :  .  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'add', earlySignal = 0) ...
[10:54:48.513] |  :  .  |  :  .  |  Appended future to position #1
[10:54:48.513] |  :  .  |  :  .  |  Number of registered futures: 1
[10:54:48.513] |  :  .  |  :  .  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'add', earlySignal = 0) ... done
[10:54:48.513] |  :  .  |  :  launchFuture() ... done
[10:54:48.513] |  :  .  |  :  MultisessionFuture started
[10:54:48.514] |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:54:48.514] |  :  .  Launching futures ... done
[10:54:48.514] |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:54:48.514] |  :  Using MultisessionFutureBackend ... done
[10:54:48.514] |  run() for Future (‘MultisessionFuture’) ... done
[10:54:48.514] |  result() for ClusterFuture ...
[10:54:48.515] |  :  assertValidConnection() ...
[10:54:48.515] |  :  .  cluster node index: 1
[10:54:48.515] |  :  assertValidConnection() ... done
[10:54:48.516] |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:54:48.516] |  :  .  cluster node index: 1
[10:54:48.607] |  :  .  [1] TRUE
[10:54:48.607] |  :  .  received data:
[10:54:48.607] |  :  .  List of 5
[10:54:48.607] |  :  .   $ type   : chr "VALUE"
[10:54:48.607] |  :  .   $ value  :List of 13
[10:54:48.607] |  :  .    ..$ value            : int 42
[10:54:48.607] |  :  .    ..$ visible          : logi TRUE
[10:54:48.607] |  :  .    ..$ stdout           : chr " [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n[26] 26 27 28 29 30 31 32 33 3"| __truncated__
[10:54:48.607] |  :  .    ..$ conditions       : list()
[10:54:48.607] |  :  .    ..$ rng              : logi FALSE
[10:54:48.607] |  :  .    ..$ misuseGlobalEnv  : NULL
[10:54:48.607] |  :  .    ..$ misuseConnections:List of 3
[10:54:48.607] |  :  .    .. ..$ added   : NULL
[10:54:48.607] |  :  .    .. ..$ removed : NULL
[10:54:48.607] |  :  .    .. ..$ replaced: NULL
[10:54:48.607] |  :  .    ..$ misuseDevices    : NULL
[10:54:48.607] |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:54:48"
[10:54:48.607] |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:54:48"
[10:54:48.607] |  :  .    ..$ session_uuid     : chr "115e8eb4495d950a32de78e54af907a3"
[10:54:48.607] |  :  .    .. ..- attr(*, "source")=List of 5
[10:54:48.607] |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:54:48.607] |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:54:48.607] |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:54:48.607] |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:54:48.607] |  :  .    .. .. ..$ pid   : int 76618
[10:54:48.607] |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:54:48"
[10:54:48.607] |  :  .    .. .. ..$ random: int 2147483647
[10:54:48.607] |  :  .    ..$ r_info           :List of 4
[10:54:48.607] |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:54:48.607] |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:54:48.607] |  :  .    .. ..$ os           : chr "unix"
[10:54:48.607] |  :  .    .. ..$ os_name      : chr "Linux"
[10:54:48.607] |  :  .    .. ..$ captures_utf8: logi TRUE
[10:54:48.607] |  :  .    ..$ version          : chr "1.8"
[10:54:48.607] |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:54:48.607] |  :  .   $ success: logi TRUE
[10:54:48.607] |  :  .   $ time   : 'proc_time' Named num [1:5] 0.05 0.003 0.053 0 0
[10:54:48.607] |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:54:48.607] |  :  .   $ tag    : NULL
[10:54:48.621] |  :  .  Received FutureResult
[10:54:48.621] |  :  .  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'remove', earlySignal = 0) ...
[10:54:48.621] |  :  .  |  Removed future from position #1
[10:54:48.621] |  :  .  |  Number of registered futures: 0
[10:54:48.622] |  :  .  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'remove', earlySignal = 0) ... done
[10:54:48.622] |  :  .  Erased future from future backend
[10:54:48.622] |  :  .  result() for ClusterFuture ...
[10:54:48.622] |  :  .  |  result already collected: FutureResult
[10:54:48.622] |  :  .  result() for ClusterFuture ... done
[10:54:48.622] |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:54:48.622] |  result() for ClusterFuture ... done
List of 13
 $ value            : int 42
 $ visible          : logi TRUE
 $ stdout           : chr " [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n[26] 26 27 28 29 30 31 32 33 3"| __truncated__
 $ conditions       : list()
 $ rng              : logi FALSE
 $ misuseGlobalEnv  : NULL
 $ misuseConnections:List of 3
  ..$ added   : NULL
  ..$ removed : NULL
  ..$ replaced: NULL
 $ misuseDevices    : NULL
 $ started          : POSIXct[1:1], format: "2025-05-06 10:54:48"
 $ finished         : POSIXct[1:1], format: "2025-05-06 10:54:48"
 $ session_uuid     : chr "115e8eb4495d950a32de78e54af907a3"
  ..- attr(*, "source")=List of 5
  .. ..$ host  : Named chr "5995ac22cdae"
  .. .. ..- attr(*, "names")= chr "HOSTNAME"
  .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
  .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
  .. ..$ pid   : int 76618
  .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:54:48"
  .. ..$ random: int 2147483647
 $ r_info           :List of 4
  ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
  .. ..$ : int [1:3] 4 5 0
  ..$ os           : chr "unix"
  ..$ os_name      : chr "Linux"
  ..$ captures_utf8: logi TRUE
 $ version          : chr "1.8"
 - attr(*, "class")= chr "FutureResult"
[10:54:48.633] |  result() for ClusterFuture ...
[10:54:48.634] |  :  result already collected: FutureResult
[10:54:48.634] |  result() for ClusterFuture ... done
[10:54:48.634] |  result() for ClusterFuture ...
[10:54:48.634] |  :  result already collected: FutureResult
[10:54:48.634] |  result() for ClusterFuture ... done
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
 int [1:50] 1 2 3 4 5 6 7 8 9 10 ...
a-b-c-d-e-f-g-h-i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z1 2 3 4 5 6 
"Sepal.Length"	"Sepal.Width"	"Petal.Length"	"Petal.Width"	"Species"
"1"	5.1	3.5	1.4	0.2	"setosa"
"2"	4.9	3	1.4	0.2	"setosa"
"3"	4.7	3.2	1.3	0.2	"setosa"
"4"	4.6	3.1	1.5	0.2	"setosa"
"5"	5	3.6	1.4	0.2	"setosa"
"6"	5.4	3.9	1.7	0.4	"setosa"
"7"	4.6	3.4	1.4	0.3	"setosa"
"8"	5	3.4	1.5	0.2	"setosa"
"9"	4.4	2.9	1.4	0.2	"setosa"
"10"	4.9	3.1	1.5	0.1	"setosa"
FutureResult:
value: ‘integer’
visible: TRUE
stdout: character
conditions: [n = 0] 
RNG used: FALSE
duration: 0.05159187 secs (started 2025-05-06 10:54:48.554909)
version: 1.8
[10:54:48.635] |  getGlobalsAndPackages() ...
[10:54:48.635] |  :  Searching for globals ...
[10:54:48.639] |  :  .  globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[10:54:48.639] |  :  Searching for globals ... DONE
[10:54:48.640] |  :  Resolving globals: FALSE
[10:54:48.640] |  :  Search for packages associated with the globals ...
[10:54:48.640] |  :  .  Packages associated with globals: [2] ‘base’, ‘utils’
[10:54:48.640] |  :  .  Packages: [2] ‘base’, ‘utils’
[10:54:48.641] |  :  Search for packages associated with the globals ... DONE
[10:54:48.641] |  :  Packages after dropping 'base': [1] ‘utils’
[10:54:48.641] |  :  Packages after dropping non-attached packages: [1] ‘utils’
[10:54:48.641] |  :  globals: [0] 
[10:54:48.641] |  :  packages: [1] ‘utils’
[10:54:48.641] |  getGlobalsAndPackages() ... done
[10:54:48.642] |  run() for Future (‘Future’) ...
[10:54:48.642] |  :  state: ‘created’
[10:54:48.642] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:48.642] |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:48.642] |  :  Using MultisessionFutureBackend ...
[10:54:48.642] |  :  .  Launching futures ...
[10:54:48.642] |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:54:48.643] |  :  .  |  :  Workers: [n=2]
[10:54:48.643] |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:54:48.645] |  :  .  |  :  FutureRegistry: ‘workers-1712d4df2ea24347c107638ba49b99e9’
[10:54:48.645] |  :  .  |  :  requestWorker() ...
[10:54:48.645] |  :  .  |  :  .  requestNode() ...
[10:54:48.645] |  :  .  |  :  .  |  Number of workers: 2
[10:54:48.645] |  :  .  |  :  .  |  Polling for a free worker ...
[10:54:48.645] |  :  .  |  :  .  |  :  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ...
[10:54:48.646] |  :  .  |  :  .  |  :  .  Listing all futures
[10:54:48.646] |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:54:48.646] |  :  .  |  :  .  |  :  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ... done
[10:54:48.646] |  :  .  |  :  .  |  :  Total time: 0
[10:54:48.646] |  :  .  |  :  .  |  Polling for a free worker ... done
[10:54:48.646] |  :  .  |  :  .  |  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ...
[10:54:48.646] |  :  .  |  :  .  |  :  Listing all futures
[10:54:48.646] |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:54:48.647] |  :  .  |  :  .  |  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ... done
[10:54:48.647] |  :  .  |  :  .  |  Index of first available worker: 1
[10:54:48.647] |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:54:48.688] |  :  .  |  :  .  |  :  Worker is functional
[10:54:48.688] |  :  .  |  :  .  |  requestNode() ... done
[10:54:48.688] |  :  .  |  :  .  |  cluster node index: 1
[10:54:48.689] |  :  .  |  :  .  requestWorker() ... done
[10:54:48.689] |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:54:48.689] |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:54:48.689] |  :  .  |  :  .  launchFuture() ...
[10:54:48.689] |  :  .  |  :  .  |  cluster node index: 1
[10:54:48.690] |  :  .  |  :  .  |  getFutureData() ...
[10:54:48.690] |  :  .  |  :  .  |  :  getFutureCore() ...
[10:54:48.690] |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘utils’
[10:54:48.690] |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:54:48.690] |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:54:48.690] |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:54:48.690] |  :  .  |  :  .  |  :  getFutureContext() ...
[10:54:48.690] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:48.691] |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:54:48.691] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:48.691] |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:54:48.691] |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:54:48.691] |  :  .  |  :  .  |  getFutureData() ... done
[10:54:48.692] |  :  .  |  :  .  |  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'add', earlySignal = 0) ...
[10:54:48.692] |  :  .  |  :  .  |  :  Appended future to position #1
[10:54:48.692] |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:54:48.692] |  :  .  |  :  .  |  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'add', earlySignal = 0) ... done
[10:54:48.692] |  :  .  |  :  .  launchFuture() ... done
[10:54:48.692] |  :  .  |  :  .  MultisessionFuture started
[10:54:48.692] |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:54:48.692] |  :  .  |  Launching futures ... done
[10:54:48.693] |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:54:48.693] |  :  .  Using MultisessionFutureBackend ... done
[10:54:48.693] |  :  run() for Future (‘MultisessionFuture’) ... done
[10:54:48.693] |  :  result() for ClusterFuture ...
[10:54:48.693] |  :  .  assertValidConnection() ...
[10:54:48.694] |  :  .  |  cluster node index: 1
[10:54:48.694] |  :  .  assertValidConnection() ... done
[10:54:48.694] |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:54:48.694] |  :  .  |  cluster node index: 1
[10:54:48.736] |  :  .  |  [1] TRUE
[10:54:48.737] |  :  .  |  received data:
[10:54:48.737] |  :  .  |  List of 5
[10:54:48.737] |  :  .  |   $ type   : chr "VALUE"
[10:54:48.737] |  :  .  |   $ value  :List of 13
[10:54:48.737] |  :  .  |    ..$ value            : int 42
[10:54:48.737] |  :  .  |    ..$ visible          : logi TRUE
[10:54:48.737] |  :  .  |    ..$ stdout           : chr " [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n[26] 26 27 28 29 30 31 32 33 3"| __truncated__
[10:54:48.737] |  :  .  |    ..$ conditions       : list()
[10:54:48.737] |  :  .  |    ..$ rng              : logi FALSE
[10:54:48.737] |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:54:48.737] |  :  .  |    ..$ misuseConnections:List of 3
[10:54:48.737] |  :  .  |    .. ..$ added   : NULL
[10:54:48.737] |  :  .  |    .. ..$ removed : NULL
[10:54:48.737] |  :  .  |    .. ..$ replaced: NULL
[10:54:48.737] |  :  .  |    ..$ misuseDevices    : NULL
[10:54:48.737] |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:54:48"
[10:54:48.737] |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:54:48"
[10:54:48.737] |  :  .  |    ..$ session_uuid     : chr "115e8eb4495d950a32de78e54af907a3"
[10:54:48.737] |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:54:48.737] |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:54:48.737] |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:54:48.737] |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:54:48.737] |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:54:48.737] |  :  .  |    .. .. ..$ pid   : int 76618
[10:54:48.737] |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:54:48"
[10:54:48.737] |  :  .  |    .. .. ..$ random: int 2147483647
[10:54:48.737] |  :  .  |    ..$ r_info           :List of 4
[10:54:48.737] |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:54:48.737] |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:54:48.737] |  :  .  |    .. ..$ os           : chr "unix"
[10:54:48.737] |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:54:48.737] |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:54:48.737] |  :  .  |    ..$ version          : chr "1.8"
[10:54:48.737] |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:54:48.737] |  :  .  |   $ success: logi TRUE
[10:54:48.737] |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[10:54:48.737] |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:54:48.737] |  :  .  |   $ tag    : NULL
[10:54:48.750] |  :  .  |  Received FutureResult
[10:54:48.750] |  :  .  |  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'remove', earlySignal = 0) ...
[10:54:48.750] |  :  .  |  :  Removed future from position #1
[10:54:48.750] |  :  .  |  :  Number of registered futures: 0
[10:54:48.750] |  :  .  |  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'remove', earlySignal = 0) ... done
[10:54:48.750] |  :  .  |  Erased future from future backend
[10:54:48.750] |  :  .  |  result() for ClusterFuture ...
[10:54:48.750] |  :  .  |  :  result already collected: FutureResult
[10:54:48.750] |  :  .  |  result() for ClusterFuture ... done
[10:54:48.750] |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:54:48.751] |  :  result() for ClusterFuture ... done
[10:54:48.751] |  :  result() for ClusterFuture ...
[10:54:48.751] |  :  .  result already collected: FutureResult
[10:54:48.751] |  :  result() for ClusterFuture ... done
 [1] " [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25"  
 [2] "[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50"  
 [3] " int [1:50] 1 2 3 4 5 6 7 8 9 10 ..."                                             
 [4] "a-b-c-d-e-f-g-h-i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z1 2 3 4 5 6 "                  
 [5] "\"Sepal.Length\"\t\"Sepal.Width\"\t\"Petal.Length\"\t\"Petal.Width\"\t\"Species\""
 [6] "\"1\"\t5.1\t3.5\t1.4\t0.2\t\"setosa\""                                            
 [7] "\"2\"\t4.9\t3\t1.4\t0.2\t\"setosa\""                                              
 [8] "\"3\"\t4.7\t3.2\t1.3\t0.2\t\"setosa\""                                            
 [9] "\"4\"\t4.6\t3.1\t1.5\t0.2\t\"setosa\""                                            
[10] "\"5\"\t5\t3.6\t1.4\t0.2\t\"setosa\""                                              
[11] "\"6\"\t5.4\t3.9\t1.7\t0.4\t\"setosa\""                                            
[12] "\"7\"\t4.6\t3.4\t1.4\t0.3\t\"setosa\""                                            
[13] "\"8\"\t5\t3.4\t1.5\t0.2\t\"setosa\""                                              
[14] "\"9\"\t4.4\t2.9\t1.4\t0.2\t\"setosa\""                                            
[15] "\"10\"\t4.9\t3.1\t1.5\t0.1\t\"setosa\""                                           
- stdout = structure(TRUE, drop = TRUE)
[10:54:48.751] |  :  getGlobalsAndPackages() ...
[10:54:48.751] |  :  .  Searching for globals ...
[10:54:48.752] |  :  .  |  globals found: [1] ‘print’
[10:54:48.752] |  :  .  Searching for globals ... DONE
[10:54:48.752] |  :  .  Resolving globals: FALSE
[10:54:48.752] |  :  .  Search for packages associated with the globals ...
[10:54:48.752] |  :  .  |  Packages associated with globals: [1] ‘base’
[10:54:48.753] |  :  .  |  Packages: [1] ‘base’
[10:54:48.753] |  :  .  Search for packages associated with the globals ... DONE
[10:54:48.753] |  :  .  Packages after dropping 'base': [0] 
[10:54:48.753] |  :  .  globals: [0] 
[10:54:48.753] |  :  .  packages: [0] 
[10:54:48.753] |  :  getGlobalsAndPackages() ... done
[10:54:48.754] |  :  run() for Future (‘Future’) ...
[10:54:48.754] |  :  .  state: ‘created’
[10:54:48.754] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:48.754] |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:48.754] |  :  .  Using MultisessionFutureBackend ...
[10:54:48.754] |  :  .  |  Launching futures ...
[10:54:48.754] |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:54:48.754] |  :  .  |  :  .  Workers: [n=2]
[10:54:48.755] |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:54:48.756] |  :  .  |  :  .  FutureRegistry: ‘workers-1712d4df2ea24347c107638ba49b99e9’
[10:54:48.756] |  :  .  |  :  .  requestWorker() ...
[10:54:48.756] |  :  .  |  :  .  |  requestNode() ...
[10:54:48.756] |  :  .  |  :  .  |  :  Number of workers: 2
[10:54:48.756] |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:54:48.757] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ...
[10:54:48.757] |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:54:48.757] |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:54:48.757] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ... done
[10:54:48.757] |  :  .  |  :  .  |  :  .  Total time: 0
[10:54:48.757] |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:54:48.757] |  :  .  |  :  .  |  :  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ...
[10:54:48.757] |  :  .  |  :  .  |  :  .  Listing all futures
[10:54:48.757] |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:54:48.757] |  :  .  |  :  .  |  :  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ... done
[10:54:48.758] |  :  .  |  :  .  |  :  Index of first available worker: 1
[10:54:48.758] |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:54:48.841] |  :  .  |  :  .  |  :  .  Worker is functional
[10:54:48.841] |  :  .  |  :  .  |  :  requestNode() ... done
[10:54:48.841] |  :  .  |  :  .  |  :  cluster node index: 1
[10:54:48.841] |  :  .  |  :  .  |  requestWorker() ... done
[10:54:48.841] |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:54:48.842] |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:54:48.842] |  :  .  |  :  .  |  launchFuture() ...
[10:54:48.842] |  :  .  |  :  .  |  :  cluster node index: 1
[10:54:48.842] |  :  .  |  :  .  |  :  getFutureData() ...
[10:54:48.842] |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:54:48.842] |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:54:48.842] |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:54:48.842] |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:54:48.842] |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:54:48.843] |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:54:48.843] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:48.843] |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:54:48.843] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:48.843] |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:54:48.843] |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:54:48.843] |  :  .  |  :  .  |  :  getFutureData() ... done
[10:54:48.844] |  :  .  |  :  .  |  :  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'add', earlySignal = 0) ...
[10:54:48.844] |  :  .  |  :  .  |  :  .  Appended future to position #1
[10:54:48.844] |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:54:48.844] |  :  .  |  :  .  |  :  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'add', earlySignal = 0) ... done
[10:54:48.844] |  :  .  |  :  .  |  launchFuture() ... done
[10:54:48.844] |  :  .  |  :  .  |  MultisessionFuture started
[10:54:48.844] |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:54:48.844] |  :  .  |  :  Launching futures ... done
[10:54:48.844] |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:54:48.844] |  :  .  |  Using MultisessionFutureBackend ... done
[10:54:48.845] |  :  .  run() for Future (‘MultisessionFuture’) ... done
[10:54:48.845] |  :  .  result() for ClusterFuture ...
[10:54:48.845] |  :  .  |  assertValidConnection() ...
[10:54:48.845] |  :  .  |  :  cluster node index: 1
[10:54:48.845] |  :  .  |  assertValidConnection() ... done
[10:54:48.845] |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:54:48.846] |  :  .  |  :  cluster node index: 1
[10:54:48.887] |  :  .  |  :  [1] TRUE
[10:54:48.888] |  :  .  |  :  received data:
[10:54:48.888] |  :  .  |  :  List of 5
[10:54:48.888] |  :  .  |  :   $ type   : chr "VALUE"
[10:54:48.888] |  :  .  |  :   $ value  :List of 13
[10:54:48.888] |  :  .  |  :    ..$ value            : num 42
[10:54:48.888] |  :  .  |  :    ..$ visible          : logi FALSE
[10:54:48.888] |  :  .  |  :    ..$ stdout           : chr "[1] 42\n"
[10:54:48.888] |  :  .  |  :    ..$ conditions       : list()
[10:54:48.888] |  :  .  |  :    ..$ rng              : logi FALSE
[10:54:48.888] |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:54:48.888] |  :  .  |  :    ..$ misuseConnections:List of 3
[10:54:48.888] |  :  .  |  :    .. ..$ added   : NULL
[10:54:48.888] |  :  .  |  :    .. ..$ removed : NULL
[10:54:48.888] |  :  .  |  :    .. ..$ replaced: NULL
[10:54:48.888] |  :  .  |  :    ..$ misuseDevices    : NULL
[10:54:48.888] |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:54:48"
[10:54:48.888] |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:54:48"
[10:54:48.888] |  :  .  |  :    ..$ session_uuid     : chr "115e8eb4495d950a32de78e54af907a3"
[10:54:48.888] |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:54:48.888] |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:54:48.888] |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:54:48.888] |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:54:48.888] |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:54:48.888] |  :  .  |  :    .. .. ..$ pid   : int 76618
[10:54:48.888] |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:54:48"
[10:54:48.888] |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:54:48.888] |  :  .  |  :    ..$ r_info           :List of 4
[10:54:48.888] |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:54:48.888] |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:54:48.888] |  :  .  |  :    .. ..$ os           : chr "unix"
[10:54:48.888] |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:54:48.888] |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:54:48.888] |  :  .  |  :    ..$ version          : chr "1.8"
[10:54:48.888] |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:54:48.888] |  :  .  |  :   $ success: logi TRUE
[10:54:48.888] |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:54:48.888] |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:54:48.888] |  :  .  |  :   $ tag    : NULL
[10:54:48.898] |  :  .  |  :  Received FutureResult
[10:54:48.898] |  :  .  |  :  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'remove', earlySignal = 0) ...
[10:54:48.898] |  :  .  |  :  .  Removed future from position #1
[10:54:48.899] |  :  .  |  :  .  Number of registered futures: 0
[10:54:48.899] |  :  .  |  :  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'remove', earlySignal = 0) ... done
[10:54:48.899] |  :  .  |  :  Erased future from future backend
[10:54:48.899] |  :  .  |  :  result() for ClusterFuture ...
[10:54:48.899] |  :  .  |  :  .  result already collected: FutureResult
[10:54:48.899] |  :  .  |  :  result() for ClusterFuture ... done
[10:54:48.899] |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:54:48.899] |  :  .  result() for ClusterFuture ... done
[10:54:48.899] |  :  .  result() for ClusterFuture ...
[10:54:48.899] |  :  .  |  result already collected: FutureResult
[10:54:48.900] |  :  .  result() for ClusterFuture ... done
[10:54:48.900] |  :  .  result() for ClusterFuture ...
[10:54:48.900] |  :  .  |  result already collected: FutureResult
[10:54:48.900] |  :  .  result() for ClusterFuture ... done
[1] 42
[10:54:48.900] |  :  .  result() for ClusterFuture ...
[10:54:48.900] |  :  .  |  result already collected: FutureResult
[10:54:48.900] |  :  .  result() for ClusterFuture ... done
- stdout = FALSE
[10:54:48.900] |  :  .  getGlobalsAndPackages() ...
[10:54:48.900] |  :  .  |  Searching for globals ...
[10:54:48.904] |  :  .  |  :  globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[10:54:48.904] |  :  .  |  Searching for globals ... DONE
[10:54:48.904] |  :  .  |  Resolving globals: FALSE
[10:54:48.904] |  :  .  |  Search for packages associated with the globals ...
[10:54:48.904] |  :  .  |  :  Packages associated with globals: [2] ‘base’, ‘utils’
[10:54:48.905] |  :  .  |  :  Packages: [2] ‘base’, ‘utils’
[10:54:48.905] |  :  .  |  Search for packages associated with the globals ... DONE
[10:54:48.905] |  :  .  |  Packages after dropping 'base': [1] ‘utils’
[10:54:48.905] |  :  .  |  Packages after dropping non-attached packages: [1] ‘utils’
[10:54:48.905] |  :  .  |  globals: [0] 
[10:54:48.905] |  :  .  |  packages: [1] ‘utils’
[10:54:48.905] |  :  .  getGlobalsAndPackages() ... done
[10:54:48.906] |  :  .  run() for Future (‘Future’) ...
[10:54:48.906] |  :  .  |  state: ‘created’
[10:54:48.906] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:48.906] |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:48.906] |  :  .  |  Using MultisessionFutureBackend ...
[10:54:48.906] |  :  .  |  :  Launching futures ...
[10:54:48.906] |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:54:48.906] |  :  .  |  :  .  |  Workers: [n=2]
[10:54:48.907] |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:54:48.908] |  :  .  |  :  .  |  FutureRegistry: ‘workers-1712d4df2ea24347c107638ba49b99e9’
[10:54:48.908] |  :  .  |  :  .  |  requestWorker() ...
[10:54:48.908] |  :  .  |  :  .  |  :  requestNode() ...
[10:54:48.908] |  :  .  |  :  .  |  :  .  Number of workers: 2
[10:54:48.909] |  :  .  |  :  .  |  :  .  Polling for a free worker ...
[10:54:48.909] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ...
[10:54:48.909] |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:54:48.909] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:54:48.909] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ... done
[10:54:48.909] |  :  .  |  :  .  |  :  .  |  Total time: 0
[10:54:48.909] |  :  .  |  :  .  |  :  .  Polling for a free worker ... done
[10:54:48.909] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ...
[10:54:48.909] |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:54:48.909] |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:54:48.909] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ... done
[10:54:48.910] |  :  .  |  :  .  |  :  .  Index of first available worker: 1
[10:54:48.910] |  :  .  |  :  .  |  :  .  Validate that the worker is functional ...
[10:54:48.988] |  :  .  |  :  .  |  :  .  |  Worker is functional
[10:54:48.988] |  :  .  |  :  .  |  :  .  requestNode() ... done
[10:54:48.989] |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:54:48.989] |  :  .  |  :  .  |  :  requestWorker() ... done
[10:54:48.989] |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ...
[10:54:48.989] |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:54:48.989] |  :  .  |  :  .  |  :  launchFuture() ...
[10:54:48.990] |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:54:48.990] |  :  .  |  :  .  |  :  .  getFutureData() ...
[10:54:48.990] |  :  .  |  :  .  |  :  .  |  getFutureCore() ...
[10:54:48.990] |  :  .  |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 1): ‘utils’
[10:54:48.990] |  :  .  |  :  .  |  :  .  |  getFutureCore() ... done
[10:54:48.990] |  :  .  |  :  .  |  :  .  |  getFutureCapture() ...
[10:54:48.990] |  :  .  |  :  .  |  :  .  |  getFutureCapture() ... done
[10:54:48.990] |  :  .  |  :  .  |  :  .  |  getFutureContext() ...
[10:54:48.990] |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:48.991] |  :  .  |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:54:48.991] |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:48.991] |  :  .  |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:54:48.991] |  :  .  |  :  .  |  :  .  |  getFutureContext() ... done
[10:54:48.991] |  :  .  |  :  .  |  :  .  getFutureData() ... done
[10:54:48.991] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'add', earlySignal = 0) ...
[10:54:48.991] |  :  .  |  :  .  |  :  .  |  Appended future to position #1
[10:54:48.992] |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:54:48.992] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'add', earlySignal = 0) ... done
[10:54:48.992] |  :  .  |  :  .  |  :  launchFuture() ... done
[10:54:48.992] |  :  .  |  :  .  |  :  MultisessionFuture started
[10:54:48.992] |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:54:48.992] |  :  .  |  :  .  Launching futures ... done
[10:54:48.992] |  :  .  |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:54:48.992] |  :  .  |  :  Using MultisessionFutureBackend ... done
[10:54:48.992] |  :  .  |  run() for Future (‘MultisessionFuture’) ... done
[10:54:48.992] |  :  .  |  result() for ClusterFuture ...
[10:54:48.993] |  :  .  |  :  assertValidConnection() ...
[10:54:48.993] |  :  .  |  :  .  cluster node index: 1
[10:54:48.993] |  :  .  |  :  assertValidConnection() ... done
[10:54:48.993] |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:54:48.993] |  :  .  |  :  .  cluster node index: 1
[10:54:49.036] |  :  .  |  :  .  [1] TRUE
[10:54:49.037] |  :  .  |  :  .  received data:
[10:54:49.037] |  :  .  |  :  .  List of 5
[10:54:49.037] |  :  .  |  :  .   $ type   : chr "VALUE"
[10:54:49.037] |  :  .  |  :  .   $ value  :List of 13
[10:54:49.037] |  :  .  |  :  .    ..$ value            : int 42
[10:54:49.037] |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:54:49.037] |  :  .  |  :  .    ..$ stdout           : NULL
[10:54:49.037] |  :  .  |  :  .    ..$ conditions       : list()
[10:54:49.037] |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:54:49.037] |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:54:49.037] |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:54:49.037] |  :  .  |  :  .    .. ..$ added   : NULL
[10:54:49.037] |  :  .  |  :  .    .. ..$ removed : NULL
[10:54:49.037] |  :  .  |  :  .    .. ..$ replaced: NULL
[10:54:49.037] |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:54:49.037] |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:54:49"
[10:54:49.037] |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:54:49"
[10:54:49.037] |  :  .  |  :  .    ..$ session_uuid     : chr "115e8eb4495d950a32de78e54af907a3"
[10:54:49.037] |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:54:49.037] |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:54:49.037] |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:54:49.037] |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:54:49.037] |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:54:49.037] |  :  .  |  :  .    .. .. ..$ pid   : int 76618
[10:54:49.037] |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:54:48"
[10:54:49.037] |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:54:49.037] |  :  .  |  :  .    ..$ r_info           :List of 4
[10:54:49.037] |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:54:49.037] |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:54:49.037] |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:54:49.037] |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:54:49.037] |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:54:49.037] |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:54:49.037] |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:54:49.037] |  :  .  |  :  .   $ success: logi TRUE
[10:54:49.037] |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.004 0.001 0.004 0 0
[10:54:49.037] |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:54:49.037] |  :  .  |  :  .   $ tag    : NULL
[10:54:49.047] |  :  .  |  :  .  Received FutureResult
[10:54:49.047] |  :  .  |  :  .  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'remove', earlySignal = 0) ...
[10:54:49.047] |  :  .  |  :  .  |  Removed future from position #1
[10:54:49.048] |  :  .  |  :  .  |  Number of registered futures: 0
[10:54:49.048] |  :  .  |  :  .  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'remove', earlySignal = 0) ... done
[10:54:49.048] |  :  .  |  :  .  Erased future from future backend
[10:54:49.048] |  :  .  |  :  .  result() for ClusterFuture ...
[10:54:49.048] |  :  .  |  :  .  |  result already collected: FutureResult
[10:54:49.048] |  :  .  |  :  .  result() for ClusterFuture ... done
[10:54:49.048] |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:54:49.048] |  :  .  |  result() for ClusterFuture ... done
List of 13
 $ value            : int 42
 $ visible          : logi TRUE
 $ stdout           : NULL
 $ conditions       : list()
 $ rng              : logi FALSE
 $ misuseGlobalEnv  : NULL
 $ misuseConnections:List of 3
  ..$ added   : NULL
  ..$ removed : NULL
  ..$ replaced: NULL
 $ misuseDevices    : NULL
 $ started          : POSIXct[1:1], format: "2025-05-06 10:54:49"
 $ finished         : POSIXct[1:1], format: "2025-05-06 10:54:49"
 $ session_uuid     : chr "115e8eb4495d950a32de78e54af907a3"
  ..- attr(*, "source")=List of 5
  .. ..$ host  : Named chr "5995ac22cdae"
  .. .. ..- attr(*, "names")= chr "HOSTNAME"
  .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
  .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
  .. ..$ pid   : int 76618
  .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:54:48"
  .. ..$ random: int 2147483647
 $ r_info           :List of 4
  ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
  .. ..$ : int [1:3] 4 5 0
  ..$ os           : chr "unix"
  ..$ os_name      : chr "Linux"
  ..$ captures_utf8: logi TRUE
 $ version          : chr "1.8"
 - attr(*, "class")= chr "FutureResult"
[10:54:49.058] |  :  .  |  result() for ClusterFuture ...
[10:54:49.059] |  :  .  |  :  result already collected: FutureResult
[10:54:49.059] |  :  .  |  result() for ClusterFuture ... done
[10:54:49.059] |  :  .  |  result() for ClusterFuture ...
[10:54:49.059] |  :  .  |  :  result already collected: FutureResult
[10:54:49.059] |  :  .  |  result() for ClusterFuture ... done
[10:54:49.059] |  :  .  |  getGlobalsAndPackages() ...
[10:54:49.059] |  :  .  |  :  Searching for globals ...
[10:54:49.063] |  :  .  |  :  .  globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[10:54:49.063] |  :  .  |  :  Searching for globals ... DONE
[10:54:49.063] |  :  .  |  :  Resolving globals: FALSE
[10:54:49.063] |  :  .  |  :  Search for packages associated with the globals ...
[10:54:49.063] |  :  .  |  :  .  Packages associated with globals: [2] ‘base’, ‘utils’
[10:54:49.064] |  :  .  |  :  .  Packages: [2] ‘base’, ‘utils’
[10:54:49.064] |  :  .  |  :  Search for packages associated with the globals ... DONE
[10:54:49.064] |  :  .  |  :  Packages after dropping 'base': [1] ‘utils’
[10:54:49.064] |  :  .  |  :  Packages after dropping non-attached packages: [1] ‘utils’
[10:54:49.064] |  :  .  |  :  globals: [0] 
[10:54:49.064] |  :  .  |  :  packages: [1] ‘utils’
[10:54:49.064] |  :  .  |  getGlobalsAndPackages() ... done
[10:54:49.065] |  :  .  |  run() for Future (‘Future’) ...
[10:54:49.065] |  :  .  |  :  state: ‘created’
[10:54:49.065] |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:49.065] |  :  .  |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:49.065] |  :  .  |  :  Using MultisessionFutureBackend ...
[10:54:49.065] |  :  .  |  :  .  Launching futures ...
[10:54:49.065] |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:54:49.065] |  :  .  |  :  .  |  :  Workers: [n=2]
[10:54:49.066] |  :  .  |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:54:49.067] |  :  .  |  :  .  |  :  FutureRegistry: ‘workers-1712d4df2ea24347c107638ba49b99e9’
[10:54:49.067] |  :  .  |  :  .  |  :  requestWorker() ...
[10:54:49.067] |  :  .  |  :  .  |  :  .  requestNode() ...
[10:54:49.067] |  :  .  |  :  .  |  :  .  |  Number of workers: 2
[10:54:49.068] |  :  .  |  :  .  |  :  .  |  Polling for a free worker ...
[10:54:49.068] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ...
[10:54:49.068] |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:54:49.068] |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:54:49.068] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ... done
[10:54:49.068] |  :  .  |  :  .  |  :  .  |  :  Total time: 0
[10:54:49.068] |  :  .  |  :  .  |  :  .  |  Polling for a free worker ... done
[10:54:49.068] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ...
[10:54:49.068] |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:54:49.068] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:54:49.068] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ... done
[10:54:49.069] |  :  .  |  :  .  |  :  .  |  Index of first available worker: 1
[10:54:49.069] |  :  .  |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:54:49.151] |  :  .  |  :  .  |  :  .  |  :  Worker is functional
[10:54:49.152] |  :  .  |  :  .  |  :  .  |  requestNode() ... done
[10:54:49.152] |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:54:49.152] |  :  .  |  :  .  |  :  .  requestWorker() ... done
[10:54:49.152] |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:54:49.152] |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:54:49.153] |  :  .  |  :  .  |  :  .  launchFuture() ...
[10:54:49.153] |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:54:49.153] |  :  .  |  :  .  |  :  .  |  getFutureData() ...
[10:54:49.153] |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ...
[10:54:49.153] |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘utils’
[10:54:49.153] |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:54:49.153] |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:54:49.153] |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:54:49.153] |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ...
[10:54:49.154] |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:49.154] |  :  .  |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:54:49.154] |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:49.154] |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:54:49.154] |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:54:49.154] |  :  .  |  :  .  |  :  .  |  getFutureData() ... done
[10:54:49.154] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'add', earlySignal = 0) ...
[10:54:49.155] |  :  .  |  :  .  |  :  .  |  :  Appended future to position #1
[10:54:49.155] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:54:49.155] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'add', earlySignal = 0) ... done
[10:54:49.155] |  :  .  |  :  .  |  :  .  launchFuture() ... done
[10:54:49.155] |  :  .  |  :  .  |  :  .  MultisessionFuture started
[10:54:49.155] |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:54:49.155] |  :  .  |  :  .  |  Launching futures ... done
[10:54:49.155] |  :  .  |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:54:49.155] |  :  .  |  :  .  Using MultisessionFutureBackend ... done
[10:54:49.156] |  :  .  |  :  run() for Future (‘MultisessionFuture’) ... done
[10:54:49.156] |  :  .  |  :  result() for ClusterFuture ...
[10:54:49.156] |  :  .  |  :  .  assertValidConnection() ...
[10:54:49.156] |  :  .  |  :  .  |  cluster node index: 1
[10:54:49.156] |  :  .  |  :  .  assertValidConnection() ... done
[10:54:49.157] |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:54:49.157] |  :  .  |  :  .  |  cluster node index: 1
[10:54:49.199] |  :  .  |  :  .  |  [1] TRUE
[10:54:49.199] |  :  .  |  :  .  |  received data:
[10:54:49.199] |  :  .  |  :  .  |  List of 5
[10:54:49.199] |  :  .  |  :  .  |   $ type   : chr "VALUE"
[10:54:49.199] |  :  .  |  :  .  |   $ value  :List of 13
[10:54:49.199] |  :  .  |  :  .  |    ..$ value            : int 42
[10:54:49.199] |  :  .  |  :  .  |    ..$ visible          : logi TRUE
[10:54:49.199] |  :  .  |  :  .  |    ..$ stdout           : NULL
[10:54:49.199] |  :  .  |  :  .  |    ..$ conditions       : list()
[10:54:49.199] |  :  .  |  :  .  |    ..$ rng              : logi FALSE
[10:54:49.199] |  :  .  |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:54:49.199] |  :  .  |  :  .  |    ..$ misuseConnections:List of 3
[10:54:49.199] |  :  .  |  :  .  |    .. ..$ added   : NULL
[10:54:49.199] |  :  .  |  :  .  |    .. ..$ removed : NULL
[10:54:49.199] |  :  .  |  :  .  |    .. ..$ replaced: NULL
[10:54:49.199] |  :  .  |  :  .  |    ..$ misuseDevices    : NULL
[10:54:49.199] |  :  .  |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:54:49"
[10:54:49.199] |  :  .  |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:54:49"
[10:54:49.199] |  :  .  |  :  .  |    ..$ session_uuid     : chr "115e8eb4495d950a32de78e54af907a3"
[10:54:49.199] |  :  .  |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:54:49.199] |  :  .  |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:54:49.199] |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:54:49.199] |  :  .  |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:54:49.199] |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:54:49.199] |  :  .  |  :  .  |    .. .. ..$ pid   : int 76618
[10:54:49.199] |  :  .  |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:54:48"
[10:54:49.199] |  :  .  |  :  .  |    .. .. ..$ random: int 2147483647
[10:54:49.199] |  :  .  |  :  .  |    ..$ r_info           :List of 4
[10:54:49.199] |  :  .  |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:54:49.199] |  :  .  |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:54:49.199] |  :  .  |  :  .  |    .. ..$ os           : chr "unix"
[10:54:49.199] |  :  .  |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:54:49.199] |  :  .  |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:54:49.199] |  :  .  |  :  .  |    ..$ version          : chr "1.8"
[10:54:49.199] |  :  .  |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:54:49.199] |  :  .  |  :  .  |   $ success: logi TRUE
[10:54:49.199] |  :  .  |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[10:54:49.199] |  :  .  |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:54:49.199] |  :  .  |  :  .  |   $ tag    : NULL
[10:54:49.210] |  :  .  |  :  .  |  Received FutureResult
[10:54:49.210] |  :  .  |  :  .  |  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'remove', earlySignal = 0) ...
[10:54:49.210] |  :  .  |  :  .  |  :  Removed future from position #1
[10:54:49.210] |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:54:49.210] |  :  .  |  :  .  |  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'remove', earlySignal = 0) ... done
[10:54:49.210] |  :  .  |  :  .  |  Erased future from future backend
[10:54:49.211] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:54:49.211] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:54:49.211] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:54:49.211] |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:54:49.211] |  :  .  |  :  result() for ClusterFuture ... done
[10:54:49.211] |  :  .  |  :  result() for ClusterFuture ...
[10:54:49.211] |  :  .  |  :  .  result already collected: FutureResult
[10:54:49.211] |  :  .  |  :  result() for ClusterFuture ... done
- stdout = structure(TRUE, drop = TRUE)
[10:54:49.211] |  :  .  |  :  getGlobalsAndPackages() ...
[10:54:49.212] |  :  .  |  :  .  Searching for globals ...
[10:54:49.212] |  :  .  |  :  .  |  globals found: [1] ‘print’
[10:54:49.212] |  :  .  |  :  .  Searching for globals ... DONE
[10:54:49.212] |  :  .  |  :  .  Resolving globals: FALSE
[10:54:49.213] |  :  .  |  :  .  Search for packages associated with the globals ...
[10:54:49.213] |  :  .  |  :  .  |  Packages associated with globals: [1] ‘base’
[10:54:49.213] |  :  .  |  :  .  |  Packages: [1] ‘base’
[10:54:49.213] |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:54:49.213] |  :  .  |  :  .  Packages after dropping 'base': [0] 
[10:54:49.213] |  :  .  |  :  .  globals: [0] 
[10:54:49.213] |  :  .  |  :  .  packages: [0] 
[10:54:49.213] |  :  .  |  :  getGlobalsAndPackages() ... done
[10:54:49.214] |  :  .  |  :  run() for Future (‘Future’) ...
[10:54:49.214] |  :  .  |  :  .  state: ‘created’
[10:54:49.214] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:49.214] |  :  .  |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:49.214] |  :  .  |  :  .  Using MultisessionFutureBackend ...
[10:54:49.214] |  :  .  |  :  .  |  Launching futures ...
[10:54:49.214] |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:54:49.215] |  :  .  |  :  .  |  :  .  Workers: [n=2]
[10:54:49.215] |  :  .  |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:54:49.216] |  :  .  |  :  .  |  :  .  FutureRegistry: ‘workers-1712d4df2ea24347c107638ba49b99e9’
[10:54:49.216] |  :  .  |  :  .  |  :  .  requestWorker() ...
[10:54:49.216] |  :  .  |  :  .  |  :  .  |  requestNode() ...
[10:54:49.217] |  :  .  |  :  .  |  :  .  |  :  Number of workers: 2
[10:54:49.217] |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:54:49.217] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ...
[10:54:49.217] |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:54:49.217] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:54:49.217] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ... done
[10:54:49.217] |  :  .  |  :  .  |  :  .  |  :  .  Total time: 0
[10:54:49.217] |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:54:49.217] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ...
[10:54:49.217] |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:54:49.217] |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:54:49.218] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ... done
[10:54:49.218] |  :  .  |  :  .  |  :  .  |  :  Index of first available worker: 1
[10:54:49.218] |  :  .  |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:54:49.296] |  :  .  |  :  .  |  :  .  |  :  .  Worker is functional
[10:54:49.296] |  :  .  |  :  .  |  :  .  |  :  requestNode() ... done
[10:54:49.297] |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:54:49.297] |  :  .  |  :  .  |  :  .  |  requestWorker() ... done
[10:54:49.297] |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:54:49.297] |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:54:49.298] |  :  .  |  :  .  |  :  .  |  launchFuture() ...
[10:54:49.298] |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:54:49.298] |  :  .  |  :  .  |  :  .  |  :  getFutureData() ...
[10:54:49.298] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:54:49.298] |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:54:49.298] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:54:49.298] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:54:49.298] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:54:49.298] |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:54:49.298] |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:49.299] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:54:49.299] |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:49.299] |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:54:49.299] |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:54:49.299] |  :  .  |  :  .  |  :  .  |  :  getFutureData() ... done
[10:54:49.299] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'add', earlySignal = 0) ...
[10:54:49.299] |  :  .  |  :  .  |  :  .  |  :  .  Appended future to position #1
[10:54:49.300] |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:54:49.300] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'add', earlySignal = 0) ... done
[10:54:49.300] |  :  .  |  :  .  |  :  .  |  launchFuture() ... done
[10:54:49.300] |  :  .  |  :  .  |  :  .  |  MultisessionFuture started
[10:54:49.300] |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:54:49.300] |  :  .  |  :  .  |  :  Launching futures ... done
[10:54:49.300] |  :  .  |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:54:49.300] |  :  .  |  :  .  |  Using MultisessionFutureBackend ... done
[10:54:49.300] |  :  .  |  :  .  run() for Future (‘MultisessionFuture’) ... done
[10:54:49.300] |  :  .  |  :  .  result() for ClusterFuture ...
[10:54:49.301] |  :  .  |  :  .  |  assertValidConnection() ...
[10:54:49.301] |  :  .  |  :  .  |  :  cluster node index: 1
[10:54:49.301] |  :  .  |  :  .  |  assertValidConnection() ... done
[10:54:49.301] |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:54:49.301] |  :  .  |  :  .  |  :  cluster node index: 1
[10:54:49.343] |  :  .  |  :  .  |  :  [1] TRUE
[10:54:49.344] |  :  .  |  :  .  |  :  received data:
[10:54:49.344] |  :  .  |  :  .  |  :  List of 5
[10:54:49.344] |  :  .  |  :  .  |  :   $ type   : chr "VALUE"
[10:54:49.344] |  :  .  |  :  .  |  :   $ value  :List of 13
[10:54:49.344] |  :  .  |  :  .  |  :    ..$ value            : num 42
[10:54:49.344] |  :  .  |  :  .  |  :    ..$ visible          : logi FALSE
[10:54:49.344] |  :  .  |  :  .  |  :    ..$ stdout           : chr "[1] 42\n"
[10:54:49.344] |  :  .  |  :  .  |  :    ..$ conditions       : list()
[10:54:49.344] |  :  .  |  :  .  |  :    ..$ rng              : logi FALSE
[10:54:49.344] |  :  .  |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:54:49.344] |  :  .  |  :  .  |  :    ..$ misuseConnections:List of 3
[10:54:49.344] |  :  .  |  :  .  |  :    .. ..$ added   : NULL
[10:54:49.344] |  :  .  |  :  .  |  :    .. ..$ removed : NULL
[10:54:49.344] |  :  .  |  :  .  |  :    .. ..$ replaced: NULL
[10:54:49.344] |  :  .  |  :  .  |  :    ..$ misuseDevices    : NULL
[10:54:49.344] |  :  .  |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:54:49"
[10:54:49.344] |  :  .  |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:54:49"
[10:54:49.344] |  :  .  |  :  .  |  :    ..$ session_uuid     : chr "115e8eb4495d950a32de78e54af907a3"
[10:54:49.344] |  :  .  |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:54:49.344] |  :  .  |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:54:49.344] |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:54:49.344] |  :  .  |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:54:49.344] |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:54:49.344] |  :  .  |  :  .  |  :    .. .. ..$ pid   : int 76618
[10:54:49.344] |  :  .  |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:54:48"
[10:54:49.344] |  :  .  |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:54:49.344] |  :  .  |  :  .  |  :    ..$ r_info           :List of 4
[10:54:49.344] |  :  .  |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:54:49.344] |  :  .  |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:54:49.344] |  :  .  |  :  .  |  :    .. ..$ os           : chr "unix"
[10:54:49.344] |  :  .  |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:54:49.344] |  :  .  |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:54:49.344] |  :  .  |  :  .  |  :    ..$ version          : chr "1.8"
[10:54:49.344] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:54:49.344] |  :  .  |  :  .  |  :   $ success: logi TRUE
[10:54:49.344] |  :  .  |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.004 0 0.003 0 0
[10:54:49.344] |  :  .  |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:54:49.344] |  :  .  |  :  .  |  :   $ tag    : NULL
[10:54:49.354] |  :  .  |  :  .  |  :  Received FutureResult
[10:54:49.354] |  :  .  |  :  .  |  :  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'remove', earlySignal = 0) ...
[10:54:49.355] |  :  .  |  :  .  |  :  .  Removed future from position #1
[10:54:49.355] |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:54:49.355] |  :  .  |  :  .  |  :  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'remove', earlySignal = 0) ... done
[10:54:49.355] |  :  .  |  :  .  |  :  Erased future from future backend
[10:54:49.355] |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:54:49.355] |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:54:49.355] |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:54:49.355] |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:54:49.355] |  :  .  |  :  .  result() for ClusterFuture ... done
[10:54:49.355] |  :  .  |  :  .  result() for ClusterFuture ...
[10:54:49.356] |  :  .  |  :  .  |  result already collected: FutureResult
[10:54:49.356] |  :  .  |  :  .  result() for ClusterFuture ... done
[10:54:49.356] |  :  .  |  :  .  result() for ClusterFuture ...
[10:54:49.356] |  :  .  |  :  .  |  result already collected: FutureResult
[10:54:49.356] |  :  .  |  :  .  result() for ClusterFuture ... done
[1] 42
[10:54:49.356] |  :  .  |  :  .  result() for ClusterFuture ...
[10:54:49.356] |  :  .  |  :  .  |  result already collected: FutureResult
[10:54:49.356] |  :  .  |  :  .  result() for ClusterFuture ... done
- stdout = NA
[10:54:49.356] |  :  .  |  :  .  getGlobalsAndPackages() ...
[10:54:49.357] |  :  .  |  :  .  |  Searching for globals ...
[10:54:49.361] |  :  .  |  :  .  |  :  globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[10:54:49.362] |  :  .  |  :  .  |  Searching for globals ... DONE
[10:54:49.362] |  :  .  |  :  .  |  Resolving globals: FALSE
[10:54:49.362] |  :  .  |  :  .  |  Search for packages associated with the globals ...
[10:54:49.362] |  :  .  |  :  .  |  :  Packages associated with globals: [2] ‘base’, ‘utils’
[10:54:49.362] |  :  .  |  :  .  |  :  Packages: [2] ‘base’, ‘utils’
[10:54:49.362] |  :  .  |  :  .  |  Search for packages associated with the globals ... DONE
[10:54:49.363] |  :  .  |  :  .  |  Packages after dropping 'base': [1] ‘utils’
[10:54:49.363] |  :  .  |  :  .  |  Packages after dropping non-attached packages: [1] ‘utils’
[10:54:49.363] |  :  .  |  :  .  |  globals: [0] 
[10:54:49.363] |  :  .  |  :  .  |  packages: [1] ‘utils’
[10:54:49.363] |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:54:49.363] |  :  .  |  :  .  run() for Future (‘Future’) ...
[10:54:49.363] |  :  .  |  :  .  |  state: ‘created’
[10:54:49.364] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:49.364] |  :  .  |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:49.364] |  :  .  |  :  .  |  Using MultisessionFutureBackend ...
[10:54:49.364] |  :  .  |  :  .  |  :  Launching futures ...
[10:54:49.364] |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:54:49.364] |  :  .  |  :  .  |  :  .  |  Workers: [n=2]
[10:54:49.364] |  :  .  |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:54:49.366] |  :  .  |  :  .  |  :  .  |  FutureRegistry: ‘workers-1712d4df2ea24347c107638ba49b99e9’
[10:54:49.366] |  :  .  |  :  .  |  :  .  |  requestWorker() ...
[10:54:49.366] |  :  .  |  :  .  |  :  .  |  :  requestNode() ...
[10:54:49.366] |  :  .  |  :  .  |  :  .  |  :  .  Number of workers: 2
[10:54:49.366] |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ...
[10:54:49.366] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ...
[10:54:49.366] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:54:49.366] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:54:49.367] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ... done
[10:54:49.367] |  :  .  |  :  .  |  :  .  |  :  .  |  Total time: 0
[10:54:49.367] |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ... done
[10:54:49.367] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ...
[10:54:49.367] |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:54:49.367] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:54:49.367] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ... done
[10:54:49.367] |  :  .  |  :  .  |  :  .  |  :  .  Index of first available worker: 1
[10:54:49.367] |  :  .  |  :  .  |  :  .  |  :  .  Validate that the worker is functional ...
[10:54:49.448] |  :  .  |  :  .  |  :  .  |  :  .  |  Worker is functional
[10:54:49.449] |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ... done
[10:54:49.449] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:54:49.449] |  :  .  |  :  .  |  :  .  |  :  requestWorker() ... done
[10:54:49.449] |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ...
[10:54:49.449] |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:54:49.450] |  :  .  |  :  .  |  :  .  |  :  launchFuture() ...
[10:54:49.450] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:54:49.450] |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ...
[10:54:49.450] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ...
[10:54:49.450] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 1): ‘utils’
[10:54:49.450] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ... done
[10:54:49.450] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ...
[10:54:49.450] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ... done
[10:54:49.450] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ...
[10:54:49.450] |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:49.451] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:54:49.451] |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:49.451] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:54:49.451] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ... done
[10:54:49.451] |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ... done
[10:54:49.451] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'add', earlySignal = 0) ...
[10:54:49.452] |  :  .  |  :  .  |  :  .  |  :  .  |  Appended future to position #1
[10:54:49.452] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:54:49.452] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'add', earlySignal = 0) ... done
[10:54:49.452] |  :  .  |  :  .  |  :  .  |  :  launchFuture() ... done
[10:54:49.452] |  :  .  |  :  .  |  :  .  |  :  MultisessionFuture started
[10:54:49.452] |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:54:49.452] |  :  .  |  :  .  |  :  .  Launching futures ... done
[10:54:49.452] |  :  .  |  :  .  |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:54:49.452] |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ... done
[10:54:49.452] |  :  .  |  :  .  |  run() for Future (‘MultisessionFuture’) ... done
[10:54:49.453] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:54:49.453] |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:54:49.453] |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:54:49.453] |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:54:49.453] |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:54:49.453] |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:54:49.496] |  :  .  |  :  .  |  :  .  [1] TRUE
[10:54:49.497] |  :  .  |  :  .  |  :  .  received data:
[10:54:49.497] |  :  .  |  :  .  |  :  .  List of 5
[10:54:49.497] |  :  .  |  :  .  |  :  .   $ type   : chr "VALUE"
[10:54:49.497] |  :  .  |  :  .  |  :  .   $ value  :List of 13
[10:54:49.497] |  :  .  |  :  .  |  :  .    ..$ value            : int 42
[10:54:49.497] |  :  .  |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:54:49.497] |  :  .  |  :  .  |  :  .    ..$ stdout           : NULL
[10:54:49.497] |  :  .  |  :  .  |  :  .    ..$ conditions       : list()
[10:54:49.497] |  :  .  |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:54:49.497] |  :  .  |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:54:49.497] |  :  .  |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:54:49.497] |  :  .  |  :  .  |  :  .    .. ..$ added   : NULL
[10:54:49.497] |  :  .  |  :  .  |  :  .    .. ..$ removed : NULL
[10:54:49.497] |  :  .  |  :  .  |  :  .    .. ..$ replaced: NULL
[10:54:49.497] |  :  .  |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:54:49.497] |  :  .  |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:54:49"
[10:54:49.497] |  :  .  |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:54:49"
[10:54:49.497] |  :  .  |  :  .  |  :  .    ..$ session_uuid     : chr "115e8eb4495d950a32de78e54af907a3"
[10:54:49.497] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:54:49.497] |  :  .  |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:54:49.497] |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:54:49.497] |  :  .  |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:54:49.497] |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:54:49.497] |  :  .  |  :  .  |  :  .    .. .. ..$ pid   : int 76618
[10:54:49.497] |  :  .  |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:54:48"
[10:54:49.497] |  :  .  |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:54:49.497] |  :  .  |  :  .  |  :  .    ..$ r_info           :List of 4
[10:54:49.497] |  :  .  |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:54:49.497] |  :  .  |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:54:49.497] |  :  .  |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:54:49.497] |  :  .  |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:54:49.497] |  :  .  |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:54:49.497] |  :  .  |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:54:49.497] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:54:49.497] |  :  .  |  :  .  |  :  .   $ success: logi TRUE
[10:54:49.497] |  :  .  |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.003 0.001 0.004 0 0
[10:54:49.497] |  :  .  |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:54:49.497] |  :  .  |  :  .  |  :  .   $ tag    : NULL
[10:54:49.507] |  :  .  |  :  .  |  :  .  Received FutureResult
[10:54:49.507] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'remove', earlySignal = 0) ...
[10:54:49.508] |  :  .  |  :  .  |  :  .  |  Removed future from position #1
[10:54:49.508] |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:54:49.508] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'remove', earlySignal = 0) ... done
[10:54:49.508] |  :  .  |  :  .  |  :  .  Erased future from future backend
[10:54:49.508] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:54:49.508] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:54:49.508] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:54:49.508] |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:54:49.508] |  :  .  |  :  .  |  result() for ClusterFuture ... done
List of 13
 $ value            : int 42
 $ visible          : logi TRUE
 $ stdout           : NULL
 $ conditions       : list()
 $ rng              : logi FALSE
 $ misuseGlobalEnv  : NULL
 $ misuseConnections:List of 3
  ..$ added   : NULL
  ..$ removed : NULL
  ..$ replaced: NULL
 $ misuseDevices    : NULL
 $ started          : POSIXct[1:1], format: "2025-05-06 10:54:49"
 $ finished         : POSIXct[1:1], format: "2025-05-06 10:54:49"
 $ session_uuid     : chr "115e8eb4495d950a32de78e54af907a3"
  ..- attr(*, "source")=List of 5
  .. ..$ host  : Named chr "5995ac22cdae"
  .. .. ..- attr(*, "names")= chr "HOSTNAME"
  .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
  .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
  .. ..$ pid   : int 76618
  .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:54:48"
  .. ..$ random: int 2147483647
 $ r_info           :List of 4
  ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
  .. ..$ : int [1:3] 4 5 0
  ..$ os           : chr "unix"
  ..$ os_name      : chr "Linux"
  ..$ captures_utf8: logi TRUE
 $ version          : chr "1.8"
 - attr(*, "class")= chr "FutureResult"
[10:54:49.517] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:54:49.517] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:54:49.517] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:54:49.517] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:54:49.517] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:54:49.518] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:54:49.518] |  :  .  |  :  .  |  getGlobalsAndPackages() ...
[10:54:49.518] |  :  .  |  :  .  |  :  Searching for globals ...
[10:54:49.521] |  :  .  |  :  .  |  :  .  globals found: [9] ‘{’, ‘print’, ‘:’, ‘str’, ‘cat’, ‘letters’, ‘write.table’, ‘[’, ‘::’
[10:54:49.521] |  :  .  |  :  .  |  :  Searching for globals ... DONE
[10:54:49.521] |  :  .  |  :  .  |  :  Resolving globals: FALSE
[10:54:49.522] |  :  .  |  :  .  |  :  Search for packages associated with the globals ...
[10:54:49.522] |  :  .  |  :  .  |  :  .  Packages associated with globals: [2] ‘base’, ‘utils’
[10:54:49.522] |  :  .  |  :  .  |  :  .  Packages: [2] ‘base’, ‘utils’
[10:54:49.522] |  :  .  |  :  .  |  :  Search for packages associated with the globals ... DONE
[10:54:49.522] |  :  .  |  :  .  |  :  Packages after dropping 'base': [1] ‘utils’
[10:54:49.523] |  :  .  |  :  .  |  :  Packages after dropping non-attached packages: [1] ‘utils’
[10:54:49.523] |  :  .  |  :  .  |  :  globals: [0] 
[10:54:49.523] |  :  .  |  :  .  |  :  packages: [1] ‘utils’
[10:54:49.523] |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:54:49.523] |  :  .  |  :  .  |  run() for Future (‘Future’) ...
[10:54:49.523] |  :  .  |  :  .  |  :  state: ‘created’
[10:54:49.523] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:49.524] |  :  .  |  :  .  |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:49.524] |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ...
[10:54:49.524] |  :  .  |  :  .  |  :  .  Launching futures ...
[10:54:49.524] |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:54:49.524] |  :  .  |  :  .  |  :  .  |  :  Workers: [n=2]
[10:54:49.524] |  :  .  |  :  .  |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:54:49.526] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry: ‘workers-1712d4df2ea24347c107638ba49b99e9’
[10:54:49.526] |  :  .  |  :  .  |  :  .  |  :  requestWorker() ...
[10:54:49.526] |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ...
[10:54:49.526] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of workers: 2
[10:54:49.526] |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ...
[10:54:49.526] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ...
[10:54:49.526] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:54:49.526] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:54:49.526] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ... done
[10:54:49.527] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Total time: 0
[10:54:49.527] |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ... done
[10:54:49.527] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ...
[10:54:49.527] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:54:49.527] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:54:49.527] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ... done
[10:54:49.527] |  :  .  |  :  .  |  :  .  |  :  .  |  Index of first available worker: 1
[10:54:49.527] |  :  .  |  :  .  |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:54:49.568] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Worker is functional
[10:54:49.568] |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ... done
[10:54:49.568] |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:54:49.568] |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ... done
[10:54:49.568] |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:54:49.569] |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:54:49.569] |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ...
[10:54:49.569] |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:54:49.569] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ...
[10:54:49.569] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ...
[10:54:49.569] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘utils’
[10:54:49.569] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:54:49.569] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:54:49.570] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:54:49.570] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ...
[10:54:49.570] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:49.570] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:54:49.570] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:49.570] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:54:49.570] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:54:49.570] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ... done
[10:54:49.571] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'add', earlySignal = 0) ...
[10:54:49.571] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Appended future to position #1
[10:54:49.571] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:54:49.571] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'add', earlySignal = 0) ... done
[10:54:49.571] |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ... done
[10:54:49.571] |  :  .  |  :  .  |  :  .  |  :  .  MultisessionFuture started
[10:54:49.571] |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:54:49.571] |  :  .  |  :  .  |  :  .  |  Launching futures ... done
[10:54:49.571] |  :  .  |  :  .  |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:54:49.572] |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ... done
[10:54:49.572] |  :  .  |  :  .  |  :  run() for Future (‘MultisessionFuture’) ... done
[10:54:49.572] |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:54:49.572] |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:54:49.572] |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:54:49.573] |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:54:49.573] |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:54:49.573] |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:54:49.615] |  :  .  |  :  .  |  :  .  |  [1] TRUE
[10:54:49.615] |  :  .  |  :  .  |  :  .  |  received data:
[10:54:49.616] |  :  .  |  :  .  |  :  .  |  List of 5
[10:54:49.616] |  :  .  |  :  .  |  :  .  |   $ type   : chr "VALUE"
[10:54:49.616] |  :  .  |  :  .  |  :  .  |   $ value  :List of 13
[10:54:49.616] |  :  .  |  :  .  |  :  .  |    ..$ value            : int 42
[10:54:49.616] |  :  .  |  :  .  |  :  .  |    ..$ visible          : logi TRUE
[10:54:49.616] |  :  .  |  :  .  |  :  .  |    ..$ stdout           : NULL
[10:54:49.616] |  :  .  |  :  .  |  :  .  |    ..$ conditions       : list()
[10:54:49.616] |  :  .  |  :  .  |  :  .  |    ..$ rng              : logi FALSE
[10:54:49.616] |  :  .  |  :  .  |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:54:49.616] |  :  .  |  :  .  |  :  .  |    ..$ misuseConnections:List of 3
[10:54:49.616] |  :  .  |  :  .  |  :  .  |    .. ..$ added   : NULL
[10:54:49.616] |  :  .  |  :  .  |  :  .  |    .. ..$ removed : NULL
[10:54:49.616] |  :  .  |  :  .  |  :  .  |    .. ..$ replaced: NULL
[10:54:49.616] |  :  .  |  :  .  |  :  .  |    ..$ misuseDevices    : NULL
[10:54:49.616] |  :  .  |  :  .  |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:54:49"
[10:54:49.616] |  :  .  |  :  .  |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:54:49"
[10:54:49.616] |  :  .  |  :  .  |  :  .  |    ..$ session_uuid     : chr "115e8eb4495d950a32de78e54af907a3"
[10:54:49.616] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:54:49.616] |  :  .  |  :  .  |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:54:49.616] |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:54:49.616] |  :  .  |  :  .  |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:54:49.616] |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:54:49.616] |  :  .  |  :  .  |  :  .  |    .. .. ..$ pid   : int 76618
[10:54:49.616] |  :  .  |  :  .  |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:54:48"
[10:54:49.616] |  :  .  |  :  .  |  :  .  |    .. .. ..$ random: int 2147483647
[10:54:49.616] |  :  .  |  :  .  |  :  .  |    ..$ r_info           :List of 4
[10:54:49.616] |  :  .  |  :  .  |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:54:49.616] |  :  .  |  :  .  |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:54:49.616] |  :  .  |  :  .  |  :  .  |    .. ..$ os           : chr "unix"
[10:54:49.616] |  :  .  |  :  .  |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:54:49.616] |  :  .  |  :  .  |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:54:49.616] |  :  .  |  :  .  |  :  .  |    ..$ version          : chr "1.8"
[10:54:49.616] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:54:49.616] |  :  .  |  :  .  |  :  .  |   $ success: logi TRUE
[10:54:49.616] |  :  .  |  :  .  |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[10:54:49.616] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:54:49.616] |  :  .  |  :  .  |  :  .  |   $ tag    : NULL
[10:54:49.626] |  :  .  |  :  .  |  :  .  |  Received FutureResult
[10:54:49.626] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'remove', earlySignal = 0) ...
[10:54:49.626] |  :  .  |  :  .  |  :  .  |  :  Removed future from position #1
[10:54:49.626] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:54:49.626] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'remove', earlySignal = 0) ... done
[10:54:49.626] |  :  .  |  :  .  |  :  .  |  Erased future from future backend
[10:54:49.627] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:54:49.627] |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:54:49.627] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:54:49.627] |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:54:49.627] |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:54:49.627] |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:54:49.627] |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:54:49.627] |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
- stdout = structure(TRUE, drop = TRUE)
[10:54:49.628] |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
[10:54:49.628] |  :  .  |  :  .  |  :  .  Searching for globals ...
[10:54:49.628] |  :  .  |  :  .  |  :  .  |  globals found: [1] ‘print’
[10:54:49.628] |  :  .  |  :  .  |  :  .  Searching for globals ... DONE
[10:54:49.628] |  :  .  |  :  .  |  :  .  Resolving globals: FALSE
[10:54:49.629] |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ...
[10:54:49.629] |  :  .  |  :  .  |  :  .  |  Packages associated with globals: [1] ‘base’
[10:54:49.629] |  :  .  |  :  .  |  :  .  |  Packages: [1] ‘base’
[10:54:49.629] |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:54:49.629] |  :  .  |  :  .  |  :  .  Packages after dropping 'base': [0] 
[10:54:49.629] |  :  .  |  :  .  |  :  .  globals: [0] 
[10:54:49.629] |  :  .  |  :  .  |  :  .  packages: [0] 
[10:54:49.629] |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:54:49.630] |  :  .  |  :  .  |  :  run() for Future (‘Future’) ...
[10:54:49.630] |  :  .  |  :  .  |  :  .  state: ‘created’
[10:54:49.630] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:49.630] |  :  .  |  :  .  |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:49.630] |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ...
[10:54:49.630] |  :  .  |  :  .  |  :  .  |  Launching futures ...
[10:54:49.630] |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:54:49.631] |  :  .  |  :  .  |  :  .  |  :  .  Workers: [n=2]
[10:54:49.631] |  :  .  |  :  .  |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:54:49.634] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry: ‘workers-1712d4df2ea24347c107638ba49b99e9’
[10:54:49.634] |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ...
[10:54:49.634] |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ...
[10:54:49.634] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of workers: 2
[10:54:49.634] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:54:49.634] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ...
[10:54:49.634] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:54:49.634] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:54:49.635] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ... done
[10:54:49.635] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Total time: 0
[10:54:49.635] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:54:49.635] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ...
[10:54:49.635] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:54:49.635] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:54:49.635] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'list', earlySignal = 0) ... done
[10:54:49.635] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Index of first available worker: 1
[10:54:49.635] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:54:49.714] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Worker is functional
[10:54:49.715] |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ... done
[10:54:49.715] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:54:49.715] |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ... done
[10:54:49.715] |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:54:49.715] |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:54:49.716] |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ...
[10:54:49.716] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:54:49.716] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ...
[10:54:49.716] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:54:49.716] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:54:49.716] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:54:49.716] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:54:49.716] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:54:49.716] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:54:49.716] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:54:49.717] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:54:49.717] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:54:49.717] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:54:49.717] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:54:49.717] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ... done
[10:54:49.717] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'add', earlySignal = 0) ...
[10:54:49.718] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Appended future to position #1
[10:54:49.718] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:54:49.718] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'add', earlySignal = 0) ... done
[10:54:49.718] |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ... done
[10:54:49.718] |  :  .  |  :  .  |  :  .  |  :  .  |  MultisessionFuture started
[10:54:49.718] |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:54:49.718] |  :  .  |  :  .  |  :  .  |  :  Launching futures ... done
[10:54:49.718] |  :  .  |  :  .  |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:54:49.718] |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ... done
[10:54:49.718] |  :  .  |  :  .  |  :  .  run() for Future (‘MultisessionFuture’) ... done
[10:54:49.719] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:54:49.719] |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:54:49.719] |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:54:49.719] |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:54:49.719] |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:54:49.719] |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:54:49.791] |  :  .  |  :  .  |  :  .  |  :  [1] TRUE
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :  received data:
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :  List of 5
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :   $ type   : chr "VALUE"
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :   $ value  :List of 13
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :    ..$ value            : num 42
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :    ..$ visible          : logi FALSE
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :    ..$ stdout           : chr "[1] 42\n"
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :    ..$ conditions       : list()
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :    ..$ rng              : logi FALSE
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :    ..$ misuseConnections:List of 3
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :    .. ..$ added   : NULL
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :    .. ..$ removed : NULL
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :    .. ..$ replaced: NULL
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :    ..$ misuseDevices    : NULL
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:54:49"
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:54:49"
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :    ..$ session_uuid     : chr "115e8eb4495d950a32de78e54af907a3"
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ pid   : int 76618
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:54:48"
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :    ..$ r_info           :List of 4
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :    .. ..$ os           : chr "unix"
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :    ..$ version          : chr "1.8"
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :   $ success: logi TRUE
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.033 0 0.033 0 0
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:54:49.792] |  :  .  |  :  .  |  :  .  |  :   $ tag    : NULL
[10:54:49.803] |  :  .  |  :  .  |  :  .  |  :  Received FutureResult
[10:54:49.803] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'remove', earlySignal = 0) ...
[10:54:49.803] |  :  .  |  :  .  |  :  .  |  :  .  Removed future from position #1
[10:54:49.803] |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:54:49.803] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-1712d4df2ea24347c107638ba49b99e9', action = 'remove', earlySignal = 0) ... done
[10:54:49.803] |  :  .  |  :  .  |  :  .  |  :  Erased future from future backend
[10:54:49.803] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:54:49.803] |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:54:49.803] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:54:49.803] |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:54:49.804] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:54:49.804] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:54:49.804] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:54:49.804] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:54:49.804] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:54:49.804] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:54:49.804] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[1] 42
[10:54:49.804] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:54:49.804] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:54:49.805] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
multisession ... done
Testing with 2 cores ... done

> message("*** Standard output ... DONE")
*** Standard output ... DONE
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=1s, sys.self=0.1s, elapsed=3s, user.child=0.5s, sys.child=0.5s
Test ‘stdout’ ... success
> 
