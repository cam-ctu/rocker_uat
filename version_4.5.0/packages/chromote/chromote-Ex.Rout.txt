
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "chromote"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('chromote')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("ChromoteSession")
> ### * ChromoteSession
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: ChromoteSession
> ### Title: ChromoteSession class
> ### Aliases: ChromoteSession
> 
> ### ** Examples
> 
> 
> ## ------------------------------------------------
> ## Method `ChromoteSession$go_to`
> ## ------------------------------------------------
> 
> ## Not run: 
> ##D # Basic navigation
> ##D b$go_to("https://www.r-project.org")
> ##D 
> ##D # Navigation with delay
> ##D b$go_to("https://www.r-project.org", delay = 2)
> ##D 
> ##D # Asynchronous navigation
> ##D p <- b$go_to("https://www.r-project.org", wait_ = FALSE)
> ##D p$then(function(value) print("Navigation complete!"))
> ## End(Not run)
> 
> ## ------------------------------------------------
> ## Method `ChromoteSession$auto_events_enable_args`
> ## ------------------------------------------------
> 
> if (interactive()) {
+   b <- ChromoteSession$new(
+     auto_events_enable_args = list(
+       Fetch = list(handleAuthRequests = TRUE)
+     )
+   )
+ 
+   # Get current `Fetch.enable` args
+   b$auto_events_enable_args("Fetch")
+ 
+   # Update the `Fetch.enable` args
+   b$auto_events_enable_args("Fetch", handleAuthRequests = FALSE)
+ 
+   # Reset `Fetch.enable` args
+   b$auto_events_enable_args("Fetch", NULL)
+ }
> 
> 
> 
> 
> cleanEx()
> nameEx("chrome_versions_list")
> ### * chrome_versions_list
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: chrome_versions_list
> ### Title: List installed or available Chrome binary versions
> ### Aliases: chrome_versions_list
> 
> ### ** Examples
> 
> ## Don't show: 
> if (rlang::is_interactive()) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ chrome_versions_list()
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("chromote_info")
> ### * chromote_info
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: chromote_info
> ### Title: Show information about the chromote package and Chrome browser
> ### Aliases: chromote_info
> 
> ### ** Examples
> 
> chromote_info()
`google-chrome`, `chromium-browser` and `chrome` were not found. Try setting the `CHROMOTE_CHROME` environment variable to the executable of a Chromium-based browser, such as Google Chrome, Chromium or Brave or adding one of these executables to your PATH.
---- {chromote} ----
   System: x86_64-pc-linux-gnu
R version: R version 4.5.0 (2025-04-11)
 chromote: 0.5.1

---- Chrome ----
Path: !! Could not find Chrome, is it installed on this system?
      !! If yes, see `?find_chrome()` for help.
> 
> 
> 
> 
> cleanEx()
> nameEx("default_chrome_args")
> ### * default_chrome_args
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: default_chrome_args
> ### Title: Default Chrome arguments
> ### Aliases: default_chrome_args get_chrome_args set_chrome_args
> 
> ### ** Examples
> 
> old_chrome_args <- get_chrome_args()
> 
> # Disable the gpu and use of `/dev/shm`
> set_chrome_args(c("--disable-gpu", "--disable-dev-shm-usage"))
> 
> #... Make new `Chrome` or `ChromoteSession` instance
> 
> # Restore old defaults
> set_chrome_args(old_chrome_args)
> 
> 
> 
> cleanEx()
> nameEx("find_chrome")
> ### * find_chrome
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: find_chrome
> ### Title: Find path to Chrome or Chromium browser
> ### Aliases: find_chrome
> 
> ### ** Examples
> 
> find_chrome()
`google-chrome`, `chromium-browser` and `chrome` were not found. Try setting the `CHROMOTE_CHROME` environment variable to the executable of a Chromium-based browser, such as Google Chrome, Chromium or Brave or adding one of these executables to your PATH.
NULL
> 
> 
> 
> 
> cleanEx()
> nameEx("with_chrome_version")
> ### * with_chrome_version
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: with_chrome_version
> ### Title: Use a specific version of Chrome or related binaries
> ### Aliases: with_chrome_version local_chrome_version local_chromote_chrome
> ###   with_chromote_chrome
> 
> ### ** Examples
> 
> ## Don't show: 
> if (rlang::is_interactive()) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ # Use the latest version of Chrome
+ local_chrome_version()
+ 
+ # Use a specific version of chrome-headless-shell
+ local_chrome_version("114.0.5735.90", binary = "chrome-headless-shell")
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.237 0.021 0.282 0.009 0.011 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
