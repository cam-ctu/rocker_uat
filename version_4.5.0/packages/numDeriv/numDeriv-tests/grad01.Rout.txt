
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> if(!require("numDeriv"))stop("this test requires numDeriv.")
Loading required package: numDeriv
> 
> ###################################################################
> #  sin test. scalar valued function with scalar arg
> ###################################################################
> 
> print(g.anal  <-  cos(pi))
[1] -1
> 
> print(g.calcR <-  grad(sin, pi, method="Richardson"))
[1] -1
> cat("error: ", err <- max(abs(g.calcR - g.anal)),"\n")
error:  6.618484e-12 
> if(err > 1e-11) stop("grad01 test 1 FAILED") # 1e-13 with d=0.01
> 
> print(g.calcS <-   grad(sin, pi, method="simple"))
[1] -1
> cat("error: ", err <- max(abs(g.calcS - g.anal)),"\n")
error:  1.664556e-09 
> if(err > 1e-8) stop("grad01 test 2 FAILED")
> 
> 
> ###################################################################
> #  sin test. vector argument, scalar result
> ###################################################################
> 
> func2a <- function(x) sum(sin(x))
> 
> x <- (0:10)*2*pi/10
> print(g.anal  <- cos(x))
 [1]  1.000000  0.809017  0.309017 -0.309017 -0.809017 -1.000000 -0.809017
 [8] -0.309017  0.309017  0.809017  1.000000
> 
> print(g.calcR <- grad(func2a, x, method="Richardson"))
 [1]  1.000000  0.809017  0.309017 -0.309017 -0.809017 -1.000000 -0.809017
 [8] -0.309017  0.309017  0.809017  1.000000
> cat("error: ", err <- max(abs(g.calcR - g.anal)),"\n")
error:  7.698508e-12 
> if(err > 1e-10) stop("grad01 test 3 FAILED")
> 
> print(g.calcS <- grad(func2a, x, method="simple"))
 [1]  1.0000000  0.8089876  0.3089694 -0.3090645 -0.8090464 -1.0000000
 [7] -0.8089876 -0.3089694  0.3090645  0.8090464  1.0000000
> cat("error: ", err <- max(abs(g.calcS - g.anal)),"\n")
error:  4.755334e-05 
> if(err > 1e-4) stop("grad01 test 4 FAILED")
> 
> 
> ###################################################################
> #  sin test. vector argument, vector result
> ###################################################################
> 
> x <- (0:10)*2*pi/10
> print(g.anal <-  cos(x))
 [1]  1.000000  0.809017  0.309017 -0.309017 -0.809017 -1.000000 -0.809017
 [8] -0.309017  0.309017  0.809017  1.000000
> 
> print(g.calcR <-  grad(sin, x, method="Richardson"))
 [1]  1.000000  0.809017  0.309017 -0.309017 -0.809017 -1.000000 -0.809017
 [8] -0.309017  0.309017  0.809017  1.000000
> cat("error: ", err <- max(abs(g.calcR - g.anal)),"\n")
error:  7.698508e-12 
> if(err > 1e-10) stop("grad01 test 5 FAILED")# 1e-12 with d=0.01
> 
> print(g.calcS <-   grad(sin, x, method="simple"))
 [1]  1.0000000  0.8089876  0.3089694 -0.3090645 -0.8090464 -1.0000000
 [7] -0.8089876 -0.3089694  0.3090645  0.8090464  1.0000000
> cat("error: ", err <- max(abs(g.calcS - g.anal)),"\n")
error:  4.755334e-05 
> if(err > 1e-4) stop("grad01 test 6 FAILED")
> 
> 
> 
