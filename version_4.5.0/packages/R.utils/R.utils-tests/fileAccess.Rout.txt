
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("R.utils")
Loading required package: R.oo
Loading required package: R.methodsS3
R.methodsS3 v1.8.2 (2022-06-13 22:00:14 UTC) successfully loaded. See ?R.methodsS3 for help.
R.oo v1.27.1 (2025-05-02 21:00:05 UTC) successfully loaded. See ?R.oo for help.

Attaching package: ‘R.oo’

The following object is masked from ‘package:R.methodsS3’:

    throw

The following objects are masked from ‘package:methods’:

    getClasses, getMethods

The following objects are masked from ‘package:base’:

    attach, detach, load, save

R.utils v2.13.0 (2025-02-24 21:20:02 UTC) successfully loaded. See ?R.utils for help.

Attaching package: ‘R.utils’

The following object is masked from ‘package:utils’:

    timestamp

The following objects are masked from ‘package:base’:

    cat, commandArgs, getOption, isOpen, nullfile, parse, use, warnings

> 
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> # Current directory
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> path <- "."
> 
> # Test for existence
> print(fileAccess(path, mode=0))
[1] 0
> # Test for execute permission
> print(fileAccess(path, mode=1))
[1] 0
> # Test for write permission
> print(fileAccess(path, mode=2))
[1] 0
> # Test for read permission
> print(fileAccess(path, mode=4))
[1] 0
> 
> 
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> # A temporary file
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> pathname <- tempfile()
> cat(file=pathname, "Hello world!")
> 
> # Test for existence
> print(fileAccess(pathname, mode=0))
[1] 0
> # Test for execute permission
> print(fileAccess(pathname, mode=1))
[1] -1
> # Test for write permission
> print(fileAccess(pathname, mode=2))
[1] 0
> # Test for read permission
> print(fileAccess(pathname, mode=4))
[1] 0
> 
> file.remove(pathname)
[1] TRUE
> 
> 
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> # The 'base' package directory
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> path <- system.file(package="base")
> 
> # Test for existence
> print(fileAccess(path, mode=0))
[1] 0
> # Test for execute permission
> print(fileAccess(path, mode=1))
[1] 0
> # Test for write permission
> print(fileAccess(path, mode=2))
[1] 0
> # Test for read permission
> print(fileAccess(path, mode=4))
[1] 0
> 
> 
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> # The 'base' package DESCRIPTION file
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> pathname <- system.file("DESCRIPTION", package="base")
> 
> # Test for existence
> print(fileAccess(pathname, mode=0))
[1] 0
> # Test for execute permission
> print(fileAccess(pathname, mode=1))
[1] -1
> # Test for write permission
> print(fileAccess(pathname, mode=2))
[1] 0
> # Test for read permission
> print(fileAccess(pathname, mode=4))
[1] 0
> 
> 
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> # Assert that RNG state does not change (mode = 2)
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> ## Make sure .Random.seed exists
> dummy <- sample(1:10)
> 
> rng0 <- get(".Random.seed", envir = .GlobalEnv, inherits = FALSE)
> res <- fileAccess(tempdir(), mode=2)
> 
> rng1 <- get(".Random.seed", envir = .GlobalEnv, inherits = FALSE)
> stopifnot(identical(rng1, rng0))
> 
> 
