
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("R.utils")
Loading required package: R.oo
Loading required package: R.methodsS3
R.methodsS3 v1.8.2 (2022-06-13 22:00:14 UTC) successfully loaded. See ?R.methodsS3 for help.
R.oo v1.27.1 (2025-05-02 21:00:05 UTC) successfully loaded. See ?R.oo for help.

Attaching package: ‘R.oo’

The following object is masked from ‘package:R.methodsS3’:

    throw

The following objects are masked from ‘package:methods’:

    getClasses, getMethods

The following objects are masked from ‘package:base’:

    attach, detach, load, save

R.utils v2.13.0 (2025-02-24 21:20:02 UTC) successfully loaded. See ?R.utils for help.

Attaching package: ‘R.utils’

The following object is masked from ‘package:utils’:

    timestamp

The following objects are masked from ‘package:base’:

    cat, commandArgs, getOption, isOpen, nullfile, parse, use, warnings

> 
> ######################################################################
> # Parsed command-line arguments
> ######################################################################
> # Call:
> exprA <- "str(R.utils::cmdArgs(defaults=list(n=2L,a=2)))"
> exprB <- "str(R.utils::cmdArgs(defaults=list(n=3L,a=3)))"
> argsC <- c("Rscript", "-e", exprA, "--args", "-e", exprB, "-n", "1")
> print(argsC)
[1] "Rscript"                                       
[2] "-e"                                            
[3] "str(R.utils::cmdArgs(defaults=list(n=2L,a=2)))"
[4] "--args"                                        
[5] "-e"                                            
[6] "str(R.utils::cmdArgs(defaults=list(n=3L,a=3)))"
[7] "-n"                                            
[8] "1"                                             
> 
> # Truth:
> args0 <- list(e=exprB, n=1)
> 
> args <- cmdArgs(.args=argsC)
> str(args)
List of 2
 $ e: chr "str(R.utils::cmdArgs(defaults=list(n=3L,a=3)))"
 $ n: int 1
> stopifnot(all.equal(args, args0))
> 
> 
> # Truth:
> args0 <- list(x=3.14, e=exprB, n=1L)
> 
> args <- cmdArgs(defaults=list(n=0L, x=3.14), .args=argsC)
> str(args)
List of 3
 $ x: num 3.14
 $ e: chr "str(R.utils::cmdArgs(defaults=list(n=3L,a=3)))"
 $ n: int 1
> stopifnot(all.equal(args, args0))
> 
> 
> 
> # Truth:
> args0 <- list(K=50)
> 
> args <- cmdArgs(args=args0, .args=argsC)
> str(args)
List of 1
 $ K: num 50
> stopifnot(all.equal(args, args0))
> 
> 
> args <- cmdArgs(args=list())
> str(args)
 list()
> 
> args <- cmdArgs(args="*")
> str(args)
 Named list()
> 
> args <- cmdArgs(args=list("*", "*"))
> str(args)
 Named list()
> 
> args <- cmdArgs(args=list("*", a=3L, "*"))
> str(args)
 Named list()
> 
> args <- cmdArgs(args=args0, names="K")
> str(args)
List of 1
 $ K: num 50
> stopifnot(all.equal(args, args0["K"]))
> 
> 
> ## - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> ## Call function via command-line arguments
> ## - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> value <- cmdArgsCall("seq_len", args=list(length.out=5))
> print(value)
[1] 1 2 3 4 5
> 
