
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("R.utils")
Loading required package: R.oo
Loading required package: R.methodsS3
R.methodsS3 v1.8.2 (2022-06-13 22:00:14 UTC) successfully loaded. See ?R.methodsS3 for help.
R.oo v1.27.0 (2024-11-01 18:00:02 UTC) successfully loaded. See ?R.oo for help.

Attaching package: ‘R.oo’

The following object is masked from ‘package:R.methodsS3’:

    throw

The following objects are masked from ‘package:methods’:

    getClasses, getMethods

The following objects are masked from ‘package:base’:

    attach, detach, load, save

R.utils v2.13.0 (2025-02-24 21:20:02 UTC) successfully loaded. See ?R.utils for help.

Attaching package: ‘R.utils’

The following object is masked from ‘package:utils’:

    timestamp

The following objects are masked from ‘package:base’:

    cat, commandArgs, getOption, isOpen, nullfile, parse, use, warnings

> verbose <- Verbose(threshold=-1)
> 
> options(warn = 1L)
> 
> pathname <- tempfile("foo_", fileext = ".txt")
> pathname <- getAbsolutePath(pathname)
> cat(file=pathname, "Hello world!\n")
> 
> ## NOTE: Not all systems support creation of links, which is
> ## why we need to run the tests using tryCatch().
> 
> ## Try all methods at once
> link <- basename(pathname)
> tryCatch({
+   linkR <- createLink(link=link, target=pathname)
+   verbose && cat(verbose, "Link returned: ", linkR)
+   linkR <- normalizePath(linkR)
+   link <- normalizePath(link)
+   if (linkR != link) {
+     throw("Requested and returned link are not the same: ", sQuote(linkR), " != ", sQuote(link))
+   }
+ }, error = function(ex) {
+   verbose && cat(verbose, "Failed to create link: ", ex$message)
+ })
Link returned: foo_662f16ba3d16.txt
> 
> ## One method at the time
> methods <- c("unix-symlink", "windows-ntfs-symlink", "windows-shortcut")
> for (method in methods) {
+   verbose && enterf(verbose, "Method '%s'", method)
+   verbose && cat(verbose, "Target: ", pathname)
+   link <- sprintf("%s-to-%s", method, basename(pathname))
+   verbose && cat(verbose, "Link to create: ", link)
+   tryCatch({
+     linkR <- createLink(link=link, target=pathname, method=method)
+     verbose && cat(verbose, "Link returned: ", linkR)
+     linkR <- normalizePath(linkR)
+     link <- normalizePath(link)
+     if (linkR != link) {
+       throw("Requested and returned link are not the same: ", sQuote(linkR), " != ", sQuote(link))
+     }
+   }, error = function(ex) {
+     verbose && cat(verbose, "Failed to create link: ", ex$message)
+   })
+   verbose && exit(verbose)
+ }
Method 'unix-symlink'...
 Target: /tmp/RtmpctMwOq/foo_662f16ba3d16.txt
 Link to create: unix-symlink-to-foo_662f16ba3d16.txt
 Link returned: unix-symlink-to-foo_662f16ba3d16.txt
Method 'unix-symlink'...done
Method 'windows-ntfs-symlink'...
 Target: /tmp/RtmpctMwOq/foo_662f16ba3d16.txt
 Link to create: windows-ntfs-symlink-to-foo_662f16ba3d16.txt
 Failed to create link: Failed to create file link (because 'methods' was empty; current working directory: ‘/__w/rocker_uat/rocker_uat/packages/R.utils/R.utils-tests’): ‘windows-ntfs-symlink-to-foo_662f16ba3d16.txt’[.lnk] -> ‘/tmp/RtmpctMwOq/foo_662f16ba3d16.txt’
Method 'windows-ntfs-symlink'...done
Method 'windows-shortcut'...
 Target: /tmp/RtmpctMwOq/foo_662f16ba3d16.txt
 Link to create: windows-shortcut-to-foo_662f16ba3d16.txt
 Failed to create link: Failed to create file link (because 'methods' was empty; current working directory: ‘/__w/rocker_uat/rocker_uat/packages/R.utils/R.utils-tests’): ‘windows-shortcut-to-foo_662f16ba3d16.txt’[.lnk] -> ‘/tmp/RtmpctMwOq/foo_662f16ba3d16.txt’
Method 'windows-shortcut'...done
> 
> if (isFile(pathname)) file.remove(pathname)
[1] TRUE
> 
