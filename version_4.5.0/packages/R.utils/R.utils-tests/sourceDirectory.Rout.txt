
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("R.utils")
Loading required package: R.oo
Loading required package: R.methodsS3
R.methodsS3 v1.8.2 (2022-06-13 22:00:14 UTC) successfully loaded. See ?R.methodsS3 for help.
R.oo v1.27.0 (2024-11-01 18:00:02 UTC) successfully loaded. See ?R.oo for help.

Attaching package: ‘R.oo’

The following object is masked from ‘package:R.methodsS3’:

    throw

The following objects are masked from ‘package:methods’:

    getClasses, getMethods

The following objects are masked from ‘package:base’:

    attach, detach, load, save

R.utils v2.13.0 (2025-02-24 21:20:02 UTC) successfully loaded. See ?R.utils for help.

Attaching package: ‘R.utils’

The following object is masked from ‘package:utils’:

    timestamp

The following objects are masked from ‘package:base’:

    cat, commandArgs, getOption, isOpen, nullfile, parse, use, warnings

> 
> ## Create a test folder with R scripts
> path <- file.path(tempdir(), "R.utils")
> dir.create(path, recursive = TRUE, showWarnings = FALSE)
> 
> pathname <- file.path(path, "increment_x.R")
> cat(file = pathname, "x <- x + 1L\n")
> 
> x <- 0L
> 
> source(pathname)
> message("x = ", x)
x = 1
> stopifnot(x == 1L)
> 
> source(pathname)
> message("x = ", x)
x = 2
> stopifnot(x == 2L)
> 
> for (kk in 1:2) {
+   sourceTo(pathname, modifiedOnly = TRUE)
+   message("x = ", x)
+   stopifnot(x == 3L)
+ }
x = 3
x = 3
> 
> Sys.sleep(1)
> touchFile(pathname)
> 
> for (kk in 1:2) {
+   sourceTo(pathname, modifiedOnly = TRUE)
+   message("x = ", x)
+   stopifnot(x == 4L)
+ }
x = 4
x = 4
> 
> sourceTo(pathname, modifiedOnly = FALSE)
> message("x = ", x)
x = 5
> stopifnot(x == 5L)
> 
> for (kk in 1:2) {
+   sourceDirectory(path, modifiedOnly = TRUE)
+   message("x = ", x)
+   stopifnot(x == 5L)
+ }
x = 5
x = 5
> 
> sourceDirectory(path, modifiedOnly = FALSE)
> message("x = ", x)
x = 6
> stopifnot(x == 6L)
> 
> sourceDirectory(path, modifiedOnly = TRUE)
> message("x = ", x)
x = 6
> stopifnot(x == 6L)
> 
> Sys.sleep(1)
> touchFile(pathname)
> 
> for (kk in 1:2) {
+   sourceDirectory(path, modifiedOnly = TRUE)
+   message("x = ", x)
+   stopifnot(x == 7L)
+ }
x = 7
x = 7
> 
> 
> ## Cleanup
> #unlink(path, recursive = TRUE)
> 
