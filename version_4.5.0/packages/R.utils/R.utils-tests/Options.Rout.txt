
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("R.utils")
Loading required package: R.oo
Loading required package: R.methodsS3
R.methodsS3 v1.8.2 (2022-06-13 22:00:14 UTC) successfully loaded. See ?R.methodsS3 for help.
R.oo v1.27.1 (2025-05-02 21:00:05 UTC) successfully loaded. See ?R.oo for help.

Attaching package: ‘R.oo’

The following object is masked from ‘package:R.methodsS3’:

    throw

The following objects are masked from ‘package:methods’:

    getClasses, getMethods

The following objects are masked from ‘package:base’:

    attach, detach, load, save

R.utils v2.13.0 (2025-02-24 21:20:02 UTC) successfully loaded. See ?R.utils for help.

Attaching package: ‘R.utils’

The following object is masked from ‘package:utils’:

    timestamp

The following objects are masked from ‘package:base’:

    cat, commandArgs, getOption, isOpen, nullfile, parse, use, warnings

> 
> local <- Options()
> print(local)
[1] "Options: 0 options set."
> str(local)
Options:
 list()
> print(names(local))
NULL
> print(nbrOfOptions(local))
[1] 0
> print(getLeaves(local))
NULL
> 
> 
> # Query a missing option
> cex <- getOption(local, "graphics/cex")
> cat("graphics/cex =", cex, "\n")  # Returns NULL
graphics/cex = 
> 
> # Query a missing option with default value
> cex <- getOption(local, "graphics/cex", defaultValue=1)
> cat("graphics/cex =", cex, "\n")  # Returns NULL
graphics/cex = 1 
> 
> # Set option and get previous value
> oldCex <- setOption(local, "graphics/cex", 2)
> cat("previous graphics/cex =", oldCex, "\n")  # Returns NULL
previous graphics/cex = 
> 
> # Set option again and get previous value
> oldCex <- setOption(local, "graphics/cex", 3)
> cat("previous graphics/cex =", oldCex, "\n")  # Returns 2
previous graphics/cex = 2 
> 
> # Query a missing option with default value, which is ignored
> cex <- getOption(local, "graphics/cex", defaultValue=1)
> cat("graphics/cex =", cex, "\n")  # Returns 3
graphics/cex = 3 
> 
> # Query multiple options with multiple default values
> multi <- getOption(local, c("graphics/cex", "graphics/pch"), c(1,2))
> print(multi)
$`graphics/cex`
[1] 3

$`graphics/pch`
[1] 2

> 
> # Check existance of multiple options
> has <- hasOption(local, c("graphics/cex", "graphics/pch"))
> print(has)
graphics/cex graphics/pch 
        TRUE        FALSE 
> 
> # Get a subtree of options
> graphics <- getOption(local, "graphics")
> print(graphics)
$cex
[1] 3

> 
> # Get the complete tree of options
> all <- getOption(local)
> print(all)
$graphics
$graphics$cex
[1] 3


> 
