
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("R.utils")
Loading required package: R.oo
Loading required package: R.methodsS3
R.methodsS3 v1.8.2 (2022-06-13 22:00:14 UTC) successfully loaded. See ?R.methodsS3 for help.
R.oo v1.27.0 (2024-11-01 18:00:02 UTC) successfully loaded. See ?R.oo for help.

Attaching package: ‘R.oo’

The following object is masked from ‘package:R.methodsS3’:

    throw

The following objects are masked from ‘package:methods’:

    getClasses, getMethods

The following objects are masked from ‘package:base’:

    attach, detach, load, save

R.utils v2.13.0 (2025-02-24 21:20:02 UTC) successfully loaded. See ?R.utils for help.

Attaching package: ‘R.utils’

The following object is masked from ‘package:utils’:

    timestamp

The following objects are masked from ‘package:base’:

    cat, commandArgs, getOption, isOpen, nullfile, parse, use, warnings

> 
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> # Example using an array with a random number of dimensions
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> maxdim <- 4
> dim <- sample(3:maxdim, size=sample(2:maxdim, size=1), replace=TRUE)
> ndim <- length(dim)
> dimnames <- list()
> for (kk in 1:ndim)
+   dimnames[[kk]] <- sprintf("%s%d", letters[kk], 1:dim[kk])
> x <- 1:prod(dim)
> x <- array(x, dim=dim, dimnames=dimnames)
> 
> cat("\nArray 'x':\n")

Array 'x':
> print(x)
, , c1, d1

   b1 b2 b3
a1  1  5  9
a2  2  6 10
a3  3  7 11
a4  4  8 12

, , c2, d1

   b1 b2 b3
a1 13 17 21
a2 14 18 22
a3 15 19 23
a4 16 20 24

, , c3, d1

   b1 b2 b3
a1 25 29 33
a2 26 30 34
a3 27 31 35
a4 28 32 36

, , c1, d2

   b1 b2 b3
a1 37 41 45
a2 38 42 46
a3 39 43 47
a4 40 44 48

, , c2, d2

   b1 b2 b3
a1 49 53 57
a2 50 54 58
a3 51 55 59
a4 52 56 60

, , c3, d2

   b1 b2 b3
a1 61 65 69
a2 62 66 70
a3 63 67 71
a4 64 68 72

, , c1, d3

   b1 b2 b3
a1 73 77 81
a2 74 78 82
a3 75 79 83
a4 76 80 84

, , c2, d3

   b1 b2 b3
a1 85 89 93
a2 86 90 94
a3 87 91 95
a4 88 92 96

, , c3, d3

    b1  b2  b3
a1  97 101 105
a2  98 102 106
a3  99 103 107
a4 100 104 108

, , c1, d4

    b1  b2  b3
a1 109 113 117
a2 110 114 118
a3 111 115 119
a4 112 116 120

, , c2, d4

    b1  b2  b3
a1 121 125 129
a2 122 126 130
a3 123 127 131
a4 124 128 132

, , c3, d4

    b1  b2  b3
a1 133 137 141
a2 134 138 142
a3 135 139 143
a4 136 140 144

> 
> 
> cat("\nExtract 'x[2:3,...]':\n")

Extract 'x[2:3,...]':
> print(extract(x, "1"=2:3))
, , c1, d1

   b1 b2 b3
a2  2  6 10
a3  3  7 11

, , c2, d1

   b1 b2 b3
a2 14 18 22
a3 15 19 23

, , c3, d1

   b1 b2 b3
a2 26 30 34
a3 27 31 35

, , c1, d2

   b1 b2 b3
a2 38 42 46
a3 39 43 47

, , c2, d2

   b1 b2 b3
a2 50 54 58
a3 51 55 59

, , c3, d2

   b1 b2 b3
a2 62 66 70
a3 63 67 71

, , c1, d3

   b1 b2 b3
a2 74 78 82
a3 75 79 83

, , c2, d3

   b1 b2 b3
a2 86 90 94
a3 87 91 95

, , c3, d3

   b1  b2  b3
a2 98 102 106
a3 99 103 107

, , c1, d4

    b1  b2  b3
a2 110 114 118
a3 111 115 119

, , c2, d4

    b1  b2  b3
a2 122 126 130
a3 123 127 131

, , c3, d4

    b1  b2  b3
a2 134 138 142
a3 135 139 143

> 
> cat("\nExtract 'x[3,2:3,...]':\n")

Extract 'x[3,2:3,...]':
> print(extract(x, "1"=3,"2"=2:3))
, , c1, d1

   b2 b3
a3  7 11

, , c2, d1

   b2 b3
a3 19 23

, , c3, d1

   b2 b3
a3 31 35

, , c1, d2

   b2 b3
a3 43 47

, , c2, d2

   b2 b3
a3 55 59

, , c3, d2

   b2 b3
a3 67 71

, , c1, d3

   b2 b3
a3 79 83

, , c2, d3

   b2 b3
a3 91 95

, , c3, d3

    b2  b3
a3 103 107

, , c1, d4

    b2  b3
a3 115 119

, , c2, d4

    b2  b3
a3 127 131

, , c3, d4

    b2  b3
a3 139 143

> 
> cat("\nExtract 'x[...,2:3]':\n")

Extract 'x[...,2:3]':
> print(extract(x, indices=2:3, dims=length(dim(x))))
, , c1, d2

   b1 b2 b3
a1 37 41 45
a2 38 42 46
a3 39 43 47
a4 40 44 48

, , c2, d2

   b1 b2 b3
a1 49 53 57
a2 50 54 58
a3 51 55 59
a4 52 56 60

, , c3, d2

   b1 b2 b3
a1 61 65 69
a2 62 66 70
a3 63 67 71
a4 64 68 72

> 
> 
> 
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> # Assertions
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> y <- array(1:24, dim=c(2,3,4))
> yA <- y[,,2:3]
> yB <- extract(y, indices=list(2:3), dims=length(dim(y)))
> stopifnot(identical(yB, yA))
> 
> yA <- y[,2:3,2]
> yB <- extract(y, indices=list(2:3,2), dims=c(2,3), drop=TRUE)
> stopifnot(identical(yB, yA))
> 
> 
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> # Matrix
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> y <- matrix(1:24, nrow=6, ncol=4)
> yA <- y[,2:3]
> yB <- extract(y, indices=list(2:3), dims=length(dim(y)))
> stopifnot(identical(yB, yA))
> 
