
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # Dennis & Schnabel,1996,"Numerical methods for unconstrained optimization and nonlinear equations", SIAM
> # example 6.5.1 page 149
> 
> library(nleqslv)
> 
> dslnex <- function(x) {
+     y <- numeric(2)
+     y[1] <- x[1]^2 + x[2]^2 - 2
+     y[2] <- exp(x[1]-1) + x[2]^3 - 2
+     y
+ }
> 
> jacdsln <- function(x) {
+     n <- length(x)
+     Df <- matrix(numeric(n*n),n,n)
+     Df[1,1] <- 2*x[1]
+     Df[1,2] <- 2*x[2]
+     Df[2,1] <- exp(x[1]-1)
+     Df[2,2] <- 3*x[2]^2
+ 
+     Df
+ }
> 
> do.print.xf <- FALSE
> do.trace <- 0
> 
> print.result <- function(z) {
+     if( do.print.xf ) {
+         print(z$x)
+         print(z$fvec)
+     }
+     print(z$message)
+     print(all(abs(z$fvec)<=1e-8))
+ }
> 
> xstart <- c(2,.5)
> 
> z <- nleqslv(xstart,dslnex, jacobian=TRUE, control=list(trace=do.trace))
> print.result(z)
[1] "Function criterion near zero"
[1] TRUE
> all.equal(z$jac,jacdsln(z$x), tolerance=0.05)
[1] TRUE
> 
> z <- nleqslv(xstart,dslnex,jacdsln, jacobian=TRUE, control=list(trace=do.trace))
> print.result(z)
[1] "Function criterion near zero"
[1] TRUE
> all.equal(z$jac,jacdsln(z$x), tolerance=0.05)
[1] TRUE
> 
> z <- nleqslv(xstart,dslnex, method="Newton", jacobian=TRUE, control=list(trace=do.trace))
> print.result(z)
[1] "Function criterion near zero"
[1] TRUE
> all.equal(z$jac,jacdsln(z$x), tolerance=10^3*.Machine$double.eps^0.5)
[1] TRUE
> 
> z <- nleqslv(xstart,dslnex, jacdsln, method="Newton", jacobian=TRUE, control=list(trace=do.trace))
> print.result(z)
[1] "Function criterion near zero"
[1] TRUE
> identical(z$jac,jacdsln(z$x))
[1] TRUE
> 
