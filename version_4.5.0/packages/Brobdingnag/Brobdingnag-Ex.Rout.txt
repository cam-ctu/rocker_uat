
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "Brobdingnag"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('Brobdingnag')
Loading required package: Matrix

Attaching package: ‘Brobdingnag’

The following objects are masked from ‘package:Matrix’:

    diag, t

The following objects are masked from ‘package:base’:

    diag, t

> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("Arith")
> ### * Arith
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Arith-methods
> ### Title: Methods for Function Arith in package Brobdingnag
> ### Aliases: Arith-methods Arith,brob,missing-method Arith,brob,ANY-method
> ###   Arith,brob,brob-method Arith,brob,complex-method
> ###   Arith,ANY,brob-method Arith,ANY,glub-method Arith,glub,missing-method
> ###   Arith,glub,glub-method Arith,glub,ANY-method
> ###   Arith,glub,complex-method Arith,complex,brob-method
> ###   Arith,complex,glub-method Arith,brob,glub-method
> ###   Arith,glub,brob-method
> ### Keywords: methods math
> 
> ### ** Examples
> 
> x <- as.brob(1:10)
> y <- 1e10
> 
> x+y
 [1] +exp(23.026) +exp(23.026) +exp(23.026) +exp(23.026) +exp(23.026)
 [6] +exp(23.026) +exp(23.026) +exp(23.026) +exp(23.026) +exp(23.026)
> 
> as.numeric((x+y)-1e10)
 [1]  0.9999823  2.0000002  2.9999825  4.0000003  4.9999827  6.0000005
 [7]  6.9999828  8.0000007  8.9999830 10.0000008
> 
> x^(1/y)
 [1] +exp(0)          +exp(6.9315e-11) +exp(1.0986e-10) +exp(1.3863e-10)
 [5] +exp(1.6094e-10) +exp(1.7918e-10) +exp(1.9459e-10) +exp(2.0794e-10)
 [9] +exp(2.1972e-10) +exp(2.3026e-10)
> 
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("Brobdingnag-package")
> ### * Brobdingnag-package
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Brobdingnag-package
> ### Title: Very Large Numbers in R
> ### Aliases: Brobdingnag-package Brobdingnag
> ### Keywords: package
> 
> ### ** Examples
> 
> googol <- as.brob(10)^100
> 
> googol
[1] +exp(230.26)
> googol + googol/2
[1] +exp(230.66)
> 
> 1/(googol + 1e99)
[1] +exp(-230.35)
> 
> (1:10)^googol
 [1] +exp(0)           +exp(6.9315e+99)  +exp(1.0986e+100) +exp(1.3863e+100)
 [5] +exp(1.6094e+100) +exp(1.7918e+100) +exp(1.9459e+100) +exp(2.0794e+100)
 [9] +exp(2.1972e+100) +exp(2.3026e+100)
> 
> googolplex <- 10^googol
> 
> googolplex
[1] +exp(2.3026e+100)
> 
> googolplex * googol  # practically the same as googolplex (!)
[1] +exp(2.3026e+100)
> 
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("Compare")
> ### * Compare
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Compare-methods
> ### Title: Methods for Function Compare in Package Brobdingnag
> ### Aliases: Compare-methods Compare,brob,ANY-method
> ###   Compare,brob,brob-method Compare,brob,glub-method
> ###   Compare,ANY,brob-method Compare,ANY,glub-method
> ###   Compare,glub,glub-method Compare,glub,ANY-method
> ###   Compare,glub,brob-method
> ### Keywords: methods math
> 
> ### ** Examples
> 
>   a <- as.brob(10)^(0.5 + 97:103)
>   a < 1e100
[1]  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE
>   
> 
> 
> cleanEx()
> nameEx("Complex")
> ### * Complex
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Complex
> ### Title: Real and imaginary manipulation
> ### Aliases: Re Im Re<- Im<- Mod Mod,brob-method Mod,glub-method Conj
> ###   Conj,brob-method Conj,glub-method Arg Arg,brob-method Arg,glub-method
> ###   Re,brob-method Re,glub-method Im,brob-method Im,glub-method
> ###   Re<-,glub-method Im<-,brob-method Im<-,glub-method Complex-methods
> ###   Complex,glub-method Complex,brob-method
> ### Keywords: math
> 
> ### ** Examples
> 
> a <- cbrob(1:10,brob(1e100))
> Im(a) <- 11:1
> a
 [1] +exp(0)+exp(2.3979)i         +exp(0.69315)+exp(2.3026)i  
 [3] +exp(1.0986)+exp(2.1972)i    +exp(1.3863)+exp(2.0794)i   
 [5] +exp(1.6094)+exp(1.9459)i    +exp(1.7918)+exp(1.7918)i   
 [7] +exp(1.9459)+exp(1.6094)i    +exp(2.0794)+exp(1.3863)i   
 [9] +exp(2.1972)+exp(1.0986)i    +exp(2.3026)+exp(0.69315)i  
[11] +exp(1e+100)+exp(0)i        
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("Extract")
> ### * Extract
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Extract.brob
> ### Title: Extract or Replace Parts of brobs or glubs
> ### Aliases: [.brob [<-.brob [.glub [<-.glub [,brob-method [<-,brob-method
> ###   [,glub-method [<-,glub-method [,brob,ANY,ANY-method
> ###   [,glub,ANY,ANY-method [<-,brob,ANY,ANY-method [<-,glub,ANY,ANY-method
> ###   [,brob,ANY,ANY,ANY-method [,brobmat,ANY,ANY,ANY-method
> ###   [,brobmat,index,index,ANY-method [,brobmat,index,missing,ANY-method
> ###   [,brobmat,matrix,missing,ANY-method
> ###   [,brobmat,missing,index,ANY-method
> ###   [,brobmat,missing,missing,ANY-method [,glub,ANY,ANY,ANY-method
> ###   [<-,brob,ANY,ANY,ANY-method [<-,brobmat,index,index,ANY-method
> ###   [<-,brobmat,index,missing,ANY-method
> ###   [<-,brobmat,matrix,missing,ANY-method
> ###   [<-,brobmat,missing,index,ANY-method
> ###   [<-,brobmat,missing,missing,ANY-method [<-,glub,ANY,ANY,ANY-method
> ### Keywords: math
> 
> ### ** Examples
> 
> a <- as.brob(10)^c(-100,0,100,1000,1e32)
> 
> a[4]
[1] +exp(2302.6)
> 
> a[4] <- 1e100
> 
> a
[1] +exp(-230.26)    +exp(0)          +exp(230.26)     +exp(230.26)    
[5] +exp(2.3026e+32)
> 
> 
> 
> 
> cleanEx()
> nameEx("Logic")
> ### * Logic
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Logic
> ### Title: Logical operations on brobs
> ### Aliases: logic.brob Logic,swift,ANY-method Logic,ANY,swift-method
> ###   Logic,swift,swift-method
> ### Keywords: math
> 
> ### ** Examples
> 
> 
> ## Not run: 
> ##D !brob(10)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("Math")
> ### * Math
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Math
> ### Title: Various logarithmic and circular functions for brobs
> ### Aliases: abs log exp cosh sinh acos acosh asin asinh atan atanh cos sin
> ###   tan tanh cos sin tan tanh trunc lgamma cumsum gamma ceiling floor
> ###   sqrt sqrt,brob-method sqrt,glub-method Math,brob-method
> ###   Math,glub-method
> ### Keywords: math
> 
> ### ** Examples
> 
> exp(as.brob(3000))  #exp(3000) is represented with zero error
[1] +exp(3000)
> 
> 
> 
> cleanEx()
> nameEx("Print")
> ### * Print
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Print
> ### Title: Methods for printing brobs and glubs
> ### Aliases: print.brob print.glub show,brob-method show,glub-method
> ### Keywords: math
> 
> ### ** Examples
> 
> a <- as.brob(1:5)
> dput(a)
new("brob", x = c(0, 0.693147180559945, 1.09861228866811, 1.38629436111989, 
1.6094379124341), positive = c(TRUE, TRUE, TRUE, TRUE, TRUE))
> a
[1] +exp(0)       +exp(0.69315) +exp(1.0986)  +exp(1.3863)  +exp(1.6094) 
> 
> 
> 
> 
> cleanEx()
> nameEx("Summary")
> ### * Summary
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: sum
> ### Title: Various summary statistics for brobs and glubs
> ### Aliases: sum min max prod range Summary,brob-method Summary,glub-method
> ### Keywords: math
> 
> ### ** Examples
> 
> a <- as.brob(1:10)
> max(cbrob(1:10,brob(NA,FALSE)))
[1] +exp(2.3026)
> 
> 
> 
> cleanEx()
> nameEx("as.numeric")
> ### * as.numeric
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: as.numeric
> ### Title: Coerces to numeric or complex form
> ### Aliases: as.numeric as.complex as.numeric,brob-method
> ###   as.complex,brob-method as.numeric,glub-method as.complex,glub-method
> ###   coerce,brob,numeric-method coerce,brob,complex-method
> ###   coerce,glub,numeric-method coerce,glub,complex-method
> ### Keywords: math
> 
> ### ** Examples
> 
> a <- as.brob(1:10)
> a <- cbrob(a, as.brob(10)^1e26)
> a
 [1] +exp(0)          +exp(0.69315)    +exp(1.0986)     +exp(1.3863)    
 [5] +exp(1.6094)     +exp(1.7918)     +exp(1.9459)     +exp(2.0794)    
 [9] +exp(2.1972)     +exp(2.3026)     +exp(2.3026e+26)
> as.numeric(a)
 [1]   1   2   3   4   5   6   7   8   9  10 Inf
> 
> as.complex(10i + a)
 [1]   1+10i   2+10i   3+10i   4+10i   5+10i   6+10i   7+10i   8+10i   9+10i
[10]  10+10i Inf+10i
> 
> 
> 
> 
> cleanEx()
> nameEx("brob-class")
> ### * brob-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: brob-class
> ### Title: Class "brob"
> ### Aliases: brob-class .cPair,ANY,ANY-method .cPair,brob,brob-method
> ###   .cPair,brob,ANY-method .cPair,brob,complex-method
> ###   .cPair,ANY,brob-method .cPair,complex,brob-method getP,brob-method
> ###   getX,brob-method sign<-,brob-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> new("brob",x=5,positive=TRUE)  # not intended for the user
[1] +exp(5)
> 
> as.brob(5)  # Standard user-oriented idiom
[1] +exp(1.6094)
> 
> 
> 
> cleanEx()
> nameEx("brob")
> ### * brob
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: brob
> ### Title: Brobdingnagian numbers
> ### Aliases: brob as.brob is.brob
> ### Keywords: math
> 
> ### ** Examples
> 
> 
> googol <- as.brob(10)^100
> googolplex <- 10^googol
> 
> (googolplex/googol) / googolplex
[1] +exp(0)
> #  Thus googolplex/googol == googolplex (!)
> 
> 
> # use cbrob() instead of c() when Brobdingnagian numbers are involved:
> cbrob(4,exp(as.brob(1e55)))
[1] +exp(1.3863) +exp(1e+55) 
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("brobmat-arith")
> ### * brobmat-arith
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: brobmat.mult
> ### Title: Brobdingagian matrix arithmetic
> ### Aliases: brobmat.mult brobmat.add brobmat.mult brobmat.power
> ###   brobmat.inverse brobmat.greater brobmat.equal brobmat.compare
> ###   brobmat.arith brobmat_matrixprod getat
> 
> ### ** Examples
> 
> a <- brobmat(1:54,6,9)
> rownames(a) <- letters[1:6]
> a + 1e30
  [,1]         [,2]         [,3]         [,4]         [,5]         [,6]        
a +exp(69.078) +exp(69.078) +exp(69.078) +exp(69.078) +exp(69.078) +exp(69.078)
b +exp(69.078) +exp(69.078) +exp(69.078) +exp(69.078) +exp(69.078) +exp(69.078)
c +exp(69.078) +exp(69.078) +exp(69.078) +exp(69.078) +exp(69.078) +exp(69.078)
d +exp(69.078) +exp(69.078) +exp(69.078) +exp(69.078) +exp(69.078) +exp(69.078)
e +exp(69.078) +exp(69.078) +exp(69.078) +exp(69.078) +exp(69.078) +exp(69.078)
f +exp(69.078) +exp(69.078) +exp(69.078) +exp(69.078) +exp(69.078) +exp(69.078)
  [,7]         [,8]         [,9]        
a +exp(69.078) +exp(69.078) +exp(69.078)
b +exp(69.078) +exp(69.078) +exp(69.078)
c +exp(69.078) +exp(69.078) +exp(69.078)
d +exp(69.078) +exp(69.078) +exp(69.078)
e +exp(69.078) +exp(69.078) +exp(69.078)
f +exp(69.078) +exp(69.078) +exp(69.078)
> a-a
  [,1]       [,2]       [,3]       [,4]       [,5]       [,6]       [,7]      
a -exp(-Inf) -exp(-Inf) -exp(-Inf) -exp(-Inf) -exp(-Inf) -exp(-Inf) -exp(-Inf)
b -exp(-Inf) -exp(-Inf) -exp(-Inf) -exp(-Inf) -exp(-Inf) -exp(-Inf) -exp(-Inf)
c -exp(-Inf) -exp(-Inf) -exp(-Inf) -exp(-Inf) -exp(-Inf) -exp(-Inf) -exp(-Inf)
d -exp(-Inf) -exp(-Inf) -exp(-Inf) -exp(-Inf) -exp(-Inf) -exp(-Inf) -exp(-Inf)
e -exp(-Inf) -exp(-Inf) -exp(-Inf) -exp(-Inf) -exp(-Inf) -exp(-Inf) -exp(-Inf)
f -exp(-Inf) -exp(-Inf) -exp(-Inf) -exp(-Inf) -exp(-Inf) -exp(-Inf) -exp(-Inf)
  [,8]       [,9]      
a -exp(-Inf) -exp(-Inf)
b -exp(-Inf) -exp(-Inf)
c -exp(-Inf) -exp(-Inf)
d -exp(-Inf) -exp(-Inf)
e -exp(-Inf) -exp(-Inf)
f -exp(-Inf) -exp(-Inf)
> 
> b <- as.brobmat(matrix(rnorm(27),9,3))
> colnames(b) <- month.abb[1:3]
> 
> a %*% b
  [,1]         [,2]         [,3]        
a +exp(48.451) +exp(48.942) +exp(47.142)
b +exp(49.451) +exp(49.942) +exp(48.142)
c +exp(50.451) +exp(50.942) +exp(49.142)
d +exp(51.451) +exp(51.942) +exp(50.142)
e +exp(52.451) +exp(52.942) +exp(51.142)
f +exp(53.451) +exp(53.942) +exp(52.142)
> 
> 
> 
> 
> cleanEx()
> nameEx("brobmat-class")
> ### * brobmat-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: brobmat-class
> ### Title: Class '"brobmat"'
> ### Aliases: brobmat-class [,brobmat,ANY,ANY-method
> ###   [,brobmat,index,index-method [,brobmat,index,missing-method
> ###   [,brobmat,missing,index-method [,brobmat,missing,missing-method
> ###   [,brobmat,matrix,missing-method [<-,brobmat,index,index-method
> ###   [<-,brobmat,index,missing-method [<-,brobmat,missing,index-method
> ###   [<-,brobmat,matrix,missing-method [<-,brobmat,missing,missing-method
> ###   %*%,ANY,brobmat-method %*%,brobmat,ANY-method
> ###   %*%,brobmat,brobmat-method Arith,ANY,brobmat-method
> ###   Arith,brob,brobmat-method Arith,brobmat,ANY-method
> ###   Arith,brobmat,brob-method Arith,brobmat,brobmat-method
> ###   Arith,brobmat,missing-method as.matrix,brobmat-method
> ###   as.vector,brobmat-method coerce,brobmat,matrix-method
> ###   colnames,brobmat-method colnames<-,brobmat-method
> ###   Compare,ANY,brobmat-method Compare,brobmat,ANY-method
> ###   Compare,brobmat,brobmat-method diag,brobmat-method diag,ANY-method
> ###   dimnames,brobmat-method dimnames<-,brobmat-method
> ###   dimnames<-,brobmat,ANY-method getP,brobmat-method getP,ANY-method
> ###   getP,numeric-method getX,brobmat-method getX,ANY-method
> ###   getX,numeric-method length,brobmat-method Math,brobmat-method
> ###   ncol,brobmat-method nrow,brobmat-method rownames,brobmat-method
> ###   rownames<-,brobmat-method show,brobmat-method t,brobmat-method
> ###   t,ANY-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("brobmat")
Class "brobmat" [package "Brobdingnag"]

Slots:
                        
Name:         x positive
Class:   matrix  logical
> 
> 
> 
> cleanEx()
> nameEx("brobmat")
> ### * brobmat
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: brobmat
> ### Title: Brobdingnagian matrices
> ### Aliases: brobmat brobmat_to_brob as.brobmat t t.brobmat newbrobmat
> ###   as.brobmat is.brobmat print.brobmat diag
> 
> ### ** Examples
> 
> 
> brobmat(-10:19,5,6)
     [,1]      [,2]     [,3]    [,4]    [,5]     [,6]    
[1,] +exp(-10) +exp(-5) +exp(0) +exp(5) +exp(10) +exp(15)
[2,] +exp(-9)  +exp(-4) +exp(1) +exp(6) +exp(11) +exp(16)
[3,] +exp(-8)  +exp(-3) +exp(2) +exp(7) +exp(12) +exp(17)
[4,] +exp(-7)  +exp(-2) +exp(3) +exp(8) +exp(13) +exp(18)
[5,] +exp(-6)  +exp(-1) +exp(4) +exp(9) +exp(14) +exp(19)
> as.brobmat(matrix(-10:19,5,6))
     [,1]         [,2]          [,3]          [,4]         [,5]        
[1,] -exp(2.3026) -exp(1.6094)  +exp(-Inf)    +exp(1.6094) +exp(2.3026)
[2,] -exp(2.1972) -exp(1.3863)  +exp(0)       +exp(1.7918) +exp(2.3979)
[3,] -exp(2.0794) -exp(1.0986)  +exp(0.69315) +exp(1.9459) +exp(2.4849)
[4,] -exp(1.9459) -exp(0.69315) +exp(1.0986)  +exp(2.0794) +exp(2.5649)
[5,] -exp(1.7918) -exp(0)       +exp(1.3863)  +exp(2.1972) +exp(2.6391)
     [,6]        
[1,] +exp(2.7081)
[2,] +exp(2.7726)
[3,] +exp(2.8332)
[4,] +exp(2.8904)
[5,] +exp(2.9444)
> 
> 
> 
> 
> cleanEx()
> nameEx("cbrob")
> ### * cbrob
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cbrob
> ### Title: Combine Brobdingnagian vectors
> ### Aliases: cbrob cBrob
> ### Keywords: math
> 
> ### ** Examples
> 
> a <- as.brob(2)^1e-40
> cbrob(1:4,4:1,a)
[1] +exp(0)          +exp(0.69315)    +exp(1.0986)     +exp(1.3863)    
[5] +exp(1.3863)     +exp(1.0986)     +exp(0.69315)    +exp(0)         
[9] +exp(6.9315e-41)
> cbrob(1:4,a,1i)
[1] +exp(0)+exp(-Inf)i            +exp(0.69315)+exp(-Inf)i     
[3] +exp(1.0986)+exp(-Inf)i       +exp(1.3863)+exp(-Inf)i      
[5] +exp(6.9315e-41)+exp(-Inf)i   +exp(-Inf)+exp(0)i           
> 
> 
> 
> cleanEx()
> nameEx("getP")
> ### * getP
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: getP
> ### Title: Get and set methods for brob objects
> ### Aliases: getP getX sign<-
> ### Keywords: math
> 
> ### ** Examples
> 
> x <- as.brob(-10:10)
> sign(x) <- TRUE
> 
> 
> 
> cleanEx()
> nameEx("glub-class")
> ### * glub-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: glub-class
> ### Title: Class "glub"
> ### Aliases: glub-class .cPair,brob,glub-method .cPair,ANY,glub-method
> ###   .cPair,glub,glub-method .cPair,glub,ANY-method
> ###   .cPair,glub,brob-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> a <- as.brob(45)
> new("glub",real=a, imag=a)
[1] +exp(3.8067)+exp(3.8067)i  
> 
> as.brob(5+5i)   # standard R idiom; imaginary component discarded
Warning in as.brob(5 + (0+5i)) : imaginary parts discarded
[1] +exp(1.6094)
> as.glub(5+5i)   # returns a Glubbdubdribian object
[1] +exp(1.6094)+exp(1.6094)i  
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("glub")
> ### * glub
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: glub
> ### Title: Glubbdubdribian numbers: complex numbers with Brobdingnagian
> ###   real and imaginary parts
> ### Aliases: glub as.glub is.glub
> ### Keywords: math
> 
> ### ** Examples
> 
> a <- as.glub(1:10 + 5i)
> a^2 - a*a
 [1] +exp(-32.172)-exp(-31.662)i   +exp(-Inf)-exp(-Inf)i        
 [3] +exp(-32.578)-exp(-Inf)i      +exp(-31.767)+exp(-31.662)i  
 [5] +exp(-33.42)-exp(-31.438)i    +exp(-32.259)-exp(-Inf)i     
 [7] -exp(-Inf)-exp(-Inf)i         +exp(-31.687)-exp(-Inf)i     
 [9] +exp(-30.632)+exp(-30.158)i   -exp(-30.34)-exp(-30.052)i   
> 
> f <- function(x){sin(x) +x^4 - 1/x}
> as.complex(f(a)) - f(as.complex(a))   # should be zero (in the first
 [1]  1.136868e-13+1.705303e-13i -8.526513e-14-7.958079e-13i
 [3] -6.821210e-13-1.364242e-12i  2.046363e-12+2.046363e-12i
 [5] -4.547474e-13+3.090861e-13i  2.728484e-12-1.591616e-12i
 [7]  1.182343e-11-7.275958e-12i -9.094947e-12+1.455192e-11i
 [9]  9.094947e-13+1.818989e-12i -8.185452e-12-1.455192e-11i
>                                       # term, f() works with glubs and coerces to
>                                       # complex; in the second, f()
>                                       # works with complex numbers directly)
> 
> 
> 
> cleanEx()
> nameEx("index-class")
> ### * index-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: index-class
> ### Title: Class '"index"'
> ### Aliases: index-class
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("index")
Virtual Class "index" [package "Matrix"]

No Slots, prototype of class "logical"

Known Subclasses: 
Class "logical", directly
Class "numeric", directly
Class "character", directly
Class "integer", by class "numeric", distance 2
Class "double", by class "numeric", distance 2
Class "signature", by class "character", distance 2
Class "className", by class "character", distance 2
Class "ObjectsWithPackage", by class "character", distance 2
Class "factor", by class "numeric", distance 3
Class "ordered", by class "numeric", distance 4
> 
> 
> 
> cleanEx()
> nameEx("infinite")
> ### * infinite
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: infinite-methods
> ### Title: Infinite brobs and glubs
> ### Aliases: infinite is.infinite is.infinite,brob-method
> ###   is.infinite,glub-method is.infinite,brob-method
> ###   is.infinite,glub-method finite is.finite is.finite,brob-method
> ###   is.finite,glub-method is.finite,brob-method is.finite,glub-method
> ### Keywords: math methods
> 
> ### ** Examples
> 
> 
> is.infinite(brob(c(1,4,Inf)))
[1] FALSE FALSE  TRUE
> 
> is.infinite(glub(3,Inf))
[1] TRUE
> is.infinite(glub(Inf,3))
[1] TRUE
> 
> 
> is.infinite(exp(1e300))
[1] TRUE
> is.infinite(brob(1e300))
[1] FALSE
> # (Brobdingnagian infinity is bigger than regular infinity ;-)
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("length")
> ### * length
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: length-methods
> ### Title: Get lengths of brobs and glubs
> ### Aliases: length length,brob-method length,glub-method
> ###   length,brob-method length,glub-method
> ### Keywords: math methods
> 
> ### ** Examples
> 
> x <- as.brob(-10:10)
> length(x)
[1] 21
> 
> 
> 
> cleanEx()
> nameEx("plot")
> ### * plot
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: plot
> ### Title: Basic plotting of Brobs
> ### Aliases: plot plot,brob-method plot,brob,missing-method
> ###   plot,brob,ANY-method plot,ANY,brob-method plot,glub-method
> ###   plot,glub,missing-method plot,glub,ANY-method plot,ANY,glub-method
> ### Keywords: math
> 
> ### ** Examples
> 
> plot(as.brob(1:10))
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  1.04 0.077 1.115 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
